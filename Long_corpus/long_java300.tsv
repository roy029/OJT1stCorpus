text	label
"private static String simpleCompute(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(text.getBytes(""utf-8""), 0, text.length());sha1hash = md.digest();return convertToHex(sha1hash);}public static void main(String[] args) throws Exception {ClassPathXmlApplicationContext appContext = new ClassPathXmlApplicationContext(""camel/exec-context.xml"");CamelContext context = appContext.getBean(CamelContext.class);Exchange exchange = new DefaultExchange(context);List<String> arg = new ArrayList<String>();arg.add(""/home/sumit/derby.log"");arg.add(""helios:cameltesting/"");exchange.getIn().setHeader(ExecBinding.EXEC_COMMAND_ARGS, arg);Exchange res = context.createProducerTemplate().send(""direct:input"", exchange);ExecResult result = (ExecResult) res.getIn().getBody();System.out.println(result.getExitValue());System.out.println(result.getCommand());if (result.getStderr() != null) {IOUtils.copy(result.getStderr(), new FileOutputStream(new File(""/home/sumit/error.log"")));}if (result.getStdout() != null) {IOUtils.copy(result.getStdout(), new FileOutputStream(new File(""/home/sumit/out.log"")));}appContext.close();}public static String exchangeForSessionToken(String protocol, String domain, String onetimeUseToken, PrivateKey key) throws IOException, GeneralSecurityException, AuthenticationException {String sessionUrl = getSessionTokenUrl(protocol, domain);URL url = new URL(sessionUrl);HttpURLConnection httpConn = (HttpURLConnection) url.openConnection();String header = formAuthorizationHeader(onetimeUseToken, key, url, ""GET"");httpConn.setRequestProperty(""Authorization"", header);if (httpConn.getResponseCode() != HttpURLConnection.HTTP_OK) {throw new AuthenticationException(httpConn.getResponseCode() + "": "" + httpConn.getResponseMessage());}String body = IOUtils.toString(httpConn.getInputStream());Map parsedTokens = StringUtils.string2Map(body, ""\n"", ""="", true);parsedTokens = StringUtils.lowercaseKeys(parsedTokens);return (String) parsedTokens.get(""token"");}private static void processFile(String file) throws IOException {FileInputStream in = new FileInputStream(file);int read = 0;byte[] buf = new byte[2048];ByteArrayOutputStream bout = new ByteArrayOutputStream();while ((read = in.read(buf)) > 0) bout.write(buf, 0, read);in.close();String converted = bout.toString().replaceAll(""@project.name@"", projectNameS).replaceAll(""@base.package@"", basePackageS).replaceAll(""@base.dir@"", baseDir).replaceAll(""@webapp.dir@"", webAppDir).replaceAll(""path=\""target/classes\"""", ""path=\""src/main/webapp/WEB-INF/classes\"""");FileOutputStream out = new FileOutputStream(file);out.write(converted.getBytes());out.close();}private static void copyFile(String from, String to) throws IOException {FileReader in = new FileReader(from);FileWriter out = new FileWriter(to);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();}public void load(boolean isOrdered) throws ResourceInstantiationException {try {if (null == url) {throw new ResourceInstantiationException(""URL not specified (null)."");}BufferedReader listReader;listReader = new BomStrippingInputStreamReader((url).openStream(), encoding);String line;int linenr = 0;while (null != (line = listReader.readLine())) {linenr++;GazetteerNode node = null;try {node = new GazetteerNode(line, separator, isOrdered);} catch (Exception ex) {throw new GateRuntimeException(""Could not read gazetteer entry "" + linenr + "" from URL "" + getURL() + "": "" + ex.getMessage(), ex);}entries.add(new GazetteerNode(line, separator, isOrdered));}listReader.close();} catch (Exception x) {throw new ResourceInstantiationException(x.getClass() + "":"" + x.getMessage());}isModified = false;}public int executeBatch(String[] commands, String applicationid) throws Exception {Statement statement = null;int errors = 0;int commandCount = 0;Connection conn = null;try {conn = getConnection(applicationid);conn.setAutoCommit(false);statement = conn.createStatement();for (int i = 0; i < commands.length; i++) {String command = commands[i];if (command.trim().length() == 0) {continue;}commandCount++;try {log.info(""executing SQL: "" + command);int results = statement.executeUpdate(command);log.info(""After execution, "" + results + "" row(s) have been changed"");} catch (SQLException ex) {throw ex;}}conn.commit();log.info(""Executed "" + commandCount + "" SQL command(s) with "" + errors + "" error(s)"");} catch (SQLException ex) {if (conn != null) {conn.rollback();}throw ex;} catch (Exception e) {if (conn != null) {conn.rollback();}throw e;} finally {statement.close();}return errors;}public static String encripty(String toEncripty) {if (toEncripty != null) {try {synchronized (toEncripty) {java.security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");md.update(toEncripty.getBytes());byte[] hash = md.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < hash.length; i++) {if ((0xff & hash[i]) < 0x10) hexString.append(""0"" + Integer.toHexString((0xFF & hash[i]))); else hexString.append(Integer.toHexString(0xFF & hash[i]));}toEncripty = hexString.toString();}} catch (Exception e) {e.getMessage();}}return toEncripty;}private void getXMLData() {String result = null;URL url = null;URLConnection conn = null;BufferedReader rd = null;StringBuffer sb = new StringBuffer();String line;try {url = new URL(this.url);conn = url.openConnection();rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));while ((line = rd.readLine()) != null) {sb.append(line + ""\n"");}rd.close();result = sb.toString();} catch (MalformedURLException e) {log.error(""URL was malformed: {}"", url, e);} catch (IOException e) {log.error(""IOException thrown: {}"", url, e);}this.xmlString = result;}public String getRandomGUID() {MessageDigest md5 = null;String valueBeforeMD5 = """";String retValue = """";try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}StringBuffer sbValueBeforeMD5 = new StringBuffer();try {InetAddress id = InetAddress.getLocalHost();long time = System.currentTimeMillis();long rand = 0;rand = random.nextLong();sbValueBeforeMD5.append(id.toString());sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) {sb.append('0');}sb.append(Integer.toHexString(b));}retValue = sb.toString();} catch (UnknownHostException e) {System.out.println(""Error:"" + e);}return retValue;}"	5
"private Properties loadPropertiesFromURL(String propertiesURL, Properties defaultProperties) {Properties properties = new Properties(defaultProperties);URL url;try {url = new URL(propertiesURL);URLConnection urlConnection = url.openConnection();properties.load(urlConnection.getInputStream());} catch (MalformedURLException e) {System.out.println(""Error while loading url "" + propertiesURL + "" ("" + e.getClass().getName() + "")"");e.printStackTrace();} catch (IOException e) {System.out.println(""Error while loading url "" + propertiesURL + "" ("" + e.getClass().getName() + "")"");e.printStackTrace();}return properties;}public void run() {XmlFilesFilter filter = new XmlFilesFilter();String pathTemp = Settings.get(""vo_store.databaseMetaCollection"");String sectionName = pathTemp.substring(1, pathTemp.indexOf(""/"", 2));String templateName = VOAccess.getElementByName(settingsDB, ""TEMPLATE"", sectionName);String schemaName = VOAccess.getElementByName(settingsDB, ""SCHEMA"", sectionName);byte[] buf = new byte[1024];Hashtable templateElements = null;try {URL xmlTemplateUrl = new URL(httpURI + settingsDB + ""/"" + templateName);URL getDocPathsAndValuesXslUrl = new URL(httpURI + settingsDB + ""/"" + ""getDocPathsValuesAndDisplays.xsl"");org.w3c.dom.Document curTemplateXml = VOAccess.readDocument(xmlTemplateUrl);DOMResult templateResult = new DOMResult();InputStream tempInput = getDocPathsAndValuesXslUrl.openStream();javax.xml.transform.sax.SAXSource tempXslSource = new javax.xml.transform.sax.SAXSource(new org.xml.sax.InputSource(tempInput));Transformer trans = TransformerFactory.newInstance().newTransformer(tempXslSource);trans.setParameter(""schemaUrl"", httpURI + settingsDB + ""/"" + schemaName);trans.transform(new javax.xml.transform.dom.DOMSource(curTemplateXml), templateResult);tempInput.close();templateElements = VOAccess.displaysToHashtable(templateResult);((CollectionManagementService) CollectionsManager.getService(xmldbURI + rootDB, false, ""CollectionManager"")).createCollection(rootDB + pathTemp);} catch (Exception ex) {logger.error(""Error parsing input document"", ex);ex.printStackTrace();}while (true) {File[] fileList = sourceMetaFilesDir.listFiles(filter);for (int i = 0; i < Math.min(fileList.length, 500); i++) {File newFile = fileList[i];try {Document metaDoc = build.build(newFile);Element metaElm = metaDoc.getRootElement();String dataFileName = metaElm.getChildText(""Content""), previewFileName = metaElm.getChildText(""Preview"");String objId = VOAccess.getUniqueId();metaElm.getChild(""Content"").setText(""videostore?type=doc&objId="" + objId);metaElm.getChild(""Preview"").setText(""videostore?type=preview&objId="" + objId);boolean found = false;for (Iterator it = sourceDataFilesDirs.iterator(); it.hasNext() && !found; ) {String sourceDataFilesDir = (String) it.next();File dataInput = new File(sourceDataFilesDir + ""/"" + dataFileName);if (dataInput.exists()) {found = true;BufferedInputStream inp = new BufferedInputStream(new FileInputStream(dataInput));FileOutputStream outp = new FileOutputStream(new File(targetDataFilesDirs.get(curDirWriteTo) + ""/"" + objId + "".dat""));int read = inp.read(buf, 0, buf.length);while (read > 0) {outp.write(buf, 0, read);read = inp.read(buf, 0, buf.length);}inp.close();outp.flush();outp.close();dataInput = new File(sourceDataFilesDir + ""/"" + previewFileName);inp = new BufferedInputStream(new FileInputStream(dataInput));outp = new FileOutputStream(new File(targetDataFilesDirs.get(curDirWriteTo) + ""/"" + objId + "".jpg""));read = inp.read(buf, 0, buf.length);while (read > 0) {outp.write(buf, 0, read);read = inp.read(buf, 0, buf.length);}inp.close();outp.flush();outp.close();curDirWriteTo++;if (curDirWriteTo >= targetDataFilesDirs.size()) {curDirWriteTo = 0;}}}if (!found) {newFile.renameTo(new File(newFile.getAbsolutePath() + "".not_found""));} else {String title = getValueByPath((String) templateElements.get(""title""), metaDoc.getRootElement());String description = getValueByPath((String) templateElements.get(""description""), metaDoc.getRootElement());String onlink = """";if (null != templateElements.get(""onlink"")) {onlink = getValueByPath((String) templateElements.get(""onlink""), metaDoc.getRootElement());}String ncover = """";if (null != templateElements.get(""ncover"")) {ncover = getValueByPath((String) templateElements.get(""ncover""), metaDoc.getRootElement());}String wcover = """";if (null != templateElements.get(""wcover"")) {wcover = getValueByPath((String) templateElements.get(""wcover""), metaDoc.getRootElement());}String ecover = """";if (null != templateElements.get(""ecover"")) {ecover = getValueByPath((String) templateElements.get(""ecover""), metaDoc.getRootElement());}String scover = """";if (null != templateElements.get(""scover"")) {scover = getValueByPath((String) templateElements.get(""scover""), metaDoc.getRootElement());}String datefrom = """";if (null != templateElements.get(""datefrom"")) {datefrom = getValueByPath((String) templateElements.get(""datefrom""), metaDoc.getRootElement());}String dateto = """";if (null != templateElements.get(""dateto"")) {dateto = getValueByPath((String) templateElements.get(""dateto""), metaDoc.getRootElement());}String previewimg = """";if (null != templateElements.get(""previewimg"")) {previewimg = getValueByPath((String) templateElements.get(""previewimg""), metaDoc.getRootElement());}String discRestr = ""false"";String votingRestr = ""false"";datefrom = VOAccess.parseDate(datefrom, ""yyyy-MM-dd'T'HH:mm:ss"", VO.defaultTimeFormat.toPattern());dateto = VOAccess.parseDate(datefrom, ""yyyy-MM-dd'T'HH:mm:ss"", VO.defaultTimeFormat.toPattern());Hashtable discussionFields = new Hashtable();discussionFields.put(""OBJECT_ID"", objId);discussionFields.put(""AUTHOR_ID"", ""auto"");discussionFields.put(""AUTHOR_NAME"", ""auto"");discussionFields.put(""OBJECT_SECTION"", sectionName);discussionFields.put(""OBJECT_PATH"", pathTemp);discussionFields.put(""FILE_PATH"", """");discussionFields.put(""TITLE"", title);discussionFields.put(""DESCRIPTION"", description);discussionFields.put(""ONLINK"", onlink);discussionFields.put(""NCOVER"", ncover);discussionFields.put(""ECOVER"", ecover);discussionFields.put(""SCOVER"", scover);discussionFields.put(""WCOVER"", wcover);discussionFields.put(""PERIOD_START"", datefrom);discussionFields.put(""PERIOD_END"", dateto);discussionFields.put(""PREVIEW_IMG"", previewimg);discussionFields.put(""DISCUSSRESTRICTION"", discRestr);discussionFields.put(""VOTINGRESTRICTION"", votingRestr);VOAccess.createDiscussionFile(discussionFields);VOAccess.updateLastItem(objId, sectionName);Collection col = CollectionsManager.getCollection(rootDB + pathTemp, true);XMLResource document = (XMLResource) col.createResource(objId + "".xml"", XMLResource.RESOURCE_TYPE);document.setContent(outXml.outputString(metaElm));col.storeResource(document);Indexer.index(objId);newFile.delete();}} catch (Exception ex) {logger.error(""Error parsing input document"", ex);ex.printStackTrace();newFile.renameTo(new File(newFile.getAbsolutePath() + "".bad""));}}try {this.sleep(600000);} catch (InterruptedException ex1) {ex1.printStackTrace();}}}public boolean finish() {IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText());try {project.create(null);project.open(null);IProjectDescription desc = project.getDescription();desc.setNatureIds(new String[] { JavaCore.NATURE_ID });project.setDescription(desc, null);IJavaProject javaProject = JavaCore.create(project);IPath fitLib = project.getFullPath().append(FIT_LIBRARY);javaProject.setRawClasspath(createClassPathEntries(project, fitLib), null);copyLibrary(project);javaProject.setOutputLocation(createOutputFolder(project, DEFAULT_OUTPUT_FOLDER).getFullPath(), null);createOutputFolder(project, fitTests.getText());createOutputFolder(project, fitResults.getText());if (!DEFAULT_OUTPUT_FOLDER.equals(fitResults.getText())) {DefaultFolderProperties.setDefinedOutputLocation(project, fitResults.getText());}if (!DEFAULT_SOURCE_FOLDER.equals(fitFixtures.getText())) {DefaultFolderProperties.setDefinedSourceLocation(project, fitFixtures.getText());}if (includeExamplesCheck.getSelection()) {copySamples(project);}} catch (CoreException e) {handleError(getContainer().getShell(), project, ""Could not create project:"" + e.getMessage());return false;} catch (IOException e) {handleError(getContainer().getShell(), project, ""Could not create project:"" + e.getMessage());return false;}return true;}protected File compress(File orig, IWrapCompression wrapper) throws IOException {File compressed = File.createTempFile(""test."", "".gz"");FileOutputStream fos = new FileOutputStream(compressed);OutputStream wos = wrapper.wrap(fos);FileInputStream fis = new FileInputStream(orig);IOUtils.copy(fis, wos);IOUtils.closeQuietly(fis);IOUtils.closeQuietly(wos);return compressed;}@Overrideprotected FTPClient ftpConnect() throws SocketException, IOException, NoSuchAlgorithmException {FilePathItem fpi = getFilePathItem();FTPClient f = new FTPSClient();f.connect(fpi.getHost());f.login(fpi.getUsername(), fpi.getPassword());return f;}public void concatFiles() throws IOException {Writer writer = null;try {final File targetFile = new File(getTargetDirectory(), getTargetFile());targetFile.getParentFile().mkdirs();if (null != getEncoding()) {getLog().info(""Writing aggregated file with encoding '"" + getEncoding() + ""'"");writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(targetFile), getEncoding()));} else {getLog().info(""WARNING: writing aggregated file with system encoding"");writer = new FileWriter(targetFile);}for (File file : getFiles()) {Reader reader = null;try {if (null != getEncoding()) {getLog().info(""Reading file "" + file.getCanonicalPath() + "" with encoding  '"" + getEncoding() + ""'"");reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), getEncoding()));} else {getLog().info(""WARNING: Reading file "" + file.getCanonicalPath() + "" with system encoding"");reader = new FileReader(file);}IOUtils.copy(reader, writer);final String delimiter = getDelimiter();if (delimiter != null) {writer.write(delimiter.toCharArray());}} finally {IOUtils.closeQuietly(reader);}}} finally {IOUtils.closeQuietly(writer);}}public List<T_new> executeGet(HttpTransport transport, String targetUrl) throws HttpResponseException, IOException {HttpRequest req = transport.buildGetRequest();req.setUrl(targetUrl);NotifyFeed feed = req.execute().parseAs(NotifyFeed.class);if (feed.entry == null) {return Collections.emptyList();}List<T_new> results = new ArrayList<T_new>();for (NotifyEntry e : feed.entry) {StringBuilder buffer = new StringBuilder();if (e.id != null) {buffer.append(e.id);}buffer.append(""@"");if (e.updated != null) {buffer.append(e.updated.toStringRfc3339().substring(0, 19) + ""Z"");}Key key = Datastore.createKey(T_new.class, buffer.toString());T_new news = new T_new();news.setTitle(e.title);if (e.content != null) {news.setNewText(e.content.substring(0, Math.min(e.content.length(), 500)));}if (e.status != null && e.content == null) {news.setNewText(e.status);}if (e.updated != null) {news.setCreatedAt(new Date(e.updated.value));}news.setContentUrl(e.getAlternate());if (e.author != null) {news.setAuthor(e.author.name);}news.setKey(key);results.add(news);}return results;}public static byte[] encrypt(String passphrase, byte[] data) throws Exception {byte[] dataTemp;try {Security.addProvider(new com.sun.crypto.provider.SunJCE());MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(passphrase.getBytes());DESKeySpec key = new DESKeySpec(md.digest());SecretKeySpec DESKey = new SecretKeySpec(key.getKey(), ""DES"");Cipher cipher = Cipher.getInstance(""DES/ECB/PKCS5Padding"");cipher.init(Cipher.ENCRYPT_MODE, DESKey);dataTemp = cipher.doFinal(data);} catch (Exception e) {throw e;}return dataTemp;}public static byte[] decrypt(String passphrase, byte[] data) throws Exception {byte[] dataTemp;try {Security.addProvider(new com.sun.crypto.provider.SunJCE());MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(passphrase.getBytes());DESKeySpec key = new DESKeySpec(md.digest());SecretKeySpec DESKey = new SecretKeySpec(key.getKey(), ""DES"");Cipher cipher = Cipher.getInstance(""DES/ECB/PKCS5Padding"");cipher.init(Cipher.DECRYPT_MODE, DESKey);dataTemp = cipher.doFinal(data);} catch (Exception e) {throw e;}return dataTemp;}protected void findPackages(Set<String> packages, ClassLoader classLoader) throws IOException {Enumeration<URL> resources = classLoader.getResources(META_INF_SERVICES);while (resources.hasMoreElements()) {URL url = resources.nextElement();String path = url.getPath();if (!visitedURIs.contains(path)) {visitedURIs.add(path);LOG.debug(""Loading file {} to retrieve list of packages, from url: {}"", META_INF_SERVICES, url);BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));try {while (true) {String line = reader.readLine();if (line == null) {break;}line = line.trim();if (line.startsWith(""#"") || line.length() == 0) {continue;}tokenize(packages, line);}} finally {IOHelper.close(reader, null, LOG);}}}}"	5
"public static JSGFRuleGrammar newGrammarFromJSGF(URL url, JSGFRuleGrammarFactory factory) throws JSGFGrammarParseException, IOException {Reader reader;BufferedInputStream stream = new BufferedInputStream(url.openStream(), 256);JSGFEncoding encoding = getJSGFEncoding(stream);if ((encoding != null) && (encoding.encoding != null)) {System.out.println(""Grammar Character Encoding \"""" + encoding.encoding + ""\"""");reader = new InputStreamReader(stream, encoding.encoding);} else {if (encoding == null) System.out.println(""WARNING: Grammar missing self identifying header"");reader = new InputStreamReader(stream);}return newGrammarFromJSGF(reader, factory);}public static String MD5(String text) {try {MessageDigest md;md = MessageDigest.getInstance(""MD5"");byte[] md5hash = new byte[32];md.update(text.getBytes(""iso-8859-1""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);} catch (Exception e) {System.out.println(e.toString());}return null;}protected boolean update(String sql, int requiredRows, int maxRows) throws SQLException {if (LOG.isDebugEnabled()) {LOG.debug(""executing "" + sql + ""..."");}Connection connection = null;boolean oldAutoCommit = true;try {connection = dataSource.getConnection();connection.clearWarnings();oldAutoCommit = connection.getAutoCommit();connection.setAutoCommit(false);Statement statement = connection.createStatement();int rowsAffected = statement.executeUpdate(sql);if (requiredRows != -1 && rowsAffected < requiredRows) {LOG.warn(""("" + rowsAffected + "") less than "" + requiredRows + "" rows affected, rolling back..."");connection.rollback();return false;}if (maxRows != -1 && rowsAffected > maxRows) {LOG.warn(""("" + rowsAffected + "") more than "" + maxRows + "" rows affected, rolling back..."");connection.rollback();return false;}connection.commit();return true;} catch (SQLException e) {LOG.error(""Unable to update database using: "" + sql, e);throw e;} finally {try {if (connection != null) {connection.setAutoCommit(oldAutoCommit);connection.close();}} catch (SQLException e) {LOG.error(""Unable to close connection: "" + e, e);}}}protected byte[] retrieveImageData() throws IOException {URL url = new URL(imageUrl);HttpURLConnection connection = (HttpURLConnection) url.openConnection();int fileSize = connection.getContentLength();Log.d(LOG_TAG, ""fetching image "" + imageUrl + "" ("" + (fileSize <= 0 ? ""size unknown"" : Integer.toString(fileSize)) + "")"");BufferedInputStream istream = new BufferedInputStream(connection.getInputStream());try {if (fileSize <= 0) {Log.w(LOG_TAG, ""Server did not set a Content-Length header, will default to buffer size of "" + defaultBufferSize + "" bytes"");ByteArrayOutputStream buf = new ByteArrayOutputStream(defaultBufferSize);byte[] buffer = new byte[defaultBufferSize];int bytesRead = 0;while (bytesRead != -1) {bytesRead = istream.read(buffer, 0, defaultBufferSize);if (bytesRead > 0) buf.write(buffer, 0, bytesRead);}return buf.toByteArray();} else {byte[] imageData = new byte[fileSize];int bytesRead = 0;int offset = 0;while (bytesRead != -1 && offset < fileSize) {bytesRead = istream.read(imageData, offset, fileSize - offset);offset += bytesRead;}return imageData;}} finally {try {istream.close();connection.disconnect();} catch (Exception ignore) {}}}public boolean uploadToUrl(URL url, Map postData) {boolean success = false;OutputStream oStream;HttpURLConnection urlConn = null;try {urlConn = (HttpURLConnection) url.openConnection();urlConn.setDoOutput(true);urlConn.setDoInput(true);urlConn.setUseCaches(false);urlConn.setAllowUserInteraction(false);String parametersAsString = """";Iterator itParams = postData.entrySet().iterator();while (itParams.hasNext()) {Map.Entry param = (Map.Entry) itParams.next();parametersAsString += (String) param.getKey() + ""="" + URLEncoder.encode((String) param.getValue(), ""UTF-8"") + ""&"";}byte[] parameterAsBytes = parametersAsString.getBytes();urlConn.setRequestProperty(""Content=length"", String.valueOf(parameterAsBytes.length));oStream = urlConn.getOutputStream();oStream.write(parameterAsBytes);oStream.flush();BufferedReader rd = new BufferedReader(new InputStreamReader(urlConn.getInputStream()));String line;while ((line = rd.readLine()) != null) {System.err.println(""Response: "" + line);}oStream.close();rd.close();success = true;} catch (MalformedURLException ex) {System.err.println(ex + "" (uploadToUrl)"");success = false;} catch (java.io.IOException iox) {System.out.println(iox + "" (uploadToUrl)"");success = false;} catch (Exception generic) {System.out.println(generic.toString() + "" (uploadToUrl)"");success = false;} finally {success = false;}return success;}private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException {URL url = new URL(authenticationUrl);HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();urlConnection.setRequestMethod(""POST"");urlConnection.setDoInput(true);urlConnection.setDoOutput(true);urlConnection.setUseCaches(false);urlConnection.setRequestProperty(""Content-Type"", ""application/x-www-form-urlencoded"");StringBuffer content = new StringBuffer();content.append(""Email="").append(URLEncoder.encode(accountEmail, ""UTF-8""));content.append(""&Passwd="").append(URLEncoder.encode(accountPassword, ""UTF-8""));content.append(""&source="").append(URLEncoder.encode(""Google Base data API for OFBiz"", ""UTF-8""));content.append(""&service="").append(URLEncoder.encode(""gbase"", ""UTF-8""));OutputStream outputStream = urlConnection.getOutputStream();outputStream.write(content.toString().getBytes(""UTF-8""));outputStream.close();int responseCode = urlConnection.getResponseCode();InputStream inputStream;if (responseCode == HttpURLConnection.HTTP_OK) {inputStream = urlConnection.getInputStream();} else {inputStream = urlConnection.getErrorStream();}return toString(inputStream);}public String[] getFriends() {InputStream is = null;String[] answer = null;String result = """";try {HttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(domain);httppost.setEntity(new UrlEncodedFormEntity(library));HttpResponse response = httpclient.execute(httppost);HttpEntity entity = response.getEntity();is = entity.getContent();} catch (Exception e) {Log.e(""log_tag"", ""Error in http connection "" + e.toString());}try {BufferedReader reader = new BufferedReader(new InputStreamReader(is, ""iso-8859-1""), 8);StringBuilder sb = new StringBuilder();String line = null;while ((line = reader.readLine()) != null) {sb.append(line + "","");}is.close();result = sb.toString();if (result.equals(""null,"")) {answer = new String[1];answer[0] = ""none"";return answer;}} catch (Exception e) {Log.e(""log_tag"", ""Error converting result "" + e.toString());}try {JSONArray json = new JSONArray(result);answer = new String[json.length()];for (int i = 0; i < json.length(); i++) {JSONObject jsonId = json.getJSONObject(i);answer[i] = jsonId.getString(""uid"");}} catch (JSONException e) {Log.e(""log_tag"", ""Error parsing data "" + e.toString());}return answer;}public LinkedList<NameValuePair> getScoreboard() {InputStream is = null;String result = """";LinkedList<NameValuePair> scores = new LinkedList<NameValuePair>();try {HttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(domain);httppost.setEntity(new UrlEncodedFormEntity(library));HttpResponse response = httpclient.execute(httppost);HttpEntity entity = response.getEntity();is = entity.getContent();} catch (Exception e) {Log.e(""log_tag"", ""Error in http connection "" + e.toString());}try {BufferedReader reader = new BufferedReader(new InputStreamReader(is, ""iso-8859-1""), 8);StringBuilder sb = new StringBuilder();String line = null;while ((line = reader.readLine()) != null) {sb.append(line + "","");}is.close();result = sb.toString();if (result.equals(""null,"")) {return null;}} catch (Exception e) {Log.e(""log_tag"", ""Error converting result "" + e.toString());}try {JSONObject json = new JSONObject(result);JSONArray data = json.getJSONArray(""data"");JSONArray me = json.getJSONArray(""me"");for (int i = 0; i < data.length(); i++) {JSONObject single = data.getJSONObject(i);String uid = single.getString(""uid"");String score = single.getString(""score"");scores.add(new BasicNameValuePair(uid, score));}for (int i = 0; i < me.length(); i++) {JSONObject single = me.getJSONObject(i);String uid = single.getString(""uid"");String score = single.getString(""score"");scores.add(new BasicNameValuePair(uid, score));}System.out.println(json);} catch (JSONException e) {Log.e(""log_tag"", ""Error parsing data "" + e.toString());}return scores;}public LinkedList<NameValuePair> getQuestion() {InputStream is = null;String result = """";LinkedList<NameValuePair> question = new LinkedList<NameValuePair>();try {HttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(domain);httppost.setEntity(new UrlEncodedFormEntity(library));HttpResponse response = httpclient.execute(httppost);HttpEntity entity = response.getEntity();is = entity.getContent();} catch (Exception e) {Log.e(""log_tag"", ""Error in http connection "" + e.toString());}try {BufferedReader reader = new BufferedReader(new InputStreamReader(is, ""iso-8859-1""), 8);StringBuilder sb = new StringBuilder();String line = null;while ((line = reader.readLine()) != null) {sb.append(line);}is.close();result = sb.toString();if (result.equals(""null,"")) {return null;}} catch (Exception e) {Log.e(""log_tag"", ""Error converting result "" + e.toString());}try {JSONObject json = new JSONObject(result);JSONArray data = json.getJSONArray(""data"");JSONObject quest = data.getJSONObject(0);question.add(new BasicNameValuePair(""q"", quest.getString(""q"")));question.add(new BasicNameValuePair(""a"", quest.getString(""a"")));question.add(new BasicNameValuePair(""b"", quest.getString(""b"")));question.add(new BasicNameValuePair(""c"", quest.getString(""c"")));question.add(new BasicNameValuePair(""d"", quest.getString(""d"")));question.add(new BasicNameValuePair(""correct"", quest.getString(""correct"")));return question;} catch (JSONException e) {Log.e(""log_tag"", ""Error parsing data "" + e.toString());}return null;}public String getChallengers() {InputStream is = null;String result = """";try {HttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(domain);httppost.setEntity(new UrlEncodedFormEntity(library));HttpResponse response = httpclient.execute(httppost);HttpEntity entity = response.getEntity();is = entity.getContent();} catch (Exception e) {Log.e(""log_tag"", ""Error in http connection "" + e.toString());}try {BufferedReader reader = new BufferedReader(new InputStreamReader(is, ""iso-8859-1""), 8);StringBuilder sb = new StringBuilder();String line = null;while ((line = reader.readLine()) != null) {sb.append(line + "","");}is.close();result = sb.toString();if (result.equals(""null,"")) {return ""none"";} else return result;} catch (Exception e) {Log.e(""log_tag"", ""Error converting result "" + e.toString());}return ""none"";}"	5
"public static FTPClient createConnection(String hostname, int port, char[] username, char[] password, String workingDirectory, FileSystemOptions fileSystemOptions) throws FileSystemException {if (username == null) username = ""anonymous"".toCharArray();if (password == null) password = ""anonymous"".toCharArray();try {final FTPClient client = new FTPClient();String key = FtpFileSystemConfigBuilder.getInstance().getEntryParser(fileSystemOptions);if (key != null) {FTPClientConfig config = new FTPClientConfig(key);String serverLanguageCode = FtpFileSystemConfigBuilder.getInstance().getServerLanguageCode(fileSystemOptions);if (serverLanguageCode != null) config.setServerLanguageCode(serverLanguageCode);String defaultDateFormat = FtpFileSystemConfigBuilder.getInstance().getDefaultDateFormat(fileSystemOptions);if (defaultDateFormat != null) config.setDefaultDateFormatStr(defaultDateFormat);String recentDateFormat = FtpFileSystemConfigBuilder.getInstance().getRecentDateFormat(fileSystemOptions);if (recentDateFormat != null) config.setRecentDateFormatStr(recentDateFormat);String serverTimeZoneId = FtpFileSystemConfigBuilder.getInstance().getServerTimeZoneId(fileSystemOptions);if (serverTimeZoneId != null) config.setServerTimeZoneId(serverTimeZoneId);String[] shortMonthNames = FtpFileSystemConfigBuilder.getInstance().getShortMonthNames(fileSystemOptions);if (shortMonthNames != null) {StringBuffer shortMonthNamesStr = new StringBuffer(40);for (int i = 0; i < shortMonthNames.length; i++) {if (shortMonthNamesStr.length() > 0) shortMonthNamesStr.append(""|"");shortMonthNamesStr.append(shortMonthNames[i]);}config.setShortMonthNames(shortMonthNamesStr.toString());}client.configure(config);}FTPFileEntryParserFactory myFactory = FtpFileSystemConfigBuilder.getInstance().getEntryParserFactory(fileSystemOptions);if (myFactory != null) client.setParserFactory(myFactory);try {client.connect(hostname, port);int reply = client.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) throw new FileSystemException(""vfs.provider.ftp/connect-rejected.error"", hostname);if (!client.login(UserAuthenticatorUtils.toString(username), UserAuthenticatorUtils.toString(password))) throw new FileSystemException(""vfs.provider.ftp/login.error"", new Object[] { hostname, UserAuthenticatorUtils.toString(username) }, null);if (!client.setFileType(FTP.BINARY_FILE_TYPE)) throw new FileSystemException(""vfs.provider.ftp/set-binary.error"", hostname);Integer dataTimeout = FtpFileSystemConfigBuilder.getInstance().getDataTimeout(fileSystemOptions);if (dataTimeout != null) client.setDataTimeout(dataTimeout.intValue());try {FtpFileSystemConfigBuilder.getInstance().setHomeDir(fileSystemOptions, client.printWorkingDirectory());} catch (IOException ex) {throw new FileSystemException(""Error obtaining working directory!"");}Boolean userDirIsRoot = FtpFileSystemConfigBuilder.getInstance().getUserDirIsRoot(fileSystemOptions);if (workingDirectory != null && (userDirIsRoot == null || !userDirIsRoot.booleanValue())) if (!client.changeWorkingDirectory(workingDirectory)) throw new FileSystemException(""vfs.provider.ftp/change-work-directory.error"", workingDirectory);Boolean passiveMode = FtpFileSystemConfigBuilder.getInstance().getPassiveMode(fileSystemOptions);if (passiveMode != null && passiveMode.booleanValue()) client.enterLocalPassiveMode();} catch (final IOException e) {if (client.isConnected()) client.disconnect();throw e;}return client;} catch (final Exception exc) {throw new FileSystemException(""vfs.provider.ftp/connect.error"", new Object[] { hostname }, exc);}}@Overrideprotected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {String url = ""http://jdkcn.com/checkUpdateNew.jsp?ver="" + blogFacade.getDatabaseSiteConfig().getAppVersion();response.setCharacterEncoding(""UTF-8"");URLConnection connection = new URL(url).openConnection();BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream(), ""UTF-8""));StringBuilder sb = new StringBuilder();String line = reader.readLine();while (line != null) {sb.append(line).append(""\r\n"");line = reader.readLine();}response.getWriter().println(sb.toString());return null;}public void performOk(final IProject project, final TomcatPropertyPage page) {page.setPropertyValue(""tomcat.jdbc.driver"", c_drivers.getText());page.setPropertyValue(""tomcat.jdbc.url"", url.getText());page.setPropertyValue(""tomcat.jdbc.user"", username.getText());page.setPropertyValue(""tomcat.jdbc.password"", password.getText());File lib = new File(page.tomcatHome.getText(), ""lib"");if (!lib.exists()) {lib = new File(new File(page.tomcatHome.getText(), ""common""), ""lib"");if (!lib.exists()) {Logger.log(Logger.ERROR, ""Not properly location of Tomcat Home at :: "" + lib);throw new IllegalStateException(""Not properly location of Tomcat Home"");}}final File conf = new File(page.tomcatHome.getText(), ""conf/Catalina/localhost"");if (!conf.exists()) {final boolean create = NexOpenUIActivator.getDefault().getTomcatConfProperty();if (create) {if (Logger.getLog().isDebugEnabled()) {Logger.getLog().debug(""Create directory "" + conf);}try {conf.mkdirs();} catch (final SecurityException se) {Logger.getLog().error(""Retrieved a Security exception creating "" + conf, se);Logger.log(Logger.ERROR, ""Not created "" + conf + "" directory. Not enough privilegies. Message :: "" + se.getMessage());}}}String str_driverLibrary = LIBRARIES.get(c_drivers.getText());if (""<mysql_driver>"".equals(str_driverLibrary)) {str_driverLibrary = NexOpenUIActivator.getDefault().getMySQLDriver();}final File driverLibrary = new File(lib, str_driverLibrary);if (!driverLibrary.exists()) {InputStream driver = null;FileOutputStream fos = null;try {driver = AppServerPropertyPage.toInputStream(new Path(""jdbc/"" + str_driverLibrary));fos = new FileOutputStream(driverLibrary);IOUtils.copy(driver, fos);} catch (IOException e) {Logger.log(Logger.ERROR, ""Could not copy the driver jar file to Tomcat"", e);} finally {try {if (driver != null) {driver.close();driver = null;}if (fos != null) {fos.flush();fos.close();fos = null;}} catch (IOException e) {}}}page.processTomcatCfg(c_drivers.getText(), url.getText(), username.getText(), password.getText());}public boolean check(Object credentials) {try {byte[] digest = null;if (credentials instanceof Password || credentials instanceof String) {synchronized (__TYPE) {if (__md == null) __md = MessageDigest.getInstance(""MD5"");__md.reset();__md.update(credentials.toString().getBytes(StringUtil.__ISO_8859_1));digest = __md.digest();}if (digest == null || digest.length != _digest.length) return false;for (int i = 0; i < digest.length; i++) if (digest[i] != _digest[i]) return false;return true;} else if (credentials instanceof MD5) {MD5 md5 = (MD5) credentials;if (_digest.length != md5._digest.length) return false;for (int i = 0; i < _digest.length; i++) if (_digest[i] != md5._digest[i]) return false;return true;} else if (credentials instanceof Credential) {return ((Credential) credentials).check(this);} else {log.warn(""Can't check "" + credentials.getClass() + "" against MD5"");return false;}} catch (Exception e) {log.warn(LogSupport.EXCEPTION, e);return false;}}public static String digest(String password) {try {byte[] digest;synchronized (__TYPE) {if (__md == null) {try {__md = MessageDigest.getInstance(""MD5"");} catch (Exception e) {log.warn(LogSupport.EXCEPTION, e);return null;}}__md.reset();__md.update(password.getBytes(StringUtil.__ISO_8859_1));digest = __md.digest();}return __TYPE + TypeUtil.toString(digest, 16);} catch (Exception e) {log.warn(LogSupport.EXCEPTION, e);return null;}}@Overridepublic DataTable generateDataTable(Query query, HttpServletRequest request) throws DataSourceException {String url = request.getParameter(URL_PARAM_NAME);if (StringUtils.isEmpty(url)) {log.error(""url parameter not provided."");throw new DataSourceException(ReasonType.INVALID_REQUEST, ""url parameter not provided"");}Reader reader;try {reader = new BufferedReader(new InputStreamReader(new URL(url).openStream()));} catch (MalformedURLException e) {log.error(""url is malformed: "" + url);throw new DataSourceException(ReasonType.INVALID_REQUEST, ""url is malformed: "" + url);} catch (IOException e) {log.error(""Couldn't read from url: "" + url, e);throw new DataSourceException(ReasonType.INVALID_REQUEST, ""Couldn't read from url: "" + url);}DataTable dataTable = null;ULocale requestLocale = DataSourceHelper.getLocaleFromRequest(request);try {dataTable = CsvDataSourceHelper.read(reader, null, true, requestLocale);} catch (IOException e) {log.error(""Couldn't read from url: "" + url, e);throw new DataSourceException(ReasonType.INVALID_REQUEST, ""Couldn't read from url: "" + url);}return dataTable;}public static XMLConfigurator loadFromDefaultSystemProperty() throws IOException {String urlStr = System.getProperty(DEFAULT_SYS_PROP_NAME);if (urlStr == null || urlStr.length() == 0) {return null;}InputStream in = null;DOMRetriever xmlDoc = null;try {URL url = new URL(urlStr);xmlDoc = new DOMRetriever(in = url.openStream());} catch (MalformedURLException e) {throw new RuntimeException(e);} finally {if (in != null) in.close();}return newInstance(xmlDoc);}public static XMLConfigurator loadFromSystemProperty(String propertyName) throws IOException {String urlStr = System.getProperty(propertyName);if (urlStr == null || urlStr.length() == 0) {return null;}InputStream in = null;DOMRetriever xmlDoc = null;try {URL url = new URL(urlStr);xmlDoc = new DOMRetriever(in = url.openStream());} catch (MalformedURLException e) {throw new RuntimeException(e);} finally {if (in != null) in.close();}return newInstance(xmlDoc);}public void doFilter(final ServletRequest arg0, final ServletResponse arg1, final FilterChain arg2) throws IOException, ServletException {if (!this.init) {final HttpServletResponse response = Dynamic._.Cast(arg1);response.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE, ""Mainfilter not initialized."");return;}if (this.mainFilter != null) {try {URL url = this.context.getResource(""/WEB-INF/classes/log4j.properties"");URLConnection uc = url.openConnection();if (uc.getLastModified() != lastLoadLog4j) {lastLoadLog4j = uc.getLastModified();try {uc.getInputStream().close();} catch (Exception ignore) {}PropertyConfigurator.configure(url);} else {try {uc.getInputStream().close();} catch (Exception ignore) {}}} catch (final Exception e) {}this.mainFilter.doFilter(arg0, arg1);} else {final HttpServletResponse response = Dynamic._.Cast(arg1);response.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE, ""Mainfilter bad setup."");}}public void testGetContentInputStream() {try {URL url = new URL(""http://www.designerfashion.de/Seiten/r2-Felljacke.html"");InputStream in = url.openStream();Content c = provider.getContent(in);assertNotNull(c);assertEquals(""Web Page"", c.getType());assertEquals(""net.sf.iqser.plugin.web.html"", c.getProvider());assertEquals(8, c.getAttributes().size());assertEquals(""Name"", c.getAttributes().iterator().next().getName());} catch (MalformedURLException e) {fail(""Malformed URL - "" + e.getMessage());} catch (IOException e) {fail(""Couldn't read source - "" + e.getMessage());}}"	5
"public boolean backupFile(File oldFile, File newFile) {boolean isBkupFileOK = false;FileChannel sourceChannel = null;FileChannel targetChannel = null;try {sourceChannel = new FileInputStream(oldFile).getChannel();targetChannel = new FileOutputStream(newFile).getChannel();targetChannel.transferFrom(sourceChannel, 0, sourceChannel.size());} catch (IOException e) {logger.log(Level.SEVERE, ""IO exception occurred while copying file"", e);} finally {if ((newFile != null) && (newFile.exists()) && (newFile.length() > 0)) {isBkupFileOK = true;}try {if (sourceChannel != null) {sourceChannel.close();}if (targetChannel != null) {targetChannel.close();}} catch (IOException e) {logger.log(Level.INFO, ""closing channels failed"");}}return isBkupFileOK;}public String SHA1(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md = MessageDigest.getInstance(SHA1);md.update(text.getBytes(CHAR_SET), 0, text.length());byte[] mdbytes = md.digest();return byteToHex(mdbytes);}public void connect() throws SocketException, IOException {Log.i(TAG, ""Test attempt login to "" + ftpHostname + "" as "" + ftpUsername);ftpClient = new FTPClient();ftpClient.connect(this.ftpHostname, this.ftpPort);ftpClient.login(ftpUsername, ftpPassword);int reply = ftpClient.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {String error = ""Login failure ("" + reply + "") : "" + ftpClient.getReplyString();Log.e(TAG, error);throw new IOException(error);}}public void copyTo(String newname) throws IOException {FileChannel srcChannel = new FileInputStream(dosname).getChannel();FileChannel dstChannel = new FileOutputStream(newname).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();}public void convert(File src, File dest) throws IOException {InputStream in = new BufferedInputStream(new FileInputStream(src));DcmParser p = pfact.newDcmParser(in);Dataset ds = fact.newDataset();p.setDcmHandler(ds.getDcmHandler());try {FileFormat format = p.detectFileFormat();if (format != FileFormat.ACRNEMA_STREAM) {System.out.println(""\n"" + src + "": not an ACRNEMA stream!"");return;}p.parseDcmFile(format, Tags.PixelData);if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {System.out.println(""\n"" + src + "": contains UIDs!"" + "" => probable already DICOM - do not convert"");return;}boolean hasPixelData = p.getReadTag() == Tags.PixelData;boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;int pxlen = p.getReadLength();if (hasPixelData) {if (inflate) {ds.putUS(Tags.BitsAllocated, 16);pxlen = pxlen * 4 / 3;}if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {System.out.println(""\n"" + src + "": mismatch pixel data length!"" + "" => do not convert"");return;}}ds.putUI(Tags.StudyInstanceUID, uid(studyUID));ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));ds.putUI(Tags.SOPInstanceUID, uid(instUID));ds.putUI(Tags.SOPClassUID, classUID);if (!ds.contains(Tags.NumberOfSamples)) {ds.putUS(Tags.NumberOfSamples, 1);}if (!ds.contains(Tags.PhotometricInterpretation)) {ds.putCS(Tags.PhotometricInterpretation, ""MONOCHROME2"");}if (fmi) {ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));}OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));try {} finally {ds.writeFile(out, encodeParam());if (hasPixelData) {if (!skipGroupLen) {out.write(PXDATA_GROUPLEN);int grlen = pxlen + 8;out.write((byte) grlen);out.write((byte) (grlen >> 8));out.write((byte) (grlen >> 16));out.write((byte) (grlen >> 24));}out.write(PXDATA_TAG);out.write((byte) pxlen);out.write((byte) (pxlen >> 8));out.write((byte) (pxlen >> 16));out.write((byte) (pxlen >> 24));}if (inflate) {int b2, b3;for (; pxlen > 0; pxlen -= 3) {out.write(in.read());b2 = in.read();b3 = in.read();out.write(b2 & 0x0f);out.write(b2 >> 4 | ((b3 & 0x0f) << 4));out.write(b3 >> 4);}} else {for (; pxlen > 0; --pxlen) {out.write(in.read());}}out.close();}System.out.print('.');} finally {in.close();}}public static String hashString(String sPassword) {if (sPassword == null || sPassword.equals("""")) {return ""empty:"";} else {try {MessageDigest md = MessageDigest.getInstance(""SHA-1"");md.update(sPassword.getBytes(""UTF-8""));byte[] res = md.digest();return ""sha1:"" + StringUtils.byte2hex(res);} catch (NoSuchAlgorithmException e) {return ""plain:"" + sPassword;} catch (UnsupportedEncodingException e) {return ""plain:"" + sPassword;}}}public static void main(String[] args) {if (args.length < 2) {System.out.println("" *** DDL (creates) and DML (inserts) script importer from DB ***"");System.out.println("" You must specify name of the file with script importing data"");System.out.println("" Fisrt rows of this file must be:"");System.out.println("" 1) JDBC driver class for your DBMS"");System.out.println("" 2) URL for your database instance"");System.out.println("" 3) user in that database (with sufficient priviliges)"");System.out.println("" 4) password of that user"");System.out.println("" Next rows can have:"");System.out.println(""'}' before table to create,"");System.out.println(""'{' before schema to create tables in,"");System.out.println(""')' before table to insert into,"");System.out.println(""'(' before schema to insert into tables in."");System.out.println("" '!' before row means that it is a comment."");System.out.println("" If some exception is occured, all script is rolled back."");System.out.println("" 2nd command line argument is name of output file;"");System.out.println(""if its extension is *.sql, its format is standard SQL"");System.out.println(""otherwize format is short one, understanded by SQLScript tool"");System.out.println("" Connection information remains unchanged in the last format"");System.out.println(""but in the first one it takes form 'connect user/password@URL'"");System.out.println(""where URL can be formed with different rools for different DBMSs"");System.out.println("" If file (with short format header) already exists and you specify"");System.out.println(""3rd command line argument -db, we generate objects in the database"");System.out.println(""(known from the file header; must differ from 1st DB) but not in file"");System.out.println("" Note: when importing to a file of short format, line separators"");System.out.println(""in VARCHARS will be lost; LOBs will be empty for any file"");System.exit(0);}try {String[] info = new String[4];BufferedReader reader = new BufferedReader(new FileReader(new File(args[0])));Writer writer = null;Connection outConnection = null;try {for (int i = 0; i < info.length; i++) info[i] = reader.readLine();try {Class.forName(info[0]);Connection connection = DriverManager.getConnection(info[1], info[2], info[3]);int format = args[1].toLowerCase().endsWith(""sql"") ? SQL_FORMAT : SHORT_FORMAT;File file = new File(args[1]);if (format == SHORT_FORMAT) {if (file.exists() && args.length > 2 && args[2].equalsIgnoreCase(""-db"")) {String[] outInfo = new String[info.length];BufferedReader outReader = new BufferedReader(new FileReader(file));for (int i = 0; i < outInfo.length; i++) outInfo[i] = reader.readLine();outReader.close();if (!(outInfo[1].equals(info[1]) && outInfo[2].equals(info[2]))) {Class.forName(info[0]);outConnection = DriverManager.getConnection(outInfo[1], outInfo[2], outInfo[3]);format = SQL_FORMAT;}}}if (outConnection == null) writer = new BufferedWriter(new FileWriter(file));SQLImporter script = new SQLImporter(outConnection, connection);script.setFormat(format);if (format == SQL_FORMAT) {writer.write(""connect "" + info[2] + ""/"" + info[3] + ""@"" + script.getDatabaseURL(info[1]) + script.statementTerminator);} else {for (int i = 0; i < info.length; i++) writer.write(info[i] + lineSep);writer.write(lineSep);}try {System.out.println(script.executeScript(reader, writer) + "" operations with tables has been generated during import"");} catch (SQLException e4) {reader.close();if (writer != null) writer.close(); else outConnection.close();System.out.println("" Script generation error: "" + e4);}connection.close();} catch (Exception e3) {reader.close();if (writer != null) writer.close();System.out.println("" Connection error: "" + e3);}} catch (IOException e2) {System.out.println(""Error in file "" + args[0]);}} catch (FileNotFoundException e1) {System.out.println(""File "" + args[0] + "" not found"");}}public static byte[] wrapBMP(Image image) throws IOException {if (image.getOriginalType() != Image.ORIGINAL_BMP) throw new IOException(""Only BMP can be wrapped in WMF."");InputStream imgIn;byte data[] = null;if (image.getOriginalData() == null) {imgIn = image.url().openStream();ByteArrayOutputStream out = new ByteArrayOutputStream();int b = 0;while ((b = imgIn.read()) != -1) out.write(b);imgIn.close();data = out.toByteArray();} else data = image.getOriginalData();int sizeBmpWords = (data.length - 14 + 1) >>> 1;ByteArrayOutputStream os = new ByteArrayOutputStream();writeWord(os, 1);writeWord(os, 9);writeWord(os, 0x0300);writeDWord(os, 9 + 4 + 5 + 5 + (13 + sizeBmpWords) + 3);writeWord(os, 1);writeDWord(os, 14 + sizeBmpWords);writeWord(os, 0);writeDWord(os, 4);writeWord(os, META_SETMAPMODE);writeWord(os, 8);writeDWord(os, 5);writeWord(os, META_SETWINDOWORG);writeWord(os, 0);writeWord(os, 0);writeDWord(os, 5);writeWord(os, META_SETWINDOWEXT);writeWord(os, (int) image.height());writeWord(os, (int) image.width());writeDWord(os, 13 + sizeBmpWords);writeWord(os, META_DIBSTRETCHBLT);writeDWord(os, 0x00cc0020);writeWord(os, (int) image.height());writeWord(os, (int) image.width());writeWord(os, 0);writeWord(os, 0);writeWord(os, (int) image.height());writeWord(os, (int) image.width());writeWord(os, 0);writeWord(os, 0);os.write(data, 14, data.length - 14);if ((data.length & 1) == 1) os.write(0);writeDWord(os, 3);writeWord(os, 0);os.close();return os.toByteArray();}private void readChildrenData() throws Exception {URL url;URLConnection connect;BufferedInputStream in;try {url = getURL(""CHILDREN.TAB"");connect = url.openConnection();InputStream ois = connect.getInputStream();if (ois == null) {concepts3 = new IntegerArray(1);return;}in = new BufferedInputStream(ois);int k1 = in.read();concepts3 = new IntegerArray(4096);StreamDecompressor sddocs = new StreamDecompressor(in);sddocs.ascDecode(k1, concepts3);int k2 = in.read();offsets3 = new IntegerArray(concepts3.cardinality() + 1);offsets3.add(0);StreamDecompressor sdoffsets = new StreamDecompressor(in);sdoffsets.ascDecode(k2, offsets3);in.close();url = getURL(""CHILDREN"");connect = url.openConnection();ois = connect.getInputStream();if (ois == null) {concepts3 = new IntegerArray(1);return;}in = new BufferedInputStream(ois);int length = connect.getContentLength();allChildren = new byte[length];in.read(allChildren);in.close();} catch (MalformedURLException e) {concepts3 = new IntegerArray(1);} catch (FileNotFoundException e2) {concepts3 = new IntegerArray(1);} catch (IOException e2) {concepts3 = new IntegerArray(1);}}private void readFromDB() throws Exception {URL url;URLConnection connect;BufferedInputStream in = null;Schema schema = new Schema(base, indexDir, false);BtreeDictParameters params = new BtreeDictParameters(schema, ""TMAP"");params.readState();tmap = new BtreeDict(params);readChildrenData();url = getURL(""DOCS.TAB"");connect = url.openConnection();in = new BufferedInputStream(connect.getInputStream());int k1 = in.read();concepts = new IntegerArray(4096);StreamDecompressor sddocs = new StreamDecompressor(in);sddocs.ascDecode(k1, concepts);int k2 = in.read();offsets = new IntegerArray(concepts.cardinality() + 1);offsets.add(0);StreamDecompressor sdoffsets = new StreamDecompressor(in);sdoffsets.ascDecode(k2, offsets);in.close();url = getURL(""DOCS"");connect = url.openConnection();in = new BufferedInputStream(connect.getInputStream());ByteArrayOutputStream data = new ByteArrayOutputStream();byte[] buff = new byte[512];int i = 0;while ((i = in.read(buff)) != -1) {data.write(buff, 0, i);}allLists = data.toByteArray();in.close();url = getURL(""OFFSETS"");connect = url.openConnection();in = new BufferedInputStream(connect.getInputStream());k1 = in.read();documents = new IntegerArray(4096);sddocs = new StreamDecompressor(in);sddocs.ascDecode(k1, documents);k2 = in.read();offsets2 = new IntegerArray(documents.cardinality() + 1);sdoffsets = new StreamDecompressor(in);sdoffsets.ascDecode(k2, offsets2);int k3 = in.read();titles = new IntegerArray(documents.cardinality());StreamDecompressor sdtitles = new StreamDecompressor(in);sdtitles.decode(k3, titles);in.close();RAFFileFactory factory = RAFFileFactory.create();url = getURL(""POSITIONS"");positionsFile = factory.get(url, false);}"	5
"protected void setUp() throws Exception {super.setUp();bundles = Activator.bundleContext.getBundles();for (int i = 0; i < bundles.length; ++i) {if (bundles[i] != null) {if ((bundles[i].getSymbolicName() == null) || (!bundles[i].getSymbolicName().startsWith(PSS))) {bundles[i] = null;}}}checklist = new Properties();try {URL url = Activator.bundleContext.getBundle().getResource(CHECK_FILE);InputStream is = new BufferedInputStream(url.openStream());checklist.load(is);is.close();} catch (FileNotFoundException fe) {fail(""Failed to find service checklist file"");} catch (IOException e) {fail(""Failed to load service checklist file"");}if (pssTracker == null) {pssTracker = new ServiceTracker(Activator.bundleContext, IPssManager.class.getName(), null);}pssTracker.open();}public void reset(String componentName, int currentPilot) {try {PreparedStatement psta = jdbc.prepareStatement(""DELETE FROM component_prop "" + ""WHERE pilot_id = ? "" + ""AND component_name = ?"");psta.setInt(1, currentPilot);psta.setString(2, componentName);psta.executeUpdate();jdbc.commit();} catch (SQLException e) {jdbc.rollback();log.debug(e);}}public void reset(int currentPilot) {try {PreparedStatement psta = jdbc.prepareStatement(""DELETE FROM component_prop "" + ""WHERE pilot_id = ? "");psta.setInt(1, currentPilot);psta.executeUpdate();jdbc.commit();} catch (SQLException e) {jdbc.rollback();log.debug(e);}}public void writeBack(File destinationFile, boolean makeCopy) throws IOException {if (makeCopy) {FileChannel sourceChannel = new java.io.FileInputStream(getFile()).getChannel();FileChannel destinationChannel = new java.io.FileOutputStream(destinationFile).getChannel();sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel);sourceChannel.close();destinationChannel.close();} else {getFile().renameTo(destinationFile);}if (getExifTime() != null && getOriginalTime() != null && !getExifTime().equals(getOriginalTime())) {String adjustArgument = ""-ts"" + m_dfJhead.format(getExifTime());ProcessBuilder pb = new ProcessBuilder(m_tm.getJheadCommand(), adjustArgument, destinationFile.getAbsolutePath());pb.directory(destinationFile.getParentFile());System.out.println(pb.command().get(0) + "" "" + pb.command().get(1) + "" "" + pb.command().get(2));final Process p = pb.start();try {p.waitFor();} catch (InterruptedException e) {e.printStackTrace();}}}public SparqlQueryLoaderImpl() throws IOException {ClassLoader loader = SparqlQueryLoaderImpl.class.getClassLoader();URL url = loader.getResource(PROPERTIES_FILENAME);InputStream stream = url.openStream();properties.load(stream);stream.close();String names = getProperties().getProperty(NAMES_PARAMETER);StringTokenizer st = new StringTokenizer(names, "","");while (st.hasMoreTokens()) {String name = st.nextToken();String value = readContents(String.format(""sparql/%s.sparql"", name));getName2Query().put(name, value);}}public static void copy(String fileFrom, String fileTo) throws IOException {FileInputStream inputStream = null;FileOutputStream outputStream = null;FileChannel inputChannel = null;FileChannel outputChannel = null;try {inputStream = new FileInputStream(fileFrom);outputStream = new FileOutputStream(fileTo);inputChannel = inputStream.getChannel();outputChannel = outputStream.getChannel();inputChannel.transferTo(0, inputChannel.size(), outputChannel);} finally {try {inputChannel.close();} finally {try {outputChannel.close();} finally {try {inputStream.close();} finally {outputStream.close();}}}}}private ByteBuffer getByteBuffer(String resource) throws IOException {ClassLoader classLoader = this.getClass().getClassLoader();InputStream in = classLoader.getResourceAsStream(resource);ByteArrayOutputStream out = new ByteArrayOutputStream();IOUtils.copy(in, out);return ByteBuffer.wrap(out.toByteArray());}public static void main(String[] args) {final MavenDeployerGui gui = new MavenDeployerGui();final Chooser repositoryChooser = new Chooser(gui.formPanel, JFileChooser.DIRECTORIES_ONLY);final Chooser artifactChooser = new Chooser(gui.formPanel, JFileChooser.FILES_ONLY);final Chooser pomChooser = new Chooser(gui.formPanel, JFileChooser.FILES_ONLY, new POMFilter());gui.cancel.setEnabled(false);gui.cbDeployPOM.setVisible(false);gui.cbDeployPOM.setEnabled(false);gui.mavenBin.setText(findMavenExecutable());gui.repositoryBrowser.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {File repo = repositoryChooser.chooseFrom(currentDir);if (repo != null) {currentDir = repositoryChooser.currentFolder;gui.repositoryURL.setText(repo.getAbsolutePath());}}});gui.artifactBrowser.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {File artifact = artifactChooser.chooseFrom(currentDir);if (artifact != null) {currentDir = artifactChooser.currentFolder;gui.artifactFile.setText(artifact.getAbsolutePath());}}});gui.deploy.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {deployer = new Deployer(gui, pom);deployer.execute();}});gui.clear.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {gui.console.setText("""");}});gui.cancel.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {if (deployer != null) {deployer.stop();deployer = null;}}});gui.cbDeployPOM.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {readPOM(gui);}});gui.loadPOM.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {pom = pomChooser.chooseFrom(currentDir);if (pom != null) {currentDir = pomChooser.currentFolder;readPOM(gui);gui.cbDeployPOM.setText(""Deploy also "" + pom.getAbsolutePath());gui.cbDeployPOM.setEnabled(true);gui.cbDeployPOM.setVisible(true);}}});String version = """";try {URL url = Thread.currentThread().getContextClassLoader().getResource(""META-INF/maven/com.mycila.maven/maven-deployer/pom.properties"");Properties p = new Properties();p.load(url.openStream());version = "" "" + p.getProperty(""version"");} catch (Exception ignored) {version = "" x.y"";}JFrame frame = new JFrame(""Maven Deployer"" + version + "" - By Mathieu Carbou (http://blog.mycila.com)"");frame.setContentPane(gui.formPanel);frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);frame.setLocationRelativeTo(null);frame.setLocationByPlatform(true);frame.pack();frame.setVisible(true);}public static SOAPMessage call(SOAPMessage request, URL url) throws IOException, SOAPException {URLConnection conn = url.openConnection();conn.setDoOutput(true);conn.setDoInput(true);conn.connect();request.writeTo(conn.getOutputStream());MessageFactory mf = MessageFactory.newInstance(SOAPConstants.SOAP_1_2_PROTOCOL);return mf.createMessage(null, conn.getInputStream());}private static void copyFile(final File sourceFile, final File destFile) throws IOException {if (!destFile.exists()) {if (!destFile.createNewFile()) {throw new IOException(""Destination file cannot be created: "" + destFile.getPath());}}FileChannel source = null;FileChannel destination = null;try {source = new FileInputStream(sourceFile).getChannel();destination = new FileOutputStream(destFile).getChannel();destination.transferFrom(source, 0, source.size());} finally {if (source != null) {source.close();}if (destination != null) {destination.close();}}}"	5
"public Vector parse(String link) {addMessage(""Parsing: "" + link);links.removeAllElements();URLConnection conn = null;Reader rd = null;EditorKit kit = new HTMLEditorKit();Document doc = kit.createDefaultDocument();doc.putProperty(""IgnoreCharsetDirective"", Boolean.TRUE);URL url = null;try {url = new URL(link);} catch (MalformedURLException err) {System.out.println(""Malformed URL"");return links;}try {conn = new URL(link).openConnection();rd = new InputStreamReader(conn.getInputStream());} catch (Exception err) {err.printStackTrace();return links;}try {kit.read(rd, doc, 0);ElementIterator it = new ElementIterator(doc);javax.swing.text.Element elem;while ((elem = it.next()) != null) {SimpleAttributeSet s = (SimpleAttributeSet) elem.getAttributes().getAttribute(HTML.Tag.A);if (s != null) {if (s.toString().indexOf(""script"") >= 0) continue;String lnk = """";try {lnk = s.getAttribute(HTML.Attribute.HREF).toString();} catch (Exception err) {continue;}int j = 0;if ((j = lnk.indexOf('#')) >= 0) lnk = lnk.substring(0, j);URL urlLink = new URL(url, lnk);if (!url.getHost().equals(urlLink.getHost())) continue;String str = urlLink.toString();if (!str.startsWith(""http"")) continue;if (str.endsWith("".pdf"")) {continue;}for (int i = 0; i < leaveSuffix.length; i++) {if ((str.endsWith(leaveSuffix[i]))) continue;}boolean skip = false;for (int i = 0; i < suffix.length; i++) {if ((str.endsWith(suffix[i]))) skip = true;}if (!skip) {try {conn = urlLink.openConnection();} catch (Exception err) {}String contentType = null;if (contentType == null) contentType = conn.getContentType();if (contentType.equals(""application/pdf"")) {continue;} else if (!contentType.equals(""text/html"")) {continue;}}if (!links.contains(urlLink.toString())) {links.addElement(urlLink.toString());}}}} catch (Exception e) {e.printStackTrace();}return links;}public void jsFunction_extract(ScriptableFile outputFile) throws IOException, FileSystemException, ArchiveException {InputStream is = file.jsFunction_createInputStream();OutputStream output = outputFile.jsFunction_createOutputStream();BufferedInputStream buf = new BufferedInputStream(is);ArchiveInputStream input = ScriptableZipArchive.getFactory().createArchiveInputStream(buf);try {long count = 0;while (input.getNextEntry() != null) {if (count == offset) {IOUtils.copy(input, output);break;}count++;}} finally {input.close();output.close();is.close();}}public ServiceAdapterIfc deploy(String session, String name, byte jarBytes[], String jarName, String serviceClass, String serviceInterface) throws RemoteException, MalformedURLException, StartServiceException, SessionException {try {File jarFile = new File(jarName);jarName = jarFile.getName();String jarName2 = jarName;jarFile = new File(jarName2);int n = 0;while (jarFile.exists()) {jarName2 = jarName + n++;jarFile = new File(jarName2);}FileOutputStream fos = new FileOutputStream(jarName2);IOUtils.copy(new ByteArrayInputStream(jarBytes), fos);SCClassLoader cl = new SCClassLoader(new URL[] { new URL(""file://"" + jarFile.getAbsolutePath()) }, getMasterNode().getSCClassLoaderCounter());return startService(session, name, serviceClass, serviceInterface, cl);} catch (SessionException e) {throw e;} catch (Exception e) {throw new StartServiceException(""Could not deploy service: "" + e.getMessage(), e);}}public static Object deployNewService(String scNodeRmiName, String userName, String password, String name, String jarName, String serviceClass, String serviceInterface, Logger log) throws RemoteException, MalformedURLException, StartServiceException, NotBoundException, IllegalArgumentException, SecurityException, InstantiationException, IllegalAccessException, InvocationTargetException, SessionException {try {SCNodeInterface node = (SCNodeInterface) Naming.lookup(scNodeRmiName);String session = node.login(userName, password);ByteArrayOutputStream baos = new ByteArrayOutputStream();IOUtils.copy(new FileInputStream(jarName), baos);ServiceAdapterIfc adapter = node.deploy(session, name, baos.toByteArray(), jarName, serviceClass, serviceInterface);if (adapter != null) {return new ExternalDomain(node, adapter, adapter.getUri(), log).getProxy(Thread.currentThread().getContextClassLoader());}} catch (Exception e) {log.warn(""Could not send deploy command: "" + e.getMessage(), e);}return null;}private boolean copy(File in, File out) {try {FileInputStream fis = new FileInputStream(in);FileOutputStream fos = new FileOutputStream(out);FileChannel readableChannel = fis.getChannel();FileChannel writableChannel = fos.getChannel();writableChannel.truncate(0);writableChannel.transferFrom(readableChannel, 0, readableChannel.size());fis.close();fos.close();return true;} catch (IOException ioe) {System.out.println(""Copy Error: IOException during copy\r\n"" + ioe.getMessage());return false;}}private File Gzip(File f) throws IOException {if (f == null || !f.exists()) return null;File dest_dir = f.getParentFile();String dest_filename = f.getName() + "".gz"";File zipfile = new File(dest_dir, dest_filename);GZIPOutputStream out = new GZIPOutputStream(new FileOutputStream(zipfile));FileInputStream in = new FileInputStream(f);byte buf[] = new byte[1024];int len;while ((len = in.read(buf)) > 0) out.write(buf, 0, len);out.finish();try {in.close();} catch (Exception e) {}try {out.close();} catch (Exception e) {}try {f.delete();} catch (Exception e) {}return zipfile;}public static void getResponseAsStream(String _url, Object _stringOrStream, OutputStream _stream, Map _headers, Map _params, String _contentType, int _timeout) throws IOException {if (_url == null || _url.length() <= 0) throw new IllegalArgumentException(""Url can not be null."");String temp = _url.toLowerCase();if (!temp.startsWith(""http://"") && !temp.startsWith(""https://"")) _url = ""http://"" + _url;HttpMethod method = null;if (_stringOrStream == null && (_params == null || _params.size() <= 0)) method = new GetMethod(_url); else method = new PostMethod(_url);HttpMethodParams params = ((HttpMethodBase) method).getParams();if (params == null) {params = new HttpMethodParams();((HttpMethodBase) method).setParams(params);}if (_timeout < 0) params.setSoTimeout(0); else params.setSoTimeout(_timeout);if (_contentType != null && _contentType.length() > 0) {if (_headers == null) _headers = new HashMap();_headers.put(""Content-Type"", _contentType);}if (_headers != null) {Iterator iter = _headers.entrySet().iterator();while (iter.hasNext()) {Map.Entry entry = (Map.Entry) iter.next();method.setRequestHeader((String) entry.getKey(), (String) entry.getValue());}}if (method instanceof PostMethod && (_params != null && _params.size() > 0)) {Iterator iter = _params.entrySet().iterator();while (iter.hasNext()) {Map.Entry entry = (Map.Entry) iter.next();((PostMethod) method).addParameter((String) entry.getKey(), (String) entry.getValue());}}if (method instanceof EntityEnclosingMethod && _stringOrStream != null) {if (_stringOrStream instanceof InputStream) {RequestEntity entity = new InputStreamRequestEntity((InputStream) _stringOrStream);((EntityEnclosingMethod) method).setRequestEntity(entity);} else {RequestEntity entity = new StringRequestEntity(_stringOrStream.toString(), _contentType, null);((EntityEnclosingMethod) method).setRequestEntity(entity);}}HttpClient httpClient = new HttpClient(new org.apache.commons.httpclient.SimpleHttpConnectionManager());try {int status = httpClient.executeMethod(method);if (status != HttpStatus.SC_OK) {if (status >= 500 && status < 600) throw new IOException(""Remote service<"" + _url + ""> respose a error, status:"" + status);}InputStream instream = method.getResponseBodyAsStream();IOUtils.copy(instream, _stream);instream.close();} catch (IOException err) {throw err;} finally {if (method != null) method.releaseConnection();}}public static String getHash(String plaintext) {String hash = null;try {String text = plaintext;MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA-256"");md.update(text.getBytes(""UTF-8""));byte[] rawBytes = md.digest();hash = new BASE64Encoder().encode(rawBytes);} catch (NoSuchAlgorithmException e) {}} catch (IOException e) {}return hash;}public String md5(Value request) throws FaultException {MessageDigest md = null;try {md = MessageDigest.getInstance(""MD5"");md.update(request.strValue().getBytes(""UTF8""));} catch (UnsupportedEncodingException e) {throw new FaultException(""UnsupportedOperation"", e);} catch (NoSuchAlgorithmException e) {throw new FaultException(""UnsupportedOperation"", e);}int radix;if ((radix = request.getFirstChild(""radix"").intValue()) < 2) {radix = 16;}return new BigInteger(1, md.digest()).toString(radix);}private boolean copyFile(File file) throws Exception {destination = new File(ServiceLocator.getSqliteDir(), file.getName());logger.debug(""Writing to: "" + destination);if (destination.exists()) {Frame.showMessage(ServiceLocator.getText(""Error.file.exists"") + file.getName(), null);logger.debug(""File already exists: "" + file);return false;}destination.createNewFile();InputStream in = null;OutputStream out = null;try {in = new FileInputStream(file);out = new FileOutputStream(destination);int read = 0;byte[] buffer = new byte[2048];while ((read = in.read(buffer)) > 0) {out.write(buffer, 0, read);}} finally {if (in != null) in.close();if (out != null) out.close();}return true;}"	5
"public static String encryptPassword(String password) throws PasswordException {String hash = null;if (password != null && !password.equals("""")) {try {MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(password.getBytes(""UTF-8""));byte raw[] = md.digest();hash = (new BASE64Encoder()).encode(raw);} catch (NoSuchAlgorithmException nsae) {throw new PasswordException(PasswordException.SYSTEM_ERROR);} catch (UnsupportedEncodingException uee) {throw new PasswordException(PasswordException.SYSTEM_ERROR);}}return hash;}@Testpublic void usingStream() throws IOException, NameNotFoundException {URL url = new URL(""ftp://ftp.ebi.ac.uk/pub/databases/interpro/entry.list"");InterproNameHandler handler = new InterproNameHandler(url.openStream());String interproName = handler.getNameById(""IPR008255"");assertNotNull(interproName);assertEquals(""Pyridine nucleotide-disulphide oxidoreductase, class-II, active site"", interproName);assertEquals(null, handler.getNameById(""Active_site""));}public boolean copyStoredTileTo(File targetFileName, int x, int y, int zoom, MapSource tileSource) throws IOException {File sourceFile = getTileFile(x, y, zoom, tileSource);if (!sourceFile.exists()) return false;FileInputStream fis = null;FileOutputStream fos = null;long sourceBytes = 0;long writtenBytes = 0;try {fis = new FileInputStream(sourceFile);fos = new FileOutputStream(targetFileName);FileChannel source = fis.getChannel();FileChannel destination = fos.getChannel();sourceBytes = source.size();writtenBytes = destination.transferFrom(source, 0, sourceBytes);} finally {Utilities.closeStream(fis);Utilities.closeStream(fos);}if (writtenBytes != sourceBytes) throw new IOException(""Target file's size is not equal to the source file's size!"");return true;}public StringBuffer get(URL url) throws IOException {BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(url.openStream()));StringBuffer page = new StringBuffer();String line = null;while ((line = bufferedReader.readLine()) != null) {String utf = new String(line.getBytes(""UTF-8""), ""UTF-8"");page.append(utf);}bufferedReader.close();return page;}private static String getDocumentAt(String urlString) {StringBuffer html_text = new StringBuffer();try {URL url = new URL(urlString);URLConnection conn = url.openConnection();BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));String line = null;while ((line = reader.readLine()) != null) html_text.append(line + ""\n"");reader.close();} catch (MalformedURLException e) {System.out.println(""��Ч��URL: "" + urlString);} catch (IOException e) {e.printStackTrace();}return html_text.toString();}@Overrideprotected void setUp() throws Exception {this.logger = new ConsoleLogger(ConsoleLogger.LEVEL_WARN);File repoFolder = new File(""target/repository"");removeRepository(repoFolder);InputStream repoConfigIn = getClass().getResourceAsStream(REPO_CONFIG_FILE);File tempRepoConfigFile = File.createTempFile(""repository"", ""xml"");tempRepoConfigFile.deleteOnExit();OutputStream tempRepoConfigOut = new FileOutputStream(tempRepoConfigFile);try {IOUtils.copy(repoConfigIn, tempRepoConfigOut);} finally {repoConfigIn.close();tempRepoConfigOut.close();}Repository repo = new TransientRepository(tempRepoConfigFile.getAbsolutePath(), ""target/repository"");ServerAdapterFactory factory = new ServerAdapterFactory();RemoteRepository remoteRepo = factory.getRemoteRepository(repo);reg = LocateRegistry.createRegistry(Registry.REGISTRY_PORT);reg.rebind(REMOTE_REPO_NAME, remoteRepo);session = repo.login(new SimpleCredentials(LOGIN, PWD.toCharArray()), WORKSPACE);InputStream nodeTypeDefIn = getClass().getResourceAsStream(MQ_JCR_XML_NODETYPES_FILE);JackrabbitInitializerHelper.setupRepository(session, new InputStreamReader(nodeTypeDefIn), """");}public ScoreModel(URL url) throws IOException {BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String line;list = new ArrayList<ScoreModelItem>();map = new HashMap<String, ScoreModelItem>();line = in.readLine();int n = 1;String[] rowAttrib;ScoreModelItem item;while ((line = in.readLine()) != null) {rowAttrib = line.split("";"");item = new ScoreModelItem(n, Double.valueOf(rowAttrib[3]), Double.valueOf(rowAttrib[4]), Double.valueOf(rowAttrib[2]), Double.valueOf(rowAttrib[5]), rowAttrib[1]);list.add(item);map.put(item.getHash(), item);n++;}in.close();}private void unzip(File filename) throws ZipException, IOException {ZipInputStream in = new ZipInputStream(new BufferedInputStream(new FileInputStream(filename)));ZipEntry entry = null;boolean first_entry = true;while ((entry = in.getNextEntry()) != null) {if (first_entry) {if (!entry.isDirectory()) {File subdir = new File(dir + File.separator + filename.getName().substring(0, filename.getName().length() - SUFFIX_ZIP.length()));if (!subdir.exists()) {subdir.mkdir();dir = subdir;}}first_entry = false;}if (entry.isDirectory()) {FileUtils.forceMkdir(new File(dir + File.separator + entry.getName()));} else {File outfile = new File(dir + File.separator + entry.getName());File outdir = new File(outfile.getAbsolutePath().substring(0, outfile.getAbsolutePath().length() - outfile.getName().length()));if (!outdir.exists()) FileUtils.forceMkdir(outdir);FileOutputStream fo = new FileOutputStream(outfile);BufferedOutputStream bos = new BufferedOutputStream(fo, BUFFER);int read;byte data[] = new byte[BUFFER];while ((read = in.read(data, 0, BUFFER)) != -1) {read_position++;bos.write(data, 0, read);}bos.flush();bos.close();}}in.close();}private static void generateTIFF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException {Debug.println(""ImageCropper.generateTIFF begin"");MapContext map_context = new MapContext(""test"", new Configuration());try {Map map = new Map(map_context, area_label, new Configuration());map.setCoordSys(ProjectionCategories.default_coordinate_system);map.setPatternOutline(new XPatternOutline(new XPatternPaint(Color.white)));String type = null;RasterLayer rlayer = getRasterLayer(map, raster_label, getLinuxPathEquivalent(source_filename), getLinuxPathEquivalent(diff_filename), type, getLinuxPathEquivalent(legend_filename));map.addLayer(rlayer, true);map.setBounds2DImage(bounds, true);Dimension image_dim = null;image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1);if (output_maximum_size > 0) {double width_factor = image_dim.getWidth() / output_maximum_size;double height_factor = image_dim.getHeight() / output_maximum_size;double factor = Math.max(width_factor, height_factor);if (factor > 1.0) {image_dim.setSize(image_dim.getWidth() / factor, image_dim.getHeight() / factor);}}map.setImageDimension(image_dim);map.scale();image_dim = new Dimension((int) map.getBounds2DImage().getWidth(), (int) map.getBounds2DImage().getHeight());Image image = null;Graphics gr = null;image = ImageCreator.getImage(image_dim);gr = image.getGraphics();try {map.paint(gr);} catch (Exception e) {Debug.println(""map.paint error: "" + e.getMessage());}String tiff_filename = """";try {tiff_filename = formatPath(category, timeseries, output_filename);new File(new_filename).mkdirs();Debug.println(""tiff_filename: "" + tiff_filename);BufferedImage bi = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_BYTE_INDEXED);bi.createGraphics().drawImage(image, 0, 0, null);File f = new File(tiff_filename);FileOutputStream out = new FileOutputStream(f);TIFFEncodeParam param = new TIFFEncodeParam();param.setCompression(TIFFEncodeParam.COMPRESSION_PACKBITS);TIFFImageEncoder encoder = (TIFFImageEncoder) TIFFCodec.createImageEncoder(""tiff"", out, param);encoder.encode(bi);out.close();} catch (IOException e) {Debug.println(""ImageCropper.generateTIFF TIFFCodec e: "" + e.getMessage());throw new IOException(""GenerateTIFF.IOException: "" + e);}PreparedStatement pstmt = null;try {String query = ""select Proj_ID, AccessType_Code from project "" + ""where Proj_Code= '"" + area_code.trim() + ""'"";Statement stmt = null;ResultSet rs = null;int proj_id = -1;int access_code = -1;stmt = con.createStatement();rs = stmt.executeQuery(query);if (rs.next()) {proj_id = rs.getInt(1);access_code = rs.getInt(2);}rs.close();stmt.close();String delete_raster = ""delete from rasterlayer where "" + ""Raster_Name='"" + tiff_name.trim() + ""' and Group_Code='"" + category.trim() + ""' and Proj_ID ="" + proj_id;Debug.println(""***** delete_raster: "" + delete_raster);pstmt = con.prepareStatement(delete_raster);boolean del = pstmt.execute();pstmt.close();String insert_raster = ""insert into rasterlayer(Raster_Name, "" + ""Group_Code, Proj_ID, Raster_TimeCode, Raster_Xmin, "" + ""Raster_Ymin, Raster_Area_Xmin, Raster_Area_Ymin, "" + ""Raster_Visibility, Raster_Order, Raster_Path, "" + ""AccessType_Code, Raster_TimePeriod) values(?,?,?,?, "" + ""?,?,?,?,?,?,?,?,?)"";pstmt = con.prepareStatement(insert_raster);pstmt.setString(1, tiff_name);pstmt.setString(2, category);pstmt.setInt(3, proj_id);pstmt.setString(4, timeseries);pstmt.setDouble(5, raster_bounds.getX());pstmt.setDouble(6, raster_bounds.getY());pstmt.setDouble(7, raster_bounds.getWidth());pstmt.setDouble(8, raster_bounds.getHeight());pstmt.setString(9, ""false"");int sequence = 0;if (tiff_name.endsWith(""DP"")) {sequence = 1;} else if (tiff_name.endsWith(""DY"")) {sequence = 2;} else if (tiff_name.endsWith(""DA"")) {sequence = 3;}pstmt.setInt(10, sequence);pstmt.setString(11, tiff_filename);pstmt.setInt(12, access_code);if (time == null) {pstmt.setNull(13, java.sql.Types.DATE);} else {pstmt.setDate(13, new java.sql.Date(time.getTimeInMillis()));}pstmt.executeUpdate();} catch (SQLException e) {Debug.println(""SQLException occurred e: "" + e.getMessage());con.rollback();throw new SQLException(""GenerateTIFF.SQLException: "" + e);} finally {pstmt.close();}} catch (Exception e) {Debug.println(""ImageCropper.generateTIFF e: "" + e.getMessage());}Debug.println(""ImageCropper.generateTIFF end"");}public static List<PluginInfo> getPluginInfos(String urlRepo) throws MalformedURLException, IOException {XStream xStream = new XStream();xStream.alias(""plugin"", PluginInfo.class);xStream.alias(""plugins"", List.class);List<PluginInfo> infos = null;URL url;BufferedReader in = null;StringBuilder buffer = new StringBuilder();try {url = new URL(urlRepo);in = new BufferedReader(new InputStreamReader(url.openStream()));String inputLine;while ((inputLine = in.readLine()) != null) {buffer.append(inputLine);}} finally {try {if (in != null) {in.close();}} catch (IOException ex) {Logger.getLogger(RemotePluginsManager.class.getName()).log(Level.SEVERE, null, ex);}}infos = (List<PluginInfo>) xStream.fromXML(buffer.toString());return infos;}"	5
"protected URLConnection getConnection(String uri, String data) throws MalformedURLException, IOException {URL url = new URL(uri);URLConnection conn = url.openConnection();conn.setConnectTimeout((int) MINUTE / 2);conn.setReadTimeout((int) MINUTE / 2);return conn;}void acessResource(ClassLoader cl, String resource) throws IOException {URL url = cl.getResource(resource);if (url == null) {println(""Ups can't find resource "" + resource);} else {println(""URL OK "" + resource + "" ->"" + url);InputStream is = url.openStream();try {is.read();} finally {is.close();}println(""Read OK "" + resource + "" ->"" + url);}}void createAgentProgram(PrintStream ps, String agentName, String agentID) throws IOException, ConfigException {Agent agent = service.getAgent(agentName);File instanceDir = getInstanceDir();double agent_timeout_seconds = engine.getTimeout();String ii = ""\"""";String agentScript = ""agent-"" + agentName + "".py"";String serviceScript = ""service.py"";Set<String> taskNames = agent.getTasks().keySet();File scriptDir = getService().getScriptDir();final boolean embedScripts = true;{ps.println(""#!/bin/sh"");ps.println(""umask 0077"");}for (String taskName : taskNames) {Task task = getService().getTask(taskName);String script = task.getScriptContent();if (embedScripts) {ps.println();ps.println(""cat > "" + task.getFile() + "" << "" + ii + ""EOF_"" + task.getFile() + ii);ps.println(script);ps.println(""EOF_"" + task.getFile());} else {File taskScriptFile = new File(instanceDir, task.getFile());PrintStream xs = new PrintStream(taskScriptFile);xs.print(script);xs.close();}}{PrintStream ss = null;if (embedScripts) {ps.println();ps.println(""cat > "" + serviceScript + "" << "" + ii + ""EOF_"" + serviceScript + ii);ss = ps;} else {File serviceScriptFile = new File(instanceDir, serviceScript);ss = new PrintStream(serviceScriptFile);}service.createServiceScript(ss);if (embedScripts) ps.println(""EOF_"" + serviceScript); else ss.close();}{URL url = new URL(engine.getAgentContextURL() + ""/"" + engine.getAgentURLPath());log.debug(""url for agent = "" + url.toExternalForm());PrintStream as = null;if (embedScripts) {ps.println();ps.println(""cat > "" + agentScript + "" << "" + ii + ""EOF_"" + agentScript + ii);as = ps;} else {File agentScriptFile = new File(instanceDir, agentScript);as = new PrintStream(agentScriptFile);}String tab[] = { """", """", """", """", """", """" };int i = 0;as.println(tab[i] + ""from wrapper import ZSIWrapper"");as.println(tab[i] + ""from service import Service"");as.println(tab[i] + ""import threading"");as.println(tab[i] + ""from sys import exit"");as.println();as.println(tab[i] + ""URL="" + ii + url.toString() + ii);as.println(tab[i] + ""agentID="" + ii + agentID + ii);as.println(tab[i] + ""instanceID="" + instanceID);as.println(tab[i] + ""instanceKey="" + ii + key + ii);as.println(tab[i] + ""timeout="" + ii + agent_timeout_seconds + ii);as.println(tab[i] + ""stop_flag=0"");as.println(tab[i] + ""kill_flag=0"");as.println();as.println(tab[i] + ""# Need extra port for each thread, "" + ""ZSIWrapper (actually ZSI) not thread save"");as.println(tab[i] + ""port0=ZSIWrapper(URL, agentID, instanceID, instanceKey, timeout)"");as.println(tab[i] + ""port0.setAgentStatus("" + Status.RUNNING.ordinal() + "")"");as.println();as.println(tab[i] + ""def create_namespace(service) :"");as.println(tab[i] + """" + ii + ""create a namespace for injection "" + ""into a task script and returns it."" + ii);as.println(tab[i] + ""# first get most (not all) variables"");as.print(tab[i] + ""arglist = [ "");int counter = 0;for (VarAttributes va : attributesMap.values()) {counter++;String varname = va.getName();if (Constants.VAR_STDOUT.equals(varname)) continue;VarTypeEnum vartype = va.getType();switch(vartype) {case DOUBLE:case STRING:case LONG:case BOOLEAN:case CHOICE:as.print(tab[i] + ""'"" + varname + ""'"");if (counter != attributesMap.size()) as.println("",\\"");break;case FILES:break;default:throw new RuntimeException(""unkown data type in switch"");}}as.println(""]"");as.println(tab[i] + ""vars=port0.getManyVars(arglist)"");as.println(tab[i] + ""namesp = vars "");as.println(tab[i] + ""namesp[ 'service' ] = service "");as.println(tab[i] + ""return namesp"");as.println();for (String taskName : taskNames) {Task task = getService().getTask(taskName);boolean background = task.isBackground();as.println(tab[i] + ""def task_"" + taskName + ""():"");{i++;as.println(tab[i] + ""try :"");if (background) {as.println(tab[i] + ""# as ZSIWrapper is not task save,"" + "" create a new one"");as.println(tab[i] + ""port_task=ZSIWrapper(URL, agentID, "" + ""instanceID, instanceKey, timeout)"");as.println(tab[i] + ""service = Service(port_task)"");} else {as.println(tab[i] + ""# this is foreground, "" + ""use port0 from current task"");as.println(tab[i] + ""service = Service(port0)"");}as.println(tab[i] + ""globals = create_namespace(service)"");as.println(tab[i] + ""locals = { }"");as.println(tab[i] + ""execfile('"" + task.getFile() + ""', globals, locals )"");as.println(tab[i] + ""except :"");as.println(tab[i] + ""port0.setTaskStatus('"" + taskName + ""', "" + Status.FAILED.ordinal() + "" )"");as.println(tab[i] + ""else :"");as.println(tab[i] + ""if kill_flag :"");as.println(tab[i] + ""task_exit_status = "" + Status.FAILED.ordinal());as.println(tab[i] + ""elif stop_flag :"");as.println(tab[i] + ""task_exit_status = "" + Status.TERMINATED.ordinal());as.println(tab[i] + ""else :"");as.println(tab[i] + ""task_exit_status = "" + Status.FINISHED.ordinal());as.println(tab[i] + ""port0.setTaskStatus('"" + taskName + ""', task_exit_status )"");as.println();i--;}}as.println(tab[i] + ""try:"");i++;as.println(tab[i] + ""tasklist = []"");as.println(tab[i] + ""action=None"");as.println(tab[i] + ""while action != '"" + Agent.STOP + ""' and action != '"" + Agent.KILL + ""' and action != '"" + Agent.FINISH + ""' :"");{i++;as.println(tab[i] + ""# print 'ACTION=', action"");as.println(tab[i] + ""action = port0.getAction()"");as.println(tab[i] + """");as.println(tab[i] + ""# cleanup tasklist (only to save memory)"");as.println(tab[i] + ""# In two cycles, don't change list during iter."");as.println(tab[i] + ""to_be_removed = []"");as.println(tab[i] + ""for tr2 in tasklist:"");as.println(tab[i] + ""if (not tr2.isAlive()):"");as.println(tab[i] + ""to_be_removed.append(tr2)"");as.println(tab[i] + ""for tr3 in to_be_removed:"");as.println(tab[i] + ""# print 'old task removed: ',tr3.getName()"");as.println(tab[i] + ""tasklist.remove(tr3)"");as.println(tab[i] + """");as.println(tab[i] + ""if action == None :"");as.println(tab[i] + ""# print 'processing None'"");as.println(tab[i] + ""None"");as.println(tab[i] + ""if action == '"" + Agent.FINISH + ""' :"");as.println(tab[i] + ""# print 'processing FINISH'"");as.println(tab[i] + ""None"");as.println(tab[i] + ""elif action == '"" + Agent.STOP + ""' :"");as.println(tab[i] + ""stop_flag=1"");as.println(tab[i] + ""# print 'processing STOP'"");String onStop = agent.onStop;if (onStop != null) {String function = ""task_"" + onStop;as.println(tab[i] + """" + function + ""()"");}as.println(tab[i] + """");as.println(tab[i] + ""elif action == '"" + Agent.KILL + ""' :"");as.println(tab[i] + ""kill_flag=1"");as.println(tab[i] + ""# print 'processing KILL'"");String onKill = agent.onKill;if (onKill != null) {String function = ""task_"" + onKill;as.println(tab[i] + """" + function + ""()"");}as.println(tab[i] + ""# This would be the place "" + ""to kill external programs"");as.println(tab[i] + ""port0.setAgentStatus("" + Status.FAILED.ordinal() + "")"");as.println(tab[i] + ""# exit without waiting for bg threads"");as.println(tab[i] + ""exit(13)"");as.println(tab[i] + """");for (String taskName : taskNames) {Task task = getService().getTask(taskName);boolean background = task.isBackground();as.println(tab[i] + ""elif action == '"" + Agent.TASK + taskName + ""':"");String function = ""task_"" + taskName;if (background) {as.println(tab[i] + ""# create, register and start task"");as.println(tab[i] + ""t = threading.Thread(target="" + function + "", name='"" + function + ""')"");as.println(tab[i] + ""tasklist.append(t)"");as.println(tab[i] + ""t.start()"");} else {as.println(tab[i] + """" + function + ""()"");}}as.println(tab[i] + ""else :"");as.println(tab[i] + ""print 'undefined case in agent script iov0j23fds, "" + ""action=', action"");i--;}as.println();as.println(tab[i] + ""# wait for running background tasks"");as.println(tab[i] + ""# print 'remaining threads (inclides demonic ones!):'"" + "", threading.activeCount()"");as.println(tab[i] + ""# for tr in threading.enumerate():"");as.println(tab[i] + ""#print 'remaining thread: ',"" + "" tr.getName()"");as.println(tab[i] + ""for tr2 in tasklist:"");as.println(tab[i] + ""# print 'joining with ',tr2.getName()"");as.println(tab[i] + ""tr2.join()"");i--;as.println(tab[i] + ""# Set agent status"");as.println(tab[i] + ""except :"");as.println(tab[i] + ""port0.setAgentStatus("" + Status.FAILED.ordinal() + "")"");as.println(tab[i] + ""else :"");as.println(tab[i] + ""if kill_flag :"");as.println(tab[i] + ""agent_exit_status = "" + Status.FAILED.ordinal());as.println(tab[i] + ""elif stop_flag :"");as.println(tab[i] + ""agent_exit_status = "" + Status.TERMINATED.ordinal());as.println(tab[i] + ""else :"");as.println(tab[i] + ""agent_exit_status = "" + Status.FINISHED.ordinal());as.println(tab[i] + ""port0.setAgentStatus( agent_exit_status )"");if (embedScripts) ps.println(""EOF_"" + agentScript); else as.close();}for (String agentFileName : agent.getFilesSet()) {ps.println();File agentRelFile = new File(agentFileName);File directory = agentRelFile.getParentFile();if (directory != null) {ps.println(""mkdir -p "" + directory.getPath());}ps.println(""cat > "" + agentFileName + "" << "" + ii + ""EOF_"" + agentFileName + ii);File file = new File(scriptDir, agentFileName);byte bytes[] = FileUtils.readFileToByteArray(file);ps.write(bytes);ps.println();ps.println(""EOF_"" + agentFileName);}if (embedScripts) {ps.println(""SKIP=`awk '/^__ARCHIVE_FOLLOWS__/ { print NR + 1; exit 0; }' $0`"");ps.println(""tail -n +$SKIP $0 | gzip -dc | tar x "");ps.println(""python -u "" + agentScript);ps.println(""exit 0"");ps.println(""__ARCHIVE_FOLLOWS__"");java.io.InputStream istream = this.getClass().getClassLoader().getResourceAsStream(""sc/fgrid/agent.tar.gz"");IOUtils.copy(istream, ps);} else {String pypath = engine.getAgentPythonPath();ps.println(""export PYTHONPATH="" + ii + pypath + ii);ps.println(""python -u "" + agentScript);ps.println(""exit 0"");}}private List<String[]> retrieveData(String query) {List<String[]> data = new Vector<String[]>();query = query.replaceAll(""\\s"", ""+"");String q = ""http://www.uniprot.org/uniprot/?query="" + query + ""&format=tab&columns=id,protein%20names,organism"";try {URL url = new URL(q);BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String line = """";reader.readLine();while ((line = reader.readLine()) != null) {String[] st = line.split(""\t"");String[] d = new String[] { st[0], st[1], st[2] };data.add(d);}reader.close();if (data.size() == 0) {JOptionPane.showMessageDialog(this, ""No data found for query"");}} catch (MalformedURLException e) {System.err.println(""Query "" + q + "" caused exception: "");e.printStackTrace();} catch (Exception e) {System.err.println(""Query "" + q + "" caused exception: "");e.printStackTrace();}return data;}public void add(Site site) throws Exception {DBOperation dbo = null;Connection connection = null;PreparedStatement preparedStatement = null;ResultSet resultSet = null;try {String sqlStr = ""insert into t_ip_site (id,name,description,ascii_name,site_path,remark_number,increment_index,use_status,appserver_id) VALUES(?,?,?,?,?,?,?,?,?)"";dbo = createDBOperation();connection = dbo.getConnection();connection.setAutoCommit(false);preparedStatement = connection.prepareStatement(sqlStr);preparedStatement.setInt(1, site.getSiteID());preparedStatement.setString(2, site.getName());preparedStatement.setString(3, site.getDescription());preparedStatement.setString(4, site.getAsciiName());preparedStatement.setString(5, site.getPath());preparedStatement.setInt(6, site.getRemarkNumber());preparedStatement.setString(7, site.getIncrementIndex().trim());preparedStatement.setString(8, String.valueOf(site.getUseStatus()));preparedStatement.setString(9, String.valueOf(site.getAppserverID()));preparedStatement.executeUpdate();String[] path = new String[1];path[0] = site.getPath();selfDefineAdd(path, site, connection, preparedStatement);connection.commit();int resID = site.getSiteID() + Const.SITE_TYPE_RES;String resName = site.getName();int resTypeID = Const.RES_TYPE_ID;int operateTypeID = Const.OPERATE_TYPE_ID;String remark = """";AuthorityManager am = new AuthorityManager();am.createExtResource(Integer.toString(resID), resName, resTypeID, operateTypeID, remark);site.wirteFile();} catch (SQLException ex) {connection.rollback();log.error(""����վ��ʧ��!"", ex);throw ex;} finally {close(resultSet, null, preparedStatement, connection, dbo);}}public void delete(Site site) throws Exception {DBOperation dbo = null;Connection connection = null;PreparedStatement preparedStatement = null;ResultSet resultSet = null;try {String chkSql = ""select id from t_ip_doc where channel_path=?"";dbo = createDBOperation();connection = dbo.getConnection();connection.setAutoCommit(false);String[] selfDefinePath = getSelfDefinePath(site.getPath(), ""1"", connection, preparedStatement, resultSet);selfDefineDelete(selfDefinePath, connection, preparedStatement);preparedStatement = connection.prepareStatement(chkSql);preparedStatement.setString(1, site.getPath());resultSet = preparedStatement.executeQuery();if (resultSet.next()) {throw new Exception(""ɾ��ʧ�ܣ�"" + site.getName() + ""���Ѿ����ĵ����ڣ�"");} else {String sqlStr = ""delete from t_ip_site where site_path=?"";dbo = createDBOperation();connection = dbo.getConnection();preparedStatement = connection.prepareStatement(sqlStr);preparedStatement.setString(1, site.getPath());preparedStatement.executeUpdate();}connection.commit();} catch (SQLException ex) {connection.rollback();throw ex;} finally {close(resultSet, null, preparedStatement, connection, dbo);}}public void update(Site site) throws Exception {DBOperation dbo = null;Connection connection = null;PreparedStatement preparedStatement = null;ResultSet resultSet = null;String exp = site.getExtendParent();String path = site.getPath();try {String sqlStr = ""update t_ip_site set id=?,name=?,description=?,ascii_name=?,remark_number=?,increment_index=?,use_status=?,appserver_id=? where id=?"";dbo = createDBOperation();connection = dbo.getConnection();connection.setAutoCommit(false);String[] selfDefinePath = getSelfDefinePath(path, exp, connection, preparedStatement, resultSet);selfDefineDelete(selfDefinePath, connection, preparedStatement);selfDefineAdd(selfDefinePath, site, connection, preparedStatement);preparedStatement = connection.prepareStatement(sqlStr);preparedStatement.setInt(1, site.getSiteID());preparedStatement.setString(2, site.getName());preparedStatement.setString(3, site.getDescription());preparedStatement.setString(4, site.getAsciiName());preparedStatement.setInt(5, site.getRemarkNumber());preparedStatement.setString(6, site.getIncrementIndex().trim());preparedStatement.setString(7, String.valueOf(site.getUseStatus()));preparedStatement.setString(8, String.valueOf(site.getAppserverID()));preparedStatement.setInt(9, site.getSiteID());preparedStatement.executeUpdate();connection.commit();int resID = site.getSiteID() + Const.SITE_TYPE_RES;StructResource sr = new StructResource();sr.setResourceID(Integer.toString(resID));sr.setOperateID(Integer.toString(1));sr.setOperateTypeID(Const.OPERATE_TYPE_ID);sr.setTypeID(Const.RES_TYPE_ID);StructAuth sa = new AuthorityManager().getExternalAuthority(sr);int authID = sa.getAuthID();if (authID == 0) {String resName = site.getName();int resTypeID = Const.RES_TYPE_ID;int operateTypeID = Const.OPERATE_TYPE_ID;String remark = """";AuthorityManager am = new AuthorityManager();am.createExtResource(Integer.toString(resID), resName, resTypeID, operateTypeID, remark);}site.wirteFile();} catch (SQLException ex) {connection.rollback();log.error(""����վ������ʧ��!"", ex);throw ex;} finally {close(resultSet, null, preparedStatement, connection, dbo);}}public static void downloadURLNow(URL url, File to, SHA1Sum sha1, boolean force) throws Exception {{String sep = System.getProperty(""file.separator"");String folders = to.getPath();String path = """";for (int i = 0; i < folders.length(); i++) {path += folders.charAt(i);if (path.endsWith(sep)) {File f = new File(path);if (!f.exists()) f.mkdir();if (!f.isDirectory()) {Out.error(URLDownloader.class, path + "" is not a directory!"");return;}}}}Out.info(URLDownloader.class, ""Downloading "" + url.toExternalForm());URLConnection uc = url.openConnection();DataInputStream is = new DataInputStream(new BufferedInputStream(uc.getInputStream()));FileOutputStream os = new FileOutputStream(to);byte[] b = new byte[1024];int fileLength = uc.getHeaderFieldInt(""Content-Length"", 0) / b.length;Task task = null;if (fileLength > 0) task = TaskManager.createTask(url.toExternalForm(), fileLength, ""kB"");do {int c = is.read(b);if (c == -1) break;os.write(b, 0, c);if (task != null) task.advanceProgress();} while (true);if (task != null) task.complete();os.close();is.close();}public String encrypt(String password) {if (password.length() == 40) {return password;}if (salt != null) {password = password + salt;}MessageDigest messageDigest = null;try {messageDigest = MessageDigest.getInstance(""SHA1"");} catch (NoSuchAlgorithmException e) {throw new IllegalArgumentException(e.getMessage(), e);}messageDigest.reset();messageDigest.update(password.getBytes());final byte[] bytes = messageDigest.digest();String encrypted = new BigInteger(1, bytes).toString(16);if (encrypted.length() < 40) {final StringBuilder builder = new StringBuilder(encrypted);while (builder.length() < 40) {builder.insert(0, '0');}encrypted = builder.toString();}return encrypted;}@Testpublic void testWriteAndRead() throws Exception {JCFS.configureLoopback(dir);RFile file = new RFile(""testreadwrite.txt"");RFileOutputStream out = new RFileOutputStream(file);out.write(""test"".getBytes(""utf-8""));out.close();RFileInputStream in = new RFileInputStream(file);byte[] buffer = new byte[4];int readCount = in.read(buffer);in.close();assertEquals(4, readCount);String resultRead = new String(buffer, ""utf-8"");assertEquals(""test"", resultRead);}"	5
"public void migrate(InputMetadata meta, InputStream input, OutputCreator outputCreator) throws IOException, ResourceMigrationException {RestartInputStream restartInput = new RestartInputStream(input);Match match = resourceIdentifier.identifyResource(meta, restartInput);restartInput.restart();if (match != null) {reporter.reportNotification(notificationFactory.createLocalizedNotification(NotificationType.INFO, ""migration-resource-migrating"", new Object[] { meta.getURI(), match.getTypeName(), match.getVersionName() }));processMigrationSteps(match, restartInput, outputCreator);} else {reporter.reportNotification(notificationFactory.createLocalizedNotification(NotificationType.INFO, ""migration-resource-copying"", new Object[] { meta.getURI() }));IOUtils.copyAndClose(restartInput, outputCreator.createOutputStream());}}private void transformFile(File input, File output, Cipher cipher, boolean compress, String progressMessage) throws IOException {FileInputStream fileInputStream = new FileInputStream(input);InputStream inputStream;if (progressMessage != null) {inputStream = new ProgressMonitorInputStream(null, progressMessage, fileInputStream);} else {inputStream = fileInputStream;}FilterInputStream is = new BufferedInputStream(inputStream);FilterOutputStream os = new BufferedOutputStream(new FileOutputStream(output));FilterInputStream fis;FilterOutputStream fos;if (compress) {fis = is;fos = new GZIPOutputStream(new CipherOutputStream(os, cipher));} else {fis = new GZIPInputStream(new CipherInputStream(is, cipher));fos = os;}byte[] buffer = new byte[cipher.getBlockSize() * blocksInBuffer];int readLength = fis.read(buffer);while (readLength != -1) {fos.write(buffer, 0, readLength);readLength = fis.read(buffer);}if (compress) {GZIPOutputStream gos = (GZIPOutputStream) fos;gos.finish();}fos.close();fis.close();}public static String fetchUrl(String urlString) {try {URL url = new URL(urlString);BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String line = null;StringBuilder builder = new StringBuilder();while ((line = reader.readLine()) != null) {builder.append(line);}reader.close();return builder.toString();} catch (MalformedURLException e) {} catch (IOException e) {}return """";}private void run(String[] args) throws Throwable {ArgParser parser = new ArgParser(""Run an experiment"");parser.addOptions(this, true);args = parser.matchAllArgs(args, 0, ArgParserOption.EXIT_ON_ERROR, ArgParserOption.STOP_FIRST_UNMATCHED);if (log4jFile != null) {logger.info(""Using another log4j configuration: %s"", log4jFile);PropertyConfigurator.configure(log4jFile.getAbsolutePath());}final TreeMap<TaskName, Class<Task>> tasks = GenericHelper.newTreeMap();final Enumeration<URL> e = About.class.getClassLoader().getResources(EXPERIMENT_PACKAGES);while (e.hasMoreElements()) {final URL url = e.nextElement();logger.debug(""Got URL %s"", url);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = in.readLine()) != null) {String packageName = line;getTasks(url, tasks, packageName);}}getTasks(null, tasks, getClass().getPackage().getName());if (tasks.isEmpty()) {logger.fatal(""I did not find any valid experiment (service bpiwowar.experiments.ExperimentListProvider)"");System.exit(1);}if (args.length == 0 || args[0].equals(""list"")) {System.out.format(""Available experiments:%n"");TreeMapArray<PackageName, String> map = TreeMapArray.newInstance();for (Entry<TaskName, Class<Task>> entry : tasks.entrySet()) {TaskName task = entry.getKey();if (showClassNames) map.add(task.packageName, String.format(""%s (%s)"", task.name, entry.getValue().toString())); else map.add(task.packageName, task.name);}Stack<PackageName> ancestors = new Stack<PackageName>();for (Entry<PackageName, ArrayList<String>> entry : map.entrySet()) {final PackageName key = entry.getKey();while (!ancestors.isEmpty() && key.commonPrefixLength(ancestors.peek()) != ancestors.peek().getLength()) ancestors.pop();int nbAncestors = ancestors.size();int c = nbAncestors > 0 ? ancestors.peek().getLength() : 0;StringBuilder s = new StringBuilder();for (int i = 0; i < c; i++) s.append(""|"");for (int i = c; i < key.getLength(); i++) {s.append(""|"");ancestors.add(new PackageName(key, i + 1));System.out.format(""%s%n"", s);System.out.format(""%s+ [%s]%n"", s, ancestors.peek());nbAncestors++;}String prefix = s.toString();for (String task : entry.getValue()) System.out.format(""%s|- %s%n"", prefix, task);ancestors.add(key);}return;} else if (args[0].equals(SEARCH_COMMAND)) {final class Options {@OrderedArgument(required = true)String search;}Options options = new Options();ArgParser ap = new ArgParser(SEARCH_COMMAND);ap.addOptions(options);ap.matchAllArgs(args, 1);logger.info(""Searching for %s"", options.search);for (Entry<TaskName, Class<Task>> entry : tasks.entrySet()) {TaskName taskname = entry.getKey();if (taskname.name.contains(options.search)) {System.err.format(""[*] %s - %s%n%s%n"", taskname, entry.getValue(), entry.getValue().getAnnotation(TaskDescription.class).description());}}return;}String taskName = args[0];args = Arrays.copyOfRange(args, 1, args.length);ArrayList<Class<Task>> matching = GenericHelper.newArrayList();for (Entry<TaskName, Class<Task>> entry : tasks.entrySet()) {if (entry.getKey().name.equals(taskName)) matching.add(entry.getValue());}if (matching.isEmpty()) {System.err.println(""No task match "" + taskName);System.exit(1);}if (matching.size() > 1) {System.err.println(""Too many tasks match "" + taskName);System.exit(1);}Class<Task> taskClass = matching.get(0);logger.info(""Running experiment "" + taskClass.getCanonicalName());Task task = taskClass.newInstance();int errorCode = 0;try {task.init(args);if (xstreamOutput != null) {OutputStream out;if (xstreamOutput.toString().equals(""-"")) out = System.out; else out = new FileOutputStream(xstreamOutput);logger.info(""Serializing the object into %s"", xstreamOutput);new XStream().toXML(task, out);out.close();} else {errorCode = task.run();}logger.info(""Finished task"");} catch (Throwable t) {if (t instanceof InvocationTargetException && t.getCause() != null) {t = t.getCause();}logger.error(""Exception thrown while executing the action:%n%s%n"", t);errorCode = 2;}System.exit(errorCode);}protected ExternalDecoder(InputStream source, Process process) {super(source);this.process = process;this.processStdOut = process.getInputStream();this.processStdIn = process.getOutputStream();new Thread() {@Overridepublic void run() {try {IOUtils.copy(getSource(), processStdIn);System.err.println(""Copy done."");close();} catch (IOException e) {e.printStackTrace();IOUtils.closeQuietly(ExternalDecoder.this);}}}.start();}@Overridepublic void run() {try {IOUtils.copy(getSource(), processStdIn);System.err.println(""Copy done."");close();} catch (IOException e) {e.printStackTrace();IOUtils.closeQuietly(ExternalDecoder.this);}}public int subclass(int objectId, String description) throws FidoDatabaseException, ObjectNotFoundException {try {Connection conn = null;Statement stmt = null;ResultSet rs = null;try {String sql = ""insert into Objects (Description) "" + ""values ('"" + description + ""')"";conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();if (contains(stmt, objectId) == false) throw new ObjectNotFoundException(objectId);stmt.executeUpdate(sql);int id;sql = ""select currval('objects_objectid_seq')"";rs = stmt.executeQuery(sql);if (rs.next() == false) throw new SQLException(""No rows returned from select currval() query""); else id = rs.getInt(1);ObjectLinkTable objectLinkList = new ObjectLinkTable();objectLinkList.linkObjects(stmt, id, ""isa"", objectId);conn.commit();return id;} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (rs != null) rs.close();if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public int instantiate(int objectId, String description) throws FidoDatabaseException, ObjectNotFoundException, ClassLinkTypeNotFoundException {try {Connection conn = null;Statement stmt = null;ResultSet rs = null;try {String sql = ""insert into Objects (Description) "" + ""values ('"" + description + ""')"";conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();if (contains(stmt, objectId) == false) throw new ObjectNotFoundException(objectId);stmt.executeUpdate(sql);int id;sql = ""select currval('objects_objectid_seq')"";rs = stmt.executeQuery(sql);if (rs.next() == false) throw new SQLException(""No rows returned from select currval() query""); else id = rs.getInt(1);ObjectLinkTable objectLinkList = new ObjectLinkTable();objectLinkList.linkObjects(stmt, id, ""instance"", objectId);conn.commit();return id;} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (rs != null) rs.close();if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public void deleteInstance(int instanceId) throws FidoDatabaseException, ObjectNotFoundException {try {Connection conn = null;Statement stmt = null;try {conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();if (contains(stmt, instanceId) == false) throw new ObjectNotFoundException(instanceId);ObjectLinkTable objectLinkList = new ObjectLinkTable();ObjectAttributeTable objectAttributeList = new ObjectAttributeTable();objectLinkList.deleteObject(stmt, instanceId);objectAttributeList.deleteObject(stmt, instanceId);stmt.executeUpdate(""delete from Objects where ObjectId = "" + instanceId);conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}private File downloadURL(URL url) {MerlotDebug.msg(""Downloading URL: "" + url);String filename = url.getFile();if (filename.indexOf('/') >= 0) {filename = filename.substring(filename.lastIndexOf('/') + 1);}File userPluginsDir = new File(XMLEditorSettings.USER_MERLOT_DIR, ""plugins"");File cache = new File(userPluginsDir, filename);try {if (!userPluginsDir.exists()) {userPluginsDir.mkdirs();}URLConnection connection = url.openConnection();if (cache.exists() && cache.canRead()) {connection.connect();long remoteTimestamp = connection.getLastModified();if (remoteTimestamp == 0 || remoteTimestamp > cache.lastModified()) {cache = downloadContent(connection, cache);} else {MerlotDebug.msg(""Using cached version for URL: "" + url);}} else {cache = downloadContent(connection, cache);}} catch (IOException ex) {MerlotDebug.exception(ex);}if (cache != null && cache.exists()) {return cache;} else {return null;}}"	5
"@Overridepublic User updateUser(User bean) throws SitoolsException {checkUser();Connection cx = null;try {cx = ds.getConnection();cx.setAutoCommit(false);PreparedStatement st;int i = 1;if (bean.getSecret() != null && !"""".equals(bean.getSecret())) {st = cx.prepareStatement(jdbcStoreResource.UPDATE_USER_WITH_PW);st.setString(i++, bean.getFirstName());st.setString(i++, bean.getLastName());st.setString(i++, bean.getSecret());st.setString(i++, bean.getEmail());st.setString(i++, bean.getIdentifier());} else {st = cx.prepareStatement(jdbcStoreResource.UPDATE_USER_WITHOUT_PW);st.setString(i++, bean.getFirstName());st.setString(i++, bean.getLastName());st.setString(i++, bean.getEmail());st.setString(i++, bean.getIdentifier());}st.executeUpdate();st.close();if (bean.getProperties() != null) {deleteProperties(bean.getIdentifier(), cx);createProperties(bean, cx);}if (!cx.getAutoCommit()) {cx.commit();}} catch (SQLException e) {try {cx.rollback();} catch (SQLException e1) {throw new SitoolsException(""UPDATE_USER ROLLBACK"" + e1.getMessage(), e1);}throw new SitoolsException(""UPDATE_USER "" + e.getMessage(), e);} finally {closeConnection(cx);}return getUserById(bean.getIdentifier());}private static void copy(File source, File target) throws IOException {FileChannel sourceChannel = new FileInputStream(source).getChannel();FileChannel targetChannel = new FileOutputStream(target).getChannel();sourceChannel.transferTo(0, sourceChannel.size(), targetChannel);sourceChannel.close();targetChannel.close();}public boolean smsResponse(String customerPhoneNumber) throws ClientProtocolException, IOException {boolean message = true;String textMessage = ""La%20sua%20prenotazione%20e%60%20andata%20a%20buon%20fine"";DefaultHttpClient httpclient = new DefaultHttpClient();String uri = ""http://smswizard.globalitalia.it/smsgateway/send.asp"";String other = ""http://smswizard.globalitalia.it/smsgateway/send.asp"";String url = uri + ""?"" + ""Account=sardricerche"" + ""&Password=v8LomdZT"" + ""&PhoneNumbers="" + ""%2b393285683484"" + ""&SMSData="" + textMessage + ""&Recipients=1"" + ""&Sender=Web Hotel"" + ""&ID=11762"";String urlProva = other + ""?"" + ""Account=sardricerche"" + ""&Password=v8LomdZT"" + ""&PhoneNumbers="" + customerPhoneNumber + ""&SMSData="" + textMessage + ""&Recipients=1"" + ""&Sender=+393337589951"" + ""&ID=11762"";HttpPost httpPost = new HttpPost(urlProva);HttpResponse response = httpclient.execute(httpPost);HttpEntity entity = response.getEntity();return message;}private void retrieveData() {StringBuffer obsBuf = new StringBuffer();try {URL url = new URL(getProperty(""sourceURL""));BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String lineIn = null;while ((lineIn = in.readLine()) != null) {if (GlobalProps.DEBUG) {logger.log(Level.FINE, ""WebSource retrieveData: "" + lineIn);}obsBuf.append(lineIn);}String fmt = getProperty(""dataFormat"");if (GlobalProps.DEBUG) {logger.log(Level.FINE, ""Raw: "" + obsBuf.toString());}if (""NWS XML"".equals(fmt)) {obs = new NWSXmlObservation(obsBuf.toString());}} catch (Exception e) {logger.log(Level.SEVERE, ""Can't connect to: "" + getProperty(""sourceURL""));if (GlobalProps.DEBUG) {e.printStackTrace();}}}protected static String getInitialUUID() {if (myRand == null) {myRand = new Random();}long rand = myRand.nextLong();String sid;try {sid = InetAddress.getLocalHost().toString();} catch (UnknownHostException e) {sid = Thread.currentThread().getName();}StringBuffer sb = new StringBuffer();sb.append(sid);sb.append("":"");sb.append(Long.toString(rand));MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {throw new OMException(e);}md5.update(sb.toString().getBytes());byte[] array = md5.digest();StringBuffer sb2 = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;sb2.append(Integer.toHexString(b));}int begin = myRand.nextInt();if (begin < 0) begin = begin * -1;begin = begin % 8;return sb2.toString().substring(begin, begin + 18).toUpperCase();}public void invoke(MessageContext msgContext) throws AxisFault {log.debug(""Enter: MD5AttachHandler::invoke"");try {Message msg = msgContext.getRequestMessage();SOAPConstants soapConstants = msgContext.getSOAPConstants();org.apache.axis.message.SOAPEnvelope env = (org.apache.axis.message.SOAPEnvelope) msg.getSOAPEnvelope();org.apache.axis.message.SOAPBodyElement sbe = env.getFirstBody();org.w3c.dom.Element sbElement = sbe.getAsDOM();org.w3c.dom.Node n = sbElement.getFirstChild();for (; n != null && !(n instanceof org.w3c.dom.Element); n = n.getNextSibling()) ;org.w3c.dom.Element paramElement = (org.w3c.dom.Element) n;String href = paramElement.getAttribute(soapConstants.getAttrHref());org.apache.axis.Part ap = msg.getAttachmentsImpl().getAttachmentByReference(href);javax.activation.DataHandler dh = org.apache.axis.attachments.AttachmentUtils.getActivationDataHandler(ap);org.w3c.dom.Node timeNode = paramElement.getFirstChild();long startTime = -1;if (timeNode != null && timeNode instanceof org.w3c.dom.Text) {String startTimeStr = ((org.w3c.dom.Text) timeNode).getData();startTime = Long.parseLong(startTimeStr);}long receivedTime = System.currentTimeMillis();long elapsedTime = -1;if (startTime > 0) elapsedTime = receivedTime - startTime;String elapsedTimeStr = elapsedTime + """";java.security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");java.io.InputStream attachmentStream = dh.getInputStream();int bread = 0;byte[] buf = new byte[64 * 1024];do {bread = attachmentStream.read(buf);if (bread > 0) {md.update(buf, 0, bread);}} while (bread > -1);attachmentStream.close();buf = null;String contentType = dh.getContentType();if (contentType != null && contentType.length() != 0) {md.update(contentType.getBytes(""US-ASCII""));}sbe = env.getFirstBody();sbElement = sbe.getAsDOM();n = sbElement.getFirstChild();for (; n != null && !(n instanceof org.w3c.dom.Element); n = n.getNextSibling()) ;paramElement = (org.w3c.dom.Element) n;String MD5String = org.apache.axis.encoding.Base64.encode(md.digest());String senddata = "" elapsedTime="" + elapsedTimeStr + "" MD5="" + MD5String;paramElement.appendChild(paramElement.getOwnerDocument().createTextNode(senddata));sbe = new org.apache.axis.message.SOAPBodyElement(sbElement);env.clearBody();env.addBodyElement(sbe);msg = new Message(env);msgContext.setResponseMessage(msg);} catch (Exception e) {log.error(Messages.getMessage(""exception00""), e);throw AxisFault.makeFault(e);}log.debug(""Exit: MD5AttachHandler::invoke"");}public static byte[] getHashedID(String ID) {try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.reset();md5.update(ID.getBytes());byte[] digest = md5.digest();byte[] bytes = new byte[WLDB_ID_SIZE];for (int i = 0; i < bytes.length; i++) {bytes[i] = digest[i];}return bytes;} catch (NoSuchAlgorithmException exception) {System.err.println(""Java VM is not compatible"");return null;}}private boolean saveDocumentXml(String repository, String tempRepo) {boolean result = true;try {XPath xpath = XPathFactory.newInstance().newXPath();String expression = ""documents/document"";InputSource insource = new InputSource(new FileInputStream(tempRepo + File.separator + AppConstants.DMS_XML));NodeList nodeList = (NodeList) xpath.evaluate(expression, insource, XPathConstants.NODESET);for (int i = 0; i < nodeList.getLength(); i++) {Node node = nodeList.item(i);System.out.println(node.getNodeName());DocumentModel document = new DocumentModel();NodeList childs = node.getChildNodes();for (int j = 0; j < childs.getLength(); j++) {Node child = childs.item(j);if (child.getNodeType() == Node.ELEMENT_NODE) {if (child.getNodeName() != null && child.getFirstChild() != null && child.getFirstChild().getNodeValue() != null) {System.out.println(child.getNodeName() + ""::"" + child.getFirstChild().getNodeValue());}if (Document.FLD_ID.equals(child.getNodeName())) {if (child.getFirstChild() != null) {String szId = child.getFirstChild().getNodeValue();if (szId != null && szId.length() > 0) {try {document.setId(new Long(szId));} catch (Exception e) {e.printStackTrace();}}}} else if (document.FLD_NAME.equals(child.getNodeName())) {document.setName(child.getFirstChild().getNodeValue());document.setTitle(document.getName());document.setDescr(document.getName());document.setExt(getExtension(document.getName()));} else if (document.FLD_LOCATION.equals(child.getNodeName())) {document.setLocation(child.getFirstChild().getNodeValue());} else if (document.FLD_OWNER.equals(child.getNodeName())) {Long id = new Long(child.getFirstChild().getNodeValue());User user = new UserModel();user.setId(id);user = (User) userService.find(user);if (user != null && user.getId() != null) {document.setOwner(user);}}}}boolean isSave = docService.save(document);if (isSave) {String repo = preference.getRepository();Calendar calendar = Calendar.getInstance();StringBuffer sbRepo = new StringBuffer(repo);sbRepo.append(File.separator);StringBuffer sbFolder = new StringBuffer(sdf.format(calendar.getTime()));sbFolder.append(File.separator).append(calendar.get(Calendar.HOUR_OF_DAY));File fileFolder = new File(sbRepo.append(sbFolder).toString());if (!fileFolder.exists()) {fileFolder.mkdirs();}FileChannel fcSource = null, fcDest = null;try {StringBuffer sbFile = new StringBuffer(fileFolder.getAbsolutePath());StringBuffer fname = new StringBuffer(document.getId().toString());fname.append(""."").append(document.getExt());sbFile.append(File.separator).append(fname);fcSource = new FileInputStream(tempRepo + File.separator + document.getName()).getChannel();fcDest = new FileOutputStream(sbFile.toString()).getChannel();fcDest.transferFrom(fcSource, 0, fcSource.size());document.setLocation(sbFolder.toString());document.setSize(fcSource.size());log.info(""Batch upload file "" + document.getName() + "" into ["" + document.getLocation() + ""] as "" + document.getName() + ""."" + document.getExt());folder.setId(DEFAULT_FOLDER);folder = (Folder) folderService.find(folder);if (folder != null && folder.getId() != null) {document.setFolder(folder);}workspace.setId(DEFAULT_WORKSPACE);workspace = (Workspace) workspaceService.find(workspace);if (workspace != null && workspace.getId() != null) {document.setWorkspace(workspace);}user.setId(DEFAULT_USER);user = (User) userService.find(user);if (user != null && user.getId() != null) {document.setCrtby(user.getId());}document.setCrtdate(new Date());document = (DocumentModel) docService.resetDuplicateDocName(document);docService.save(document);DocumentIndexer.indexDocument(preference, document);} catch (FileNotFoundException notFoundEx) {log.error(""saveFile file not found: "" + document.getName(), notFoundEx);} catch (IOException ioEx) {log.error(""saveFile IOException: "" + document.getName(), ioEx);} finally {try {if (fcSource != null) {fcSource.close();}if (fcDest != null) {fcDest.close();}} catch (Exception e) {log.error(e.getMessage(), e);}}}}} catch (Exception e) {result = false;e.printStackTrace();}return result;}public String hash(String text) {try {MessageDigest md = MessageDigest.getInstance(hashFunction);md.update(text.getBytes(charset));byte[] raw = md.digest();return new String(encodeHex(raw));} catch (Exception e) {throw new RuntimeException(e);}}String readArticleFromFile(String urlStr) {String docbase = getDocumentBase().toString();int pos = docbase.lastIndexOf('/');if (pos > -1) {docbase = docbase.substring(0, pos + 1);} else {docbase = """";}docbase = docbase + urlStr;String prog = """";try {URL url = new URL(docbase);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));if (in != null) {while (true) {try {String mark = in.readLine();if (mark == null) break;prog = prog + mark + ""\n"";} catch (Exception e) {}}in.close();}} catch (Exception e) {}return prog;}"	5
"private static void copyContent(final File srcFile, final File dstFile, final boolean gzipContent) throws IOException {final File dstFolder = dstFile.getParentFile();dstFolder.mkdirs();if (!dstFolder.exists()) {throw new RuntimeException(""Unable to create the folder "" + dstFolder.getAbsolutePath());}final InputStream in = new FileInputStream(srcFile);OutputStream out = new FileOutputStream(dstFile);if (gzipContent) {out = new GZIPOutputStream(out);}try {final byte[] buffer = new byte[1024];int read;while ((read = in.read(buffer)) != -1) {out.write(buffer, 0, read);}} finally {in.close();out.close();}}public static boolean isUrlAvailable(String url) {boolean flag = true;try {URLConnection conn = (new URL(url)).openConnection();conn.setConnectTimeout(5000);conn.setReadTimeout(5000);conn.connect();if (conn.getDate() == 0) {flag = false;}} catch (IOException e) {log.error(e);flag = false;}return flag;}public Mappings read() {Mappings result = null;InputStream stream = null;try {XMLParser parser = new XMLParser();stream = url.openStream();result = parser.parse(stream);} catch (Throwable e) {log.error(""Error in loading dozer mapping file url: ["" + url + ""] : "" + e);MappingUtils.throwMappingException(e);} finally {try {if (stream != null) {stream.close();}} catch (IOException e) {MappingUtils.throwMappingException(e);}}return result;}public static String encrypt(String txt) throws Exception {MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(txt.getBytes(""UTF-8""));byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}private static void process(String urlstring) {try {URL url = new URL(urlstring);System.out.println(""Connecting to "" + url);URLConnection connection = url.openConnection();connection.connect();BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));for (String line; (line = in.readLine()) != null; ) if (line.startsWith(MARKER)) {System.out.println(TAG.matcher(line).replaceAll(""""));}in.close();} catch (IOException ioe) {System.err.println("""" + ioe);}}public void exportFile() {String expfolder = PropertyHandler.getInstance().getProperty(PropertyHandler.KINDLE_EXPORT_FOLDER_KEY);File out = new File(expfolder + File.separator + previewInfo.getTitle() + "".prc"");File f = new File(absPath);try {FileOutputStream fout = new FileOutputStream(out);FileInputStream fin = new FileInputStream(f);int read = 0;byte[] buffer = new byte[1024 * 1024];while ((read = fin.read(buffer)) > 0) {fout.write(buffer, 0, read);}fin.close();fout.close();} catch (FileNotFoundException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}}@Overridepublic CheckAvailabilityResult execute(final CheckAvailabilityAction action, final ExecutionContext context) throws ActionException {if (LOGGER.isDebugEnabled()) {String serverName = null;if (action.getServerId() == CheckAvailability.FEDORA_ID) {serverName = ""fedora"";} else if (action.getServerId() == CheckAvailability.KRAMERIUS_ID) {serverName = ""kramerius"";}LOGGER.debug(""Processing action: CheckAvailability: "" + serverName);}ServerUtils.checkExpiredSession(httpSessionProvider);boolean status = true;String url = null;String usr = """";String pass = """";if (action.getServerId() == CheckAvailability.FEDORA_ID) {url = configuration.getFedoraHost();usr = configuration.getFedoraLogin();pass = configuration.getFedoraPassword();} else if (action.getServerId() == CheckAvailability.KRAMERIUS_ID) {url = configuration.getKrameriusHost() + SOME_STATIC_KRAMERIUS_PAGE;} else {throw new ActionException(""Unknown server id"");}try {URLConnection con = RESTHelper.openConnection(url, usr, pass, false);if (con instanceof HttpURLConnection) {HttpURLConnection httpConnection = (HttpURLConnection) con;int resp = httpConnection.getResponseCode();if (resp < 200 || resp >= 308) {status = false;LOGGER.info(""Server "" + url + "" answered with HTTP code "" + httpConnection.getResponseCode());}} else {status = false;}} catch (MalformedURLException e) {status = false;e.printStackTrace();} catch (IOException e) {status = false;e.printStackTrace();}return new CheckAvailabilityResult(status, url);}public static void main(String[] args) {log.info(""Passage paramètres "" + args);try {URL url = new URL(""http://localhost:8082/HomeAutomateCore/ListenerServlet/"");URLConnection conn = url.openConnection();conn.setDoOutput(true);BufferedWriter out = new BufferedWriter(new OutputStreamWriter(conn.getOutputStream()));out.write(""username = JavaWorld \r \n "");out.flush();out.close();BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));String reponse = """";while ((reponse = in.readLine()) != null) {System.out.println(reponse);}System.out.println(""Fin"");in.close();} catch (MalformedURLException ex) {ex.printStackTrace();System.out.println(""Fin1 "" + ex.getMessage() + "" "" + ex.getCause());} catch (IOException ex) {ex.printStackTrace();System.out.println(""Fin2 "" + ex.getMessage() + "" "" + ex.getCause());}}protected void writePage(final CacheItem entry, final TranslationResponse response, ModifyTimes times) throws IOException {if (entry == null) {return;}Set<ResponseHeader> headers = new TreeSet<ResponseHeader>();for (ResponseHeader h : entry.getHeaders()) {if (TranslationResponse.ETAG.equals(h.getName())) {if (!times.isFileLastModifiedKnown()) {headers.add(new ResponseHeaderImpl(h.getName(), doETagStripWeakMarker(h.getValues())));}} else {headers.add(h);}}response.addHeaders(headers);if (!times.isFileLastModifiedKnown()) {response.setLastModified(entry.getLastModified());}response.setTranslationCount(entry.getTranslationCount());response.setFailCount(entry.getFailCount());OutputStream output = response.getOutputStream();try {InputStream input = entry.getContentAsStream();try {IOUtils.copy(input, output);} finally {input.close();}} finally {response.setEndState(ResponseStateOk.getInstance());}}public static FileChannel getFileChannel(Object o) throws IOException {Class c = o.getClass();try {Method m = c.getMethod(""getChannel"", null);return (FileChannel) m.invoke(o, null);} catch (IllegalAccessException x) {} catch (NoSuchMethodException x) {} catch (InvocationTargetException x) {if (x.getTargetException() instanceof IOException) throw (IOException) x.getTargetException();}if (o instanceof FileInputStream) return new MyFileChannelImpl((FileInputStream) o);if (o instanceof FileOutputStream) return new MyFileChannelImpl((FileOutputStream) o);if (o instanceof RandomAccessFile) return new MyFileChannelImpl((RandomAccessFile) o);Assert.UNREACHABLE(o.getClass().toString());return null;}"	5
"public byte[] evaluateResponse(byte[] responseBytes) throws SaslException {if (firstEvaluation) {firstEvaluation = false;StringBuilder challenge = new StringBuilder(100);Iterator iter = configurationManager.getRealms().values().iterator();Realm aRealm;while (iter.hasNext()) {aRealm = (Realm) iter.next();if (aRealm.getFullRealmName().equals(""null"")) continue;challenge.append(""realm=\"""" + aRealm.getFullRealmName() + ""\"""");challenge.append("","");}String nonceUUID = UUID.randomUUID().toString();String nonce = null;try {nonce = new String(Base64.encodeBase64(MD5Digest(String.valueOf(System.nanoTime() + "":"" + nonceUUID))), ""US-ASCII"");} catch (UnsupportedEncodingException uee) {throw new SaslException(uee.getMessage(), uee);} catch (GeneralSecurityException uee) {throw new SaslException(uee.getMessage(), uee);}nonces.put(nonce, new ArrayList());nonces.get(nonce).add(Integer.valueOf(1));challenge.append(""nonce=\"""" + nonce + ""\"""");challenge.append("","");challenge.append(""qop=\"""" + configurationManager.getSaslQOP() + ""\"""");challenge.append("","");challenge.append(""charset=\""utf-8\"""");challenge.append("","");challenge.append(""algorithm=\""md5-sess\"""");if (configurationManager.getSaslQOP().indexOf(""auth-conf"") != -1) {challenge.append("","");challenge.append(""cipher-opts=\"""" + configurationManager.getDigestMD5Ciphers() + ""\"""");}try {return Base64.encodeBase64(challenge.toString().getBytes(""US-ASCII""));} catch (UnsupportedEncodingException uee) {throw new SaslException(uee.getMessage(), uee);}} else {String nonce = null;if (!Base64.isArrayByteBase64(responseBytes)) {throw new SaslException(""Can not decode Base64 Content"", new MalformedBase64ContentException());}responseBytes = Base64.decodeBase64(responseBytes);List<byte[]> splittedBytes = splitByteArray(responseBytes, (byte) 0x3d);int tokenCountMinus1 = splittedBytes.size() - 1, lastCommaPos;Map rawDirectives = new HashMap();String key = null;Map<String, String> directives;try {key = new String(splittedBytes.get(0), ""US-ASCII"");for (int i = 1; i < tokenCountMinus1; i++) {key = responseTokenProcessor(splittedBytes, rawDirectives, key, i, tokenCountMinus1);}responseTokenProcessor(splittedBytes, rawDirectives, key, tokenCountMinus1, tokenCountMinus1);if (rawDirectives.containsKey(""charset"")) {String value = new String((byte[]) rawDirectives.get(""charset""), ""US-ASCII"").toLowerCase(locale);if (value.equals(""utf-8"")) {encoding = ""UTF-8"";}}if (encoding.equals(""ISO-8859-1"")) {decodeAllAs8859(rawDirectives);} else {decodeMixed(rawDirectives);}directives = rawDirectives;} catch (UnsupportedEncodingException uee) {throw new SaslException(uee.getMessage());}if (!directives.containsKey(""username"") || !directives.containsKey(""nonce"") || !directives.containsKey(""nc"") || !directives.containsKey(""cnonce"") || !directives.containsKey(""response"")) {throw new SaslException(""Digest-Response lacks at least one neccesery key-value pair"");}if (directives.get(""username"").indexOf('@') != -1) {throw new SaslException(""digest-response username field must not include domain name"", new AuthenticationException());}if (!directives.containsKey(""qop"")) {directives.put(""qop"", QOP_AUTH);}if (!directives.containsKey(""realm"") || ((String) directives.get(""realm"")).equals("""")) {directives.put(""realm"", ""null"");}nonce = (String) directives.get(""nonce"");if (!nonces.containsKey(nonce)) {throw new SaslException(""Illegal nonce value"");}List<Integer> nonceListInMap = nonces.get(nonce);int nc = Integer.parseInt((String) directives.get(""nc""), 16);if (nonceListInMap.get(nonceListInMap.size() - 1).equals(Integer.valueOf(nc))) {nonceListInMap.add(Integer.valueOf(++nc));} else {throw new SaslException(""Illegal nc value"");}nonceListInMap = null;if (directives.get(""qop"").equals(QOP_AUTH_INT)) integrity = true; else if (directives.get(""qop"").equals(QOP_AUTH_CONF)) privacy = true;if (privacy) {if (!directives.containsKey(""cipher"")) {throw new SaslException(""Message confidentially required but cipher entry is missing"");}sessionCipher = directives.get(""cipher"").toLowerCase(locale);if (""3des,des,rc4-40,rc4,rc4-56"".indexOf(sessionCipher) == -1) {throw new SaslException(""Unsupported cipher for message confidentiality"");}}String realm = directives.get(""realm"").toLowerCase(Locale.getDefault());String username = directives.get(""username"").toLowerCase(locale);if (username.indexOf('@') == -1) {if (!directives.get(""realm"").equals(""null"")) {username += directives.get(""realm"").substring(directives.get(""realm"").indexOf('@'));} else if (directives.get(""authzid"").indexOf('@') != -1) {username += directives.get(""authzid"").substring(directives.get(""authzid"").indexOf('@'));}}DomainWithPassword domainWithPassword = configurationManager.getRealmPassword(realm, username);if (domainWithPassword == null || domainWithPassword.getPassword() == null) {log.warn(""The supplied username and/or realm do(es) not match a registered entry"");return null;}if (realm.equals(""null"") && username.indexOf('@') == -1) {username += ""@"" + domainWithPassword.getDomain();}byte[] HA1 = toByteArray(domainWithPassword.getPassword());for (int i = domainWithPassword.getPassword().length - 1; i >= 0; i--) {domainWithPassword.getPassword()[i] = 0xff;}domainWithPassword = null;MessageDigest md = null;try {md = MessageDigest.getInstance(""MD5"");} catch (GeneralSecurityException gse) {throw new SaslException(gse.getMessage());}md.update(HA1);md.update("":"".getBytes());md.update((directives.get(""nonce"")).getBytes());md.update("":"".getBytes());md.update((directives.get(""cnonce"")).getBytes());if (directives.containsKey(""authzid"")) {md.update("":"".getBytes());md.update((directives.get(""authzid"")).getBytes());}MD5DigestSessionKey = HA1 = md.digest();String MD5DigestSessionKeyToHex = toHex(HA1, HA1.length);md.update(""AUTHENTICATE"".getBytes());md.update("":"".getBytes());md.update((directives.get(""digest-uri"")).getBytes());if (!directives.get(""qop"").equals(QOP_AUTH)) {md.update("":"".getBytes());md.update(""00000000000000000000000000000000"".getBytes());}byte[] HA2 = md.digest();String HA2HEX = toHex(HA2, HA2.length);md.update(MD5DigestSessionKeyToHex.getBytes());md.update("":"".getBytes());md.update((directives.get(""nonce"")).getBytes());md.update("":"".getBytes());md.update((directives.get(""nc"")).getBytes());md.update("":"".getBytes());md.update((directives.get(""cnonce"")).getBytes());md.update("":"".getBytes());md.update((directives.get(""qop"")).getBytes());md.update("":"".getBytes());md.update(HA2HEX.getBytes());byte[] responseHash = md.digest();String HexResponseHash = toHex(responseHash, responseHash.length);if (HexResponseHash.equals(directives.get(""response""))) {md.update("":"".getBytes());md.update((directives.get(""digest-uri"")).getBytes());if (!directives.get(""qop"").equals(QOP_AUTH)) {md.update("":"".getBytes());md.update(""00000000000000000000000000000000"".getBytes());}HA2 = md.digest();HA2HEX = toHex(HA2, HA2.length);md.update(MD5DigestSessionKeyToHex.getBytes());md.update("":"".getBytes());md.update((directives.get(""nonce"")).getBytes());md.update("":"".getBytes());md.update((directives.get(""nc"")).getBytes());md.update("":"".getBytes());md.update((directives.get(""cnonce"")).getBytes());md.update("":"".getBytes());md.update((directives.get(""qop"")).getBytes());md.update("":"".getBytes());md.update(HA2HEX.getBytes());responseHash = md.digest();return finalizeAuthentication.finalize(responseHash, username);} else {log.warn(""Improper credentials"");return null;}}}public static final String generate(String value) {try {java.security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");md.update(value.getBytes());byte[] hash = md.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < hash.length; i++) {if ((0xff & hash[i]) < 0x10) {hexString.append(""0"" + Integer.toHexString((0xFF & hash[i])));} else {hexString.append(Integer.toHexString(0xFF & hash[i]));}}value = hexString.toString();} catch (Exception nsae) {nsae.printStackTrace();}return value;}private byte[] szyfrujKlucz(byte[] kluczSesyjny) {byte[] zaszyfrowanyKlucz = null;byte[] klucz = null;try {MessageDigest skrot = MessageDigest.getInstance(""SHA-1"");skrot.update(haslo.getBytes());byte[] skrotHasla = skrot.digest();Object kluczDoKlucza = MARS_Algorithm.makeKey(skrotHasla);int resztaKlucza = this.dlugoscKlucza % ROZMIAR_BLOKU;if (resztaKlucza == 0) {klucz = kluczSesyjny;zaszyfrowanyKlucz = new byte[this.dlugoscKlucza];} else {int liczbaBlokow = this.dlugoscKlucza / ROZMIAR_BLOKU + 1;int nowyRozmiar = liczbaBlokow * ROZMIAR_BLOKU;zaszyfrowanyKlucz = new byte[nowyRozmiar];klucz = new byte[nowyRozmiar];byte roznica = (byte) (ROZMIAR_BLOKU - resztaKlucza);System.arraycopy(kluczSesyjny, 0, klucz, 0, kluczSesyjny.length);for (int i = kluczSesyjny.length; i < nowyRozmiar; i++) klucz[i] = (byte) roznica;}byte[] szyfrogram = null;int liczbaBlokow = klucz.length / ROZMIAR_BLOKU;int offset = 0;for (offset = 0; offset < liczbaBlokow; offset++) {szyfrogram = MARS_Algorithm.blockEncrypt(klucz, offset * ROZMIAR_BLOKU, kluczDoKlucza);System.arraycopy(szyfrogram, 0, zaszyfrowanyKlucz, offset * ROZMIAR_BLOKU, szyfrogram.length);}} catch (InvalidKeyException ex) {Logger.getLogger(SzyfrowaniePliku.class.getName()).log(Level.SEVERE, null, ex);} catch (NoSuchAlgorithmException ex) {ex.printStackTrace();}return zaszyfrowanyKlucz;}public void migrate(InputMetadata meta, InputStream input, OutputCreator outputCreator) throws IOException, ResourceMigrationException {RestartInputStream restartInput = new RestartInputStream(input);Match match = resourceIdentifier.identifyResource(meta, restartInput);restartInput.restart();if (match != null) {reporter.reportNotification(notificationFactory.createLocalizedNotification(NotificationType.INFO, ""migration-resource-migrating"", new Object[] { meta.getURI(), match.getTypeName(), match.getVersionName() }));processMigrationSteps(match, restartInput, outputCreator);} else {reporter.reportNotification(notificationFactory.createLocalizedNotification(NotificationType.INFO, ""migration-resource-copying"", new Object[] { meta.getURI() }));IOUtils.copyAndClose(restartInput, outputCreator.createOutputStream());}}private void transformFile(File input, File output, Cipher cipher, boolean compress, String progressMessage) throws IOException {FileInputStream fileInputStream = new FileInputStream(input);InputStream inputStream;if (progressMessage != null) {inputStream = new ProgressMonitorInputStream(null, progressMessage, fileInputStream);} else {inputStream = fileInputStream;}FilterInputStream is = new BufferedInputStream(inputStream);FilterOutputStream os = new BufferedOutputStream(new FileOutputStream(output));FilterInputStream fis;FilterOutputStream fos;if (compress) {fis = is;fos = new GZIPOutputStream(new CipherOutputStream(os, cipher));} else {fis = new GZIPInputStream(new CipherInputStream(is, cipher));fos = os;}byte[] buffer = new byte[cipher.getBlockSize() * blocksInBuffer];int readLength = fis.read(buffer);while (readLength != -1) {fos.write(buffer, 0, readLength);readLength = fis.read(buffer);}if (compress) {GZIPOutputStream gos = (GZIPOutputStream) fos;gos.finish();}fos.close();fis.close();}public static String fetchUrl(String urlString) {try {URL url = new URL(urlString);BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String line = null;StringBuilder builder = new StringBuilder();while ((line = reader.readLine()) != null) {builder.append(line);}reader.close();return builder.toString();} catch (MalformedURLException e) {} catch (IOException e) {}return """";}private void run(String[] args) throws Throwable {ArgParser parser = new ArgParser(""Run an experiment"");parser.addOptions(this, true);args = parser.matchAllArgs(args, 0, ArgParserOption.EXIT_ON_ERROR, ArgParserOption.STOP_FIRST_UNMATCHED);if (log4jFile != null) {logger.info(""Using another log4j configuration: %s"", log4jFile);PropertyConfigurator.configure(log4jFile.getAbsolutePath());}final TreeMap<TaskName, Class<Task>> tasks = GenericHelper.newTreeMap();final Enumeration<URL> e = About.class.getClassLoader().getResources(EXPERIMENT_PACKAGES);while (e.hasMoreElements()) {final URL url = e.nextElement();logger.debug(""Got URL %s"", url);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = in.readLine()) != null) {String packageName = line;getTasks(url, tasks, packageName);}}getTasks(null, tasks, getClass().getPackage().getName());if (tasks.isEmpty()) {logger.fatal(""I did not find any valid experiment (service bpiwowar.experiments.ExperimentListProvider)"");System.exit(1);}if (args.length == 0 || args[0].equals(""list"")) {System.out.format(""Available experiments:%n"");TreeMapArray<PackageName, String> map = TreeMapArray.newInstance();for (Entry<TaskName, Class<Task>> entry : tasks.entrySet()) {TaskName task = entry.getKey();if (showClassNames) map.add(task.packageName, String.format(""%s (%s)"", task.name, entry.getValue().toString())); else map.add(task.packageName, task.name);}Stack<PackageName> ancestors = new Stack<PackageName>();for (Entry<PackageName, ArrayList<String>> entry : map.entrySet()) {final PackageName key = entry.getKey();while (!ancestors.isEmpty() && key.commonPrefixLength(ancestors.peek()) != ancestors.peek().getLength()) ancestors.pop();int nbAncestors = ancestors.size();int c = nbAncestors > 0 ? ancestors.peek().getLength() : 0;StringBuilder s = new StringBuilder();for (int i = 0; i < c; i++) s.append(""|"");for (int i = c; i < key.getLength(); i++) {s.append(""|"");ancestors.add(new PackageName(key, i + 1));System.out.format(""%s%n"", s);System.out.format(""%s+ [%s]%n"", s, ancestors.peek());nbAncestors++;}String prefix = s.toString();for (String task : entry.getValue()) System.out.format(""%s|- %s%n"", prefix, task);ancestors.add(key);}return;} else if (args[0].equals(SEARCH_COMMAND)) {final class Options {@OrderedArgument(required = true)String search;}Options options = new Options();ArgParser ap = new ArgParser(SEARCH_COMMAND);ap.addOptions(options);ap.matchAllArgs(args, 1);logger.info(""Searching for %s"", options.search);for (Entry<TaskName, Class<Task>> entry : tasks.entrySet()) {TaskName taskname = entry.getKey();if (taskname.name.contains(options.search)) {System.err.format(""[*] %s - %s%n%s%n"", taskname, entry.getValue(), entry.getValue().getAnnotation(TaskDescription.class).description());}}return;}String taskName = args[0];args = Arrays.copyOfRange(args, 1, args.length);ArrayList<Class<Task>> matching = GenericHelper.newArrayList();for (Entry<TaskName, Class<Task>> entry : tasks.entrySet()) {if (entry.getKey().name.equals(taskName)) matching.add(entry.getValue());}if (matching.isEmpty()) {System.err.println(""No task match "" + taskName);System.exit(1);}if (matching.size() > 1) {System.err.println(""Too many tasks match "" + taskName);System.exit(1);}Class<Task> taskClass = matching.get(0);logger.info(""Running experiment "" + taskClass.getCanonicalName());Task task = taskClass.newInstance();int errorCode = 0;try {task.init(args);if (xstreamOutput != null) {OutputStream out;if (xstreamOutput.toString().equals(""-"")) out = System.out; else out = new FileOutputStream(xstreamOutput);logger.info(""Serializing the object into %s"", xstreamOutput);new XStream().toXML(task, out);out.close();} else {errorCode = task.run();}logger.info(""Finished task"");} catch (Throwable t) {if (t instanceof InvocationTargetException && t.getCause() != null) {t = t.getCause();}logger.error(""Exception thrown while executing the action:%n%s%n"", t);errorCode = 2;}System.exit(errorCode);}protected ExternalDecoder(InputStream source, Process process) {super(source);this.process = process;this.processStdOut = process.getInputStream();this.processStdIn = process.getOutputStream();new Thread() {@Overridepublic void run() {try {IOUtils.copy(getSource(), processStdIn);System.err.println(""Copy done."");close();} catch (IOException e) {e.printStackTrace();IOUtils.closeQuietly(ExternalDecoder.this);}}}.start();}@Overridepublic void run() {try {IOUtils.copy(getSource(), processStdIn);System.err.println(""Copy done."");close();} catch (IOException e) {e.printStackTrace();IOUtils.closeQuietly(ExternalDecoder.this);}}public int subclass(int objectId, String description) throws FidoDatabaseException, ObjectNotFoundException {try {Connection conn = null;Statement stmt = null;ResultSet rs = null;try {String sql = ""insert into Objects (Description) "" + ""values ('"" + description + ""')"";conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();if (contains(stmt, objectId) == false) throw new ObjectNotFoundException(objectId);stmt.executeUpdate(sql);int id;sql = ""select currval('objects_objectid_seq')"";rs = stmt.executeQuery(sql);if (rs.next() == false) throw new SQLException(""No rows returned from select currval() query""); else id = rs.getInt(1);ObjectLinkTable objectLinkList = new ObjectLinkTable();objectLinkList.linkObjects(stmt, id, ""isa"", objectId);conn.commit();return id;} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (rs != null) rs.close();if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}"	5
"public static String rename_tag(String sessionid, String originalTag, String newTagName) {String jsonstring = """";try {Log.d(""current running function name:"", ""rename_tag"");HttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(""https://mt0-app.cloud.cm/rpc/json"");List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);nameValuePairs.add(new BasicNameValuePair(""c"", ""Storage""));nameValuePairs.add(new BasicNameValuePair(""m"", ""rename_tag""));nameValuePairs.add(new BasicNameValuePair(""new_tag_name"", newTagName));nameValuePairs.add(new BasicNameValuePair(""absolute_tag"", originalTag));httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));httppost.setHeader(""Cookie"", ""PHPSESSID="" + sessionid);HttpResponse response = httpclient.execute(httppost);jsonstring = EntityUtils.toString(response.getEntity());Log.d(""jsonStringReturned:"", jsonstring);return jsonstring;} catch (Exception e) {e.printStackTrace();}return jsonstring;}public static InputStream download_file(String sessionid, String key) {InputStream is = null;String urlString = ""https://s2.cloud.cm/rpc/raw?c=Storage&m=download_file&key="" + key;try {String apple = """";URL url = new URL(urlString);Log.d(""current running function name:"", ""download_file"");HttpURLConnection conn = (HttpURLConnection) url.openConnection();conn.setRequestProperty(""Cookie"", ""PHPSESSID="" + sessionid);conn.setRequestMethod(""POST"");conn.setDoInput(true);is = conn.getInputStream();return is;} catch (Exception e) {e.printStackTrace();Log.d(""download problem"", ""download problem"");}return is;}public static String upload_file(String sessionid, String localFilePath, String remoteTagPath) {String jsonstring = ""If you see this message, there is some problem inside the function:upload_file()"";String srcPath = localFilePath;String uploadUrl = ""https://s2.cloud.cm/rpc/json/?session_id="" + sessionid + ""&c=Storage&m=upload_file&tag="" + remoteTagPath;String end = ""\r\n"";String twoHyphens = ""--"";String boundary = ""******"";try {URL url = new URL(uploadUrl);HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();httpURLConnection.setDoInput(true);httpURLConnection.setDoOutput(true);httpURLConnection.setUseCaches(false);httpURLConnection.setRequestMethod(""POST"");httpURLConnection.setRequestProperty(""Connection"", ""Keep-Alive"");httpURLConnection.setRequestProperty(""Charset"", ""UTF-8"");httpURLConnection.setRequestProperty(""Content-Type"", ""multipart/form-data;boundary="" + boundary);DataOutputStream dos = new DataOutputStream(httpURLConnection.getOutputStream());dos.writeBytes(twoHyphens + boundary + end);dos.writeBytes(""Content-Disposition: form-data; name=\""file\""; filename=\"""" + srcPath.substring(srcPath.lastIndexOf(""/"") + 1) + ""\"""" + end);dos.writeBytes(end);FileInputStream fis = new FileInputStream(srcPath);byte[] buffer = new byte[8192];int count = 0;while ((count = fis.read(buffer)) != -1) {dos.write(buffer, 0, count);}fis.close();dos.writeBytes(end);dos.writeBytes(twoHyphens + boundary + twoHyphens + end);dos.flush();InputStream is = httpURLConnection.getInputStream();InputStreamReader isr = new InputStreamReader(is, ""utf-8"");BufferedReader br = new BufferedReader(isr);jsonstring = br.readLine();dos.close();is.close();return jsonstring;} catch (Exception e) {e.printStackTrace();}return jsonstring;}private String md5(String... args) throws FlickrException {try {StringBuilder sb = new StringBuilder();for (String str : args) {sb.append(str);}MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(sb.toString().getBytes());byte[] bytes = md.digest();StringBuilder result = new StringBuilder();for (byte b : bytes) {String hx = Integer.toHexString(0xFF & b);if (hx.length() == 1) {hx = ""0"" + hx;}result.append(hx);}return result.toString();} catch (Exception ex) {throw new FlickrException(ex);}}public URLStream(URL url) throws IOException {this.url = url;this.conn = this.url.openConnection();contentType = conn.getContentType();name = url.toExternalForm();size = new Long(conn.getContentLength());sourceInfo = ""url"";}public void copyJarContent(File jarPath, File targetDir) throws IOException {log.info(""Copying natives from "" + jarPath.getName());JarFile jar = new JarFile(jarPath);Enumeration<JarEntry> entries = jar.entries();while (entries.hasMoreElements()) {JarEntry file = entries.nextElement();File f = new File(targetDir, file.getName());log.info(""Copying native - "" + file.getName());File parentFile = f.getParentFile();parentFile.mkdirs();if (file.isDirectory()) {f.mkdir();continue;}InputStream is = null;FileOutputStream fos = null;try {is = jar.getInputStream(file);fos = new FileOutputStream(f);IOUtils.copy(is, fos);} finally {if (fos != null) fos.close();if (is != null) is.close();}}}public static synchronized void loadConfig(String configFile) {if (properties != null) {return;}URL url = null;InputStream is = null;try {String configProperty = null;try {configProperty = System.getProperty(""dspace.configuration"");} catch (SecurityException se) {log.warn(""Unable to access system properties, ignoring."", se);}if (loadedFile != null) {log.info(""Reloading current config file: "" + loadedFile.getAbsolutePath());url = loadedFile.toURI().toURL();} else if (configFile != null) {log.info(""Loading provided config file: "" + configFile);loadedFile = new File(configFile);url = loadedFile.toURI().toURL();} else if (configProperty != null) {log.info(""Loading system provided config property (-Ddspace.configuration): "" + configProperty);loadedFile = new File(configProperty);url = loadedFile.toURI().toURL();} else {url = ConfigurationManager.class.getResource(""/dspace.cfg"");if (url != null) {log.info(""Loading from classloader: "" + url);loadedFile = new File(url.getPath());}}if (url == null) {log.fatal(""Cannot find dspace.cfg"");throw new IllegalStateException(""Cannot find dspace.cfg"");} else {properties = new Properties();moduleProps = new HashMap<String, Properties>();is = url.openStream();properties.load(is);for (Enumeration<?> pe = properties.propertyNames(); pe.hasMoreElements(); ) {String key = (String) pe.nextElement();String value = interpolate(key, properties.getProperty(key), 1);if (value != null) {properties.setProperty(key, value);}}}} catch (IOException e) {log.fatal(""Can't load configuration: "" + url, e);throw new IllegalStateException(""Cannot load configuration: "" + url, e);} finally {if (is != null) {try {is.close();} catch (IOException ioe) {}}}File licenseFile = new File(getProperty(""dspace.dir"") + File.separator + ""config"" + File.separator + ""default.license"");FileInputStream fir = null;InputStreamReader ir = null;BufferedReader br = null;try {fir = new FileInputStream(licenseFile);ir = new InputStreamReader(fir, ""UTF-8"");br = new BufferedReader(ir);String lineIn;license = """";while ((lineIn = br.readLine()) != null) {license = license + lineIn + '\n';}br.close();} catch (IOException e) {log.fatal(""Can't load license: "" + licenseFile.toString(), e);throw new IllegalStateException(""Cannot load license: "" + licenseFile.toString(), e);} finally {if (br != null) {try {br.close();} catch (IOException ioe) {}}if (ir != null) {try {ir.close();} catch (IOException ioe) {}}if (fir != null) {try {fir.close();} catch (IOException ioe) {}}}}public static int copy(File src, int amount, File dst) {final int BUFFER_SIZE = 1024;int amountToRead = amount;InputStream in = null;OutputStream out = null;try {in = new BufferedInputStream(new FileInputStream(src));out = new BufferedOutputStream(new FileOutputStream(dst));byte[] buf = new byte[BUFFER_SIZE];while (amountToRead > 0) {int read = in.read(buf, 0, Math.min(BUFFER_SIZE, amountToRead));if (read == -1) break;amountToRead -= read;out.write(buf, 0, read);}} catch (IOException e) {} finally {if (in != null) try {in.close();} catch (IOException e) {}if (out != null) {try {out.flush();} catch (IOException e) {}try {out.close();} catch (IOException e) {}}}return amount - amountToRead;}public String getHtml(String path) throws Exception {URL url = new URL(path);URLConnection conn = url.openConnection();conn.setDoOutput(true);InputStream inputStream = conn.getInputStream();InputStreamReader isr = new InputStreamReader(inputStream, ""UTF-8"");StringBuilder sb = new StringBuilder();BufferedReader in = new BufferedReader(isr);String inputLine;while ((inputLine = in.readLine()) != null) {sb.append(inputLine);}String result = sb.toString();return result;}private void checkServerAccess() throws IOException {URL url = new URL(""https://testnetbeans.org/bugzilla/index.cgi"");try {URLConnection conn = url.openConnection();conn.setConnectTimeout(5000);conn.setReadTimeout(5000);conn.connect();} catch (IOException exc) {disableMessage = ""Bugzilla is not accessible"";}url = new URL(BugzillaConnector.SERVER_URL);try {URLConnection conn = url.openConnection();conn.setConnectTimeout(5000);conn.setReadTimeout(5000);conn.connect();} catch (IOException exc) {disableMessage = ""Bugzilla Service is not accessible"";}}"	5
"private void getViolationsReportByProductOfferIdYearMonth() throws IOException {String xmlFile8Send = System.getenv(""SLASOI_HOME"") + System.getProperty(""file.separator"") + ""Integration"" + System.getProperty(""file.separator"") + ""soap"" + System.getProperty(""file.separator"") + ""getViolationsReportByProductOfferIdYearMonth.xml"";URL url8;url8 = new URL(bmReportingWSUrl);URLConnection connection8 = url8.openConnection();HttpURLConnection httpConn8 = (HttpURLConnection) connection8;FileInputStream fin8 = new FileInputStream(xmlFile8Send);ByteArrayOutputStream bout8 = new ByteArrayOutputStream();SOAPClient4XG.copy(fin8, bout8);fin8.close();byte[] b8 = bout8.toByteArray();httpConn8.setRequestProperty(""Content-Length"", String.valueOf(b8.length));httpConn8.setRequestProperty(""Content-Type"", ""application/soap+xml; charset=UTF-8"");httpConn8.setRequestProperty(""SOAPAction"", soapAction);httpConn8.setRequestMethod(""POST"");httpConn8.setDoOutput(true);httpConn8.setDoInput(true);OutputStream out8 = httpConn8.getOutputStream();out8.write(b8);out8.close();InputStreamReader isr8 = new InputStreamReader(httpConn8.getInputStream());BufferedReader in8 = new BufferedReader(isr8);String inputLine8;StringBuffer response8 = new StringBuffer();while ((inputLine8 = in8.readLine()) != null) {response8.append(inputLine8);}in8.close();System.out.println(""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"" + ""####################################################"" + ""#################################################\n"" + ""####################################################"" + ""#################################################\n"" + ""Component Name: Business Manager\n"" + ""Interface Name: getReport\n"" + ""Operation Name:"" + ""getViolationsReportByProductOfferIdYearMonth\n"" + ""Input"" + ""ProductOfferID-1\n"" + ""PartyID-1\n"" + ""\n"" + ""####################################################"" + ""#################################################\n"" + ""####################################################"" + ""#################################################\n"" + ""######################################## RESPONSE"" + ""############################################\n\n"");System.out.println(""--------------------------------"");System.out.println(""Response\n"" + response8.toString());}private void getViolationsReportByProductOfferIdYearMonthDay() throws IOException {String xmlFile9Send = System.getenv(""SLASOI_HOME"") + System.getProperty(""file.separator"") + ""Integration"" + System.getProperty(""file.separator"") + ""soap"" + System.getProperty(""file.separator"") + ""getViolationsReportByProductOfferIdYearMonthDay.xml"";URL url9;url9 = new URL(bmReportingWSUrl);URLConnection connection9 = url9.openConnection();HttpURLConnection httpConn9 = (HttpURLConnection) connection9;FileInputStream fin9 = new FileInputStream(xmlFile9Send);ByteArrayOutputStream bout9 = new ByteArrayOutputStream();SOAPClient4XG.copy(fin9, bout9);fin9.close();byte[] b9 = bout9.toByteArray();httpConn9.setRequestProperty(""Content-Length"", String.valueOf(b9.length));httpConn9.setRequestProperty(""Content-Type"", ""application/soap+xml; charset=UTF-8"");httpConn9.setRequestProperty(""SOAPAction"", soapAction);httpConn9.setRequestMethod(""POST"");httpConn9.setDoOutput(true);httpConn9.setDoInput(true);OutputStream out9 = httpConn9.getOutputStream();out9.write(b9);out9.close();InputStreamReader isr9 = new InputStreamReader(httpConn9.getInputStream());BufferedReader in9 = new BufferedReader(isr9);String inputLine9;StringBuffer response9 = new StringBuffer();while ((inputLine9 = in9.readLine()) != null) {response9.append(inputLine9);}in9.close();System.out.println(""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"" + ""####################################################"" + ""#################################################\n"" + ""####################################################"" + ""#################################################\n"" + ""Component Name: Business Manager\n"" + ""Interface Name: getReport\n"" + ""Operation Name: "" + ""getViolationsReportByProductOfferIdYearMonthDay\n"" + ""Input"" + ""ProductOfferID-1\n"" + ""PartyID-1\n"" + ""\n"" + ""####################################################"" + ""#################################################\n"" + ""####################################################"" + ""#################################################\n"" + ""######################################## RESPONSE"" + ""############################################\n\n"");System.out.println(""--------------------------------"");System.out.println(""Response\n"" + response9.toString());}private void getViolationsReportBySLATIdYearMonth() throws IOException {String xmlFile10Send = System.getenv(""SLASOI_HOME"") + System.getProperty(""file.separator"") + ""Integration"" + System.getProperty(""file.separator"") + ""soap"" + System.getProperty(""file.separator"") + ""getViolationsReportBySLATIdYearMonth.xml"";URL url10;url10 = new URL(bmReportingWSUrl);URLConnection connection10 = url10.openConnection();HttpURLConnection httpConn10 = (HttpURLConnection) connection10;FileInputStream fin10 = new FileInputStream(xmlFile10Send);ByteArrayOutputStream bout10 = new ByteArrayOutputStream();SOAPClient4XG.copy(fin10, bout10);fin10.close();byte[] b10 = bout10.toByteArray();httpConn10.setRequestProperty(""Content-Length"", String.valueOf(b10.length));httpConn10.setRequestProperty(""Content-Type"", ""application/soap+xml; charset=UTF-8"");httpConn10.setRequestProperty(""SOAPAction"", soapAction);httpConn10.setRequestMethod(""POST"");httpConn10.setDoOutput(true);httpConn10.setDoInput(true);OutputStream out10 = httpConn10.getOutputStream();out10.write(b10);out10.close();InputStreamReader isr10 = new InputStreamReader(httpConn10.getInputStream());BufferedReader in10 = new BufferedReader(isr10);String inputLine10;StringBuffer response10 = new StringBuffer();while ((inputLine10 = in10.readLine()) != null) {response10.append(inputLine10);}in10.close();System.out.println(""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"" + ""####################################################"" + ""#################################################\n"" + ""####################################################"" + ""#################################################\n"" + ""Component Name: Business Manager\n"" + ""Interface Name: getReport\n"" + ""Operation Name: getViolationsReportBySLATIdYearMonth\n"" + ""Input"" + ""ProductOfferID-1\n"" + ""PartyID-1\n"" + ""\n"" + ""####################################################"" + ""#################################################\n"" + ""####################################################"" + ""#################################################\n"" + ""######################################## RESPONSE"" + ""############################################\n\n"");System.out.println(""--------------------------------"");System.out.println(""Response\n"" + response10.toString());}private void getViolationsReportBySLATIdYearMonthDay() throws IOException {String xmlFile11Send = System.getenv(""SLASOI_HOME"") + System.getProperty(""file.separator"") + ""Integration"" + System.getProperty(""file.separator"") + ""soap"" + System.getProperty(""file.separator"") + ""getViolationsReportBySLATIdYearMonthDay.xml"";URL url11;url11 = new URL(bmReportingWSUrl);URLConnection connection11 = url11.openConnection();HttpURLConnection httpConn11 = (HttpURLConnection) connection11;FileInputStream fin11 = new FileInputStream(xmlFile11Send);ByteArrayOutputStream bout11 = new ByteArrayOutputStream();SOAPClient4XG.copy(fin11, bout11);fin11.close();byte[] b11 = bout11.toByteArray();httpConn11.setRequestProperty(""Content-Length"", String.valueOf(b11.length));httpConn11.setRequestProperty(""Content-Type"", ""application/soap+xml; charset=UTF-8"");httpConn11.setRequestProperty(""SOAPAction"", soapAction);httpConn11.setRequestMethod(""POST"");httpConn11.setDoOutput(true);httpConn11.setDoInput(true);OutputStream out11 = httpConn11.getOutputStream();out11.write(b11);out11.close();InputStreamReader isr11 = new InputStreamReader(httpConn11.getInputStream());BufferedReader in11 = new BufferedReader(isr11);String inputLine11;StringBuffer response11 = new StringBuffer();while ((inputLine11 = in11.readLine()) != null) {response11.append(inputLine11);}in11.close();System.out.println(""\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"" + ""####################################################"" + ""#################################################\n"" + ""####################################################"" + ""#################################################\n"" + ""Component Name: Business Manager\n"" + ""Interface Name: getReport\n"" + ""Operation Name: getViolationsReportBySLATIdYearMonthDay\n"" + ""Input"" + ""ProductOfferID-1\n"" + ""PartyID-1\n"" + ""\n"" + ""####################################################"" + ""#################################################\n"" + ""####################################################"" + ""#################################################\n"" + ""######################################## RESPONSE"" + ""############################################\n\n"");System.out.println(""--------------------------------"");System.out.println(""Response\n"" + response11.toString());}public void open() throws IOException, RecursionException {String encoding = null;if (source != null) {Reader sourceReader = source.getCharacterStream();if (sourceReader != null) {if (readerReader == null) readerReader = new XMLReaderReader();readerReader.reset(sourceReader, true);isStandalone = readerReader.isXMLStandalone();activeReader = readerReader;isOpen = true;return;}InputStream in = source.getByteStream();if (in != null) {if (streamReader == null) streamReader = new XMLStreamReader();streamReader.reset(in, source.getEncoding(), true);isOpen = true;isStandalone = streamReader.isXMLStandalone();activeReader = streamReader;return;}url = new URL(defaultContext, source.getSystemId());sysID = url.toString();encoding = source.getEncoding();}if (streamReader == null) streamReader = new XMLStreamReader();streamReader.reset(url.openStream(), encoding, true);isStandalone = streamReader.isXMLStandalone();activeReader = streamReader;isOpen = true;}@Overridepublic BufferedImageAndBytes load(T thing) {String iurl = resolver.getUrl(thing);URL url;for (int k = 0; k < nTries; k++) {if (k > 0) {logger.debug(""retry #"" + k);}try {url = new URL(iurl);URLConnection connection = url.openConnection();if (userAgent != null) {connection.setRequestProperty(""User-Agent"", userAgent);}InputStream is = new BufferedInputStream(connection.getInputStream());ByteArrayOutputStream baos = new ByteArrayOutputStream(40000);int b;while ((b = is.read()) != -1) {baos.write(b);}is.close();byte[] bytes = baos.toByteArray();ByteArrayInputStream bais = new ByteArrayInputStream(bytes);BufferedImage image = ImageIO.read(bais);return new BufferedImageAndBytes(image, bytes);} catch (MalformedURLException e) {continue;} catch (IOException e) {continue;}}return null;}@HttpAction(name = ""map.calibrate"", method = { HttpAction.Method.post }, responseType = ""text/plain"", parameters = { @HttpParameter(name = ""user""), @HttpParameter(name = ""guid""), @HttpParameter(name = ""uploadFile""), @HttpParameter(name = ""mapUrl""), @HttpParameter(name = ""mapSource""), @HttpParameter(name = ""south""), @HttpParameter(name = ""west""), @HttpParameter(name = ""north""), @HttpParameter(name = ""east"") })@HttpAuthentication(method = { HttpAuthentication.Method.WSSE })public String calibrate(User user, String guid, Collection<FileItem> uploadFile, String mapUrl, String mapSource, String south, String west, String north, String east) throws HttpRpcException {GenericDAO<UserMapOriginal> dao = DAOFactory.createDAO(UserMapOriginal.class);try {TransactionManager.beginTransaction();} catch (Throwable e) {logger.error(e);return ""FAIL"";}try {final UserMapOriginal mapOriginal = dao.findUniqueByCriteria(Expression.eq(""guid"", guid));if (mapOriginal == null) throw new HttpRpcException(ErrorConstant.ERROR_NOT_FOUND, ""map"");if (UserMapOriginal.SubState.INPROC.equals(mapOriginal.getSubstate())) throw new HttpRpcException(ErrorConstant.ERROR_ILLEGAL_OBJECT_STATE, ""map"");if (UserMapOriginal.State.COMBINE.equals(mapOriginal.getState())) throw new HttpRpcException(ErrorConstant.ERROR_ILLEGAL_OBJECT_STATE, ""map"");if (!""download"".equals(mapSource) && !""upload"".equals(mapSource) && !""current"".equals(mapSource)) throw new HttpRpcException(ErrorConstant.ERROR_INVALID_OBJECT, ""mapSource"");try {mapOriginal.setSWLat(Double.parseDouble(south));} catch (Throwable t) {throw new HttpRpcException(ErrorConstant.ERROR_INVALID_OBJECT, ""south"");}try {mapOriginal.setSWLon(Double.parseDouble(west));} catch (Throwable t) {throw new HttpRpcException(ErrorConstant.ERROR_INVALID_OBJECT, ""west"");}try {mapOriginal.setNELat(Double.parseDouble(north));} catch (Throwable t) {throw new HttpRpcException(ErrorConstant.ERROR_INVALID_OBJECT, ""north"");}try {mapOriginal.setNELon(Double.parseDouble(east));} catch (Throwable t) {throw new HttpRpcException(ErrorConstant.ERROR_INVALID_OBJECT, ""east"");}mapOriginal.setState(UserMapOriginal.State.CALIBRATE);mapOriginal.setSubstate(UserMapOriginal.SubState.INPROC);final XFile mapStorage = new XFile(new XFile(Configuration.getInstance().getPrivateMapStorage().toString()), mapOriginal.getGuid());mapStorage.mkdir();if (""download"".equals(mapSource)) {final XFile tmpFile;final URI uri = new URI(mapUrl);String query = (StringUtils.isEmpty(uri.getQuery())) ? ""?BBOX="" : ""&BBOX="";query += west + "","" + south + "","" + east + "","" + north;URLConnection con = (new URL(mapUrl + query)).openConnection();if (con == null || con.getContentLength() == 0) throw new HttpRpcException(ErrorConstant.ERROR_INVALID_RESOURCE, ""mapUrl"");if (!con.getContentType().startsWith(""image/"")) throw new HttpRpcException(ErrorConstant.ERROR_INVALID_OBJECT_TYPE, ""mapUrl"");tmpFile = new XFile(mapStorage, mapOriginal.getGuid());XFileOutputStream out = new XFileOutputStream(tmpFile);IOUtils.copy(con.getInputStream(), out);out.flush();out.close();} else if (""upload"".equals(mapSource)) {final XFile tmpFile;final FileItem file = uploadFile.iterator().next();if (file == null || file.getSize() == 0) throw new HttpRpcException(ErrorConstant.ERROR_INVALID_RESOURCE, ""uploadFile"");if (!file.getContentType().startsWith(""image/"")) throw new HttpRpcException(ErrorConstant.ERROR_INVALID_OBJECT_TYPE, ""uploadFile"");tmpFile = new XFile(mapStorage, mapOriginal.getGuid());XFileOutputStream out = new XFileOutputStream(tmpFile);IOUtils.copy(file.getInputStream(), out);out.flush();out.close();} else if (""current"".equals(mapSource)) {}dao.update(mapOriginal);TransactionManager.commitTransaction();try {PoolClientInterface pool = PoolFactory.getInstance().getClientPool();if (pool == null) throw ErrorConstant.EXCEPTION_INTERNAL;pool.put(mapOriginal, new StatesStack(new byte[] { 0x00, 0x18 }), GeneralCompleteStrategy.class);} catch (Throwable t) {logger.error(t);}return ""SUCCESS"";} catch (HttpRpcException e) {TransactionManager.rollbackTransaction();logger.error(e);return ""FAIL"";} catch (Throwable e) {logger.error(e);TransactionManager.rollbackTransaction();return ""FAIL"";}}protected void initDefaultRolesFile() {String webConfigPath = System.getProperty(""dcm4chee-web3.cfg.path"", ""conf/dcm4chee-web3"");File mappingFile = new File(webConfigPath + ""roles.json"");if (!mappingFile.isAbsolute()) mappingFile = new File(ServerConfigLocator.locate().getServerHomeDir(), mappingFile.getPath());if (mappingFile.exists()) return;log.info(""Init default Role Mapping file! mappingFile:"" + mappingFile);if (mappingFile.getParentFile().mkdirs()) log.info(""M-WRITE dir:"" + mappingFile.getParent());FileChannel fos = null;InputStream is = null;try {URL url = getClass().getResource(""/META-INF/roles-default.json"");log.info(""Use default Mapping File content of url:"" + url);is = url.openStream();ReadableByteChannel inCh = Channels.newChannel(is);fos = new FileOutputStream(mappingFile).getChannel();int pos = 0;while (is.available() > 0) pos += fos.transferFrom(inCh, pos, is.available());} catch (Exception e) {log.error(""Roles file doesn't exist and the default can't be created!"", e);} finally {close(is);close(fos);}}public boolean ImportData() {if (fileData == null) {return false;}String line = new String();BufferedReader br;BufferedWriter bw;String tableName = new String();List<String> columns = new ArrayList<String>();long recordsNumber;String sql = new String();File tempDataFile;String filePath = new String();try {br = new BufferedReader(new InputStreamReader(new FileInputStream(fileData)));if (br.ready()) {if ((line = br.readLine()) != null) {do {tableName = siteName + ""_"" + getTableName(line);columns = getTableColumns(line);tempDataFile = new File(""./Data/"" + tableName + "".txt"");tempDataFile.createNewFile();filePath = tempDataFile.getCanonicalPath();sql = generateSQL(tableName, columns, filePath);recordsNumber = getRecordNumber(line);bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(tempDataFile)));for (long i = 0; i < recordsNumber; i++) {bw.write(br.readLine() + ""\r\n"");}bw.close();if (sqlConnector != null) {sqlConnector.executeSQL(sql);} else {return false;}} while ((line = br.readLine()) != null);}br.close();}} catch (Exception e) {ExceptionHandler.handleExcptin(e);}return true;}private Bitmap fetchImage(String urlstr) throws Exception {URL url;url = new URL(urlstr);HttpURLConnection c = (HttpURLConnection) url.openConnection();c.setDoInput(true);c.setRequestProperty(""User-Agent"", ""Agent"");c.connect();InputStream is = c.getInputStream();Bitmap img;img = BitmapFactory.decodeStream(is);return img;}"	5
"private void getRandomGUID(boolean secure) {MessageDigest md5;StringBuilder sbValueBeforeHash = new StringBuilder();try {md5 = MessageDigest.getInstance(""SHA-1"");} catch (NoSuchAlgorithmException e) {throw new ApplicationIllegalArgumentException(e);}long time = System.nanoTime();long rand = 0;if (secure) {rand = MySecureRand.nextLong();} else {rand = MyRand.nextLong();}sbValueBeforeHash.append(SId);sbValueBeforeHash.append("":"");sbValueBeforeHash.append(Long.toString(time));sbValueBeforeHash.append("":"");sbValueBeforeHash.append(Long.toString(rand));valueBeforeHash = sbValueBeforeHash.toString();md5.update(valueBeforeHash.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) {sb.append('0');}sb.append(Integer.toHexString(b));}valueAfterHash = sb.toString();}private Vector _sort(Pair[] ps, String id, int num) {Vector ret = new Vector();boolean swapped = true;int j = 0;Pair tmp;while (swapped) {swapped = false;j++;for (int i = 0; i < ps.length - j; i++) {if (ps[i].c > ps[i + 1].c) {tmp = ps[i];ps[i] = ps[i + 1];ps[i + 1] = tmp;swapped = true;}}}int m = Math.min(num, ps.length);for (int i = m - 1; i >= 0; i--) {if (id == null) ret.addElement(ps[i].n); else if (ps[i].n.startsWith(id) && !ps[i].n.equals(id)) ret.addElement(ps[i].n);}return ret;}private void readVersion() {URL url = ClassLoader.getSystemResource(""version"");if (url == null) {return;}BufferedReader reader = null;String line = null;try {reader = new BufferedReader(new InputStreamReader(url.openStream()));while ((line = reader.readLine()) != null) {if (line.startsWith(""Version="")) {version = (line.split(""=""))[1];}if (line.startsWith(""Revision="")) {revision = (line.split(""=""))[1];}if (line.startsWith(""Date="")) {String sSec = (line.split(""=""))[1];Long lSec = Long.valueOf(sSec);compileDate = new Date(lSec);}}} catch (IOException e) {e.printStackTrace();} finally {if (reader != null) {try {reader.close();} catch (IOException e) {e.printStackTrace();}}}return;}public void testGetResource_FileOutsideOfClasspath() throws Exception {File temp = File.createTempFile(""dozerfiletest"", "".txt"");temp.deleteOnExit();String resourceName = ""file:"" + temp.getAbsolutePath();URL url = loader.getResource(resourceName);assertNotNull(""URL should not be null"", url);InputStream is = url.openStream();assertNotNull(""input stream should not be null"", is);}public static final synchronized String hash(String data) {if (digest == null) {try {digest = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException nsae) {log.error(""Failed to load the MD5 MessageDigest. "" + ""Jive will be unable to function normally."", nsae);}}try {digest.update(data.getBytes(""utf-8""));} catch (UnsupportedEncodingException e) {log.error(e);}return encodeHex(digest.digest());}@Overrideprotected URLConnection openConnection(URL url) throws IOException {return new URLConnection(url) {@Overridepublic void connect() throws IOException {}@Overridepublic InputStream getInputStream() throws IOException {ThemeResource f = getFacelet(getURL().getFile());return new ByteArrayInputStream(f.getText().getBytes());}};}public static void loadPoFile(URL url) {states state = states.IDLE;String msgCtxt = """";String msgId = """";String msgStr = """";try {if (url == null) return;InputStream in = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(in, ""UTF8""));String strLine;while ((strLine = br.readLine()) != null) {if (strLine.startsWith(""msgctxt"")) {if (state != states.MSGCTXT) msgCtxt = """";state = states.MSGCTXT;strLine = strLine.substring(7).trim();}if (strLine.startsWith(""msgid"")) {if (state != states.MSGID) msgId = """";state = states.MSGID;strLine = strLine.substring(5).trim();}if (strLine.startsWith(""msgstr"")) {if (state != states.MSGSTR) msgStr = """";state = states.MSGSTR;strLine = strLine.substring(6).trim();}if (!strLine.startsWith(""\"""")) {state = states.IDLE;msgCtxt = """";msgId = """";msgStr = """";} else {if (state == states.MSGCTXT) {msgCtxt += format(strLine);}if (state == states.MSGID) {if (msgId.isEmpty()) {if (!msgCtxt.isEmpty()) {msgId = msgCtxt + ""|"";msgCtxt = """";}}msgId += format(strLine);}if (state == states.MSGSTR) {msgCtxt = """";msgStr += format(strLine);if (!msgId.isEmpty()) messages.setProperty(msgId, msgStr);}}}in.close();} catch (IOException e) {Logger.logError(e, ""Error loading message.po."");}}public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException {if (key == null || key.length == 0) {throw new IllegalArgumentException(""Argument 'key' cannot be null or an empty array."");}if (salt == null || salt.length == 0) {throw new IllegalArgumentException(""Argument 'salt' cannot be null or an empty array."");}final MessageDigest _md = MessageDigest.getInstance(""MD5"");_md.update(key);_md.update(MAGIC.getBytes());_md.update(salt);final MessageDigest md2 = MessageDigest.getInstance(""MD5"");md2.update(key);md2.update(salt);md2.update(key);byte[] abyFinal = md2.digest();for (int n = key.length; n > 0; n -= 16) {_md.update(abyFinal, 0, n > 16 ? 16 : n);}abyFinal = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };for (int j = 0, i = key.length; i != 0; i >>>= 1) {if ((i & 1) == 1) _md.update(abyFinal, j, 1); else _md.update(key, j, 1);}final StringBuilder sbPasswd = new StringBuilder();sbPasswd.append(MAGIC);sbPasswd.append(new String(salt));sbPasswd.append('$');abyFinal = _md.digest();for (int n = 0; n < 1000; n++) {final MessageDigest md3 = MessageDigest.getInstance(""MD5"");if ((n & 1) != 0) {md3.update(key);} else {md3.update(abyFinal);}if ((n % 3) != 0) {md3.update(salt);}if ((n % 7) != 0) {md3.update(key);}if ((n & 1) != 0) {md3.update(abyFinal);} else {md3.update(key);}abyFinal = md3.digest();}int[] anFinal = new int[] { (abyFinal[0] & 0x7f) | (abyFinal[0] & 0x80), (abyFinal[1] & 0x7f) | (abyFinal[1] & 0x80), (abyFinal[2] & 0x7f) | (abyFinal[2] & 0x80), (abyFinal[3] & 0x7f) | (abyFinal[3] & 0x80), (abyFinal[4] & 0x7f) | (abyFinal[4] & 0x80), (abyFinal[5] & 0x7f) | (abyFinal[5] & 0x80), (abyFinal[6] & 0x7f) | (abyFinal[6] & 0x80), (abyFinal[7] & 0x7f) | (abyFinal[7] & 0x80), (abyFinal[8] & 0x7f) | (abyFinal[8] & 0x80), (abyFinal[9] & 0x7f) | (abyFinal[9] & 0x80), (abyFinal[10] & 0x7f) | (abyFinal[10] & 0x80), (abyFinal[11] & 0x7f) | (abyFinal[11] & 0x80), (abyFinal[12] & 0x7f) | (abyFinal[12] & 0x80), (abyFinal[13] & 0x7f) | (abyFinal[13] & 0x80), (abyFinal[14] & 0x7f) | (abyFinal[14] & 0x80), (abyFinal[15] & 0x7f) | (abyFinal[15] & 0x80) };to64(sbPasswd, anFinal[0] << 16 | anFinal[6] << 8 | anFinal[12], 4);to64(sbPasswd, anFinal[1] << 16 | anFinal[7] << 8 | anFinal[13], 4);to64(sbPasswd, anFinal[2] << 16 | anFinal[8] << 8 | anFinal[14], 4);to64(sbPasswd, anFinal[3] << 16 | anFinal[9] << 8 | anFinal[15], 4);to64(sbPasswd, anFinal[4] << 16 | anFinal[10] << 8 | anFinal[5], 4);to64(sbPasswd, anFinal[11], 2);return sbPasswd.toString();}public static String computeMD5(InputStream input) {InputStream digestStream = null;try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");digestStream = new DigestInputStream(input, md5);IOUtils.copy(digestStream, new NullOutputStream());return new String(Base64.encodeBase64(md5.digest()), ""UTF-8"");} catch (NoSuchAlgorithmException e) {throw new RuntimeException(e);} catch (IOException e) {throw new RuntimeException(e);} finally {IOUtils.closeQuietly(digestStream);}}public static void writeToFile(InputStream input, File file, ProgressListener listener, long length) {OutputStream output = null;try {output = new CountingOutputStream(new FileOutputStream(file), listener, length);IOUtils.copy(input, output);} catch (IOException e) {throw new RuntimeException(e);} finally {IOUtils.closeQuietly(input);IOUtils.closeQuietly(output);}}"	5
"public FlashExObj get(String s, int page) {FlashExObj retVal = new FlashExObj();s = s.replaceAll(""[^a-z0-9_]"", """");ArrayList list = new ArrayList();retVal.list = list;try {String result = null;URL url = new URL(""http://www.flashcardexchange.com/flashcards/list/"" + URLEncoder.encode(s, ""UTF-8"") + ""?page="" + page);URLConnection connection = url.openConnection();connection.setRequestProperty(""User-Agent"", ""Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)"");connection.setDoOutput(false);BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream(), ""UTF-8""));String inputLine;int state = 2;StringBuilder sb = new StringBuilder();while ((inputLine = in.readLine()) != null) {if (state == 0) {int textPos = inputLine.indexOf(""Number of Card"");if (textPos >= 0) {state = 1;}} else if (state == 1) {int s1 = inputLine.indexOf("">"");int s2 = inputLine.indexOf(""<"", 1);if (s1 >= 0 && s1 < s2) {String numOfCardStr = inputLine.substring(s1 + 1, s2);try {} catch (Exception e) {}state = 2;}} else if (state == 2) {int textPos = inputLine.indexOf(""tbody class=\""shaded\"""");if (textPos >= 0) {state = 3;}} else if (state == 3) {int textPos = inputLine.indexOf(""tbody"");if (textPos >= 0) {break;}sb.append(inputLine);sb.append("" "");}}in.close();Pattern myPattern = Pattern.compile(""<td>(.*?)</td>"");Matcher myMatcher = myPattern.matcher(sb);String str;int counter = 0;String buff[] = new String[4];while (myMatcher.find()) {int tt = counter % 4;buff[tt] = myMatcher.group(1);if (tt == 3) {String toAdd[] = new String[2];toAdd[0] = buff[1];toAdd[1] = buff[2];list.add(toAdd);}counter++;}} catch (Exception e) {e.printStackTrace();}return retVal;}protected void handleUrl(URL url) throws Exception {File file = new File(dir.getAbsolutePath() + ""/"" + new Date().getTime() + ""."" + this.ext);FileWriter writer = new FileWriter(file);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String s;while ((s = in.readLine()) != null) {writer.write(s + ""\n"");}in.close();writer.close();}public static void contentTrans(String contents, String urlString, String urlString2, String serverIp, int port) {try {URL url = new URL(urlString);url.openStream();} catch (Exception e) {e.printStackTrace();}try {Socket server = new Socket(InetAddress.getByName(serverIp), port);OutputStream outputStream = server.getOutputStream();BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(outputStream, ""UTF-8""));bufferedWriter.write(contents);bufferedWriter.flush();bufferedWriter.close();server.close();} catch (Exception e) {e.printStackTrace();}try {URL url2 = new URL(urlString2);url2.openStream();} catch (Exception e) {e.printStackTrace();}}public static void fileTrans(String filePath, String urlString, String urlString2, String serverIp, int port) {try {URL url = new URL(urlString);url.openStream();} catch (Exception e) {e.printStackTrace();}File file = new File(filePath);try {FileInputStream fis = new FileInputStream(file);Socket server = new Socket(InetAddress.getByName(serverIp), port);OutputStream outputStream = server.getOutputStream();DataOutputStream dataOutputStream = new DataOutputStream(new BufferedOutputStream(outputStream));byte[] buffer = new byte[2048];int num = fis.read(buffer);while (num != -1) {dataOutputStream.write(buffer, 0, num);dataOutputStream.flush();num = fis.read(buffer);}fis.close();dataOutputStream.close();server.close();} catch (Exception e) {e.printStackTrace();}try {URL url2 = new URL(urlString2);url2.openStream();} catch (Exception e) {e.printStackTrace();}}public static boolean copy(String source, String dest) {int bytes;byte array[] = new byte[BUFFER_LEN];try {InputStream is = new FileInputStream(source);OutputStream os = new FileOutputStream(dest);while ((bytes = is.read(array, 0, BUFFER_LEN)) > 0) os.write(array, 0, bytes);is.close();os.close();return true;} catch (IOException e) {return false;}}@Overridepublic void run() {try {FileChannel in = new FileInputStream(inputfile).getChannel();long pos = 0;for (int i = 1; i <= noofparts; i++) {FileChannel out = new FileOutputStream(outputfile.getAbsolutePath() + ""."" + ""v"" + i).getChannel();status.setText(""Rozdělovač: Rozděluji část "" + i + "".."");if (remainingsize >= splitsize) {in.transferTo(pos, splitsize, out);pos += splitsize;remainingsize -= splitsize;} else {in.transferTo(pos, remainingsize, out);}pb.setValue(100 * i / noofparts);out.close();}in.close();if (deleteOnFinish) new File(inputfile + """").delete();status.setText(""Rozdělovač: Hotovo.."");JOptionPane.showMessageDialog(null, ""Rozděleno!"", ""Rozdělovač"", JOptionPane.INFORMATION_MESSAGE);} catch (IOException ex) {}}public IStatus runInUIThread(IProgressMonitor monitor) {monitor.beginTask(Strings.MSG_CONNECT_SERVER, 3);InputStream in = null;try {URL url = createOpenUrl(resource, pref);if (url != null) {URLConnection con = url.openConnection();monitor.worked(1);monitor.setTaskName(Strings.MSG_WAIT_FOR_SERVER);con.connect();in = con.getInputStream();in.read();monitor.worked(1);monitor.setTaskName(NLS.bind(Strings.MSG_OPEN_URL, url));open(url, resource.getProject(), pref);monitor.worked(1);}} catch (ConnectException con) {if (count < 3) {ConnectAndOpenJob job = new ConnectAndOpenJob(resource, pref, ++count);job.schedule(1000L);} else {Activator.log(con);}} catch (Exception e) {Activator.log(e);} finally {Streams.close(in);monitor.done();}return Status.OK_STATUS;}private String fetchHtml(URL url) throws IOException {URLConnection connection;if (StringUtils.isNotBlank(proxyHost) && proxyPort != null) {Proxy proxy = new Proxy(Proxy.Type.HTTP, InetSocketAddress.createUnresolved(proxyHost, proxyPort));connection = url.openConnection(proxy);} else {connection = url.openConnection();}Object content = connection.getContent();if (content instanceof InputStream) {return IOUtils.toString(InputStream.class.cast(content));} else {String msg = ""Bad content type! "" + content.getClass();log.error(msg);throw new IOException(msg);}}public static final String Digest(String credentials, String algorithm, String encoding) {try {MessageDigest md = (MessageDigest) MessageDigest.getInstance(algorithm).clone();if (encoding == null) {md.update(credentials.getBytes());} else {md.update(credentials.getBytes(encoding));}return (HexUtils.convert(md.digest()));} catch (Exception ex) {log.error(ex);return credentials;}}public DefaultMainControl(@NotNull final FileFilter scriptFileFilter, @NotNull final String scriptExtension, @NotNull final String scriptName, final int spellType, @Nullable final String spellFile, @NotNull final String scriptsDir, final ErrorView errorView, @NotNull final EditorFactory<G, A, R> editorFactory, final boolean forceReadFromFiles, @NotNull final GlobalSettings globalSettings, @NotNull final ConfigSourceFactory configSourceFactory, @NotNull final PathManager pathManager, @NotNull final GameObjectMatchers gameObjectMatchers, @NotNull final GameObjectFactory<G, A, R> gameObjectFactory, @NotNull final ArchetypeTypeSet archetypeTypeSet, @NotNull final ArchetypeSet<G, A, R> archetypeSet, @NotNull final ArchetypeChooserModel<G, A, R> archetypeChooserModel, @NotNull final AutojoinLists<G, A, R> autojoinLists, @NotNull final AbstractMapManager<G, A, R> mapManager, @NotNull final PluginModel<G, A, R> pluginModel, @NotNull final DelegatingMapValidator<G, A, R> validators, @NotNull final ScriptedEventEditor<G, A, R> scriptedEventEditor, @NotNull final AbstractResources<G, A, R> resources, @NotNull final Spells<NumberSpell> numberSpells, @NotNull final Spells<GameObjectSpell<G, A, R>> gameObjectSpells, @NotNull final PluginParameterFactory<G, A, R> pluginParameterFactory, @NotNull final ValidatorPreferences validatorPreferences, @NotNull final MapWriter<G, A, R> mapWriter) {final XmlHelper xmlHelper;try {xmlHelper = new XmlHelper();} catch (final ParserConfigurationException ex) {log.fatal(""Cannot create XML parser: "" + ex.getMessage());throw new MissingResourceException(""Cannot create XML parser: "" + ex.getMessage(), null, null);}final AttributeRangeChecker<G, A, R> attributeRangeChecker = new AttributeRangeChecker<G, A, R>(validatorPreferences);final EnvironmentChecker<G, A, R> environmentChecker = new EnvironmentChecker<G, A, R>(validatorPreferences);final DocumentBuilder documentBuilder = xmlHelper.getDocumentBuilder();try {final URL url = IOUtils.getResource(globalSettings.getConfigurationDirectory(), ""GameObjectMatchers.xml"");final ErrorViewCollector gameObjectMatchersErrorViewCollector = new ErrorViewCollector(errorView, url);try {documentBuilder.setErrorHandler(new ErrorViewCollectorErrorHandler(gameObjectMatchersErrorViewCollector, ErrorViewCategory.GAMEOBJECTMATCHERS_FILE_INVALID));try {final GameObjectMatchersParser gameObjectMatchersParser = new GameObjectMatchersParser(documentBuilder, xmlHelper.getXPath());gameObjectMatchersParser.readGameObjectMatchers(url, gameObjectMatchers, gameObjectMatchersErrorViewCollector);} finally {documentBuilder.setErrorHandler(null);}} catch (final IOException ex) {gameObjectMatchersErrorViewCollector.addWarning(ErrorViewCategory.GAMEOBJECTMATCHERS_FILE_INVALID, ex.getMessage());}final ValidatorFactory<G, A, R> validatorFactory = new ValidatorFactory<G, A, R>(validatorPreferences, gameObjectMatchers, globalSettings, mapWriter);loadValidators(validators, validatorFactory, errorView);editorFactory.initMapValidators(validators, gameObjectMatchersErrorViewCollector, globalSettings, gameObjectMatchers, attributeRangeChecker, validatorPreferences);validators.addValidator(attributeRangeChecker);validators.addValidator(environmentChecker);} catch (final FileNotFoundException ex) {errorView.addWarning(ErrorViewCategory.GAMEOBJECTMATCHERS_FILE_INVALID, ""GameObjectMatchers.xml: "" + ex.getMessage());}final GameObjectMatcher shopSquareMatcher = gameObjectMatchers.getMatcher(""system_shop_square"", ""shop_square"");if (shopSquareMatcher != null) {final GameObjectMatcher noSpellsMatcher = gameObjectMatchers.getMatcher(""system_no_spells"", ""no_spells"");if (noSpellsMatcher != null) {final GameObjectMatcher blockedMatcher = gameObjectMatchers.getMatcher(""system_blocked"", ""blocked"");validators.addValidator(new ShopSquareChecker<G, A, R>(validatorPreferences, shopSquareMatcher, noSpellsMatcher, blockedMatcher));}final GameObjectMatcher paidItemMatcher = gameObjectMatchers.getMatcher(""system_paid_item"");if (paidItemMatcher != null) {validators.addValidator(new PaidItemShopSquareChecker<G, A, R>(validatorPreferences, shopSquareMatcher, paidItemMatcher));}}Map<String, TreasureTreeNode> specialTreasureLists;try {final URL url = IOUtils.getResource(globalSettings.getConfigurationDirectory(), ""TreasureLists.xml"");final ErrorViewCollector treasureListsErrorViewCollector = new ErrorViewCollector(errorView, url);try {final InputStream inputStream = url.openStream();try {documentBuilder.setErrorHandler(new ErrorViewCollectorErrorHandler(treasureListsErrorViewCollector, ErrorViewCategory.TREASURES_FILE_INVALID));try {final Document specialTreasureListsDocument = documentBuilder.parse(new InputSource(inputStream));specialTreasureLists = TreasureListsParser.parseTreasureLists(specialTreasureListsDocument);} finally {documentBuilder.setErrorHandler(null);}} finally {inputStream.close();}} catch (final IOException ex) {treasureListsErrorViewCollector.addWarning(ErrorViewCategory.TREASURES_FILE_INVALID, ex.getMessage());specialTreasureLists = Collections.emptyMap();} catch (final SAXException ex) {treasureListsErrorViewCollector.addWarning(ErrorViewCategory.TREASURES_FILE_INVALID, ex.getMessage());specialTreasureLists = Collections.emptyMap();}} catch (final FileNotFoundException ex) {errorView.addWarning(ErrorViewCategory.TREASURES_FILE_INVALID, ""TreasureLists.xml: "" + ex.getMessage());specialTreasureLists = Collections.emptyMap();}final ConfigSource configSource = forceReadFromFiles ? configSourceFactory.getFilesConfigSource() : configSourceFactory.getConfigSource(globalSettings.getConfigSourceName());treasureTree = TreasureLoader.parseTreasures(errorView, specialTreasureLists, configSource, globalSettings);final ArchetypeAttributeFactory archetypeAttributeFactory = new DefaultArchetypeAttributeFactory();final ArchetypeAttributeParser archetypeAttributeParser = new ArchetypeAttributeParser(archetypeAttributeFactory);final ArchetypeTypeParser archetypeTypeParser = new ArchetypeTypeParser(archetypeAttributeParser);ArchetypeTypeList eventTypeSet = null;try {final URL url = IOUtils.getResource(globalSettings.getConfigurationDirectory(), CommonConstants.TYPEDEF_FILE);final ErrorViewCollector typesErrorViewCollector = new ErrorViewCollector(errorView, url);documentBuilder.setErrorHandler(new ErrorViewCollectorErrorHandler(typesErrorViewCollector, ErrorViewCategory.GAMEOBJECTMATCHERS_FILE_INVALID));try {final ArchetypeTypeSetParser archetypeTypeSetParser = new ArchetypeTypeSetParser(documentBuilder, archetypeTypeSet, archetypeTypeParser);archetypeTypeSetParser.loadTypesFromXML(typesErrorViewCollector, new InputSource(url.toString()));} finally {documentBuilder.setErrorHandler(null);}final ArchetypeTypeList eventTypeSetTmp = archetypeTypeSet.getList(""event"");if (eventTypeSetTmp == null) {typesErrorViewCollector.addWarning(ErrorViewCategory.TYPES_ENTRY_INVALID, ""list 'list_event' does not exist"");} else {eventTypeSet = eventTypeSetTmp;}} catch (final FileNotFoundException ex) {errorView.addWarning(ErrorViewCategory.TYPES_FILE_INVALID, CommonConstants.TYPEDEF_FILE + "": "" + ex.getMessage());}if (eventTypeSet == null) {eventTypeSet = new ArchetypeTypeList();}scriptArchUtils = editorFactory.newScriptArchUtils(eventTypeSet);final ScriptedEventFactory<G, A, R> scriptedEventFactory = editorFactory.newScriptedEventFactory(scriptArchUtils, gameObjectFactory, scriptedEventEditor, archetypeSet);scriptArchEditor = new DefaultScriptArchEditor<G, A, R>(scriptedEventFactory, scriptExtension, scriptName, scriptArchUtils, scriptFileFilter, globalSettings, mapManager, pathManager);scriptedEventEditor.setScriptArchEditor(scriptArchEditor);scriptArchData = editorFactory.newScriptArchData();scriptArchDataUtils = editorFactory.newScriptArchDataUtils(scriptArchUtils, scriptedEventFactory, scriptedEventEditor);final long timeStart = System.currentTimeMillis();if (log.isInfoEnabled()) {log.info(""Start to load archetypes..."");}configSource.read(globalSettings, resources, errorView);for (final R archetype : archetypeSet.getArchetypes()) {final CharSequence editorFolder = archetype.getEditorFolder();if (editorFolder != null && !editorFolder.equals(GameObject.EDITOR_FOLDER_INTERN)) {final String[] tmp = StringUtils.PATTERN_SLASH.split(editorFolder, 2);if (tmp.length == 2) {final String panelName = tmp[0];final String folderName = tmp[1];archetypeChooserModel.addArchetype(panelName, folderName, archetype);}}}if (log.isInfoEnabled()) {log.info(""Archetype loading took "" + (double) (System.currentTimeMillis() - timeStart) / 1000.0 + "" seconds."");}if (spellType != 0) {new ArchetypeSetSpellLoader<G, A, R>(gameObjectFactory).load(archetypeSet, spellType, gameObjectSpells);gameObjectSpells.sort();}if (spellFile != null) {try {final URL url = IOUtils.getResource(globalSettings.getConfigurationDirectory(), spellFile);final ErrorViewCollector errorViewCollector = new ErrorViewCollector(errorView, url);documentBuilder.setErrorHandler(new ErrorViewCollectorErrorHandler(errorViewCollector, ErrorViewCategory.SPELLS_FILE_INVALID));try {XMLSpellLoader.load(errorViewCollector, url, xmlHelper.getDocumentBuilder(), numberSpells);} finally {documentBuilder.setErrorHandler(null);}} catch (final FileNotFoundException ex) {errorView.addWarning(ErrorViewCategory.SPELLS_FILE_INVALID, spellFile + "": "" + ex.getMessage());}numberSpells.sort();}final File scriptsFile = new File(globalSettings.getMapsDirectory(), scriptsDir);final PluginModelParser<G, A, R> pluginModelParser = new PluginModelParser<G, A, R>(pluginParameterFactory);new PluginModelLoader<G, A, R>(pluginModelParser).loadPlugins(errorView, scriptsFile, pluginModel);new AutojoinListsParser<G, A, R>(errorView, archetypeSet, autojoinLists).loadList(globalSettings.getConfigurationDirectory());ArchetypeTypeChecks.addChecks(archetypeTypeSet, attributeRangeChecker, environmentChecker);}"	5
"protected String insertCommand(String command) throws ServletException {String digest;try {MessageDigest md = MessageDigest.getInstance(m_messagedigest_algorithm);md.update(command.getBytes());byte bytes[] = new byte[20];m_random.nextBytes(bytes);md.update(bytes);digest = bytesToHex(md.digest());} catch (NoSuchAlgorithmException e) {throw new ServletException(""NoSuchAlgorithmException while "" + ""attempting to generate graph ID: "" + e);}String id = System.currentTimeMillis() + ""-"" + digest;m_map.put(id, command);return id;}ServerInfo getServerInfo(String key, String protocol) throws InvalidKeyException, NoSuchAlgorithmException, InvalidKeySpecException, NoSuchPaddingException, IOException, ClassNotFoundException, IllegalBlockSizeException, BadPaddingException {DESedeKeySpec ks = new DESedeKeySpec(Base64.decode(key));SecretKeyFactory skf = SecretKeyFactory.getInstance(""DESede"");SecretKey sk = skf.generateSecret(ks);Cipher cipher = Cipher.getInstance(""DESede"");cipher.init(Cipher.DECRYPT_MODE, sk);ClassLoader cl = this.getClass().getClassLoader();URL url = cl.getResource(protocol + "".sobj"");JarURLConnection jc = (JarURLConnection) url.openConnection();ObjectInputStream os = new ObjectInputStream(jc.getInputStream());SealedObject so = (SealedObject) os.readObject();return (ServerInfo) so.getObject(cipher);}public PhoneSetImpl(URL url) throws IOException {BufferedReader reader;String line;phonesetMap = new HashMap();reader = new BufferedReader(new InputStreamReader(url.openStream()));line = reader.readLine();lineCount++;while (line != null) {if (!line.startsWith(""***"")) {parseAndAdd(line);}line = reader.readLine();}reader.close();}private void createWikiPages(WikiContext context) throws PluginException {OntologyWikiPageName owpn = new OntologyWikiPageName(omemo.getFormDataAlias().toUpperCase(), omemo.getFormDataVersionDate());String wikiPageFullFileName = WikiPageName2FullFileName(context, owpn.toString());String rdfFileNameWithPath = getWorkDir(context) + File.separator + owpn.toFileName();FileOutputStream fos = null;FileInputStream fis = null;try {fos = new FileOutputStream(wikiPageFullFileName);fis = new FileInputStream(rdfFileNameWithPath);InfoExtractor infoe = new InfoExtractor(fis, omemo.getFormDataNS(), omemo.getFormDataOntLang());infoe.writePage(getWorkDir(context), owpn, Omemo.checksWikiPageName);fis.close();fos.close();} catch (Exception e) {log.error(""Can not read local rdf file or can not write wiki page"");throw new PluginException(""Error creating wiki pages. See logs"");}}public static String getSignature(String s) {try {final AsciiEncoder coder = new AsciiEncoder();final MessageDigest msgDigest = MessageDigest.getInstance(""MD5"");msgDigest.update(s.getBytes(""UTF-8""));final byte[] digest = msgDigest.digest();return coder.encode(digest);} catch (NoSuchAlgorithmException e) {e.printStackTrace();throw new IllegalStateException();} catch (UnsupportedEncodingException e) {e.printStackTrace();throw new IllegalStateException();}}public static byte[] request(String remoteUrl, boolean keepalive) throws Exception {Log.d(TAG, String.format(""started request(remote=%s)"", remoteUrl));Process.setThreadPriority(Process.THREAD_PRIORITY_LOWEST);byte[] buffer = new byte[1024];URL url = new URL(remoteUrl);HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.setAllowUserInteraction(false);connection.setRequestProperty(""Viewer-Only-Client"", ""1"");connection.setRequestProperty(""Client-Daap-Version"", ""3.10"");connection.setRequestProperty(""Accept-Encoding"", ""gzip, deflate"");if (!keepalive) {connection.setConnectTimeout(1200000);connection.setReadTimeout(1200000);} else {connection.setReadTimeout(0);}connection.connect();if (connection.getResponseCode() >= HttpURLConnection.HTTP_UNAUTHORIZED) throw new RequestException(""HTTP Error Response Code: "" + connection.getResponseCode(), connection.getResponseCode());String encoding = connection.getContentEncoding();InputStream inputStream = null;if (encoding != null && encoding.equalsIgnoreCase(""gzip"")) {inputStream = new GZIPInputStream(connection.getInputStream());} else if (encoding != null && encoding.equalsIgnoreCase(""deflate"")) {inputStream = new InflaterInputStream(connection.getInputStream(), new Inflater(true));} else {inputStream = connection.getInputStream();}ByteArrayOutputStream os = new ByteArrayOutputStream();try {int bytesRead;while ((bytesRead = inputStream.read(buffer)) != -1) {os.write(buffer, 0, bytesRead);}} finally {if (os != null) {os.flush();os.close();}if (inputStream != null) {inputStream.close();}}return os.toByteArray();}@Overridepublic void doHandler(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {String directURL = request.getRequestURL().toString();response.setCharacterEncoding(""gbk"");PrintWriter out = response.getWriter();try {directURL = urlTools.urlFilter(directURL, true);URL url = new URL(directURL);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream(), ""gbk""));String line;while ((line = in.readLine()) != null) {out.println(line);}in.close();} catch (Exception e) {out.println(""file not find"");}out.flush();}public static void copyFile(File sourceFile, File destFile) throws IOException {if (!sourceFile.exists()) {return;}if (!destFile.exists()) {destFile.createNewFile();}FileChannel source = null;FileChannel destination = null;source = new FileInputStream(sourceFile).getChannel();destination = new FileOutputStream(destFile).getChannel();if (destination != null && source != null) {destination.transferFrom(source, 0, source.size());}if (source != null) {source.close();}if (destination != null) {destination.close();}}public static int sendButton(String url, String id, String command) throws ClientProtocolException, IOException {String connectString = url + ""/rest/button/"" + id + ""/"" + command;HttpClient client = new DefaultHttpClient();HttpPost post = new HttpPost(connectString);HttpResponse response = client.execute(post);int code = response.getStatusLine().getStatusCode();return code;}private void readFromStorableInput(String filename) {try {URL url = new URL(getCodeBase(), filename);InputStream stream = url.openStream();StorableInput input = new StorableInput(stream);fDrawing.release();fDrawing = (Drawing) input.readStorable();view().setDrawing(fDrawing);} catch (IOException e) {initDrawing();showStatus(""Error:"" + e);}}"	5
"private void copy(File source, File target) throws IOException {FileChannel in = (new FileInputStream(source)).getChannel();FileChannel out = (new FileOutputStream(target)).getChannel();in.transferTo(0, source.length(), out);in.close();out.close();}public File createFileFromClasspathResource(String resourceUrl) throws IOException {File fichierTest = File.createTempFile(""xmlFieldTestFile"", """");FileOutputStream fos = new FileOutputStream(fichierTest);InputStream is = XmlFieldDomSelectorTest.class.getResourceAsStream(resourceUrl);IOUtils.copy(is, fos);is.close();fos.close();return fichierTest;}public static String sha1(String src) {MessageDigest md1 = null;try {md1 = MessageDigest.getInstance(""SHA-1"");} catch (NoSuchAlgorithmException e) {e.printStackTrace();}try {md1.update(src.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {e.printStackTrace();}return hex(md1.digest());}public String move(Integer param) {LOG.debug(""move "" + param);StringBuffer ret = new StringBuffer();try {URL url = new URL(""http://"" + host + ""/decoder_control.cgi?command="" + param + ""&user="" + user + ""&pwd="" + password);URLConnection con = url.openConnection();BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));String inputLine;while ((inputLine = in.readLine()) != null) {ret.append(inputLine);}in.close();} catch (Exception e) {logException(e);connect(host, user, password);}return ret.toString();}public static LinkedList<String> read(URL url) throws IOException {LinkedList<String> data = new LinkedList<String>();HttpURLConnection con = (HttpURLConnection) url.openConnection();BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream()));String input = """";while (true) {input = br.readLine();if (input == null) break;data.add(input);}br.close();return data;}public static LinkedList<String> read(URL url, String exc) throws IOException {LinkedList<String> data = new LinkedList<String>();HttpURLConnection con = (HttpURLConnection) url.openConnection();BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream()));String input = """";while (true) {input = br.readLine();if (input == null) break;if (!input.startsWith(exc)) {data.add(input);}}br.close();return data;}private void connect(URL url) throws IOException {String protocol = url.getProtocol();if (!protocol.equals(""http"")) throw new IllegalArgumentException(""URL must use 'http:' protocol"");int port = url.getPort();if (port == -1) port = 80;fileName = url.getFile();conn = (HttpURLConnection) url.openConnection();conn.setRequestMethod(""POST"");conn.setDoOutput(true);conn.setDoInput(true);toServer = new OutputStreamWriter(conn.getOutputStream());fromServer = conn.getInputStream();}public void run() {waiting(200);try {URL url = new URL(urlAddress);SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser sp = spf.newSAXParser();XMLReader xr = sp.getXMLReader();XMLHandlerSingleAlbum myXMLHandler = new XMLHandlerSingleAlbum();xr.setContentHandler(myXMLHandler);xr.parse(new InputSource(url.openStream()));statuscode = myXMLHandler.statuscode;if (statuscode != 200 && statuscode != 206) {throw new Exception();}genre = myXMLHandler.genre;genreId = myXMLHandler.genreId;labelId = myXMLHandler.labelId;label = myXMLHandler.label;date = myXMLHandler.releaseDate;rating = myXMLHandler.rating;imageURL = myXMLHandler.imageURL;artist = myXMLHandler.artist;artistId = myXMLHandler.artistId;numberOfTracks = myXMLHandler.nItems;trackNames = myXMLHandler.tracks;handlerSetContent.sendEmptyMessage(0);dialog.dismiss();updateImage();} catch (Exception e) {final Exception ef = e;nameTextView.post(new Runnable() {public void run() {nameTextView.setText(R.string.couldnt_get_album_info);}});}if (dialog.isShowing()) {dialog.dismiss();}handlerDoneLoading.sendEmptyMessage(0);}public static void main(String[] args) {FileDialog fd = new FileDialog(new Frame(), ""Find a .def file"", FileDialog.LOAD);boolean proceed = true;String input = """";DataInputStream dis;OutputStream out;InputStream in;File out_file, in_file;byte[] buffer = new byte[2048];int bytes_read;while (proceed) {fd.show();if (fd.getFile() != null) {try {in_file = new File(fd.getDirectory(), fd.getFile());out_file = new File(fd.getDirectory(), fd.getFile() + "".out"");out = new FileOutputStream(out_file);in = new MSZipInputStream(new FileInputStream(in_file));while ((bytes_read = in.read(buffer)) != -1) out.write(buffer, 0, bytes_read);in.close();out.close();} catch (IOException e) {e.printStackTrace();}}System.out.println(""Do another (y/n)?"");dis = new DataInputStream(System.in);try {input = dis.readLine();} catch (Exception blah) {}if (input.toLowerCase().startsWith(""n"")) proceed = false;}}public static String criptografar(String senha) {if (senha == null) {return null;}try {MessageDigest digest = MessageDigest.getInstance(""MD5"");digest.update(senha.getBytes());BASE64Encoder encoder = new BASE64Encoder();return encoder.encode(digest.digest());} catch (NoSuchAlgorithmException ns) {LoggerFactory.getLogger(UtilAdrs.class).error(Msg.EXCEPTION_MESSAGE, UtilAdrs.class.getSimpleName(), ns);return senha;}}"	5
"protected void loadResourceLocations() {try {for (String path : resourceLocations) {if (path.startsWith(""${"") && path.endsWith(""}"")) {int start = path.indexOf('{') + 1;int end = path.indexOf('}');String key = path.substring(start, end).trim();if (key.equals(ApplicationConstants.RESOURCE_SQL_LOCATION_PROP_NAME)) path = AdminHelper.getRepository().getURI(""sql""); else path = AdminHelper.getRepository().getSetupApplicationProperties().get(key);log.debug(key + ""="" + path);}FileObject fo = VFSUtils.resolveFile(path);if (fo.exists()) {URL url = fo.getURL();url.openConnection();if (fastDeploy) {if (log.isDebugEnabled()) {log.debug(""Fast deploy : "" + url);AdminSqlQueryFactory builder = null;for (DirectoryListener listener : scanner.getDirectoryListeners()) {if (listener instanceof AdminSqlQueryFactory) {builder = (AdminSqlQueryFactory) listener;}}File file = new File(url.getFile());fastDeploy(file, builder);}}scanner.addScanURL(url);}}} catch (Exception e) {}}public static String encripta(String senha) throws GCIException {LOGGER.debug(INICIANDO_METODO + ""encripta(String)"");try {MessageDigest digest = MessageDigest.getInstance(""MD5"");digest.update(senha.getBytes());BASE64Encoder encoder = new BASE64Encoder();return encoder.encode(digest.digest());} catch (NoSuchAlgorithmException e) {LOGGER.fatal(e.getMessage(), e);throw new GCIException(e);} finally {LOGGER.debug(FINALIZANDO_METODO + ""encripta(String)"");}}public static String descripta(String senha) throws GCIException {LOGGER.debug(INICIANDO_METODO + ""descripta(String)"");try {MessageDigest digest = MessageDigest.getInstance(""MD5"");digest.update(senha.getBytes());BASE64Encoder encoder = new BASE64Encoder();return encoder.encode(digest.digest());} catch (NoSuchAlgorithmException e) {LOGGER.fatal(e.getMessage(), e);throw new GCIException(e);} finally {LOGGER.debug(FINALIZANDO_METODO + ""descripta(String)"");}}private InputStream classpathStream(String path) {InputStream in = null;URL url = getClass().getClassLoader().getResource(path);if (url != null) {try {in = url.openStream();} catch (IOException e) {e.printStackTrace();}}return in;}public void loadExistingAntlibs(ClassLoader classLoader) {URL antlibUrl;URI antlibUri;try {Enumeration<URL> resources = classLoader == null ? ClassLoader.getSystemResources(antLibsResource) : classLoader.getResources(antLibsResource);while (resources.hasMoreElements()) {URL url = resources.nextElement();InputStream stream = url.openStream();BufferedReader reader = new BufferedReader(new InputStreamReader(stream, ""UTF-8""));for (String line = reader.readLine(); line != null; line = reader.readLine()) {String pkg = line.trim();URI uri = URI.create(""antlib:"" + pkg);URI resource2antlib = URI.create(antLibsResource2root + pkg.replace('.', '/') + (pkg.isEmpty() ? """" : ""/"") + ""antlib.xml"");antlibUri = NetUtils.resolve(url.toURI(), resource2antlib);try {antlibUrl = antlibUri.toURL();} catch (IllegalArgumentException e) {System.err.println(""base uri: "" + url);System.err.println(""relativepath: "" + resource2antlib);System.err.println(""target uri: "" + antlibUri);throw new RuntimeException(antlibUri.toString(), e);}loadAntLib(antlibUrl, uri);}reader.close();stream.close();}} catch (IOException e) {throw new RuntimeException(e);} catch (URISyntaxException e) {throw new RuntimeException(e);}}public HttpResponse fetch(HttpServletRequest request) throws IOException {GUI = SwingUI.getApplicatoin();DefaultHttpClient httpclient = new DefaultHttpClient();CookieSpecFactory csf = new CookieSpecFactory() {public CookieSpec newInstance(HttpParams params) {return new BrowserCompatSpec() {@Overridepublic void validate(Cookie cookie, CookieOrigin origin) throws MalformedCookieException {}};}};if (Helper.useProxy()) {HttpHost proxy = new HttpHost(Helper.getProxyServer(), Helper.getProxyPort());httpclient.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy);}httpclient.getCookieSpecs().register(""easy"", csf);httpclient.getParams().setParameter(ClientPNames.COOKIE_POLICY, ""easy"");String currentRemoteGAEHost = Helper.getRemoteServer();try {HttpUriRequest httpRequest = createRequest(request);addHeader(request, httpRequest);HttpResponse response = httpclient.execute(httpRequest);if (response.getStatusLine().getStatusCode() == HttpStatus.SC_FORBIDDEN) {challengeProxy(currentRemoteGAEHost);}logger.info(Helper.count.incrementAndGet() + "" Response received from "" + request.getRequestURL().toString() + "", status is "" + response.getStatusLine());GUI.updateFetchCount();return response;} catch (ClientProtocolException e) {logger.error(""Fetch ClientProtocol Error"", e);throw e;} catch (IOException e) {logger.error(""Fetch IO Error"", e);throw e;}}String getLatestVersion() {try {URL url = new URL(Constants.VERSION_FILE_URL);URLConnection connection = url.openConnection();connection.setConnectTimeout(15000);InputStream in = connection.getInputStream();BufferedReader br = new BufferedReader(new InputStreamReader(in));return br.readLine();} catch (Exception ex) {return null;}}public void connectToUrl(String url_address) {message = new StringBuffer("""");try {URL url = new URL(url_address);try {HttpsURLConnection httpsConnection = (HttpsURLConnection) url.openConnection();httpsConnection.setDoOutput(false);httpsConnection.connect();message.append(""<BR>\n Connection Code:["" + httpsConnection.getResponseCode() + ""]"");message.append(""<BR>\n Response Message:["" + httpsConnection.getResponseMessage() + ""]"");InputStreamReader insr = new InputStreamReader(httpsConnection.getInputStream());BufferedReader in = new BufferedReader(insr);fullStringBuffer = new StringBuffer("""");String temp = in.readLine();while (temp != null) {fullStringBuffer.append(temp);temp = in.readLine();}in.close();} catch (IOException e) {message.append(""<BR>\n [Error][IOException]["" + e.getMessage() + ""]"");}} catch (MalformedURLException e) {message.append(""<BR>\n [Error][MalformedURLException]["" + e.getMessage() + ""]"");} catch (Exception e) {message.append(""<BR>\n [Error][Exception]["" + e.getMessage() + ""]"");}}public boolean refresh() {try {synchronized (text) {stream = (new URL(url)).openStream();BufferedReader reader = new BufferedReader(new InputStreamReader(stream));String line;StringBuilder sb = new StringBuilder();while ((line = reader.readLine()) != null) {sb.append(line);sb.append(""\n"");}text = sb.toString();}price = 0;date = null;} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();return false;} finally {if (stream != null) try {stream.close();} catch (IOException e) {e.printStackTrace();}}return true;}public void convert(File src, File dest) throws IOException {InputStream in = new BufferedInputStream(new FileInputStream(src));DcmParser p = pfact.newDcmParser(in);Dataset ds = fact.newDataset();p.setDcmHandler(ds.getDcmHandler());try {FileFormat format = p.detectFileFormat();if (format != FileFormat.ACRNEMA_STREAM) {System.out.println(""\n"" + src + "": not an ACRNEMA stream!"");return;}p.parseDcmFile(format, Tags.PixelData);if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {System.out.println(""\n"" + src + "": contains UIDs!"" + "" => probable already DICOM - do not convert"");return;}boolean hasPixelData = p.getReadTag() == Tags.PixelData;boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;int pxlen = p.getReadLength();if (hasPixelData) {if (inflate) {ds.putUS(Tags.BitsAllocated, 16);pxlen = pxlen * 4 / 3;}if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {System.out.println(""\n"" + src + "": mismatch pixel data length!"" + "" => do not convert"");return;}}ds.putUI(Tags.StudyInstanceUID, uid(studyUID));ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));ds.putUI(Tags.SOPInstanceUID, uid(instUID));ds.putUI(Tags.SOPClassUID, classUID);if (!ds.contains(Tags.NumberOfSamples)) {ds.putUS(Tags.NumberOfSamples, 1);}if (!ds.contains(Tags.PhotometricInterpretation)) {ds.putCS(Tags.PhotometricInterpretation, ""MONOCHROME2"");}if (fmi) {ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));}OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));try {} finally {ds.writeFile(out, encodeParam());if (hasPixelData) {if (!skipGroupLen) {out.write(PXDATA_GROUPLEN);int grlen = pxlen + 8;out.write((byte) grlen);out.write((byte) (grlen >> 8));out.write((byte) (grlen >> 16));out.write((byte) (grlen >> 24));}out.write(PXDATA_TAG);out.write((byte) pxlen);out.write((byte) (pxlen >> 8));out.write((byte) (pxlen >> 16));out.write((byte) (pxlen >> 24));}if (inflate) {int b2, b3;for (; pxlen > 0; pxlen -= 3) {out.write(in.read());b2 = in.read();b3 = in.read();out.write(b2 & 0x0f);out.write(b2 >> 4 | ((b3 & 0x0f) << 4));out.write(b3 >> 4);}} else {for (; pxlen > 0; --pxlen) {out.write(in.read());}}out.close();}System.out.print('.');} finally {in.close();}}"	5
"public static Image getPluginImage(Object plugin, String name) {try {try {URL url = getPluginImageURL(plugin, name);if (m_URLImageMap.containsKey(url)) return m_URLImageMap.get(url);InputStream is = url.openStream();Image image;try {image = getImage(is);m_URLImageMap.put(url, image);} finally {is.close();}return image;} catch (Throwable e) {}} catch (Throwable e) {}return null;}private Document saveFile(Document document, File file) throws Exception {SimpleDateFormat sdf = new SimpleDateFormat(Constants.DATEFORMAT_YYYYMMDD);List<Preference> preferences = prefService.findAll();if (preferences != null && !preferences.isEmpty()) {Preference preference = preferences.get(0);String repo = preference.getRepository();StringBuffer sbRepo = new StringBuffer(repo);sbRepo.append(File.separator);StringBuffer sbFolder = new StringBuffer(document.getLocation());File folder = new File(sbRepo.append(sbFolder).toString());log.info(""Check in file ID ["" + document.getId() + ""] to "" + folder.getAbsolutePath());if (!folder.exists()) {folder.mkdirs();}FileChannel fcSource = null, fcDest = null, fcVersionDest = null;try {StringBuffer sbFile = new StringBuffer(folder.getAbsolutePath()).append(File.separator).append(document.getId()).append(""."").append(document.getExt());StringBuffer sbVersionFile = new StringBuffer(folder.getAbsolutePath()).append(File.separator).append(document.getId()).append(""_"").append(document.getVersion().toString()).append(""."").append(document.getExt());fcSource = new FileInputStream(file).getChannel();fcDest = new FileOutputStream(sbFile.toString()).getChannel();fcVersionDest = new FileOutputStream(sbVersionFile.toString()).getChannel();fcDest.transferFrom(fcSource, 0, fcSource.size());fcSource = new FileInputStream(file).getChannel();fcVersionDest.transferFrom(fcSource, 0, fcSource.size());document.setLocation(sbFolder.toString());documentService.save(document);} catch (FileNotFoundException notFoundEx) {log.error(""saveFile file not found: "" + document.getName(), notFoundEx);} catch (IOException ioEx) {log.error(""saveFile IOException: "" + document.getName(), ioEx);} finally {try {if (fcSource != null) {fcSource.close();}if (fcDest != null) {fcDest.close();}if (fcVersionDest != null) {fcVersionDest.close();}} catch (Exception e) {log.error(e.getMessage(), e);}}}return document;}public static void copyFile(File in, File out) throws IOException {try {FileReader inf = new FileReader(in);OutputStreamWriter outf = new OutputStreamWriter(new FileOutputStream(out), ""UTF-8"");int c;while ((c = inf.read()) != -1) outf.write(c);inf.close();outf.close();} catch (UnsupportedEncodingException e) {e.printStackTrace();} catch (FileNotFoundException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}}private DefaultMutableTreeNode parseTree() {try {DefaultMutableTreeNode root;URL url = RebusHelp.class.getResource(""/org/olga/rebus/gui/help/html/content.xml"");InputStream is = url.openStream();DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();factory.setIgnoringComments(true);factory.setValidating(false);DocumentBuilder parser = factory.newDocumentBuilder();Document document = parser.parse(is);NodeList elements = document.getElementsByTagName(""help"");Element element = (Element) elements.item(0);root = createTreeContent(element);is.close();return root;} catch (IOException e) {System.out.println(e.getMessage());return null;} catch (ParserConfigurationException e1) {System.out.println(e1.getMessage());return null;} catch (org.xml.sax.SAXException e2) {System.out.println(e2.getMessage());return null;}}private HttpResponse executePutPost(HttpEntityEnclosingRequestBase request, String content) {try {if (LOG.isTraceEnabled()) {LOG.trace(""Content: {}"", content);}StringEntity e = new StringEntity(content, ""UTF-8"");e.setContentType(""application/json"");request.setEntity(e);return executeRequest(request);} catch (Exception e) {throw Exceptions.propagate(e);}}public void copy(File in, File out) throws Exception {FileChannel src = new FileInputStream(in).getChannel();FileChannel dest = new FileOutputStream(out).getChannel();src.transferTo(0, src.size(), dest);src.close();dest.close();}private synchronized void awaitResponse() throws BOSHException {HttpEntity entity = null;try {HttpResponse httpResp = client.execute(post, context);entity = httpResp.getEntity();byte[] data = EntityUtils.toByteArray(entity);String encoding = entity.getContentEncoding() != null ? entity.getContentEncoding().getValue() : null;if (ZLIBCodec.getID().equalsIgnoreCase(encoding)) {data = ZLIBCodec.decode(data);} else if (GZIPCodec.getID().equalsIgnoreCase(encoding)) {data = GZIPCodec.decode(data);}body = StaticBody.fromString(new String(data, CHARSET));statusCode = httpResp.getStatusLine().getStatusCode();sent = true;} catch (IOException iox) {abort();toThrow = new BOSHException(""Could not obtain response"", iox);throw (toThrow);} catch (RuntimeException ex) {abort();throw (ex);}}protected int insertRecord(PutMetadataRequest request, PutMetadataInfo info) throws ImsServiceException, SQLException {Connection con = null;boolean autoCommit = true;PreparedStatement st = null;ResultSet rs = null;int nRows = 0;String sXml = info.getXml();String sUuid = info.getUuid();String sName = info.getName();String sThumbnailBinary = info.getThumbnailBinary();String sTable = this.getResourceTableName();String sDataTable = this.getResourceDataTableName();long id = doesRecordExist(sTable, sUuid);try {ManagedConnection mc = returnConnection();con = mc.getJdbcConnection();autoCommit = con.getAutoCommit();con.setAutoCommit(false);if (id < 0) {StringBuffer sql = new StringBuffer();sql.append(""INSERT INTO "").append(sTable);sql.append("" ("");sql.append(""DOCUUID,"");sql.append(""TITLE,"");sql.append(""OWNER"");sql.append("")"");sql.append("" VALUES(?,?,?)"");logExpression(sql.toString());st = con.prepareStatement(sql.toString());int n = 1;st.setString(n++, sUuid);st.setString(n++, sName);st.setInt(n++, this.publisher.getLocalID());nRows = st.executeUpdate();closeStatement(st);if (nRows > 0) {if (getIsDbCaseSensitive(this.getRequestContext())) {st = con.prepareStatement(""SELECT id FROM "" + sTable + "" WHERE UPPER(docuuid)=?"");} else {st = con.prepareStatement(""SELECT id FROM "" + sTable + "" WHERE docuuid=?"");}st.setString(1, sUuid.toUpperCase());rs = st.executeQuery();rs.next();id = rs.getLong(1);closeStatement(st);request.setActionStatus(ImsRequest.ACTION_STATUS_OK);sql = new StringBuffer();sql.append(""INSERT INTO "").append(sDataTable);sql.append("" (DOCUUID,ID,XML)"");sql.append("" VALUES(?,?,?)"");logExpression(sql.toString());st = con.prepareStatement(sql.toString());st.setString(1, sUuid);st.setLong(2, id);st.setString(3, sXml);st.executeUpdate();}} else {this.authorize(request, sUuid);StringBuffer sql = new StringBuffer();sql.append(""UPDATE "").append(sTable);sql.append("" SET "");if (!request.getLockTitle()) {sql.append(""TITLE=?, "");}sql.append(""OWNER=?, "");sql.append(""UPDATEDATE=?"");sql.append("" WHERE DOCUUID=?"");logExpression(sql.toString());st = con.prepareStatement(sql.toString());int n = 1;if (!request.getLockTitle()) {st.setString(n++, sName);}st.setInt(n++, this.publisher.getLocalID());st.setTimestamp(n++, new Timestamp(System.currentTimeMillis()));st.setString(n++, sUuid);nRows = st.executeUpdate();if (nRows > 0) {request.setActionStatus(ImsRequest.ACTION_STATUS_REPLACED);}closeStatement(st);sql = new StringBuffer();if (doesRecordExist(sDataTable, sUuid) >= 0) {sql.append(""UPDATE "").append(sDataTable);sql.append("" SET DOCUUID=?, XML=?, THUMBNAIL=?"");sql.append("" WHERE ID=?"");} else {sql.append(""INSERT INTO "").append(sDataTable);sql.append("" (DOCUUID, XML,THUMBNAIL,ID)"");sql.append("" VALUES(?,?,?,?)"");}logExpression(sql.toString());st = con.prepareStatement(sql.toString());st.setString(1, sUuid);st.setString(2, sXml);st.setBytes(3, null);st.setLong(4, id);st.executeUpdate();}con.commit();} catch (ImsServiceException ex) {if (con != null) {con.rollback();}throw ex;} catch (SQLException ex) {if (con != null) {con.rollback();}throw ex;} finally {closeResultSet(rs);closeStatement(st);if (con != null) {con.setAutoCommit(autoCommit);}}if ((sThumbnailBinary != null) && (sThumbnailBinary.length() > 0)) {this.updateThumbnail(sThumbnailBinary, sUuid);}return nRows;}public void deployDir(File srcDir, String destDir) {File[] dirFiles = srcDir.listFiles();for (int k = 0; dirFiles != null && k < dirFiles.length; k++) {if (!dirFiles[k].getName().startsWith(""."")) {if (dirFiles[k].isFile()) {File deployFile = new File(destDir + File.separator + dirFiles[k].getName());if (dirFiles[k].lastModified() != deployFile.lastModified() || dirFiles[k].length() != deployFile.length()) {IOUtils.copy(dirFiles[k], deployFile);}} else if (dirFiles[k].isDirectory()) {String newDestDir = destDir + File.separator + dirFiles[k].getName();deployDir(dirFiles[k], newDestDir);}}}}public void guardarRecordatorio() {try {if (espaciosLlenos()) {guardarCantidad();String dat = """";String filenametxt = String.valueOf(""recordatorio"" + cantidadArchivos + "".txt"");String filenamezip = String.valueOf(""recordatorio"" + cantidadArchivos + "".zip"");cantidadArchivos++;dat += identificarDato(datoSeleccionado) + ""\n"";dat += String.valueOf(mesTemporal) + ""\n"";dat += String.valueOf(anoTemporal) + ""\n"";dat += horaT.getText() + ""\n"";dat += lugarT.getText() + ""\n"";dat += actividadT.getText() + ""\n"";File archivo = new File(filenametxt);FileWriter fw = new FileWriter(archivo);BufferedWriter bw = new BufferedWriter(fw);PrintWriter salida = new PrintWriter(bw);salida.print(dat);salida.close();BufferedInputStream origin = null;FileOutputStream dest = new FileOutputStream(filenamezip);ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest));byte data[] = new byte[buffer];File f = new File(filenametxt);FileInputStream fi = new FileInputStream(f);origin = new BufferedInputStream(fi, buffer);ZipEntry entry = new ZipEntry(filenametxt);out.putNextEntry(entry);int count;while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count);out.close();JOptionPane.showMessageDialog(null, ""El recordatorio ha sido guardado con exito"", ""Recordatorio Guardado"", JOptionPane.INFORMATION_MESSAGE);marco.hide();marco.dispose();establecerMarca();table.clearSelection();} else JOptionPane.showMessageDialog(null, ""Debe llenar los espacios de Hora, Lugar y Actividad"", ""Error"", JOptionPane.ERROR_MESSAGE);} catch (Exception e) {JOptionPane.showMessageDialog(null, ""Error en: "" + e.toString(), ""Error"", JOptionPane.ERROR_MESSAGE);}}"	5
"public static void translateTableAttributes(String baseDir, String tableName, NameSpaceDefinition nsDefinition) throws Exception {setVosiNS(baseDir, ""table_att"", nsDefinition);String filename = baseDir + ""table_att.xsl"";Scanner s = new Scanner(new File(filename));PrintWriter fw = new PrintWriter(new File(baseDir + tableName + ""_att.xsl""));while (s.hasNextLine()) {fw.println(s.nextLine().replaceAll(""TABLENAME"", tableName));}s.close();fw.close();applyStyle(baseDir + ""tables.xml"", baseDir + tableName + ""_att.json"", baseDir + tableName + ""_att.xsl"");}private static String myCrypt(String password, String seed) throws RuntimeException {String out = null;int count = 8;MessageDigest digester;if (!seed.substring(0, 3).equals(""$H$"")) {byte[] randomBytes = new byte[6];java.util.Random randomGenerator = new java.util.Random();randomGenerator.nextBytes(randomBytes);seed = genSalt(randomBytes);}String salt = seed.substring(4, 12);if (salt.length() != 8) {throw new RuntimeException(""Error hashing password - Invalid seed."");}byte[] sha1Hash = new byte[40];try {digester = MessageDigest.getInstance(""SHA-1"");digester.update((salt + password).getBytes(""iso-8859-1""), 0, (salt + password).length());sha1Hash = digester.digest();do {byte[] CombinedBytes = new byte[sha1Hash.length + password.length()];System.arraycopy(sha1Hash, 0, CombinedBytes, 0, sha1Hash.length);System.arraycopy(password.getBytes(""iso-8859-1""), 0, CombinedBytes, sha1Hash.length, password.getBytes(""iso-8859-1"").length);digester.update(CombinedBytes, 0, CombinedBytes.length);sha1Hash = digester.digest();} while (--count > 0);out = seed.substring(0, 12);out += encode64(sha1Hash);} catch (NoSuchAlgorithmException Ex) {log.error(""Error hashing password."", Ex);} catch (UnsupportedEncodingException Ex) {log.error(""Error hashing password."", Ex);}if (out == null) {throw new RuntimeException(""Error hashing password - out = null"");}return out;}protected void loadUrl(URL url) throws BuildException {Properties props = new Properties();log(""Loading "" + url, Project.MSG_VERBOSE);try {InputStream is = url.openStream();try {loadProperties(props, is, url.getFile().endsWith("".xml""));} finally {if (is != null) {is.close();}}addProperties(props);} catch (IOException ex) {throw new BuildException(ex, getLocation());}}private static void identify(ContentNetwork cn, String str) {try {URL url = new URL(str);HttpURLConnection con = (HttpURLConnection) url.openConnection();UrlUtils.setBrowserHeaders(con, null);String key = ""cn."" + cn.getID() + "".identify.cookie"";String cookie = COConfigurationManager.getStringParameter(key, null);if (cookie != null) {con.setRequestProperty(""Cookie"", cookie + "";"");}con.setRequestProperty(""Connection"", ""close"");con.getResponseCode();cookie = con.getHeaderField(""Set-Cookie"");if (cookie != null) {String[] bits = cookie.split("";"");if (bits.length > 0 && bits[0].length() > 0) {COConfigurationManager.setParameter(key, bits[0]);}}} catch (Throwable e) {}}public void render(final HttpServletRequest request, final HttpServletResponse response, InputStream inputStream, final Throwable t, final String contentType, final String encoding) throws Exception {if (contentType != null) {response.setContentType(contentType);}if (encoding != null) {response.setCharacterEncoding(encoding);}IOUtils.copy(inputStream, response.getOutputStream());}private void connectAndLogin() throws SocketException, IOException, ClassNotFoundException, SQLException, FileNotFoundException {lastOperationTime = System.currentTimeMillis();exit();ftp = new FTPClient();ftp.connect(SERVER);ftp.login(USERNAME, PASSWORD);ftp.enterLocalPassiveMode();ftp.setFileType(FTP.BINARY_FILE_TYPE);System.out.println(""Connected to "" + SERVER + ""."");db = new DB(propertiesPath);}private void zipAndSendFiles(File[] logFiles) {SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd"");EmailSender emailSender = new EmailSender();try {File globalZipFile = new File(""XeptoTileServer_Statistics_"" + sdf.format(new Date()) + "".zip"");ZipOutputStream globalZos = new ZipOutputStream(new CheckedOutputStream(new FileOutputStream(globalZipFile), new Adler32()));BufferedOutputStream globalOut = new BufferedOutputStream(globalZos);globalZos.setComment(""Statistics for all users from the XeptoTileServer."");File[] zipFiles = new File[usernames.length];ZipOutputStream[] zipOutputStreams = new ZipOutputStream[usernames.length];BufferedOutputStream[] bufferedZipStreams = new BufferedOutputStream[usernames.length];for (File logFile : logFiles) {int i;for (i = 0; i < usernames.length; i++) {if (logFile.getName().substring(27, 28 + usernames[i].length()).equalsIgnoreCase(usernames[i] + ""_"")) break;}BufferedReader in = new BufferedReader(new FileReader(logFile.getPath()));ZipEntry entry = new ZipEntry(logFile.getName());globalZos.putNextEntry(entry);if (i < usernames.length && emails[i] != null) {if (zipFiles[i] == null) {zipFiles[i] = new File(""XeptoTileServer_Statistics_"" + usernames[i] + ""_"" + sdf.format(new Date()) + "".zip"");zipOutputStreams[i] = new ZipOutputStream(new CheckedOutputStream(new FileOutputStream(zipFiles[i]), new Adler32()));bufferedZipStreams[i] = new BufferedOutputStream(zipOutputStreams[i]);zipOutputStreams[i].setComment(""Statistics for username "" + usernames[i] + "" from the XeptoTileServer."");}zipOutputStreams[i].putNextEntry(entry);int c;while ((c = in.read()) != -1) {globalOut.write(c);bufferedZipStreams[i].write(c);}} else {int c;while ((c = in.read()) != -1) globalOut.write(c);}in.close();logFile.delete();}globalOut.close();emailSender.send(java.util.ResourceBundle.getBundle(""logsender_conf"").getString(""e-mail""), globalZipFile);globalZipFile.delete();for (int i = 0; i < zipFiles.length; i++) {if (zipFiles[i] != null) {bufferedZipStreams[i].close();emailSender.send(emails[i], zipFiles[i]);zipFiles[i].delete();}}} catch (IOException ex) {System.out.println(""Cannot create zip file."");ex.printStackTrace();}}public static void find(String pckgname, Class tosubclass) {String name = new String(pckgname);if (!name.startsWith(""/"")) {name = ""/"" + name;}name = name.replace('.', '/');URL url = RTSI.class.getResource(name);System.out.println(name + ""->"" + url);if (url == null) return;File directory = new File(url.getFile());if (directory.exists()) {String[] files = directory.list();for (int i = 0; i < files.length; i++) {if (files[i].endsWith("".class"")) {String classname = files[i].substring(0, files[i].length() - 6);try {Object o = Class.forName(pckgname + ""."" + classname).newInstance();if (tosubclass.isInstance(o)) {System.out.println(classname);}} catch (ClassNotFoundException cnfex) {System.err.println(cnfex);} catch (InstantiationException iex) {} catch (IllegalAccessException iaex) {}}}} else {try {JarURLConnection conn = (JarURLConnection) url.openConnection();String starts = conn.getEntryName();JarFile jfile = conn.getJarFile();Enumeration e = jfile.entries();while (e.hasMoreElements()) {ZipEntry entry = (ZipEntry) e.nextElement();String entryname = entry.getName();if (entryname.startsWith(starts) && (entryname.lastIndexOf('/') <= starts.length()) && entryname.endsWith("".class"")) {String classname = entryname.substring(0, entryname.length() - 6);if (classname.startsWith(""/"")) classname = classname.substring(1);classname = classname.replace('/', '.');try {Object o = Class.forName(classname).newInstance();if (tosubclass.isInstance(o)) {System.out.println(classname.substring(classname.lastIndexOf('.') + 1));}} catch (ClassNotFoundException cnfex) {System.err.println(cnfex);} catch (InstantiationException iex) {} catch (IllegalAccessException iaex) {}}}} catch (IOException ioex) {System.err.println(ioex);}}}public void doGet(OutputStream os) throws IOException {try {uc = (HttpURLConnection) url.openConnection();uc.setRequestProperty(""User-Agent"", USER_AGENT);uc.setReadTimeout(READ_TIMEOUT);logger.debug(""Connect timeout="" + uc.getConnectTimeout() + "" read timeout="" + uc.getReadTimeout() + "" u="" + url);InputStream buffer = new BufferedInputStream(uc.getInputStream());int c;while ((c = buffer.read()) != -1) {os.write(c);}headers = uc.getHeaderFields();status = uc.getResponseCode();responseMessage = uc.getResponseMessage();} catch (Exception e) {throw new IOException(e.getMessage());} finally {if (status != 200) logger.error(""Download failed status: "" + status + "" "" + responseMessage + "" for "" + url); else logger.debug(""HTTP status="" + status + "" "" + uc.getResponseMessage());os.close();uc.disconnect();}}public String doGet() throws MalformedURLException, IOException {uc = (HttpURLConnection) url.openConnection();BufferedInputStream buffer = new BufferedInputStream(uc.getInputStream());ByteArrayOutputStream bos = new ByteArrayOutputStream();int c;while ((c = buffer.read()) != -1) {bos.write(c);}bos.close();headers = uc.getHeaderFields();status = uc.getResponseCode();return bos.toString();}"	5
"protected synchronized AbstractBaseObject insert(AbstractBaseObject obj) throws ApplicationException {PreparedStatement preStat = null;StringBuffer sqlStat = new StringBuffer();DmsRelationalWord tmpDmsRelationalWord = (DmsRelationalWord) ((DmsRelationalWord) obj).clone();synchronized (dbConn) {try {Integer nextID = getNextPrimaryID();Timestamp currTime = Utility.getCurrentTimestamp();sqlStat.append(""INSERT "");sqlStat.append(""INTODMS_RELATIONAL_WORD(ID, RECORD_STATUS, UPDATE_COUNT, CREATOR_ID, CREATE_DATE, UPDATER_ID, UPDATE_DATE, WORD, PARENT_ID, TYPE) "");sqlStat.append(""VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) "");preStat = dbConn.prepareStatement(sqlStat.toString(), ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);setPrepareStatement(preStat, 1, nextID);setPrepareStatement(preStat, 2, tmpDmsRelationalWord.getRecordStatus());setPrepareStatement(preStat, 3, new Integer(0));setPrepareStatement(preStat, 4, tmpDmsRelationalWord.getCreatorID());setPrepareStatement(preStat, 5, currTime);setPrepareStatement(preStat, 6, tmpDmsRelationalWord.getUpdaterID());setPrepareStatement(preStat, 7, currTime);if (tmpDmsRelationalWord.getWord() == null || """".equals(tmpDmsRelationalWord.getWord().trim())) {return null;}setPrepareStatement(preStat, 8, tmpDmsRelationalWord.getWord());setPrepareStatement(preStat, 9, tmpDmsRelationalWord.getParentID());setPrepareStatement(preStat, 10, tmpDmsRelationalWord.getType());preStat.executeUpdate();tmpDmsRelationalWord.setID(nextID);tmpDmsRelationalWord.setCreatorID(tmpDmsRelationalWord.getCreatorID());tmpDmsRelationalWord.setCreateDate(currTime);tmpDmsRelationalWord.setUpdaterID(tmpDmsRelationalWord.getUpdaterID());tmpDmsRelationalWord.setUpdateDate(currTime);tmpDmsRelationalWord.setUpdateCount(new Integer(0));tmpDmsRelationalWord.setCreatorName(UserInfoFactory.getUserFullName(tmpDmsRelationalWord.getCreatorID()));tmpDmsRelationalWord.setUpdaterName(UserInfoFactory.getUserFullName(tmpDmsRelationalWord.getUpdaterID()));dbConn.commit();return (tmpDmsRelationalWord);} catch (Exception e) {try {dbConn.rollback();} catch (Exception ee) {}log.error(e, e);throw new ApplicationException(ErrorConstant.DB_INSERT_ERROR, e);} finally {try {preStat.close();} catch (Exception ignore) {} finally {preStat = null;}}}}public static void copyFile(File src, File dest) throws IOException {FileInputStream fIn;FileOutputStream fOut;FileChannel fIChan, fOChan;long fSize;MappedByteBuffer mBuf;fIn = new FileInputStream(src);fOut = new FileOutputStream(dest);fIChan = fIn.getChannel();fOChan = fOut.getChannel();fSize = fIChan.size();mBuf = fIChan.map(FileChannel.MapMode.READ_ONLY, 0, fSize);fOChan.write(mBuf);fIChan.close();fIn.close();fOChan.close();fOut.close();}public static Test suite() throws Exception {java.net.URL url = ClassLoader.getSystemResource(""host0.jndi.properties"");java.util.Properties host0JndiProps = new java.util.Properties();host0JndiProps.load(url.openStream());java.util.Properties systemProps = System.getProperties();systemProps.putAll(host0JndiProps);System.setProperties(systemProps);TestSuite suite = new TestSuite();suite.addTest(new TestSuite(T05DTMInterpositionUnitTestCase.class));TestSetup wrapper = new JBossTestSetup(suite) {protected void setUp() throws Exception {super.setUp();deploy(""dtmpassthrough2dtm.jar"");}protected void tearDown() throws Exception {undeploy(""dtmpassthrough2dtm.jar"");super.tearDown();}};return wrapper;}private void open() throws IOException {if (in != null) return;try {con = url.openConnection();in = con.getInputStream();} catch (IOException e) {if (cached.exists()) {LOG.fine(""Falling back to cached copy of wiki file "" + url);in = new FileInputStream(cached);con = null;return;}throw e;}try {tmp = new File(cached.getAbsolutePath() + "".tmp"");tmp.getParentFile().mkdirs();out = new FileOutputStream(tmp);} catch (IOException e) {LOG.fine(""can't write cached copy of wiki file "" + url);}}public static void uploadFile(String localPath, String hostname, String username, String password, String remotePath) {FTPClient ftpClient = new FTPClient();try {ftpClient.connect(hostname);int reply = ftpClient.getReplyCode();boolean success = false;if (FTPReply.isPositiveCompletion(reply)) {success = ftpClient.login(username, password);if (!success) {Output.error(""Failed to login with username/password "" + username + ""/"" + password);return;}ftpClient.enterLocalPassiveMode();ftpClient.setFileType(FTP.ASCII_FILE_TYPE);}FileInputStream in = new FileInputStream(localPath);boolean result = ftpClient.storeFile(remotePath, in);if (!result) {Output.error(""Logged in but failed to upload "" + localPath + "" to "" + remotePath + ""\nPerhaps one of the paths was wrong."");}in.close();ftpClient.disconnect();} catch (IOException ioe) {Output.error(""Error ftp'ing using "" + ""\nlocalPath: "" + localPath + ""\nhostname: "" + hostname + ""\nusername: "" + username + ""\npassword: "" + password + ""\nremotePath: "" + remotePath, ioe);}}private void loadProperties() {if (properties == null) {properties = new Properties();try {URL url = getClass().getResource(propsFile);if (url != null) properties.load(url.openStream());} catch (IOException ioe) {ioe.printStackTrace();}}}@Overrideprotected final void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {if (beforeServingFile(req, resp)) {String pathInfo = req.getPathInfo();Validate.notNull(pathInfo, ""the path info is null -> the sevlet should be mapped with /<mapping>/*"");String resurouce = pathInfo.substring(1);if (log.isDebugEnabled()) {log.debug(""resource to expose: "" + resurouce);}String extension = resurouce.substring(resurouce.lastIndexOf('.') + 1);MimeType mimeType = MimeTypeRegistry.getByExtension(extension);Validate.notNull(mimeType, ""no mimetype found for extension: "" + extension);if (log.isDebugEnabled()) {log.debug(""the mime type to set: "" + mimeType.getMimeType());}File f = new File(mappedFolder, resurouce);Validate.isTrue(f.exists(), ""file: "" + f + "" does not exist"");Validate.isTrue(f.canRead(), ""can not read the file: "" + f);if (log.isDebugEnabled()) {log.debug(""exposing the file: "" + f);}resp.setContentType(mimeType.getMimeType());FileInputStream fis = new FileInputStream(f);ServletOutputStream os = resp.getOutputStream();IOUtils.copy(fis, os);os.flush();IOUtils.closeQuietly(fis);IOUtils.closeQuietly(os);}}@Overridepublic DataTable generateDataTable(Query query, HttpServletRequest request) throws DataSourceException {String url = request.getParameter(URL_PARAM_NAME);if (StringUtils.isEmpty(url)) {log.error(""url parameter not provided."");throw new DataSourceException(ReasonType.INVALID_REQUEST, ""url parameter not provided"");}Reader reader;try {reader = new BufferedReader(new InputStreamReader(new URL(url).openStream()));} catch (MalformedURLException e) {log.error(""url is malformed: "" + url);throw new DataSourceException(ReasonType.INVALID_REQUEST, ""url is malformed: "" + url);} catch (IOException e) {log.error(""Couldn't read from url: "" + url, e);throw new DataSourceException(ReasonType.INVALID_REQUEST, ""Couldn't read from url: "" + url);}DataTable dataTable = null;ULocale requestLocale = DataSourceHelper.getLocaleFromRequest(request);try {dataTable = CsvDataSourceHelper.read(reader, null, true, requestLocale);} catch (IOException e) {log.error(""Couldn't read from url: "" + url, e);throw new DataSourceException(ReasonType.INVALID_REQUEST, ""Couldn't read from url: "" + url);}return dataTable;}public static String rename_file(String sessionid, String key, String newFileName) {String jsonstring = """";try {Log.d(""current running function name:"", ""rename_file"");HttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(""https://mt0-app.cloud.cm/rpc/json"");List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);nameValuePairs.add(new BasicNameValuePair(""c"", ""Storage""));nameValuePairs.add(new BasicNameValuePair(""m"", ""rename_file""));nameValuePairs.add(new BasicNameValuePair(""new_name"", newFileName));nameValuePairs.add(new BasicNameValuePair(""key"", key));httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));httppost.setHeader(""Cookie"", ""PHPSESSID="" + sessionid);HttpResponse response = httpclient.execute(httppost);jsonstring = EntityUtils.toString(response.getEntity());Log.d(""jsonStringReturned:"", jsonstring);return jsonstring;} catch (Exception e) {e.printStackTrace();}return jsonstring;}public static String rename_tag(String sessionid, String originalTag, String newTagName) {String jsonstring = """";try {Log.d(""current running function name:"", ""rename_tag"");HttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(""https://mt0-app.cloud.cm/rpc/json"");List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);nameValuePairs.add(new BasicNameValuePair(""c"", ""Storage""));nameValuePairs.add(new BasicNameValuePair(""m"", ""rename_tag""));nameValuePairs.add(new BasicNameValuePair(""new_tag_name"", newTagName));nameValuePairs.add(new BasicNameValuePair(""absolute_tag"", originalTag));httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));httppost.setHeader(""Cookie"", ""PHPSESSID="" + sessionid);HttpResponse response = httpclient.execute(httppost);jsonstring = EntityUtils.toString(response.getEntity());Log.d(""jsonStringReturned:"", jsonstring);return jsonstring;} catch (Exception e) {e.printStackTrace();}return jsonstring;}"	5
"@Overrideprotected Set<DataRecord> retrieveRecords(DataTemplate template) {String query = template.getQuery();if (query == null) {query = topic;}String select = prefix + "" SELECT ?resource WHERE { { ?resource rdf:type "" + ""<http://dbpedia.org/class/yago/"" + StringUtils.toCamelCase(query) + ""> } UNION { ?resource skos:subject <http://dbpedia.org/resource/Category:"" + query.replaceAll("" "", ""_"") + ""> } }"";Document doc = null;HashSet<DataRecord> recs = new HashSet<DataRecord>();try {URL url = new URL(queryBase + URLEncoder.encode(select, ""UTF-8""));InputStream inStream = url.openStream();doc = docBuild.parse(inStream);HashSet<String> resourceNames = new HashSet<String>();Element table = doc.getDocumentElement();NodeList rows = table.getElementsByTagName(""tr"");for (int i = 0; i < rows.getLength(); i++) {Element row = (Element) rows.item(i);NodeList cols = row.getElementsByTagName(""td"");if (cols.getLength() > 0) {Element elem = (Element) cols.item(0);String resource = ((Text) elem.getFirstChild()).getData();resourceNames.add(resource);}}inStream.close();for (String resource : resourceNames) {MultiValueMap<String> resRecord = queryResource(resource);if (resource != null) {DataRecord rec = parseResource(resRecord, template);if (rec != null) {recs.add(rec);}}}} catch (IOException exc) {exc.printStackTrace();} catch (SAXException exc) {exc.printStackTrace();}return recs;}private List<Feature> getFeatures(String source, EntryPoint e) throws MalformedURLException, SAXException, IOException, ParserConfigurationException, URISyntaxException {SAXParser parser = SAXParserFactory.newInstance().newSAXParser();FeatureParser featp = new FeatureParser();parser.parse(URIFactory.url(serverPrefix + ""/das/"" + source + ""/features?segment="" + e.id + "":"" + e.start + "","" + e.stop).openStream(), featp);return featp.list;}public static synchronized String getURLContent(URL url) {Log log = LogUtil.getLog(FileManager.class, ""getURLContent"");if (url == null) {throw new IllegalArgumentException(""url shouldn't be null!"");}String content = (String) urlCache.get(url);if (content != null) {return content;}try {InputStream is = null;if (""file"".equals(url.getProtocol())) {is = new java.io.FileInputStream(url.getFile());} else {is = url.openStream();}ByteArrayOutputStream baos = new ByteArrayOutputStream(is.available());pump(is, baos);content = new String(baos.toByteArray());urlCache.put(url, content);return content;} catch (FileNotFoundException e) {return null;} catch (Exception e) {e.printStackTrace();log.error(Translator.getString(XDocletMessages.class, XDocletUtilMessages.EXCEPTION_READING_MERGE_FILE, new String[] { e.toString() }));return null;}}@Overridepublic void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException, NotAuthorizedException, BadRequestException {try {if (vtf == null) {LOG.debug(""Serializing from database"");existDocument.stream(out);} else {LOG.debug(""Serializing from buffer"");InputStream is = vtf.getByteStream();IOUtils.copy(is, out);out.flush();IOUtils.closeQuietly(is);vtf.delete();vtf = null;}} catch (PermissionDeniedException e) {LOG.debug(e.getMessage());throw new NotAuthorizedException(this);} finally {IOUtils.closeQuietly(out);}}@Overrideprotected URLConnection openConnection(URL url) throws IOException {try {final HttpServlet servlet;String path = url.getPath();if (path.matches(""reg:.+"")) {String registerName = path.replaceAll(""reg:([^/]*)/.*"", ""$1"");servlet = register.get(registerName);if (servlet == null) throw new RuntimeException(""No servlet registered with name "" + registerName);} else {String servletClassName = path.replaceAll(""([^/]*)/.*"", ""$1"");servlet = (HttpServlet) Class.forName(servletClassName).newInstance();}final MockHttpServletRequest req = new MockHttpServletRequest().setMethod(""GET"");final MockHttpServletResponse resp = new MockHttpServletResponse();return new HttpURLConnection(url) {@Overridepublic int getResponseCode() throws IOException {serviceIfNeeded();return resp.status;}@Overridepublic InputStream getInputStream() throws IOException {serviceIfNeeded();if (resp.status == 500) throw new IOException(""Server responded with error 500"");byte[] array = resp.out.toByteArray();return new ByteArrayInputStream(array);}@Overridepublic InputStream getErrorStream() {try {serviceIfNeeded();} catch (IOException e) {throw new RuntimeException(e);}if (resp.status != 500) return null;return new ByteArrayInputStream(resp.out.toByteArray());}@Overridepublic OutputStream getOutputStream() throws IOException {return req.tmp;}@Overridepublic void addRequestProperty(String key, String value) {req.addHeader(key, value);}@Overridepublic void connect() throws IOException {}@Overridepublic boolean usingProxy() {return false;}@Overridepublic void disconnect() {}private boolean called;private void serviceIfNeeded() throws IOException {try {if (!called) {called = true;req.setMethod(getRequestMethod());servlet.service(req, resp);}} catch (ServletException e) {throw new RuntimeException(e);}}};} catch (InstantiationException e) {throw new RuntimeException(e);} catch (IllegalAccessException e) {throw new RuntimeException(e);} catch (ClassNotFoundException e) {throw new RuntimeException(e);}}public String SHA1(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(text.getBytes(""iso-8859-1""), 0, text.length());sha1hash = md.digest();return convertToHex(sha1hash);}@Overridepublic void close() throws IOException {super.close();byte[] signatureData = toByteArray();ZipOutputStream zipOutputStream = new ZipOutputStream(this.targetOutputStream);ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream(this.originalZipFile));ZipEntry zipEntry;while (null != (zipEntry = zipInputStream.getNextEntry())) {if (!zipEntry.getName().equals(ODFUtil.SIGNATURE_FILE)) {ZipEntry newZipEntry = new ZipEntry(zipEntry.getName());zipOutputStream.putNextEntry(newZipEntry);LOG.debug(""copying "" + zipEntry.getName());IOUtils.copy(zipInputStream, zipOutputStream);}}zipInputStream.close();zipEntry = new ZipEntry(ODFUtil.SIGNATURE_FILE);LOG.debug(""writing "" + zipEntry.getName());zipOutputStream.putNextEntry(zipEntry);IOUtils.write(signatureData, zipOutputStream);zipOutputStream.close();}public void updatePortletName(PortletName portletNameBean) {DatabaseAdapter dbDyn = null;PreparedStatement ps = null;try {dbDyn = DatabaseAdapter.getInstance();String sql = ""update WM_PORTAL_PORTLET_NAME "" + ""setTYPE=? "" + ""where  ID_SITE_CTX_TYPE=?"";ps = dbDyn.prepareStatement(sql);ps.setString(1, portletNameBean.getPortletName());RsetTools.setLong(ps, 2, portletNameBean.getPortletId());int i1 = ps.executeUpdate();if (log.isDebugEnabled()) log.debug(""Count of updated record - "" + i1);dbDyn.commit();} catch (Exception e) {try {if (dbDyn != null) dbDyn.rollback();} catch (Exception e001) {}String es = ""Error save portlet name"";log.error(es, e);throw new IllegalStateException(es, e);} finally {DatabaseManager.close(dbDyn, ps);dbDyn = null;ps = null;}}public void deletePortletName(PortletName portletNameBean) {DatabaseAdapter dbDyn = null;PreparedStatement ps = null;try {dbDyn = DatabaseAdapter.getInstance();if (portletNameBean.getPortletId() == null) throw new IllegalArgumentException(""portletNameId is null"");String sql = ""delete from  WM_PORTAL_PORTLET_NAME "" + ""where  ID_SITE_CTX_TYPE=?"";ps = dbDyn.prepareStatement(sql);RsetTools.setLong(ps, 1, portletNameBean.getPortletId());int i1 = ps.executeUpdate();if (log.isDebugEnabled()) log.debug(""Count of deleted records - "" + i1);dbDyn.commit();} catch (Exception e) {try {if (dbDyn != null) dbDyn.rollback();} catch (Exception e001) {}String es = ""Error delete portlet name"";log.error(es, e);throw new IllegalStateException(es, e);} finally {DatabaseManager.close(dbDyn, ps);dbDyn = null;ps = null;}}public void zipFile(String baseDir, String fileName, boolean encrypt) throws Exception {List fileList = getSubFiles(new File(baseDir));ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(fileName + "".temp""));ZipEntry ze = null;byte[] buf = new byte[BUFFER];byte[] encrypByte = new byte[encrypLength];int readLen = 0;for (int i = 0; i < fileList.size(); i++) {if (stopZipFile) {zos.close();File zipFile = new File(fileName + "".temp"");if (zipFile.exists()) zipFile.delete();break;}File f = (File) fileList.get(i);if (f.getAbsoluteFile().equals(fileName + "".temp"")) continue;ze = new ZipEntry(getAbsFileName(baseDir, f));ze.setSize(f.length());ze.setTime(f.lastModified());zos.putNextEntry(ze);InputStream is = new BufferedInputStream(new FileInputStream(f));readLen = is.read(buf, 0, BUFFER);if (encrypt) {if (readLen >= encrypLength) {System.arraycopy(buf, 0, encrypByte, 0, encrypLength);} else if (readLen > 0) {Arrays.fill(encrypByte, (byte) 0);System.arraycopy(buf, 0, encrypByte, 0, readLen);readLen = encrypLength;}byte[] temp = CryptionControl.getInstance().encryptoECB(encrypByte, rootKey);System.arraycopy(temp, 0, buf, 0, encrypLength);}while (readLen != -1) {zos.write(buf, 0, readLen);readLen = is.read(buf, 0, BUFFER);}is.close();}zos.close();File zipFile = new File(fileName + "".temp"");if (zipFile.exists()) zipFile.renameTo(new File(fileName + "".zip""));}"	5
"private final boolean verifyMatch(String disc_id, String title) {try {URL url;URLConnection urlConn;DataOutputStream printout;BufferedReader input;url = new URL(""http://www.amazon.com/exec/obidos/ASIN/"" + disc_id);urlConn = url.openConnection();urlConn.setDoInput(true);urlConn.setDoOutput(true);urlConn.setUseCaches(false);urlConn.setRequestProperty(""Content-Type"", ""application/x-www-form-urlencoded"");input = new BufferedReader(new InputStreamReader(urlConn.getInputStream()));String str;boolean goodMatch = false;boolean match = false;while (null != ((str = input.readLine()))) {String keyword = title.toUpperCase();int idStart = str.toUpperCase().indexOf((keyword));if (idStart > 0) {if (str.toUpperCase().endsWith(title.toUpperCase())) {goodMatch = true;} else {match = true;}}}input.close();if (goodMatch) {status.append(""Exact Match. "");return true;} else if (match) {status.append(""Inexact Match. "");return true;}} catch (Exception e) {e.printStackTrace();}return true;}private static String calculateMD5(String s) {try {MessageDigest m = MessageDigest.getInstance(""MD5"");m.reset();m.update(s.getBytes());return new BigInteger(1, m.digest()).toString(16);} catch (NoSuchAlgorithmException e) {throw new UndeclaredThrowableException(e);}}public void write(String resource, String destinationPath) throws IOException, CoreException {OutputStream output = null;InputStream contentStream = null;try {contentStream = new BufferedInputStream(new FileInputStream(resource));output = new BufferedOutputStream(new FileOutputStream(destinationPath));int available = contentStream.available();available = available <= 0 ? DEFAULT_BUFFER_SIZE : available;int chunkSize = Math.min(DEFAULT_BUFFER_SIZE, available);byte[] readBuffer = new byte[chunkSize];int n = contentStream.read(readBuffer);while (n > 0) {output.write(readBuffer, 0, n);n = contentStream.read(readBuffer);}} finally {if (contentStream != null) {try {contentStream.close();} catch (IOException e) {IDEWorkbenchPlugin.log(""Error closing input stream for file: "" + resource, e);}}if (output != null) {output.close();}}}public static int best(int r, int n, int s) {if ((n <= 0) || (r < 0) || (r > n) || (s < 0)) return 0;int[] rolls = new int[n];for (int i = 0; i < n; i++) rolls[i] = d(s);boolean found;do {found = false;for (int x = 0; x < n - 1; x++) {if (rolls[x] < rolls[x + 1]) {int t = rolls[x];rolls[x] = rolls[x + 1];rolls[x + 1] = t;found = true;}}} while (found);int sum = 0;for (int i = 0; i < r; i++) sum += rolls[i];return sum;}public static File copyFile(File fileToCopy, File copiedFile) {BufferedInputStream in = null;BufferedOutputStream outWriter = null;if (!copiedFile.exists()) {try {copiedFile.createNewFile();} catch (IOException e1) {ExceptionHandlingService.INSTANCE.handleException(e1);return null;}}try {in = new BufferedInputStream(new FileInputStream(fileToCopy), 4096);outWriter = new BufferedOutputStream(new FileOutputStream(copiedFile), 4096);int c;while ((c = in.read()) != -1) outWriter.write(c);in.close();outWriter.close();} catch (FileNotFoundException e) {ExceptionHandlingService.INSTANCE.handleException(e);return null;} catch (IOException e) {ExceptionHandlingService.INSTANCE.handleException(e);return null;}return copiedFile;}private List<String> readLines(String filename) {List<String> lines = new ArrayList<String>();URL url = Util.getResource(filename);try {BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));while (true) {String line = br.readLine();if (line == null) {break;}lines.add(line);}} catch (Exception e) {throw new RuntimeException(e);}return lines;}public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException {if (!src.isFile() || !src.exists()) {throw new IllegalArgumentException(""Source file '"" + src.getAbsolutePath() + ""' not found!"");}if (dst.exists()) {if (dst.isDirectory()) {dst = new File(dst, src.getName());} else if (dst.isFile()) {if (!overwrite) {throw new IllegalArgumentException(""Destination file '"" + dst.getAbsolutePath() + ""' already exists!"");}} else {throw new IllegalArgumentException(""Invalid destination object '"" + dst.getAbsolutePath() + ""'!"");}}final File dstParent = dst.getParentFile();if (!dstParent.exists()) {if (!dstParent.mkdirs()) {throw new IOException(""Failed to create directory "" + dstParent.getAbsolutePath());}}long fileSize = src.length();if (fileSize > 20971520l) {final FileInputStream in = new FileInputStream(src);final FileOutputStream out = new FileOutputStream(dst);try {int doneCnt = -1;final int bufSize = 32768;final byte buf[] = new byte[bufSize];while ((doneCnt = in.read(buf, 0, bufSize)) >= 0) {if (doneCnt == 0) {Thread.yield();} else {out.write(buf, 0, doneCnt);}}out.flush();} finally {try {in.close();} catch (final IOException e) {}try {out.close();} catch (final IOException e) {}}} else {final FileInputStream fis = new FileInputStream(src);final FileOutputStream fos = new FileOutputStream(dst);final FileChannel in = fis.getChannel(), out = fos.getChannel();try {long offs = 0, doneCnt = 0;final long copyCnt = Math.min(65536, fileSize);do {doneCnt = in.transferTo(offs, copyCnt, out);offs += doneCnt;fileSize -= doneCnt;} while (fileSize > 0);} finally {try {in.close();} catch (final IOException e) {}try {out.close();} catch (final IOException e) {}try {fis.close();} catch (final IOException e) {}try {fos.close();} catch (final IOException e) {}}}}public static boolean copyFile(File src, File target) throws IOException {if (src == null || target == null || !src.exists()) return false;if (!target.exists()) if (!createNewFile(target)) return false;InputStream ins = new BufferedInputStream(new FileInputStream(src));OutputStream ops = new BufferedOutputStream(new FileOutputStream(target));int b;while (-1 != (b = ins.read())) ops.write(b);Streams.safeClose(ins);Streams.safeFlush(ops);Streams.safeClose(ops);return target.setLastModified(src.lastModified());}public void copieFichier(String fileIn, String fileOut) {FileChannel in = null;FileChannel out = null;try {in = new FileInputStream(fileIn).getChannel();out = new FileOutputStream(fileOut).getChannel();in.transferTo(0, in.size(), out);} catch (Exception e) {e.printStackTrace();} finally {if (in != null) {try {in.close();} catch (IOException e) {}}if (out != null) {try {out.close();} catch (IOException e) {}}}}public File createFileFromClasspathResource(String resourceUrl) throws IOException {File fichierTest = File.createTempFile(""xmlFieldTestFile"", """");FileOutputStream fos = new FileOutputStream(fichierTest);InputStream is = DefaultXmlFieldSelectorTest.class.getResourceAsStream(resourceUrl);IOUtils.copy(is, fos);is.close();fos.close();return fichierTest;}"	5
"private void downloadDirectory() throws SocketException, IOException {FTPClient client = new FTPClient();client.connect(source.getHost());client.login(username, password);FTPFile[] files = client.listFiles(source.getPath());for (FTPFile file : files) {if (!file.isDirectory()) {long file_size = file.getSize() / 1024;Calendar cal = file.getTimestamp();URL source_file = new File(source + file.getName()).toURI().toURL();DownloadQueue.add(new Download(projectName, parser.getParserID(), source_file, file_size, cal, target + file.getName()));}}}private void downloadFiles() throws SocketException, IOException {HashSet<String> files_set = new HashSet<String>();boolean hasWildcarts = false;FTPClient client = new FTPClient();for (String file : downloadFiles) {files_set.add(file);if (file.contains(WILDCARD_WORD) || file.contains(WILDCARD_DIGIT)) hasWildcarts = true;}client.connect(source.getHost());client.login(username, password);FTPFile[] files = client.listFiles(source.getPath());if (!hasWildcarts) {for (FTPFile file : files) {String filename = file.getName();if (files_set.contains(filename)) {long file_size = file.getSize() / 1024;Calendar cal = file.getTimestamp();URL source_file = new File(source + file.getName()).toURI().toURL();DownloadQueue.add(new Download(projectName, parser.getParserID(), source_file, file_size, cal, target + file.getName()));}}} else {for (FTPFile file : files) {String filename = file.getName();boolean match = false;for (String db_filename : downloadFiles) {db_filename = db_filename.replaceAll(""\\"" + WILDCARD_WORD, WILDCARD_WORD_PATTERN);db_filename = db_filename.replaceAll(""\\"" + WILDCARD_DIGIT, WILDCARD_DIGIT_PATTERN);Pattern p = Pattern.compile(db_filename);Matcher m = p.matcher(filename);match = m.matches();}if (match) {long file_size = file.getSize() / 1024;Calendar cal = file.getTimestamp();URL source_file = new File(source + file.getName()).toURI().toURL();DownloadQueue.add(new Download(projectName, parser.getParserID(), source_file, file_size, cal, target + file.getName()));}}}}public void descargarArchivo() {try {FileInputStream fis = new FileInputStream(resultados.elementAt(materialSelccionado).getRuta());FileOutputStream fos = new FileOutputStream(rutaDestinoDescarga);FileChannel inChannel = fis.getChannel();FileChannel outChannel = fos.getChannel();inChannel.transferTo(0, inChannel.size(), outChannel);fis.close();fos.close();} catch (IOException ioe) {System.err.println(""Error al Generar Copia del Material\n"" + ioe);}}protected void doTransfer(HttpServletRequest request, HttpServletResponse response, String method) throws ServletException, IOException {ServletContext servletContext = this.getServletConfig().getServletContext();WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(servletContext);String szUrl = request.getParameter(""url"");System.out.println(szUrl);URL url;InputStream is = null;ServletOutputStream sout = null;try {url = new URL(szUrl);HttpURLConnection con = (HttpURLConnection) url.openConnection();Enumeration hNames = request.getHeaderNames();while (hNames.hasMoreElements()) {String txt = hNames.nextElement().toString();con.setRequestProperty(txt, request.getHeader(txt));}con.setRequestProperty(""host"", url.getHost());con.setRequestProperty(""refer"", szUrl);con.setRequestMethod(method);con.setDoOutput(true);con.setDoInput(true);InputStreamReader inBody = new InputStreamReader(request.getInputStream());char bufCh[] = new char[1024];int r;OutputStreamWriter outReq = new OutputStreamWriter(con.getOutputStream());while ((r = inBody.read(bufCh)) != -1) {System.out.println(bufCh);outReq.write(bufCh, 0, r);}outReq.flush();outReq.close();inBody.close();System.out.println(con.getResponseCode());System.out.println(con.getResponseMessage());if (con.getResponseCode() == con.HTTP_OK) {response.setContentType(con.getContentType());response.addHeader(""Content-Encoding"", con.getContentEncoding());sout = response.getOutputStream();is = con.getInputStream();byte buff[] = new byte[1024];while ((r = is.read(buff)) != -1) {sout.write(buff, 0, r);System.out.print(buff);}sout.flush();is.close();sout.close();} else {response.sendError(con.getResponseCode(), con.getResponseMessage());}} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}}public String getWeather(String cityName, String fileAddr) {try {URL url = new URL(""http://www.google.com/ig/api?hl=zh_cn&weather="" + cityName);InputStream inputstream = url.openStream();String s, str;BufferedReader in = new BufferedReader(new InputStreamReader(inputstream));StringBuffer stringbuffer = new StringBuffer();Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(fileAddr), ""utf-8""));while ((s = in.readLine()) != null) {stringbuffer.append(s);}str = new String(stringbuffer);out.write(str);out.close();in.close();} catch (IOException e) {e.printStackTrace();}File file = new File(fileAddr);DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();String str = null;try {DocumentBuilder builder = factory.newDocumentBuilder();Document doc = builder.parse(file);NodeList nodelist1 = (NodeList) doc.getElementsByTagName(""forecast_conditions"");NodeList nodelist2 = nodelist1.item(0).getChildNodes();str = nodelist2.item(4).getAttributes().item(0).getNodeValue() + "",temperature:"" + nodelist2.item(1).getAttributes().item(0).getNodeValue() + ""℃-"" + nodelist2.item(2).getAttributes().item(0).getNodeValue() + ""℃"";} catch (Exception e) {e.printStackTrace();}return str;}@Beforepublic void setUp() throws IOException {final URL url = getClass().getResource(""maventest.properties.xml"");workdir = new File(new File(url.getPath()).getParentFile(), ""workdir"");final Properties properties = new Properties();properties.load(url.openStream());for (Map.Entry<Object, Object> entry : properties.entrySet()) {jobParams.put(entry.getKey() + """", entry.getValue() + """");}FileUtils.deleteDirectory(workdir);workdir.mkdirs();}public static int executeUpdate(EOAdaptorChannel channel, String sql, boolean autoCommit) throws SQLException {int rowsUpdated;boolean wasOpen = channel.isOpen();if (!wasOpen) {channel.openChannel();}Connection conn = ((JDBCContext) channel.adaptorContext()).connection();try {Statement stmt = conn.createStatement();try {rowsUpdated = stmt.executeUpdate(sql);if (autoCommit) {conn.commit();}} catch (SQLException ex) {if (autoCommit) {conn.rollback();}throw new RuntimeException(""Failed to execute the statement '"" + sql + ""'."", ex);} finally {stmt.close();}} finally {if (!wasOpen) {channel.closeChannel();}}return rowsUpdated;}private Element getXmlFromGeoNetwork(String urlIn, Session userSession) throws FailedActionException {Element results = null;try {URL url = new URL(urlIn);URLConnection conn = url.openConnection();conn.setConnectTimeout(1000);String cookie = (String) userSession.getAttribute(""usercookie.object"");if (cookie != null) conn.setRequestProperty(""Cookie"", cookie);BufferedInputStream in = new BufferedInputStream(conn.getInputStream());try {results = Xml.loadStream(in);} finally {in.close();}} catch (Exception e) {throw new FailedActionException(FailedActionReason.SYSTEM_ERROR);}return results;}private ArrayList<String> loadProperties(String filename) throws DevFailed, IOException {java.net.URL url = getClass().getResource(filename);if (url == null) {Except.throw_exception(""LOAD_PROPERTY_FAILED"", ""URL for property file ("" + filename + "") is null !"", ""PogoProperty.loadProperties()"");return null;}InputStream is = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(is));ArrayList<String> vs = new ArrayList<String>();String str;while ((str = br.readLine()) != null) {str = str.trim();if (!str.startsWith(""#"")) if (str.length() > 0) vs.add(str);}br.close();return vs;}public void write(File file) throws Exception {if (medooFile != null) {if (!medooFile.renameTo(file)) {BufferedInputStream in = null;BufferedOutputStream out = null;try {in = new BufferedInputStream(new FileInputStream(medooFile));out = new BufferedOutputStream(new FileOutputStream(file));IOUtils.copy(in, out);} finally {if (in != null) {try {in.close();} catch (IOException e) {}}if (out != null) {try {out.close();} catch (IOException e) {}}}}} else {throw new FileUploadException(""Cannot write uploaded file to disk!"");}}"	5
"public static String md5(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""MD5"");byte[] md5hash = new byte[32];md.update(text.getBytes(""utf-8""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);}protected static Certificate[] getCurrentCertificates() throws Exception {Certificate[] certificate = AppletLoader.class.getProtectionDomain().getCodeSource().getCertificates();if (certificate == null) {URL location = AppletLoader.class.getProtectionDomain().getCodeSource().getLocation();JarURLConnection jurl = (JarURLConnection) (new URL(""jar:"" + location.toString() + ""!/org/lwjgl/util/applet/AppletLoader.class"").openConnection());jurl.setDefaultUseCaches(true);certificate = jurl.getCertificates();}return certificate;}public String getSHA256Checksum(String source) {String checksum = """";try {MessageDigest md = MessageDigest.getInstance(""SHA-256"");md.update(source.getBytes());byte[] byteData = md.digest();StringBuffer sb = new StringBuffer();for (int i = 0; i < byteData.length; i++) {sb.append(Integer.toString((byteData[i] & 0xff) + 0x100, 16).substring(1));}System.out.println(""Hex format : "" + sb.toString());StringBuffer hexString = new StringBuffer();for (int i = 0; i < byteData.length; i++) {String hex = Integer.toHexString(0xff & byteData[i]);if (hex.length() == 1) {hexString.append('0');}hexString.append(hex);}checksum = hexString.toString();} catch (NoSuchAlgorithmException ex) {Logger.getLogger(CMessageDigestFile.class.getName()).log(Level.SEVERE, null, ex);}return checksum;}public String SHA1(String text) {try {MessageDigest md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(text.getBytes(""iso-8859-1""), 0, text.length());sha1hash = md.digest();return convToHex(sha1hash);} catch (NoSuchAlgorithmException ex) {Logger.getLogger(CMessageDigestFile.class.getName()).log(Level.SEVERE, null, ex);} catch (UnsupportedEncodingException ex) {Logger.getLogger(CMessageDigestFile.class.getName()).log(Level.SEVERE, null, ex);}return """";}private String[] getHersheyFontNames() {String[] fontNames = null;URL url = HersheyFont.class.getResource(""futural.jhf"");String protocol = url.getProtocol();if (protocol.equals(""file"")) {File f = new File(url.getFile());f = f.getParentFile();FilenameFilter filter = new FilenameFilter() {public boolean accept(File dir, String name) {return name.endsWith("".jhf"");}};String[] children = f.list(filter);if (children == null) {return null;}fontNames = new String[children.length];for (int i = 0; i < children.length; i++) {fontNames[i] = children[i].substring(0, children[i].length() - 4);}} else if (protocol.equals(""jar"")) {try {JarURLConnection jarURL = (JarURLConnection) url.openConnection();ZipFile zf = new ZipFile(jarURL.getJarFile().getName());Enumeration e = zf.entries();Vector namesVector = new Vector();while (e.hasMoreElements()) {ZipEntry ze = (ZipEntry) e.nextElement();String name = ze.getName();if (name.startsWith(""visad/util/"") && name.endsWith("".jhf"")) {namesVector.add(name.substring(11));}}zf.close();if (namesVector.size() == 0) {return null;}fontNames = new String[namesVector.size()];for (int i = 0; i < fontNames.length; i++) {String name = (String) namesVector.elementAt(i);fontNames[i] = name.substring(0, name.length() - 4);}} catch (Exception e) {System.out.println(e);}} else {System.out.println(""Cannot locate the HersheyFonts."");}return fontNames;}protected static DynamicJasperDesign generateJasperDesign(DynamicReport dr) throws CoreException {DynamicJasperDesign jd = null;try {if (dr.getTemplateFileName() != null) {log.info(""loading template file: "" + dr.getTemplateFileName());log.info(""Attemping to find the file directly in the file system..."");File file = new File(dr.getTemplateFileName());if (file.exists()) {JasperDesign jdesign = JRXmlLoader.load(file);jd = DJJRDesignHelper.downCast(jdesign, dr);} else {log.info(""Not found: Attemping to find the file in the classpath..."");URL url = DynamicJasperHelper.class.getClassLoader().getResource(dr.getTemplateFileName());JasperDesign jdesign = JRXmlLoader.load(url.openStream());jd = DJJRDesignHelper.downCast(jdesign, dr);}JasperDesignHelper.populateReportOptionsFromDesign(jd, dr);} else {jd = DJJRDesignHelper.getNewDesign(dr);}registerParameters(jd, dr);} catch (JRException e) {throw new CoreException(e.getMessage(), e);} catch (IOException e) {throw new CoreException(e.getMessage(), e);}return jd;}public static byte[] getSystemStateHash() {MessageDigest sha1;try {sha1 = MessageDigest.getInstance(""SHA1"");} catch (Exception e) {throw new Error(""Error in RandomSeed, no sha1 hash"");}sha1.update((byte) System.currentTimeMillis());sha1.update((byte) Runtime.getRuntime().totalMemory());sha1.update((byte) Runtime.getRuntime().freeMemory());sha1.update(stackDump(new Throwable()));try {Properties props = System.getProperties();Enumeration names = props.propertyNames();while (names.hasMoreElements()) {String name = (String) names.nextElement();sha1.update(name.getBytes());sha1.update(props.getProperty(name).getBytes());}} catch (Throwable t) {sha1.update(stackDump(t));}sha1.update((byte) System.currentTimeMillis());try {sha1.update(InetAddress.getLocalHost().toString().getBytes());} catch (Throwable t) {sha1.update(stackDump(t));}sha1.update((byte) System.currentTimeMillis());Runtime.getRuntime().gc();sha1.update((byte) Runtime.getRuntime().freeMemory());sha1.update((byte) System.currentTimeMillis());return sha1.digest();}public void createPartControl(Composite parent) {viewer = new ScrollingGraphicalViewer();viewer.setRootEditPart(new ScalableRootEditPart());viewer.setEditPartFactory(new BlockEditPartFactory());viewer.setEditDomain(new EditDomain());viewer.createControl(parent);viewer.setKeyHandler(new GraphicalViewerKeyHandler(viewer));ActionRegistry actionRegistry = new ActionRegistry();createActions(actionRegistry);ContextMenuProvider cmProvider = new BlockContextMenuProvider(viewer, actionRegistry);viewer.setContextMenu(cmProvider);Block b = new Block();b.addChild(new ChartItem());viewer.setContents(b);System.err.println(""!!! "" + viewer.getContents().getChildren().get(0));viewer.select((EditPart) viewer.getContents().getChildren().get(0));PaletteRoot root = new PaletteRoot();PaletteGroup toolGroup = new PaletteGroup(""Chart Tools"");List toolList = new ArrayList();ToolEntry tool = new SelectionToolEntry();toolList.add(tool);root.setDefaultEntry(tool);tool = new MarqueeToolEntry();toolList.add(tool);toolGroup.addAll(toolList);PaletteGroup templateGroup = new PaletteGroup(""Templates"");List templateList = new ArrayList();CombinedTemplateCreationEntry entry = new CombinedTemplateCreationEntry(""Rect"", ""Rect"", new ChartItem(), new SimpleFactory(ChartItem.class), ImageDescriptor.getMissingImageDescriptor(), ImageDescriptor.getMissingImageDescriptor());CombinedTemplateCreationEntry entry1 = new CombinedTemplateCreationEntry(""Line"", ""Line"", new ChartLine(), new SimpleFactory(ChartLine.class), ImageDescriptor.getMissingImageDescriptor(), ImageDescriptor.getMissingImageDescriptor());templateList.add(entry);templateList.add(entry1);templateGroup.addAll(templateList);List rootList = new ArrayList();rootList.add(toolGroup);rootList.add(templateGroup);root.addAll(rootList);final PaletteViewer v = new PaletteViewer();v.setPaletteRoot(root);v.createControl(parent);v.addSelectionChangedListener(new ISelectionChangedListener() {public void selectionChanged(SelectionChangedEvent event) {System.err.println(""selectionChanged "" + v.getActiveTool());}});deleteAction.setSelectionProvider(viewer);viewer.getEditDomain().setPaletteViewer(v);viewer.addSelectionChangedListener(new ISelectionChangedListener() {public void selectionChanged(SelectionChangedEvent event) {System.err.println(event.getSelection());deleteAction.update();}});viewer.getEditDomain().getCommandStack().addCommandStackEventListener(new CommandStackEventListener() {public void stackChanged(CommandStackEvent event) {undoAction.setEnabled(viewer.getEditDomain().getCommandStack().canUndo());redoAction.setEnabled(viewer.getEditDomain().getCommandStack().canRedo());}});}public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception {HttpClientInfo clientInfo = HttpUtil.parseClientInfo((HttpServletRequest) request);if (request.getParameter(""_debug_"") != null) {StringBuffer buffer = new StringBuffer();Enumeration iter = request.getHeaderNames();while (iter.hasMoreElements()) {String name = (String) iter.nextElement();buffer.append(name + ""="" + request.getHeader(name)).append(""\n"");}buffer.append(""\n"");iter = request.getParameterNames();while (iter.hasMoreElements()) {String name = (String) iter.nextElement();String value = request.getParameter(name);if (!""ISO-8859-1"".equalsIgnoreCase(clientInfo.getPreferCharset())) value = new String(value.getBytes(""ISO-8859-1""), clientInfo.getPreferCharset());buffer.append(name).append(""="").append(value).append(""\n"");}response.setContentType(""text/plain; charset=UTF-8"");response.setCharacterEncoding(""UTF-8"");response.getWriter().write(buffer.toString());return null;}Object resultObj = handleRequest(request);if (resultObj == null) {String requestException = (String) request.getAttribute(""XSMP.handleRequest.Exception"");if (requestException != null) response.sendError(500, requestException); else response.setContentLength(0);} else {if (resultObj instanceof DataHandler) {response.setContentType(((DataHandler) resultObj).getContentType());response.setContentLength(((DataHandler) resultObj).getInputStream().available());IOUtils.copy(((DataHandler) resultObj).getInputStream(), response.getOutputStream());} else {String temp = resultObj.toString();if (temp.startsWith(""<"") && temp.endsWith("">"")) response.setContentType(""text/html; charset="" + clientInfo.getPreferCharset()); else response.setContentType(""text/plain; charset="" + clientInfo.getPreferCharset());byte[] buffer = temp.getBytes(clientInfo.getPreferCharset());response.setContentLength(buffer.length);response.getOutputStream().write(buffer);}}return null;}public static String Md5By32(String plainText) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(plainText.getBytes());byte b[] = md.digest();int i;StringBuffer buf = new StringBuffer("""");for (int offset = 0; offset < b.length; offset++) {i = b[offset];if (i < 0) i += 256;if (i < 16) buf.append(""0"");buf.append(Integer.toHexString(i));}return buf.toString();} catch (NoSuchAlgorithmException e) {e.printStackTrace();return null;}}"	5
"public static String mysqlPasswordHash(String string) {try {MessageDigest digest = MessageDigest.getInstance(HashAlgorithms.SHA1);try {digest.update(string.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {throw new RuntimeException(e);}byte[] encodedPassword = digest.digest();digest.update(encodedPassword);encodedPassword = digest.digest();String hash = new BigInteger(1, encodedPassword).toString(16).toUpperCase();while (hash.length() < 40) {hash = ""0"" + hash;}return ""*"" + hash;} catch (NoSuchAlgorithmException e) {throw new RuntimeException(e);}}public String readPage(boolean ignoreComments) throws Exception {BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String inputLine;String html = """";if (ignoreComments) {while ((inputLine = in.readLine()) != null) {if (inputLine.length() > 0) {if (inputLine.substring(0, 1).compareTo(""#"") != 0) {html = html + inputLine + ""\n"";}}}} else {while ((inputLine = in.readLine()) != null) {html = html + inputLine + ""\n"";}}in.close();return html;}public boolean updatenum(int num, String pid) {boolean flag = false;Connection conn = null;PreparedStatement pm = null;try {conn = Pool.getConnection();conn.setAutoCommit(false);pm = conn.prepareStatement(""update addwuliao set innum=? where pid=?"");pm.setInt(1, num);pm.setString(2, pid);int a = pm.executeUpdate();if (a == 0) {flag = false;} else {flag = true;}conn.commit();Pool.close(pm);Pool.close(conn);} catch (Exception e) {e.printStackTrace();flag = false;try {conn.rollback();} catch (SQLException e1) {e1.printStackTrace();}Pool.close(pm);Pool.close(conn);} finally {Pool.close(pm);Pool.close(conn);}return flag;}public boolean delwuliao(String pid) {boolean flag = false;Connection conn = null;PreparedStatement pm = null;try {conn = Pool.getConnection();conn.setAutoCommit(false);pm = conn.prepareStatement(""delete from addwuliao where pid=?"");pm.setString(1, pid);int x = pm.executeUpdate();if (x == 0) {flag = false;} else {flag = true;}conn.commit();Pool.close(pm);Pool.close(conn);} catch (Exception e) {e.printStackTrace();flag = false;try {conn.rollback();} catch (SQLException e1) {e1.printStackTrace();}Pool.close(pm);Pool.close(conn);} finally {Pool.close(pm);Pool.close(conn);}return flag;}public Item findById(String itemId) throws UnsupportedEncodingException, IOException {String sessionId = (String) RuntimeAccess.getInstance().getSession().getAttribute(""SESSION_ID"");DefaultHttpClient httpclient = new DefaultHttpClient();FindItemByIdRequest request = new FindItemByIdRequest();request.setItemID(itemId);request.setSessionId(sessionId);XStream writer = new XStream();writer.setMode(XStream.XPATH_ABSOLUTE_REFERENCES);writer.alias(""FindItemByIdRequest"", FindItemByIdRequest.class);XStream reader = new XStream();reader.setMode(XStream.XPATH_ABSOLUTE_REFERENCES);reader.alias(""FindItemByIdResponse"", FindItemByIdResponse.class);String strRequest = URLEncoder.encode(reader.toXML(request), ""UTF-8"");HttpGet httpget = new HttpGet(MewitProperties.getMewitUrl() + ""/resources/findItemById?REQUEST="" + strRequest);HttpResponse response = httpclient.execute(httpget);HttpEntity entity = response.getEntity();if (entity != null) {String result = URLDecoder.decode(EntityUtils.toString(entity), ""UTF-8"");FindItemByIdResponse fibiResponse = (FindItemByIdResponse) reader.fromXML(result);return fibiResponse.getItem();}return null;}public QueryResult doSearch(String searchTerm, Integer searchInReceivedItems, Integer searchInSentItems, Integer searchInSupervisedItems, Integer startRow, Integer resultCount, Boolean searchArchived, Boolean searchInItemsNeededAttentionOnly) throws UnsupportedEncodingException, IOException {String sessionId = (String) RuntimeAccess.getInstance().getSession().getAttribute(""SESSION_ID"");DefaultHttpClient httpclient = new DefaultHttpClient();QueryResult queryResult = new QueryResult();SearchRequest request = new SearchRequest();SearchItemsQuery query = new SearchItemsQuery();query.setArchiveIncluded(searchArchived);log(INFO, ""searchTerm="" + searchTerm);log(INFO, ""search in received="" + searchInReceivedItems);log(INFO, ""search in sent="" + searchInSentItems);log(INFO, ""search in supervised="" + searchInSupervisedItems);List<String> filters = new ArrayList<String>();if (searchInItemsNeededAttentionOnly == false) {if (searchInReceivedItems != null) {filters.add(""ALL_RECEIVED_ITEMS"");}if (searchInSentItems != null) {filters.add(""ALL_SENT_ITEMS"");}if (searchInSupervisedItems != null) {filters.add(""ALL_SUPERVISED_ITEMS"");}} else {if (searchInReceivedItems != null) {filters.add(""RECEIVED_ITEMS_NEEDED_ATTENTION"");}if (searchInSentItems != null) {filters.add(""SENT_ITEMS_NEEDED_ATTENTION"");}}query.setFilters(filters);query.setId(""1234"");query.setOwner(sessionId);query.setReferenceOnly(false);query.setSearchTerm(searchTerm);query.setUseOR(false);request.setStartRow(startRow);request.setResultCount(resultCount);request.setQuery(query);request.setSessionId(sessionId);XStream writer = new XStream();writer.setMode(XStream.XPATH_ABSOLUTE_REFERENCES);writer.alias(""SearchRequest"", SearchRequest.class);XStream reader = new XStream();reader.setMode(XStream.XPATH_ABSOLUTE_REFERENCES);reader.alias(""SearchResponse"", SearchResponse.class);String strRequest = URLEncoder.encode(reader.toXML(request), ""UTF-8"");HttpGet httpget = new HttpGet(MewitProperties.getMewitUrl() + ""/resources/search?REQUEST="" + strRequest);HttpResponse response = httpclient.execute(httpget);HttpEntity entity = response.getEntity();if (entity != null) {String result = URLDecoder.decode(EntityUtils.toString(entity), ""UTF-8"");SearchResponse searchResponse = (SearchResponse) reader.fromXML(result);List<Item> items = searchResponse.getItems();queryResult.setItems(items);queryResult.setTotal(searchResponse.getTotalResultCount());queryResult.setStartRow(searchResponse.getStartRow());}return queryResult;}public boolean checkPassword(String password, String digest) {boolean passwordMatch = false;MessageDigest sha = null;try {sha = MessageDigest.getInstance(""SHA-1"");if (digest.regionMatches(true, 0, ""{SHA}"", 0, 5)) {digest = digest.substring(5);} else if (digest.regionMatches(true, 0, ""{SSHA}"", 0, 6)) {digest = digest.substring(6);}byte[][] hs = split(Base64.decode(digest.getBytes()), 20);byte[] hash = hs[0];byte[] salt = hs[1];sha.reset();sha.update(password.getBytes());sha.update(salt);byte[] pwhash = sha.digest();if (MessageDigest.isEqual(hash, pwhash)) {passwordMatch = true;}} catch (NoSuchAlgorithmException nsae) {CofaxToolsUtil.log(""Algorithme SHA-1 non supporte a la verification du password"" + nsae + id);}return passwordMatch;}public static String getSSHADigest(String password, String salt) {String digest = null;MessageDigest sha = null;try {sha = MessageDigest.getInstance(""SHA-1"");sha.reset();sha.update(password.getBytes());sha.update(salt.getBytes());byte[] pwhash = sha.digest();digest = ""{SSHA}"" + new String(Base64.encode(concatenate(pwhash, salt.getBytes())));} catch (NoSuchAlgorithmException nsae) {CofaxToolsUtil.log(""Algorithme SHA-1 non supporte a la creation du hashage"" + nsae + id);}return digest;}public static String getSHADigest(String password) {String digest = null;MessageDigest sha = null;try {sha = MessageDigest.getInstance(""SHA-1"");sha.reset();sha.update(password.getBytes());byte[] pwhash = sha.digest();digest = ""{SHA}"" + new String(Base64.encode(pwhash));} catch (NoSuchAlgorithmException nsae) {CofaxToolsUtil.log(""Algorithme SHA-1 non supporte a la creation du hashage"" + nsae + id);}return digest;}public static void copyFromTo(File srcFile, File destFile) {FileChannel in = null, out = null;FileInputStream fis = null;FileOutputStream fos = null;try {fis = new FileInputStream(srcFile);} catch (FileNotFoundException fnfe) {System.out.println(""File: "" + srcFile.toString());System.out.println(""file does not exist, "" + ""is a directory rather than a regular file, "" + ""or for some other reason cannot be opened for reading"");System.exit(-1);}try {fos = new FileOutputStream(destFile);} catch (FileNotFoundException fnfe) {System.out.println(""File: "" + destFile.toString());System.out.println(""file exists but is a directory rather than a regular file, "" + ""does not exist but cannot be created, "" + ""or cannot be opened for any other reason"");System.exit(-1);}try {in = fis.getChannel();out = fos.getChannel();in.transferTo(0, in.size(), out);fos.flush();fos.close();out.close();fis.close();in.close();System.out.println(""Completed copying "" + srcFile.toString() + "" to "" + destFile.toString());} catch (IOException ioe) {System.out.println(""IOException copying file: "" + ioe.getMessage());System.exit(-1);}long srcModified = srcFile.lastModified();if (srcModified > 0L && destFile.exists()) {destFile.setLastModified(srcModified);}}"	5
"private static String GetSHA1(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(text.getBytes(""iso-8859-1""), 0, text.length());sha1hash = md.digest();return LoginHttpPostProcessor.ConvertToHex(sha1hash);}public void executeUpdateTransaction(List queries) throws SQLException {assert connection != null;boolean autoCommit = connection.getAutoCommit();connection.setAutoCommit(false);try {Iterator iterator = queries.iterator();while (iterator.hasNext()) {String query = (String) iterator.next();Statement statement = connection.createStatement();statement.executeUpdate(query);}connection.commit();connection.setAutoCommit(autoCommit);} catch (SQLException e) {connection.rollback();throw new SQLException(e.getMessage());}}protected String readFileUsingFileUrl(String fileUrlName) {String response = """";try {URL url = new URL(fileUrlName);URLConnection connection = url.openConnection();InputStreamReader isr = new InputStreamReader(connection.getInputStream());BufferedReader in = new BufferedReader(isr);String inputLine = """";while ((inputLine = in.readLine()) != null) {response += inputLine + ""\n"";}if (response.endsWith(""\n"")) {response = response.substring(0, response.length() - 1);}in.close();} catch (Exception x) {x.printStackTrace();}return response;}protected String readFileUsingHttp(String fileUrlName) {String response = """";try {URL url = new URL(fileUrlName);URLConnection connection = url.openConnection();HttpURLConnection httpConn = (HttpURLConnection) connection;httpConn.setRequestProperty(""Content-Type"", ""text/html"");httpConn.setRequestProperty(""Content-Length"", ""0"");httpConn.setRequestMethod(""GET"");httpConn.setDoOutput(true);httpConn.setDoInput(true);httpConn.setAllowUserInteraction(false);InputStreamReader isr = new InputStreamReader(httpConn.getInputStream());BufferedReader in = new BufferedReader(isr);String inputLine = """";while ((inputLine = in.readLine()) != null) {response += inputLine + ""\n"";}if (response.endsWith(""\n"")) {response = response.substring(0, response.length() - 1);}in.close();} catch (Exception x) {x.printStackTrace();}return response;}public static List<ServerInfo> getStartedServers() {List<ServerInfo> infos = new ArrayList<ServerInfo>();try {StringBuilder request = new StringBuilder();request.append(url).append(""/"").append(displayServlet);request.append(""?ingame=1"");URL objUrl = new URL(request.toString());URLConnection urlConnect = objUrl.openConnection();InputStream in = urlConnect.getInputStream();BufferedReader reader = new BufferedReader(new InputStreamReader(in));while (reader.ready()) {String name = reader.readLine();String ip = reader.readLine();int port = Integer.valueOf(reader.readLine());ServerInfo server = new ServerInfo(name, ip, port);server.nbPlayers = Integer.valueOf(reader.readLine());infos.add(server);}in.close();return infos;} catch (Exception e) {return infos;}}private ScrollingGraphicalViewer createGraphicalViewer(final Composite parent) {final ScrollingGraphicalViewer viewer = new ScrollingGraphicalViewer();viewer.createControl(parent);_root = new EditRootEditPart();viewer.setRootEditPart(_root);getEditDomain().addViewer(viewer);getSite().setSelectionProvider(viewer);viewer.setEditPartFactory(getEditPartFactory());final KeyHandler keyHandler = new GraphicalViewerKeyHandler(viewer) {@SuppressWarnings(""unchecked"")@Overridepublic boolean keyPressed(final KeyEvent event) {if (event.stateMask == SWT.MOD1 && event.keyCode == SWT.DEL) {final List<? extends EditorPart> objects = viewer.getSelectedEditParts();if (objects == null || objects.isEmpty()) return true;final GroupRequest deleteReq = new GroupRequest(RequestConstants.REQ_DELETE);final CompoundCommand compoundCmd = new CompoundCommand(""Delete"");for (int i = 0; i < objects.size(); i++) {final EditPart object = (EditPart) objects.get(i);deleteReq.setEditParts(object);final Command cmd = object.getCommand(deleteReq);if (cmd != null) compoundCmd.add(cmd);}getCommandStack().execute(compoundCmd);return true;}if (event.stateMask == SWT.MOD3 && (event.keyCode == SWT.ARROW_DOWN || event.keyCode == SWT.ARROW_LEFT || event.keyCode == SWT.ARROW_RIGHT || event.keyCode == SWT.ARROW_UP)) {final List<? extends EditorPart> objects = viewer.getSelectedEditParts();if (objects == null || objects.isEmpty()) return true;final GroupRequest moveReq = new ChangeBoundsRequest(RequestConstants.REQ_MOVE);final CompoundCommand compoundCmd = new CompoundCommand(""Move"");for (int i = 0; i < objects.size(); i++) {final EditPart object = (EditPart) objects.get(i);moveReq.setEditParts(object);final LocationCommand cmd = (LocationCommand) object.getCommand(moveReq);if (cmd != null) {cmd.setLocation(new Point(event.keyCode == SWT.ARROW_LEFT ? -1 : event.keyCode == SWT.ARROW_RIGHT ? 1 : 0, event.keyCode == SWT.ARROW_DOWN ? 1 : event.keyCode == SWT.ARROW_UP ? -1 : 0));cmd.setRelative(true);compoundCmd.add(cmd);}}getCommandStack().execute(compoundCmd);return true;}return super.keyPressed(event);}};keyHandler.put(KeyStroke.getPressed(SWT.F2, 0), getActionRegistry().getAction(GEFActionConstants.DIRECT_EDIT));viewer.setKeyHandler(keyHandler);viewer.setContents(getEditorInput().getAdapter(NamedUuidEntity.class));viewer.addDropTargetListener(createTransferDropTargetListener(viewer));return viewer;}public int[] bubbleSort(int[] data) {for (int i = 0; i < data.length; i++) {for (int j = 0; j < data.length - i - 1; j++) {if (data[j] > data[j + 1]) {int temp = data[j];data[j] = data[j + 1];data[j + 1] = temp;}}}return data;}private void findFile() throws SchedulerException {java.io.InputStream f = null;String furl = null;File file = new File(getFileName());if (!file.exists()) {URL url = classLoadHelper.getResource(getFileName());if (url != null) {try {furl = URLDecoder.decode(url.getPath(), ""UTF-8"");file = new File(furl);f = url.openStream();} catch (java.io.UnsupportedEncodingException uee) {} catch (IOException ignor) {}}} else {try {f = new java.io.FileInputStream(file);} catch (FileNotFoundException e) {}}if (f == null && isFailOnFileNotFound()) {throw new SchedulerException(""File named '"" + getFileName() + ""' does not exist. f == null && isFailOnFileNotFound()"");} else if (f == null) {getLog().warn(""File named '"" + getFileName() + ""' does not exist. f == null"");} else {fileFound = true;try {if (furl != null) this.filePath = furl; else this.filePath = file.getAbsolutePath();f.close();} catch (IOException ioe) {getLog().warn(""Error closing jobs file "" + getFileName(), ioe);}}}@Overridepublic String getPath() {InputStream in = null;OutputStream out = null;File file = null;try {file = File.createTempFile(""java-storage_"" + RandomStringUtils.randomAlphanumeric(32), "".tmp"");file.deleteOnExit();out = new FileOutputStream(file);in = openStream();IOUtils.copy(in, out);} catch (IOException e) {throw new RuntimeException();} finally {IOUtils.closeQuietly(in);IOUtils.closeQuietly(out);}if (file != null && file.exists()) {return file.getPath();}return null;}public static void copy(File file, File dir, boolean overwrite) throws IOException {BufferedInputStream bis = new BufferedInputStream(new FileInputStream(file));File out = new File(dir, file.getName());if (out.exists() && !overwrite) {throw new IOException(""File: "" + out + "" already exists."");}FileOutputStream fos = new FileOutputStream(out, false);byte[] block = new byte[4096];int read = bis.read(block);while (read != -1) {fos.write(block, 0, read);read = bis.read(block);}}"	5
"public static void copyFile(File from, File to) throws IOException {if (from.isDirectory()) {if (!to.exists()) {to.mkdir();}File[] children = from.listFiles();for (int i = 0; i < children.length; i++) {if (children[i].getName().equals(""."") || children[i].getName().equals("".."")) {continue;}if (children[i].isDirectory()) {File f = new File(to, children[i].getName());copyFile(children[i], f);} else {copyFile(children[i], to);}}} else if (from.isFile() && (to.isDirectory() || to.isFile())) {if (to.isDirectory()) {to = new File(to, from.getName());}FileInputStream in = new FileInputStream(from);FileOutputStream out = new FileOutputStream(to);byte[] buf = new byte[32678];int read;while ((read = in.read(buf)) > -1) {out.write(buf, 0, read);}closeStream(in);closeStream(out);}}void openTextFile(String urlString, boolean install) {StringBuffer sb = null;try {URL url = new URL(urlString);InputStream in = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(in));sb = new StringBuffer();String line;while ((line = br.readLine()) != null) sb.append(line + ""\n"");in.close();} catch (IOException e) {if (!(install && urlString.endsWith(""StartupMacros.txt""))) IJ.error(""URL Opener"", """" + e);sb = null;}if (sb != null) {if (install) (new MacroInstaller()).install(new String(sb)); else {int index = urlString.lastIndexOf(""/"");if (index != -1 && index <= urlString.length() - 1) urlString = urlString.substring(index + 1);(new Editor()).create(urlString, new String(sb));}}}public void validateXml(InputStream inputData, ErrorHandler errorHandler) throws SAXException, IOException, Exception {SAXParserFactory spf = SAXParserFactory.newInstance();spf.setValidating(false);spf.setNamespaceAware(true);try {SchemaFactory schemaFactory = SchemaFactory.newInstance(""http://www.w3.org/2001/XMLSchema"");URL schemaURL = new URL(schemeUrl);InputStream urlStream = null;try {urlStream = schemaURL.openStream();} catch (IOException ex) {if (defaultUrl != null) {schemaURL = new URL(defaultUrl);urlStream = schemaURL.openStream();} else {throw ex;}}LOGGER.debug(""Uses schema url : "" + schemaURL);StreamSource sss = new StreamSource(urlStream);Schema schema = schemaFactory.newSchema(sss);spf.setSchema(schema);SAXParser parser = spf.newSAXParser();XMLReader reader = parser.getXMLReader();reader.setErrorHandler(errorHandler);reader.parse(new InputSource(inputData));} catch (ParserConfigurationException e) {throw new SAXException(e);}}public static void copyFile(File sourceFile, File destFile) throws IOException {if (!destFile.exists()) destFile.createNewFile();FileChannel source = null;FileChannel destination = null;try {source = new FileInputStream(sourceFile).getChannel();destination = new FileOutputStream(destFile).getChannel();destination.transferFrom(source, 0, source.size());} finally {if (source != null) source.close();if (destination != null) destination.close();}}private void writeToDisk(byte[] download) throws IOException {File target = new File(TARGET_FILENAME);InputStream downloadedFromNetwork = new ByteArrayInputStream(download);FileOutputStream fileOnDisk = null;try {try {fileOnDisk = new FileOutputStream(target);fileOnDisk.write(""test"".getBytes());} catch (Exception e) {target = new File(PMS.getConfiguration().getTempFolder(), TARGET_FILENAME);} finally {fileOnDisk.close();}fileOnDisk = new FileOutputStream(target);int bytesSaved = IOUtils.copy(downloadedFromNetwork, fileOnDisk);logger.info(""Wrote "" + bytesSaved + "" bytes to "" + target.getAbsolutePath());} finally {IOUtils.closeQuietly(downloadedFromNetwork);IOUtils.closeQuietly(fileOnDisk);}}public void copyToZip(ZipOutputStream zout, String entryName) throws IOException {close();ZipEntry entry = new ZipEntry(entryName);zout.putNextEntry(entry);if (!isEmpty() && this.tmpFile.exists()) {InputStream in = new FileInputStream(this.tmpFile);IOUtils.copyTo(in, zout);in.close();}zout.flush();zout.closeEntry();delete();}public byte process(ProcessorContext<PublishRequest> context) throws InterruptedException, ProcessorException {logger.info(""MapTileChacheTask:process"");PublishRequest req = context.getItem().getEntity();if (StringUtils.isEmpty(req.getBackMap())) return TaskState.STATE_TILE_CACHED;final PublicMapPost post;final GenericDAO<PublicMapPost> postDao = DAOFactory.createDAO(PublicMapPost.class);try {ReadOnlyTransaction.beginTransaction();} catch (DatabaseException e) {logger.error(""error"", e);throw new ProcessorException(e);}int numCachedTiles = 0;try {List<MapTile> backTiles = new ArrayList<MapTile>();post = postDao.findUniqueByCriteria(Expression.eq(""guid"", req.getPostGuid()));final LatLngRectangle bounds = new LatLngRectangle(new LatLngPoint(post.getSWLat(), post.getSWLon()), new LatLngPoint(post.getNELat(), post.getNELon()));final String backMapGuid = ""gst"";final XFile dstDir = new XFile(new XFile(Configuration.getInstance().getPublicMapStorage().toString()), backMapGuid);dstDir.mkdir();for (int z = Math.min(Tile.getOptimalZoom(bounds, 768), 9); z <= 17; z++) {final Tile tileStart = new Tile(bounds.getSouthWest().getLat(), bounds.getSouthWest().getLng(), z);final Tile tileEnd = new Tile(bounds.getNorthEast().getLat(), bounds.getNorthEast().getLng(), z);for (double y = tileEnd.getTileCoord().getY(); y <= tileStart.getTileCoord().getY(); y++) for (double x = tileStart.getTileCoord().getX(); x <= tileEnd.getTileCoord().getX(); x++) {NASAMapTile tile = new NASAMapTile((int) x, (int) y, z);XFile file = new XFile(dstDir, tile.toKeyString());if (file.exists() && file.isFile()) continue;backTiles.add(tile);}}try {for (MapTile tile : backTiles) {InputStream in = null;OutputStream out = null;final URL url = new URL(tile.getPath());try {final XFile outFile = new XFile(dstDir, tile.toKeyString());final URLConnection conn = url.openConnection();if (conn == null || !conn.getContentType().startsWith(""image"")) throw new IllegalAccessException(""onearth.jpl.nasa.gov service returns non-image file, "" + ""content-type='"" + conn.getContentType() + ""'"");in = conn.getInputStream();if (in != null) {out = new XFileOutputStream(outFile);IOUtils.copy(in, out);} else throw new IllegalStateException(""opened stream is null"");} finally {if (out != null) {out.flush();out.close();}if (in != null) in.close();}if (++numCachedTiles % 100 == 0) {logger.info(numCachedTiles + "" tiles cached"");}}} catch (Throwable e) {logger.error(""map tile caching has failed: "", e);throw new ProcessorException(e);}} catch (ProcessorException e) {logger.error(""map tile caching has failed: "", e);throw e;} catch (Throwable e) {logger.error(""map tile caching has failed: "", e);throw new ProcessorException(e);} finally {ReadOnlyTransaction.closeTransaction();logger.info(numCachedTiles + "" tiles cached"");}return TaskState.STATE_TILE_CACHED;}public HttpResponse executeHttp(final HttpUriRequest request, final int expectedCode) throws ClientProtocolException, IOException, HttpException {final HttpResponse response = httpClient.execute(request);if (response.getStatusLine().getStatusCode() != expectedCode) {throw newHttpException(request, response);}return response;}public HttpResponse executeHttp(final HttpUriRequest request, final int beginExpectedCode, final int endExpectedCode) throws ClientProtocolException, IOException, HttpException {final HttpResponse response = httpClient.execute(request);final int statusCode = response.getStatusLine().getStatusCode();if (statusCode < beginExpectedCode || statusCode >= endExpectedCode) {throw newHttpException(request, response);}return response;}public static int getContentLength(URL urlFileLocation) {HttpURLConnection connFile = null;int iFileSize = -1;try {connFile = (HttpURLConnection) urlFileLocation.openConnection();connFile.setDoInput(true);InputStream is = connFile.getInputStream();iFileSize = connFile.getContentLength();is.close();connFile.disconnect();} catch (IOException e) {e.printStackTrace();}return iFileSize;}"	5
"String fetch_pls(String pls) {InputStream pstream = null;if (pls.startsWith(""http://"")) {try {URL url = null;if (running_as_applet) {url = new URL(getCodeBase(), pls);} else {url = new URL(pls);}URLConnection urlc = url.openConnection();pstream = urlc.getInputStream();} catch (Exception ee) {System.err.println(ee);return null;}}if (pstream == null && !running_as_applet) {try {pstream = new FileInputStream(System.getProperty(""user.dir"") + System.getProperty(""file.separator"") + pls);} catch (Exception ee) {System.err.println(ee);return null;}}String line = null;while (true) {try {line = readline(pstream);} catch (Exception e) {}if (line == null) {break;}if (line.startsWith(""File1="")) {byte[] foo = line.getBytes();int i = 6;for (; i < foo.length; i++) {if (foo[i] == 0x0d) {break;}}return line.substring(6, i);}}return null;}String fetch_m3u(String m3u) {InputStream pstream = null;if (m3u.startsWith(""http://"")) {try {URL url = null;if (running_as_applet) {url = new URL(getCodeBase(), m3u);} else {url = new URL(m3u);}URLConnection urlc = url.openConnection();pstream = urlc.getInputStream();} catch (Exception ee) {System.err.println(ee);return null;}}if (pstream == null && !running_as_applet) {try {pstream = new FileInputStream(System.getProperty(""user.dir"") + System.getProperty(""file.separator"") + m3u);} catch (Exception ee) {System.err.println(ee);return null;}}String line = null;while (true) {try {line = readline(pstream);} catch (Exception e) {}if (line == null) {break;}return line;}return null;}void loadPlaylist() {if (running_as_applet) {String s = null;for (int i = 0; i < 10; i++) {s = getParameter(""jorbis.player.play."" + i);if (s == null) {break;}playlist.addElement(s);}}if (playlistfile == null) {return;}try {InputStream is = null;try {URL url = null;if (running_as_applet) {url = new URL(getCodeBase(), playlistfile);} else {url = new URL(playlistfile);}URLConnection urlc = url.openConnection();is = urlc.getInputStream();} catch (Exception ee) {}if (is == null && !running_as_applet) {try {is = new FileInputStream(System.getProperty(""user.dir"") + System.getProperty(""file.separator"") + playlistfile);} catch (Exception ee) {}}if (is == null) {return;}while (true) {String line = readline(is);if (line == null) {break;}byte[] foo = line.getBytes();for (int i = 0; i < foo.length; i++) {if (foo[i] == 0x0d) {line = new String(foo, 0, i);break;}}playlist.addElement(line);}} catch (Exception e) {System.out.println(e);}}protected Control createContents(Composite parent) {this.getShell().setText(""Chisio"");this.getShell().setSize(800, 600);this.getShell().setImage(ImageDescriptor.createFromFile(ChisioMain.class, ""icon/chisio-icon.png"").createImage());Composite composite = new Composite(parent, SWT.BORDER);composite.setLayout(new FillLayout());this.viewer = new ScrollingGraphicalViewer();this.viewer.setEditDomain(this.editDomain);this.viewer.createControl(composite);this.viewer.getControl().setBackground(ColorConstants.white);this.rootEditPart = new ChsScalableRootEditPart();this.viewer.setRootEditPart(this.rootEditPart);this.viewer.setEditPartFactory(new ChsEditPartFactory());((FigureCanvas) this.viewer.getControl()).setScrollBarVisibility(FigureCanvas.ALWAYS);this.viewer.addDropTargetListener(new ChsFileDropTargetListener(this.viewer, this));this.viewer.addDragSourceListener(new ChsFileDragSourceListener(this.viewer));CompoundModel model = new CompoundModel();model.setAsRoot();this.viewer.setContents(model);this.viewer.getControl().addMouseListener(this);this.popupManager = new PopupManager(this);this.popupManager.setRemoveAllWhenShown(true);this.popupManager.addMenuListener(new IMenuListener() {public void menuAboutToShow(IMenuManager manager) {ChisioMain.this.popupManager.createActions(manager);}});KeyHandler keyHandler = new KeyHandler();ActionRegistry a = new ActionRegistry();keyHandler.put(KeyStroke.getPressed(SWT.DEL, 127, 0), new DeleteAction(this.viewer));keyHandler.put(KeyStroke.getPressed('+', SWT.KEYPAD_ADD, 0), new ZoomAction(this, 1, null));keyHandler.put(KeyStroke.getPressed('-', SWT.KEYPAD_SUBTRACT, 0), new ZoomAction(this, -1, null));keyHandler.put(KeyStroke.getPressed(SWT.F2, 0), a.getAction(GEFActionConstants.DIRECT_EDIT));this.viewer.setKeyHandler(keyHandler);this.higlightColor = ColorConstants.yellow;this.createCombos();return composite;}public String getWebcontent(final String link, final String postdata) {final StringBuffer response = new StringBuffer();try {DisableSSLCertificateCheckUtil.disableChecks();final URL url = new URL(link);final URLConnection conn = url.openConnection();conn.setDoOutput(true);final OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());wr.write(postdata);wr.flush();final BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));String content = """";while ((content = rd.readLine()) != null) {response.append(content);response.append('\n');}wr.close();rd.close();} catch (final Exception e) {LOG.error(""getWebcontent(String link, String postdata): "" + e.toString() + ""\012"" + link + ""\012"" + postdata);}return response.toString();}public static Hashtable DefaultLoginValues(String firstName, String lastName, String password, String mac, String startLocation, int major, int minor, int patch, int build, String platform, String viewerDigest, String userAgent, String author) throws Exception {Hashtable values = new Hashtable();MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(password.getBytes(""ASCII""), 0, password.length());byte[] raw_digest = md5.digest();String passwordDigest = Helpers.toHexText(raw_digest);values.put(""first"", firstName);values.put(""last"", lastName);values.put(""passwd"", """" + password);values.put(""start"", startLocation);values.put(""major"", major);values.put(""minor"", minor);values.put(""patch"", patch);values.put(""build"", build);values.put(""platform"", platform);values.put(""mac"", mac);values.put(""agree_to_tos"", ""true"");values.put(""viewer_digest"", viewerDigest);values.put(""user-agent"", userAgent + "" ("" + Helpers.VERSION + "")"");values.put(""author"", author);Vector optionsArray = new Vector();optionsArray.addElement(""inventory-root"");optionsArray.addElement(""inventory-skeleton"");optionsArray.addElement(""inventory-lib-root"");optionsArray.addElement(""inventory-lib-owner"");optionsArray.addElement(""inventory-skel-lib"");optionsArray.addElement(""initial-outfit"");optionsArray.addElement(""gestures"");optionsArray.addElement(""event_categories"");optionsArray.addElement(""event_notifications"");optionsArray.addElement(""classified_categories"");optionsArray.addElement(""buddy-list"");optionsArray.addElement(""ui-config"");optionsArray.addElement(""login-flags"");optionsArray.addElement(""global-textures"");values.put(""options"", optionsArray);return values;}public static String md5(String senha) {MessageDigest md = null;try {md = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Ocorreu NoSuchAlgorithmException"");}md.update(senha.getBytes());byte[] xx = md.digest();String n2 = null;StringBuffer resposta = new StringBuffer();for (int i = 0; i < xx.length; i++) {n2 = Integer.toHexString(0XFF & ((int) (xx[i])));if (n2.length() < 2) {n2 = ""0"" + n2;}resposta.append(n2);}return resposta.toString();}public void prepareWorkingDirectory() throws Exception {workingDirectory = tempDir + ""/profile_"" + System.nanoTime();(new File(workingDirectory)).mkdir();String monitorCallShellScript = ""data/scripts/monitorcall.sh"";URL monitorCallShellScriptUrl = Thread.currentThread().getContextClassLoader().getResource(monitorCallShellScript);File inScriptFile = null;try {inScriptFile = new File(monitorCallShellScriptUrl.toURI());} catch (URISyntaxException e) {throw e;}monitorShellScript = workingDirectory + ""/monitorcall.sh"";File outScriptFile = new File(monitorShellScript);FileChannel inChannel = new FileInputStream(inScriptFile).getChannel();FileChannel outChannel = new FileOutputStream(outScriptFile).getChannel();try {inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {throw e;} finally {if (inChannel != null) inChannel.close();if (outChannel != null) outChannel.close();}try {LinuxCommandExecutor cmdExecutor = new LinuxCommandExecutor();cmdExecutor.runCommand(""chmod 777 "" + monitorShellScript);} catch (Exception e) {throw e;}}public static int[] sort(int[] v) {int i;int l = v.length;int[] index = new int[l];for (i = 0; i < l; i++) index[i] = i;int tmp;boolean change = true;while (change) {change = false;for (i = 0; i < l - 1; i++) {if (v[index[i]] > v[index[i + 1]]) {tmp = index[i];index[i] = index[i + 1];index[i + 1] = tmp;change = true;}}}return index;}public Vector<Question> reload() throws IOException {Vector<Question> questions = new Vector<Question>();InputStream is = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(is));shortName = br.readLine();if (shortName != null && shortName.equals(""SHORTNAME"")) {shortName = br.readLine();author = br.readLine();if (author != null && author.equals(""AUTHOR"")) {author = br.readLine();description = br.readLine();if (description != null && description.equals(""DESCRIPTION"")) {description = br.readLine();try {questions = QuestionLoader.getQuestions(br);} catch (IOException ioe) {ioe.printStackTrace();throw ioe;} finally {br.close();is.close();}} else {throw new IllegalArgumentException();}} else {throw new IllegalArgumentException();}} else {throw new IllegalArgumentException();}return questions;}"	5
"public void hyperlinkUpdate(HyperlinkEvent e) {if (e.getEventType() == EventType.ACTIVATED) {try {URL url = e.getURL();InputStream stream = url.openStream();try {StringWriter writer = new StringWriter();IOUtils.copy(stream, writer, ""UTF-8"");JEditorPane editor = new JEditorPane(""text/plain"", writer.toString());editor.setEditable(false);editor.setBackground(Color.WHITE);editor.setCaretPosition(0);editor.setPreferredSize(new Dimension(600, 400));String name = url.toString();name = name.substring(name.lastIndexOf('/') + 1);JDialog dialog = new JDialog(this, ""内容解析: "" + name);dialog.add(new JScrollPane(editor));dialog.pack();dialog.setVisible(true);} finally {stream.close();}} catch (IOException exception) {exception.printStackTrace();}}}public void parse(InputStream stream, ContentHandler handler, Metadata metadata, ParseContext context) throws IOException, SAXException, TikaException {String name = metadata.get(Metadata.RESOURCE_NAME_KEY);if (name != null && wanted.containsKey(name)) {FileOutputStream out = new FileOutputStream(wanted.get(name));IOUtils.copy(stream, out);out.close();} else {if (downstreamParser != null) {downstreamParser.parse(stream, handler, metadata, context);}}}public static void copyFile(File src, File dst) throws IOException {BufferedInputStream is = new BufferedInputStream(new FileInputStream(src));BufferedOutputStream os = new BufferedOutputStream(new FileOutputStream(dst));byte[] buf = new byte[1024];int count = 0;while ((count = is.read(buf, 0, 1024)) != -1) os.write(buf, 0, count);is.close();os.close();}private void UploadActionPerformed(ActionEvent evt) {JFileChooser chooser = new JFileChooser();FileNameExtensionFilter filter = new FileNameExtensionFilter(""*.jpg"", ""jpg"");chooser.setFileFilter(filter);File dir = new File(System.getProperty(""user.home""));chooser.setCurrentDirectory(dir);Component parent = null;int returnVal = chooser.showOpenDialog(parent);if (returnVal == JFileChooser.APPROVE_OPTION) {UserStatus.setText(""Bitte warten"");}try {Pic.setVisible(false);FTPClient client = new FTPClient();client.connect(""showus.de"");client.login(""web2"", ""kcinnay88"");client.enterLocalActiveMode();client.setFileTransferMode(FTPClient.BINARY_FILE_TYPE);client.setFileType(FTPClient.BINARY_FILE_TYPE);int reply = client.getReplyCode();System.out.println(""Connect returned: "" + reply);FileInputStream in = new FileInputStream(chooser.getSelectedFile().getAbsolutePath());System.out.println(""Uploading File"");client.storeFile(""/html/Applet/user/"" + Config.id + "".jpg"", in);client.logout();in.close();System.out.println(""done"");UserStatus.setText(""Upload fertig, Bild wird aktuallisiert"");} catch (SocketException e) {e.printStackTrace();} catch (IOException e) {UserStatus.setText(""Fehler beim Upload"");e.printStackTrace();}}private Document parseResponse(String url) throws IOException, MalformedURLException, ParserConfigurationException, SAXException {DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();InputStream stream = null;try {stream = new URL(url).openStream();return db.parse(stream);} finally {if (stream != null) stream.close();}}private void addPlugin(URL url) throws IOException {logger.debug(""Adding plugin with URL {}"", url);InputStream in = url.openStream();try {Properties properties = new Properties();properties.load(in);plugins.add(new WtfPlugin(properties));} finally {in.close();}}public File copyFile(File in, File out) throws IOException {FileChannel inChannel = new FileInputStream(in).getChannel();FileChannel outChannel = new FileOutputStream(out).getChannel();copyChannel(inChannel, outChannel);return out;}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}private static void copySmallFile(File sourceFile, File targetFile) throws BusinessException {LOG.debug(""Copying SMALL file '"" + sourceFile.getAbsolutePath() + ""' to '"" + targetFile.getAbsolutePath() + ""'."");FileChannel inChannel = null;FileChannel outChannel = null;try {inChannel = new FileInputStream(sourceFile).getChannel();outChannel = new FileOutputStream(targetFile).getChannel();inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {throw new BusinessException(""Could not copy file from '"" + sourceFile.getAbsolutePath() + ""' to '"" + targetFile.getAbsolutePath() + ""'!"", e);} finally {try {if (inChannel != null) inChannel.close();} catch (IOException e) {LOG.error(""Could not close input stream!"", e);}try {if (outChannel != null) outChannel.close();} catch (IOException e) {LOG.error(""Could not close output stream!"", e);}}}protected long getURLLastModified(final URL url) throws IOException {final URLConnection con = url.openConnection();long lastModified = con.getLastModified();try {con.getInputStream().close();} catch (IOException ignored) {}return lastModified;}"	5
"public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException {int k_blockSize = 1024;int byteCount;char[] buf = new char[k_blockSize];File ofp = new File(outFile);ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(ofp));zos.setMethod(ZipOutputStream.DEFLATED);OutputStreamWriter osw = new OutputStreamWriter(zos, ""ISO-8859-1"");BufferedWriter bw = new BufferedWriter(osw);ZipEntry zot = null;File ifp = new File(inFile);ZipInputStream zis = new ZipInputStream(new FileInputStream(ifp));InputStreamReader isr = new InputStreamReader(zis, ""ISO-8859-1"");BufferedReader br = new BufferedReader(isr);ZipEntry zit = null;while ((zit = zis.getNextEntry()) != null) {if (zit.getName().equals(""content.xml"")) {continue;}zot = new ZipEntry(zit.getName());zos.putNextEntry(zot);while ((byteCount = br.read(buf, 0, k_blockSize)) >= 0) bw.write(buf, 0, byteCount);bw.flush();zos.closeEntry();}zos.putNextEntry(new ZipEntry(""content.xml""));bw.flush();osw = new OutputStreamWriter(zos, ""UTF8"");bw = new BufferedWriter(osw);return bw;}public static String hash(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""MD5"");byte[] md5hash = new byte[32];md.update(text.getBytes(""iso-8859-1""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);}public void create(String oid, Serializable obj) throws PersisterException {String key = getLock(oid);if (key != null) {throw new PersisterException(""Object already exists: OID = "" + oid);}Connection conn = null;PreparedStatement ps = null;try {byte[] data = serialize(obj);conn = _ds.getConnection();conn.setAutoCommit(true);ps = conn.prepareStatement(""insert into "" + _table_name + ""("" + _oid_col + "","" + _data_col + "","" + _ts_col + "") values (?,?,?)"");ps.setString(1, oid);ps.setBinaryStream(2, new ByteArrayInputStream(data), data.length);ps.setLong(3, System.currentTimeMillis());ps.executeUpdate();} catch (Throwable th) {if (conn != null) {try {conn.rollback();} catch (Throwable th2) {}}throw new PersisterException(""Failed to create object: OID = "" + oid, th);} finally {if (ps != null) {try {ps.close();} catch (Throwable th) {}}if (conn != null) {try {conn.close();} catch (Throwable th) {}}}}public void remove(String oid) throws PersisterException {String key = getLock(oid);if (key == null) {throw new PersisterException(""Object does not exist: OID = "" + oid);} else if (!NULL.equals(key)) {throw new PersisterException(""The object is currently locked: OID = "" + oid + "", LOCK = "" + key);}Connection conn = null;PreparedStatement ps = null;try {conn = _ds.getConnection();conn.setAutoCommit(true);ps = conn.prepareStatement(""delete from "" + _table_name + "" where "" + _oid_col + "" = ?"");ps.setString(1, oid);ps.executeUpdate();} catch (Throwable th) {if (conn != null) {try {conn.rollback();} catch (Throwable th2) {}}throw new PersisterException(""Failed to delete object: OID = "" + oid, th);} finally {if (ps != null) {try {ps.close();} catch (Throwable th) {}}if (conn != null) {try {conn.close();} catch (Throwable th) {}}}}public void save(String oid, String key, Serializable obj) throws PersisterException {String lock = getLock(oid);if (lock == null) {throw new PersisterException(""Object does not exist: OID = "" + oid);} else if (!NULL.equals(lock) && (!lock.equals(key))) {throw new PersisterException(""The object is currently locked with another key: OID = "" + oid + "", LOCK = "" + lock + "", KEY = "" + key);}Connection conn = null;PreparedStatement ps = null;try {byte[] data = serialize(obj);conn = _ds.getConnection();conn.setAutoCommit(true);ps = conn.prepareStatement(""update "" + _table_name + "" set "" + _data_col + "" = ?, "" + _ts_col + "" = ? where "" + _oid_col + "" = ?"");ps.setBinaryStream(1, new ByteArrayInputStream(data), data.length);ps.setLong(2, System.currentTimeMillis());ps.setString(3, oid);ps.executeUpdate();} catch (Throwable th) {if (conn != null) {try {conn.rollback();} catch (Throwable th2) {}}throw new PersisterException(""Failed to save object: OID = "" + oid, th);} finally {if (ps != null) {try {ps.close();} catch (Throwable th) {}}if (conn != null) {try {conn.close();} catch (Throwable th) {}}}}public void lock(String oid, String key) throws PersisterException {String lock = getLock(oid);if (lock == null) {throw new PersisterException(""Object does not exist: OID = "" + oid);} else if (!NULL.equals(lock) && (!lock.equals(key))) {throw new PersisterException(""The object is currently locked with another key: OID = "" + oid + "", LOCK = "" + lock + "", KEY = "" + key);}Connection conn = null;PreparedStatement ps = null;try {conn = _ds.getConnection();conn.setAutoCommit(true);ps = conn.prepareStatement(""update "" + _table_name + "" set "" + _key_col + "" = ?, "" + _ts_col + "" = ? where "" + _oid_col + "" = ?"");ps.setString(1, key);ps.setLong(2, System.currentTimeMillis());ps.setString(3, oid);ps.executeUpdate();} catch (Throwable th) {if (conn != null) {try {conn.rollback();} catch (Throwable th2) {}}throw new PersisterException(""Failed to lock object: OID = "" + oid + "", KEY = "" + key, th);} finally {if (ps != null) {try {ps.close();} catch (Throwable th) {}}if (conn != null) {try {conn.close();} catch (Throwable th) {}}}}public void unlock(String oid, String key) throws PersisterException {String lock = getLock(oid);if (lock == null) {throw new PersisterException(""Object does not exist: OID = "" + oid);} else if (!NULL.equals(lock) && (!lock.equals(key))) {throw new PersisterException(""The object is currently locked with another key: OID = "" + oid + "", LOCK = "" + lock + "", KEY = "" + key);}Connection conn = null;PreparedStatement ps = null;try {conn = _ds.getConnection();conn.setAutoCommit(true);ps = conn.prepareStatement(""update "" + _table_name + "" set "" + _key_col + "" = NULL, "" + _ts_col + "" = ? where "" + _oid_col + "" = ?"");ps.setLong(1, System.currentTimeMillis());ps.setString(2, oid);ps.executeUpdate();} catch (Throwable th) {if (conn != null) {try {conn.rollback();} catch (Throwable th2) {}}throw new PersisterException(""Failed to unlock object: OID = "" + oid + "", KEY = "" + key, th);} finally {if (ps != null) {try {ps.close();} catch (Throwable th) {}}if (conn != null) {try {conn.close();} catch (Throwable th) {}}}}public void cleanup(long timeout) throws PersisterException {long threshold = System.currentTimeMillis() - timeout;Connection conn = null;PreparedStatement ps = null;try {conn = _ds.getConnection();conn.setAutoCommit(true);ps = conn.prepareStatement(""delete from "" + _table_name + "" where "" + _ts_col + "" < ?"");ps.setLong(1, threshold);ps.executeUpdate();} catch (Throwable th) {if (conn != null) {try {conn.rollback();} catch (Throwable th2) {}}throw new PersisterException(""Failed to cleanup timed out objects: "", th);} finally {if (ps != null) {try {ps.close();} catch (Throwable th) {}}if (conn != null) {try {conn.close();} catch (Throwable th) {}}}}private void readIntoList(URL url, Map<String, JMenuItem> list) {try {BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String inputLine;while ((inputLine = in.readLine()) != null) {int commandNameBegin = inputLine.indexOf("">"") + 1;int commandNameEnd = inputLine.indexOf(""</a>"");JMenuItem item = new JMenuItem(""<html>"" + inputLine + ""</html>"");if (list == allRooms) {item.setActionCommand(""/room "" + inputLine.substring(commandNameBegin, commandNameEnd));} else {item.setActionCommand(""/"" + inputLine.substring(commandNameBegin, commandNameEnd) + "" "");}item.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {jTextField1.setText(e.getActionCommand());popup.setVisible(false);}});list.put(inputLine.substring(commandNameBegin, commandNameEnd), item);}in.close();} catch (Exception e) {e.printStackTrace();}}public static void copyFile(File sourceFile, String toDir, boolean create, boolean overwrite) throws FileNotFoundException, IOException {FileInputStream source = null;FileOutputStream destination = null;byte[] buffer;int bytes_read;File toFile = new File(toDir);if (create && !toFile.exists()) toFile.mkdirs();if (toFile.exists()) {File destFile = new File(toDir + ""/"" + sourceFile.getName());try {if (!destFile.exists() || overwrite) {source = new FileInputStream(sourceFile);destination = new FileOutputStream(destFile);buffer = new byte[1024];while (true) {bytes_read = source.read(buffer);if (bytes_read == -1) break;destination.write(buffer, 0, bytes_read);}}} catch (Exception exx) {exx.printStackTrace();} finally {if (source != null) try {source.close();} catch (IOException e) {}if (destination != null) try {destination.close();} catch (IOException e) {}}}}"	5
"public static void reset() throws Exception {Session session = DataStaticService.getHibernateSessionFactory().openSession();try {Connection connection = session.connection();try {Statement statement = connection.createStatement();try {statement.executeUpdate(""delete from Post"");connection.commit();} finally {statement.close();}} catch (HibernateException e) {connection.rollback();throw new Exception(e);} catch (SQLException e) {connection.rollback();throw new Exception(e);}} catch (SQLException e) {throw new Exception(e);} finally {session.close();}}public void doCompress(File[] files, File out, List<String> excludedKeys) {Map<String, File> map = new HashMap<String, File>();String parent = FilenameUtils.getBaseName(out.getName());for (File f : files) {CompressionUtil.list(f, parent, map, excludedKeys);}if (!map.isEmpty()) {FileOutputStream fos = null;ArchiveOutputStream aos = null;InputStream is = null;try {fos = new FileOutputStream(out);aos = getArchiveOutputStream(fos);for (Map.Entry<String, File> entry : map.entrySet()) {File file = entry.getValue();ArchiveEntry ae = getArchiveEntry(file, entry.getKey());aos.putArchiveEntry(ae);if (file.isFile()) {IOUtils.copy(is = new FileInputStream(file), aos);IOUtils.closeQuietly(is);is = null;}aos.closeArchiveEntry();}aos.finish();} catch (IOException ex) {ex.printStackTrace();} finally {IOUtils.closeQuietly(is);IOUtils.closeQuietly(aos);IOUtils.closeQuietly(fos);}}}public static void copierFichier(URL url, File destination) throws CopieException, IOException {if (destination.exists()) {throw new CopieException(""ERREUR : Copie du fichier '"" + url.getPath() + ""' vers '"" + destination.getPath() + ""' impossible!\n"" + ""CAUSE  : Le fichier destination existe d�j�."");}URLConnection urlConnection = url.openConnection();InputStream httpStream = urlConnection.getInputStream();FileOutputStream destinationFile = new FileOutputStream(destination);byte buffer[] = new byte[512 * 1024];int nbLecture;while ((nbLecture = httpStream.read(buffer)) != -1) {destinationFile.write(buffer, 0, nbLecture);}log.debug(""(COPIE) Copie du fichier : "" + url.getPath() + "" --> "" + destination.getPath());httpStream.close();destinationFile.close();}public static void copyFile(File src, File dest) throws IOException {FileInputStream fis = new FileInputStream(src);FileOutputStream fos = new FileOutputStream(dest);java.nio.channels.FileChannel channelSrc = fis.getChannel();java.nio.channels.FileChannel channelDest = fos.getChannel();channelSrc.transferTo(0, channelSrc.size(), channelDest);fis.close();fos.close();}public static void main(String[] args) throws Exception {DES des = new DES();StreamBlockReader reader = new StreamBlockReader(new FileInputStream(""D:\\test.txt""));StreamBlockWriter writer = new StreamBlockWriter(new FileOutputStream(""D:\\test1.txt""));SingleKey key = new SingleKey(new Block(64), """");key = new SingleKey(new Block(""1111111100000000111111110000000011111111000000001111111100000000""), """");Mode mode = new ECBDESMode(des);des.encrypt(reader, writer, key, mode);}public String md5(String password) {MessageDigest m = null;try {m = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException ex) {}m.update(password.getBytes(), 0, password.length());return new BigInteger(1, m.digest()).toString(16);}public static void replaceEntry(File file, String entryName, InputStream stream) throws PersistenceException {try {File temporaryFile = File.createTempFile(""pmMDA_zargo"", "".zargo"");temporaryFile.deleteOnExit();FileInputStream inputStream = new FileInputStream(file);ZipInputStream input = new ZipInputStream(inputStream);ZipOutputStream output = new ZipOutputStream(new FileOutputStream(temporaryFile));ZipEntry entry = input.getNextEntry();while (entry != null) {ZipEntry zipEntry = new ZipEntry(entry);zipEntry.setCompressedSize(-1);output.putNextEntry(zipEntry);if (!entry.getName().equals(entryName)) {IOUtils.copy(input, output);} else {IOUtils.copy(stream, output);}input.closeEntry();output.closeEntry();entry = input.getNextEntry();}input.close();inputStream.close();output.close();System.gc();boolean isSuccess = file.delete();if (!isSuccess) {throw new PersistenceException();}isSuccess = temporaryFile.renameTo(file);if (!isSuccess) {throw new PersistenceException();}} catch (IOException e) {throw new PersistenceException(e);}}public static void copy(File src, File dst) throws IOException {FileChannel inChannel;FileChannel outChannel;inChannel = new FileInputStream(src).getChannel();outChannel = new FileOutputStream(dst).getChannel();outChannel.transferFrom(inChannel, 0, inChannel.size());inChannel.close();outChannel.close();}public static String getMd5Digest(String pInput) {try {MessageDigest lDigest = MessageDigest.getInstance(""MD5"");lDigest.update(pInput.getBytes());BigInteger lHashInt = new BigInteger(1, lDigest.digest());return String.format(""%1$032x"", lHashInt).toLowerCase();} catch (NoSuchAlgorithmException lException) {throw new RuntimeException(lException);}}private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException {this.qualifiersOnTarget = qualifiersOnTarget;model = new Model(description);if (roughMode) model.setRoughMode(true);DOMParser parser = new DOMParser();parser.setFeature(""http://xml.org/sax/features/validation"", false);parser.setFeature(""http://apache.org/xml/features/nonvalidating/load-external-dtd"", false);parser.parse(new InputSource(url.openStream()));Document doc = parser.getDocument();Element documentEl = doc.getDocumentElement();Element contentEl = demandChildElement(documentEl, ""XMI.content"");adapter = Adapter.getAdapter(documentEl);parsePackage(contentEl);if (!packagePath.isEmpty()) throw new IllegalArgumentException();packagePath = null;for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next());generalizations = null;for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) {Element assoel = (Element) i.next();parseAssociation(assoel, (ModelClass) (associations.get(assoel)));}associations = null;for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()));classElements = null;if (roughMode) model.determineAllSupertypes(); else model.flatten();url = null;}"	5
"private synchronized File gzipTempFile(File tempFile) throws BlogunityException {try {File gzippedFile = new File(BlogunityManager.getSystemConfiguration().getTempDir(), tempFile.getName() + "".gz"");GZIPOutputStream zos = new GZIPOutputStream(new FileOutputStream(gzippedFile));byte[] readBuffer = new byte[2156];int bytesIn = 0;FileInputStream fis = new FileInputStream(tempFile);while ((bytesIn = fis.read(readBuffer)) != -1) {zos.write(readBuffer, 0, bytesIn);}fis.close();zos.close();return gzippedFile;} catch (Exception e) {throw new BlogunityException(I18NStatusFactory.create(I18N.ERRORS.FEED_GZIP_FAILED, e));}}private void logoutUser(String session) {try {String data = URLEncoder.encode(""SESSION"", ""UTF-8"") + ""="" + URLEncoder.encode("""" + session, ""UTF-8"");if (_log != null) _log.error(""Voice: logoutUser = "" + m_strUrl + ""LogoutUserServlet&"" + data);URL url = new URL(m_strUrl + ""LogoutUserServlet"");URLConnection conn = url.openConnection();conn.setDoOutput(true);OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());wr.write(data);wr.flush();BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));wr.close();rd.close();} catch (Exception e) {if (_log != null) _log.error(""Voice error : "" + e);}}@Overridepublic String resolveItem(String oldJpgFsPath) throws DatabaseException {if (oldJpgFsPath == null || """".equals(oldJpgFsPath)) throw new NullPointerException(""oldJpgFsPath"");try {getConnection().setAutoCommit(false);} catch (SQLException e) {LOGGER.warn(""Unable to set autocommit off"", e);}PreparedStatement statement = null;String ret = null;try {statement = getConnection().prepareStatement(SELECT_ITEM_STATEMENT);statement.setString(1, oldJpgFsPath);ResultSet rs = statement.executeQuery();int i = 0;int id = -1;int rowsAffected = 0;while (rs.next()) {id = rs.getInt(""id"");ret = rs.getString(""imageFile"");i++;}if (id != -1 && new File(ret).exists()) {statement = getConnection().prepareStatement(UPDATE_ITEM_STATEMENT);statement.setInt(1, id);rowsAffected = statement.executeUpdate();} else {return null;}if (rowsAffected == 1) {getConnection().commit();LOGGER.debug(""DB has been updated."");} else {getConnection().rollback();LOGGER.error(""DB has not been updated -> rollback!"");}} catch (SQLException e) {LOGGER.error(e);} finally {closeConnection();}return ret;}@Overridepublic ArrayList<String> cacheAgeingProcess(int numberOfDays) throws DatabaseException {IMAGE_LIFETIME = numberOfDays;PreparedStatement statement = null;ArrayList<String> ret = new ArrayList<String>();try {statement = getConnection().prepareStatement(SELECT_ITEMS_FOR_DELETION_STATEMENT);ResultSet rs = statement.executeQuery();int i = 0;int rowsAffected = 0;while (rs.next()) {ret.add(rs.getString(""imageFile""));i++;}if (i > 0) {statement = getConnection().prepareStatement(DELETE_ITEMS_STATEMENT);rowsAffected = statement.executeUpdate();}if (rowsAffected == i) {getConnection().commit();LOGGER.debug(""DB has been updated."");LOGGER.debug(i + "" images are going to be removed."");} else {getConnection().rollback();LOGGER.error(""DB has not been updated -> rollback!"");}} catch (SQLException e) {LOGGER.error(e);} finally {closeConnection();}return ret;}private void processAlignmentsFromAlignmentSource(String name, Alignment reference, String alignmentSource) throws AlignmentParserException, IllegalArgumentException, KADMOSCMDException, IOException {if (alignmentSource == null) throw new IllegalArgumentException(""alignmentSource is null"");URL url;String st;BufferedReader reader;Alignment alignment;try {try {alignment = parseAlignment(alignmentSource);addAlignmentWrapper(new AlignmentWrapper(name, reference, alignmentSource, alignment));} catch (AlignmentParserException e1) {url = new URL(alignmentSource);reader = new BufferedReader(new InputStreamReader(url.openStream()));st = """";while (((st = reader.readLine()) != null)) {alignment = parseAlignment(st);addAlignmentWrapper(new AlignmentWrapper(name, reference, alignmentSource, alignment));}}} catch (Exception e1) {File itemFile = new File(alignmentSource);if (itemFile.exists()) {if (itemFile.isDirectory() && !itemFile.isHidden()) {File[] files = itemFile.listFiles();for (int i = 0; i < files.length; i++) {if (files[i].isFile() && !files[i].isHidden()) {processAlignmentsFromAlignmentSource(name, reference, files[i].getPath());} else if (files[i].isDirectory() && !files[i].isHidden() && deepScan) {processAlignmentsFromAlignmentSource(name, reference, files[i].getPath());}}} else if (itemFile.isFile() && !itemFile.isHidden()) {try {alignment = parseAlignment(alignmentSource);addAlignmentWrapper(new AlignmentWrapper(name, reference, alignmentSource, alignment));} catch (Exception e2) {reader = new BufferedReader(new FileReader(alignmentSource));st = """";while (((st = reader.readLine()) != null)) {alignment = parseAlignment(st);addAlignmentWrapper(new AlignmentWrapper(name, reference, st, alignment));}}} else {throw new FileNotFoundException(""File "" + alignmentSource + "" is neither directory nor file, or it is hidden."");}} else {throw new FileNotFoundException(""File "" + alignmentSource + "" does not exists."");}}}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}private HttpURLConnection getConnection(String url, int connTimeout, int readTimeout) throws IOException {HttpURLConnection con = null;con = (HttpURLConnection) new URL(url).openConnection();if (connTimeout > 0) {if (!isJDK14orEarlier) {con.setConnectTimeout(connTimeout * 1000);} else {System.setProperty(""sun.net.client.defaultConnectTimeout"", String.valueOf(connTimeout * 1000));}}if (readTimeout > 0) {if (!isJDK14orEarlier) {con.setReadTimeout(readTimeout * 1000);} else {System.setProperty(""sun.net.client.defaultReadTimeout"", String.valueOf(readTimeout * 1000));}}con.setInstanceFollowRedirects(false);return con;}public String hmacSHA256(String message, byte[] key) {MessageDigest sha256 = null;try {sha256 = MessageDigest.getInstance(""SHA-256"");} catch (NoSuchAlgorithmException e) {throw new java.lang.AssertionError(this.getClass().getName() + "".hmacSHA256(): SHA-256 algorithm not found!"");}if (key.length > 64) {sha256.update(key);key = sha256.digest();sha256.reset();}byte block[] = new byte[64];for (int i = 0; i < key.length; ++i) block[i] = key[i];for (int i = key.length; i < block.length; ++i) block[i] = 0;for (int i = 0; i < 64; ++i) block[i] ^= 0x36;sha256.update(block);try {sha256.update(message.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {throw new java.lang.AssertionError(""ITunesU.hmacSH256(): UTF-8 encoding not supported!"");}byte[] hash = sha256.digest();sha256.reset();for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c);sha256.update(block);sha256.update(hash);hash = sha256.digest();char[] hexadecimals = new char[hash.length * 2];for (int i = 0; i < hash.length; ++i) {for (int j = 0; j < 2; ++j) {int value = (hash[i] >> (4 - 4 * j)) & 0xf;char base = (value < 10) ? ('0') : ('a' - 10);hexadecimals[i * 2 + j] = (char) (base + value);}}return new String(hexadecimals);}public void copyFile(String from, String to) throws IOException {FileChannel srcChannel = new FileInputStream(from).getChannel();FileChannel dstChannel = new FileOutputStream(to).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();}"	5
"private byte[] hash(String toHash) {try {MessageDigest md5 = MessageDigest.getInstance(""MD5"", ""BC"");md5.update(toHash.getBytes(""ISO-8859-1""));return md5.digest();} catch (Exception ex) {ex.printStackTrace();return null;}}public static void copy(File src, File dst) throws IOException {FileChannel srcChannel = new FileInputStream(src).getChannel();FileChannel dstChannel = new FileOutputStream(dst).getChannel();try {dstChannel.transferFrom(srcChannel, 0, srcChannel.size());} finally {try {srcChannel.close();} finally {dstChannel.close();}}}public ProgramProfilingMessageSymbol createNewProfilingMessageSymbol(int configID, int programMessageSymbolID) throws AdaptationException {ProgramProfilingMessageSymbol profilingMessageSymbol = null;Connection connection = null;Statement statement = null;ResultSet resultSet = null;try {String query = ""INSERT INTO ProgramProfilingMessageSymbols"" + ""(projectDeploymentConfigurationID, programMessageSymbolID)"" + "" VALUES ("" + configID + "", "" + programMessageSymbolID + "")"";connection = DriverManager.getConnection(CONN_STR);statement = connection.createStatement();statement.executeUpdate(query);query = ""SELECT * FROM ProgramProfilingMessageSymbols WHERE "" + ""projectDeploymentConfigurationID = "" + configID + "" AND "" + ""programMessageSymbolID= "" + programMessageSymbolID;resultSet = statement.executeQuery(query);if (!resultSet.next()) {connection.rollback();String msg = ""Attempt to create program profiling message "" + ""symbol failed."";log.error(msg);throw new AdaptationException(msg);}profilingMessageSymbol = getProfilingMessageSymbol(resultSet);connection.commit();} catch (SQLException ex) {try {connection.rollback();} catch (Exception e) {}String msg = ""SQLException in createNewProfilingMessageSymbol"";log.error(msg, ex);throw new AdaptationException(msg, ex);} finally {try {resultSet.close();} catch (Exception ex) {}try {statement.close();} catch (Exception ex) {}try {connection.close();} catch (Exception ex) {}}return profilingMessageSymbol;}public ProgramProfilingMessageSymbol deleteProfilingMessageSymbol(int id) throws AdaptationException {ProgramProfilingMessageSymbol profilingMessageSymbol = null;Connection connection = null;Statement statement = null;ResultSet resultSet = null;try {String query = ""SELECT * FROM ProgramProfilingMessageSymbols "" + ""WHERE id = "" + id;connection = DriverManager.getConnection(CONN_STR);statement = connection.createStatement();resultSet = statement.executeQuery(query);if (!resultSet.next()) {connection.rollback();String msg = ""Attempt to delete program profiling message "" + ""symbol failed."";log.error(msg);throw new AdaptationException(msg);}profilingMessageSymbol = getProfilingMessageSymbol(resultSet);query = ""DELETE FROM ProgramProfilingMessageSymbols "" + ""WHERE id = "" + id;statement.executeUpdate(query);connection.commit();} catch (SQLException ex) {try {connection.rollback();} catch (Exception e) {}String msg = ""SQLException in deleteProfilingMessageSymbol"";log.error(msg, ex);throw new AdaptationException(msg, ex);} finally {try {resultSet.close();} catch (Exception ex) {}try {statement.close();} catch (Exception ex) {}try {connection.close();} catch (Exception ex) {}}return profilingMessageSymbol;}public String quebraLink(String link) throws StringIndexOutOfBoundsException {link = link.replace("".url"", """");int cod = 0;final String linkInit = link.replace(""#"", """");boolean estado = false;char letra;String linkOrig;String newlink = """";linkOrig = link.replace(""#"", """");linkOrig = linkOrig.replace("".url"", """");linkOrig = linkOrig.replace("".html"", """");linkOrig = linkOrig.replace(""http://"", """");if (linkOrig.contains(""clubedodownload"")) {for (int i = 7; i < linkInit.length(); i++) {if (linkOrig.charAt(i) == '/') {for (int j = i + 1; j < linkOrig.length(); j++) {newlink += linkOrig.charAt(j);}if (newlink.contains(""//:ptth"")) {newlink = inverteFrase(newlink);if (isValid(newlink)) {return newlink;}} else if (newlink.contains(""http://"")) {if (isValid(newlink)) {return newlink;}}}}}if (linkOrig.contains(""protetordelink.tv"")) {for (int i = linkOrig.length() - 1; i >= 0; i--) {letra = linkOrig.charAt(i);if (letra == '/') {for (int j = i + 1; j < linkOrig.length(); j++) {newlink += linkOrig.charAt(j);}newlink = HexToChar(newlink);if (newlink.contains(""ptth"")) {if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);newlink = inverteFrase(newlink);if (isValid(newlink)) {return newlink;}} else {newlink = inverteFrase(newlink);if (isValid(newlink)) {return newlink;}}} else {if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}}}}if (linkOrig.contains(""baixeaquifilmes"")) {for (int i = 0; i < linkOrig.length(); i++) {letra = linkOrig.charAt(i);if (letra == '?') {for (int j = i + 1; j < linkOrig.length(); j++) {newlink += linkOrig.charAt(j);}if (newlink.contains("":ptth"")) {newlink = inverteFrase(newlink);if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}} else {if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}}}}if (linkOrig.contains(""downloadsgratis"")) {for (int i = 0; i < linkOrig.length(); i++) {letra = linkOrig.charAt(i);if (letra == '!') {for (int j = i + 1; j < linkOrig.length(); j++) {newlink += linkOrig.charAt(j);}if (precisaRepassar(QuebraLink.decode64(newlink))) {newlink = quebraLink(QuebraLink.decode64(newlink));if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}}}newlink = """";if (linkOrig.contains(""vinxp"")) {System.out.println(""é"");for (int i = 1; i < linkOrig.length(); i++) {if (linkOrig.charAt(i) == '=') {for (int j = i + 1; j < linkOrig.length(); j++) {newlink += linkOrig.charAt(j);}break;}}if (newlink.contains("".vinxp"")) {newlink = newlink.replace("".vinxp"", """");}newlink = decodeCifraDeCesar(newlink);System.out.println(newlink);return newlink;}if (linkOrig.contains(""?"")) {String linkTemporary = """";newlink = """";if (linkOrig.contains(""go!"")) {linkOrig = linkOrig.replace(""?go!"", ""?"");}if (linkOrig.contains(""="")) {for (int i = 0; i < linkOrig.length(); i++) {letra = linkOrig.charAt(i);if (letra == '=') {for (int j = i + 1; j < linkOrig.length(); j++) {newlink += linkOrig.charAt(j);}linkTemporary = QuebraLink.decode64(newlink);break;}}if (linkTemporary.contains(""http"")) {newlink = """";for (int i = 0; i < linkTemporary.length(); i++) {letra = linkTemporary.charAt(i);if (letra == 'h') {for (int j = i; j < linkTemporary.length(); j++) {newlink += linkTemporary.charAt(j);}newlink = newlink.replace(""!og"", """");if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}}}if (linkTemporary.contains(""ptth"")) {newlink = """";linkTemporary = inverteFrase(linkTemporary);for (int i = 0; i < linkTemporary.length(); i++) {letra = linkTemporary.charAt(i);if (letra == 'h') {for (int j = i; j < linkTemporary.length(); j++) {newlink += linkTemporary.charAt(j);}newlink = newlink.replace(""!og"", """");if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}}}}linkTemporary = """";for (int i = 0; i < linkOrig.length(); i++) {letra = linkOrig.charAt(i);if (letra == '?') {for (int j = i + 1; j < linkOrig.length(); j++) {linkTemporary += linkOrig.charAt(j);}link = QuebraLink.decode64(linkTemporary);break;}}if (link.contains(""http"")) {newlink = """";for (int i = 0; i < link.length(); i++) {letra = link.charAt(i);if (letra == 'h') {for (int j = i; j < link.length(); j++) {newlink += link.charAt(j);}newlink = newlink.replace(""!og"", """");if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}}}if (link.contains(""ptth"")) {newlink = """";linkTemporary = inverteFrase(link);for (int i = 0; i < linkTemporary.length(); i++) {letra = linkTemporary.charAt(i);if (letra == 'h') {for (int j = i; j < linkTemporary.length(); j++) {newlink += linkTemporary.charAt(j);}newlink = newlink.replace(""!og"", """");if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}}}linkOrig = linkInit;link = linkOrig;newlink = """";}if (linkOrig.contains(""?"")) {String linkTemporary = """";newlink = """";if (linkOrig.contains(""go!"")) {linkOrig = linkOrig.replace(""?go!"", ""?"");}if (linkOrig.contains(""="")) {for (int i = 0; i < linkOrig.length(); i++) {letra = linkOrig.charAt(i);if (letra == '=') {for (int j = i + 1; j < linkOrig.length(); j++) {newlink += linkOrig.charAt(j);}linkTemporary = linkTemporary.replace(""."", """");try {linkTemporary = HexToChar(newlink);} catch (Exception e) {System.err.println(""erro hex 1º"");estado = true;}break;}}if (linkTemporary.contains(""http"") && !estado) {newlink = """";for (int i = 0; i < linkTemporary.length(); i++) {letra = linkTemporary.charAt(i);if (letra == 'h') {for (int j = i; j < linkTemporary.length(); j++) {newlink += linkTemporary.charAt(j);}newlink = newlink.replace(""!og"", """");if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}}}if (linkTemporary.contains(""ptth"") && !estado) {newlink = """";linkTemporary = inverteFrase(linkTemporary);for (int i = 0; i < linkTemporary.length(); i++) {letra = linkTemporary.charAt(i);if (letra == 'h') {for (int j = i; j < linkTemporary.length(); j++) {newlink += linkTemporary.charAt(j);}newlink = newlink.replace(""!og"", """");if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}}}}estado = false;linkTemporary = """";for (int i = 0; i < linkOrig.length(); i++) {letra = linkOrig.charAt(i);if (letra == '?') {for (int j = i + 1; j < linkOrig.length(); j++) {linkTemporary += linkOrig.charAt(j);}linkTemporary = linkTemporary.replace(""."", """");try {link = HexToChar(linkTemporary);} catch (Exception e) {System.err.println(""erro hex 2º"");estado = true;}break;}}if (link.contains(""http"") && !estado) {newlink = """";for (int i = 0; i < link.length(); i++) {letra = link.charAt(i);if (letra == 'h') {for (int j = i; j < link.length(); j++) {newlink += link.charAt(j);}newlink = newlink.replace(""!og"", """");if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}}}if (link.contains(""ptth"") && !estado) {newlink = """";linkTemporary = inverteFrase(link);for (int i = 0; i < linkTemporary.length(); i++) {letra = linkTemporary.charAt(i);if (letra == 'h') {for (int j = i; j < linkTemporary.length(); j++) {newlink += linkTemporary.charAt(j);}newlink = newlink.replace(""!og"", """");if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}}}linkOrig = linkInit;link = linkOrig;newlink = """";}if (linkOrig.contains(""?"") && !linkOrig.contains(""id="") && !linkOrig.contains(""url="") && !linkOrig.contains(""link="") && !linkOrig.contains(""r=http"") && !linkOrig.contains(""r=ftp"")) {for (int i = 0; i < linkOrig.length(); i++) {letra = linkOrig.charAt(i);if (letra == '?') {newlink = """";for (int j = i + 1; j < linkOrig.length(); j++) {newlink += linkOrig.charAt(j);}if (newlink.contains(""ptth"")) {newlink = inverteFrase(newlink);if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}} else {if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}}}}if ((link.contains(""url="")) || (link.contains(""link="")) || (link.contains(""?r=http"")) || (link.contains(""?r=ftp""))) {if (!link.contains(""//:ptth"")) {for (int i = 0; i < link.length(); i++) {letra = link.charAt(i);if (letra == '=') {for (int j = i + 1; j < link.length(); j++) {letra = link.charAt(j);newlink += letra;}break;}}if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}}if (linkOrig.contains(""//:ptth"") || linkOrig.contains(""//:sptth"")) {if (linkOrig.contains(""="")) {for (int i = 0; i < linkOrig.length(); i++) {letra = linkOrig.charAt(i);if (letra == '=') {for (int j = linkOrig.length() - 1; j > i; j--) {letra = linkOrig.charAt(j);newlink += letra;}break;}}if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}newlink = inverteFrase(linkOrig);if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}if (linkOrig.contains(""?go!"")) {linkOrig = linkOrig.replace(""?go!"", ""?down!"");newlink = linkOrig;if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}if (linkOrig.contains(""down!"")) {linkOrig = linkOrig.replace(""down!"", """");return quebraLink(linkOrig);}newlink = """";for (int i = linkOrig.length() - 4; i >= 0; i--) {letra = linkOrig.charAt(i);if (letra == '=') {for (int j = i + 1; j < linkOrig.length(); j++) {newlink += linkOrig.charAt(j);}break;}}String ltmp = """";try {ltmp = HexToChar(newlink);} catch (Exception e) {System.err.println(""erro hex 3º"");}if (ltmp.contains(""http://"")) {if (precisaRepassar(ltmp)) {ltmp = quebraLink(ltmp);if (isValid(ltmp)) {newlink = ltmp;return newlink;}} else {if (isValid(ltmp)) {newlink = ltmp;return newlink;}}} else if (ltmp.contains(""//:ptth"")) {ltmp = inverteFrase(ltmp);if (precisaRepassar(ltmp)) {ltmp = quebraLink(ltmp);if (isValid(ltmp)) {newlink = ltmp;return newlink;}} else {if (isValid(ltmp)) {newlink = ltmp;return newlink;}}} else {ltmp = newlink;}ltmp = decode64(newlink);if (ltmp.contains(""http://"")) {if (precisaRepassar(ltmp)) {ltmp = quebraLink(newlink);if (isValid(ltmp)) {newlink = ltmp;return newlink;}} else {if (isValid(ltmp)) {newlink = ltmp;return newlink;}}} else if (ltmp.contains(""//:ptth"")) {ltmp = inverteFrase(ltmp);if (precisaRepassar(ltmp)) {newlink = quebraLink(newlink);if (isValid(ltmp)) {newlink = ltmp;return newlink;}} else {if (isValid(ltmp)) {newlink = ltmp;return newlink;}}} else {ltmp = newlink;}try {ltmp = decodeAscii(newlink);} catch (NumberFormatException e) {System.err.println(""erro ascii"");}if (ltmp.contains(""http://"")) {if (precisaRepassar(ltmp)) {ltmp = quebraLink(newlink);if (isValid(ltmp)) {newlink = ltmp;return newlink;}} else {if (isValid(ltmp)) {newlink = ltmp;return newlink;}}} else if (ltmp.contains(""//:ptth"")) {ltmp = inverteFrase(ltmp);if (precisaRepassar(ltmp)) {ltmp = quebraLink(ltmp);if (isValid(ltmp)) {newlink = ltmp;return newlink;}} else {if (isValid(ltmp)) {newlink = ltmp;return newlink;}}} else {ltmp = null;}newlink = """";int cont = 0;letra = '\0';ltmp = """";newlink = """";for (int i = linkOrig.length() - 4; i >= 0; i--) {letra = linkOrig.charAt(i);if (letra == '=' || letra == '?') {for (int j = i + 1; j < linkOrig.length(); j++) {if (linkOrig.charAt(j) == '.') {break;}newlink += linkOrig.charAt(j);}break;}}ltmp = newlink;String tmp = """";String tmp2 = """";do {try {tmp = HexToChar(ltmp);tmp2 = HexToChar(inverteFrase(ltmp));if (!tmp.isEmpty() && tmp.length() > 5 && !tmp.contains("""") && !tmp.contains(""§"") && !tmp.contains(""�"") && !tmp.contains("""")) {ltmp = HexToChar(ltmp);} else if (!inverteFrase(tmp2).isEmpty() && inverteFrase(tmp2).length() > 5 && !inverteFrase(tmp2).contains("""") && !inverteFrase(tmp2).contains(""§"") && !inverteFrase(tmp2).contains(""�"")) {ltmp = HexToChar(inverteFrase(ltmp));}} catch (NumberFormatException e) {}tmp = decode64(ltmp);tmp2 = decode64(inverteFrase(ltmp));if (!tmp.contains(""�"") && !tmp.contains(""ޚ"")) {ltmp = decode64(ltmp);} else if (!tmp2.contains(""�"") && !tmp2.contains(""ޚ"")) {ltmp = decode64(inverteFrase(ltmp));}try {tmp = decodeAscii(ltmp);tmp2 = decodeAscii(inverteFrase(ltmp));if (!tmp.contains("""") && !tmp.contains(""�"") && !tmp.contains(""§"") && !tmp.contains(""½"") && !tmp.contains(""*"") && !tmp.contains(""\"""") && !tmp.contains(""^"")) {ltmp = decodeAscii(ltmp);} else if (!tmp2.contains("""") && !tmp2.contains(""�"") && !tmp2.contains(""§"") && !tmp2.contains(""½"") && !tmp2.contains(""*"") && !tmp2.contains(""\"""") && !tmp2.contains(""^"")) {ltmp = decodeAscii(inverteFrase(ltmp));}} catch (NumberFormatException e) {}cont++;if (ltmp.contains(""http"")) {newlink = ltmp;if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}} else if (ltmp.contains(""ptth"")) {newlink = inverteFrase(ltmp);if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}}} while (!isValid(newlink) && cont <= 20);tmp = null;tmp2 = null;ltmp = null;String leitura = """";try {leitura = readHTML(linkInit);} catch (IOException e) {}leitura = leitura.toLowerCase();if (leitura.contains(""trocabotao"")) {newlink = """";for (int i = leitura.indexOf(""trocabotao""); i < leitura.length(); i++) {if (Character.isDigit(leitura.charAt(i))) {int tmpInt = i;while (Character.isDigit(leitura.charAt(tmpInt))) {newlink += leitura.charAt(tmpInt);tmpInt++;}cod = Integer.parseInt(newlink);break;}}if (cod != 0) {for (int i = 7; i < linkInit.length(); i++) {letra = linkInit.charAt(i);if (letra == '/') {newlink = linkInit.substring(0, i + 1) + ""linkdiscover.php?cod="" + cod;break;}}DataInputStream dat = null;try {URL url = new URL(newlink);InputStream in = url.openStream();dat = new DataInputStream(new BufferedInputStream(in));leitura = """";int dado;while ((dado = dat.read()) != -1) {letra = (char) dado;leitura += letra;}newlink = leitura.replaceAll("" "", """");if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}} catch (MalformedURLException ex) {System.out.println(""URL mal formada."");} catch (IOException e) {} finally {try {if (dat != null) {dat.close();}} catch (IOException e) {System.err.println(""Falha ao fechar fluxo."");}}}}if (precisaRepassar(linkInit)) {if (linkInit.substring(8).contains(""http"")) {newlink = linkInit.substring(linkInit.indexOf(""http"", 8), linkInit.length());if (isValid(newlink)) {return newlink;}}}newlink = """";StringBuffer strBuf = null;try {strBuf = new StringBuffer(readHTML(linkInit));for (String tmp3 : getLibrary()) {if (strBuf.toString().toLowerCase().contains(tmp3)) {for (int i = strBuf.toString().indexOf(tmp3); i >= 0; i--) {if (strBuf.toString().charAt(i) == '""') {for (int j = i + 1; j < strBuf.length(); j++) {if (strBuf.toString().charAt(j) == '""') {if (precisaRepassar(newlink)) {newlink = quebraLink(newlink);if (isValid(newlink)) {return newlink;}} else {if (isValid(newlink)) {return newlink;}}} else {newlink += strBuf.toString().charAt(j);}}}}}}} catch (IOException ex) {}GUIQuebraLink.isBroken = false;return ""Desculpe o link não pode ser quebrado."";}public File getFile(String file) {DirProperties dp;List files = new ArrayList();for (int i = 0; i < locs.size(); i++) {dp = (DirProperties) locs.get(i);if (dp.isReadable()) {File g = new File(dp.getLocation() + slash() + file);if (g.exists()) files.add(g);}}if (files.size() == 0) {throw new UnsupportedOperationException(""at least one DirProperty should get 'read=true'"");} else if (files.size() == 1) {return (File) files.get(0);} else {File fromFile = (File) files.get(files.size() - 2);File toFile = (File) files.get(files.size() - 1);byte reading[] = new byte[2024];try {FileInputStream stream = new FileInputStream(fromFile);FileOutputStream outStr = new FileOutputStream(toFile);while (stream.read(reading) != -1) {outStr.write(reading);}} catch (FileNotFoundException ex) {getLogger().severe(""FileNotFound: while copying from "" + fromFile + "" to "" + toFile);} catch (IOException ex) {getLogger().severe(""IOException: while copying from "" + fromFile + "" to "" + toFile);}return toFile;}}public static String encodeFromFile(String filename) throws java.io.IOException, URISyntaxException {String encodedData = null;Base641.InputStream bis = null;File file;try {URL url = new URL(filename);URLConnection conn = url.openConnection();file = new File(""myfile.doc"");java.io.InputStream inputStream = (java.io.InputStream) conn.getInputStream();FileOutputStream out = new FileOutputStream(file);byte buf[] = new byte[1024];int len;while ((len = inputStream.read(buf)) > 0) out.write(buf, 0, len);out.close();inputStream.close();byte[] buffer = new byte[Math.max((int) (file.length() * 1.4), 40)];int length = 0;int numBytes = 0;bis = new Base641.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(file)), Base641.ENCODE);while ((numBytes = bis.read(buffer, length, 4096)) >= 0) {length += numBytes;}encodedData = new String(buffer, 0, length, Base641.PREFERRED_ENCODING);} catch (java.io.IOException e) {throw e;} finally {try {bis.close();} catch (Exception e) {}}return encodedData;}public int doEndTag() throws JspException {JspWriter saida = pageContext.getOut();HttpURLConnection urlConnection = null;try {URL requisicao = new URL(((HttpServletRequest) pageContext.getRequest()).getRequestURL().toString());URL link = new URL(requisicao, url);urlConnection = (HttpURLConnection) link.openConnection();BufferedReader entrada = new BufferedReader(new InputStreamReader(urlConnection.getInputStream(), ""ISO-8859-1""));String linha = entrada.readLine();while (linha != null) {saida.write(linha + ""\n"");linha = entrada.readLine();}entrada.close();} catch (Exception e) {try {saida.write(""Erro ao incluir o conte�do da URL \"""" + url + ""\"""");} catch (IOException e1) {}} finally {if (urlConnection != null) {urlConnection.disconnect();}}return super.doEndTag();}public static boolean copy(File source, File dest) {FileChannel in = null, out = null;try {in = new FileInputStream(source).getChannel();out = new FileOutputStream(dest).getChannel();long size = in.size();MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buf);if (in != null) in.close();if (out != null) out.close();} catch (IOException e) {e.printStackTrace();return false;}return true;}private void putAlgosFromJar(File jarfile, AlgoDir dir, Model model) throws FileNotFoundException, IOException {URLClassLoader urlLoader = new URLClassLoader(new URL[] { jarfile.toURI().toURL() });JarInputStream jis = new JarInputStream(new FileInputStream(jarfile));JarEntry entry = jis.getNextJarEntry();String name = null;String tmpdir = System.getProperty(""user.dir"") + File.separator + Application.getProperty(""dir.tmp"") + File.separator;byte[] buffer = new byte[1000];while (entry != null) {name = entry.getName();if (name.endsWith("".class"")) {name = name.substring(0, name.length() - 6);name = name.replace('/', '.');try {Class<?> cls = urlLoader.loadClass(name);if (IAlgorithm.class.isAssignableFrom(cls) && !cls.isInterface() && ((cls.getModifiers() & Modifier.ABSTRACT) == 0)) {dir.addAlgorithm(cls);model.putClass(cls.getName(), cls);} else if (ISerializable.class.isAssignableFrom(cls)) {model.putClass(cls.getName(), cls);}} catch (ClassNotFoundException e) {e.printStackTrace();}} else if (Constants.isAllowedImageType(name)) {int lastSep = name.lastIndexOf(""/"");if (lastSep != -1) {String dirs = tmpdir + name.substring(0, lastSep);File d = new File(dirs);if (!d.exists()) d.mkdirs();}String filename = tmpdir + name;File f = new File(filename);if (!f.exists()) {f.createNewFile();FileOutputStream fos = new FileOutputStream(f);int read = -1;while ((read = jis.read(buffer)) != -1) {fos.write(buffer, 0, read);}fos.close();}}entry = jis.getNextJarEntry();}}"	5
"public static void renameFileMultiFallback(File sourceFile, File destFile) throws FileHandlingException {if (destFile.exists()) {throw new FileHandlingException(FileHandlingException.FILE_ALREADY_EXISTS);}if (!sourceFile.exists()) {return;}boolean succ = sourceFile.renameTo(destFile);if (succ) {NLogger.warn(FileUtils.class, ""First renameTo operation worked!"");return;}NLogger.warn(FileUtils.class, ""First renameTo operation failed."");System.gc();Thread.yield();succ = sourceFile.renameTo(destFile);if (succ) {return;}NLogger.warn(FileUtils.class, ""Second renameTo operation failed."");FileInputStream input = null;FileOutputStream output = null;try {input = new FileInputStream(sourceFile);output = new FileOutputStream(destFile);long lengthLeft = sourceFile.length();byte[] buffer = new byte[(int) Math.min(BUFFER_LENGTH, lengthLeft + 1)];int read;while (lengthLeft > 0) {read = input.read(buffer);if (read == -1) {break;}lengthLeft -= read;output.write(buffer, 0, read);}} catch (IOException exp) {NLogger.warn(FileUtils.class, ""Third renameTo operation failed."");throw new FileHandlingException(FileHandlingException.RENAME_FAILED, exp);} finally {IOUtil.closeQuietly(input);IOUtil.closeQuietly(output);}destFile.setLastModified(sourceFile.lastModified());FileUtils.deleteFileMultiFallback(sourceFile);}private static void doCopyFile(File srcFile, File destFile, boolean preserveFileDate) throws IOException {if (destFile.exists() && destFile.isDirectory()) {throw new IOException(""Destination '"" + destFile + ""' exists but is a directory"");}FileChannel input = new FileInputStream(srcFile).getChannel();try {FileChannel output = new FileOutputStream(destFile).getChannel();try {output.transferFrom(input, 0, input.size());} finally {IOUtil.closeQuietly(output);}} finally {IOUtil.closeQuietly(input);}if (srcFile.length() != destFile.length()) {throw new IOException(""Failed to copy full contents from '"" + srcFile + ""' to '"" + destFile + ""'"");}if (preserveFileDate) {destFile.setLastModified(srcFile.lastModified());}}public static void rewrite(String[] args) throws IOException, CodeCheckException {ClassWriter writer = new ClassWriter();writer.readClass(new FileInputStream(args[0]));for (Iterator i = writer.getMethods().iterator(); i.hasNext(); ) {MethodInfo method = (MethodInfo) i.next();CodeAttribute attribute = method.getCodeAttribute();int origStack = attribute.getMaxStack();System.out.print(method.getName());attribute.codeCheck();System.out.println("" "" + origStack + "" "" + attribute.getMaxStack());}BufferedOutputStream outStream = new BufferedOutputStream(new FileOutputStream(args[1]));writer.writeClass(outStream);outStream.close();}public static void testclass(String[] args) throws IOException, CodeCheckException {ClassWriter writer = new ClassWriter();writer.emptyClass(ClassWriter.ACC_PUBLIC, ""TestClass"", ""java/lang/Object"");MethodInfo newMethod = writer.addMethod(ClassWriter.ACC_PUBLIC | ClassWriter.ACC_STATIC, ""main"", ""([Ljava/lang/String;)V"");CodeAttribute attribute = newMethod.getCodeAttribute();int constantIndex = writer.getStringConstantIndex(""It's alive! It's alive!!"");int fieldRefIndex = writer.getReferenceIndex(ClassWriter.CONSTANT_Fieldref, ""java/lang/System"", ""out"", ""Ljava/io/PrintStream;"");int methodRefIndex = writer.getReferenceIndex(ClassWriter.CONSTANT_Methodref, ""java/io/PrintStream"", ""println"", ""(Ljava/lang/String;)V"");ArrayList instructions = new ArrayList();byte[] operands;operands = new byte[2];NetByte.intToPair(fieldRefIndex, operands, 0);instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""getstatic""), 0, operands, false));operands = new byte[1];operands[0] = (byte) constantIndex;instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""ldc""), 0, operands, false));operands = new byte[2];NetByte.intToPair(methodRefIndex, operands, 0);instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""invokevirtual""), 0, operands, false));instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""return""), 0, null, false));attribute.insertInstructions(0, 0, instructions);attribute.setMaxLocals(1);attribute.codeCheck();System.out.println(""constantIndex="" + constantIndex + "" fieldRef="" + fieldRefIndex + "" methodRef="" + methodRefIndex);writer.writeClass(new FileOutputStream(""c:/cygnus/home/javaodb/classes/TestClass.class""));writer.readClass(new FileInputStream(""c:/cygnus/home/javaodb/classes/TestClass.class""));}public static void entering(String[] args) throws IOException, CodeCheckException {ClassWriter writer = new ClassWriter();writer.readClass(new BufferedInputStream(new FileInputStream(args[0])));int constantIndex = writer.getStringConstantIndex(""Entering "");int fieldRefIndex = writer.getReferenceIndex(ClassWriter.CONSTANT_Fieldref, ""java/lang/System"", ""out"", ""Ljava/io/PrintStream;"");int printlnRefIndex = writer.getReferenceIndex(ClassWriter.CONSTANT_Methodref, ""java/io/PrintStream"", ""println"", ""(Ljava/lang/String;)V"");int printRefIndex = writer.getReferenceIndex(ClassWriter.CONSTANT_Methodref, ""java/io/PrintStream"", ""print"", ""(Ljava/lang/String;)V"");for (Iterator i = writer.getMethods().iterator(); i.hasNext(); ) {MethodInfo method = (MethodInfo) i.next();if (method.getName().equals(""readConstant"")) continue;CodeAttribute attribute = method.getCodeAttribute();ArrayList instructions = new ArrayList(10);byte[] operands;operands = new byte[2];NetByte.intToPair(fieldRefIndex, operands, 0);instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""getstatic""), 0, operands, false));instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""dup""), 0, null, false));instructions.add(Instruction.appropriateLdc(constantIndex, false));operands = new byte[2];NetByte.intToPair(printRefIndex, operands, 0);instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""invokevirtual""), 0, operands, false));instructions.add(Instruction.appropriateLdc(writer.getStringConstantIndex(method.getName()), false));operands = new byte[2];NetByte.intToPair(printlnRefIndex, operands, 0);instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""invokevirtual""), 0, operands, false));attribute.insertInstructions(0, 0, instructions);attribute.codeCheck();}BufferedOutputStream outStream = new BufferedOutputStream(new FileOutputStream(args[1]));writer.writeClass(outStream);outStream.close();}private void copyFile(File sourceFile, File destFile) throws IOException {if (!destFile.exists()) {destFile.createNewFile();}FileChannel source = null;FileChannel destination = null;try {source = new FileInputStream(sourceFile).getChannel();destination = new FileOutputStream(destFile).getChannel();destination.transferFrom(source, 0, source.size());} finally {if (source != null) {source.close();}if (destination != null) {destination.close();}}}public static void main(String[] args) throws Exception {final URL url = new URL(""http://www.ebi.ac.uk/Tools/webservices/psicquic/registry/registry?action=ACTIVE&format=txt"");BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String str;Map<String, String> psiqcuicServices = new HashMap<String, String>();while ((str = in.readLine()) != null) {final int idx = str.indexOf('=');psiqcuicServices.put(str.substring(0, idx), str.substring(idx + 1, str.length()));}in.close();System.out.println(""Found "" + psiqcuicServices.size() + "" active service(s)."");for (Object o : psiqcuicServices.keySet()) {String serviceName = (String) o;String serviceUrl = psiqcuicServices.get(serviceName);System.out.println(serviceName + "" -> "" + serviceUrl);UniversalPsicquicClient client = new UniversalPsicquicClient(serviceUrl);try {SearchResult<?> result = client.getByInteractor(""brca2"", 0, 50);System.out.println(""Interactions found: "" + result.getTotalCount());for (BinaryInteraction binaryInteraction : result.getData()) {String interactorIdA = binaryInteraction.getInteractorA().getIdentifiers().iterator().next().getIdentifier();String interactorIdB = binaryInteraction.getInteractorB().getIdentifiers().iterator().next().getIdentifier();String interactionAc = ""-"";if (!binaryInteraction.getInteractionAcs().isEmpty()) {CrossReference cr = (CrossReference) binaryInteraction.getInteractionAcs().iterator().next();interactionAc = cr.getIdentifier();}System.out.println(""\tInteraction ("" + interactionAc + ""): "" + interactorIdA + "" interacts with "" + interactorIdB);}} catch (Throwable e) {System.err.println(""Service is down! "" + serviceName + ""("" + serviceUrl + "")"");}}}@Overridepublic String getLatestApplicationVersion() {String latestVersion = null;String latestVersionInfoURL = ""http://movie-browser.googlecode.com/svn/site/latest"";LOGGER.info(""Checking latest version info from: "" + latestVersionInfoURL);BufferedReader in = null;try {LOGGER.info(""Fetcing latest version info from: "" + latestVersionInfoURL);URL url = new URL(latestVersionInfoURL);in = new BufferedReader(new InputStreamReader(url.openStream()));String str;while ((str = in.readLine()) != null) {latestVersion = str;}} catch (Exception ex) {LOGGER.error(""Error fetching latest version info from: "" + latestVersionInfoURL, ex);} finally {try {in.close();} catch (Exception ex) {LOGGER.error(""Could not close inputstream"", ex);}}return latestVersion;}protected void assignListeners() {groupsList.addListSelectionListener(new ListSelectionListener() {@Overridepublic void valueChanged(ListSelectionEvent event) {refreshInfo();}});saveButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {JFileChooser fileDialog = new JFileChooser(""."");fileDialog.setFileFilter(ReaderData.mkExtensionFileFilter("".grp"", ""Group Files""));int outcome = fileDialog.showSaveDialog((Frame) null);if (outcome == JFileChooser.APPROVE_OPTION) {assert (fileDialog.getCurrentDirectory() != null);assert (fileDialog.getSelectedFile() != null);String fileName = fileDialog.getCurrentDirectory().toString() + File.separator + fileDialog.getSelectedFile().getName();try {PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(fileName)));ReaderWriterGroup.write(out, writer);System.err.println(""Wrote groups informations to output '"" + fileName + ""'."");out.close();} catch (IOException e) {System.err.println(""error while writing (GroupManager.saveClt):"");e.printStackTrace();}} else if (outcome == JFileChooser.CANCEL_OPTION) {}}});loadButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent evt) {JFileChooser fileDialog = new JFileChooser(""."");fileDialog.setFileFilter(ReaderData.mkExtensionFileFilter("".grp"", ""Group Files""));int outcome = fileDialog.showOpenDialog((Frame) null);if (outcome == JFileChooser.APPROVE_OPTION) {assert (fileDialog.getCurrentDirectory() != null);assert (fileDialog.getSelectedFile() != null);String fileName = fileDialog.getCurrentDirectory().toString() + File.separator + fileDialog.getSelectedFile().getName();BufferedReader fileReader = null;try {fileReader = new BufferedReader(new FileReader(fileName));ReaderWriterGroup.read(fileReader, writer);fileReader.close();} catch (Exception e) {System.err.println(""Exception while reading from file '"" + fileName + ""'."");System.err.println(e);}} else if (outcome == JFileChooser.CANCEL_OPTION) {}}});ItemListener propItemListener = new ItemListener() {@Overridepublic void itemStateChanged(ItemEvent event) {int[] indices = groupsList.getSelectedIndices();for (int index : indices) {Group group = getGroupFromListIndex(index);if (group != null) {if (event.getSource() instanceof JComboBox) {JComboBox eventSource = (JComboBox) event.getSource();if (eventSource == colorComboBox) {Color color = colorComboBox.getSelectedColor();assert (color != null);group.setColor(color);shapeComboBox.setColor(color);} else if (eventSource == shapeComboBox) {Shape shape = shapeComboBox.getSelectedShape();assert (shape != null);group.setShape(shape);}} else if (event.getSource() instanceof JCheckBox) {JCheckBox eventSource = (JCheckBox) event.getSource();if (eventSource == showGroupCheckBox) {group.visible = showGroupCheckBox.isSelected();} else if (eventSource == showGraphicInfoCheckBox) {group.info = showGraphicInfoCheckBox.isSelected();}}}}graph.notifyAboutGroupsChange(null);}};colorComboBox.addItemListener(propItemListener);shapeComboBox.addItemListener(propItemListener);showGroupCheckBox.addItemListener(propItemListener);showGraphicInfoCheckBox.addItemListener(propItemListener);showGroupfreeNodesCheckBox.addItemListener(new ItemListener() {@Overridepublic void itemStateChanged(ItemEvent event) {graph.getGroup(0).visible = showGroupfreeNodesCheckBox.isSelected();graph.notifyAboutGroupsChange(null);}});ActionListener propActionListener = new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {JButton botton = (JButton) event.getSource();Group group = getGroupFromListIndex(groupsList.getSelectedIndex());if (group != null) {for (GraphVertex graphVertex : group) {if (botton == showLabelsButton) {graphVertex.setShowName(NameVisibility.Priority.GROUPS, true);} else if (botton == hideLabelsButton) {graphVertex.setShowName(NameVisibility.Priority.GROUPS, false);}}graph.notifyAboutGroupsChange(null);}}};showLabelsButton.addActionListener(propActionListener);hideLabelsButton.addActionListener(propActionListener);newButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {String newGroupName = JOptionPane.showInputDialog(null, ""Enter a name"", ""Name of the new group"", JOptionPane.QUESTION_MESSAGE);if (newGroupName != null) {if (graph.getGroup(newGroupName) == null) {graph.addGroup(new Group(newGroupName, graph));}}}});editButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {Group group = getGroupFromListIndex(groupsList.getSelectedIndex());if (group != null) {DialogEditGroup dialog = new DialogEditGroup(graph, group);dialog.setModal(true);dialog.setVisible(true);}}});deleteButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {int index = groupsList.getSelectedIndex();if (index > 0 && index < graph.getNumberOfGroups() - 1) {graph.removeGroup(index);}}});upButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {int index = groupsList.getSelectedIndex();if (index < graph.getNumberOfGroups() - 1) {graph.moveGroupUp(index);groupsList.setSelectedIndex(index - 1);}}});downButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {int index = groupsList.getSelectedIndex();if (index < graph.getNumberOfGroups() - 1) {graph.moveGroupDown(index);groupsList.setSelectedIndex(index + 1);}}});}private static boolean downloadFile(URL remote, File local) throws IllegalArgumentException, IOException {if (local == null) throw new IllegalArgumentException(""Must specify remote file"");if (local.exists() && !local.canWrite()) throw new IOException(""Cannot write to "" + local);long lengthCurrent = local.exists() ? local.length() : -1l;if (lengthCurrent == 0) throw new IOException(""Cannot get the length for "" + local);long lastModifiedCurrent = local.exists() ? local.lastModified() : -1l;if (remote == null) throw new IllegalArgumentException(""Must specify remote url"");URLConnection urlConnection = remote.openConnection();urlConnection.setDoInput(true);urlConnection.setDoOutput(false);long lengthRemote = urlConnection.getContentLength();long lastModifiedRemote = urlConnection.getLastModified();if (lengthRemote == lengthCurrent) {LOGGER.fine(""Not downloading "" + remote + "" of length "" + lengthRemote + "" and date "" + (lastModifiedRemote > 0 ? new Date(lastModifiedRemote).toString() : ""n/a"") + "" for "" + local + "" of length "" + lengthCurrent + "" and date "" + new Date(lastModifiedCurrent));return false;}BufferedInputStream inputStream = null;BufferedOutputStream bufferedOutputStream = null;try {inputStream = new BufferedInputStream(urlConnection.getInputStream(), BUFFER_SIZE);bufferedOutputStream = new BufferedOutputStream(new FileOutputStream(local));byte[] buffer = new byte[BUFFER_SIZE];do {int count = inputStream.read(buffer);if (count < 0) break;bufferedOutputStream.write(buffer, 0, count);} while (true);return true;} finally {try {if (inputStream != null) inputStream.close();} catch (Throwable throwable) {}try {if (bufferedOutputStream != null) bufferedOutputStream.close();} catch (Throwable throwable) {}}}"	5
"private WikiSiteContentInfo createInfoIndexSite(Long domainId) {final UserInfo user = getSecurityService().getCurrentUser();final Locale locale = new Locale(user.getLocale());final String country = locale.getLanguage();InputStream inStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(""wiki_index_"" + country + "".xhtml"");if (inStream == null) {inStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(""wiki_index.xhtml"");}if (inStream == null) {inStream = new ByteArrayInputStream(DEFAULT_WIKI_INDEX_SITE_TEXT.getBytes());}if (inStream != null) {ByteArrayOutputStream out = new ByteArrayOutputStream();try {IOUtils.copyLarge(inStream, out);return createIndexVersion(domainId, out.toString(), user);} catch (IOException exception) {LOGGER.error(""Error creating info page."", exception);} finally {try {inStream.close();out.close();} catch (IOException exception) {LOGGER.error(""Error reading wiki_index.xhtml"", exception);}}}return null;}private HttpsURLConnection setUpConnection(URL url) throws NoSuchAlgorithmException, KeyManagementException, IOException {HttpsURLConnection openConnection = (HttpsURLConnection) url.openConnection();openConnection.setAllowUserInteraction(true);openConnection.setUseCaches(false);openConnection.setDoInput(true);openConnection.setDoOutput(true);SSLContext sc = SSLContext.getInstance(SSL_PROTOCOL);sc.init(new KeyManager[] { new MyKeyManager() }, new TrustManager[] { new BypassTrustManager() }, null);openConnection.setSSLSocketFactory(sc.getSocketFactory());return openConnection;}public void copyFile(String source_name, String dest_name) throws IOException {File source_file = new File(source_name);File destination_file = new File(dest_name);Reader source = null;Writer destination = null;char[] buffer;int bytes_read;try {if (!source_file.exists() || !source_file.isFile()) throw new FileCopyException(""FileCopy: no such source file: "" + source_name);if (!source_file.canRead()) throw new FileCopyException(""FileCopy: source file "" + ""is unreadable: "" + source_name);if (destination_file.exists()) {if (destination_file.isFile()) {DataInputStream in = new DataInputStream(System.in);String response;if (!destination_file.canWrite()) throw new FileCopyException(""FileCopy: destination "" + ""file is unwriteable: "" + dest_name);} else {throw new FileCopyException(""FileCopy: destination "" + ""is not a file: "" + dest_name);}} else {File parentdir = parent(destination_file);if (!parentdir.exists()) throw new FileCopyException(""FileCopy: destination "" + ""directory doesn't exist: "" + dest_name);if (!parentdir.canWrite()) throw new FileCopyException(""FileCopy: destination "" + ""directory is unwriteable: "" + dest_name);}source = new BufferedReader(new FileReader(source_file));destination = new BufferedWriter(new FileWriter(destination_file));buffer = new char[1024];while (true) {bytes_read = source.read(buffer, 0, 1024);if (bytes_read == -1) break;destination.write(buffer, 0, bytes_read);}} finally {if (source != null) {try {source.close();} catch (IOException e) {;}}if (destination != null) {try {destination.close();} catch (IOException e) {;}}}}private static String MD5(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""MD5"");byte[] md5hash = new byte[32];md.update(text.getBytes(""iso-8859-1""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);}public Result search(Object object) {if (object == null || !(object instanceof String)) {return null;}String query = (String) object;Result hitResult = new Result();Set<Hit> hits = new HashSet<Hit>(8);try {query = URLEncoder.encode(query, ""UTF-8"");URL url = new URL(""http://ajax.googleapis.com/ajax/services/search/web?start=0&rsz=large&v=1.0&q="" + query);URLConnection connection = url.openConnection();connection.addRequestProperty(""Referer"", HTTP_REFERER);String line;StringBuilder builder = new StringBuilder();InputStream input = connection.getInputStream();BufferedReader reader = new BufferedReader(new InputStreamReader(input));while ((line = reader.readLine()) != null) {builder.append(line);}input.close();String response = builder.toString();JSONObject json = new JSONObject(response);LOGGER.debug(json.getString(""responseData""));int count = json.getJSONObject(""responseData"").getJSONObject(""cursor"").getInt(""estimatedResultCount"");hitResult.setEstimatedCount(count);JSONArray ja = json.getJSONObject(""responseData"").getJSONArray(""results"");for (int i = 0; i < ja.length(); i++) {JSONObject j = ja.getJSONObject(i);Hit hit = new Hit();String result = j.getString(""titleNoFormatting"");hit.setTitle(result == null || result.equals("""") ? ""${EMPTY}"" : result);result = j.getString(""url"");hit.setUrl(new URL(result));hits.add(hit);}} catch (Exception e) {e.printStackTrace();LOGGER.error(""Something went wrong..."" + e.getMessage());}hitResult.setHits(hits);return hitResult;}@Override@RemoteMethodpublic boolean encrypt(int idAnexo) {try {Anexo anexo = anexoService.selectById(idAnexo);aes.init(Cipher.ENCRYPT_MODE, aeskeySpec);FileInputStream fis = new FileInputStream(config.baseDir + ""/arquivos_upload_direto/"" + anexo.getAnexoCaminho());CipherOutputStream cos = new CipherOutputStream(new FileOutputStream(config.baseDir + ""/arquivos_upload_direto/encrypt/"" + anexo.getAnexoCaminho()), aes);IOUtils.copy(fis, cos);cos.close();fis.close();} catch (Exception e) {e.printStackTrace();return false;}return true;}@Override@RemoteMethodpublic boolean decrypt(int idAnexo) {try {Anexo anexo = anexoService.selectById(idAnexo);aes.init(Cipher.DECRYPT_MODE, aeskeySpec);CipherInputStream cis = new CipherInputStream(new FileInputStream(config.baseDir + ""/arquivos_upload_direto/encrypt/"" + anexo.getAnexoCaminho()), aes);FileOutputStream fos = new FileOutputStream(config.baseDir + ""/arquivos_upload_direto/decrypt/"" + anexo.getAnexoCaminho());IOUtils.copy(cis, fos);cis.close();fos.close();} catch (Exception e) {e.printStackTrace();return false;}return true;}public String getText() throws IOException {InputStreamReader r = new InputStreamReader(getInputStream(), encoding);StringWriter w = new StringWriter(256 * 128);try {IOUtils.copy(r, w);} finally {IOUtils.closeQuietly(w);IOUtils.closeQuietly(r);}return w.toString();}public static org.osid.repository.AssetIterator search(Repository repository, SearchCriteria lSearchCriteria) throws org.osid.repository.RepositoryException {try {NodeList fieldNode = null;if (lSearchCriteria.getSearchOperation() == SearchCriteria.FIND_OBJECTS) {URL url = new URL(""http"", repository.getAddress(), repository.getPort(), SEARCH_STRING + URLEncoder.encode(lSearchCriteria.getKeywords() + WILDCARD, ""ISO-8859-1""));XPathFactory factory = XPathFactory.newInstance();XPath xPath = factory.newXPath();xPath.setNamespaceContext(new FedoraNamespaceContext());InputSource inputSource = new InputSource(url.openStream());fieldNode = (NodeList) xPath.evaluate(""/pre:result/pre:resultList/pre:objectFields"", inputSource, XPathConstants.NODESET);if (fieldNode.getLength() > 0) {inputSource = new InputSource(url.openStream());XPathExpression xSession = xPath.compile(""//pre:token/text()"");String token = xSession.evaluate(inputSource);lSearchCriteria.setToken(token);}}return getAssetIterator(repository, fieldNode);} catch (Throwable t) {throw wrappedException(""search"", t);}}public List<Rule> parse(Runestone stone, URL url) throws IOException {List<Rule> rules = new ArrayList<Rule>();Map<String, String> macros = new HashMap<String, String>();BufferedReader bin = null;try {bin = new BufferedReader(new InputStreamReader(url.openStream()));String line = bin.readLine();while (line != null) {line = line.trim();if (line.startsWith(""Macro:"")) {String name = line.substring(6).trim();String value = bin.readLine();if (value != null) {value = value.trim();for (Map.Entry<String, String> macro : macros.entrySet()) {value = value.replace(""("" + macro.getKey() + "")"", macro.getValue());}if (macros.containsKey(name)) System.err.println(""WARNING: macro '"" + name + ""' is being redefined"");macros.put(name, value);}}if (line.startsWith(""Rule:"")) {String name = line.substring(5).trim();line = bin.readLine();Map<String, Boolean> options = new HashMap<String, Boolean>();String[] requires = new String[0];String[] provides = new String[0];if (line != null && line.startsWith(""Options:"")) {String data[] = line.substring(8).trim().split("","");for (String opt : data) {String[] kvp = opt.split(""="");options.put(kvp[0].trim(), Boolean.valueOf(kvp[1].trim()));}line = bin.readLine();}if (line != null && line.startsWith(""Requires:"")) {requires = line.substring(9).trim().split(""\\s+"");line = bin.readLine();}if (line != null && line.startsWith(""Provides:"")) {provides = line.substring(9).trim().split(""\\s+"");line = bin.readLine();}if (line == null) {throw new RuntimeException(""We've found the end of the file in the middle of a rule, something is really wrong"");}String lhs = """";while (line != null && (!line.trim().equals(""=>"") && !line.startsWith(""Rule:""))) {lhs += line.trim();line = bin.readLine();}for (Map.Entry<String, String> macro : macros.entrySet()) {lhs = lhs.replace(""("" + macro.getKey() + "")"", macro.getValue());}Transition t = null;if (lhs.length() > 0) t = parse(stone, lhs);String rhs = """";if (line != null && !line.startsWith(""Rule:"")) line = bin.readLine();while (line != null && !line.trim().startsWith(""Rule:"")) {rhs += line + ""\n"";line = bin.readLine();}rhs = rhs.trim();Rule rule = null;if (rhs.equals("""")) {rule = new RuleSimpleImpl(name, t, options, name);} else if (rhs.startsWith(""["")) {String type = rhs.substring(1, rhs.length() - 1).trim();if (type.equals("""")) type = name;rule = new RuleSimpleImpl(name, t, options, type);} else if (rhs.startsWith(""{"")) {rhs = rhs.substring(1, rhs.length() - 1);try {rule = compiler.compile(name, options, t, rhs);} catch (Throwable e) {System.out.println(""\nSomething wicked this way comes..."");e.printStackTrace();e.getCause().printStackTrace();}} else {System.err.println(""Unsupported type of RHS for rule '"" + name + ""', rule will not be compiled"");}if (rule != null) {rule.addRequired(requires);rule.addProvided(provides);rules.add(rule);} else {System.err.println(""No idea what happend but the rule instance is null!"");}} else if (line.startsWith(""Import:"")) {rules.addAll(parse(stone, new URL(url, line.substring(7).trim())));}if (line == null || !line.trim().startsWith(""Rule:"")) line = bin.readLine();}} finally {if (bin != null) {try {bin.close();} catch (IOException e) {}}}return rules;}"	5
"protected Control createContents(Composite parent) {this.getShell().setText(""Chisio"");this.getShell().setSize(800, 600);this.getShell().setImage(ImageDescriptor.createFromFile(ChisioMain.class, ""icon/chisio-icon.png"").createImage());Composite composite = new Composite(parent, SWT.BORDER);composite.setLayout(new FillLayout());this.viewer = new ScrollingGraphicalViewer();this.viewer.setEditDomain(this.editDomain);this.viewer.createControl(composite);this.viewer.getControl().setBackground(ColorConstants.white);this.rootEditPart = new ChsScalableRootEditPart();this.viewer.setRootEditPart(this.rootEditPart);this.viewer.setEditPartFactory(new ChsEditPartFactory());((FigureCanvas) this.viewer.getControl()).setScrollBarVisibility(FigureCanvas.ALWAYS);this.viewer.addDropTargetListener(new ChsFileDropTargetListener(this.viewer, this));this.viewer.addDragSourceListener(new ChsFileDragSourceListener(this.viewer));CompoundModel model = new CompoundModel();model.setAsRoot();this.viewer.setContents(model);this.viewer.getControl().addMouseListener(this);this.popupManager = new PopupManager(this);this.popupManager.setRemoveAllWhenShown(true);this.popupManager.addMenuListener(new IMenuListener() {public void menuAboutToShow(IMenuManager manager) {ChisioMain.this.popupManager.createActions(manager);}});KeyHandler keyHandler = new KeyHandler();ActionRegistry a = new ActionRegistry();keyHandler.put(KeyStroke.getPressed(SWT.DEL, 127, 0), new DeleteAction(this.viewer));keyHandler.put(KeyStroke.getPressed('+', SWT.KEYPAD_ADD, 0), new ZoomAction(this, 1, null));keyHandler.put(KeyStroke.getPressed('-', SWT.KEYPAD_SUBTRACT, 0), new ZoomAction(this, -1, null));keyHandler.put(KeyStroke.getPressed(SWT.F2, 0), a.getAction(GEFActionConstants.DIRECT_EDIT));this.viewer.setKeyHandler(keyHandler);this.higlightColor = ColorConstants.yellow;this.createCombos();return composite;}public String getWebcontent(final String link, final String postdata) {final StringBuffer response = new StringBuffer();try {DisableSSLCertificateCheckUtil.disableChecks();final URL url = new URL(link);final URLConnection conn = url.openConnection();conn.setDoOutput(true);final OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());wr.write(postdata);wr.flush();final BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));String content = """";while ((content = rd.readLine()) != null) {response.append(content);response.append('\n');}wr.close();rd.close();} catch (final Exception e) {LOG.error(""getWebcontent(String link, String postdata): "" + e.toString() + ""\012"" + link + ""\012"" + postdata);}return response.toString();}public static Hashtable DefaultLoginValues(String firstName, String lastName, String password, String mac, String startLocation, int major, int minor, int patch, int build, String platform, String viewerDigest, String userAgent, String author) throws Exception {Hashtable values = new Hashtable();MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(password.getBytes(""ASCII""), 0, password.length());byte[] raw_digest = md5.digest();String passwordDigest = Helpers.toHexText(raw_digest);values.put(""first"", firstName);values.put(""last"", lastName);values.put(""passwd"", """" + password);values.put(""start"", startLocation);values.put(""major"", major);values.put(""minor"", minor);values.put(""patch"", patch);values.put(""build"", build);values.put(""platform"", platform);values.put(""mac"", mac);values.put(""agree_to_tos"", ""true"");values.put(""viewer_digest"", viewerDigest);values.put(""user-agent"", userAgent + "" ("" + Helpers.VERSION + "")"");values.put(""author"", author);Vector optionsArray = new Vector();optionsArray.addElement(""inventory-root"");optionsArray.addElement(""inventory-skeleton"");optionsArray.addElement(""inventory-lib-root"");optionsArray.addElement(""inventory-lib-owner"");optionsArray.addElement(""inventory-skel-lib"");optionsArray.addElement(""initial-outfit"");optionsArray.addElement(""gestures"");optionsArray.addElement(""event_categories"");optionsArray.addElement(""event_notifications"");optionsArray.addElement(""classified_categories"");optionsArray.addElement(""buddy-list"");optionsArray.addElement(""ui-config"");optionsArray.addElement(""login-flags"");optionsArray.addElement(""global-textures"");values.put(""options"", optionsArray);return values;}public static String md5(String senha) {MessageDigest md = null;try {md = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Ocorreu NoSuchAlgorithmException"");}md.update(senha.getBytes());byte[] xx = md.digest();String n2 = null;StringBuffer resposta = new StringBuffer();for (int i = 0; i < xx.length; i++) {n2 = Integer.toHexString(0XFF & ((int) (xx[i])));if (n2.length() < 2) {n2 = ""0"" + n2;}resposta.append(n2);}return resposta.toString();}public void prepareWorkingDirectory() throws Exception {workingDirectory = tempDir + ""/profile_"" + System.nanoTime();(new File(workingDirectory)).mkdir();String monitorCallShellScript = ""data/scripts/monitorcall.sh"";URL monitorCallShellScriptUrl = Thread.currentThread().getContextClassLoader().getResource(monitorCallShellScript);File inScriptFile = null;try {inScriptFile = new File(monitorCallShellScriptUrl.toURI());} catch (URISyntaxException e) {throw e;}monitorShellScript = workingDirectory + ""/monitorcall.sh"";File outScriptFile = new File(monitorShellScript);FileChannel inChannel = new FileInputStream(inScriptFile).getChannel();FileChannel outChannel = new FileOutputStream(outScriptFile).getChannel();try {inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {throw e;} finally {if (inChannel != null) inChannel.close();if (outChannel != null) outChannel.close();}try {LinuxCommandExecutor cmdExecutor = new LinuxCommandExecutor();cmdExecutor.runCommand(""chmod 777 "" + monitorShellScript);} catch (Exception e) {throw e;}}public static int[] sort(int[] v) {int i;int l = v.length;int[] index = new int[l];for (i = 0; i < l; i++) index[i] = i;int tmp;boolean change = true;while (change) {change = false;for (i = 0; i < l - 1; i++) {if (v[index[i]] > v[index[i + 1]]) {tmp = index[i];index[i] = index[i + 1];index[i + 1] = tmp;change = true;}}}return index;}public Vector<Question> reload() throws IOException {Vector<Question> questions = new Vector<Question>();InputStream is = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(is));shortName = br.readLine();if (shortName != null && shortName.equals(""SHORTNAME"")) {shortName = br.readLine();author = br.readLine();if (author != null && author.equals(""AUTHOR"")) {author = br.readLine();description = br.readLine();if (description != null && description.equals(""DESCRIPTION"")) {description = br.readLine();try {questions = QuestionLoader.getQuestions(br);} catch (IOException ioe) {ioe.printStackTrace();throw ioe;} finally {br.close();is.close();}} else {throw new IllegalArgumentException();}} else {throw new IllegalArgumentException();}} else {throw new IllegalArgumentException();}return questions;}protected void configureGraphicalViewer() {super.configureGraphicalViewer();GraphicalViewer viewer = getGraphicalViewer();viewer.setEditPartFactory(createEditPartFactory());ScalableRootEditPart rootEditPart = new ScalableRootEditPart();viewer.setRootEditPart(rootEditPart);ZoomManager manager = rootEditPart.getZoomManager();double[] zoomLevels = new double[] { 0.25, 0.5, 0.75, 1.0, 1.5, 2.0, 2.5, 3.0, 4.0, 5.0, 10.0, 20.0 };manager.setZoomLevels(zoomLevels);ArrayList zoomContributions = new ArrayList();zoomContributions.add(ZoomManager.FIT_ALL);zoomContributions.add(ZoomManager.FIT_HEIGHT);zoomContributions.add(ZoomManager.FIT_WIDTH);manager.setZoomLevelContributions(zoomContributions);getActionRegistry().registerAction(new ZoomInAction(manager));getActionRegistry().registerAction(new ZoomOutAction(manager));getGraphicalViewer().setKeyHandler(new GraphicalViewerKeyHandler(getGraphicalViewer()));String menuId = this.getClass().getName() + "".EditorContext"";MenuManager menuMgr = new MenuManager(menuId, menuId);openPropertyAction = new OpenPropertyViewAction(viewer);openOutlineAction = new OpenOutlineViewAction(viewer);saveAsImageAction = new SaveAsImageAction(viewer);createDiagramAction(viewer);getSite().registerContextMenu(menuId, menuMgr, viewer);PrintAction printAction = new PrintAction(this);printAction.setImageDescriptor(UMLPlugin.getImageDescriptor(""icons/print.gif""));getActionRegistry().registerAction(printAction);final DeleteAction deleteAction = new DeleteAction((IWorkbenchPart) this);deleteAction.setSelectionProvider(getGraphicalViewer());getActionRegistry().registerAction(deleteAction);viewer.addSelectionChangedListener(new ISelectionChangedListener() {public void selectionChanged(SelectionChangedEvent event) {deleteAction.update();}});menuMgr.add(new Separator(""edit""));menuMgr.add(getActionRegistry().getAction(ActionFactory.DELETE.getId()));menuMgr.add(getActionRegistry().getAction(ActionFactory.UNDO.getId()));menuMgr.add(getActionRegistry().getAction(ActionFactory.REDO.getId()));menuMgr.add(new Separator(""zoom""));menuMgr.add(getActionRegistry().getAction(GEFActionConstants.ZOOM_IN));menuMgr.add(getActionRegistry().getAction(GEFActionConstants.ZOOM_OUT));fillDiagramPopupMenu(menuMgr);menuMgr.add(new Separator(""print""));menuMgr.add(saveAsImageAction);menuMgr.add(printAction);menuMgr.add(new Separator(""views""));menuMgr.add(openPropertyAction);menuMgr.add(openOutlineAction);menuMgr.add(new Separator(""generate""));menuMgr.add(new Separator(""additions""));viewer.setContextMenu(menuMgr);viewer.setKeyHandler(new GraphicalViewerKeyHandler(viewer).setParent(getCommonKeyHandler()));}public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException {if (!clazz.isPrimitive()) {ClassLoader cl = clazz.getClassLoader();if (cl == loader) {if (clazz.isArray()) return checkTypeChange(getArrayType(clazz), buildDir, refFile);String path = clazz.getName().replace('.', File.separatorChar) + "".class"";File file = new File(buildDir, path);long lastMod = Long.MAX_VALUE;if (!file.exists()) {URL url = cl.getResource(path);if (url == null) throw new MojoExecutionException(""Can't get URL for webservice class '"" + clazz.getName() + ""' from jar file.""); else {try {JarURLConnection con = (JarURLConnection) url.openConnection();lastMod = con.getJarEntry().getTime();} catch (IOException x) {throw new MojoExecutionException(""Can't get modification time for webservice class '"" + clazz.getName() + ""' from jar file."");}}} else {lastMod = file.lastModified();}if (refFile.lastModified() < lastMod) return true;if (clazz.isInterface()) {Class<?>[] itfs = clazz.getInterfaces();for (int i = 0; i < itfs.length; i++) {boolean changed = checkTypeChange(itfs[i], buildDir, refFile);if (changed) return true;}} else {Class<?> sup = clazz.getSuperclass();boolean changed = checkTypeChange(sup, buildDir, refFile);if (changed) return true;}}}return false;}private static List retrieveQuotes(Report report, Symbol symbol, String prefix, TradingDate startDate, TradingDate endDate) throws ImportExportException {List quotes = new ArrayList();String URLString = constructURL(symbol, prefix, startDate, endDate);EODQuoteFilter filter = new GoogleEODQuoteFilter(symbol);PreferencesManager.ProxyPreferences proxyPreferences = PreferencesManager.getProxySettings();try {URL url = new URL(URLString);InputStreamReader input = new InputStreamReader(url.openStream());BufferedReader bufferedInput = new BufferedReader(input);String line = bufferedInput.readLine();while (line != null) {line = bufferedInput.readLine();if (line != null) {try {EODQuote quote = filter.toEODQuote(line);quotes.add(quote);verify(report, quote);} catch (QuoteFormatException e) {report.addError(Locale.getString(""GOOGLE_DISPLAY_URL"") + "":"" + symbol + "":"" + Locale.getString(""ERROR"") + "": "" + e.getMessage());}}}bufferedInput.close();} catch (BindException e) {throw new ImportExportException(Locale.getString(""UNABLE_TO_CONNECT_ERROR"", e.getMessage()));} catch (ConnectException e) {throw new ImportExportException(Locale.getString(""UNABLE_TO_CONNECT_ERROR"", e.getMessage()));} catch (UnknownHostException e) {throw new ImportExportException(Locale.getString(""UNKNOWN_HOST_ERROR"", e.getMessage()));} catch (NoRouteToHostException e) {throw new ImportExportException(Locale.getString(""DESTINATION_UNREACHABLE_ERROR"", e.getMessage()));} catch (MalformedURLException e) {throw new ImportExportException(Locale.getString(""INVALID_PROXY_ERROR"", proxyPreferences.host, proxyPreferences.port));} catch (FileNotFoundException e) {} catch (IOException e) {throw new ImportExportException(Locale.getString(""ERROR_DOWNLOADING_QUOTES""));}return quotes;}"	5
"public static String md5(final String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md = MessageDigest.getInstance(""MD5"");byte[] md5hash = new byte[FOUR_BYTES];md.update(text.getBytes(""iso-8859-1""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);}public void reademi(Vector<String> descriptions, Vector<String> links, String linkaddress, String idmap) {InputStream is = null;URL url;ArrayList<String> keys = new ArrayList<String>();ArrayList<String> names = new ArrayList<String>();try {url = new URL(idmap);is = url.openStream();Scanner scanner = new Scanner(is);scanner.nextLine();String line = """";String id = """";while (scanner.hasNextLine()) {line = scanner.nextLine();Scanner linescanner = new Scanner(line);linescanner.useDelimiter(""\t"");id = linescanner.next();id = id.substring(0, id.length() - 2);keys.add(id);linescanner.next();linescanner.next();linescanner.next();linescanner.useDelimiter(""\n"");names.add(linescanner.next());}BufferedReader reader = new BufferedReader(new InputStreamReader(new URL(linkaddress).openStream()));String link = """";String key = """";String name = """";int counter = 0;while ((line = reader.readLine()) != null) {if (line.indexOf(""style=raw"") != -1) {int linkstart = line.indexOf(""http://www.ebi.ac.uk/cgi-bin/dbfetch?db"");int idstart = line.indexOf(""id="") + 3;int linkend = line.substring(linkstart).indexOf(""\"""") + linkstart;link = line.substring(linkstart, linkend);key = line.substring(idstart, linkend);if (keys.indexOf(key) != -1) {name = names.get(keys.indexOf(key));counter++;descriptions.add(counter + "" "" + key + "" "" + name);links.add(link);}}}} catch (MalformedURLException e) {} catch (Exception e) {e.printStackTrace();}}public void readUNI(Vector<String> descriptions, String source) {InputStream is = null;try {URL url = new URL(source);is = url.openStream();Scanner scanner = new Scanner(is);scanner.nextLine();String line = """";String id = """";String desc = """";while (scanner.hasNextLine()) {line = scanner.nextLine();Scanner linescanner = new Scanner(line);linescanner.useDelimiter(""\t"");id = linescanner.next();linescanner.next();desc = linescanner.next();linescanner.useDelimiter(""\n"");linescanner.next();descriptions.add(id + "" "" + desc);}} catch (MalformedURLException e) {} catch (Exception e) {e.printStackTrace();} finally {if (is != null) try {is.close();} catch (IOException e) {}}}public void process(Group group, List resourcesName, List excludeResources, ServletContext servletContext, Writer out, String location) throws IOException {LOG.debug(""Merging content of group : "" + group.getName());for (Iterator iterator = group.getSubgroups().iterator(); iterator.hasNext(); ) {Group subGroup = (Group) iterator.next();String subLocation = subGroup.getBestLocation(location);ResourcesProcessor subGroupProcessor = null;if (subGroup.isMinimize() == null) subGroupProcessor = this; else subGroupProcessor = subGroup.getJSProcessor();subGroupProcessor.process(subGroup, subGroup.getJsNames(), excludeResources, servletContext, out, subLocation);}for (Iterator it = resourcesName.iterator(); it.hasNext(); ) {URL url = null;String path = (String) it.next();if (!excludeResources.contains(path)) {url = URLUtils.getLocalURL(path, servletContext);if (url == null) {String webPath = URLUtils.concatUrlWithSlaches(group.getBestLocation(location), path);url = URLUtils.getWebUrlResource(webPath);}if (url == null) {throw new IOException(""The resources '"" + path + ""' could not be found neither in the webapp folder nor in a jar"");}InputStream in = null;try {in = url.openStream();IOUtils.copy(in, out, URLUtils.DEFAULT_ENCODING);out.write(""\n\n"");} catch (Exception e) {LOG.error(""Merge failed for file "" + path, e);} finally {if (in != null) in.close();}excludeResources.add(path);}}}public Set<String> getAvailableRoles() {if (availableRoles == null) {availableRoles = new HashSet<String>();try {Enumeration<URL> resources = org.springframework.util.ClassUtils.getDefaultClassLoader().getResources(ROLE_FILE_LOCATION);while (resources.hasMoreElements()) {URL url = resources.nextElement();InputStream is = null;try {URLConnection con = url.openConnection();con.setUseCaches(false);is = con.getInputStream();List<String> lines = IOUtils.readLines(is, ""ISO-8859-1"");if (lines != null) {for (String line : lines) {availableRoles.add(line.trim());}}} finally {if (is != null) {is.close();}}}} catch (IOException e) {throw new RuntimeException(e);}}return availableRoles;}public static void copyFile(File in, File out) throws ObclipseException {try {FileChannel inChannel = null;FileChannel outChannel = null;try {inChannel = new FileInputStream(in).getChannel();outChannel = new FileOutputStream(out).getChannel();inChannel.transferTo(0, inChannel.size(), outChannel);} finally {if (inChannel != null) {inChannel.close();}if (outChannel != null) {outChannel.close();}}} catch (FileNotFoundException e) {Msg.error(""The file ''{0}'' to copy does not exist!"", e, in.getAbsolutePath());} catch (IOException e) {Msg.ioException(in, out, e);}}public static String convertToSha1(final String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(text.getBytes(""iso-8859-1""), 0, text.length());sha1hash = md.digest();return convertToHex(sha1hash);}public static String getHashedPasswordTc(String password) throws java.security.NoSuchAlgorithmException {java.security.MessageDigest d = java.security.MessageDigest.getInstance(""MD5"");d.reset();d.update(password.getBytes());byte[] buf = d.digest();char[] cbf = new char[buf.length * 2];for (int jj = 0, kk = 0; jj < buf.length; jj++) {cbf[kk++] = ""0123456789abcdef"".charAt((buf[jj] >> 4) & 0x0F);cbf[kk++] = ""0123456789abcdef"".charAt(buf[jj] & 0x0F);}return new String(cbf);}public static String getHashedStringMD5(String value) throws java.security.NoSuchAlgorithmException {java.security.MessageDigest d = java.security.MessageDigest.getInstance(""MD5"");d.reset();d.update(value.getBytes());byte[] buf = d.digest();return new String(buf);}public static void bubble(double[] a) {for (int i = a.length - 1; i > 0; i--) for (int j = 0; j < i; j++) if (a[j] > a[j + 1]) {double temp = a[j];a[j] = a[j + 1];a[j + 1] = temp;}}"	5
"public String getServerHash(String passwordHash, String PasswordSalt) throws PasswordHashingException {byte[] hash;try {MessageDigest digest = MessageDigest.getInstance(""SHA-256"");digest.reset();digest.update(PasswordSalt.getBytes(""UTF-16""));hash = digest.digest(passwordHash.getBytes(""UTF-16""));return bytesToHex(hash);} catch (NoSuchAlgorithmException ex) {throw new PasswordHashingException(""Current environment does not supply needed security algorithms. Please update Java"");} catch (UnsupportedEncodingException ex) {throw new PasswordHashingException(""Current environment does not supply needed character encoding. Please update Java"");}}protected Boolean lancerincident(long idbloc, String Etatbloc, java.util.GregorianCalendar datebloc, long idServeur, String niveau, String message) {String codeerr;Boolean retour = false;Boolean SauvegardeEtatAutocommit;int etat;acgtools_core.AcgIO.SortieLog(new Date() + "" - Appel de la fonction Lancer incident"");Statement statement = null;ResultSet resultat = null;String RequeteSQL = """";acgtools_core.AcgIO.SortieLog(new Date() + "" - nouvel incident pour le bloc : "" + acgtools_core.AcgIO.RetourneDate(datebloc));try {this.con = db.OpenConnection();SauvegardeEtatAutocommit = this.con.getAutoCommit();this.con.setAutoCommit(false);if (idbloc == 0) {idbloc = this.CreationBloc(idServeur);if (idbloc == 0) {retour = false;acgtools_core.AcgIO.SortieLog(new Date() + "" - Problème lors de la création du bloc"");this.con.rollback();this.con.close();return false;}}acgtools_core.AcgIO.SortieLog(new Date() + "" - bloc : "" + idbloc);etat = this.ChargerEtatServeur(idbloc, datebloc);if (etat != 2) {statement = con.createStatement();acgtools_core.AcgIO.SortieLog(new Date() + "" - Etat chargé"");RequeteSQL = ""SELECT incref_err_numer FROM tbl_incident_ref "" + ""WHERE incref_cde_job ='"" + idbloc + ""' "" + ""AND incref_err_numer NOT IN "" + ""(SELECT incref_err_numer FROM tbl_incident_ref "" + ""WHERE incref_err_etat='c') "" + ""AND incref_err_numer NOT IN "" + ""(SELECT incenc_err_numer FROM tbl_incident_encours "" + ""WHERE incenc_err_etat='c') ;"";acgtools_core.AcgIO.SortieLog(new Date() + "" - "" + RequeteSQL);resultat = statement.executeQuery(RequeteSQL);if (!resultat.next()) {resultat.close();RequeteSQL = ""INSERT INTO tbl_incident_ref "" + ""(incref_cde_job,incref_err_date,incref_err_etat,incref_niv_crimd,incref_err_msg,incref_err_srvnm)"" + ""VALUES ('"" + idbloc + ""','"" + acgtools_core.AcgIO.RetourneDate(datebloc) + ""','"" + Etatbloc + ""','"" + niveau + ""','"" + message + ""','"" + idServeur + ""');"";acgtools_core.AcgIO.SortieLog(new Date() + "" - "" + RequeteSQL);statement.executeUpdate(RequeteSQL);RequeteSQL = ""SELECT incref_err_numer FROM tbl_incident_ref "" + ""WHERE incref_cde_job = '"" + idbloc + ""' "" + ""AND incref_err_srvnm = '"" + idServeur + ""' "" + ""AND incref_err_date = '"" + acgtools_core.AcgIO.RetourneDate(datebloc) + ""';"";acgtools_core.AcgIO.SortieLog(new Date() + "" - "" + RequeteSQL);resultat = statement.executeQuery(RequeteSQL);if (resultat.next()) {codeerr = resultat.getString(""incref_err_numer"");resultat.close();RequeteSQL = ""INSERT INTO tbl_incident_encours"" + ""(incenc_err_numer, incenc_err_etat, incenc_esc_etap, "" + ""incenc_err_date, incenc_typ_user,incenc_cde_user,incenc_err_msg,incenc_niv_crimd) "" + ""VALUES ('"" + codeerr + ""','"" + Etatbloc + ""',0, "" + ""'"" + acgtools_core.AcgIO.RetourneDate(datebloc) + ""','n',0,'"" + message + ""','"" + niveau + ""');"";acgtools_core.AcgIO.SortieLog(new Date() + "" - "" + RequeteSQL);statement.executeUpdate(RequeteSQL);acgtools_core.AcgIO.SortieLog(new Date() + "" - Incident inséré dans la base de données"");acgtools_core.AcgIO.SortieLog(new Date() + "" - Traitement de l'envois des emails si nécessaire"");this.usermail(codeerr, etat, acgtools_core.AcgIO.RetourneDate(datebloc), message);acgtools_core.AcgIO.SortieLog(new Date() + "" - Création de l'historique"");this.CreerHistorique(codeerr);acgtools_core.AcgIO.SortieLog(new Date() + "" - Créer maj"");this.CreerMaj(true);retour = true;} else {acgtools_core.AcgIO.SortieLog(new Date() + "" - Problème d'insertion du nouvel incident dans la base"");retour = false;}} else {codeerr = resultat.getString(""incref_err_numer"");acgtools_core.AcgIO.SortieLog(new Date() + "" - Numéro de l'erreur trouvé. Numéro ="" + codeerr);RequeteSQL = ""SELECT incenc_err_etat FROM tbl_incident_encours "" + ""WHERE incenc_err_numer='"" + codeerr + ""';"";acgtools_core.AcgIO.SortieLog(new Date() + "" - "" + RequeteSQL);resultat = statement.executeQuery(RequeteSQL);if (!resultat.next()) {resultat.close();acgtools_core.AcgIO.SortieLog(new Date() + "" - Problème lors de la lecture de l'état de l'incident."");String RequeteSQLInsert = ""INSERT INTO tbl_incident_encours"" + ""(incenc_err_numer, incenc_err_etat, incenc_esc_etap, "" + ""incenc_err_date, incenc_typ_user,incenc_cde_user,incenc_err_msg,incenc_niv_crimd) "" + ""VALUES ('"" + codeerr + ""','"" + Etatbloc + ""',0, "" + ""'"" + acgtools_core.AcgIO.RetourneDate(datebloc) + ""','n',0,'"" + ""Incident non clotur&eacute; - "" + message + ""','"" + niveau + ""');"";acgtools_core.AcgIO.SortieLog(new Date() + "" - "" + RequeteSQLInsert);statement.execute(RequeteSQLInsert);resultat = statement.executeQuery(RequeteSQL);} else {resultat = statement.executeQuery(RequeteSQL);acgtools_core.AcgIO.SortieLog(new Date() + "" - Incident correctement positionné dans encours"");}if (resultat.next()) {switch(Etatbloc.charAt(0)) {case 'c':{acgtools_core.AcgIO.SortieLog(new Date() + "" - Cloture de l'incident."");RequeteSQL = ""UPDATE tbl_incident_ref SET incref_err_etat='c'"" + ""WHERE incref_err_numer='"" + codeerr + ""';"";acgtools_core.AcgIO.SortieLog(new Date() + "" - "" + RequeteSQL);statement.executeUpdate(RequeteSQL);this.UpdateEnCours(codeerr, ""c"", niveau, acgtools_core.AcgIO.RetourneDate(datebloc), message, ""auto"");acgtools_core.AcgIO.SortieLog(new Date() + "" - Traitement de l'envois des emails si nécessaire"");this.usermail(codeerr, etat, message, acgtools_core.AcgIO.RetourneDate(datebloc));acgtools_core.AcgIO.SortieLog(new Date() + "" - Créer maj"");this.CreerMaj(false);retour = true;break;}case 'm':{this.UpdateEnCours(codeerr, ""m"", niveau, acgtools_core.AcgIO.RetourneDate(datebloc), message, ""auto"");acgtools_core.AcgIO.SortieLog(new Date() + "" - Traitement de l'envois des emails si nécessaire"");this.usermail(codeerr, etat, message, acgtools_core.AcgIO.RetourneDate(datebloc));acgtools_core.AcgIO.SortieLog(new Date() + "" - Créer maj"");this.CreerMaj(false);retour = true;break;}default:{this.UpdateEnCours(codeerr, ""m"", niveau, acgtools_core.AcgIO.RetourneDate(datebloc), message, """");acgtools_core.AcgIO.SortieLog(new Date() + "" - Traitement de l'envois des emails si nécessaire"");this.usermail(codeerr, etat, message, acgtools_core.AcgIO.RetourneDate(datebloc));acgtools_core.AcgIO.SortieLog(new Date() + "" - Créer maj"");this.CreerMaj(false);retour = true;break;}}} else {acgtools_core.AcgIO.SortieLog(new Date() + "" - Problème lors de la lecture de l'état de l'incident."");retour = false;}}} else {acgtools_core.AcgIO.SortieLog(new Date() + "" - Systeme en maintenance, pas de remontée d'incidents."");retour = false;}} catch (ClassNotFoundException ex) {acgtools_core.AcgIO.SortieLog(new Date() + ""Annulation des modifications."");con.rollback();acgtools_core.AcgIO.SortieLog(new Date() + ""Probléme lors de l'éxécution de la connexion."");acgtools_core.AcgIO.SortieLog(ex.getMessage());retour = false;} catch (SQLException ex) {acgtools_core.AcgIO.SortieLog(new Date() + ""Annulation des modifications."");con.rollback();acgtools_core.AcgIO.SortieLog(ex.getMessage());acgtools_core.AcgIO.SortieLog(new Date() + ""Probléme lors de l'éxécution de la requète SQL :"");acgtools_core.AcgIO.SortieLog(RequeteSQL);retour = false;} finally {try {if (statement != null) {statement.close();}if (retour) {con.commit();acgtools_core.AcgIO.SortieLog(new Date() + "" - Création de l'incident : succès"");} else {con.rollback();acgtools_core.AcgIO.SortieLog(new Date() + "" - Création de l'incident : echec"");}if (con != null) {con.close();}} catch (Exception e) {acgtools_core.AcgIO.SortieLog(new Date() + ""Problème lors de la fermeture de la connection à la base de données"");}return retour;}}public static void copyFile(File src, File dst) throws IOException {LogUtil.d(TAG, ""Copying file %s to %s"", src, dst);FileChannel inChannel = null;FileChannel outChannel = null;try {inChannel = new FileInputStream(src).getChannel();outChannel = new FileOutputStream(dst).getChannel();inChannel.transferTo(0, inChannel.size(), outChannel);} finally {closeSafe(inChannel);closeSafe(outChannel);}}private int writeTraceFile(final File destination_file, final String trace_file_name, final String trace_file_path) {URL url = null;BufferedInputStream is = null;FileOutputStream fo = null;BufferedOutputStream os = null;int b = 0;if (destination_file == null) {return 0;}try {url = new URL(""http://"" + trace_file_path + ""/"" + trace_file_name);is = new BufferedInputStream(url.openStream());fo = new FileOutputStream(destination_file);os = new BufferedOutputStream(fo);while ((b = is.read()) != -1) {os.write(b);}os.flush();is.close();os.close();} catch (Exception e) {System.err.println(url.toString());Utilities.unexpectedException(e, this, CONTACT);return 0;}return 1;}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static byte[] hashFile(File file) {long size = file.length();long jump = (long) (size / (float) CHUNK_SIZE);MessageDigest digest;FileInputStream stream;try {stream = new FileInputStream(file);digest = MessageDigest.getInstance(""SHA-256"");if (size < CHUNK_SIZE * 4) {readAndUpdate(size, stream, digest);} else {if (stream.skip(jump) != jump) return null;readAndUpdate(CHUNK_SIZE, stream, digest);if (stream.skip(jump - CHUNK_SIZE) != jump - CHUNK_SIZE) return null;readAndUpdate(CHUNK_SIZE, stream, digest);if (stream.skip(jump - CHUNK_SIZE) != jump - CHUNK_SIZE) return null;readAndUpdate(CHUNK_SIZE, stream, digest);digest.update(Long.toString(size).getBytes());}return digest.digest();} catch (FileNotFoundException e) {return null;} catch (NoSuchAlgorithmException e) {return null;} catch (IOException e) {return null;}}public InstanceMonitor(String awsAccessId, String awsSecretKey, String bucketName, boolean first) throws IOException {this.awsAccessId = awsAccessId;this.awsSecretKey = awsSecretKey;props = new Properties();while (true) {try {s3 = new RestS3Service(new AWSCredentials(awsAccessId, awsSecretKey));bucket = new S3Bucket(bucketName);S3Object obj = s3.getObject(bucket, EW_PROPERTIES);props.load(obj.getDataInputStream());break;} catch (S3ServiceException ex) {logger.error(""problem fetching props from bucket, retrying"", ex);try {Thread.sleep(1000);} catch (InterruptedException iex) {}}}URL url = new URL(""http://169.254.169.254/latest/meta-data/hostname"");hostname = new BufferedReader(new InputStreamReader(url.openStream())).readLine();url = new URL(""http://169.254.169.254/latest/meta-data/instance-id"");instanceId = new BufferedReader(new InputStreamReader(url.openStream())).readLine();url = new URL(""http://169.254.169.254/latest/meta-data/public-ipv4"");externalIP = new BufferedReader(new InputStreamReader(url.openStream())).readLine();this.dns = new NetticaAPI(props.getProperty(NETTICA_USER), props.getProperty(NETTICA_PASS));this.userData = awsAccessId + "" "" + awsSecretKey + "" "" + bucketName;this.first = first;logger.info(""InstanceMonitor initialized, first="" + first);}protected byte[] mdDecode(String s, int type, byte[] salt) {try {MessageDigest md;StringBuffer hexString = new StringBuffer();if ((type == 5) && (salt != null)) {md = MessageDigest.getInstance(SHA);hexString.append(""{"" + SSHA + ""}"");} else if (type == 4) {md = MessageDigest.getInstance(SHA);hexString.append(""{"" + SHA + ""}"");} else if ((type == 3) && (salt != null)) {md = MessageDigest.getInstance(MD5);hexString.append(""{"" + SMD5 + ""}"");} else if (type == 2) {md = MessageDigest.getInstance(MD5);hexString.append(""{"" + MD5 + ""}"");} else {return (null);}md.reset();md.update(s.getBytes(""UTF-8""));if (salt != null) {md.update(salt);byte[] buff = md.digest();byte[] new_buf = new byte[buff.length + salt.length];for (int x = 0; x < buff.length; x++) new_buf[x] = buff[x];for (int x = buff.length; x < new_buf.length; x++) new_buf[x] = salt[x - buff.length];hexString.append(CBBase64.binaryToString(new_buf));} else {byte[] buff = md.digest();hexString.append(CBBase64.binaryToString(buff));}return hexString.toString().getBytes(""UTF-8"");} catch (UnsupportedEncodingException e) {log.log(Level.WARNING, ""Unexpected error encoding password "", e);e.printStackTrace();return new byte[0];} catch (java.security.NoSuchAlgorithmException e) {log.log(Level.WARNING, ""Unexpected error encoding password "", e);e.printStackTrace();return new byte[0];}}protected void innerProcess(CrawlURI curi) throws InterruptedException {if (!curi.isHttpTransaction()) {return;}if (!TextUtils.matches(""^text.*$"", curi.getContentType())) {return;}long maxsize = DEFAULT_MAX_SIZE_BYTES.longValue();try {maxsize = ((Long) getAttribute(curi, ATTR_MAX_SIZE_BYTES)).longValue();} catch (AttributeNotFoundException e) {logger.severe(""Missing max-size-bytes attribute when processing "" + curi.getURIString());}if (maxsize < curi.getContentSize() && maxsize > -1) {return;}String regexpr = """";try {regexpr = (String) getAttribute(curi, ATTR_STRIP_REG_EXPR);} catch (AttributeNotFoundException e2) {logger.severe(""Missing strip-reg-exp when processing "" + curi.getURIString());return;}ReplayCharSequence cs = null;try {cs = curi.getHttpRecorder().getReplayCharSequence();} catch (Exception e) {curi.addLocalizedError(this.getName(), e, ""Failed get of replay char sequence "" + curi.toString() + "" "" + e.getMessage());logger.warning(""Failed get of replay char sequence "" + curi.toString() + "" "" + e.getMessage() + "" "" + Thread.currentThread().getName());return;}MessageDigest digest = null;try {digest = MessageDigest.getInstance(""SHA1"");} catch (NoSuchAlgorithmException e1) {e1.printStackTrace();return;}digest.reset();String s = null;if (regexpr.length() == 0) {s = cs.toString();} else {Matcher m = TextUtils.getMatcher(regexpr, cs);s = m.replaceAll("" "");}digest.update(s.getBytes());byte[] newDigestValue = digest.digest();if (logger.isLoggable(Level.FINEST)) {logger.finest(""Recalculated content digest for "" + curi.getURIString() + "" old: "" + Base32.encode((byte[]) curi.getContentDigest()) + "", new: "" + Base32.encode(newDigestValue));}curi.setContentDigest(newDigestValue);}"	5
"public void doActionxxx() {try {System.out.println(""app: ggc"");String server_name = ""http://192.168.4.3:8080/"";server_name = server_name.trim();if (server_name.length() == 0) {server_name = ""http://www.atech-software.com/"";} else {if (!server_name.startsWith(""http://"")) server_name = ""http://"" + server_name;if (!server_name.endsWith(""/"")) server_name = server_name + ""/"";}URL url = new URL(server_name + ""ATechUpdateGetFile?"" + """" + ""file_id=1"" + ""&"" + ""version_requested=1"");InputStream is = url.openStream();RandomAccessFile raf = new RandomAccessFile(""/home/andy/test.jpg"", ""rw"");ArrayList<Integer> list = new ArrayList<Integer>();float size = 671200;long current_size = 0;System.out.println(""File size: "" + is.available());byte[] array = new byte[1024];while (is.available() > 0) {if (is.available() < 1024) {array = new byte[is.available()];}is.read(array);raf.write(array);current_size += array.length;System.out.println(""Progress: "" + ((current_size / size) * 100));}System.out.println(""Size Arr: "" + list.size());CheckSumUtility csu = new CheckSumUtility();System.out.println(""Checksum: "" + csu.getChecksumValue(""/home/andy/test.jpg""));} catch (Exception ex) {ex.printStackTrace();}}private String hashKey(String key) {String hashed = """";try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(key.getBytes());BigInteger hash = new BigInteger(1, md5.digest());hashed = hash.toString(16);} catch (Exception ex) {ex.printStackTrace();hashed = String.valueOf(key.hashCode());}return hashed;}private byte[] getMD5(String string) throws IMException {byte[] buffer = null;try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(string.getBytes(""utf-8""));buffer = md.digest();buffer = getHexString(buffer);} catch (NoSuchAlgorithmException e) {throw new IMException(e);} catch (UnsupportedEncodingException ue) {throw new IMException(ue);}return buffer;}public void load(String url) throws IOException {this.url = url;int col = url.indexOf(':');if (col > 1 && col < 5) {load(new URL(url).openStream());} else {if (new File(url).exists()) {System.out.println(""Loading JAD from file : "" + url);FileInputStream fin = new FileInputStream(url);try {load(fin);} finally {fin.close();}} else {InputStream in = getClass().getResourceAsStream(url);if (in != null) {System.out.println(""Loading JAD from classpath : "" + url);load(in);} else {throw new IOException(""\"""" + url + ""\"" was found in file system or classpath"");}}}}public static void main(String[] args) throws Exception {if (args.length != 2) {PrintUtil.prt(""arguments: sourcefile, destfile"");System.exit(1);}FileChannel in = new FileInputStream(args[0]).getChannel(), out = new FileOutputStream(args[1]).getChannel();ByteBuffer buff = ByteBuffer.allocate(BSIZE);while (in.read(buff) != -1) {PrintUtil.prt(""%%%"");buff.flip();out.write(buff);buff.clear();}}public Constructor run() throws Exception {String path = ""META-INF/services/"" + BeanletApplicationContext.class.getName();ClassLoader loader = Thread.currentThread().getContextClassLoader();final Enumeration<URL> urls;if (loader == null) {urls = BeanletApplicationContext.class.getClassLoader().getResources(path);} else {urls = loader.getResources(path);}while (urls.hasMoreElements()) {URL url = urls.nextElement();BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));try {String className = null;while ((className = reader.readLine()) != null) {final String name = className.trim();if (!name.startsWith(""#"") && !name.startsWith("";"") && !name.startsWith(""//"")) {final Class<?> cls;if (loader == null) {cls = Class.forName(name);} else {cls = Class.forName(name, true, loader);}int m = cls.getModifiers();if (BeanletApplicationContext.class.isAssignableFrom(cls) && !Modifier.isAbstract(m) && !Modifier.isInterface(m)) {Constructor constructor = cls.getDeclaredConstructor();if (!Modifier.isPublic(constructor.getModifiers())) {constructor.setAccessible(true);}return constructor;} else {throw new ClassCastException(cls.getName());}}}} finally {reader.close();}}throw new BeanletApplicationException(""No "" + ""BeanletApplicationContext implementation "" + ""found."");}public synchronized FTPClient getFTPClient(String User, String Password) throws IOException {if (logger.isDebugEnabled()) {logger.debug(""getFTPClient(String, String) - start"");}while ((counter >= maxClients)) {try {wait();} catch (InterruptedException e) {logger.error(""getFTPClient(String, String)"", e);e.printStackTrace();}}FTPClient result = null;String key = User.concat(Password);logger.debug(""versuche vorhandenen FTPClient aus Liste zu lesen"");if (Clients != null) {if (Clients.containsKey(key)) {LinkedList ClientList = (LinkedList) Clients.get(key);if (!ClientList.isEmpty()) do {result = (FTPClient) ClientList.getLast();logger.debug(""-- hole einen Client aus der Liste: "" + result.toString());ClientList.removeLast();if (!result.isConnected()) {logger.debug(""---- nicht mehr verbunden."");result = null;} else {try {result.changeWorkingDirectory(""/"");} catch (IOException e) {logger.debug(""---- schmei�t Exception bei Zugriff."");result = null;}}} while (result == null && !ClientList.isEmpty());if (ClientList.isEmpty()) {Clients.remove(key);}} else {}} else logger.debug(""-- keine Liste vorhanden."");if (result == null) {logger.debug(""Kein FTPCLient verf�gbar, erstelle einen neuen."");result = new FTPClient();logger.debug(""-- Versuche Connect"");result.connect(Host);logger.debug(""-- Versuche Login"");result.login(User, Password);result.setFileType(FTPClient.BINARY_FILE_TYPE);if (counter == maxClients - 1) {RemoveBufferedClient();}}logger.debug(""OK: neuer FTPClient ist "" + result.toString());;counter++;if (logger.isDebugEnabled()) {logger.debug(""getFTPClient(String, String) - end"");}return result;}protected void fixupCategoryAncestry(Context context) throws DataStoreException {Connection db = null;Statement s = null;try {db = context.getConnection();db.setAutoCommit(false);s = db.createStatement();s.executeUpdate(""delete from category_ancestry"");walkTreeFixing(db, CATEGORYROOT);db.commit();context.put(Form.ACTIONEXECUTEDTOKEN, ""Category Ancestry regenerated"");} catch (SQLException sex) {try {db.rollback();} catch (SQLException e) {e.printStackTrace();}throw new DataStoreException(""Failed to refresh category ancestry"");} finally {if (s != null) {try {s.close();} catch (SQLException e) {e.printStackTrace();}}if (db != null) {context.releaseConnection(db);}}}@Overrideprotected byte[] fetch0() throws IOException {if (sourceFile.getProtocol().equalsIgnoreCase(""jar"")) {throw new IOException(""Jar protocol unsupported!"");} else {URL url;if (sourceFile.getFile().endsWith(CLASS_FILE_EXTENSION)) {url = sourceFile;} else {url = new URL(sourceFile, className.replace(PACKAGE_SEPARATOR, URL_DIRECTORY_SEPARATOR) + CLASS_FILE_EXTENSION);}InputStream stream = url.openStream();try {ByteArrayOutputStream output = new ByteArrayOutputStream();byte[] buffer = new byte[PACKET_SIZE];int bytesRead;while ((bytesRead = stream.read(buffer, 0, buffer.length)) != -1) {output.write(buffer, 0, bytesRead);}return output.toByteArray();} finally {stream.close();}}}public static String generateMD5(final String data) {final StringBuilder hash = new StringBuilder(64);try {final MessageDigest sha1 = MessageDigest.getInstance(""MD5"");sha1.update(data.getBytes());final byte[] digest = sha1.digest();for (byte aDigest : digest) {String hex = Integer.toHexString(aDigest);if (hex.length() == 1) {hex = ""0"" + hex;}hex = hex.substring(hex.length() - 2);hash.append(hex);}} catch (NoSuchAlgorithmException e) {}return hash.toString();}"	5
"@HttpAction(name = ""map.calibrate"", method = { HttpAction.Method.post }, responseType = ""text/plain"", parameters = { @HttpParameter(name = ""user""), @HttpParameter(name = ""guid""), @HttpParameter(name = ""uploadFile""), @HttpParameter(name = ""mapUrl""), @HttpParameter(name = ""mapSource""), @HttpParameter(name = ""south""), @HttpParameter(name = ""west""), @HttpParameter(name = ""north""), @HttpParameter(name = ""east"") })@HttpAuthentication(method = { HttpAuthentication.Method.WSSE })public String calibrate(User user, String guid, Collection<FileItem> uploadFile, String mapUrl, String mapSource, String south, String west, String north, String east) throws HttpRpcException {GenericDAO<UserMapOriginal> dao = DAOFactory.createDAO(UserMapOriginal.class);try {TransactionManager.beginTransaction();} catch (Throwable e) {logger.error(e);return ""FAIL"";}try {final UserMapOriginal mapOriginal = dao.findUniqueByCriteria(Expression.eq(""guid"", guid));if (mapOriginal == null) throw new HttpRpcException(ErrorConstant.ERROR_NOT_FOUND, ""map"");if (UserMapOriginal.SubState.INPROC.equals(mapOriginal.getSubstate())) throw new HttpRpcException(ErrorConstant.ERROR_ILLEGAL_OBJECT_STATE, ""map"");if (UserMapOriginal.State.COMBINE.equals(mapOriginal.getState())) throw new HttpRpcException(ErrorConstant.ERROR_ILLEGAL_OBJECT_STATE, ""map"");if (!""download"".equals(mapSource) && !""upload"".equals(mapSource) && !""current"".equals(mapSource)) throw new HttpRpcException(ErrorConstant.ERROR_INVALID_OBJECT, ""mapSource"");try {mapOriginal.setSWLat(Double.parseDouble(south));} catch (Throwable t) {throw new HttpRpcException(ErrorConstant.ERROR_INVALID_OBJECT, ""south"");}try {mapOriginal.setSWLon(Double.parseDouble(west));} catch (Throwable t) {throw new HttpRpcException(ErrorConstant.ERROR_INVALID_OBJECT, ""west"");}try {mapOriginal.setNELat(Double.parseDouble(north));} catch (Throwable t) {throw new HttpRpcException(ErrorConstant.ERROR_INVALID_OBJECT, ""north"");}try {mapOriginal.setNELon(Double.parseDouble(east));} catch (Throwable t) {throw new HttpRpcException(ErrorConstant.ERROR_INVALID_OBJECT, ""east"");}mapOriginal.setState(UserMapOriginal.State.CALIBRATE);mapOriginal.setSubstate(UserMapOriginal.SubState.INPROC);final XFile mapStorage = new XFile(new XFile(Configuration.getInstance().getPrivateMapStorage().toString()), mapOriginal.getGuid());mapStorage.mkdir();if (""download"".equals(mapSource)) {final XFile tmpFile;final URI uri = new URI(mapUrl);String query = (StringUtils.isEmpty(uri.getQuery())) ? ""?BBOX="" : ""&BBOX="";query += west + "","" + south + "","" + east + "","" + north;URLConnection con = (new URL(mapUrl + query)).openConnection();if (con == null || con.getContentLength() == 0) throw new HttpRpcException(ErrorConstant.ERROR_INVALID_RESOURCE, ""mapUrl"");if (!con.getContentType().startsWith(""image/"")) throw new HttpRpcException(ErrorConstant.ERROR_INVALID_OBJECT_TYPE, ""mapUrl"");tmpFile = new XFile(mapStorage, mapOriginal.getGuid());XFileOutputStream out = new XFileOutputStream(tmpFile);IOUtils.copy(con.getInputStream(), out);out.flush();out.close();} else if (""upload"".equals(mapSource)) {final XFile tmpFile;final FileItem file = uploadFile.iterator().next();if (file == null || file.getSize() == 0) throw new HttpRpcException(ErrorConstant.ERROR_INVALID_RESOURCE, ""uploadFile"");if (!file.getContentType().startsWith(""image/"")) throw new HttpRpcException(ErrorConstant.ERROR_INVALID_OBJECT_TYPE, ""uploadFile"");tmpFile = new XFile(mapStorage, mapOriginal.getGuid());XFileOutputStream out = new XFileOutputStream(tmpFile);IOUtils.copy(file.getInputStream(), out);out.flush();out.close();} else if (""current"".equals(mapSource)) {}dao.update(mapOriginal);TransactionManager.commitTransaction();try {PoolClientInterface pool = PoolFactory.getInstance().getClientPool();if (pool == null) throw ErrorConstant.EXCEPTION_INTERNAL;pool.put(mapOriginal, new StatesStack(new byte[] { 0x00, 0x18 }), GeneralCompleteStrategy.class);} catch (Throwable t) {logger.error(t);}return ""SUCCESS"";} catch (HttpRpcException e) {TransactionManager.rollbackTransaction();logger.error(e);return ""FAIL"";} catch (Throwable e) {logger.error(e);TransactionManager.rollbackTransaction();return ""FAIL"";}}protected void initDefaultRolesFile() {String webConfigPath = System.getProperty(""dcm4chee-web3.cfg.path"", ""conf/dcm4chee-web3"");File mappingFile = new File(webConfigPath + ""roles.json"");if (!mappingFile.isAbsolute()) mappingFile = new File(ServerConfigLocator.locate().getServerHomeDir(), mappingFile.getPath());if (mappingFile.exists()) return;log.info(""Init default Role Mapping file! mappingFile:"" + mappingFile);if (mappingFile.getParentFile().mkdirs()) log.info(""M-WRITE dir:"" + mappingFile.getParent());FileChannel fos = null;InputStream is = null;try {URL url = getClass().getResource(""/META-INF/roles-default.json"");log.info(""Use default Mapping File content of url:"" + url);is = url.openStream();ReadableByteChannel inCh = Channels.newChannel(is);fos = new FileOutputStream(mappingFile).getChannel();int pos = 0;while (is.available() > 0) pos += fos.transferFrom(inCh, pos, is.available());} catch (Exception e) {log.error(""Roles file doesn't exist and the default can't be created!"", e);} finally {close(is);close(fos);}}public boolean ImportData() {if (fileData == null) {return false;}String line = new String();BufferedReader br;BufferedWriter bw;String tableName = new String();List<String> columns = new ArrayList<String>();long recordsNumber;String sql = new String();File tempDataFile;String filePath = new String();try {br = new BufferedReader(new InputStreamReader(new FileInputStream(fileData)));if (br.ready()) {if ((line = br.readLine()) != null) {do {tableName = siteName + ""_"" + getTableName(line);columns = getTableColumns(line);tempDataFile = new File(""./Data/"" + tableName + "".txt"");tempDataFile.createNewFile();filePath = tempDataFile.getCanonicalPath();sql = generateSQL(tableName, columns, filePath);recordsNumber = getRecordNumber(line);bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(tempDataFile)));for (long i = 0; i < recordsNumber; i++) {bw.write(br.readLine() + ""\r\n"");}bw.close();if (sqlConnector != null) {sqlConnector.executeSQL(sql);} else {return false;}} while ((line = br.readLine()) != null);}br.close();}} catch (Exception e) {ExceptionHandler.handleExcptin(e);}return true;}private Bitmap fetchImage(String urlstr) throws Exception {URL url;url = new URL(urlstr);HttpURLConnection c = (HttpURLConnection) url.openConnection();c.setDoInput(true);c.setRequestProperty(""User-Agent"", ""Agent"");c.connect();InputStream is = c.getInputStream();Bitmap img;img = BitmapFactory.decodeStream(is);return img;}private Response postRequest(String urlString, String params) throws Exception {URL url = new URL(urlString);HttpURLConnection uc = (HttpURLConnection) url.openConnection();uc.setDoInput(true);uc.setDoOutput(true);uc.setUseCaches(false);uc.setAllowUserInteraction(false);uc.setRequestMethod(""POST"");uc.setRequestProperty(""ContentType"", ""application/x-www-form-urlencoded"");uc.setRequestProperty(""User-Agent"", ""CytoLinkFromMJ"");if (cookie != null) uc.setRequestProperty(""Cookie"", cookie);PrintStream out = new PrintStream(uc.getOutputStream());out.print(params);out.flush();out.close();uc.connect();StringBuffer sb = new StringBuffer();String inputLine;BufferedReader in = new BufferedReader(new InputStreamReader(uc.getInputStream()));while ((inputLine = in.readLine()) != null) {sb.append(inputLine + ""\n"");}in.close();Response res = new Response();res.content = sb.toString();res.contentType = uc.getHeaderField(""Content-Type"");res.cookie = uc.getHeaderField(""Set-Cookie"");return res;}void loadImage(final int runnumber, final String surl, final StatusCallback status) {Runnable run = new Runnable() {public void run() {try {if (sync == SyncType.SyncSpaced || sync == SyncType.Spaced) {Thread.sleep(spaceMillis);}URL url = new URL(surl + ""&requestId="" + runnumber);long t0 = System.currentTimeMillis();InputStream in = url.openStream();transfer(in, new FileOutputStream(new File(outputFolder, """" + runnumber + "".png"")));BufferedImage image = ImageIO.read(new File(outputFolder, """" + runnumber + "".png""));status.score(runnumber, System.currentTimeMillis() - t0);ImageIO.write(image, ""png"", new FileOutputStream(new File(outputFolder, """" + runnumber + "".png"")));if (false) {int whiteCount = 0;for (int i = 0; i < image.getWidth(); i++) {for (int j = 0; j < image.getHeight(); j++) {whiteCount += image.getRGB(i, j) == -1 ? 1 : 0;}}System.err.println(""##"" + runnumber + ""#: "" + whiteCount);if (whiteCount < 227564) {System.err.println(""whiteCount fails!!!!"");System.err.println(""whiteCount fails!!!!"");System.exit(0);}}} catch (Exception ex) {System.err.println(""##"" + runnumber + ""#: Exception!!! ###"");ex.printStackTrace();status.score(runnumber, -999);}}};if (sync == SyncType.SyncSpaced || sync == SyncType.Sync) {run.run();} else {new Thread(run).start();}}public void run() {try {if (sync == SyncType.SyncSpaced || sync == SyncType.Spaced) {Thread.sleep(spaceMillis);}URL url = new URL(surl + ""&requestId="" + runnumber);long t0 = System.currentTimeMillis();InputStream in = url.openStream();transfer(in, new FileOutputStream(new File(outputFolder, """" + runnumber + "".png"")));BufferedImage image = ImageIO.read(new File(outputFolder, """" + runnumber + "".png""));status.score(runnumber, System.currentTimeMillis() - t0);ImageIO.write(image, ""png"", new FileOutputStream(new File(outputFolder, """" + runnumber + "".png"")));if (false) {int whiteCount = 0;for (int i = 0; i < image.getWidth(); i++) {for (int j = 0; j < image.getHeight(); j++) {whiteCount += image.getRGB(i, j) == -1 ? 1 : 0;}}System.err.println(""##"" + runnumber + ""#: "" + whiteCount);if (whiteCount < 227564) {System.err.println(""whiteCount fails!!!!"");System.err.println(""whiteCount fails!!!!"");System.exit(0);}}} catch (Exception ex) {System.err.println(""##"" + runnumber + ""#: Exception!!! ###"");ex.printStackTrace();status.score(runnumber, -999);}}@SuppressWarnings(""unused"")private String getMD5(String value) {MessageDigest md5;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {return """";}md5.reset();md5.update(value.getBytes());byte[] messageDigest = md5.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < messageDigest.length; i++) {hexString.append(Integer.toHexString(0xFF & messageDigest[i]));}String hashedPassword = hexString.toString();return hashedPassword;}public static void main(String[] args) {if (args.length == 0) {System.out.println(""Specify name of the file, just one entry per line"");System.exit(0);}File inFile = new File(args[0]);BufferedReader myBR = null;File outFile = new File(args[0] + "".xml"");BufferedWriter myBW = null;try {myBR = new BufferedReader(new FileReader(inFile));myBW = new BufferedWriter(new FileWriter(outFile));} catch (Exception ex) {System.out.println(""IN: "" + inFile.getAbsolutePath());System.out.println(""OUT: "" + outFile.getAbsolutePath());ex.printStackTrace();System.exit(0);}try {String readLine;while ((readLine = myBR.readLine()) != null) {myBW.write(""<dbColumn name=\"""" + readLine + ""\"" display=\"""" + readLine + ""\"" panel=\""CENTER\""  >"");myBW.write(""\n"");myBW.write(""<dbType name=\""text\"" maxVal=\""10\"" defaultVal=\""\"" sizeX=\""5\""/>"");myBW.write(""\n"");myBW.write(""</dbColumn>"");myBW.write(""\n"");}myBW.close();myBR.close();} catch (Exception ex) {ex.printStackTrace();System.exit(0);}System.out.println(""OUT: "" + outFile.getAbsolutePath());System.out.println(""erzeugt"");}protected URLConnection getConnection(String uri, String data) throws MalformedURLException, IOException {URL url = new URL(uri);URLConnection conn = url.openConnection();conn.setConnectTimeout((int) MINUTE / 2);conn.setReadTimeout((int) MINUTE / 2);return conn;}"	5
"public static void bubble(double[] a) {for (int i = a.length - 1; i > 0; i--) for (int j = 0; j < i; j++) if (a[j] > a[j + 1]) {double temp = a[j];a[j] = a[j + 1];a[j + 1] = temp;}}public static String getRandomUserAgent() {if (USER_AGENT_CACHE == null) {Collection<String> userAgentsCache = new ArrayList<String>();try {URL url = Tools.getResource(UserAgent.class.getClassLoader(), ""user-agents-browser.txt"");BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String str;while ((str = in.readLine()) != null) {userAgentsCache.add(str);}in.close();USER_AGENT_CACHE = userAgentsCache.toArray(new String[userAgentsCache.size()]);} catch (Exception e) {System.err.println(""Can not read file; using default user-agent; error message: "" + e.getMessage());return DEFAULT_USER_AGENT;}}return USER_AGENT_CACHE[new Random().nextInt(USER_AGENT_CACHE.length)];}public String contactService(String service, StringBuffer xmlRequest) throws Exception {Logger.debug(UPSConnections.class, ""UPS CONNECTIONS ***** Started "" + service + "" "" + new Date().toString() + "" *****"");HttpURLConnection connection;URL url;String response = """";try {Logger.debug(UPSConnections.class, ""connect to "" + protocol + ""://"" + hostname + ""/"" + URLPrefix + ""/"" + service);if (protocol.equalsIgnoreCase(""https"")) {java.security.Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());System.getProperties().put(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");url = new URL(protocol + ""://"" + hostname + ""/"" + URLPrefix + ""/"" + service);connection = (HttpsURLConnection) url.openConnection();} else {url = new URL(protocol + ""://"" + hostname + ""/"" + URLPrefix + ""/"" + service);connection = (HttpURLConnection) url.openConnection();}Logger.debug(UPSConnections.class, ""Establishing connection with "" + url.toString());connection.setDoOutput(true);connection.setDoInput(true);connection.setUseCaches(false);OutputStream out = connection.getOutputStream();StringBuffer request = new StringBuffer();request.append(accessXMLRequest());request.append(xmlRequest);out.write((request.toString()).getBytes());Logger.debug(UPSConnections.class, ""Transmission sent to "" + url.toString() + "":\n"" + xmlRequest);out.close();try {response = readURLConnection(connection);} catch (Exception e) {Logger.debug(UPSConnections.class, ""Error in reading URL Connection"" + e.getMessage());throw e;}Logger.debug(UPSConnections.class, ""Response = "" + response);} catch (Exception e1) {Logger.info(UPSConnections.class, ""Error sending data to server"" + e1.toString());Logger.debug(UPSConnections.class, ""Error sending data to server"" + e1.toString());} finally {Logger.info(UPSConnections.class, ""****** Transmission Finished "" + service + "" "" + new Date().toString() + "" *********"");Logger.debug(UPSConnections.class, ""****** Transmission Finished "" + service + "" "" + new Date().toString() + "" *********"");}return response;}private static void loadQueryProcessorFactories() {qpFactoryMap = new HashMap<String, QueryProcessorFactoryIF>();Enumeration<URL> resources = null;try {resources = QueryUtils.class.getClassLoader().getResources(RESOURCE_STRING);} catch (IOException e) {log.error(""Error while trying to look for "" + ""QueryProcessorFactoryIF implementations."", e);}while (resources != null && resources.hasMoreElements()) {URL url = resources.nextElement();InputStream is = null;try {is = url.openStream();} catch (IOException e) {log.warn(""Error opening stream to QueryProcessorFactoryIF service description."", e);}if (is != null) {BufferedReader rdr = new BufferedReader(new InputStreamReader(is));String line;try {while ((line = rdr.readLine()) != null) {try {ClassLoader classLoader = Thread.currentThread().getContextClassLoader();Class<?> c = Class.forName(line, true, classLoader);if (QueryProcessorFactoryIF.class.isAssignableFrom(c)) {QueryProcessorFactoryIF factory = (QueryProcessorFactoryIF) c.newInstance();qpFactoryMap.put(factory.getQueryLanguage().toUpperCase(), factory);} else {log.warn(""Wrong entry for QueryProcessorFactoryIF service "" + ""description, '"" + line + ""' is not implementing the "" + ""correct interface."");}} catch (Exception e) {log.warn(""Could not create an instance for "" + ""QueryProcessorFactoryIF service '"" + line + ""'."");}}} catch (IOException e) {log.warn(""Could not read from QueryProcessorFactoryIF "" + ""service descriptor."", e);}}}if (!qpFactoryMap.containsKey(DEFAULT_LANGUAGE)) {qpFactoryMap.put(DEFAULT_LANGUAGE, new TologQueryProcessorFactory());}}public static String md5String(String string) {try {MessageDigest msgDigest = MessageDigest.getInstance(""MD5"");msgDigest.update(string.getBytes(""UTF-8""));byte[] digest = msgDigest.digest();String result = """";for (int i = 0; i < digest.length; i++) {int value = digest[i];if (value < 0) value += 256;result += Integer.toHexString(value);}return result;} catch (UnsupportedEncodingException error) {throw new IllegalArgumentException(error);} catch (NoSuchAlgorithmException error) {throw new IllegalArgumentException(error);}}public static InputStream openURL(String url, ConnectData data) {try {URLConnection con = new URL(url).openConnection();con.setConnectTimeout(TIMEOUT);con.setReadTimeout(TIMEOUT);con.setUseCaches(false);con.setRequestProperty(""Accept-Charset"", ""utf-8"");setUA(con);if (data.cookie != null) con.setRequestProperty(""Cookie"", data.cookie);InputStream is = con.getInputStream();parseCookie(con, data);return new BufferedInputStream(is);} catch (IOException ioe) {Log.except(""failed to open URL "" + url, ioe);}return null;}public static InputStream sendReq(String url, String content, ConnectData data) {try {URLConnection con = new URL(url).openConnection();con.setConnectTimeout(TIMEOUT);con.setReadTimeout(TIMEOUT);con.setUseCaches(false);setUA(con);con.setRequestProperty(""Accept-Charset"", ""utf-8"");con.setDoOutput(true);con.setRequestProperty(""Content-Type"", ""application/x-www-form-urlencoded"");if (data.cookie != null) con.setRequestProperty(""Cookie"", data.cookie);HttpURLConnection httpurl = (HttpURLConnection) con;httpurl.setRequestMethod(""POST"");Writer wr = new OutputStreamWriter(con.getOutputStream());wr.write(content);wr.flush();con.connect();InputStream is = con.getInputStream();is = new BufferedInputStream(is);wr.close();parseCookie(con, data);return is;} catch (IOException ioe) {Log.except(""failed to send request "" + url, ioe);}return null;}private void reloadData(String dataSourceUrl) {try {URL url = new URL(dataSourceUrl);InputStream is = url.openStream();if (progressMonitor.isCanceled() == false) {progressMonitor.setNote(""Building classifications..."");progressMonitor.setProgress(2);mediator.loadClassificationTree(is);}} catch (IOException e) {e.printStackTrace();}}public static void copyFile(IPath fromFileName, IPath toFileName) throws IOException {File fromFile = fromFileName.toFile();File toFile = toFileName.toFile();if (!fromFile.exists()) throw new IOException(""FileCopy: "" + ""no such source file: "" + fromFileName);if (!fromFile.isFile()) throw new IOException(""FileCopy: "" + ""can't copy directory: "" + fromFileName);if (!fromFile.canRead()) throw new IOException(""FileCopy: "" + ""source file is unreadable: "" + fromFileName);if (toFile.isDirectory()) toFile = new File(toFile, fromFile.getName());if (toFile.exists()) {if (!toFile.canWrite()) throw new IOException(""FileCopy: "" + ""destination file is unwriteable: "" + toFileName);} else {String parent = toFile.getParent();if (parent == null) parent = System.getProperty(""user.dir"");File dir = new File(parent);if (!dir.exists()) throw new IOException(""FileCopy: "" + ""destination directory doesn't exist: "" + parent);if (dir.isFile()) throw new IOException(""FileCopy: "" + ""destination is not a directory: "" + parent);if (!dir.canWrite()) throw new IOException(""FileCopy: "" + ""destination directory is unwriteable: "" + parent);}InputStream from = null;OutputStream to = null;try {from = new BufferedInputStream(new FileInputStream(fromFile));to = new BufferedOutputStream(new FileOutputStream(toFile));byte[] buffer = new byte[4096];int bytesRead;while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead);} finally {if (from != null) try {from.close();} catch (IOException e) {}if (to != null) try {to.close();} catch (IOException e) {}}}public static ArrayList<FriendInfo> downloadFriendsList(String username) {try {URL url;url = new URL(WS_URL + ""/user/"" + URLEncoder.encode(username, ""UTF-8"") + ""/friends.xml"");HttpURLConnection conn = (HttpURLConnection) url.openConnection();conn.connect();InputStream is = conn.getInputStream();DocumentBuilderFactory dbFac = DocumentBuilderFactory.newInstance();DocumentBuilder db = dbFac.newDocumentBuilder();Document doc = db.parse(is);NodeList friends = doc.getElementsByTagName(""user"");ArrayList<FriendInfo> result = new ArrayList<FriendInfo>();for (int i = 0; i < friends.getLength(); i++) try {result.add(new FriendInfo((Element) friends.item(i)));} catch (Utils.ParseException e) {Log.e(TAG, ""in downloadFriendsList"", e);return null;}return result;} catch (Exception e) {Log.e(TAG, ""in downloadFriendsList"", e);return null;}}"	5
"public TextureData newTextureData(GLProfile glp, URL url, int internalFormat, int pixelFormat, boolean mipmap, String fileSuffix) throws IOException {InputStream stream = new BufferedInputStream(url.openStream());try {return newTextureData(glp, stream, internalFormat, pixelFormat, mipmap, fileSuffix);} finally {stream.close();}}public TextureData newTextureData(GLProfile glp, URL url, int internalFormat, int pixelFormat, boolean mipmap, String fileSuffix) throws IOException {InputStream stream = new BufferedInputStream(url.openStream());try {return newTextureData(glp, stream, internalFormat, pixelFormat, mipmap, fileSuffix);} finally {stream.close();}}private void loadTrustAnchors(final String keystoreLocation) {LOG.debug(""keystore location: "" + keystoreLocation);try {if (keystoreLocation == null) {throw new NullPointerException(""No TrustAnchor KeyStore name is set"");}InputStream keyStoreStream = null;if (new File(keystoreLocation).exists()) {keyStoreStream = new FileInputStream(keystoreLocation);} else if (new File(""../trust1.keystore"").exists()) {keyStoreStream = new FileInputStream(new File(""../trust1.keystore""));} else if (new File(""trust1.keystore"").exists()) {keyStoreStream = new FileInputStream(new File(""../trust1.keystore""));} else {URL url = Thread.currentThread().getContextClassLoader().getResource(""trust1.keystore"");if (url != null) keyStoreStream = new BufferedInputStream(url.openStream());}KeyStore ks = KeyStore.getInstance(trustStoreType);ks.load(keyStoreStream, trustStorePassword.toCharArray());Enumeration<String> aliases = ks.aliases();while (aliases.hasMoreElements()) {String alias = aliases.nextElement();LOG.debug(""inspecting alias "" + alias);if (ks.entryInstanceOf(alias, KeyStore.TrustedCertificateEntry.class)) {LOG.debug(""Adding TrustAnchor: "" + ((X509Certificate) ks.getCertificate(alias)).getSubjectX500Principal().getName());TrustAnchor ta = new TrustAnchor((X509Certificate) (ks.getCertificate(alias)), null);this.trustAnchors.add(ta);}}} catch (Exception ex) {LOG.error(""Error loading TrustAnchors"", ex);this.trustAnchors = null;}}public String hash(String senha) {String result = """";try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(senha.getBytes());byte[] hashMd5 = md.digest();for (int i = 0; i < hashMd5.length; i++) result += Integer.toHexString((((hashMd5[i] >> 4) & 0xf) << 4) | (hashMd5[i] & 0xf));} catch (NoSuchAlgorithmException ex) {Logger.getInstancia().log(TipoLog.ERRO, ex);}return result;}public static boolean doExecuteSQL(String sql) {session = currentSession();Connection conn = session.connection();PreparedStatement ps = null;try {conn.setAutoCommit(false);log(""[SmsManager] sql:"" + sql);ps = conn.prepareStatement(sql);ps.executeUpdate();conn.commit();conn.setAutoCommit(true);return true;} catch (SQLException e) {e.printStackTrace();try {conn.rollback();} catch (SQLException e1) {e1.printStackTrace();}return false;} finally {if (conn != null) try {conn.close();} catch (SQLException e) {e.printStackTrace();}if (ps != null) {try {ps.close();} catch (SQLException e) {e.printStackTrace();}}closeHibernateSession();}}public static boolean doExecuteBatchSQL(List<String> sql) {session = currentSession();Connection conn = session.connection();PreparedStatement ps = null;try {conn.setAutoCommit(false);Iterator iter = sql.iterator();while (iter.hasNext()) {String sqlstr = (String) iter.next();log(""[SmsManager] doing sql:"" + sqlstr);ps = conn.prepareStatement(sqlstr);ps.executeUpdate();}conn.commit();conn.setAutoCommit(true);return true;} catch (SQLException e) {e.printStackTrace();try {conn.rollback();} catch (SQLException e1) {e1.printStackTrace();}return false;} finally {if (conn != null) try {conn.close();} catch (SQLException e) {e.printStackTrace();}if (ps != null) {try {ps.close();} catch (SQLException e) {e.printStackTrace();}}closeHibernateSession();}}public void init() {System.out.println(""Init applet..."");int port = Integer.parseInt(getParameter(""port""));int useUDP = Integer.parseInt(getParameter(""udp""));boolean bUseUDP = false;if (useUDP > 0) bUseUDP = true;m_strWorld = getParameter(""world"");m_strHost = this.getCodeBase().getHost();try {new EnvironmentMap(getParameter(""vrwmap""));} catch (Throwable t) {System.out.println(t.getMessage());}URL urlExperiment = null;InputStream expStream = null;try {String strPathExperiment = getParameter(""experiment"");if (strPathExperiment.length() > 0) {urlExperiment = new URL(getCodeBase(), strPathExperiment);expStream = urlExperiment.openStream();}} catch (java.net.MalformedURLException e) {System.out.println(""Couldn't open url experiment: badly specified URL "" + e.getMessage());} catch (Throwable t) {System.out.println(""Couldn't open url experiment: "" + t.getMessage());}try {System.out.println(""Creating client, logging to "" + m_strWorld);m_VRWClient = new VRWClient(m_strHost, port, true, bUseUDP);m_VRWClient.setInApplet(true);m_VRWClient.login(m_strWorld);} catch (java.io.IOException e) {System.out.println(""IOException creating the VRWClient"");}try {jsobj = JSObject.getWindow(this);} catch (Throwable t) {System.out.println(""Exception getting Java Script Interface: "" + t.getMessage());}refApplet = this;m_frmVRWConsole = new VRWConsoleFrame();m_frmVRWConsole.setTitle(""VRW Client Console"");m_frmVRWConsole.pack();m_frmVRWConsole.setSize(Math.max(300, m_frmVRWConsole.getSize().width), Math.max(200, m_frmVRWConsole.getSize().height));if (expStream != null) {System.out.println(""Passing experiment stream to VRWConsoleFrame"");m_frmVRWConsole.loadExperiment(expStream);}m_frmVRWConsole.setVisible(true);}public static void main(final String[] args) throws RecognitionException, TokenStreamException, IOException, IllegalOptionValueException, UnknownOptionException {try {CmdLineParser cmdLineParser = new CmdLineParser();Option formatOption = cmdLineParser.addStringOption('f', ""format"");Option encodingOption = cmdLineParser.addStringOption('c', ""charset"");cmdLineParser.parse(args);String format = (String) cmdLineParser.getOptionValue(formatOption);String encoding = (String) cmdLineParser.getOptionValue(encodingOption);if (encoding == null || encoding.trim().equals("""")) {encoding = ""utf-8"";System.out.println(""Defaulting to output charset utf-8 as argument -c is missing or not valid."");}String[] remainingArgs = cmdLineParser.getRemainingArgs();if (remainingArgs.length != 2) {printUsage(""Input and output file are not specified correctly. "");}File inputFile = new File(remainingArgs[0]);if (!inputFile.exists()) {printUsage(""Input file "" + remainingArgs[0] + "" does not exist. "");}File outputFile = new File(remainingArgs[1]);if (!outputFile.exists()) {outputFile.createNewFile();}if (format == null || format.trim().equals("""")) {format = (String) FileUtil.cutExtension(outputFile.getName()).getValue();}if (""tex"".equals(format)) {Reader reader = new LatexEncoderReader(new FileReader(inputFile));OutputStreamWriter out = new OutputStreamWriter(new FileOutputStream(outputFile), encoding);char[] buffer = new char[1024];int read;do {read = reader.read(buffer);if (read > 0) {out.write(buffer, 0, read);}} while (read != -1);out.flush();out.close();} else {printUsage(""Format not specified via argument -f. Also guessing for the extension of output file "" + outputFile.getName() + "" failed"");}} catch (Exception ex) {ex.printStackTrace();printUsage(ex.getMessage());}}private SystemProperties() {Properties p = new Properties();ClassLoader classLoader = getClass().getClassLoader();try {URL url = classLoader.getResource(""system.properties"");if (url != null) {InputStream is = url.openStream();p.load(is);is.close();System.out.println(""Loading "" + url);}} catch (Exception e) {e.printStackTrace();}try {URL url = classLoader.getResource(""system-ext.properties"");if (url != null) {InputStream is = url.openStream();p.load(is);is.close();System.out.println(""Loading "" + url);}} catch (Exception e) {e.printStackTrace();}boolean systemPropertiesLoad = GetterUtil.get(System.getProperty(SYSTEM_PROPERTIES_LOAD), true);boolean systemPropertiesFinal = GetterUtil.get(System.getProperty(SYSTEM_PROPERTIES_FINAL), true);if (systemPropertiesLoad) {Enumeration enu = p.propertyNames();while (enu.hasMoreElements()) {String key = (String) enu.nextElement();if (systemPropertiesFinal || Validator.isNull(System.getProperty(key))) {System.setProperty(key, (String) p.get(key));}}}PropertiesUtil.fromProperties(p, _props);}public static void uploadFile(File in, String out, String host, int port, String path, String login, String password, boolean renameIfExist) throws IOException {FTPClient ftp = null;try {m_logCat.info(""Uploading "" + in + "" to "" + host + "":"" + port + "" at "" + path);ftp = new FTPClient();int reply;ftp.connect(host, port);m_logCat.info(""Connected to "" + host + ""... Trying to authenticate"");reply = ftp.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {ftp.disconnect();m_logCat.error(""FTP server "" + host + "" refused connection."");throw new IOException(""Cannot connect to the FTP Server: connection refused."");}if (!ftp.login(login, password)) {ftp.logout();throw new IOException(""Cannot connect to the FTP Server: login / password is invalid!"");}ftp.setFileType(FTP.BINARY_FILE_TYPE);if (!ftp.changeWorkingDirectory(path)) {m_logCat.warn(""Remote working directory: "" + path + ""does not exist on the FTP Server ..."");m_logCat.info(""Trying to create remote directory: "" + path);if (!ftp.makeDirectory(path)) {m_logCat.error(""Failed to create remote directory: "" + path);throw new IOException(""Failed to store "" + in + "" in the remote directory: "" + path);}if (!ftp.changeWorkingDirectory(path)) {m_logCat.error(""Failed to change directory. Unexpected error"");throw new IOException(""Failed to change to remote directory : "" + path);}}if (out == null) {out = in.getName();if (out.startsWith(""/"")) {out = out.substring(1);}}if (renameIfExist) {String[] files = ftp.listNames();String f = in + out;for (int i = 0; i < files.length; i++) {if (files[i].equals(out)) {m_logCat.debug(""Found existing file on the server: "" + out);boolean rename_ok = false;String bak = ""_bak"";int j = 0;String newExt = null;while (!rename_ok) {if (j == 0) newExt = bak; else newExt = bak + j;if (ftp.rename(out, out + newExt)) {m_logCat.info(out + "" renamed to "" + out + newExt);rename_ok = true;} else {m_logCat.warn(""Renaming to "" + out + newExt + "" has failed!, trying again ..."");j++;}}break;}}}InputStream input = new FileInputStream(in);m_logCat.info(""Starting transfert of "" + in);ftp.storeFile(out, input);m_logCat.info(in + "" uploaded successfully"");input.close();ftp.logout();} catch (FTPConnectionClosedException e) {m_logCat.error(""Server closed connection."", e);} finally {if (ftp.isConnected()) {try {ftp.disconnect();} catch (IOException f) {}}}}"	5
"public AudioFileFormat getAudioFileFormat(URL url) throws UnsupportedAudioFileException, IOException {InputStream urlStream = url.openStream();AudioFileFormat fileFormat = null;try {fileFormat = getFMT(urlStream, false);} finally {urlStream.close();}return fileFormat;}public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException {InputStream urlStream = url.openStream();AudioFileFormat fileFormat = null;try {fileFormat = getFMT(urlStream, false);} finally {if (fileFormat == null) {urlStream.close();}}return new AudioInputStream(urlStream, fileFormat.getFormat(), fileFormat.getFrameLength());}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}private String getHash(String string) {MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {e.printStackTrace();}md5.reset();md5.update(string.getBytes());byte[] result = md5.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < result.length; i++) {hexString.append(Integer.toHexString(0xFF & result[i]));}String str = hexString.toString();return str;}public CmsSetupTestResult execute(CmsSetupBean setupBean) {CmsSetupTestResult testResult = new CmsSetupTestResult(this);String basePath = setupBean.getWebAppRfsPath();if (!basePath.endsWith(File.separator)) {basePath += File.separator;}File file1;Random rnd = new Random();do {file1 = new File(basePath + ""test"" + rnd.nextInt(1000));} while (file1.exists());boolean success = false;try {file1.createNewFile();FileWriter fw = new FileWriter(file1);fw.write(""aA1"");fw.close();success = true;FileReader fr = new FileReader(file1);success = success && (fr.read() == 'a');success = success && (fr.read() == 'A');success = success && (fr.read() == '1');success = success && (fr.read() == -1);fr.close();success = file1.delete();success = !file1.exists();} catch (Exception e) {success = false;}if (!success) {testResult.setRed();testResult.setInfo(""OpenCms cannot be installed without read and write privileges for path "" + basePath + ""! Please check you are running your servlet container with the right user and privileges."");testResult.setHelp(""Not enough permissions to create/read/write a file"");testResult.setResult(RESULT_FAILED);} else {testResult.setGreen();testResult.setResult(RESULT_PASSED);}return testResult;}protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {if (request.getParameter(""edit"") != null) {try {User cu = (User) request.getSession().getAttribute(""currentuser"");UserDetails ud = cu.getUserDetails();String returnTo = ""editprofile.jsp"";if (!request.getParameter(""password"").equals("""")) {String password = request.getParameter(""password"");MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(new String(password).getBytes());byte[] hash = md.digest();String pass = new BigInteger(1, hash).toString(16);cu.setClientPassword(pass);}ud.setFirstName(request.getParameter(""fname""));ud.setLastName(request.getParameter(""lname""));ud.setEmailAddress(request.getParameter(""email""));ud.setAddress(request.getParameter(""address""));ud.setZipcode(request.getParameter(""zipcode""));ud.setTown(request.getParameter(""town""));ud.setCountry(request.getParameter(""country""));ud.setTrackingColor(request.getParameter(""input1""));String vis = request.getParameter(""visibility"");if (vis.equals(""self"")) {cu.setVisibility(0);} else if (vis.equals(""friends"")) {cu.setVisibility(1);} else if (vis.equals(""all"")) {cu.setVisibility(2);} else {response.sendRedirect(""error.jsp?id=8"");}em.getTransaction().begin();em.persist(cu);em.getTransaction().commit();response.sendRedirect(returnTo);} catch (Throwable e) {e.printStackTrace();response.sendRedirect(""error.jsp?id=5"");}return;}}public void loadProperties() {try {java.util.Properties props = new java.util.Properties();java.net.URL url = ClassLoader.getSystemResource(""env.properties"");props.load(url.openStream());this.proxyCertificatePath = props.getProperty(""proxy.certificate.path"");this.dummyFileDirName = props.getProperty(""delete.dummyFileDirName"");this.idleTimeTestDelay = new Integer(props.getProperty(""idleTimeTestDelaySeconds""));if (props.getProperty(""gridftp.timeoutMilliSecs"") != null) {this.gridftpTimeoutMilliSecs = new Integer(props.getProperty(""gridftp.timeoutMilliSecs"").trim());}this.assertContentInWriteTests = new Boolean(props.getProperty(""assertContentInWriteTests""));this.gridftpHost1 = props.getProperty(""gridftp.host1"");this.gridftpPort1 = new Integer(props.getProperty(""gridftp.port1""));this.gridftpHost2 = props.getProperty(""gridftp.host2"");this.gridftpPort2 = new Integer(props.getProperty(""gridftp.port2""));this.srbGsiHost = props.getProperty(""srb.gsi.host"");this.srbGsiPort = new Integer(props.getProperty(""srb.gsi.port""));this.srbGsiPortMin = new Integer(props.getProperty(""srb.gsi.port.min""));this.srbGsiPortMax = new Integer(props.getProperty(""srb.gsi.port.max""));this.srbGsiDefaultResource = props.getProperty(""srb.gsi.defaultResource"");this.srbEncryptHost = props.getProperty(""srb.encrypt.host"");this.srbEncryptPort = new Integer(props.getProperty(""srb.encrypt.port""));this.srbEncryptPortMin = new Integer(props.getProperty(""srb.encrypt.port.min""));this.srbEncryptPortMax = new Integer(props.getProperty(""srb.encrypt.port.max""));this.srbEncryptDefaultResource = props.getProperty(""srb.encrypt.defaultResource"");this.srbEncryptHomeDirectory = props.getProperty(""srb.encrypt.homeDirectory"");this.srbEncryptMcatZone = props.getProperty(""srb.encrypt.mcatZone"");this.srbEncryptMdasDomainName = props.getProperty(""srb.encrypt.mdasDomainName"");this.srbEncryptUsername = props.getProperty(""srb.encrypt.username"");this.srbEncryptPassword = props.getProperty(""srb.encrypt.password"");this.sftpHost = props.getProperty(""sftp.host"");this.sftpPort = new Integer(props.getProperty(""sftp.port""));this.sftpPath = props.getProperty(""sftp.path"");this.sftpUsername = props.getProperty(""sftp.username"");this.sftpPassword = props.getProperty(""sftp.password"");if (props.getProperty(""sftp.timeoutMilliSecs"") != null) {this.sftpTimeoutMilliSecs = new Integer(props.getProperty(""sftp.timeoutMilliSecs"").trim());}irodsEncryptHost = props.getProperty(""irods.encrypt.host"");irodsEncryptPort = new Integer(props.getProperty(""irods.encrypt.port""));irodsEncryptResource = props.getProperty(""irods.encrypt.defaultResource"");irodsEncryptHomeDirectory = props.getProperty(""irods.encrypt.homeDirectory"");irodsEncryptZone = props.getProperty(""irods.encrypt.zone"");irodsEncryptUsername = props.getProperty(""irods.encrypt.username"");irodsEncryptPassword = props.getProperty(""irods.encrypt.password"");irodsGsiHost = props.getProperty(""irods.gsi.host"");irodsGsiPort = new Integer(props.getProperty(""irods.gsi.port""));irodsGsiZone = props.getProperty(""irods.gsi.zone"");srbQueryTimeout = new Integer(props.getProperty(""srb.query.timeout""));this.ftpUri = props.getProperty(""ftp.uri"");this.httpUri = props.getProperty(""http.uri"");this.httpProxy = props.getProperty(""http.proxy"");this.httpPort = new Integer(props.getProperty(""http.port""));this.fileUri = props.getProperty(""file.uri"");java.net.URI tempUri = new java.net.URI(this.fileUri);File f = new File(tempUri);if (!f.exists()) {String temp = System.getProperty(""java.io.tmpdir"");System.out.println(""Cannot list ["" + fileUri + ""] listing java.io.tmpdir instead ["" + temp + ""]"");this.fileUri = temp;}useSrbGsiInFsCopyTest = new Boolean(props.getProperty(""srb.gsi.use.in.fs.copy.test""));useSrbEncryptInFsCopyTest = new Boolean(props.getProperty(""srb.encrypt.use.in.fs.copy.test""));useGridftpHost1InFsCopyTest = new Boolean(props.getProperty(""gridftp.host1.use.in.fs.copy.test""));useGridftpHost2InFsCopyTest = new Boolean(props.getProperty(""gridftp.host2.use.in.fs.copy.test""));useSftpInFsCopyTest = new Boolean(props.getProperty(""sftp.use.in.fs.copy.test""));useLocalFileInFsCopyTest = new Boolean(props.getProperty(""file.use.in.fs.copy.test""));useIrodsGsiCopyTest = new Boolean(props.getProperty(""irods.gsi.use.in.fs.copy.test""));useIrodsEncryptCopyTest = new Boolean(props.getProperty(""irods.encrypt.use.in.fs.copy.test""));assertNotNull(this.proxyCertificatePath);assertNotNull(this.dummyFileDirName);assertNotNull(this.idleTimeTestDelay);assertNotNull(this.ftpUri);assertNotNull(this.httpUri);} catch (Exception ex) {Logger.getLogger(AbstractTestClass.class.getName()).log(Level.SEVERE, null, ex);fail(""Unable to locate and load 'testsettings.properties' file in source "" + ex);}}public void register(URL codeBase, String filePath) throws Exception {Properties properties = new Properties();URL url = new URL(codeBase + filePath);properties.load(url.openStream());initializeContext(codeBase, properties);}private void renameTo(File from, File to) {if (!from.exists()) return;if (to.exists()) to.delete();boolean worked = false;try {worked = from.renameTo(to);} catch (Exception e) {database.logError(this, """" + e, null);}if (!worked) {database.logWarning(this, ""Could not rename GEDCOM to "" + to.getAbsolutePath(), null);try {to.delete();final FileReader in = new FileReader(from);final FileWriter out = new FileWriter(to);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();from.delete();} catch (Exception e) {database.logError(this, """" + e, null);}}}"	5
"private String getMD5(String data) {try {MessageDigest md5Algorithm = MessageDigest.getInstance(""MD5"");md5Algorithm.update(data.getBytes(), 0, data.length());byte[] digest = md5Algorithm.digest();StringBuffer hexString = new StringBuffer();String hexDigit = null;for (int i = 0; i < digest.length; i++) {hexDigit = Integer.toHexString(0xFF & digest[i]);if (hexDigit.length() < 2) {hexDigit = ""0"" + hexDigit;}hexString.append(hexDigit);}return hexString.toString();} catch (NoSuchAlgorithmException ne) {return data;}}private void parseTemplate(File templateFile, Map dataMap) throws ContainerException {Debug.log(""Parsing template : "" + templateFile.getAbsolutePath(), module);Reader reader = null;try {reader = new InputStreamReader(new FileInputStream(templateFile));} catch (FileNotFoundException e) {throw new ContainerException(e);}String targetDirectoryName = args.length > 1 ? args[1] : null;if (targetDirectoryName == null) {targetDirectoryName = target;}String targetDirectory = ofbizHome + targetDirectoryName + args[0];File targetDir = new File(targetDirectory);if (!targetDir.exists()) {boolean created = targetDir.mkdirs();if (!created) {throw new ContainerException(""Unable to create target directory - "" + targetDirectory);}}if (!targetDirectory.endsWith(""/"")) {targetDirectory = targetDirectory + ""/"";}Writer writer = null;try {writer = new FileWriter(targetDirectory + templateFile.getName());} catch (IOException e) {throw new ContainerException(e);}try {FreeMarkerWorker.renderTemplate(templateFile.getAbsolutePath(), reader, dataMap, writer);} catch (Exception e) {throw new ContainerException(e);}try {writer.flush();writer.close();} catch (IOException e) {throw new ContainerException(e);}}public boolean saveNote(NoteData n) {String query;try {conn.setAutoCommit(false);Statement stmt = null;ResultSet rset = null;stmt = conn.createStatement();query = ""select * from notes where noteid = "" + n.getID();rset = stmt.executeQuery(query);if (rset.next()) {query = ""UPDATE notes SET title = '"" + escapeCharacters(n.getTitle()) + ""', keywords = '"" + escapeCharacters(n.getKeywords()) + ""' WHERE noteid = "" + n.getID();try {stmt.executeUpdate(query);} catch (SQLException e) {e.printStackTrace();conn.rollback();conn.setAutoCommit(true);return false;}LinkedList<FieldData> fields = n.getFields();ListIterator<FieldData> iter = fields.listIterator(0);FieldData f = null;PreparedStatement pstmt = conn.prepareStatement(""UPDATE fielddata SET data = ? WHERE noteid = ? AND fieldid = ?"");try {while (iter.hasNext()) {f = iter.next();if (f instanceof FieldDataImage) {System.out.println(""field is an image."");pstmt.setBytes(1, ((FieldDataImage) f).getDataBytes());} else {System.out.println(""field is not an image"");pstmt.setString(1, f.getData());}pstmt.setInt(2, n.getID());pstmt.setInt(3, f.getID());pstmt.execute();}} catch (SQLException e) {conn.rollback();conn.setAutoCommit(true);e.printStackTrace();return false;}query = ""DELETE FROM links WHERE (note1id = "" + n.getID() + "" OR note2id = "" + n.getID() + "")"";try {stmt.execute(query);} catch (SQLException e) {conn.rollback();conn.setAutoCommit(true);e.printStackTrace();return false;}Vector<Link> associations = n.getAssociations();ListIterator<Link> itr = associations.listIterator();Link association = null;pstmt = conn.prepareStatement(""INSERT INTO links (note1id, note2id) VALUES (?, ?)"");try {while (itr.hasNext()) {association = itr.next();pstmt.setInt(1, n.getID());pstmt.setInt(2, association.getID());pstmt.execute();}} catch (SQLException e) {conn.rollback();conn.setAutoCommit(true);e.printStackTrace();return false;}} else {query = ""INSERT INTO notes (templateid, title, keywords) VALUES ("" + n.getTemplate().getID() + "", '"" + escapeCharacters(n.getTitle()) + ""', '"" + escapeCharacters(n.getKeywords()) + ""')"";try {stmt.executeUpdate(query);} catch (SQLException e) {e.printStackTrace();conn.rollback();conn.setAutoCommit(true);return false;}LinkedList<FieldData> fields = n.getFields();ListIterator<FieldData> iter = fields.listIterator(0);FieldData f = null;n.setID(Integer.parseInt(executeMySQLGet(""SELECT LAST_INSERT_ID()"")));PreparedStatement pstmt;try {pstmt = conn.prepareStatement(""INSERT INTO fielddata (noteid, fieldid, data) VALUES (?,?,?)"");while (iter.hasNext()) {f = iter.next();if (f instanceof FieldDataImage) {System.out.println(""field is an image."");pstmt.setBytes(3, ((FieldDataImage) f).getDataBytes());} else {System.out.println(""field is not an image"");pstmt.setString(3, f.getData());}pstmt.setInt(1, n.getID());pstmt.setInt(2, f.getID());pstmt.execute();}} catch (SQLException e) {conn.rollback();conn.setAutoCommit(true);e.printStackTrace();return false;}Vector<Link> assoc = n.getAssociations();Iterator<Link> itr = assoc.listIterator();Link l = null;pstmt = conn.prepareStatement(""INSERT INTO links (note1id, note2id) VALUES (?,?)"");try {while (itr.hasNext()) {l = itr.next();pstmt.setInt(1, n.getID());pstmt.setInt(2, l.getID());pstmt.execute();}} catch (SQLException e) {conn.rollback();conn.setAutoCommit(true);e.printStackTrace();return false;}}conn.commit();conn.setAutoCommit(true);} catch (SQLException ex) {ex.printStackTrace();return false;}return true;}public boolean saveTemplate(Template t) {try {conn.setAutoCommit(false);Statement stmt = conn.createStatement();String query;ResultSet rset;if (Integer.parseInt(executeMySQLGet(""SELECT COUNT(*) FROM templates WHERE name='"" + escapeCharacters(t.getName()) + ""'"")) != 0) return false;query = ""select * from templates where templateid = "" + t.getID();rset = stmt.executeQuery(query);if (rset.next()) {System.err.println(""Updating already saved template is not supported!!!!!!"");return false;} else {query = ""INSERT INTO templates (name, parentid) VALUES ('"" + escapeCharacters(t.getName()) + ""', "" + t.getParentID() + "")"";try {stmt.executeUpdate(query);} catch (SQLException e) {conn.rollback();conn.setAutoCommit(true);e.printStackTrace();return false;}int templateid = Integer.parseInt(executeMySQLGet(""SELECT LAST_INSERT_ID()""));t.setID(templateid);LinkedList<Field> fields = t.getFields();ListIterator<Field> iter = fields.listIterator();Field f = null;PreparedStatement pstmt = conn.prepareStatement(""INSERT INTO templatefields(fieldtype, name, templateid, defaultvalue)"" + ""VALUES (?,?,?,?)"");try {while (iter.hasNext()) {f = iter.next();if (f.getType() == Field.IMAGE) {System.out.println(""field is an image."");byte data[] = ((FieldDataImage) f.getDefault()).getDataBytes();pstmt.setBytes(4, data);} else {System.out.println(""field is not an image"");String deflt = (f.getDefault()).getData();pstmt.setString(4, deflt);}pstmt.setInt(1, f.getType());pstmt.setString(2, f.getName());pstmt.setInt(3, t.getID());pstmt.execute();f.setID(Integer.parseInt(executeMySQLGet(""SELECT LAST_INSERT_ID()"")));}} catch (SQLException e) {conn.rollback();conn.setAutoCommit(true);e.printStackTrace();return false;}}conn.commit();conn.setAutoCommit(true);} catch (SQLException ex) {System.err.println(""Error saving the Template"");return false;}return true;}public static boolean copyFile(String source, String destination, boolean replace) {File sourceFile = new File(source);File destinationFile = new File(destination);if (sourceFile.isDirectory() || destinationFile.isDirectory()) return false;if (destinationFile.isFile() && !replace) return false;if (!sourceFile.isFile()) return false;if (replace) destinationFile.delete();try {File dir = destinationFile.getParentFile();while (dir != null && !dir.exists()) {dir.mkdir();}DataOutputStream outStream = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(destinationFile), 10240));DataInputStream inStream = new DataInputStream(new BufferedInputStream(new FileInputStream(sourceFile), 10240));try {while (inStream.available() > 0) {outStream.write(inStream.readUnsignedByte());}} catch (EOFException eof) {}inStream.close();outStream.close();} catch (IOException ex) {throw new FailedException(""Failed to copy file "" + sourceFile.getAbsolutePath() + "" to "" + destinationFile.getAbsolutePath(), ex).setFile(destinationFile.getAbsolutePath());}return true;}protected void initDefaultRolesFile() {String webConfigPath = System.getProperty(""dcm4chee-web3.cfg.path"", ""conf/dcm4chee-web3"");File mappingFile = new File(webConfigPath + ""roles.json"");if (!mappingFile.isAbsolute()) mappingFile = new File(ServerConfigLocator.locate().getServerHomeDir(), mappingFile.getPath());if (mappingFile.exists()) return;log.info(""Init default Role Mapping file! mappingFile:"" + mappingFile);if (mappingFile.getParentFile().mkdirs()) log.info(""M-WRITE dir:"" + mappingFile.getParent());FileChannel fos = null;InputStream is = null;try {URL url = getClass().getResource(""/META-INF/roles-default.json"");log.info(""Use default Mapping File content of url:"" + url);is = url.openStream();ReadableByteChannel inCh = Channels.newChannel(is);fos = new FileOutputStream(mappingFile).getChannel();int pos = 0;while (is.available() > 0) pos += fos.transferFrom(inCh, pos, is.available());} catch (Exception e) {log.error(""Roles file doesn't exist and the default can't be created!"", e);} finally {close(is);close(fos);}}private HttpURLConnection prepare(URL url, String method) {if (this.username != null && this.password != null) {this.headers.put(""Authorization"", ""Basic "" + Codec.encodeBASE64(this.username + "":"" + this.password));}try {HttpURLConnection connection = (HttpURLConnection) url.openConnection();checkFileBody(connection);connection.setRequestMethod(method);for (String key : this.headers.keySet()) {connection.setRequestProperty(key, headers.get(key));}return connection;} catch (Exception e) {throw new RuntimeException(e);}}public static long copyFile(File source, File target) throws IOException {FileInputStream fileInputStream = null;FileOutputStream fileOutputStream = null;try {fileInputStream = new FileInputStream(source);fileOutputStream = new FileOutputStream(target);FileChannel in = fileInputStream.getChannel();FileChannel out = fileOutputStream.getChannel();return out.transferFrom(in, 0, source.length());} finally {if (fileInputStream != null) fileInputStream.close();if (fileOutputStream != null) fileOutputStream.close();}}public void run() {Vector<Update> updates = new Vector<Update>();if (dic != null) updates.add(dic);if (gen != null) updates.add(gen);if (res != null) updates.add(res);if (help != null) updates.add(help);for (Iterator iterator = updates.iterator(); iterator.hasNext(); ) {Update update = (Update) iterator.next();try {File temp = File.createTempFile(""fm_"" + update.getType(), "".jar"");temp.deleteOnExit();FileOutputStream out = new FileOutputStream(temp);URL url = new URL(update.getAction());URLConnection conn = url.openConnection();com.diccionarioderimas.Utils.setupProxy(conn);InputStream in = conn.getInputStream();byte[] buffer = new byte[1024];int read = 0;int total = 0;while ((read = in.read(buffer)) != -1) {out.write(buffer, 0, read);total += read;if (total > 10000) {progressBar.setValue(progressBar.getValue() + total);total = 0;}}out.close();in.close();String fileTo = basePath + ""diccionariorimas.jar"";if (update.getType() == Update.GENERATOR) fileTo = basePath + ""generador.jar""; else if (update.getType() == Update.RESBC) fileTo = basePath + ""resbc.me""; else if (update.getType() == Update.HELP) fileTo = basePath + ""help.html"";if (update.getType() == Update.RESBC) {Utils.unzip(temp, new File(fileTo));} else {Utils.copyFile(new FileInputStream(temp), new File(fileTo));}} catch (Exception e) {e.printStackTrace();}}setVisible(false);if (gen != null || res != null) {try {new Main(null, basePath, false);} catch (Exception e) {new ErrorDialog(frame, e);}}String restart = """";if (dic != null) restart += ""\nAlgunas de ellas s�lo estar�n disponibles despu�s de reiniciar el diccionario."";JOptionPane.showMessageDialog(frame, ""Se han terminado de realizar las actualizaciones."" + restart, ""Actualizaciones"", JOptionPane.INFORMATION_MESSAGE);}public static void fileCopy(File sourceFile, File destFile) throws IOException {FileChannel source = null;FileChannel destination = null;FileInputStream fis = null;FileOutputStream fos = null;try {fis = new FileInputStream(sourceFile);fos = new FileOutputStream(destFile);source = fis.getChannel();destination = fos.getChannel();destination.transferFrom(source, 0, source.size());} finally {fis.close();fos.close();if (source != null) {source.close();}if (destination != null) {destination.close();}}}"	5
"public static String checkPublicIP() {String ipAddress = null;try {URL url;url = new URL(""http://checkip.dyndns.org/"");InputStreamReader in = new InputStreamReader(url.openStream());BufferedReader buffer = new BufferedReader(in);String line;Pattern p = Pattern.compile(""\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\b"");while ((line = buffer.readLine()) != null) {if (line.indexOf(""IP Address:"") != -1) {Matcher m = p.matcher(line);if (m.find()) {ipAddress = m.group();break;}}}buffer.close();in.close();} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return ipAddress;}protected Reader getText() throws IOException {BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));String readLine;do {readLine = br.readLine();} while (readLine != null && readLine.indexOf(""</table><br clear=all>"") < 0);return br;}private int streamConf() throws IOException {int avail = 0;switch(mode) {case FILE:if (!Helper.findInString(filename, "".jar"")) {is = new FileInputStream(filename);bisr = new BufferedReader(new InputStreamReader(is, INPUT_CHARSET));} else {is = Helper.getZipInput(filename.substring(0, filename.indexOf("".jar"") + 4), filename.substring(filename.indexOf("".jar"") + 5, filename.length()));bisr = new BufferedReader(new InputStreamReader(is, INPUT_CHARSET));}break;case STREAM:bisr = new BufferedReader(new InputStreamReader(is, INPUT_CHARSET));break;case NET:is = url.openStream();bisr = new BufferedReader(new InputStreamReader(is, INPUT_CHARSET));break;}switch(mode) {case FILE:case STREAM:avail = is.available();break;case NET:while (is.read() != -1) avail++;bisr.close();is.close();is = url.openStream();bisr = new BufferedReader(new InputStreamReader(is, INPUT_CHARSET));break;case STRING:avail = fileStr.length();break;}return avail;}@Overridepublic void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {String dataSetURL = request.getParameter(""datasetURL"");String contentType = request.getParameter(""contentType"");String studyUID = request.getParameter(""studyUID"");String seriesUID = request.getParameter(""seriesUID"");String objectUID = request.getParameter(""objectUID"");dataSetURL += ""&contentType="" + contentType + ""&studyUID="" + studyUID + ""&seriesUID="" + seriesUID + ""&objectUID="" + objectUID;dataSetURL = dataSetURL.replace(""+"", ""%2B"");InputStream resultInStream = null;OutputStream resultOutStream = response.getOutputStream();try {URL url = new URL(dataSetURL);resultInStream = url.openStream();byte[] buffer = new byte[4096];int bytes_read;while ((bytes_read = resultInStream.read(buffer)) != -1) {resultOutStream.write(buffer, 0, bytes_read);}resultOutStream.flush();resultOutStream.close();resultInStream.close();} catch (Exception e) {log.error(""Unable to read and send the DICOM dataset page"", e);}}public static String getEncryptedPassword(String password) throws PasswordException {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");md.update(password.getBytes(""UTF-8""));} catch (Exception e) {throw new PasswordException(e);}return convertToString(md.digest());}public void copy(File s, File t) throws IOException {FileChannel in = (new FileInputStream(s)).getChannel();FileChannel out = (new FileOutputStream(t)).getChannel();in.transferTo(0, s.length(), out);in.close();out.close();}public static void copy(File srcFile, File destFile) throws IOException {FileInputStream in = null;FileOutputStream out = null;try {in = new FileInputStream(srcFile);out = new FileOutputStream(destFile);final byte[] buf = new byte[4096];int read;while ((read = in.read(buf)) >= 0) {out.write(buf, 0, read);}} finally {try {if (in != null) in.close();} catch (IOException ioe) {}try {if (out != null) out.close();} catch (IOException ioe) {}}}private void displayDiffResults() throws IOException {File outFile = File.createTempFile(""diff"", "".htm"");outFile.deleteOnExit();FileOutputStream outStream = new FileOutputStream(outFile);BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream));out.write(""<html><head><title>LOC Differences</title>\n"" + SCRIPT + ""</head>\n"" + ""<body bgcolor='#ffffff'>\n"" + ""<div onMouseOver=\""window.defaultStatus='Metrics'\"">\n"");if (addedTable.length() > 0) {out.write(""<table border><tr><th>Files Added:</th>"" + ""<th>Add</th><th>Type</th></tr>"");out.write(addedTable.toString());out.write(""</table><br><br>"");}if (modifiedTable.length() > 0) {out.write(""<table border><tr><th>Files Modified:</th>"" + ""<th>Base</th><th>Del</th><th>Mod</th><th>Add</th>"" + ""<th>Total</th><th>Type</th></tr>"");out.write(modifiedTable.toString());out.write(""</table><br><br>"");}if (deletedTable.length() > 0) {out.write(""<table border><tr><th>Files Deleted:</th>"" + ""<th>Del</th><th>Type</th></tr>"");out.write(deletedTable.toString());out.write(""</table><br><br>"");}out.write(""<table name=METRICS BORDER>\n"");if (modifiedTable.length() > 0 || deletedTable.length() > 0) {out.write(""<tr><td>Base:&nbsp;</td><td>"");out.write(Long.toString(base));out.write(""</td></tr>\n<tr><td>Deleted:&nbsp;</td><td>"");out.write(Long.toString(deleted));out.write(""</td></tr>\n<tr><td>Modified:&nbsp;</td><td>"");out.write(Long.toString(modified));out.write(""</td></tr>\n<tr><td>Added:&nbsp;</td><td>"");out.write(Long.toString(added));out.write(""</td></tr>\n<tr><td>New & Changed:&nbsp;</td><td>"");out.write(Long.toString(added + modified));out.write(""</td></tr>\n"");}out.write(""<tr><td>Total:&nbsp;</td><td>"");out.write(Long.toString(total));out.write(""</td></tr>\n</table></div>"");redlinesOut.close();out.flush();InputStream redlines = new FileInputStream(redlinesTempFile);byte[] buffer = new byte[4096];int bytesRead;while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead);outStream.write(""</BODY></HTML>"".getBytes());outStream.close();Browser.launch(outFile.toURL().toString());}public boolean open() {try {URL url = new URL(resource);conn = url.openConnection();in = new BufferedReader(new InputStreamReader(conn.getInputStream()));} catch (MalformedURLException e) {System.out.println(""Uable to connect URL:"" + resource);return false;} catch (IOException e) {System.out.println(""IOExeption when connecting to URL"" + resource);return false;}return true;}private Bitmap fetchImage(String urlstr) throws Exception {URL url;url = new URL(urlstr);HttpURLConnection c = (HttpURLConnection) url.openConnection();c.setDoInput(true);c.setRequestProperty(""User-Agent"", ""Agent"");c.connect();InputStream is = c.getInputStream();Bitmap img;img = BitmapFactory.decodeStream(is);return img;}"	5
"public static IChemModel readInChI(URL url) throws CDKException {IChemModel chemModel = new ChemModel();try {IMoleculeSet moleculeSet = new MoleculeSet();chemModel.setMoleculeSet(moleculeSet);StdInChIParser parser = new StdInChIParser();BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = in.readLine()) != null) {if (line.toLowerCase().startsWith(""inchi="")) {IAtomContainer atc = parser.parseInchi(line);moleculeSet.addAtomContainer(atc);}}in.close();} catch (Exception e) {e.printStackTrace();throw new CDKException(e.getMessage());}return chemModel;}public String encrypt(String plaintext) throws Exception {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {throw new Exception(e.getMessage());}try {md.update(plaintext.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {throw new Exception(e.getMessage());}byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}public void bubbleSort(int[] arr) {boolean swapped = true;int j = 0;int tmp;while (swapped) {swapped = false;j++;for (int i = 0; i < arr.length - j; i++) {if (arr[i] > arr[i + 1]) {tmp = arr[i];arr[i] = arr[i + 1];arr[i + 1] = tmp;swapped = true;}}}}public void getDownloadInfo(String _url) throws Exception {cl = new FTPClient();Authentication auth = new FTPAuthentication();cl.connect(getHostName());while (!cl.login(auth.getUser(), auth.getPassword())) {log.debug(""getDownloadInfo() - login error state: "" + Arrays.asList(cl.getReplyStrings()));ap.setSite(getSite());auth = ap.promptAuthentication();if (auth == null) throw new Exception(""User Cancelled Auth Operation"");}AuthManager.putAuth(getSite(), auth);cl.enterLocalPassiveMode();FTPFile file = cl.listFiles(new URL(_url).getFile())[0];setURL(_url);setLastModified(file.getTimestamp().getTimeInMillis());setSize(file.getSize());setResumable(cl.rest(""0"") == 350);setRangeEnd(getSize() - 1);}public void initGet() throws Exception {cl = new FTPClient();cl.connect(getHostName());Authentication auth = AuthManager.getAuth(getSite());if (auth == null) auth = new FTPAuthentication(getSite());while (!cl.login(auth.getUser(), auth.getPassword())) {ap.setSite(getSite());auth = ap.promptAuthentication();if (auth == null) throw new Exception(""User Cancelled Auth Operation"");}cl.connect(getHostName());cl.login(auth.getUser(), auth.getPassword());cl.enterLocalPassiveMode();cl.setFileType(FTP.BINARY_FILE_TYPE);cl.setRestartOffset(getPosition());setInputStream(cl.retrieveFileStream(new URL(getURL()).getFile()));}@SuppressWarnings(""unchecked"")private void process(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {printAccess(request, false);try {response.setContentType(""application/json"");String position = request.getParameter(""pos"");if (position == null || position.length() == 0) {reportJsonError(request, response, ""Missing position parameter"");} else {PositionParser pp;pp = new PositionParser(position);String url = ""http://simbad.u-strasbg.fr/simbad/sim-script?submit=submit+script&script="";url += URLEncoder.encode(""format object \""%IDLIST[%-30*]|-%COO(A)|%COO(D)|%OTYPELIST(S)\""\n"" + pp.getPosition() + "" radius=1m"", ""ISO-8859-1"");System.out.println(url);URL simurl = new URL(url);BufferedReader in = new BufferedReader(new InputStreamReader(simurl.openStream()));String boeuf;boolean data_found = false;JSONObject retour = new JSONObject();JSONArray dataarray = new JSONArray();JSONArray colarray = new JSONArray();JSONObject jsloc = new JSONObject();jsloc.put(""sTitle"", ""ID"");colarray.add(jsloc);jsloc = new JSONObject();jsloc.put(""sTitle"", ""Position"");colarray.add(jsloc);jsloc = new JSONObject();jsloc.put(""sTitle"", ""Type"");colarray.add(jsloc);retour.put(""aoColumns"", colarray);int datasize = 0;while ((boeuf = in.readLine()) != null) {if (data_found) {String[] fields = boeuf.trim().split(""\\|"", -1);int pos = fields.length - 1;if (pos >= 3) {String type = fields[pos];pos--;String dec = fields[pos];pos--;String ra = fields[pos];String id = fields[0].split(""\\s{2,}"")[0].trim();JSONArray darray = new JSONArray();darray.add(id.trim());darray.add(ra + "" "" + dec);darray.add(type.trim());dataarray.add(darray);datasize++;if (datasize >= 15) {darray = new JSONArray();darray.add(""truncated to 15"");darray.add("""");darray.add("""");dataarray.add(darray);datasize++;}}} else if (boeuf.startsWith(""::data"")) {data_found = true;}}in.close();retour.put(""aaData"", dataarray);retour.put(""iTotalRecords"", datasize);retour.put(""iTotalDisplayRecords"", datasize);JsonUtils.teePrint(response.getOutputStream(), retour.toJSONString());}} catch (QueryException e) {reportJsonError(request, response, e);}}@SuppressWarnings(""unchecked"")public static void main(String[] args) throws Exception {PositionParser pp;Database.init(""XIDResult"");pp = new PositionParser(""01:33:50.904+30:39:35.79"");String url = ""http://simbad.u-strasbg.fr/simbad/sim-script?submit=submit+script&script="";String script = ""format object \""%IDLIST[%-30*]|-%COO(A)|%COO(D)|%OTYPELIST(S)\""\n"";String tmp = """";script += pp.getPosition() + "" radius=1m"";url += URLEncoder.encode(script, ""ISO-8859-1"");URL simurl = new URL(url);BufferedReader in = new BufferedReader(new InputStreamReader(simurl.openStream()));String boeuf;boolean data_found = false;JSONObject retour = new JSONObject();JSONArray dataarray = new JSONArray();JSONArray colarray = new JSONArray();JSONObject jsloc = new JSONObject();jsloc.put(""sTitle"", ""ID"");colarray.add(jsloc);jsloc = new JSONObject();jsloc.put(""sTitle"", ""Position"");colarray.add(jsloc);jsloc = new JSONObject();jsloc.put(""sTitle"", ""Type"");colarray.add(jsloc);retour.put(""aoColumns"", colarray);int datasize = 0;while ((boeuf = in.readLine()) != null) {if (data_found) {String[] fields = boeuf.trim().split(""\\|"", -1);int pos = fields.length - 1;if (pos >= 3) {String type = fields[pos];pos--;String dec = fields[pos];pos--;String ra = fields[pos];String id = """";for (int i = 0; i < pos; i++) {id += fields[i];if (i < (pos - 1)) {id += ""|"";}}if (id.length() <= 30) {JSONArray darray = new JSONArray();darray.add(id.trim());darray.add(ra + "" "" + dec);darray.add(type.trim());dataarray.add(darray);datasize++;}}} else if (boeuf.startsWith(""::data"")) {data_found = true;}}retour.put(""aaData"", dataarray);retour.put(""iTotalRecords"", datasize);retour.put(""iTotalDisplayRecords"", datasize);System.out.println(retour.toJSONString());in.close();}public static String encodePassword(String password) {try {MessageDigest messageDiegest = MessageDigest.getInstance(""SHA-1"");messageDiegest.update(password.getBytes(""UTF-8""));return Base64.encodeToString(messageDiegest.digest(), false);} catch (NoSuchAlgorithmException e) {log.error(""Exception while encoding password"");throw new Error(e);} catch (UnsupportedEncodingException e) {log.error(""Exception while encoding password"");throw new Error(e);}}public static void publish(String server, String id, String passwd, String path, String html) throws SocketException, IOException, LoginFailException {logger.info(""Connect to FTP Server "" + server);FTPClient f = new FTPClient();f.connect(server);if (f.login(id, passwd) == false) {logger.info(""Fail to login with id="" + id);throw new LoginFailException(id, passwd);}f.changeWorkingDirectory(path);logger.info(""Start to upload"");f.storeFile(""index.html"", new ByteArrayInputStream(html.getBytes(""utf-8"")));logger.info(""Upload index.html"");f.storeFile(""main.css"", new FileInputStream(""web/main.css""));logger.info(""Upload main.css"");f.storeFile(""cafelibrary.js"", new FileInputStream(""web/cafelibrary.js""));logger.info(""Upload cafelibrary.js"");f.makeDirectory(""img"");f.changeWorkingDirectory(""img"");for (int i = 0; i <= 5; i++) {String fileName = ""favorite_star_"" + i + "".png"";f.storeFile(fileName, new FileInputStream(""web/img/"" + fileName));logger.info(""Upload "" + fileName);}f.logout();f.disconnect();}public void configureKerberos(boolean overwriteExistingSetup) throws Exception {OutputStream keyTabOut = null;InputStream keyTabIn = null;OutputStream krb5ConfOut = null;try {keyTabIn = loadKeyTabResource(keyTabResource);File file = new File(keyTabRepository + keyTabResource);if (!file.exists() || overwriteExistingSetup) {keyTabOut = new FileOutputStream(file, false);if (logger.isDebugEnabled()) logger.debug(""Installing keytab file to : "" + file.getAbsolutePath());IOUtils.copy(keyTabIn, keyTabOut);}File krb5ConfFile = new File(System.getProperty(""java.security.krb5.conf"", defaultKrb5Config));if (logger.isDebugEnabled()) logger.debug(""Using Kerberos config file : "" + krb5ConfFile.getAbsolutePath());if (!krb5ConfFile.exists()) throw new Exception(""Kerberos config file not found : "" + krb5ConfFile.getAbsolutePath());FileInputStream fis = new FileInputStream(krb5ConfFile);Wini krb5Conf = new Wini(KerberosConfigUtil.toIni(fis));Ini.Section krb5Realms = krb5Conf.get(""realms"");String windowsDomainSetup = krb5Realms.get(kerberosRealm);if (kerberosRealm == null || overwriteExistingSetup) {windowsDomainSetup = ""{  kdc = "" + keyDistributionCenter + "":88 admin_server = "" + keyDistributionCenter + "":749  default_domain = "" + kerberosRealm.toLowerCase() + ""  }"";krb5Realms.put(kerberosRealm, windowsDomainSetup);}Ini.Section krb5DomainRealms = krb5Conf.get(""domain_realm"");String domainRealmSetup = krb5DomainRealms.get(kerberosRealm.toLowerCase());if (domainRealmSetup == null || overwriteExistingSetup) {krb5DomainRealms.put(kerberosRealm.toLowerCase(), kerberosRealm);krb5DomainRealms.put(""."" + kerberosRealm.toLowerCase(), kerberosRealm);}ByteArrayOutputStream baos = new ByteArrayOutputStream();krb5Conf.store(baos);InputStream bios = new ByteArrayInputStream(baos.toByteArray());bios = KerberosConfigUtil.toKrb5(bios);krb5ConfOut = new FileOutputStream(krb5ConfFile, false);IOUtils.copy(bios, krb5ConfOut);} catch (Exception e) {logger.error(""Error while configuring Kerberos :"" + e.getMessage(), e);throw e;} finally {IOUtils.closeQuietly(keyTabOut);IOUtils.closeQuietly(keyTabIn);IOUtils.closeQuietly(krb5ConfOut);}}"	5
"public static ArrayList<FriendInfo> downloadFriendsList(String username) {try {URL url;url = new URL(WS_URL + ""/user/"" + URLEncoder.encode(username, ""UTF-8"") + ""/friends.xml"");HttpURLConnection conn = (HttpURLConnection) url.openConnection();conn.connect();InputStream is = conn.getInputStream();DocumentBuilderFactory dbFac = DocumentBuilderFactory.newInstance();DocumentBuilder db = dbFac.newDocumentBuilder();Document doc = db.parse(is);NodeList friends = doc.getElementsByTagName(""user"");ArrayList<FriendInfo> result = new ArrayList<FriendInfo>();for (int i = 0; i < friends.getLength(); i++) try {result.add(new FriendInfo((Element) friends.item(i)));} catch (Utils.ParseException e) {Log.e(TAG, ""in downloadFriendsList"", e);return null;}return result;} catch (Exception e) {Log.e(TAG, ""in downloadFriendsList"", e);return null;}}private ArrayList<XSPFTrackInfo> getPlaylist() {try {Log.d(TAG, ""Getting playlist started"");String urlString = ""http://"" + mBaseURL + ""/xspf.php?sk="" + mSession + ""&discovery=0&desktop=1.4.1.57486"";if (mAlternateConn) {urlString += ""&api_key=9d1bbaef3b443eb97973d44181d04e4b"";Log.d(TAG, ""Using alternate connection method"");}URL url = new URL(urlString);HttpURLConnection conn = (HttpURLConnection) url.openConnection();conn.connect();InputStream is = conn.getInputStream();DocumentBuilderFactory dbFac = DocumentBuilderFactory.newInstance();DocumentBuilder db = dbFac.newDocumentBuilder();Document doc = db.parse(is);Element root = doc.getDocumentElement();NodeList titleNs = root.getElementsByTagName(""title"");String stationName = ""<unknown station>"";if (titleNs.getLength() > 0) {Element titleElement = (Element) titleNs.item(0);String res = """";for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) {Node item = titleElement.getChildNodes().item(i);if (item.getNodeType() == Node.TEXT_NODE) res += item.getNodeValue();}stationName = URLDecoder.decode(res, ""UTF-8"");}NodeList tracks = doc.getElementsByTagName(""track"");ArrayList<XSPFTrackInfo> result = new ArrayList<XSPFTrackInfo>();for (int i = 0; i < tracks.getLength(); i++) try {result.add(new XSPFTrackInfo(stationName, (Element) tracks.item(i)));} catch (Utils.ParseException e) {Log.e(TAG, ""in getPlaylist"", e);return null;}Log.d(TAG, ""Getting playlist successful"");return result;} catch (Exception e) {Log.e(TAG, ""in getPlaylist"", e);return null;}}private boolean adjust(String stationUrl) throws LastFMError {try {URL url = new URL(""http://"" + mBaseURL + ""/adjust.php?session="" + mSession + ""&url="" + URLEncoder.encode(stationUrl, ""UTF-8""));HttpURLConnection conn = (HttpURLConnection) url.openConnection();conn.connect();InputStream is = conn.getInputStream();InputStreamReader reader = new InputStreamReader(is);BufferedReader stringReader = new BufferedReader(reader);Utils.OptionsParser options = new Utils.OptionsParser(stringReader);if (!options.parse()) options = null;stringReader.close();if (""OK"".equals(options.get(""response""))) {return true;} else {Log.e(TAG, ""Adjust failed: \"""" + options.get(""response"") + ""\"""");return false;}} catch (MalformedURLException e) {Log.e(TAG, ""in adjust"", e);throw new LastFMError(""Adjust failed:"" + e.toString());} catch (UnsupportedEncodingException e) {Log.e(TAG, ""in adjust"", e);throw new LastFMError(""Adjust failed:"" + e.toString());} catch (IOException e) {Log.e(TAG, ""in adjust"", e);throw new LastFMError(""Station not found:"" + stationUrl);}}boolean checkIfUserExists(String username) throws IOException {try {URL url = new URL(WS_URL + ""/user/"" + URLEncoder.encode(username, ""UTF-8"") + ""/profile.xml"");HttpURLConnection conn = (HttpURLConnection) url.openConnection();conn.connect();InputStream is = conn.getInputStream();is.close();return true;} catch (FileNotFoundException e) {return false;}}static void xmlRpcCall(String method, String[] params) throws LastFMError {try {XmlPullParserFactory fac = XmlPullParserFactory.newInstance();XmlSerializer serializer = fac.newSerializer();URL url;url = new URL(XMLRPC_URL);URLConnection conn;conn = url.openConnection();conn.setRequestProperty(""Content-Type"", ""text/xml"");conn.setDoOutput(true);serializer.setOutput(conn.getOutputStream(), ""UTF-8"");serializer.startDocument(""UTF-8"", true);serializer.startTag(null, ""methodCall"");serializer.startTag(null, ""methodName"");serializer.text(method);serializer.endTag(null, ""methodName"");serializer.startTag(null, ""params"");for (String s : params) {serializer.startTag(null, ""param"");serializer.startTag(null, ""value"");serializer.startTag(null, ""string"");serializer.text(s);serializer.endTag(null, ""string"");serializer.endTag(null, ""value"");serializer.endTag(null, ""param"");}serializer.endTag(null, ""params"");serializer.endTag(null, ""methodCall"");serializer.flush();InputStream is = conn.getInputStream();DocumentBuilderFactory dbFac = DocumentBuilderFactory.newInstance();DocumentBuilder db = dbFac.newDocumentBuilder();Document doc = db.parse(is);try {String res = Utils.getChildElement(doc.getDocumentElement(), new String[] { ""params"", ""param"", ""value"", ""string"" });if (!res.equals(""OK"")) {Log.e(TAG, ""while xmlrpc got "" + res);throw new LastFMXmlRpcError(""XMLRPC Call failed: "" + res);}} catch (ParseException e) {String faultString = Utils.getChildElement(doc.getDocumentElement(), new String[] { ""params"", ""param"", ""value"", ""struct"", ""member[1]"", ""value"", ""string"" });throw new LastFMXmlRpcError(faultString);}} catch (LastFMXmlRpcError e) {throw e;} catch (Exception e) {Log.e(TAG, ""while xmlrpc"", e);throw new LastFMError(e.toString());}}public static Document getSkeleton() {Document doc = null;String filesep = System.getProperty(""file.separator"");try {java.net.URL url = Skeleton.class.getResource(filesep + ""simplemassimeditor"" + filesep + ""resources"" + filesep + ""configskeleton.xml"");InputStream input = url.openStream();DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();try {doc = parser.parse(input);} catch (SAXException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}} catch (ParserConfigurationException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return doc;}public ICCColorSpaceExt createICCColorSpaceExt(BridgeContext ctx, Element paintedElement, String iccProfileName) {ICCColorSpaceExt cs = cache.request(iccProfileName.toLowerCase());if (cs != null) {return cs;}Document doc = paintedElement.getOwnerDocument();NodeList list = doc.getElementsByTagNameNS(SVG_NAMESPACE_URI, SVG_COLOR_PROFILE_TAG);int n = list.getLength();Element profile = null;for (int i = 0; i < n; i++) {Node node = list.item(i);if (node.getNodeType() == Node.ELEMENT_NODE) {Element profileNode = (Element) node;String nameAttr = profileNode.getAttributeNS(null, SVG_NAME_ATTRIBUTE);if (iccProfileName.equalsIgnoreCase(nameAttr)) {profile = profileNode;}}}if (profile == null) return null;String href = XLinkSupport.getXLinkHref(profile);ICC_Profile p = null;if (href != null) {String baseURI = ((SVGOMDocument) doc).getURL();ParsedURL purl = new ParsedURL(baseURI, href);if (!purl.complete()) throw new BridgeException(paintedElement, ERR_URI_MALFORMED, new Object[] { href });try {ParsedURL pDocURL = null;if (baseURI != null) {pDocURL = new ParsedURL(baseURI);}ctx.getUserAgent().checkLoadExternalResource(purl, pDocURL);p = ICC_Profile.getInstance(purl.openStream());} catch (IOException e) {throw new BridgeException(paintedElement, ERR_URI_IO, new Object[] { href });} catch (SecurityException e) {throw new BridgeException(paintedElement, ERR_URI_UNSECURE, new Object[] { href });}}if (p == null) {return null;}int intent = convertIntent(profile);cs = new ICCColorSpaceExt(p, intent);cache.put(iccProfileName.toLowerCase(), cs);return cs;}public static void main(String args[]) {String midletClass = null;;File appletInputFile = null;File deviceInputFile = null;File midletInputFile = null;File htmlOutputFile = null;File appletOutputFile = null;File deviceOutputFile = null;File midletOutputFile = null;List params = new ArrayList();for (int i = 0; i < args.length; i++) {params.add(args[i]);}Iterator argsIterator = params.iterator();while (argsIterator.hasNext()) {String arg = (String) argsIterator.next();argsIterator.remove();if ((arg.equals(""--help"")) || (arg.equals(""-help""))) {System.out.println(usage());System.exit(0);} else if (arg.equals(""--midletClass"")) {midletClass = (String) argsIterator.next();argsIterator.remove();} else if (arg.equals(""--appletInput"")) {appletInputFile = new File((String) argsIterator.next());argsIterator.remove();} else if (arg.equals(""--deviceInput"")) {deviceInputFile = new File((String) argsIterator.next());argsIterator.remove();} else if (arg.equals(""--midletInput"")) {midletInputFile = new File((String) argsIterator.next());argsIterator.remove();} else if (arg.equals(""--htmlOutput"")) {htmlOutputFile = new File((String) argsIterator.next());argsIterator.remove();} else if (arg.equals(""--appletOutput"")) {appletOutputFile = new File((String) argsIterator.next());argsIterator.remove();} else if (arg.equals(""--deviceOutput"")) {deviceOutputFile = new File((String) argsIterator.next());argsIterator.remove();} else if (arg.equals(""--midletOutput"")) {midletOutputFile = new File((String) argsIterator.next());argsIterator.remove();}}if (midletClass == null || appletInputFile == null || deviceInputFile == null || midletInputFile == null || htmlOutputFile == null || appletOutputFile == null || deviceOutputFile == null || midletOutputFile == null) {System.out.println(usage());System.exit(0);}try {DeviceImpl device = null;String descriptorLocation = null;JarFile jar = new JarFile(deviceInputFile);for (Enumeration en = jar.entries(); en.hasMoreElements(); ) {String entry = ((JarEntry) en.nextElement()).getName();if ((entry.toLowerCase().endsWith("".xml"") || entry.toLowerCase().endsWith(""device.txt"")) && !entry.toLowerCase().startsWith(""meta-inf"")) {descriptorLocation = entry;break;}}if (descriptorLocation != null) {EmulatorContext context = new EmulatorContext() {private DisplayComponent displayComponent = new NoUiDisplayComponent();private InputMethod inputMethod = new J2SEInputMethod();private DeviceDisplay deviceDisplay = new J2SEDeviceDisplay(this);private FontManager fontManager = new J2SEFontManager();private DeviceComponent deviceComponent = new SwingDeviceComponent(true);public DisplayComponent getDisplayComponent() {return displayComponent;}public InputMethod getDeviceInputMethod() {return inputMethod;}public DeviceDisplay getDeviceDisplay() {return deviceDisplay;}public FontManager getDeviceFontManager() {return fontManager;}public InputStream getResourceAsStream(String name) {return MIDletBridge.getCurrentMIDlet().getClass().getResourceAsStream(name);}public DeviceComponent getDeviceComponent() {return deviceComponent;}};URL[] urls = new URL[1];urls[0] = deviceInputFile.toURI().toURL();ClassLoader classLoader = new ExtensionsClassLoader(urls, urls.getClass().getClassLoader());device = DeviceImpl.create(context, classLoader, descriptorLocation, J2SEDevice.class);}if (device == null) {System.out.println(""Error parsing device package: "" + descriptorLocation);System.exit(0);}createHtml(htmlOutputFile, device, midletClass, midletOutputFile, appletOutputFile, deviceOutputFile);createMidlet(midletInputFile.toURI().toURL(), midletOutputFile);IOUtils.copyFile(appletInputFile, appletOutputFile);IOUtils.copyFile(deviceInputFile, deviceOutputFile);} catch (IOException ex) {ex.printStackTrace();}System.exit(0);}public void convert(File src, File dest) throws IOException {InputStream in = new BufferedInputStream(new FileInputStream(src));DcmParser p = pfact.newDcmParser(in);Dataset ds = fact.newDataset();p.setDcmHandler(ds.getDcmHandler());try {FileFormat format = p.detectFileFormat();if (format != FileFormat.ACRNEMA_STREAM) {System.out.println(""\n"" + src + "": not an ACRNEMA stream!"");return;}p.parseDcmFile(format, Tags.PixelData);if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {System.out.println(""\n"" + src + "": contains UIDs!"" + "" => probable already DICOM - do not convert"");return;}boolean hasPixelData = p.getReadTag() == Tags.PixelData;boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;int pxlen = p.getReadLength();if (hasPixelData) {if (inflate) {ds.putUS(Tags.BitsAllocated, 16);pxlen = pxlen * 4 / 3;}if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {System.out.println(""\n"" + src + "": mismatch pixel data length!"" + "" => do not convert"");return;}}ds.putUI(Tags.StudyInstanceUID, uid(studyUID));ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));ds.putUI(Tags.SOPInstanceUID, uid(instUID));ds.putUI(Tags.SOPClassUID, classUID);if (!ds.contains(Tags.NumberOfSamples)) {ds.putUS(Tags.NumberOfSamples, 1);}if (!ds.contains(Tags.PhotometricInterpretation)) {ds.putCS(Tags.PhotometricInterpretation, ""MONOCHROME2"");}if (fmi) {ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));}OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));try {} finally {ds.writeFile(out, encodeParam());if (hasPixelData) {if (!skipGroupLen) {out.write(PXDATA_GROUPLEN);int grlen = pxlen + 8;out.write((byte) grlen);out.write((byte) (grlen >> 8));out.write((byte) (grlen >> 16));out.write((byte) (grlen >> 24));}out.write(PXDATA_TAG);out.write((byte) pxlen);out.write((byte) (pxlen >> 8));out.write((byte) (pxlen >> 16));out.write((byte) (pxlen >> 24));}if (inflate) {int b2, b3;for (; pxlen > 0; pxlen -= 3) {out.write(in.read());b2 = in.read();b3 = in.read();out.write(b2 & 0x0f);out.write(b2 >> 4 | ((b3 & 0x0f) << 4));out.write(b3 >> 4);}} else {for (; pxlen > 0; --pxlen) {out.write(in.read());}}out.close();}System.out.print('.');} finally {in.close();}}private Properties loadPropertiesFromURL(String propertiesURL, Properties defaultProperties) {Properties properties = new Properties(defaultProperties);URL url;try {url = new URL(propertiesURL);URLConnection urlConnection = url.openConnection();properties.load(urlConnection.getInputStream());} catch (MalformedURLException e) {System.out.println(""Error while loading url "" + propertiesURL + "" ("" + e.getClass().getName() + "")"");e.printStackTrace();} catch (IOException e) {System.out.println(""Error while loading url "" + propertiesURL + "" ("" + e.getClass().getName() + "")"");e.printStackTrace();}return properties;}"	5
"public static String send(String ipStr, int port, String password, String command, InetAddress localhost, int localPort) throws SocketTimeoutException, BadRcon, ResponseEmpty {StringBuffer response = new StringBuffer();try {rconSocket = new Socket();rconSocket.bind(new InetSocketAddress(localhost, localPort));rconSocket.connect(new InetSocketAddress(ipStr, port), RESPONSE_TIMEOUT);out = rconSocket.getOutputStream();in = rconSocket.getInputStream();BufferedReader buffRead = new BufferedReader(new InputStreamReader(in));rconSocket.setSoTimeout(RESPONSE_TIMEOUT);String digestSeed = """";boolean loggedIn = false;boolean keepGoing = true;while (keepGoing) {String receivedContent = buffRead.readLine();if (receivedContent.startsWith(""### Digest seed: "")) {digestSeed = receivedContent.substring(17, receivedContent.length());try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(digestSeed.getBytes());md5.update(password.getBytes());String digestStr = ""login "" + digestedToHex(md5.digest()) + ""\n"";out.write(digestStr.getBytes());} catch (NoSuchAlgorithmException e1) {response.append(""MD5 algorithm not available - unable to complete RCON request."");keepGoing = false;}} else if (receivedContent.startsWith(""error: not authenticated: you can only invoke 'login'"")) {throw new BadRcon();} else if (receivedContent.startsWith(""Authentication failed."")) {throw new BadRcon();} else if (receivedContent.startsWith(""Authentication successful, rcon ready."")) {keepGoing = false;loggedIn = true;}}if (loggedIn) {String cmd = ""exec "" + command + ""\n"";out.write(cmd.getBytes());readResponse(buffRead, response);if (response.length() == 0) {throw new ResponseEmpty();}}} catch (SocketTimeoutException timeout) {throw timeout;} catch (UnknownHostException e) {response.append(""UnknownHostException: "" + e.getMessage());} catch (IOException e) {response.append(""Couldn't get I/O for the connection: "" + e.getMessage());e.printStackTrace();} finally {try {if (out != null) {out.close();}if (in != null) {in.close();}if (rconSocket != null) {rconSocket.close();}} catch (IOException e1) {}}return response.toString();}public Out(Article article) throws Exception {String body = article.meta(ARTICLE_BODY).getString();String url = find(""a"", ""href"", body);while (url.length() > 0 && url.startsWith(""http://"")) {System.out.println(url);conn = (HttpURLConnection) new URL(url).openConnection();conn.setRequestMethod(""POST"");int code = conn.getResponseCode();String ping = conn.getHeaderField(""X-Pingback"");System.out.println(ping);if (ping != null) {conn = (HttpURLConnection) new URL(ping).openConnection();conn.setDoOutput(true);StringBuffer buffer = new StringBuffer();buffer.append(""<?xml version=\""1.0\""?>\n"");buffer.append(""<methodCall>\n"");buffer.append(""  <methodName>pingback.ping</methodName>\n"");buffer.append(""  <params>\n"");buffer.append(""<param><value><string>http://"" + User.host + ""/article?id="" + article.getId() + ""</string></value></param>\n"");buffer.append(""<param><value><string>"" + url + ""</string></value></param>\n"");buffer.append(""  </params>\n"");buffer.append(""</methodCall>\n"");System.out.println(buffer.toString());OutputStream out = conn.getOutputStream();out.write(buffer.toString().getBytes(""UTF-8""));code = conn.getResponseCode();InputStream in = null;if (code == 200) {in = conn.getInputStream();} else if (code < 0) {throw new IOException(""HTTP response unreadable."");} else {in = conn.getErrorStream();}Deploy.pipe(in, System.out);in.close();}url = find(""a"", ""href"", body);}}public static void extractZipFile(String filename) {try {byte[] buf = new byte[1024];ZipInputStream zipinputstream = null;ZipEntry zipentry;zipinputstream = new ZipInputStream(new FileInputStream(filename));zipentry = zipinputstream.getNextEntry();while (zipentry != null) {String entryName = zipentry.getName();int n;FileOutputStream fileoutputstream;File newFile = new File(entryName);String directory = newFile.getParent();if (directory == null) {if (newFile.isDirectory()) break;}fileoutputstream = new FileOutputStream(entryName);while ((n = zipinputstream.read(buf, 0, 1024)) > -1) fileoutputstream.write(buf, 0, n);fileoutputstream.close();zipinputstream.closeEntry();zipentry = zipinputstream.getNextEntry();}zipinputstream.close();} catch (Exception e) {e.printStackTrace();}}public Document index() throws CrawlingException {log.debug(""BEGINIG indexing page [code="" + getCode() + ""] ..."");URL url = null;InputStream in = null;String contentType = null;try {url = new URL(getServer().getProtocol() + ""://"" + getServer().getHost() + "":"" + getServer().getPort() + getPath());HttpURLConnection pageContent = (HttpURLConnection) url.openConnection();if (pageContent.getResponseCode() != HttpURLConnection.HTTP_OK) {log.debug(""page pk["" + getCode() + "","" + url.toExternalForm() + ""] is invalid"");return null;}String redireccion = pageContent.getHeaderField(""location"");if (redireccion != null) {log.debug(""Page "" + url.toExternalForm() + "" redirected to "" + redireccion);recordLink(redireccion);return null;}contentType = pageContent.getContentType();in = new BufferedInputStream(pageContent.getInputStream(), 32768);} catch (MalformedURLException e) {log.error(""Invalid page address"", e);} catch (ConnectException e) {if (getServer() != null) {log.error(""Unable to connect to page: "" + getServer().getProtocol() + ""://"" + getServer().getHost() + "":"" + getServer().getPort() + getPath(), e);}} catch (UnknownHostException uhe) {log.warn(""Unknow host indexing page "" + getURL(), uhe);} catch (IOException e) {log.warn(""Unable to index page "" + getURL(), e);}Document doc = generateDocument(contentType, in);log.debug(""END indexing page [code="" + getCode() + ""]"");return doc;}public void testReadHelloWorldTxt() throws Exception {final InputStream helloWorldIS = this.getClass().getClassLoader().getResourceAsStream(BASE_DIR + ""/HelloWorld.txt"");FileUtils.forceMkdir(new File(this.testDir.getAbsolutePath() + ""/org/settings4j/contentresolver""));final String helloWorldPath = this.testDir.getAbsolutePath() + ""/org/settings4j/contentresolver/HelloWorld.txt"";final FileOutputStream fileOutputStream = new FileOutputStream(new File(helloWorldPath));IOUtils.copy(helloWorldIS, fileOutputStream);IOUtils.closeQuietly(helloWorldIS);IOUtils.closeQuietly(fileOutputStream);LOG.info(""helloWorldPath: "" + helloWorldPath);final FSContentResolver contentResolver = new FSContentResolver();contentResolver.setRootFolderPath(this.testDir.getAbsolutePath());byte[] content = contentResolver.getContent(""org/settings4j/contentresolver/HelloWorld.txt"");assertNotNull(content);assertEquals(""Hello World"", new String(content, ""UTF-8""));content = contentResolver.getContent(""file:org/settings4j/contentresolver/HelloWorld.txt"");assertNotNull(content);assertEquals(""Hello World"", new String(content, ""UTF-8""));content = contentResolver.getContent(""file:/org/settings4j/contentresolver/HelloWorld.txt"");assertNotNull(content);assertEquals(""Hello World"", new String(content, ""UTF-8""));content = contentResolver.getContent(""file:laksjdhalksdhfa"");assertNull(content);content = contentResolver.getContent(""/org/settings4j/contentresolver/HelloWorld.txt"");assertNotNull(content);assertEquals(""Hello World"", new String(content, ""UTF-8""));}int doOne(int bid, int tid, int aid, int delta) {int aBalance = 0;if (Conn == null) {incrementFailedTransactionCount();return 0;}try {if (prepared_stmt) {pstmt1.setInt(1, delta);pstmt1.setInt(2, aid);pstmt1.executeUpdate();pstmt1.clearWarnings();pstmt2.setInt(1, aid);ResultSet RS = pstmt2.executeQuery();pstmt2.clearWarnings();while (RS.next()) {aBalance = RS.getInt(1);}pstmt3.setInt(1, delta);pstmt3.setInt(2, tid);pstmt3.executeUpdate();pstmt3.clearWarnings();pstmt4.setInt(1, delta);pstmt4.setInt(2, bid);pstmt4.executeUpdate();pstmt4.clearWarnings();pstmt5.setInt(1, tid);pstmt5.setInt(2, bid);pstmt5.setInt(3, aid);pstmt5.setInt(4, delta);pstmt5.executeUpdate();pstmt5.clearWarnings();} else {Statement Stmt = Conn.createStatement();String Query = ""UPDATE accounts "";Query += ""SET Abalance = Abalance + "" + delta + "" "";Query += ""WHEREAid = "" + aid;int res = Stmt.executeUpdate(Query);Stmt.clearWarnings();Query = ""SELECT Abalance "";Query += ""FROMaccounts "";Query += ""WHERE  Aid = "" + aid;ResultSet RS = Stmt.executeQuery(Query);Stmt.clearWarnings();while (RS.next()) {aBalance = RS.getInt(1);}Query = ""UPDATE tellers "";Query += ""SETTbalance = Tbalance + "" + delta + "" "";Query += ""WHERE  Tid = "" + tid;Stmt.executeUpdate(Query);Stmt.clearWarnings();Query = ""UPDATE branches "";Query += ""SETBbalance = Bbalance + "" + delta + "" "";Query += ""WHERE  Bid = "" + bid;Stmt.executeUpdate(Query);Stmt.clearWarnings();Query = ""INSERT INTO history(Tid, Bid, Aid, delta) "";Query += ""VALUES ("";Query += tid + "","";Query += bid + "","";Query += aid + "","";Query += delta + "")"";Stmt.executeUpdate(Query);Stmt.clearWarnings();Stmt.close();}if (transactions) {Conn.commit();}return aBalance;} catch (Exception E) {if (verbose) {System.out.println(""Transaction failed: "" + E.getMessage());E.printStackTrace();}incrementFailedTransactionCount();if (transactions) {try {Conn.rollback();} catch (SQLException E1) {}}}return 0;}public Bitmap getImage() throws IOException {int recordBegin = 78 + 8 * mCount;Bitmap result = null;FileChannel channel = new FileInputStream(mFile).getChannel();channel.position(mRecodeOffset[mPage]);ByteBuffer bodyBuffer;if (mPage + 1 < mCount) {int length = mRecodeOffset[mPage + 1] - mRecodeOffset[mPage];bodyBuffer = channel.map(MapMode.READ_ONLY, mRecodeOffset[mPage], length);byte[] tmpCache = new byte[bodyBuffer.capacity()];bodyBuffer.get(tmpCache);FileOutputStream o = new FileOutputStream(""/sdcard/test.bmp"");o.write(tmpCache);o.flush();o.getFD().sync();o.close();result = BitmapFactory.decodeByteArray(tmpCache, 0, length);} else {}channel.close();return result;}private void checkLogin(String email, String password) throws JspTagException {String cryptedPassword;try {MessageDigest crypt = MessageDigest.getInstance(""MD5"");crypt.update(password.getBytes());byte digest[] = crypt.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < digest.length; i++) {hexString.append(hexDigit(digest[i]));}cryptedPassword = hexString.toString();crypt.reset();InitialContext context = new InitialContext();java.lang.Object homeRef = context.lookup(""java:comp/env/ejb/Value"");ValueHome valueHome = (ValueHome) PortableRemoteObject.narrow(homeRef, ValueHome.class);Value value = valueHome.findByPasswordCheck(email, cryptedPassword);pageContext.setAttribute(""validLogin"", new Boolean(true));HttpSession session = pageContext.getSession();session.setAttribute(""jspShop.userID"", value.getObjectID());} catch (NoSuchAlgorithmException e) {System.err.println(""jspShop: Could not get instance of MD5 algorithm. Please fix this!"" + e.getMessage());e.printStackTrace();throw new JspTagException(""Error crypting password!: "" + e.getMessage());} catch (ObjectNotFoundException e) {pageContext.setAttribute(""validLogin"", new Boolean(false));} catch (NamingException e) {System.err.println(""jspShop: Could not initialise context in LoginTag"");e.printStackTrace();} catch (RemoteException e) {System.err.println(""jspShop: Could not connect to container in LoginTag"");} catch (FinderException e) {System.err.println(""jspShop: Error using finderQuery in LoginTag"");}}public void logging() throws Fault {final InterceptorWrapper wrap = new InterceptorWrapper(message);final LoggingMessage buffer = new LoggingMessage(""Inbound Message\n----------------------------"");String encoding = (String) wrap.getEncoding();if (encoding != null) {buffer.getEncoding().append(encoding);}Object headers = wrap.getProtocolHeaders();if (headers != null) {buffer.getHeader().append(headers);}InputStream is = (InputStream) wrap.getContent(InputStream.class);if (is != null) {CachedOutputStream bos = new CachedOutputStream();try {IOUtils.copy(is, bos);bos.flush();is.close();this.message.setContent(InputStream.class, bos.getInputStream());if (bos.getTempFile() != null) {logger.error(""\nMessage (saved to tmp file):\n"");logger.error(""Filename: "" + bos.getTempFile().getAbsolutePath() + ""\n"");}if (bos.size() > limit) {logger.error(""(message truncated to "" + limit + "" bytes)\n"");}bos.writeCacheTo(buffer.getPayload(), limit);bos.close();} catch (IOException e) {throw new Fault(e);}}logger.debug(""Message received :\n"" + buffer.getPayload().toString());}@Overridepublic void sendErrorMessage(String message) throws EntriesException, StatementNotExecutedException, NotConnectedException, MessagingException {if (query == null) {throw new NotConnectedException();}ArrayList<String> recipients = query.getUserManager().getTecMail();Mail mail = new Mail(recipients);try {ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(""log/ossobooklog.zip""));FileInputStream fis = new FileInputStream(""log/ossobook.log"");ZipEntry entry = new ZipEntry(""ossobook.log"");zos.putNextEntry(entry);byte[] buffer = new byte[8192];int read = 0;while ((read = fis.read(buffer, 0, 1024)) != -1) {zos.write(buffer, 0, read);}zos.closeEntry();fis.close();zos.close();mail.sendErrorMessage(message, new File(""log/ossobooklog.zip""), getUserName());} catch (Exception ex) {ex.printStackTrace();}}"	5
"public static void readAsFile(String fileName, String url) {BufferedInputStream in = null;BufferedOutputStream out = null;URLConnection conn = null;try {conn = new URL(url).openConnection();conn.setDoInput(true);in = new BufferedInputStream(conn.getInputStream());out = new BufferedOutputStream(new FileOutputStream(fileName));int b;while ((b = in.read()) != -1) {out.write(b);}} catch (Exception ex) {log.error(ex.getMessage(), ex);} finally {if (null != in) {try {in.close();} catch (IOException e) {}}if (null != out) {try {out.flush();out.close();} catch (IOException e) {}}}}public static byte[] findHead(String url) {byte[] result = new byte[0];InputStream in = null;try {in = new URL(appendSlash(url)).openStream();byte[] buffer = new byte[1024];int len = -1;while ((len = in.read(buffer)) != -1) {byte[] temp = new byte[result.length + len];System.arraycopy(result, 0, temp, 0, result.length);System.arraycopy(buffer, 0, temp, result.length, len);result = temp;if (DEBUG) {log.debug(String.format(""len=%d, result.length=%d"", len, result.length));}if (result.length > 4096) {break;}if (result.length > 1024) {String s = new String(result).replaceAll(""\\s+"", "" "");Matcher m = P_HEAD.matcher(s);if (m.find()) {break;}}}} catch (Exception e) {log.error(e.getMessage(), e);} finally {try {if (null != in) in.close();} catch (IOException e) {}}return result;}public static void copyFile(File dest, File src) throws IOException {FileChannel srcChannel = new FileInputStream(src).getChannel();FileChannel dstChannel = new FileOutputStream(dest).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();}public void run_two() {System.out.println(""Waiting to see if server has logged in"");if (rept != null) {rept.post(""Checking if RegServer is online.."");}try {boolean waiting = true;while (waiting) {String con = """";String s;URL url = new URL(where);BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));System.out.print(""Checking for xRegistry.."");if (rept != null) {rept.post(""Searching for xRegistryServer.."");}while ((s = br.readLine()) != null) {con = con + s;}err_catch = con;try {br.close();} catch (IOException ioe) {System.out.print(""..b_r wouldn't close.."");}servers = xls.split(""SERVER"", con);if (servers.length < 1) {System.out.println(""-->Server not available yet."");if (rept != null) {rept.post(""-->Server currently unavailable.."");}try {Thread.sleep(read_delay);} catch (Exception inter) {}if (read_delay < 20000) {read_delay = read_delay * 2;if (debug == true) {System.out.println(""Set read_delay to:"" + read_delay);}} else {read_delay = read_delay + 3000;}if (read_delay > 90000) {waiting = false;}}if (servers.length > 0) {waiting = false;}}String[] regip = xls.split(""IP"", servers[0]);String[] regport = xls.split(""PORT"", servers[0]);int rp = 0;try {rp = Integer.parseInt(regport[0]);} catch (NumberFormatException nfe) {rp = 0;}System.out.println(""Trying for socket on "" + regip[0] + "", port:"" + rp);if (rept != null) {rept.post(""Connecting to RegServer"");}int f = 0;Socket client = new Socket(InetAddress.getByName(regip[0]), rp);System.out.println(""Socket connected to xRegistry"");if (rept != null) {rept.post(""Connected to RegServer"");}xcc = new xClientConn(client);xcc.set_IP(ipad);xcc.set_Port(port);xcc.setListen(this);new Thread(xcc).start();} catch (Exception e) {System.out.println(""Failed client connection to registry, 'Java' errorcodes:\n"" + e.toString() + ""\n\nMessage from server?:\n"" + err_catch);if (rept != null) {rept.post(""Failed at registry connect!"");}if (debug == true) {e.printStackTrace();}term();}}public String getShortToken(String md5Str) {MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");md5.update(md5Str.getBytes(JspRunConfig.charset));} catch (Exception e) {e.printStackTrace();}StringBuffer token = toHex(md5.digest());return token.substring(8, 24);}public String getLongToken(String md5Str) {MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");md5.update(md5Str.getBytes(JspRunConfig.charset));} catch (Exception e) {e.printStackTrace();}StringBuffer token = toHex(md5.digest());return token.toString();}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}protected void yesAction() {try {String result = getSurveyURL() + ""&buildtime="" + Version.getBuildTimeString();LOG.log(result);if (!maySubmitSurvey()) {return;}BufferedReader br = null;try {URL url = new URL(result);InputStream urls = url.openStream();InputStreamReader is = new InputStreamReader(urls);br = new BufferedReader(is);String line;StringBuilder sb = new StringBuilder();while ((line = br.readLine()) != null) {sb.append(line);sb.append(System.getProperty(""line.separator""));}LOG.log(sb.toString());} catch (IOException e) {LOG.log(""Could not open URL using Java"", e);try {PlatformFactory.ONLY.openURL(new URL(result));DrJava.getConfig().setSetting(OptionConstants.LAST_DRJAVA_SURVEY_RESULT, result);} catch (IOException e2) {LOG.log(""Could not open URL using web browser"", e2);}} finally {try {if (br != null) br.close();} catch (IOException e) {}}} finally {noAction();}}public static byte[] openHttpResult(String urlPath, boolean retry) throws IOException {AQUtility.debug(""net"", urlPath);URL url = new URL(urlPath);HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.setUseCaches(false);connection.setInstanceFollowRedirects(true);connection.setConnectTimeout(NET_TIMEOUT);int code = connection.getResponseCode();if (code == 307 && retry) {String redirect = connection.getHeaderField(""Location"");return openHttpResult(redirect, false);}if (code == -1 && retry) {return openHttpResult(urlPath, false);}AQUtility.debug(""response"", code);if (code == -1 || code < 200 || code >= 300) {throw new IOException();}byte[] result = AQUtility.toBytes(connection.getInputStream());return result;}"	5
"public void render(Map model, HttpServletRequest request, HttpServletResponse response) throws Exception {response.setContentType(s_contentType);response.setHeader(""Cache-control"", ""no-cache"");InputStream graphStream = getGraphStream(request);OutputStream out = getOutputStream(response);IOUtils.copy(graphStream, out);out.flush();}public Configuration(URL url) {InputStream in = null;try {load(in = url.openStream());} catch (Exception e) {throw new RuntimeException(""Could not load configuration from "" + url, e);} finally {if (in != null) {try {in.close();} catch (IOException ignore) {}}}}@Overrideprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {String fullUrl = req.getRequestURL().toString();if (fullUrl.indexOf(ip) != -1) {fullUrl = fullUrl.replaceAll(ip, ""a.tbcdn.cn"");}URL url = new URL(fullUrl);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));PrintWriter out = resp.getWriter();String line;while ((line = in.readLine()) != null) {out.println(line);}in.close();out.flush();}public int procesar() {int mas = 0;String uriOntologia = """", source = """", uri = """";String fichOrigenHTML = """", fichOrigenLN = """";String ficheroOutOWL = """";md5 firma = null;StringTokenV2 entra = null, entra2 = null, entra3 = null;FileInputStream lengNat = null;BufferedInputStream lengNat2 = null;DataInputStream entradaLenguajeNatural = null;FileWriter salOWL = null;BufferedWriter salOWL2 = null;PrintWriter salidaOWL = null;String sujeto = """", verbo = """", CD = """", CI = """", fraseOrigen = """";StringTokenV2 token2;boolean bandera = false;OntClass c = null;OntClass cBak = null;String claseTrabajo = """";String nombreClase = """", nombrePropiedad = """", variasPalabras = """";int incre = 0, emergencia = 0;String lineaSalida = """";String[] ontologia = new String[5];ontologia[0] = ""http://www.criado.info/owl/vertebrados_es.owl#"";ontologia[1] = ""http://www.w3.org/2001/sw/WebOnt/guide-src/wine#"";ontologia[2] = ""http://www.co-ode.org/ontologies/pizza/2005/10/18/pizza.owl#"";ontologia[3] = ""http://www.w3.org/2001/sw/WebOnt/guide-src/food#"";ontologia[4] = ""http://www.daml.org/2001/01/gedcom/gedcom#"";String[] ontologiaSource = new String[5];ontologiaSource[0] = this.directorioMapeo + ""\\"" + ""mapeo_vertebrados_es.xml"";ontologiaSource[1] = this.directorioMapeo + ""\\"" + ""mapeo_wine_es.xml"";ontologiaSource[2] = this.directorioMapeo + ""\\"" + ""mapeo_pizza_es.xml"";ontologiaSource[3] = this.directorioMapeo + ""\\"" + ""mapeo_food_es.xml"";ontologiaSource[4] = this.directorioMapeo + ""\\"" + ""mapeo_parentesco_es.xml"";mapeoIdiomas clasesOntologias;try {if ((entrada = entradaFichero.readLine()) != null) {if (entrada.trim().length() > 10) {entrada2 = new StringTokenV2(entrada.trim(), ""\"""");if (entrada2.isIncluidaSubcadena(""<fichero ontologia="")) {ontologiaOrigen = entrada2.getToken(2);fichOrigenHTML = entrada2.getToken(4);fichOrigenLN = entrada2.getToken(6);if (ontologiaOrigen.equals(""VERTEBRADOS"")) {source = ontologiaSource[0];uriOntologia = ontologia[0];}if (ontologiaOrigen.equals(""WINE"")) {source = ontologiaSource[1];uriOntologia = ontologia[1];}if (ontologiaOrigen.equals(""PIZZA"")) {source = ontologiaSource[2];uriOntologia = ontologia[2];}if (ontologiaOrigen.equals(""FOOD"")) {source = ontologiaSource[3];uriOntologia = ontologia[3];}if (ontologiaOrigen.equals(""PARENTESCOS"")) {source = ontologiaSource[4];uriOntologia = ontologia[4];}firma = new md5(uriOntologia, false);clasesOntologias = new mapeoIdiomas(source);uri = """";ficheroOutOWL = """";entra2 = new StringTokenV2(fichOrigenHTML, ""\\"");int numToken = entra2.getNumeroTokenTotales();entra = new StringTokenV2(fichOrigenHTML, "" "");if (entra.isIncluidaSubcadena(directorioLocal)) {entra = new StringTokenV2(entra.getQuitar(directorioLocal) + """", "" "");uri = entra.getCambiar(""\\"", ""/"");uri = entra.getQuitar(entra2.getToken(numToken)) + """";entra3 = new StringTokenV2(entra2.getToken(numToken), ""."");ficheroOutOWL = entra3.getToken(1) + ""_"" + firma.toString() + "".owl"";uri = urlPatron + uri + ficheroOutOWL;}entra3 = new StringTokenV2(fichOrigenHTML, ""."");ficheroOutOWL = entra3.getToken(1) + ""_"" + firma.toString() + "".owl"";lineaSalida = ""<vistasemantica origen=\"""" + fichOrigenLN + ""\"" destino=\"""" + uri + ""\"" />"";lengNat = new FileInputStream(fichOrigenLN);lengNat2 = new BufferedInputStream(lengNat);entradaLenguajeNatural = new DataInputStream(lengNat2);salOWL = new FileWriter(ficheroOutOWL);salOWL2 = new BufferedWriter(salOWL);salidaOWL = new PrintWriter(salOWL2);while ((entradaInstancias = entradaLenguajeNatural.readLine()) != null) {sujeto = """";verbo = """";CD = """";CI = """";fraseOrigen = """";if (entradaInstancias.trim().length() > 10) {entrada2 = new StringTokenV2(entradaInstancias.trim(), ""\"""");if (entrada2.isIncluidaSubcadena(""<oracion sujeto="")) {sujeto = entrada2.getToken(2).trim();verbo = entrada2.getToken(4).trim();CD = entrada2.getToken(6).trim();CI = entrada2.getToken(8).trim();fraseOrigen = entrada2.getToken(10).trim();if (sujeto.length() > 0 & verbo.length() > 0 & CD.length() > 0) {bandera = false;c = null;cBak = null;nombreClase = clasesOntologias.getClaseInstancia(CD);if (nombreClase.length() > 0) {bandera = true;}if (bandera) {if (incre == 0) {salidaOWL.write("" <rdf:RDF"" + ""\n"");salidaOWL.write("" xmlns:j.0=\"""" + uriOntologia + ""\"""" + ""\n"");salidaOWL.write("" xmlns:protege=\""http://protege.stanford.edu/plugins/owl/protege#\"""" + ""\n"");salidaOWL.write("" xmlns:rdf=\""http://www.w3.org/1999/02/22-rdf-syntax-ns#\"""" + ""\n"");salidaOWL.write("" xmlns:xsd=\""http://www.w3.org/2001/XMLSchema#\"""" + ""\n"");salidaOWL.write("" xmlns:rdfs=\""http://www.w3.org/2000/01/rdf-schema#\"""" + ""\n"");salidaOWL.write("" xmlns:owl=\""http://www.w3.org/2002/07/owl#\"""" + ""\n"");salidaOWL.write("" xmlns=\"""" + uri + ""#\"""" + ""\n"");salidaOWL.write(""xml:base=\"""" + uri + ""\"">"" + ""\n"");salidaOWL.write(""<owl:Ontology rdf:about=\""\"">"" + ""\n"");salidaOWL.write("" <owl:imports rdf:resource=\"""" + uriOntologia + ""\""/>"" + ""\n"");salidaOWL.write(""</owl:Ontology>"" + ""\n"");salidaOWL.flush();salida.write(lineaSalida + ""\n"");salida.flush();incre = 1;}salidaOWL.write(""<j.0:"" + nombreClase + "" rdf:ID=\"""" + sujeto.toUpperCase() + ""\""/>"" + ""\n"");salidaOWL.write(""<owl:AllDifferent>"" + ""\n"");salidaOWL.write(""  <owl:distinctMembers rdf:parseType=\""Collection\"">"" + ""\n"");salidaOWL.write(""<"" + nombreClase + "" rdf:about=\""#"" + sujeto.toUpperCase() + ""\""/>"" + ""\n"");salidaOWL.write(""  </owl:distinctMembers>"" + ""\n"");salidaOWL.write(""</owl:AllDifferent>"" + ""\n"");salidaOWL.flush();bandera = false;}}}}}salidaOWL.write("" </rdf:RDF>"" + ""\n"" + ""\n"");salidaOWL.write(""<!-- Creado por [html2ws]  http://www.luis.criado.org -->"" + ""\n"");salidaOWL.flush();}}mas = 1;} else {salida.write(""</listaVistasSemanticas>\n"");salida.flush();salida.close();bw2.close();fw2.close();salidaOWL.close();entradaFichero.close();ent2.close();ent1.close();mas = -1;}} catch (Exception e) {mas = -2;salida.write(""No se encuentra: "" + fichOrigen + ""\n"");salida.flush();}return mas;}private void downloadImage(final String sImgName) {if (sImgName != null && sImgName.length() > 0) {File f = new File(m_sTargetDir);if (f.canWrite()) {f = new File(f, sImgName);if (!f.exists()) {try {URL url = new URL(m_sCodeBase + '/' + sImgName);BufferedInputStream is = new BufferedInputStream(url.openStream());BufferedOutputStream os = new BufferedOutputStream(new FileOutputStream(f));int c;while ((c = is.read()) != -1) {os.write(c);}is.close();os.close();} catch (Exception exc) {System.out.println(""TestImagesHelper::downloadImage(): "" + exc);}}}}}private String readDataFromUrl(URL url) throws IOException {InputStream inputStream = null;InputStreamReader streamReader = null;BufferedReader in = null;StringBuffer data = new StringBuffer();try {inputStream = url.openStream();streamReader = new InputStreamReader(inputStream);in = new BufferedReader(streamReader);String inputLine;while ((inputLine = in.readLine()) != null) data.append(inputLine);} finally {if (in != null) {in.close();}if (streamReader != null) {streamReader.close();}if (inputStream != null) {inputStream.close();}}return data.toString();}public void command() {JFileChooser chooser = new JFileChooser();chooser.setCurrentDirectory(new File(dir));int returnVal = chooser.showOpenDialog(null);if (returnVal == JFileChooser.APPROVE_OPTION) {filename = chooser.getSelectedFile().getAbsolutePath();String f2 = """";for (int i = 0; i < filename.length(); ++i) {if (filename.charAt(i) != '\\') {f2 = f2 + filename.charAt(i);} else f2 = f2 + '/';}filename = f2;if (filename.contains(dir)) {filename = filename.substring(dir.length());} else {try {FileChannel srcFile = new FileInputStream(filename).getChannel();FileChannel dstFile;filename = ""ueditor_files/"" + chooser.getSelectedFile().getName();File newFile;if (!(newFile = new File(dir + filename)).createNewFile()) {dstFile = new FileInputStream(dir + filename).getChannel();newFile = null;} else {dstFile = new FileOutputStream(newFile).getChannel();}dstFile.transferFrom(srcFile, 0, srcFile.size());srcFile.close();dstFile.close();System.out.println(""file copyed to: "" + dir + filename);} catch (Exception e) {e.printStackTrace();label.setIcon(InputText.iconX);filename = null;for (Group g : groups) {g.updateValidity(true);}return;}}label.setIcon(InputText.iconV);for (Group g : groups) {g.updateValidity(true);}}}private void insertContent(ImageData imageData, Element element) {URL url = getClass().getResource(imageData.getURL());try {File imageFileRead = new File(url.toURI());FileInputStream inputStream = new FileInputStream(imageFileRead);String imageFileWritePath = ""htmlReportFiles"" + ""/"" + imageData.getURL();File imageFileWrite = new File(imageFileWritePath);String[] filePathTokens = imageFileWritePath.split(""/"");String directoryPathCreate = filePathTokens[0];int i = 1;while (i < filePathTokens.length - 1) {directoryPathCreate = directoryPathCreate + ""/"" + filePathTokens[i];i++;}File fileDirectoryPathCreate = new File(directoryPathCreate);if (!fileDirectoryPathCreate.exists()) {boolean successfulFileCreation = fileDirectoryPathCreate.mkdirs();if (successfulFileCreation == false) {throw new ExplanationException(""Unable to create folders in path "" + directoryPathCreate);}}FileOutputStream fileOutputStream = new FileOutputStream(imageFileWrite);byte[] data = new byte[1024];int readDataNumberOfBytes = 0;while (readDataNumberOfBytes != -1) {readDataNumberOfBytes = inputStream.read(data, 0, data.length);if (readDataNumberOfBytes != -1) {fileOutputStream.write(data, 0, readDataNumberOfBytes);}}inputStream.close();fileOutputStream.close();} catch (Exception ex) {throw new ExplanationException(ex.getMessage());}String caption = imageData.getCaption();Element imageElement = element.addElement(""img"");if (imageData.getURL().charAt(0) != '/') imageElement.addAttribute(""src"", ""htmlReportFiles"" + ""/"" + imageData.getURL()); else imageElement.addAttribute(""src"", ""htmlReportFiles"" + imageData.getURL());imageElement.addAttribute(""alt"", ""image not available"");if (caption != null) {element.addElement(""br"");element.addText(caption);}}public static void get_PK_data() {try {FileWriter file_writer = new FileWriter(""xml_data/PK_data_dump.xml"");BufferedWriter file_buffered_writer = new BufferedWriter(file_writer);URL fdt = new URL(""http://opendata.5t.torino.it/get_pk"");URLConnection url_connection = fdt.openConnection();BufferedReader in = new BufferedReader(new InputStreamReader(url_connection.getInputStream()));String input_line;int num_lines = 0;while ((input_line = in.readLine()) != null) {file_buffered_writer.write(input_line + ""\n"");num_lines++;}System.out.println(""Parking :: Writed "" + num_lines + "" lines."");in.close();} catch (Exception e) {System.err.println(""Error: "" + e.getMessage());}}private static String makeMD5(String str) {byte[] bytes = new byte[32];try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(str.getBytes(""iso-8859-1""), 0, str.length());bytes = md.digest();} catch (Exception e) {return null;}return convertToHex(bytes);}"	5
"public DialogSongList(JFrame frame) {super(frame, ""Menu_SongList"", ""songList"");setMinimumSize(new Dimension(400, 200));JPanel panel, spanel;Container contentPane;(contentPane = getContentPane()).add(songSelector = new SongSelector(configKey, null, true));songSelector.setSelectionAction(new Runnable() {public void run() {final Item<URL, MidiFileInfo> item = songSelector.getSelectedInfo();if (item != null) {try {selection = new File(item.getKey().toURI());author.setEnabled(true);title.setEnabled(true);difficulty.setEnabled(true);save.setEnabled(true);final MidiFileInfo info = item.getValue();author.setText(info.getAuthor());title.setText(info.getTitle());Util.selectKey(difficulty, info.getDifficulty());return;} catch (Exception e) {}}selection = null;author.setEnabled(false);title.setEnabled(false);difficulty.setEnabled(false);save.setEnabled(false);}});contentPane.add(panel = new JPanel(), BorderLayout.SOUTH);panel.setLayout(new BorderLayout());JScrollPane scrollPane;panel.add(scrollPane = new JScrollPane(spanel = new JPanel()), BorderLayout.NORTH);scrollPane.setPreferredSize(new Dimension(0, 60));Util.addLabeledComponent(spanel, ""Lbl_Author"", author = new JTextField(10));Util.addLabeledComponent(spanel, ""Lbl_Title"", title = new JTextField(14));Util.addLabeledComponent(spanel, ""Lbl_Difficulty"", difficulty = new JComboBox());difficulty.addItem(new Item<Byte, String>((byte) -1, """"));for (Map.Entry<Byte, String> entry : SongSelector.DIFFICULTIES.entrySet()) {final String value = entry.getValue();difficulty.addItem(new Item<Byte, String>(entry.getKey(), Util.getMsg(value, value), value));}spanel.add(save = new JButton());Util.updateButtonText(save, ""Save"");save.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {final File selected = MidiSong.setMidiFileInfo(selection, author.getText(), title.getText(), getAsByte(difficulty));SongSelector.refresh();try {songSelector.setSelected(selected == null ? null : selected.toURI().toURL());} catch (MalformedURLException ex) {}}});author.setEnabled(false);title.setEnabled(false);difficulty.setEnabled(false);save.setEnabled(false);JButton button;panel.add(spanel = new JPanel(), BorderLayout.WEST);spanel.add(button = new JButton());Util.updateButtonText(button, ""Import"");button.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {final File inputFile = KeyboardHero.midiFile();try {if (inputFile == null) return;final File dir = (new File(Util.DATA_FOLDER + MidiSong.MIDI_FILES_DIR));if (dir.exists()) {if (!dir.isDirectory()) {Util.error(Util.getMsg(""Err_MidiFilesDirNotDirectory""), dir.getParent());return;}} else if (!dir.mkdirs()) {Util.error(Util.getMsg(""Err_CouldntMkDir""), dir.getParent());return;}File outputFile = new File(dir.getPath() + File.separator + inputFile.getName());if (!outputFile.exists() || KeyboardHero.confirm(""Que_FileExistsOverwrite"")) {final FileChannel inChannel = new FileInputStream(inputFile).getChannel();inChannel.transferTo(0, inChannel.size(), new FileOutputStream(outputFile).getChannel());}} catch (Exception ex) {Util.getMsg(Util.getMsg(""Err_CouldntImportSong""), ex.toString());}SongSelector.refresh();}});spanel.add(button = new JButton());Util.updateButtonText(button, ""Delete"");button.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {if (KeyboardHero.confirm(Util.getMsg(""Que_SureToDelete""))) {try {new File(songSelector.getSelectedFile().toURI()).delete();} catch (Exception ex) {Util.error(Util.getMsg(""Err_CouldntDeleteFile""), ex.toString());}SongSelector.refresh();}}});panel.add(spanel = new JPanel(), BorderLayout.CENTER);spanel.setLayout(new FlowLayout());spanel.add(button = new JButton());Util.updateButtonText(button, ""Close"");button.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {close();}});spanel.add(button = new JButton());Util.updateButtonText(button, ""Play"");button.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {Game.newGame(songSelector.getSelectedFile());close();}});panel.add(spanel = new JPanel(), BorderLayout.EAST);spanel.add(button = new JButton());Util.updateButtonText(button, ""Refresh"");button.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {SongSelector.refresh();}});getRootPane().setDefaultButton(button);instance = this;}public void actionPerformed(ActionEvent e) {final File inputFile = KeyboardHero.midiFile();try {if (inputFile == null) return;final File dir = (new File(Util.DATA_FOLDER + MidiSong.MIDI_FILES_DIR));if (dir.exists()) {if (!dir.isDirectory()) {Util.error(Util.getMsg(""Err_MidiFilesDirNotDirectory""), dir.getParent());return;}} else if (!dir.mkdirs()) {Util.error(Util.getMsg(""Err_CouldntMkDir""), dir.getParent());return;}File outputFile = new File(dir.getPath() + File.separator + inputFile.getName());if (!outputFile.exists() || KeyboardHero.confirm(""Que_FileExistsOverwrite"")) {final FileChannel inChannel = new FileInputStream(inputFile).getChannel();inChannel.transferTo(0, inChannel.size(), new FileOutputStream(outputFile).getChannel());}} catch (Exception ex) {Util.getMsg(Util.getMsg(""Err_CouldntImportSong""), ex.toString());}SongSelector.refresh();}public static void copyFile(File in, File outDir) throws IOException {FileChannel sourceChannel = null;FileChannel destinationChannel = null;try {sourceChannel = new FileInputStream(in).getChannel();File out = new File(outDir, in.getName());destinationChannel = new FileOutputStream(out).getChannel();sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel);} finally {try {if (sourceChannel != null) {sourceChannel.close();}} finally {if (destinationChannel != null) {destinationChannel.close();}}}}public static void main(String[] args) throws Exception {SocketConnector socketConnector = new SocketConnector();socketConnector.setPort(6080);SslSocketConnector sslSocketConnector = new SslSocketConnector();sslSocketConnector.setPort(6443);String serverKeystore = MockHttpListenerWithAuthentication.class.getClassLoader().getResource(""cert/serverkeystore.jks"").getPath();sslSocketConnector.setKeystore(serverKeystore);sslSocketConnector.setKeyPassword(""serverpass"");String serverTruststore = MockHttpListenerWithAuthentication.class.getClassLoader().getResource(""cert/servertruststore.jks"").getPath();sslSocketConnector.setTruststore(serverTruststore);sslSocketConnector.setTrustPassword(""serverpass"");server.addConnector(socketConnector);server.addConnector(sslSocketConnector);SecurityHandler securityHandler = createBasicAuthenticationSecurityHandler();HandlerList handlerList = new HandlerList();handlerList.addHandler(securityHandler);handlerList.addHandler(new AbstractHandler() {@Overridepublic void handle(String s, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, int i) throws IOException, ServletException {System.out.println(""uri: "" + httpServletRequest.getRequestURI());System.out.println(""queryString: "" + httpServletRequest.getQueryString());System.out.println(""method: "" + httpServletRequest.getMethod());ByteArrayOutputStream baos = new ByteArrayOutputStream();IOUtils.copy(httpServletRequest.getInputStream(), baos);System.out.println(""body: "" + baos.toString());PrintWriter writer = httpServletResponse.getWriter();writer.append(""testsvar"");Random r = new Random();for (int j = 0; j < 10; j++) {int value = r.nextInt(Integer.MAX_VALUE);writer.append(value + """");}System.out.println();writer.close();httpServletResponse.setStatus(HttpServletResponse.SC_OK);}});server.addHandler(handlerList);server.start();}@Overridepublic void handle(String s, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, int i) throws IOException, ServletException {System.out.println(""uri: "" + httpServletRequest.getRequestURI());System.out.println(""queryString: "" + httpServletRequest.getQueryString());System.out.println(""method: "" + httpServletRequest.getMethod());ByteArrayOutputStream baos = new ByteArrayOutputStream();IOUtils.copy(httpServletRequest.getInputStream(), baos);System.out.println(""body: "" + baos.toString());PrintWriter writer = httpServletResponse.getWriter();writer.append(""testsvar"");Random r = new Random();for (int j = 0; j < 10; j++) {int value = r.nextInt(Integer.MAX_VALUE);writer.append(value + """");}System.out.println();writer.close();httpServletResponse.setStatus(HttpServletResponse.SC_OK);}private int mergeFiles(Merge merge) throws MojoExecutionException {String encoding = DEFAULT_ENCODING;if (merge.getEncoding() != null && merge.getEncoding().length() > 0) {encoding = merge.getEncoding();}int numMergedFiles = 0;Writer ostream = null;FileOutputStream fos = null;try {fos = new FileOutputStream(merge.getTargetFile(), true);ostream = new OutputStreamWriter(fos, encoding);BufferedWriter output = new BufferedWriter(ostream);for (String orderingName : this.orderingNames) {List<File> files = this.orderedFiles.get(orderingName);if (files != null) {getLog().info(""Appending: "" + files.size() + "" files that matched the name: "" + orderingName + "" to the target file: "" + merge.getTargetFile().getAbsolutePath() + ""..."");for (File file : files) {String fileName = file.getName();getLog().info(""Appending file: "" + fileName + "" to the target file: "" + merge.getTargetFile().getAbsolutePath() + ""..."");InputStream input = null;try {input = new FileInputStream(file);if (merge.getSeparator() != null && merge.getSeparator().trim().length() > 0) {String replaced = merge.getSeparator().trim();replaced = replaced.replace(""\n"", """");replaced = replaced.replace(""\t"", """");replaced = replaced.replace(""#{file.name}"", fileName);replaced = replaced.replace(""#{parent.name}"", file.getParentFile() != null ? file.getParentFile().getName() : """");replaced = replaced.replace(""\\n"", ""\n"");replaced = replaced.replace(""\\t"", ""\t"");getLog().debug(""Appending separator: "" + replaced);IOUtils.copy(new StringReader(replaced), output);}IOUtils.copy(input, output, encoding);} catch (IOException ioe) {throw new MojoExecutionException(""Failed to append file: "" + fileName + "" to output file"", ioe);} finally {IOUtils.closeQuietly(input);}numMergedFiles++;}}}output.flush();} catch (IOException ioe) {throw new MojoExecutionException(""Failed to open stream file to output file: "" + merge.getTargetFile().getAbsolutePath(), ioe);} finally {if (fos != null) {IOUtils.closeQuietly(fos);}if (ostream != null) {IOUtils.closeQuietly(ostream);}}return numMergedFiles;}public Vector parse(String link) {addMessage(""Parsing: "" + link);links.removeAllElements();URLConnection conn = null;Reader rd = null;EditorKit kit = new HTMLEditorKit();Document doc = kit.createDefaultDocument();doc.putProperty(""IgnoreCharsetDirective"", Boolean.TRUE);URL url = null;try {url = new URL(link);} catch (MalformedURLException err) {System.out.println(""Malformed URL"");return links;}try {conn = new URL(link).openConnection();rd = new InputStreamReader(conn.getInputStream());} catch (Exception err) {err.printStackTrace();return links;}try {kit.read(rd, doc, 0);ElementIterator it = new ElementIterator(doc);javax.swing.text.Element elem;while ((elem = it.next()) != null) {SimpleAttributeSet s = (SimpleAttributeSet) elem.getAttributes().getAttribute(HTML.Tag.A);if (s != null) {if (s.toString().indexOf(""script"") >= 0) continue;String lnk = """";try {lnk = s.getAttribute(HTML.Attribute.HREF).toString();} catch (Exception err) {continue;}int j = 0;if ((j = lnk.indexOf('#')) >= 0) lnk = lnk.substring(0, j);URL urlLink = new URL(url, lnk);if (!url.getHost().equals(urlLink.getHost())) continue;String str = urlLink.toString();if (!str.startsWith(""http"")) continue;if (str.endsWith("".pdf"")) {continue;}for (int i = 0; i < leaveSuffix.length; i++) {if ((str.endsWith(leaveSuffix[i]))) continue;}boolean skip = false;for (int i = 0; i < suffix.length; i++) {if ((str.endsWith(suffix[i]))) skip = true;}if (!skip) {try {conn = urlLink.openConnection();} catch (Exception err) {}String contentType = null;if (contentType == null) contentType = conn.getContentType();if (contentType.equals(""application/pdf"")) {continue;} else if (!contentType.equals(""text/html"")) {continue;}}if (!links.contains(urlLink.toString())) {links.addElement(urlLink.toString());}}}} catch (Exception e) {e.printStackTrace();}return links;}public void jsFunction_extract(ScriptableFile outputFile) throws IOException, FileSystemException, ArchiveException {InputStream is = file.jsFunction_createInputStream();OutputStream output = outputFile.jsFunction_createOutputStream();BufferedInputStream buf = new BufferedInputStream(is);ArchiveInputStream input = ScriptableZipArchive.getFactory().createArchiveInputStream(buf);try {long count = 0;while (input.getNextEntry() != null) {if (count == offset) {IOUtils.copy(input, output);break;}count++;}} finally {input.close();output.close();is.close();}}public ServiceAdapterIfc deploy(String session, String name, byte jarBytes[], String jarName, String serviceClass, String serviceInterface) throws RemoteException, MalformedURLException, StartServiceException, SessionException {try {File jarFile = new File(jarName);jarName = jarFile.getName();String jarName2 = jarName;jarFile = new File(jarName2);int n = 0;while (jarFile.exists()) {jarName2 = jarName + n++;jarFile = new File(jarName2);}FileOutputStream fos = new FileOutputStream(jarName2);IOUtils.copy(new ByteArrayInputStream(jarBytes), fos);SCClassLoader cl = new SCClassLoader(new URL[] { new URL(""file://"" + jarFile.getAbsolutePath()) }, getMasterNode().getSCClassLoaderCounter());return startService(session, name, serviceClass, serviceInterface, cl);} catch (SessionException e) {throw e;} catch (Exception e) {throw new StartServiceException(""Could not deploy service: "" + e.getMessage(), e);}}public static Object deployNewService(String scNodeRmiName, String userName, String password, String name, String jarName, String serviceClass, String serviceInterface, Logger log) throws RemoteException, MalformedURLException, StartServiceException, NotBoundException, IllegalArgumentException, SecurityException, InstantiationException, IllegalAccessException, InvocationTargetException, SessionException {try {SCNodeInterface node = (SCNodeInterface) Naming.lookup(scNodeRmiName);String session = node.login(userName, password);ByteArrayOutputStream baos = new ByteArrayOutputStream();IOUtils.copy(new FileInputStream(jarName), baos);ServiceAdapterIfc adapter = node.deploy(session, name, baos.toByteArray(), jarName, serviceClass, serviceInterface);if (adapter != null) {return new ExternalDomain(node, adapter, adapter.getUri(), log).getProxy(Thread.currentThread().getContextClassLoader());}} catch (Exception e) {log.warn(""Could not send deploy command: "" + e.getMessage(), e);}return null;}"	5
"public void runTask(HashMap pjobParms) throws Exception {FTPClient lftpClient = null;FileInputStream lfisSourceFile = null;JBJFPluginDefinition lpluginCipher = null;IJBJFPluginCipher theCipher = null;try {JBJFFTPDefinition lxmlFTP = null;if (getFTPDefinition() != null) {lxmlFTP = getFTPDefinition();this.mstrSourceDirectory = lxmlFTP.getSourceDirectory();this.mstrTargetDirectory = lxmlFTP.getTargetDirectory();this.mstrFilename = lxmlFTP.getFilename();this.mstrRemoteServer = lxmlFTP.getServer();if (getResources().containsKey(""plugin-cipher"")) {lpluginCipher = (JBJFPluginDefinition) getResources().get(""plugin-cipher"");}if (lpluginCipher != null) {theCipher = getTaskPlugins().getCipherPlugin(lpluginCipher.getPluginId());}if (theCipher != null) {this.mstrServerUsr = theCipher.decryptString(lxmlFTP.getUser());this.mstrServerPwd = theCipher.decryptString(lxmlFTP.getPass());} else {this.mstrServerUsr = lxmlFTP.getUser();this.mstrServerPwd = lxmlFTP.getPass();}} else {throw new Exception(""Work unit [ "" + SHORT_NAME + "" ] is missing an FTP Definition.  Please check"" + "" your JBJF Batch Definition file an make sure"" + "" this work unit has a <resource> element added"" + "" within the <task> element."");}lfisSourceFile = new FileInputStream(mstrSourceDirectory + File.separator + mstrFilename);lftpClient = new FTPClient();lftpClient.connect(mstrRemoteServer);lftpClient.setFileType(lxmlFTP.getFileTransferType());if (!FTPReply.isPositiveCompletion(lftpClient.getReplyCode())) {throw new Exception(""FTP server [ "" + mstrRemoteServer + "" ] refused connection."");}if (!lftpClient.login(mstrServerUsr, mstrServerPwd)) {throw new Exception(""Unable to login to server [ "" + mstrTargetDirectory + "" ]."");}if (!lftpClient.changeWorkingDirectory(mstrTargetDirectory)) {throw new Exception(""Unable to change to remote directory [ "" + mstrTargetDirectory + ""]"");}lftpClient.enterLocalPassiveMode();if (!lftpClient.storeFile(mstrFilename, lfisSourceFile)) {throw new Exception(""Unable to upload [ "" + mstrSourceDirectory + ""/"" + mstrFilename + "" ]"" + "" to "" + mstrTargetDirectory + File.separator + mstrFilename + "" to "" + mstrRemoteServer);}lfisSourceFile.close();lftpClient.logout();} catch (Exception e) {throw e;} finally {if (lftpClient != null && lftpClient.isConnected()) {try {lftpClient.disconnect();} catch (IOException ioe) {}}if (lfisSourceFile != null) {try {lfisSourceFile.close();} catch (Exception e) {}}}}public TempFileTextBody(InputStream is, String mimeCharset) throws IOException {this.mimeCharset = mimeCharset;TempPath tempPath = TempStorage.getInstance().getRootTempPath();tempFile = tempPath.createTempFile(""attachment"", "".txt"");OutputStream out = tempFile.getOutputStream();IOUtils.copy(is, out);out.close();}public void handler(Map<String, String> result, TargetPage target) {try {URL url = new URL(target.getUrl());BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String line = null;while ((line = reader.readLine()) != null) {for (Map.Entry<String, String> entry : result.entrySet()) {if (line.indexOf(target.getInclude()) != -1) {int fromIndex = line.indexOf(target.getFromStr());String r = line.substring(fromIndex + target.getFromStr().length(), line.indexOf(target.getToStr(), fromIndex));entry.setValue(r);line = line.substring(line.indexOf(target.getToStr()) + target.getToStr().length());}}}reader.close();} catch (MalformedURLException e) {} catch (IOException e) {}}public boolean GetExternalLanguage() {String thisURL, newURL, TheLine;boolean ReadOK = true;int SlashPos = -1;thisURL = getDocumentBase().toString();SlashPos = thisURL.lastIndexOf(""/"");newURL = thisURL.substring(0, (SlashPos + 1)) + ""language.txt"";try {URL url = new URL(newURL);try {InputStream TheFile = url.openStream();try {DataInputStream MyData = new DataInputStream(TheFile);try {while ((TheLine = MyData.readLine()) != null) {if (TheLine.substring(0, 1).compareTo(""*"") == 0) {if (!ExternalLanguageVariable(TheLine)) {ReadOK = false;break;}}}} catch (Exception e) {System.out.println(""Error "" + e.toString());ReadOK = false;}} catch (Exception e) {System.out.println(""Error "" + e.toString());ReadOK = false;}} catch (Exception f) {System.out.println(""Error "" + f.toString());ReadOK = false;}} catch (Exception g) {System.out.println(""Error "" + g.toString());ReadOK = false;}return ReadOK;}public static void copyFile(File in, File out) throws IOException {FileChannel sourceChannel = new FileInputStream(in).getChannel();FileChannel destinationChannel = new FileOutputStream(out).getChannel();try {sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel);} finally {sourceChannel.close();destinationChannel.close();}}public void deploy(final File extension) {log.info(""Deploying new extension from {}"", extension.getPath());RequestContextHolder.setRequestContext(new RequestContext(SZoneConfig.getDefaultZoneName(), SZoneConfig.getAdminUserName(SZoneConfig.getDefaultZoneName()), new BaseSessionContext()));RequestContextHolder.getRequestContext().resolve();JarInputStream warIn;try {warIn = new JarInputStream(new FileInputStream(extension), true);} catch (IOException e) {log.warn(""Unable to open extension WAR at "" + extension.getPath(), e);return;}SAXReader reader = new SAXReader(false);reader.setIncludeExternalDTDDeclarations(false);String extensionPrefix = extension.getName().substring(0, extension.getName().lastIndexOf("".""));File extensionDir = new File(extensionBaseDir, extensionPrefix);extensionDir.mkdirs();File extensionWebDir = new File(this.extensionWebDir, extensionPrefix);extensionWebDir.mkdirs();try {for (JarEntry entry = warIn.getNextJarEntry(); entry != null; entry = warIn.getNextJarEntry()) {File inflated = new File(entry.getName().startsWith(infPrefix) ? extensionDir : extensionWebDir, entry.getName());if (entry.isDirectory()) {log.debug(""Creating directory at {}"", inflated.getPath());inflated.mkdirs();continue;}inflated.getParentFile().mkdirs();FileOutputStream entryOut = new FileOutputStream(inflated);if (!entry.getName().endsWith(configurationFileExtension)) {log.debug(""Inflating file resource to {}"", inflated.getPath());IOUtils.copy(warIn, entryOut);entryOut.close();continue;}try {final Document document = reader.read(new TeeInputStream(new CloseShieldInputStream(warIn), entryOut, true));Attribute schema = document.getRootElement().attribute(schemaAttribute);if (schema == null || StringUtils.isBlank(schema.getText())) {log.debug(""Inflating XML with unrecognized schema to {}"", inflated.getPath());continue;}if (schema.getText().contains(definitionsSchemaNamespace)) {log.debug(""Inflating and registering definition from {}"", inflated.getPath());document.getRootElement().add(new AbstractAttribute() {private static final long serialVersionUID = -7880537136055718310L;public QName getQName() {return new QName(extensionAttr, document.getRootElement().getNamespace());}public String getValue() {return extension.getName().substring(0, extension.getName().lastIndexOf("".""));}});definitionModule.addDefinition(document, true);continue;}if (schema.getText().contains(templateSchemaNamespace)) {log.debug(""Inflating and registering template from {}"", inflated.getPath());templateService.addTemplate(document, true, zoneModule.getDefaultZone());continue;}} catch (DocumentException e) {log.warn(""Malformed XML file in extension war at "" + extension.getPath(), e);return;}}} catch (IOException e) {log.warn(""Malformed extension war at "" + extension.getPath(), e);return;} finally {try {warIn.close();} catch (IOException e) {log.warn(""Unable to close extension war at "" + extension.getPath(), e);return;}RequestContextHolder.clear();}log.info(""Extension deployed successfully from {}"", extension.getPath());}public static void fileCopy(final File src, final File dest, final boolean overwrite) throws IOException {if (!dest.exists() || (dest.exists() && overwrite)) {final FileChannel srcChannel = new FileInputStream(src).getChannel();final FileChannel dstChannel = new FileOutputStream(dest).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();}}public static void copyFileStreams(File fromFile, File toFile) throws IOException {if (!fromFile.exists()) {return;}FileInputStream fis = new FileInputStream(fromFile);FileOutputStream fos = new FileOutputStream(toFile);int read = 0;byte[] buf = new byte[1024];while (-1 != read) {read = fis.read(buf);if (read >= 0) {fos.write(buf, 0, read);}}fos.close();fis.close();}public void testReleaseOnEntityWriteTo() throws Exception {HttpParams params = defaultParams.copy();ConnManagerParams.setMaxTotalConnections(params, 1);ConnManagerParams.setMaxConnectionsPerRoute(params, new ConnPerRouteBean(1));ThreadSafeClientConnManager mgr = createTSCCM(params, null);assertEquals(0, mgr.getConnectionsInPool());DefaultHttpClient client = new DefaultHttpClient(mgr, params);HttpGet httpget = new HttpGet(""/random/20000"");HttpHost target = getServerHttp();HttpResponse response = client.execute(target, httpget);ClientConnectionRequest connreq = mgr.requestConnection(new HttpRoute(target), null);try {connreq.getConnection(250, TimeUnit.MILLISECONDS);fail(""ConnectionPoolTimeoutException should have been thrown"");} catch (ConnectionPoolTimeoutException expected) {}HttpEntity e = response.getEntity();assertNotNull(e);ByteArrayOutputStream outsteam = new ByteArrayOutputStream();e.writeTo(outsteam);assertEquals(1, mgr.getConnectionsInPool());connreq = mgr.requestConnection(new HttpRoute(target), null);ManagedClientConnection conn = connreq.getConnection(250, TimeUnit.MILLISECONDS);mgr.releaseConnection(conn, -1, null);mgr.shutdown();}public void testReleaseOnAbort() throws Exception {HttpParams params = defaultParams.copy();ConnManagerParams.setMaxTotalConnections(params, 1);ConnManagerParams.setMaxConnectionsPerRoute(params, new ConnPerRouteBean(1));ThreadSafeClientConnManager mgr = createTSCCM(params, null);assertEquals(0, mgr.getConnectionsInPool());DefaultHttpClient client = new DefaultHttpClient(mgr, params);HttpGet httpget = new HttpGet(""/random/20000"");HttpHost target = getServerHttp();HttpResponse response = client.execute(target, httpget);ClientConnectionRequest connreq = mgr.requestConnection(new HttpRoute(target), null);try {connreq.getConnection(250, TimeUnit.MILLISECONDS);fail(""ConnectionPoolTimeoutException should have been thrown"");} catch (ConnectionPoolTimeoutException expected) {}HttpEntity e = response.getEntity();assertNotNull(e);httpget.abort();assertEquals(0, mgr.getConnectionsInPool());connreq = mgr.requestConnection(new HttpRoute(target), null);ManagedClientConnection conn = connreq.getConnection(250, TimeUnit.MILLISECONDS);mgr.releaseConnection(conn, -1, null);mgr.shutdown();}"	5
"public void generate(FileObject outputDirectory, FileObject generatedOutputDirectory, List<Library> libraryModels, String tapdocXml) throws FileSystemException {if (!outputDirectory.exists()) {outputDirectory.createFolder();}ZipUtils.extractZip(new ClasspathResource(classResolver, ""/com/erinors/tapestry/tapdoc/standalone/resources.zip""), outputDirectory);for (Library library : libraryModels) {String libraryName = library.getName();String libraryLocation = library.getLocation();outputDirectory.resolveFile(fileNameGenerator.getLibraryDirectory(libraryLocation)).createFolder();try {{String result = XsltUtils.xsltTransform(tapdocXml, getClass().getResourceAsStream(""Library.xsl""), ""libraryName"", libraryName);FileObject index = outputDirectory.resolveFile(fileNameGenerator.getLibraryDirectory(libraryLocation)).resolveFile(""index.html"");Writer out = new OutputStreamWriter(index.getContent().getOutputStream(), ""UTF-8"");out.write(result);out.close();}{String result = XsltUtils.xsltTransform(tapdocXml, getClass().getResourceAsStream(""ComponentIndex.xsl""), ""libraryName"", libraryName);FileObject index = outputDirectory.resolveFile(fileNameGenerator.getLibraryDirectory(libraryLocation)).resolveFile(""components.html"");Writer out = new OutputStreamWriter(index.getContent().getOutputStream(), ""UTF-8"");out.write(result);out.close();}} catch (Exception e) {throw new RuntimeException(e);}for (Component component : library.getComponents()) {String componentName = component.getName();System.out.println(""Generating "" + libraryName + "":"" + componentName + ""..."");Map<String, String> parameters = new HashMap<String, String>();parameters.put(""libraryName"", libraryName);parameters.put(""componentName"", componentName);String result = XsltUtils.xsltTransform(tapdocXml, getClass().getResourceAsStream(""Component.xsl""), parameters);Writer out = null;try {FileObject index = outputDirectory.resolveFile(fileNameGenerator.getComponentIndexFile(libraryLocation, componentName, true));out = new OutputStreamWriter(index.getContent().getOutputStream(), ""UTF-8"");out.write(result);out.close();Resource specificationLocation = component.getSpecificationLocation();if (specificationLocation.getRelativeResource(componentName + ""_tapdoc/resource"").getResourceURL() != null) {File srcResourcesDirectory = new File(specificationLocation.getRelativeResource(componentName + ""_tapdoc/resource"").getResourceURL().toURI());FileObject dstResourcesFileObject = outputDirectory.resolveFile(fileNameGenerator.getComponentDirectory(libraryLocation, componentName)).resolveFile(""resource"");if (srcResourcesDirectory.exists() && srcResourcesDirectory.isDirectory()) {File[] files = srcResourcesDirectory.listFiles();if (files != null) {for (File resource : files) {if (resource.isFile() && !resource.isHidden()) {FileObject resourceFileObject = dstResourcesFileObject.resolveFile(resource.getName());resourceFileObject.createFile();InputStream inResource = null;OutputStream outResource = null;try {inResource = new FileInputStream(resource);outResource = resourceFileObject.getContent().getOutputStream();IOUtils.copy(inResource, outResource);} finally {IOUtils.closeQuietly(inResource);IOUtils.closeQuietly(outResource);}}}}}}} catch (Exception e) {throw new RuntimeException(e);} finally {if (out != null) {try {out.close();} catch (IOException e) {e.printStackTrace();}}}}}{Writer out = null;try {{String result = XsltUtils.xsltTransform(tapdocXml, getClass().getResourceAsStream(""LibraryIndex.xsl""));FileObject index = outputDirectory.resolveFile(""libraries.html"");out = new OutputStreamWriter(index.getContent().getOutputStream(), ""UTF-8"");out.write(result);out.close();}{String result = XsltUtils.xsltTransform(tapdocXml, getClass().getResourceAsStream(""Overview.xsl""));FileObject index = outputDirectory.resolveFile(""overview.html"");out = new OutputStreamWriter(index.getContent().getOutputStream(), ""UTF-8"");out.write(result);out.close();}{String result = XsltUtils.xsltTransform(tapdocXml, getClass().getResourceAsStream(""AllComponents.xsl""));FileObject index = outputDirectory.resolveFile(""allcomponents.html"");out = new OutputStreamWriter(index.getContent().getOutputStream(), ""UTF-8"");out.write(result);out.close();}} catch (Exception e) {throw new RuntimeException(e);} finally {IOUtils.closeQuietly(out);}}}private void moveFile(File orig, File target) throws IOException {byte buffer[] = new byte[1000];int bread = 0;FileInputStream fis = new FileInputStream(orig);FileOutputStream fos = new FileOutputStream(target);while (bread != -1) {bread = fis.read(buffer);if (bread != -1) fos.write(buffer, 0, bread);}fis.close();fos.close();orig.delete();}private void loadHtmlHeader() {String skinUrl = getClass().getResource(""/"" + Properties.defaultSkinFileName).toString();if (Properties.headerSkin != null && !Properties.headerSkin.equals("""")) {try {URL url = new URL(Properties.headerSkin);if (url.getProtocol().equalsIgnoreCase(""http"")) {isHttpUrl = true;HttpURLConnection.setFollowRedirects(false);HttpURLConnection httpConn = (HttpURLConnection) url.openConnection();httpConn.setRequestMethod(""HEAD"");boolean urlExists = (httpConn.getResponseCode() == HttpURLConnection.HTTP_OK);if (urlExists) skinUrl = Properties.headerSkin;} else if (url.getProtocol().equalsIgnoreCase(""jar"")) {String jarFile = Properties.headerSkin.substring(9).split(""!"")[0];File skinFile = new File(jarFile);if (skinFile.exists() && skinFile.canRead()) skinUrl = Properties.headerSkin;} else if (url.getProtocol().equalsIgnoreCase(""file"")) {File skinFile = new File(Properties.headerSkin.substring(5));if (skinFile.exists() && skinFile.canRead()) skinUrl = Properties.headerSkin;} else {File skinFile = new File(Properties.headerSkin);if (skinFile.exists() && skinFile.canRead()) skinUrl = Properties.headerSkin;}} catch (Exception ex) {XohmLogger.debugPrintln(""Header skin url not valid. "" + ex.getMessage());XohmLogger.debugPrintln(""Loading the default skin."");ex.printStackTrace();}}XohmLogger.debugPrintln(""Header skin file = "" + skinUrl);try {LocalHtmlRendererContext rendererContext = new LocalHtmlRendererContext(htmlHeaderPanel, new SimpleUserAgentContext());rendererContext.navigate(skinUrl);headerLoaded = true;} catch (IOException urlEx) {XohmLogger.debugPrintln(""Exception occured while loading the skin. "" + urlEx.getMessage());}}private void outputSignedOpenDocument(byte[] signatureData) throws IOException {LOG.debug(""output signed open document"");OutputStream signedOdfOutputStream = getSignedOpenDocumentOutputStream();if (null == signedOdfOutputStream) {throw new NullPointerException(""signedOpenDocumentOutputStream is null"");}ZipOutputStream zipOutputStream = new ZipOutputStream(signedOdfOutputStream);ZipInputStream zipInputStream = new ZipInputStream(this.getOpenDocumentURL().openStream());ZipEntry zipEntry;while (null != (zipEntry = zipInputStream.getNextEntry())) {if (!zipEntry.getName().equals(ODFUtil.SIGNATURE_FILE)) {zipOutputStream.putNextEntry(zipEntry);IOUtils.copy(zipInputStream, zipOutputStream);}}zipInputStream.close();zipEntry = new ZipEntry(ODFUtil.SIGNATURE_FILE);zipOutputStream.putNextEntry(zipEntry);IOUtils.write(signatureData, zipOutputStream);zipOutputStream.close();}public InputLattice(String file, int type, boolean convertJoinMeet) throws FileNotFoundException, IOException {InputStream latStream = null;labels = new Vector();upperCoversVector = new Vector();Vector upperCovers = new Vector();edgeColors = new Hashtable();Vector upperCovering = new Vector();int level = 0;String str;String currentElt = null;String cover = null;boolean first = true;StreamTokenizer in;switch(type) {case FILE:latStream = new FileInputStream(file);break;case STRING:latStream = new StringBufferInputStream(file);break;case URL:URL url = new URL(""http"", Config.HOST, Config.PORT, ""/"" + Config.HASSE + ""/"" + Config.URL_STREAMER + file);System.out.println(""url is "" + url);URLConnection connection = url.openConnection();latStream = new DataInputStream(connection.getInputStream());break;}in = new StreamTokenizer(latStream);in.wordChars('^', '_');in.wordChars('*', '.');while (in.nextToken() != StreamTokenizer.TT_EOF) {if (in.ttype == StreamTokenizer.TT_WORD || in.ttype == StreamTokenizer.TT_NUMBER || in.ttype == '""') {if (in.ttype == StreamTokenizer.TT_NUMBER) {str = """" + Math.round(in.nval);} else {str = in.sval;}if (convertJoinMeet && level > 1) {str = stringSubstitute(str, joinStr, joinSign);str = stringSubstitute(str, meetStr, meetSign);}if (level == 1) {name = new String(str);}if (level == 2) {labels.addElement(str);currentElt = str;}if (level == 3) {upperCovers.addElement(str);}if (level == 4) {if (first) {upperCovers.addElement(str);cover = str;first = false;} else {edgeColors.put(new Edge(currentElt, cover), str);}}}if (in.ttype == '(') {level++;if (level == 3) upperCovers = new Vector();}if (in.ttype == ')') {level--;if (level == 3) first = true;if (level == 2) upperCoversVector.addElement(upperCovers);if (level == 0) {if (latStream != null) latStream.close();return;}}}}public void mouseClicked(MouseEvent e) {String userNameString;String passwordString;String md5String = """";MessageDigest md;userNameString = userNameJTextField.getText();passwordString = passwordJTextField.getText();try {md = MessageDigest.getInstance(""MD5"");md.update(passwordString.getBytes());md5String = new String(md.digest());md5String = Base64.encode(md5String.getBytes());System.out.println(md5String);} catch (NoSuchAlgorithmException e1) {e1.printStackTrace();System.out.println(""ʧ��"");}if (userNameString.equals(""zouwulingde"") && md5String.equals(""aKdtP09kSTkWCD/cylk="")) {JOptionPane.showMessageDialog(null, ""��ӭʹ��ѧ���ڹ���ϵͳ��"");} else {JOptionPane.showMessageDialog(null, ""�û�������벻��ȷ!!!!"");}}public static String encrypt(String password) throws NoSuchAlgorithmException {java.security.MessageDigest d = null;d = java.security.MessageDigest.getInstance(""MD5"");d.reset();d.update(password.getBytes());byte[] cr = d.digest();return getString(cr).toLowerCase();}@Overridepublic boolean setupDatabaseSchema() {Configuration cfg = Configuration.getInstance();Connection con = getConnection();if (null == con) return false;try {String sql = FileTool.readFile(cfg.getProperty(""database.sql.rootdir"") + System.getProperty(""file.separator"") + cfg.getProperty(""database.sql.mysql.setupschema""));sql = sql.replaceAll(MYSQL_SQL_SCHEMA_REPLACEMENT, StateSaver.getInstance().getDatabaseSettings().getSchema());con.setAutoCommit(false);Statement stmt = con.createStatement();String[] sqlParts = sql.split("";"");for (String sqlPart : sqlParts) {if (sqlPart.trim().length() > 0) stmt.executeUpdate(sqlPart);}con.commit();JOptionPane.showMessageDialog(null, language.getProperty(""database.messages.executionsuccess""), language.getProperty(""dialog.information.title""), JOptionPane.INFORMATION_MESSAGE);return true;} catch (SQLException e) {Logger.logException(e);}try {if (con != null) con.rollback();} catch (SQLException e) {Logger.logException(e);}JOptionPane.showMessageDialog(null, language.getProperty(""database.messages.executionerror""), language.getProperty(""dialog.error.title""), JOptionPane.ERROR_MESSAGE);return false;}public PollSetMessage(String username, String question, String title, String[] choices) {this.username = username;MessageDigest m = null;try {m = MessageDigest.getInstance(""SHA-1"");} catch (NoSuchAlgorithmException ex) {ex.printStackTrace();}String id = username + String.valueOf(System.nanoTime());m.update(id.getBytes(), 0, id.length());voteId = new BigInteger(1, m.digest()).toString(16);this.question = question;this.title = title;this.choices = choices;}public static void test() {try {Pattern pattern = Pattern.compile(""[0-9]{3}\\. <a href='(.*)\\.html'>(.*)</a><br />"");URL url = new URL(""http://farmfive.com/"");BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));String line;int count = 0;while ((line = br.readLine()) != null) {Matcher match = pattern.matcher(line);if (match.matches()) {System.out.println(match.group(1) + "" "" + match.group(2));count++;}}System.out.println(count + "" counted"");br.close();} catch (Exception e) {e.printStackTrace();}}"	5
"public void doIt() throws GlobalMapperTileTranslatorException {if (StringUtils.isEmpty(dstGuid)) throw new GlobalMapperTileTranslatorException(""GUID of destination map is empty"");if (srcDir == null || !srcDir.isDirectory() || !srcDir.exists()) throw new GlobalMapperTileTranslatorException(""Source directory is invalid"");try {int z;final XFile dstDir = new XFile(dstParentDir, dstGuid);dstDir.mkdir();int n = 1;if (srcDir.isDirectory() && srcDir.exists()) {for (int i = 0; i < 18; i++) {XFile zDir = new XFile(srcDir, ""z"" + i);if (!zDir.isDirectory() || !zDir.exists()) zDir = new XFile(srcDir, ""Z"" + i);if (zDir.isDirectory() && zDir.exists()) {for (String fileName : zDir.list()) {XFile file = new XFile(zDir, fileName);if (file.isFile() && file.exists() && file.canRead()) {final String[] yx;if (fileName.indexOf('.') > 0) {String[] fileExt = fileName.split(""\\."");yx = fileExt[0].split(""_"");} else yx = fileName.split(""_"");if (yx.length > 1) {final int x = Integer.valueOf(yx[1]);final int y = Integer.valueOf(yx[0]);z = 17 - i;XFileOutputStream out = null;XFileInputStream in = null;try {final XFile outFile = new XFile(dstDir, x + ""_"" + y + ""_"" + z);if (override || !(isExist(outFile, file))) {out = new XFileOutputStream(outFile);in = new XFileInputStream(file);IOUtils.copy(in, out);}if (n % 999 == 0) {logger.info(i + "" tiles were copied from 'incoming'"");synchronized (GlobalMapperTileTranslator.class) {GlobalMapperTileTranslator.class.wait(300);}}n++;} finally {if (out != null) {out.flush();out.close();}if (in != null) {in.close();}}}}}}}}} catch (Throwable e) {logger.error(""map tile importing has failed: "", e);throw new GlobalMapperTileTranslatorException(e);}}private void httpDo(HttpUriRequest hr, String url, Map<String, String> headers, AjaxStatus status) throws ClientProtocolException, IOException {if (AGENT != null) {hr.addHeader(""User-Agent"", AGENT);}if (headers != null) {for (String name : headers.keySet()) {hr.addHeader(name, headers.get(name));}}if (GZIP && headers == null || !headers.containsKey(""Accept-Encoding"")) {hr.addHeader(""Accept-Encoding"", ""gzip"");}String cookie = makeCookie();if (cookie != null) {hr.addHeader(""Cookie"", cookie);}if (ah != null) {ah.applyToken(this, hr);}DefaultHttpClient client = getClient();HttpContext context = new BasicHttpContext();CookieStore cookieStore = new BasicCookieStore();context.setAttribute(ClientContext.COOKIE_STORE, cookieStore);HttpResponse response = client.execute(hr, context);byte[] data = null;String redirect = url;int code = response.getStatusLine().getStatusCode();String message = response.getStatusLine().getReasonPhrase();String error = null;if (code < 200 || code >= 300) {try {HttpEntity entity = response.getEntity();byte[] s = AQUtility.toBytes(entity.getContent());error = new String(s, ""UTF-8"");AQUtility.debug(""error"", error);} catch (Exception e) {AQUtility.debug(e);}} else {HttpEntity entity = response.getEntity();HttpHost currentHost = (HttpHost) context.getAttribute(ExecutionContext.HTTP_TARGET_HOST);HttpUriRequest currentReq = (HttpUriRequest) context.getAttribute(ExecutionContext.HTTP_REQUEST);redirect = currentHost.toURI() + currentReq.getURI();int size = Math.max(32, Math.min(1024 * 64, (int) entity.getContentLength()));PredefinedBAOS baos = new PredefinedBAOS(size);Header encoding = entity.getContentEncoding();if (encoding != null && encoding.getValue().equalsIgnoreCase(""gzip"")) {InputStream is = new GZIPInputStream(entity.getContent());AQUtility.copy(is, baos);} else {entity.writeTo(baos);}data = baos.toByteArray();}AQUtility.debug(""response"", code);if (data != null) {AQUtility.debug(data.length, url);}status.code(code).message(message).error(error).redirect(redirect).time(new Date()).data(data).client(client).context(context).headers(response.getAllHeaders());}public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException {InputStream urlStream = null;BufferedInputStream bis = null;AudioFileFormat fileFormat = null;urlStream = url.openStream();AudioInputStream result = null;try {bis = new BufferedInputStream(urlStream, bisBufferSize);result = getAudioInputStream((InputStream) bis);} finally {if (result == null) {urlStream.close();}}return result;}public Resultado procesar() {if (resultado != null) return resultado;int[] a = new int[elems.size()];Iterator iter = elems.iterator();int w = 0;while (iter.hasNext()) {a[w] = ((Integer) iter.next()).intValue();w++;}int n = a.length;long startTime = System.currentTimeMillis();int i, j, temp;for (i = 0; i < n - 1; i++) {for (j = i; j < n - 1; j++) {if (a[i] > a[j + 1]) {temp = a[i];a[i] = a[j + 1];a[j + 1] = temp;pasos++;}}}long endTime = System.currentTimeMillis();resultado = new Resultado((int) (endTime - startTime), pasos, a.length);System.out.println(""Resultado BB: "" + resultado);return resultado;}private String generate(String value) throws Exception {String resStr = null;try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(value.getBytes(""utf-8""), 0, value.length());byte[] result = md.digest();resStr = FTGenerate.convertToHex(result);md.reset();} catch (NoSuchAlgorithmException nae) {this.getLog().severe(""Hash no funcionando"");nae.printStackTrace();throw new Exception(""Hash no funcionando"");} catch (UnsupportedEncodingException ee) {this.getLog().severe(""Encoding no funcionando"");ee.printStackTrace();throw new Exception(""Encoding no funcionando"");}return resStr;}private void callbackWS(String xmlControl, String ws_results, long docId) {SimpleProvider config;Service service;Object ret;Call call;Object[] parameter;String method;String wsurl;URL url;NodeList delegateNodes;Node actualNode;InputSource xmlcontrolstream;try {xmlcontrolstream = new InputSource(new StringReader(xmlControl));delegateNodes = SimpleXMLParser.parseDocument(xmlcontrolstream, AgentBehaviour.XML_CALLBACK);actualNode = delegateNodes.item(0);wsurl = SimpleXMLParser.findChildEntry(actualNode, AgentBehaviour.XML_URL);method = SimpleXMLParser.findChildEntry(actualNode, AgentBehaviour.XML_METHOD);if (wsurl == null || method == null) {System.out.println(""----- Did not get method or wsurl from the properties! -----"");return;}url = new java.net.URL(wsurl);try {url.openConnection().connect();} catch (IOException ex) {System.out.println(""----- Could not connect to the webservice! -----"");}Vector v_param = new Vector();v_param.add(ws_results);v_param.add(new Long(docId));parameter = v_param.toArray();config = new SimpleProvider();config.deployTransport(""http"", new HTTPSender());service = new Service(config);call = (Call) service.createCall();call.setTargetEndpointAddress(url);call.setOperationName(new QName(""http://schemas.xmlsoap.org/soap/encoding/"", method));try {ret = call.invoke(parameter);if (ret == null) {ret = new String(""No response from callback function!"");}System.out.println(""Callback function returned: "" + ret);} catch (RemoteException ex) {System.out.println(""----- Could not invoke the method! -----"");}} catch (Exception ex) {ex.printStackTrace(System.err);}}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public void setUp() throws Exception {logger.finer(""******************** set up ********************"");Properties props;if (XMLDBTestSuite.propertiesFileName == null) {String defaultPropsFileLocation = ""test/xmldb/XMLDBTestSuite.properties"";URL url = this.getClass().getClassLoader().getResource(defaultPropsFileLocation);if (url == null) {throw new Exception(""failed to find default props file at "" + defaultPropsFileLocation);}props = loadProps(url.openConnection().getInputStream());} else {props = loadProps(XMLDBTestSuite.propertiesFileName);}String driver = props.getProperty(""driverName"");String collectionURI = props.getProperty(""URI"");Database database = (Database) Class.forName(driver).newInstance();collectionStorageHelper = new CollectionStorageHelper(collectionURI);rootCollectionName = collectionStorageHelper.getCollectionName();Collection root = database.getCollection(collectionURI, null, null);CollectionManagementService service = (CollectionManagementService) root.getService(CollectionManagementService.SERVICE_NAME, ""1.0"");String childCollection = ""child"";removeChildCollection(root, childCollection, service);col = service.createCollection(childCollection);assertNotNull(""XMLDBTestCase.setUp() - Collection could not be created"", col);logger.info(""created child collection '"" + col.getName() + ""' parent is '"" + col.getParentCollection().getName() + ""'"");assertEquals(""Root collection name should match childs parent name"", rootCollectionName, col.getParentCollection().getName());document = createXMLFile(xmlFileName);assertNotNull(""XMLDBTestCase.setUp() - failed to create XML file"", document);}@Overridepublic void trainClassifier(File dir, String... args) throws Exception {String[] command = new String[args.length + 3];command[0] = this.getCommand();System.arraycopy(args, 0, command, 1, args.length);command[command.length - 2] = new File(dir, ""training-data.libsvm"").getPath();command[command.length - 1] = new File(dir, this.getModelName()).getPath();Process process = Runtime.getRuntime().exec(command);IOUtils.copy(process.getInputStream(), System.out);IOUtils.copy(process.getErrorStream(), System.err);process.waitFor();}"	5
"public static void copyFile(File srcFile, File destFile) throws IOException {logger.debug(""copyFile(srcFile={}, destFile={}) - start"", srcFile, destFile);FileChannel srcChannel = new FileInputStream(srcFile).getChannel();FileChannel dstChannel = new FileOutputStream(destFile).getChannel();try {dstChannel.transferFrom(srcChannel, 0, srcChannel.size());} finally {srcChannel.close();dstChannel.close();}}public static int executeNoQuery(String strStatement) throws SQLException {MyDBConnection myc = new MyDBConnection();myc.init();Statement statement = myc.getMyConnection().createStatement();try {int rows = statement.executeUpdate(strStatement);myc.myConnection.commit();return rows;} catch (SQLException e) {myc.myConnection.rollback();throw new SQLException(""rollback e close effettuato dopo "" + e.getMessage());} finally {myc.close();}}public static String generateGuid(boolean secure) {MessageDigest md5 = null;String valueBeforeMD5 = null;String valueAfterMD5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {log.error(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0L;if (secure) rand = mySecureRand.nextLong(); else rand = myRand.nextLong();sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte array[] = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; j++) {int b = array[j] & 0xff;if (b < 16) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {log.error(""Error:"" + e);}String raw = valueAfterMD5.toUpperCase();StringBuffer sb = new StringBuffer();sb.append(raw.substring(0, 8));sb.append(""-"");sb.append(raw.substring(8, 12));sb.append(""-"");sb.append(raw.substring(12, 16));sb.append(""-"");sb.append(raw.substring(16, 20));sb.append(""-"");sb.append(raw.substring(20));return sb.toString();}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public void run() {if (software == null) return;Jvm.hashtable(HKEY).put(software, this);try {software.setException(null);software.setDownloaded(false);software.setDownloadStartTime(System.currentTimeMillis());try {software.downloadStarted();} catch (Exception dsx) {}if (software.getDownloadDir() == null) {software.setException(new Exception(""The DownloadDir is null.""));software.setDownloadStartTime(0);software.setDownloaded(false);throw software.getException();}URL url = new URL(software.getURL());URLConnection con = url.openConnection();software.setDownloadLength(con.getContentLength());inputStream = con.getInputStream();File file = new File(software.getDownloadDir(), software.getURLFilename());outputStream = new FileOutputStream(file);int totalBytes = 0;byte[] buffer = new byte[8192];while (!cancelled) {int bytesRead = Jvm.copyPartialStream(inputStream, outputStream, buffer);if (bytesRead == -1) break;totalBytes += bytesRead;try {software.downloadProgress(totalBytes);} catch (Exception dx) {}}if (!cancelled) software.setDownloaded(true);} catch (Exception x) {software.setException(x);software.setDownloadStartTime(0);software.setDownloaded(false);}try {software.downloadComplete();} catch (Exception dcx) {}Jvm.hashtable(HKEY).remove(software);closeStreams();}public static void doVersionCheck(View view) {view.showWaitCursor();try {URL url = new URL(jEdit.getProperty(""version-check.url""));InputStream in = url.openStream();BufferedReader bin = new BufferedReader(new InputStreamReader(in));String line;String develBuild = null;String stableBuild = null;while ((line = bin.readLine()) != null) {if (line.startsWith("".build"")) develBuild = line.substring(6).trim(); else if (line.startsWith("".stablebuild"")) stableBuild = line.substring(12).trim();}bin.close();if (develBuild != null && stableBuild != null) {doVersionCheck(view, stableBuild, develBuild);}} catch (IOException e) {String[] args = { jEdit.getProperty(""version-check.url""), e.toString() };GUIUtilities.error(view, ""read-error"", args);}view.hideWaitCursor();}protected void copyFile(final String sourceFileName, final File path) throws IOException {final File source = new File(sourceFileName);final File destination = new File(path, source.getName());FileChannel srcChannel = null;FileChannel dstChannel = null;FileInputStream fileInputStream = null;FileOutputStream fileOutputStream = null;try {fileInputStream = new FileInputStream(source);srcChannel = fileInputStream.getChannel();fileOutputStream = new FileOutputStream(destination);dstChannel = fileOutputStream.getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());} finally {try {if (dstChannel != null) {dstChannel.close();}} catch (Exception exception) {}try {if (srcChannel != null) {srcChannel.close();}} catch (Exception exception) {}try {fileInputStream.close();} catch (Exception exception) {}try {fileOutputStream.close();} catch (Exception exception) {}}}public boolean backupFile(File oldFile, File newFile) {boolean isBkupFileOK = false;FileChannel sourceChannel = null;FileChannel targetChannel = null;try {sourceChannel = new FileInputStream(oldFile).getChannel();targetChannel = new FileOutputStream(newFile).getChannel();targetChannel.transferFrom(sourceChannel, 0, sourceChannel.size());} catch (IOException e) {logger.log(Level.SEVERE, ""IO exception occurred while copying file"", e);} finally {if ((newFile != null) && (newFile.exists()) && (newFile.length() > 0)) {isBkupFileOK = true;}try {if (sourceChannel != null) {sourceChannel.close();}if (targetChannel != null) {targetChannel.close();}} catch (IOException e) {logger.info(""closing channels failed"");}}return isBkupFileOK;}void copyFile(File src, File dst) throws IOException {FileInputStream fis = new FileInputStream(src);byte[] buf = new byte[10000];int n;FileOutputStream fos = new FileOutputStream(dst);while ((n = fis.read(buf)) > 0) fos.write(buf, 0, n);fis.close();fos.close();copied++;}"	5
"public static final String MD5(String value) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(value.getBytes());BigInteger hash = new BigInteger(1, md.digest());String newValue = hash.toString(16);return newValue;} catch (NoSuchAlgorithmException ns) {ns.printStackTrace();return null;}}@Overrideprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {resp.addHeader(""Cache-Control"", ""max-age="" + Constants.HTTP_CACHE_SECONDS);String uuid = req.getRequestURI().substring(req.getRequestURI().indexOf(Constants.SERVLET_THUMBNAIL_PREFIX) + Constants.SERVLET_THUMBNAIL_PREFIX.length() + 1);if (uuid != null && !"""".equals(uuid)) {resp.setContentType(""image/jpeg"");StringBuffer sb = new StringBuffer();sb.append(config.getFedoraHost()).append(""/objects/"").append(uuid).append(""/datastreams/IMG_THUMB/content"");InputStream is = null;if (!Constants.MISSING.equals(uuid)) {is = RESTHelper.get(sb.toString(), config.getFedoraLogin(), config.getFedoraPassword(), true);} else {is = new FileInputStream(new File(""images/other/file_not_found.png""));}if (is == null) {return;}ServletOutputStream os = resp.getOutputStream();try {IOUtils.copyStreams(is, os);} catch (IOException e) {} finally {os.flush();if (is != null) {try {is.close();} catch (IOException e) {} finally {is = null;}}}resp.setStatus(200);} else {resp.setStatus(404);}}final void importSelectedEntity() {TreePath path = projectsTree.getSelectionPath();DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent();Object userObject = selectedNode.getUserObject();if (userObject instanceof ProjectSet) {JFileChooser fileChooser = new JFileChooser();fileChooser.setMultiSelectionEnabled(false);fileChooser.setFileFilter(new FileNameExtensionFilter(""JFPSM Projects"", ""jfpsm.zip""));int result = fileChooser.showOpenDialog(mainWindow.getApplicativeFrame());if (result == JFileChooser.APPROVE_OPTION) {String fullname = fileChooser.getSelectedFile().getName();String projectName = fullname.substring(0, fullname.length() - Project.getFileExtension().length());ProjectSet workspace = (ProjectSet) userObject;boolean confirmLoad = true;if (Arrays.asList(workspace.getProjectNames()).contains(projectName)) {confirmLoad = JOptionPane.showConfirmDialog(mainWindow.getApplicativeFrame(), ""Overwrite project \"""" + projectName + ""\"""" + ""?"", ""Overwrite project"", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION;if (confirmLoad) {final int count = selectedNode.getChildCount();DefaultMutableTreeNode projectNode = null;for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) {projectNode = (DefaultMutableTreeNode) selectedNode.getChildAt(i);break;}Project project = (Project) projectNode.getUserObject();for (FloorSet floorSet : project.getLevelSet().getFloorSetsList()) for (Floor floor : floorSet.getFloorsList()) mainWindow.getEntityViewer().closeEntityView(floor);for (Tile tile : project.getTileSet().getTilesList()) mainWindow.getEntityViewer().closeEntityView(tile);workspace.removeProject(project);((DefaultTreeModel) projectsTree.getModel()).removeNodeFromParent(projectNode);}}if (confirmLoad) {File projectFile = new File(workspace.createProjectPath(projectName));boolean success = true;try {success = projectFile.createNewFile();if (success) {BufferedInputStream bis = new BufferedInputStream(new FileInputStream(fileChooser.getSelectedFile()));BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(projectFile));byte[] buf = new byte[1024];int len;while ((len = bis.read(buf)) > 0) bos.write(buf, 0, len);bis.close();bos.close();}} catch (Throwable throwable) {displayErrorMessage(throwable, false);success = false;}if (success) addProject(projectName);}}} else if (userObject instanceof Map) {Map map = (Map) userObject;Floor floor = (Floor) ((DefaultMutableTreeNode) selectedNode.getParent()).getUserObject();importImageForSelectedMap(floor, map);}}public void execute(File tsvFile, File xmlFile) {BufferedReader reader = null;Writer writer = null;Boolean isFileSuccessfullyConverted = Boolean.TRUE;TableConfiguration tableConfig = null;try {xmlFile.getParentFile().mkdirs();reader = new BufferedReader(new InputStreamReader(new FileInputStream(tsvFile), INPUT_ENCODING));writer = new OutputStreamWriter(new FileOutputStream(xmlFile), OUTPUT_ENCODING);tableConfig = Tsv2DocbookConverter.convert2(tableConfigManager, idScanner.extractIdentification(tsvFile), reader, writer, inputPolisher);isFileSuccessfullyConverted = (tableConfig != null);} catch (UnsupportedEncodingException e) {logger.error(""Failed to create reader with UTF-8 encoding: "" + e.getMessage(), e);} catch (FileNotFoundException fnfe) {logger.error(""Failed to open tsv input file '"" + tsvFile + ""'. "" + fnfe.getMessage());} catch (Throwable cause) {logger.error(""Failed to convert input tsv file '"" + tsvFile + ""'."", cause);} finally {if (reader != null) {try {reader.close();} catch (IOException ioe) {logger.warn(""Unable to close input file."", ioe);}}if (writer != null) {try {writer.close();} catch (IOException ioe) {logger.warn(""Unable to close output file."", ioe);}}}if (isFileSuccessfullyConverted) {String newOutputFileName = tableConfig.getFileName(idScanner.extractIdentification(tsvFile));if (newOutputFileName != null) {File newOutputFile = new File(xmlFile.getParentFile(), newOutputFileName);if (!xmlFile.renameTo(newOutputFile)) {logger.warn(""Unable to rename '"" + xmlFile + ""' to '"" + newOutputFile + ""'."");logger.info(""Created successfully '"" + xmlFile + ""'."");} else {logger.info(""Created successfully '"" + newOutputFileName + ""'."");}} else {logger.info(""Created successfully '"" + xmlFile + ""'."");}} else {logger.warn(""Unable to convert input tsv file '"" + Tsv2DocBookApplication.trimPath(sourceDir, tsvFile) + ""' to docbook."");if (xmlFile.exists() && !xmlFile.delete()) {logger.warn(""Unable to remove (empty) output file '"" + xmlFile + ""', which was created as target for the docbook table."");}}}public static String MD5Encode(String password) {MessageDigest messageDigest;try {messageDigest = MessageDigest.getInstance(""MD5"");messageDigest.update(password.getBytes());final byte[] digest = messageDigest.digest();final StringBuilder buf = new StringBuilder(digest.length * 2);final char[] HEX_DIGITS = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };for (int j = 0; j < digest.length; j++) {buf.append(HEX_DIGITS[(digest[j] >> 4) & 0x0f]);buf.append(HEX_DIGITS[digest[j] & 0x0f]);}return buf.toString();} catch (NoSuchAlgorithmException e) {return password;}}@Overrideprotected String doInBackground(MarketData... market) {publishProgress(-1);InputStream input = null;OutputStream output = null;long lenghtOfFile = 0;int lengthRead = 0;try {HttpGet newReq = new HttpGet(market[0].apkURL);HttpResponse response = HttpManager.execute(newReq);Log.i(Main.TAG, ""req:"" + response.getStatusLine().getStatusCode());while (response.getStatusLine().getStatusCode() == HttpStatus.SC_MOVED_TEMPORARILY || response.getStatusLine().getStatusCode() == HttpStatus.SC_MOVED_PERMANENTLY) {Log.i(Main.TAG, ""redirect to:"" + response.getFirstHeader(""Location"").getValue());newReq = new HttpGet(response.getFirstHeader(""Location"").getValue());response = HttpManager.execute(newReq);Log.i(Main.TAG, ""req:"" + response.getStatusLine().getStatusCode());}lenghtOfFile = response.getEntity().getContentLength();input = response.getEntity().getContent();output = new FileOutputStream(market[0].getFile());lengthRead = copy(input, output, lenghtOfFile);} catch (MalformedURLException e) {Log.w(Main.TAG, ""error downloading "" + market[0].apkURL, e);} catch (IOException e) {Log.w(Main.TAG, ""error downloading "" + market[0].apkURL, e);} finally {Log.v(Main.TAG, ""failed to download "" + market[0].apkURL + "" "" + lengthRead + ""/"" + lenghtOfFile);if (lenghtOfFile != 0 && lengthRead != lenghtOfFile) {Log.w(Main.TAG, ""failed to download "" + market[0].apkURL + "" "" + lengthRead + ""/"" + lenghtOfFile);try {if (input != null) input.close();if (output != null) output.close();market[0].getFile().delete();} catch (IOException e) {e.printStackTrace();}}}Log.v(Main.TAG, ""copied "" + market[0].apkURL + "" to "" + market[0].getFile());return null;}public static String send(String ipStr, int port, String password, String command, InetAddress localhost, int localPort) throws SocketTimeoutException, BadRcon, ResponseEmpty {StringBuffer response = new StringBuffer();try {rconSocket = new Socket();rconSocket.bind(new InetSocketAddress(localhost, localPort));rconSocket.connect(new InetSocketAddress(ipStr, port), RESPONSE_TIMEOUT);out = rconSocket.getOutputStream();in = rconSocket.getInputStream();BufferedReader buffRead = new BufferedReader(new InputStreamReader(in));rconSocket.setSoTimeout(RESPONSE_TIMEOUT);String digestSeed = """";boolean loggedIn = false;boolean keepGoing = true;while (keepGoing) {String receivedContent = buffRead.readLine();if (receivedContent.startsWith(""### Digest seed: "")) {digestSeed = receivedContent.substring(17, receivedContent.length());try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(digestSeed.getBytes());md5.update(password.getBytes());String digestStr = ""login "" + digestedToHex(md5.digest()) + ""\n"";out.write(digestStr.getBytes());} catch (NoSuchAlgorithmException e1) {response.append(""MD5 algorithm not available - unable to complete RCON request."");keepGoing = false;}} else if (receivedContent.startsWith(""error: not authenticated: you can only invoke 'login'"")) {throw new BadRcon();} else if (receivedContent.startsWith(""Authentication failed."")) {throw new BadRcon();} else if (receivedContent.startsWith(""Authentication successful, rcon ready."")) {keepGoing = false;loggedIn = true;}}if (loggedIn) {String cmd = ""exec "" + command + ""\n"";out.write(cmd.getBytes());readResponse(buffRead, response);if (response.length() == 0) {throw new ResponseEmpty();}}} catch (SocketTimeoutException timeout) {throw timeout;} catch (UnknownHostException e) {response.append(""UnknownHostException: "" + e.getMessage());} catch (IOException e) {response.append(""Couldn't get I/O for the connection: "" + e.getMessage());e.printStackTrace();} finally {try {if (out != null) {out.close();}if (in != null) {in.close();}if (rconSocket != null) {rconSocket.close();}} catch (IOException e1) {}}return response.toString();}public Out(Article article) throws Exception {String body = article.meta(ARTICLE_BODY).getString();String url = find(""a"", ""href"", body);while (url.length() > 0 && url.startsWith(""http://"")) {System.out.println(url);conn = (HttpURLConnection) new URL(url).openConnection();conn.setRequestMethod(""POST"");int code = conn.getResponseCode();String ping = conn.getHeaderField(""X-Pingback"");System.out.println(ping);if (ping != null) {conn = (HttpURLConnection) new URL(ping).openConnection();conn.setDoOutput(true);StringBuffer buffer = new StringBuffer();buffer.append(""<?xml version=\""1.0\""?>\n"");buffer.append(""<methodCall>\n"");buffer.append(""  <methodName>pingback.ping</methodName>\n"");buffer.append(""  <params>\n"");buffer.append(""<param><value><string>http://"" + User.host + ""/article?id="" + article.getId() + ""</string></value></param>\n"");buffer.append(""<param><value><string>"" + url + ""</string></value></param>\n"");buffer.append(""  </params>\n"");buffer.append(""</methodCall>\n"");System.out.println(buffer.toString());OutputStream out = conn.getOutputStream();out.write(buffer.toString().getBytes(""UTF-8""));code = conn.getResponseCode();InputStream in = null;if (code == 200) {in = conn.getInputStream();} else if (code < 0) {throw new IOException(""HTTP response unreadable."");} else {in = conn.getErrorStream();}Deploy.pipe(in, System.out);in.close();}url = find(""a"", ""href"", body);}}public static void extractZipFile(String filename) {try {byte[] buf = new byte[1024];ZipInputStream zipinputstream = null;ZipEntry zipentry;zipinputstream = new ZipInputStream(new FileInputStream(filename));zipentry = zipinputstream.getNextEntry();while (zipentry != null) {String entryName = zipentry.getName();int n;FileOutputStream fileoutputstream;File newFile = new File(entryName);String directory = newFile.getParent();if (directory == null) {if (newFile.isDirectory()) break;}fileoutputstream = new FileOutputStream(entryName);while ((n = zipinputstream.read(buf, 0, 1024)) > -1) fileoutputstream.write(buf, 0, n);fileoutputstream.close();zipinputstream.closeEntry();zipentry = zipinputstream.getNextEntry();}zipinputstream.close();} catch (Exception e) {e.printStackTrace();}}public Document index() throws CrawlingException {log.debug(""BEGINIG indexing page [code="" + getCode() + ""] ..."");URL url = null;InputStream in = null;String contentType = null;try {url = new URL(getServer().getProtocol() + ""://"" + getServer().getHost() + "":"" + getServer().getPort() + getPath());HttpURLConnection pageContent = (HttpURLConnection) url.openConnection();if (pageContent.getResponseCode() != HttpURLConnection.HTTP_OK) {log.debug(""page pk["" + getCode() + "","" + url.toExternalForm() + ""] is invalid"");return null;}String redireccion = pageContent.getHeaderField(""location"");if (redireccion != null) {log.debug(""Page "" + url.toExternalForm() + "" redirected to "" + redireccion);recordLink(redireccion);return null;}contentType = pageContent.getContentType();in = new BufferedInputStream(pageContent.getInputStream(), 32768);} catch (MalformedURLException e) {log.error(""Invalid page address"", e);} catch (ConnectException e) {if (getServer() != null) {log.error(""Unable to connect to page: "" + getServer().getProtocol() + ""://"" + getServer().getHost() + "":"" + getServer().getPort() + getPath(), e);}} catch (UnknownHostException uhe) {log.warn(""Unknow host indexing page "" + getURL(), uhe);} catch (IOException e) {log.warn(""Unable to index page "" + getURL(), e);}Document doc = generateDocument(contentType, in);log.debug(""END indexing page [code="" + getCode() + ""]"");return doc;}"	5
"private void readFromDB() throws Exception {URL url;URLConnection connect;BufferedInputStream in = null;Schema schema = new Schema(base, indexDir, false);BtreeDictParameters params = new BtreeDictParameters(schema, ""TMAP"");params.readState();tmap = new BtreeDict(params);readChildrenData();url = getURL(""DOCS.TAB"");connect = url.openConnection();in = new BufferedInputStream(connect.getInputStream());int k1 = in.read();concepts = new IntegerArray(4096);StreamDecompressor sddocs = new StreamDecompressor(in);sddocs.ascDecode(k1, concepts);int k2 = in.read();offsets = new IntegerArray(concepts.cardinality() + 1);offsets.add(0);StreamDecompressor sdoffsets = new StreamDecompressor(in);sdoffsets.ascDecode(k2, offsets);in.close();url = getURL(""DOCS"");connect = url.openConnection();in = new BufferedInputStream(connect.getInputStream());ByteArrayOutputStream data = new ByteArrayOutputStream();byte[] buff = new byte[512];int i = 0;while ((i = in.read(buff)) != -1) {data.write(buff, 0, i);}allLists = data.toByteArray();in.close();url = getURL(""OFFSETS"");connect = url.openConnection();in = new BufferedInputStream(connect.getInputStream());k1 = in.read();documents = new IntegerArray(4096);sddocs = new StreamDecompressor(in);sddocs.ascDecode(k1, documents);k2 = in.read();offsets2 = new IntegerArray(documents.cardinality() + 1);sdoffsets = new StreamDecompressor(in);sdoffsets.ascDecode(k2, offsets2);int k3 = in.read();titles = new IntegerArray(documents.cardinality());StreamDecompressor sdtitles = new StreamDecompressor(in);sdtitles.decode(k3, titles);in.close();RAFFileFactory factory = RAFFileFactory.create();url = getURL(""POSITIONS"");positionsFile = factory.get(url, false);}private static String getSuitableWCSVersion(String host, String _version) throws ConnectException, IOException {String request = WCSProtocolHandler.buildCapabilitiesSuitableVersionRequest(host, _version);String version = new String();StringReader reader = null;DataInputStream dis = null;try {URL url = new URL(request);byte[] buffer = new byte[1024];dis = new DataInputStream(url.openStream());dis.readFully(buffer);reader = new StringReader(new String(buffer));KXmlParser kxmlParser = null;kxmlParser = new KXmlParser();kxmlParser.setInput(reader);kxmlParser.nextTag();if (kxmlParser.getEventType() != KXmlParser.END_DOCUMENT) {if ((kxmlParser.getName().compareTo(CapabilitiesTags.WCS_CAPABILITIES_ROOT1_0_0) == 0)) {version = kxmlParser.getAttributeValue("""", CapabilitiesTags.VERSION);}}reader.close();dis.close();return version;} catch (ConnectException conEx) {throw new ConnectException(conEx.getMessage());} catch (IOException ioEx) {throw new IOException(ioEx.getMessage());} catch (XmlPullParserException xmlEx) {xmlEx.printStackTrace();return """";} finally {if (reader != null) {try {reader.close();} catch (Exception ex) {ex.printStackTrace();}}if (dis != null) {try {dis.close();} catch (Exception ex) {ex.printStackTrace();}}}}public static String encrypt(String text) throws NoSuchAlgorithmException {MessageDigest md;md = MessageDigest.getInstance(""MD5"");byte[] md5hash = new byte[32];try {md.update(text.getBytes(""iso-8859-1""), 0, text.length());} catch (UnsupportedEncodingException e) {e.printStackTrace();}md5hash = md.digest();return convertToHex(md5hash);}public void get(final String remoteFilePath, final String remoteFileName, final String localName) {final FTPClient ftp = new FTPClient();final FTPMessageCollector listener = new FTPMessageCollector();try {final String localDirName = localName.substring(0, localName.lastIndexOf(File.separator));System.out.println(""ftp:"");System.out.println(""remoteDir "" + remoteFilePath);System.out.println(""localDir "" + localDirName);final File localDir = new File(localDirName);if (!localDir.exists()) {System.out.println(""create Dir "" + localDirName);localDir.mkdir();}ftp.setTimeout(10000);ftp.setRemoteHost(host);ftp.setMessageListener(listener);} catch (final UnknownHostException e) {showConnectError();return;} catch (final Exception e) {e.printStackTrace();}final TileInfoManager tileInfoMgr = TileInfoManager.getInstance();final Job downloadJob = new Job(Messages.job_name_ftpDownload) {@Overrideprotected IStatus run(final IProgressMonitor monitor) {try {showTileInfo(remoteFileName, -1);System.out.println(""connect "" + host);ftp.connect();showTileInfo(remoteFileName, -2);System.out.println(""login "" + user + "" "" + password);ftp.login(user, password);System.out.println(""set passive mode"");ftp.setConnectMode(FTPConnectMode.PASV);System.out.println(""set type binary"");ftp.setType(FTPTransferType.BINARY);showTileInfo(remoteFileName, -3);System.out.println(""chdir "" + remoteFilePath);ftp.chdir(remoteFilePath);ftp.setProgressMonitor(new FTPProgressMonitor() {public void bytesTransferred(final long count) {tileInfoMgr.updateSRTMTileInfo(TileEventId.SRTM_DATA_LOADING_MONITOR, remoteFileName, count);}});showTileInfo(remoteFileName, -4);System.out.println(""get "" + remoteFileName + "" -> "" + localName + "" ..."");ftp.get(localName, remoteFileName);System.out.println(""quit"");ftp.quit();} catch (final UnknownHostException e) {return new Status(IStatus.ERROR, TourbookPlugin.PLUGIN_ID, IStatus.ERROR, NLS.bind(Messages.error_message_cannotConnectToServer, host), e);} catch (final SocketTimeoutException e) {return new Status(IStatus.ERROR, TourbookPlugin.PLUGIN_ID, IStatus.ERROR, NLS.bind(Messages.error_message_timeoutWhenConnectingToServer, host), e);} catch (final Exception e) {e.printStackTrace();tileInfoMgr.updateSRTMTileInfo(TileEventId.SRTM_DATA_ERROR_LOADING, remoteFileName, 0);} finally {tileInfoMgr.updateSRTMTileInfo(TileEventId.SRTM_DATA_END_LOADING, remoteFileName, 0);}return Status.OK_STATUS;}};downloadJob.schedule();try {downloadJob.join();} catch (final InterruptedException e) {e.printStackTrace();}}@Overrideprotected IStatus run(final IProgressMonitor monitor) {try {showTileInfo(remoteFileName, -1);System.out.println(""connect "" + host);ftp.connect();showTileInfo(remoteFileName, -2);System.out.println(""login "" + user + "" "" + password);ftp.login(user, password);System.out.println(""set passive mode"");ftp.setConnectMode(FTPConnectMode.PASV);System.out.println(""set type binary"");ftp.setType(FTPTransferType.BINARY);showTileInfo(remoteFileName, -3);System.out.println(""chdir "" + remoteFilePath);ftp.chdir(remoteFilePath);ftp.setProgressMonitor(new FTPProgressMonitor() {public void bytesTransferred(final long count) {tileInfoMgr.updateSRTMTileInfo(TileEventId.SRTM_DATA_LOADING_MONITOR, remoteFileName, count);}});showTileInfo(remoteFileName, -4);System.out.println(""get "" + remoteFileName + "" -> "" + localName + "" ..."");ftp.get(localName, remoteFileName);System.out.println(""quit"");ftp.quit();} catch (final UnknownHostException e) {return new Status(IStatus.ERROR, TourbookPlugin.PLUGIN_ID, IStatus.ERROR, NLS.bind(Messages.error_message_cannotConnectToServer, host), e);} catch (final SocketTimeoutException e) {return new Status(IStatus.ERROR, TourbookPlugin.PLUGIN_ID, IStatus.ERROR, NLS.bind(Messages.error_message_timeoutWhenConnectingToServer, host), e);} catch (final Exception e) {e.printStackTrace();tileInfoMgr.updateSRTMTileInfo(TileEventId.SRTM_DATA_ERROR_LOADING, remoteFileName, 0);} finally {tileInfoMgr.updateSRTMTileInfo(TileEventId.SRTM_DATA_END_LOADING, remoteFileName, 0);}return Status.OK_STATUS;}public Document load(java.net.URL url) throws DOMTestLoadException {Document doc = null;Exception parseException = null;try {LoadErrorHandler errorHandler = new LoadErrorHandler();builder.setErrorHandler(errorHandler);doc = builder.parse(url.openStream(), url.toString());parseException = errorHandler.getFirstException();} catch (Exception ex) {parseException = ex;}builder.setErrorHandler(null);if (parseException != null) {throw new DOMTestLoadException(parseException);}return doc;}public Point getCoordinates(String address, String city, String state, String country) {StringBuilder queryString = new StringBuilder();StringBuilder urlString = new StringBuilder();StringBuilder response = new StringBuilder();if (address != null) {queryString.append(address.trim().replaceAll("" "", ""+""));queryString.append(""+"");}if (city != null) {queryString.append(city.trim().replaceAll("" "", ""+""));queryString.append(""+"");}if (state != null) {queryString.append(state.trim().replaceAll("" "", ""+""));queryString.append(""+"");}if (country != null) {queryString.append(country.replaceAll("" "", ""+""));}urlString.append(""http://maps.google.com/maps/geo?key="");urlString.append(key);urlString.append(""&sensor=false&output=json&oe=utf8&q="");urlString.append(queryString.toString());try {URL url = new URL(urlString.toString());BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = reader.readLine()) != null) {response.append(line);}reader.close();JSONObject root = (JSONObject) JSONValue.parse(response.toString());JSONObject placemark = (JSONObject) ((JSONArray) root.get(""Placemark"")).get(0);JSONArray coordinates = (JSONArray) ((JSONObject) placemark.get(""Point"")).get(""coordinates"");Point point = new Point();point.setLatitude((Double) coordinates.get(1));point.setLongitude((Double) coordinates.get(0));return point;} catch (MalformedURLException ex) {return null;} catch (NullPointerException ex) {return null;} catch (IOException ex) {return null;}}private static void copyFile(File in, File out) throws Exception {FileChannel sourceChannel = new FileInputStream(in).getChannel();FileChannel destinationChannel = new FileOutputStream(out).getChannel();sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel);sourceChannel.close();destinationChannel.close();}private void initialize() {StringBuffer license = new StringBuffer();URL url;InputStreamReader in;BufferedReader reader;String str;JTextArea textArea;JButton button;GridBagConstraints c;setTitle(""mibible License"");setSize(600, 600);setDefaultCloseOperation(DISPOSE_ON_CLOSE);getContentPane().setLayout(new GridBagLayout());url = getClass().getClassLoader().getResource(""LICENSE.txt"");if (url == null) {license.append(""Couldn't locate license file (LICENSE.txt)."");} else {try {in = new InputStreamReader(url.openStream());reader = new BufferedReader(in);while ((str = reader.readLine()) != null) {if (!str.equals("""")) {license.append(str);}license.append(""\n"");}reader.close();} catch (IOException e) {license.append(""Error reading license file "");license.append(""(LICENSE.txt):\n\n"");license.append(e.getMessage());}}textArea = new JTextArea(license.toString());textArea.setEditable(false);c = new GridBagConstraints();c.fill = GridBagConstraints.BOTH;c.weightx = 1.0d;c.weighty = 1.0d;c.insets = new Insets(4, 5, 4, 5);getContentPane().add(new JScrollPane(textArea), c);button = new JButton(""Close"");button.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {dispose();}});c = new GridBagConstraints();c.gridy = 1;c.anchor = GridBagConstraints.CENTER;c.insets = new Insets(10, 10, 10, 10);getContentPane().add(button, c);}public void testJob() {try {URL url = new URL(""http://rickysql.gotoip3.com/mapp/admin/admin.do"");url.openConnection();url.getContent();System.out.print(""00"");} catch (Exception e) {System.out.print(""Daily data update exception:"" + e);}}"	5
"private void copy(File srouceFile, File destinationFile) throws IOException {FileChannel sourceChannel = new FileInputStream(srouceFile).getChannel();FileChannel destinationChannel = new FileOutputStream(destinationFile).getChannel();destinationChannel.transferFrom(sourceChannel, 0, sourceChannel.size());sourceChannel.close();destinationChannel.close();}protected URLConnection openConnection(URL url) throws IOException {URLConnection con = url.openConnection();if (""HTTPS"".equalsIgnoreCase(url.getProtocol())) {HttpsURLConnection scon = (HttpsURLConnection) con;try {scon.setSSLSocketFactory(SSLUtil.getSSLSocketFactory(ks, password, alias));scon.setHostnameVerifier(SSLUtil.getHostnameVerifier(SSLUtil.HOSTCERT_MIN_CHECK));} catch (GeneralException e) {throw new IOException(e.getMessage());} catch (GeneralSecurityException e) {throw new IOException(e.getMessage());}}return con;}private void prepareDigestFromTextArea() throws NoSuchAlgorithmException, UnsupportedEncodingException {log.println(""\nCalculating digest ...\n"");java.security.MessageDigest md5 = java.security.MessageDigest.getInstance(""MD5"");md5.update(dataArea.getText().getBytes(""UTF8""));byte[] digest = md5.digest();log.println(""digest:\n"" + formatAsHexString(digest));log.println(""Done."");setEncodedDigest(encodeFromBytes(digest));}public RandomAccessFileOrArray(URL url) throws IOException {InputStream is = url.openStream();try {this.arrayIn = InputStreamToArray(is);} finally {try {is.close();} catch (IOException ioe) {}}}public void uploadFile(ActionEvent event) throws IOException {InputFile inputFile = (InputFile) event.getSource();synchronized (inputFile) {ServletContext context = (ServletContext) FacesContext.getCurrentInstance().getExternalContext().getContext();String fileNewPath = arrangeUplodedFilePath(context.getRealPath(""""), inputFile.getFile().getName());File file = new File(fileNewPath);System.out.println(fileNewPath);DataInputStream inStream = new DataInputStream(new FileInputStream(inputFile.getFile()));DataOutputStream outStream = new DataOutputStream(new FileOutputStream(file));int i = 0;byte[] buffer = new byte[512];while ((i = inStream.read(buffer, 0, 512)) != -1) outStream.write(buffer, 0, i);}}public static String MD5(String text) throws ProducteevSignatureException {try {MessageDigest md;md = MessageDigest.getInstance(ALGORITHM);byte[] md5hash;md.update(text.getBytes(""utf-8""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);} catch (NoSuchAlgorithmException nsae) {throw new ProducteevSignatureException(""No such algorithm : "" + ALGORITHM, nsae);} catch (UnsupportedEncodingException e) {throw new ProducteevSignatureException(""No such algorithm : "" + ALGORITHM, e);}}public static void copyFile(File from, File to) throws IOException {if (from.isDirectory()) {if (!to.exists()) {to.mkdir();}File[] children = from.listFiles();for (int i = 0; i < children.length; i++) {if (children[i].getName().equals(""."") || children[i].getName().equals("".."")) {continue;}if (children[i].isDirectory()) {File f = new File(to, children[i].getName());copyFile(children[i], f);} else {copyFile(children[i], to);}}} else if (from.isFile() && (to.isDirectory() || to.isFile())) {if (to.isDirectory()) {to = new File(to, from.getName());}FileInputStream in = new FileInputStream(from);FileOutputStream out = new FileOutputStream(to);byte[] buf = new byte[32678];int read;while ((read = in.read(buf)) > -1) {out.write(buf, 0, read);}closeStream(in);closeStream(out);}}void openTextFile(String urlString, boolean install) {StringBuffer sb = null;try {URL url = new URL(urlString);InputStream in = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(in));sb = new StringBuffer();String line;while ((line = br.readLine()) != null) sb.append(line + ""\n"");in.close();} catch (IOException e) {if (!(install && urlString.endsWith(""StartupMacros.txt""))) IJ.error(""URL Opener"", """" + e);sb = null;}if (sb != null) {if (install) (new MacroInstaller()).install(new String(sb)); else {int index = urlString.lastIndexOf(""/"");if (index != -1 && index <= urlString.length() - 1) urlString = urlString.substring(index + 1);(new Editor()).create(urlString, new String(sb));}}}public void validateXml(InputStream inputData, ErrorHandler errorHandler) throws SAXException, IOException, Exception {SAXParserFactory spf = SAXParserFactory.newInstance();spf.setValidating(false);spf.setNamespaceAware(true);try {SchemaFactory schemaFactory = SchemaFactory.newInstance(""http://www.w3.org/2001/XMLSchema"");URL schemaURL = new URL(schemeUrl);InputStream urlStream = null;try {urlStream = schemaURL.openStream();} catch (IOException ex) {if (defaultUrl != null) {schemaURL = new URL(defaultUrl);urlStream = schemaURL.openStream();} else {throw ex;}}LOGGER.debug(""Uses schema url : "" + schemaURL);StreamSource sss = new StreamSource(urlStream);Schema schema = schemaFactory.newSchema(sss);spf.setSchema(schema);SAXParser parser = spf.newSAXParser();XMLReader reader = parser.getXMLReader();reader.setErrorHandler(errorHandler);reader.parse(new InputSource(inputData));} catch (ParserConfigurationException e) {throw new SAXException(e);}}public static void copyFile(File sourceFile, File destFile) throws IOException {if (!destFile.exists()) destFile.createNewFile();FileChannel source = null;FileChannel destination = null;try {source = new FileInputStream(sourceFile).getChannel();destination = new FileOutputStream(destFile).getChannel();destination.transferFrom(source, 0, source.size());} finally {if (source != null) source.close();if (destination != null) destination.close();}}"	5
"public static Result checkLink(String theUrl) throws MalformedURLException {URL url = new URL(theUrl);HttpURLConnection urlConnection = null;try {urlConnection = (HttpURLConnection) url.openConnection();urlConnection.setConnectTimeout(5000);urlConnection.setRequestMethod(""GET"");urlConnection.connect();return new Result(urlConnection.getResponseCode(), false);} catch (IOException e) {return new Result(0, true);} finally {if (urlConnection != null) {urlConnection.disconnect();}}}public static void compress(File srcFile, File destFile) throws IOException {InputStream input = null;OutputStream output = null;try {input = new BufferedInputStream(new FileInputStream(srcFile));output = new GZIPOutputStream(new FileOutputStream(destFile));IOUtils.copyLarge(input, output);} finally {IOUtils.closeQuietly(output);IOUtils.closeQuietly(input);}}public static void uncompress(File srcFile, File destFile) throws IOException {InputStream input = null;OutputStream output = null;try {input = new GZIPInputStream(new FileInputStream(srcFile));output = new BufferedOutputStream(new FileOutputStream(destFile));IOUtils.copyLarge(input, output);} finally {IOUtils.closeQuietly(output);IOUtils.closeQuietly(input);}}@Testpublic void testTrainingDefault() throws IOException {File temp = File.createTempFile(""fannj_"", "".tmp"");temp.deleteOnExit();IOUtils.copy(this.getClass().getResourceAsStream(""xor.data""), new FileOutputStream(temp));List<Layer> layers = new ArrayList<Layer>();layers.add(Layer.create(2));layers.add(Layer.create(3, ActivationFunction.FANN_SIGMOID_SYMMETRIC));layers.add(Layer.create(1, ActivationFunction.FANN_SIGMOID_SYMMETRIC));Fann fann = new Fann(layers);Trainer trainer = new Trainer(fann);float desiredError = .001f;float mse = trainer.train(temp.getPath(), 500000, 1000, desiredError);assertTrue("""" + mse, mse <= desiredError);}@Testpublic void testTrainingQuickprop() throws IOException {File temp = File.createTempFile(""fannj_"", "".tmp"");temp.deleteOnExit();IOUtils.copy(this.getClass().getResourceAsStream(""xor.data""), new FileOutputStream(temp));List<Layer> layers = new ArrayList<Layer>();layers.add(Layer.create(2));layers.add(Layer.create(3, ActivationFunction.FANN_SIGMOID_SYMMETRIC));layers.add(Layer.create(1, ActivationFunction.FANN_SIGMOID_SYMMETRIC));Fann fann = new Fann(layers);Trainer trainer = new Trainer(fann);trainer.setTrainingAlgorithm(TrainingAlgorithm.FANN_TRAIN_QUICKPROP);float desiredError = .001f;float mse = trainer.train(temp.getPath(), 500000, 1000, desiredError);assertTrue("""" + mse, mse <= desiredError);}@Testpublic void testTrainingBackprop() throws IOException {File temp = File.createTempFile(""fannj_"", "".tmp"");temp.deleteOnExit();IOUtils.copy(this.getClass().getResourceAsStream(""xor.data""), new FileOutputStream(temp));List<Layer> layers = new ArrayList<Layer>();layers.add(Layer.create(2));layers.add(Layer.create(3, ActivationFunction.FANN_SIGMOID_SYMMETRIC));layers.add(Layer.create(2, ActivationFunction.FANN_SIGMOID_SYMMETRIC));layers.add(Layer.create(1, ActivationFunction.FANN_SIGMOID_SYMMETRIC));Fann fann = new Fann(layers);Trainer trainer = new Trainer(fann);trainer.setTrainingAlgorithm(TrainingAlgorithm.FANN_TRAIN_INCREMENTAL);float desiredError = .001f;float mse = trainer.train(temp.getPath(), 500000, 1000, desiredError);assertTrue("""" + mse, mse <= desiredError);}@Testpublic void testCascadeTraining() throws IOException {File temp = File.createTempFile(""fannj_"", "".tmp"");temp.deleteOnExit();IOUtils.copy(this.getClass().getResourceAsStream(""parity8.train""), new FileOutputStream(temp));Fann fann = new FannShortcut(8, 1);Trainer trainer = new Trainer(fann);float desiredError = .00f;float mse = trainer.cascadeTrain(temp.getPath(), 30, 1, desiredError);assertTrue("""" + mse, mse <= desiredError);}public static String SHA(String s) {try {MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(s.getBytes(), 0, s.getBytes().length);byte[] hash = md.digest();StringBuilder sb = new StringBuilder();int msb;int lsb = 0;int i;for (i = 0; i < hash.length; i++) {msb = ((int) hash[i] & 0x000000FF) / 16;lsb = ((int) hash[i] & 0x000000FF) % 16;sb.append(hexChars[msb]);sb.append(hexChars[lsb]);}return sb.toString();} catch (NoSuchAlgorithmException e) {return null;}}private static void readAndRewrite(File inFile, File outFile) throws IOException {ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);Dataset ds = DcmObjectFactory.getInstance().newDataset();dcmParser.setDcmHandler(ds.getDcmHandler());dcmParser.parseDcmFile(null, Tags.PixelData);PixelDataReader pdReader = pdFact.newReader(ds, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());System.out.println(""reading "" + inFile + ""..."");pdReader.readPixelData(false);ImageOutputStream out = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;ds.writeDataset(out, dcmEncParam);ds.writeHeader(out, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());System.out.println(""writing "" + outFile + ""..."");PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, ds, out, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());pdWriter.writePixelData();out.flush();out.close();System.out.println(""done!"");}private void sendRemoteFiles() throws Exception {if (validParameters()) {URL url = new URL(storageUrlString);HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();RequestUtils requestUtils = new RequestUtils();requestUtils.preRequestAddParameter(""senderObj"", ""FileSender"");requestUtils.preRequestAddParameter(""wfiType"", ""zen"");requestUtils.preRequestAddParameter(""portalID"", this.portalID);requestUtils.preRequestAddParameter(""userID"", this.userID);requestUtils.preRequestAddParameter(""workflowID"", this.workflowID);requestUtils.preRequestAddParameter(""jobID"", this.jobID);requestUtils.preRequestAddParameter(""pidID"", this.pidID);requestUtils.preRequestAddParameter(""runtimeID"", this.runtimeID);requestUtils.preRequestAddParameter(""copyhash"", getCopyHashStr());String zipFileName = ZipUtils.getInstance().getUniqueZipFileName();requestUtils.preRequestAddFile(""zipFileName"", zipFileName);requestUtils.createPostRequest();httpURLConnection.setRequestProperty(""Content-Type"", ""multipart/form-data; boundary="" + requestUtils.getBoundary());httpURLConnection.setRequestMethod(""POST"");httpURLConnection.setDoOutput(true);httpURLConnection.setDoInput(true);try {httpURLConnection.connect();OutputStream out = httpURLConnection.getOutputStream();byte[] preBytes = requestUtils.getPreRequestStringBytes();out.write(preBytes);out.flush();ZipUtils.getInstance().sendDirAllFilesToStream(sendFilesDir, out);byte[] postBytes = requestUtils.getPostRequestStringBytes();out.write(postBytes);out.flush();out.close();BufferedReader in = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));in.readLine();in.close();if (HttpURLConnection.HTTP_OK != httpURLConnection.getResponseCode()) {throw new Exception(""response not HTTP_OK !"");}} catch (Exception e) {e.printStackTrace();throw new Exception(""Cannot connect to: "" + storageUrlString, e);}} else {throw new Exception(""FilesDir not exist ! or not valid parameters: portalID, userID, workflowID, jobID, pidID, runtimeID !"");}}"	5
"public static void main(String[] args) {FTPClient client = new FTPClient();try {client.connect(""192.168.1.10"");boolean login = client.login(""a"", ""123456"");if (login) {System.out.println(""Dang nhap thanh cong..."");boolean logout = client.logout();if (logout) {System.out.println(""Da Logout khoi FTP Server..."");}} else {System.out.println(""Dang nhap that bai..."");}} catch (IOException e) {e.printStackTrace();} finally {try {client.disconnect();} catch (IOException e) {e.printStackTrace();}}}public static void copy(String sourceFile, String targetFile) throws IOException {FileChannel sourceChannel = new FileInputStream(sourceFile).getChannel();FileChannel targetChannel = new FileOutputStream(targetFile).getChannel();targetChannel.transferFrom(sourceChannel, 0, sourceChannel.size());sourceChannel.close();targetChannel.close();}public static void bubble_sort(Sortable[] objects) {for (int i = objects.length; --i >= 0; ) {boolean flipped = false;for (int j = 0; j < i; j++) {if (objects[j].greater_than(objects[j + 1])) {Sortable tmp = objects[j];objects[j] = objects[j + 1];objects[j + 1] = tmp;flipped = true;}}if (!flipped) return;}}public static void bubble_sort(int[] objects, int len) {for (int i = len; --i >= 0; ) {boolean flipped = false;for (int j = 0; j < i; j++) {if (objects[j + 1] < objects[j]) {int tmp = objects[j];objects[j] = objects[j + 1];objects[j + 1] = tmp;flipped = true;}}if (!flipped) return;}}public static void copia(File nombreFuente, File nombreDestino) throws IOException {FileInputStream fis = new FileInputStream(nombreFuente);FileOutputStream fos = new FileOutputStream(nombreDestino);FileChannel canalFuente = fis.getChannel();FileChannel canalDestino = fos.getChannel();canalFuente.transferTo(0, canalFuente.size(), canalDestino);fis.close();fos.close();}private void addFilesToExistingZip(File zipFile, String[] dirs, File[] files) throws IOException {File tempFile = new File(zipFile.getAbsoluteFile() + "".temp"");if (tempFile.exists()) tempFile.delete();boolean renameOk = zipFile.renameTo(tempFile);if (!renameOk) {throw new RuntimeException(""Could not rename the file "" + zipFile.getAbsolutePath() + "" to "" + tempFile.getAbsolutePath());}ZipInputStream zin = new ZipInputStream(new FileInputStream(tempFile));ZipOutputStream out = new ZipOutputStream(new FileOutputStream(zipFile));ZipEntry entry = zin.getNextEntry();byte[] buf = new byte[1024];while (entry != null) {String entryName = entry.getName();boolean inFiles = false;for (int i = 0; i < files.length; i++) {String fileName = dirs[i] + ""/"" + files[i].getName();if (fileName.equals(entryName)) {inFiles = true;break;}}if (!inFiles) {out.putNextEntry(new ZipEntry(entryName));int len;while ((len = zin.read(buf)) > 0) out.write(buf, 0, len);}entry = zin.getNextEntry();}zin.close();for (int i = 0; i < files.length; i++) {InputStream in = new FileInputStream(files[i]);out.putNextEntry(new ZipEntry(dirs[i] + ""/"" + files[i].getName()));int len;while ((len = in.read(buf)) > 0) out.write(buf, 0, len);out.closeEntry();in.close();}out.close();tempFile.delete();}public String uploadReport(Collection c) {try {String id = generateRandomId();Iterator iter = c.iterator();URL url = new URL(ZorobotSystem.props.getProperty(""zoro.url"") + ""auplo2.jsp"");URLConnection connection = url.openConnection();connection.setDoOutput(true);PrintWriter out = new PrintWriter(connection.getOutputStream());out.print(""id="" + id + ""&"");StringBuffer sb = new StringBuffer();int gg = 0;while (iter.hasNext()) {if (gg++ >= 500) break;Question tq = (Question) iter.next();sb.append(""a="");sb.append(URLEncoder.encode(tq.question, ""UTF-8""));sb.append(""*"");StringBuffer ss = new StringBuffer();String[] ans;if (tq.ansDisplay != null) {ans = tq.ansDisplay;} else {ans = tq.answer;}for (int j = 0; j < ans.length; j++) {if (j > 0) ss.append(""*"");ss.append(ans[j]);}sb.append(URLEncoder.encode(ss.toString(), ""UTF-8""));if (iter.hasNext() && gg < 500) sb.append(""&"");}out.println(sb.toString());out.close();BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));String inputLine;if ((inputLine = in.readLine()) != null) {if (!inputLine.equals(""OK!"") && inputLine.length() > 3) {System.out.println(""Not OK: "" + inputLine);return ""xxxxxxxxxx"";}}in.close();return id;} catch (Exception e) {e.printStackTrace();}return null;}private final void copyTargetFileToSourceFile(File sourceFile, File targetFile) throws MJProcessorException {if (!targetFile.exists()) {targetFile.getParentFile().mkdirs();try {if (!targetFile.exists()) {targetFile.createNewFile();}} catch (IOException e) {throw new MJProcessorException(e.getMessage(), e);}}FileChannel in = null, out = null;try {in = new FileInputStream(sourceFile).getChannel();out = new FileOutputStream(targetFile).getChannel();long size = in.size();MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buf);} catch (IOException e) {log.error(e);} finally {if (in != null) try {in.close();} catch (IOException e) {log.error(e);}if (out != null) try {out.close();} catch (IOException e) {log.error(e);}}}public static void copy(File src, File dest) throws IOException {if (dest.exists() && dest.isFile()) {logger.fine(""cp "" + src + "" "" + dest + "" -- Destination file "" + dest + "" already exists. Deleting..."");dest.delete();}final File parent = dest.getParentFile();if (!parent.exists()) {logger.info(""Directory to contain destination does not exist. Creating..."");parent.mkdirs();}final FileInputStream fis = new FileInputStream(src);final FileOutputStream fos = new FileOutputStream(dest);final byte[] b = new byte[2048];int n;while ((n = fis.read(b)) != -1) fos.write(b, 0, n);fis.close();fos.close();}private void downloadPage(final URL url, final File file) {try {long size = 0;final byte[] buffer = new byte[BotUtil.BUFFER_SIZE];final File tempFile = new File(file.getParentFile(), ""temp.tmp"");int length;int lastUpdate = 0;FileOutputStream fos = new FileOutputStream(tempFile);final InputStream is = url.openStream();do {length = is.read(buffer);if (length >= 0) {fos.write(buffer, 0, length);size += length;}if (lastUpdate > UPDATE_TIME) {report(0, (int) (size / Format.MEMORY_MEG), ""Downloading... "" + Format.formatMemory(size));lastUpdate = 0;}lastUpdate++;} while (length >= 0);fos.close();if (url.toString().toLowerCase().endsWith("".gz"")) {final FileInputStream fis = new FileInputStream(tempFile);final GZIPInputStream gis = new GZIPInputStream(fis);fos = new FileOutputStream(file);size = 0;lastUpdate = 0;do {length = gis.read(buffer);if (length >= 0) {fos.write(buffer, 0, length);size += length;}if (lastUpdate > UPDATE_TIME) {report(0, (int) (size / Format.MEMORY_MEG), ""Uncompressing... "" + Format.formatMemory(size));lastUpdate = 0;}lastUpdate++;} while (length >= 0);fos.close();fis.close();gis.close();tempFile.delete();} else {file.delete();tempFile.renameTo(file);}} catch (final IOException e) {throw new AnalystError(e);}}"	5
"protected void handleConnection(Socket server) throws IOException {OutputStream out = server.getOutputStream();PrintWriter pout = new PrintWriter(out, true);BufferedReader in = SocketUtil.getReader(server);String failureReason = null;int failureCode = 0;String httpVersion = ""HTTP/1.0"";String uri = null;String command = in.readLine();URL url = null;if (command != null) {StringTokenizer tokenizer = new StringTokenizer(command);if (tokenizer.countTokens() != 3) {failureCode = 400;failureReason = ""Illformed Request-Line"";} else {String method = tokenizer.nextToken();if (!method.equalsIgnoreCase(""get"")) {failureCode = 501;failureReason = ""Only supports GET method"";} else {uri = tokenizer.nextToken();httpVersion = tokenizer.nextToken();try {url = getURL(uri);} catch (IOException e) {failureCode = 404;failureReason = ""resource not found"";}}}} else {failureCode = 400;failureReason = ""Null request"";}if (url != null) {InputStream stream = null;try {URLConnection connection = url.openConnection();byte[] chunk = new byte[1024];int read = 0;pout.println(httpVersion + "" 200 "");pout.println(""Content-Type: "" + connection.getContentType());pout.println(""Content-Length: "" + connection.getContentLength());pout.println(""Content-Encoding: "" + connection.getContentEncoding());pout.println();stream = connection.getInputStream();read = stream.read(chunk);while (read != -1) {out.write(chunk, 0, read);read = stream.read(chunk);}} catch (IOException e) {failureCode = 500;failureReason = ""problem reading the resource content"";} finally {if (stream != null) {stream.close();}}} else {failureCode = 404;failureReason = ""resource not found"";}if (failureCode != 0) {pout.println(httpVersion + "" "" + failureCode + "" "" + failureReason);pout.println();}doDelay();server.close();}@Overridepublic void run() {if (mMode == 0) {long currentVersion = Version.extractVersion(App.getVersion());if (currentVersion == 0) {mMode = 2;RESULT = MSG_UP_TO_DATE;return;}long versionAvailable = currentVersion;mMode = 2;try {StringBuilder buffer = new StringBuilder(mCheckURL);try {NetworkInterface ni = NetworkInterface.getByInetAddress(InetAddress.getLocalHost());if (!ni.isLoopback()) {if (ni.isUp()) {if (!ni.isVirtual()) {buffer.append('?');byte[] macAddress = ni.getHardwareAddress();for (byte one : macAddress) {buffer.append(Integer.toHexString(one >>> 4 & 0xF));buffer.append(Integer.toHexString(one & 0xF));}}}}} catch (Exception exception) {}URL url = new URL(buffer.toString());BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String line = in.readLine();while (line != null) {StringTokenizer tokenizer = new StringTokenizer(line, ""\t"");if (tokenizer.hasMoreTokens()) {try {if (tokenizer.nextToken().equalsIgnoreCase(mProductKey)) {String token = tokenizer.nextToken();long version = Version.extractVersion(token);if (version > versionAvailable) {versionAvailable = version;}}} catch (Exception exception) {}}line = in.readLine();}} catch (Exception exception) {}if (versionAvailable > currentVersion) {Preferences prefs = Preferences.getInstance();String humanReadableVersion = Version.getHumanReadableVersion(versionAvailable);NEW_VERSION_AVAILABLE = true;RESULT = MessageFormat.format(MSG_OUT_OF_DATE, humanReadableVersion);if (versionAvailable > Version.extractVersion(prefs.getStringValue(MODULE, LAST_VERSION_KEY, App.getVersion()))) {prefs.setValue(MODULE, LAST_VERSION_KEY, humanReadableVersion);prefs.save();mMode = 1;EventQueue.invokeLater(this);return;}} else {RESULT = MSG_UP_TO_DATE;}} else if (mMode == 1) {if (App.isNotificationAllowed()) {String result = getResult();mMode = 2;if (WindowUtils.showConfirmDialog(null, result, MSG_UPDATE_TITLE, JOptionPane.OK_CANCEL_OPTION, new String[] { MSG_UPDATE_TITLE, MSG_IGNORE_TITLE }, MSG_UPDATE_TITLE) == JOptionPane.OK_OPTION) {goToUpdate();}} else {DelayedTask.schedule(this, 250);}}}public static void main(String[] args) throws Exception {String layerName = args[0];String layerDescription = args[1];String units = args[2];String rawDataDirPath = args[3];String processDirPath = args[4];String divaDirPath = args[5];String legendDirPath = args[6];String geotiffDirPath = args[7];String dbJdbcUrl = args[8];String dbUsername = args[9];String dbPassword = args[10];String geoserverUsername = args[11];String geoserverPassword = args[12];File rawDataDir = new File(rawDataDirPath);if (!rawDataDir.exists() || !rawDataDir.isDirectory()) {throw new RuntimeException(""Supplied raw data directory "" + rawDataDirPath + "" does not exist or is not a directory"");}File processDir = new File(processDirPath);if (!processDir.exists() || !processDir.isDirectory()) {throw new RuntimeException(""Supplied process directory "" + processDirPath + "" does not exist or is not a directory"");}File divaDir = new File(divaDirPath);if (!divaDir.exists() || !divaDir.isDirectory()) {throw new RuntimeException(""Supplied diva directory "" + divaDirPath + "" does not exist or is not a directory"");}File legendDir = new File(legendDirPath);if (!legendDir.exists() || !legendDir.isDirectory()) {throw new RuntimeException(""Supplied legend directory "" + legendDirPath + "" does not exist or is not a directory"");}File geotiffDir = new File(geotiffDirPath);if (!geotiffDir.exists() || !geotiffDir.isDirectory()) {throw new RuntimeException(""Supplied geotiff directory "" + geotiffDirPath + "" does not exist or is not a directory"");}System.out.println(""Beginning environmetal load"");System.out.println(""Connecting to database"");Class.forName(""org.postgresql.Driver"");Properties props = new Properties();props.setProperty(""user"", dbUsername);props.setProperty(""password"", dbPassword);Connection conn = DriverManager.getConnection(dbJdbcUrl, props);conn.setAutoCommit(false);try {File layerProcessDir = new File(processDir, layerName);layerProcessDir.mkdir();System.out.println(""Running gdalwarp"");File hdrFile = new File(rawDataDir, ""hdr.adf"");if (!hdrFile.exists()) {throw new RuntimeException(""Could not find hdr.adf in "" + rawDataDirPath);}File bilFile = new File(layerProcessDir, layerName + "".bil"");Process procGdalWarp = Runtime.getRuntime().exec(new String[] { ""gdalwarp"", ""-of"", ""EHdr"", ""-ot"", ""Float32"", hdrFile.getAbsolutePath(), bilFile.getAbsolutePath() });int gdalWarpReturnVal = procGdalWarp.waitFor();if (gdalWarpReturnVal != 0) {String gdalWarpErrorOutput = IOUtils.toString(procGdalWarp.getErrorStream());throw new RuntimeException(""gdalwarp failed: "" + gdalWarpErrorOutput);}System.out.println(""Running Bil2diva"");boolean bil2DivaSuccess = Bil2diva.bil2diva(layerProcessDir.getAbsolutePath() + File.separator + layerName, divaDir.getAbsolutePath() + File.separator + layerName, units);if (!bil2DivaSuccess) {throw new RuntimeException(""Bil2diva Failed"");}System.out.println(""Running GridLegend"");boolean gridLegendSuccess = GridLegend.generateGridLegend(divaDir.getAbsolutePath() + File.separator + layerName, legendDir.getAbsolutePath() + File.separator + layerName, 1, false);if (!gridLegendSuccess) {throw new RuntimeException(""GridLegend Failed"");}System.out.println(""Running gdal_translate"");File geotiffFile = new File(geotiffDir, layerName + "".tif"");Process procGdalTranslate = Runtime.getRuntime().exec(new String[] { ""gdal_translate"", ""-of"", ""GTiff"", bilFile.getAbsolutePath(), geotiffFile.getAbsolutePath() });int gdalTranslateReturnVal = procGdalTranslate.waitFor();if (gdalTranslateReturnVal != 0) {String gdalTranslateErrorOutput = IOUtils.toString(procGdalTranslate.getErrorStream());throw new RuntimeException(""gdal_translate failed: "" + gdalTranslateErrorOutput);}System.out.println(""Extracting extents and min/max environmental value from diva .grd file"");File divaGrd = new File(divaDir, layerName + "".grd"");if (!divaGrd.exists()) {throw new RuntimeException(""Could not locate diva .grd file: "" + divaGrd.toString());}String strDivaGrd = FileUtils.readFileToString(divaGrd);float minValue = Float.parseFloat(matchPattern(strDivaGrd, ""^MinValue=(.+)$""));float maxValue = Float.parseFloat(matchPattern(strDivaGrd, ""^MaxValue=(.+)$""));float minLatitude = Float.parseFloat(matchPattern(strDivaGrd, ""^MinY=(.+)$""));float maxLatitude = Float.parseFloat(matchPattern(strDivaGrd, ""^MaxY=(.+)$""));float minLongitude = Float.parseFloat(matchPattern(strDivaGrd, ""^MinX=(.+)$""));float maxLongitude = Float.parseFloat(matchPattern(strDivaGrd, ""^MaxX=(.+)$""));System.out.println(""Generating ID for new layer..."");Statement st = conn.createStatement();ResultSet rs = st.executeQuery(""SELECT MAX(id) from layers"");rs.next();int id = 1;String idAsString = rs.getString(1);if (idAsString != null) {id = Integer.parseInt(idAsString);id++;}String displayPath = MessageFormat.format(GEOSERVER_QUERY_TEMPLATE, layerName);System.out.println(""Creating layers table entry..."");PreparedStatement createLayersStatement = createLayersInsert(conn, id, layerDescription, divaDir.getAbsolutePath(), layerName, displayPath, minLatitude, minLongitude, maxLatitude, maxLongitude, minValue, maxValue, units);createLayersStatement.execute();System.out.println(""Creating fields table entry..."");PreparedStatement createFieldsStatement = createFieldsInsert(conn, id, layerName, layerDescription);createFieldsStatement.execute();DefaultHttpClient httpClient = new DefaultHttpClient();httpClient.getCredentialsProvider().setCredentials(new AuthScope(""localhost"", 8082), new UsernamePasswordCredentials(geoserverUsername, geoserverPassword));System.out.println(""Creating layer in geoserver..."");HttpPut createLayerPut = new HttpPut(String.format(""http://localhost:8082/geoserver/rest/workspaces/ALA/coveragestores/%s/external.geotiff"", layerName));createLayerPut.setHeader(""Content-type"", ""text/plain"");createLayerPut.setEntity(new StringEntity(geotiffFile.toURI().toURL().toString()));HttpResponse createLayerResponse = httpClient.execute(createLayerPut);if (createLayerResponse.getStatusLine().getStatusCode() != 200) {throw new RuntimeException(""Error creating layer in geoserver: "" + createLayerResponse.toString());}EntityUtils.consume(createLayerResponse.getEntity());System.out.println(""Creating style in geoserver"");HttpPost createStylePost = new HttpPost(""http://localhost:8082/geoserver/rest/styles"");createStylePost.setHeader(""Content-type"", ""text/xml"");createStylePost.setEntity(new StringEntity(String.format(""<style><name>%s_style</name><filename>%s.sld</filename></style>"", layerName, layerName)));HttpResponse createStyleResponse = httpClient.execute(createLayerPut);if (createStyleResponse.getStatusLine().getStatusCode() != 201) {throw new RuntimeException(""Error creating style in geoserver: "" + createStyleResponse.toString());}EntityUtils.consume(createStyleResponse.getEntity());System.out.println(""Uploading sld file to geoserver"");File sldFile = new File(legendDir, layerName + "".sld"");String sldData = FileUtils.readFileToString(sldFile);HttpPut uploadSldPut = new HttpPut(String.format(""http://localhost:8082/geoserver/rest/styles/%s_style"", layerName));uploadSldPut.setHeader(""Content-type"", ""application/vnd.ogc.sld+xml"");uploadSldPut.setEntity(new StringEntity(sldData));HttpResponse uploadSldResponse = httpClient.execute(uploadSldPut);if (uploadSldResponse.getStatusLine().getStatusCode() != 200) {throw new RuntimeException(""Error uploading sld file geoserver: "" + uploadSldResponse.toString());}EntityUtils.consume(uploadSldResponse.getEntity());System.out.println(""Setting default style in geoserver"");HttpPut setDefaultStylePut = new HttpPut(String.format(""http://localhost:8082/geoserver/rest/layers/ALA:%s"", layerName));setDefaultStylePut.setHeader(""Content-type"", ""text/xml"");setDefaultStylePut.setEntity(new StringEntity(String.format(""<layer><enabled>true</enabled><defaultStyle><name>%s_style</name></defaultStyle></layer>"", layerName)));HttpResponse setDefaultStyleResponse = httpClient.execute(createLayerPut);if (setDefaultStyleResponse.getStatusLine().getStatusCode() != 200) {throw new RuntimeException(""Setting default style in geoserver: "" + setDefaultStyleResponse.toString());}EntityUtils.consume(setDefaultStyleResponse.getEntity());conn.commit();} catch (Exception ex) {ex.printStackTrace();conn.rollback();}}public byte[] getBytesFromUrl(String url) {try {HttpGet get = new HttpGet(url);HttpResponse response = this.getHttpClient().execute(get);HttpEntity entity = response.getEntity();if (entity == null) {throw new RuntimeException(""response body was empty"");}return EntityUtils.toByteArray(entity);} catch (RuntimeException ex) {throw ex;} catch (Exception ex) {throw new RuntimeException(ex);}}public String get(String url) {try {HttpGet get = new HttpGet(url);HttpResponse response = this.getHttpClient().execute(get);HttpEntity entity = response.getEntity();if (entity == null) {throw new RuntimeException(""response body was empty"");}return EntityUtils.toString(entity);} catch (RuntimeException ex) {throw ex;} catch (Exception ex) {throw new RuntimeException(ex);}}public TestReport runImpl() throws Exception {String parser = XMLResourceDescriptor.getXMLParserClassName();DocumentFactory df = new SAXDocumentFactory(GenericDOMImplementation.getDOMImplementation(), parser);File f = (new File(testFileName));URL url = f.toURL();Document doc = df.createDocument(null, rootTag, url.toString(), url.openStream());Element e = doc.getElementById(targetId);if (e == null) {DefaultTestReport report = new DefaultTestReport(this);report.setErrorCode(ERROR_GET_ELEMENT_BY_ID_FAILED);report.addDescriptionEntry(ENTRY_KEY_ID, targetId);report.setPassed(false);return report;}Document otherDocument = df.createDocument(null, rootTag, url.toString(), url.openStream());DocumentFragment docFrag = otherDocument.createDocumentFragment();try {docFrag.appendChild(doc.getDocumentElement());} catch (DOMException ex) {return reportSuccess();}DefaultTestReport report = new DefaultTestReport(this);report.setErrorCode(ERROR_EXCEPTION_NOT_THROWN);report.setPassed(false);return report;}public static ChannelIF addChannel(String url) throws Exception {ChannelIF channel = null;try {channel = FeedParser.parse(new ChannelBuilder(), url);if (channel.getLocation() == null) channel.setLocation(new URL(url));} catch (ParseException e) {InputStream is = new URL(url).openStream();InputStreamReader reader = new InputStreamReader(is);channel = FeedParser.parse(new ChannelBuilder(), reader);reader.close();is.close();if (channel.getLocation() == null) channel.setLocation(new URL(url));}DAOChannel.addChannel(channel);DAOFavicon.addFaviconForChannel(channel);return channel;}public boolean consolidateCrossrefGet(BiblioItem bib, ArrayList<BiblioItem> bib2) throws Exception {boolean result = false;String doi = bib.getDOI();String aut = bib.getFirstAuthorSurname();String title = bib.getTitle();String firstPage = null;String pageRange = bib.getPageRange();int beginPage = bib.getBeginPage();if (beginPage != -1) {firstPage = """" + beginPage;} else if (pageRange != null) {StringTokenizer st = new StringTokenizer(pageRange, ""--"");if (st.countTokens() == 2) {firstPage = st.nextToken();} else if (st.countTokens() == 1) firstPage = pageRange;}if (aut != null) {aut = TextUtilities.removeAccents(aut);}if (title != null) {title = TextUtilities.removeAccents(title);}if (doi != null) {if (doi.startsWith(""doi:"") | doi.startsWith(""DOI:"")) {doi.substring(4, doi.length());doi = doi.trim();}doi = doi.replace("" "", """");String xml = null;if (cCon != null) {PreparedStatement pstmt = null;try {pstmt = cCon.prepareStatement(QUERY_CROSSREF_SQL3);pstmt.setString(1, doi);ResultSet res = pstmt.executeQuery();if (res.next()) {xml = res.getString(1);}res.close();pstmt.close();} catch (SQLException se) {System.err.println(""EXCEPTION HANDLING CROSSREF CACHE"");se.printStackTrace();} finally {try {if (pstmt != null) pstmt.close();} catch (SQLException se) {}}if (xml != null) {InputSource is = new InputSource();is.setCharacterStream(new StringReader(xml));DefaultHandler crossref = new crossrefUnixrefSaxParser(bib2);SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser parser = spf.newSAXParser();parser.parse(is, crossref);if (bib2.size() > 0) {if (!bib2.get(0).getError()) result = true;}}}if (xml == null) {String subpath = String.format(DOI_BASE_QUERY, crossref_id, crossref_pw, doi);URL url = new URL(""http://"" + crossref_host + ""/"" + subpath);System.out.println(""Sending: "" + url.toString());HttpURLConnection urlConn = null;try {urlConn = (HttpURLConnection) url.openConnection();} catch (Exception e) {this.setProxy();try {urlConn = (HttpURLConnection) url.openConnection();} catch (Exception e2) {e2.printStackTrace();urlConn = null;}}if (urlConn != null) {try {urlConn.setDoOutput(true);urlConn.setDoInput(true);urlConn.setRequestMethod(""GET"");urlConn.setRequestProperty(""Content-Type"", ""application/x-www-form-urlencoded"");InputStream in = urlConn.getInputStream();xml = TextUtilities.convertStreamToString(in);InputSource is = new InputSource();is.setCharacterStream(new StringReader(xml));DefaultHandler crossref = new crossrefUnixrefSaxParser(bib2);SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser parser = spf.newSAXParser();parser.parse(is, crossref);if (bib2.size() > 0) {if (!bib2.get(0).getError()) result = true;}urlConn.disconnect();} catch (Exception e) {System.err.println(""Warning: Consolidation set true, but the online connection to Crossref fails."");}if (cCon != null) {PreparedStatement pstmt2 = null;try {pstmt2 = cCon.prepareStatement(INSERT_CROSSREF_SQL3);pstmt2.setString(1, doi);pstmt2.setString(2, xml);pstmt2.executeUpdate();pstmt2.close();} catch (SQLException se) {System.err.println(""EXCEPTION HANDLING CROSSREF UPDATE"");} finally {try {if (pstmt2 != null) pstmt2.close();} catch (SQLException se) {}}}}}} else if ((title != null) & (aut != null)) {String xml = null;if (cCon != null) {PreparedStatement pstmt = null;try {pstmt = cCon.prepareStatement(QUERY_CROSSREF_SQL);pstmt.setString(1, aut);pstmt.setString(2, title);ResultSet res = pstmt.executeQuery();if (res.next()) {xml = res.getString(1);}res.close();pstmt.close();} catch (SQLException se) {System.err.println(""EXCEPTION HANDLING CROSSREF CACHE"");se.printStackTrace();} finally {try {if (pstmt != null) pstmt.close();} catch (SQLException se) {}}if (xml != null) {InputSource is = new InputSource();is.setCharacterStream(new StringReader(xml));DefaultHandler crossref = new crossrefUnixrefSaxParser(bib2);SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser parser = spf.newSAXParser();parser.parse(is, crossref);if (bib2.size() > 0) {if (!bib2.get(0).getError()) result = true;}}}if (xml == null) {String subpath = String.format(TITLE_BASE_QUERY, crossref_id, crossref_pw, URLEncoder.encode(title), URLEncoder.encode(aut));URL url = new URL(""http://"" + crossref_host + ""/"" + subpath);System.out.println(""Sending: "" + url.toString());HttpURLConnection urlConn = null;try {urlConn = (HttpURLConnection) url.openConnection();} catch (Exception e) {this.setProxy();try {urlConn = (HttpURLConnection) url.openConnection();} catch (Exception e2) {e2.printStackTrace();urlConn = null;}}if (urlConn != null) {try {urlConn.setDoOutput(true);urlConn.setDoInput(true);urlConn.setRequestMethod(""GET"");urlConn.setRequestProperty(""Content-Type"", ""application/x-www-form-urlencoded"");InputStream in = urlConn.getInputStream();xml = TextUtilities.convertStreamToString(in);InputSource is = new InputSource();is.setCharacterStream(new StringReader(xml));DefaultHandler crossref = new crossrefUnixrefSaxParser(bib2);SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser parser = spf.newSAXParser();parser.parse(is, crossref);if (bib2.size() > 0) {if (!bib2.get(0).getError()) result = true;}urlConn.disconnect();} catch (Exception e) {System.err.println(""Warning: Consolidation set true, but the online connection to Crossref fails."");}if (cCon != null) {PreparedStatement pstmt2 = null;try {pstmt2 = cCon.prepareStatement(INSERT_CROSSREF_SQL);pstmt2.setString(1, aut);pstmt2.setString(2, bib.getTitle());pstmt2.setString(3, xml);pstmt2.executeUpdate();pstmt2.close();} catch (SQLException se) {System.err.println(""EXCEPTION HANDLING CROSSREF UPDATE"");} finally {try {if (pstmt2 != null) pstmt2.close();} catch (SQLException se) {}}}}}} else if ((firstPage != null) & (bib.getJournal() != null) & (bib.getVolume() != null)) {String subpath = String.format(JOURNAL_BASE_QUERY, crossref_id, crossref_pw, URLEncoder.encode(bib.getJournal()), URLEncoder.encode(bib.getVolume()), firstPage);URL url = new URL(""http://"" + crossref_host + ""/"" + subpath);String urlmsg = url.toString();System.out.println(urlmsg);String xml = null;if (cCon != null) {PreparedStatement pstmt = null;try {pstmt = cCon.prepareStatement(QUERY_CROSSREF_SQL2);pstmt.setString(1, urlmsg);ResultSet res = pstmt.executeQuery();if (res.next()) {xml = res.getString(1);}res.close();pstmt.close();} catch (SQLException se) {System.err.println(""EXCEPTION HANDLING CROSSREF CACHE"");se.printStackTrace();} finally {try {if (pstmt != null) pstmt.close();} catch (SQLException se) {}}if (xml != null) {InputSource is = new InputSource();is.setCharacterStream(new StringReader(xml));DefaultHandler crossref = new crossrefUnixrefSaxParser(bib2);SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser parser = spf.newSAXParser();parser.parse(is, crossref);if (bib2.size() > 0) {if (!bib2.get(0).getError()) result = true;}}}if (xml == null) {System.out.println(""Sending: "" + urlmsg);HttpURLConnection urlConn = null;try {urlConn = (HttpURLConnection) url.openConnection();} catch (Exception e) {this.setProxy();try {urlConn = (HttpURLConnection) url.openConnection();} catch (Exception e2) {e2.printStackTrace();urlConn = null;}}if (urlConn != null) {try {urlConn.setDoOutput(true);urlConn.setDoInput(true);urlConn.setRequestMethod(""GET"");urlConn.setRequestProperty(""Content-Type"", ""application/x-www-form-urlencoded"");InputStream in = urlConn.getInputStream();xml = TextUtilities.convertStreamToString(in);InputSource is = new InputSource();is.setCharacterStream(new StringReader(xml));DefaultHandler crossref = new crossrefUnixrefSaxParser(bib2);SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser p = spf.newSAXParser();p.parse(is, crossref);if (bib2.size() > 0) {if (!bib2.get(0).getError()) result = true;}in.close();urlConn.disconnect();} catch (Exception e) {System.err.println(""Warning: Consolidation set true, but the online connection to Crossref fails."");}if (cCon != null) {PreparedStatement pstmt2 = null;try {pstmt2 = cCon.prepareStatement(INSERT_CROSSREF_SQL2);pstmt2.setString(1, urlmsg);pstmt2.setString(2, xml);pstmt2.executeUpdate();pstmt2.close();} catch (SQLException se) {System.err.println(""EXCEPTION HANDLING CROSSREF UPDATE"");} finally {try {if (pstmt2 != null) pstmt2.close();} catch (SQLException se) {}}}}}}return result;}public static void main(String[] arg) throws IOException {XmlPullParserFactory PULL_PARSER_FACTORY;try {PULL_PARSER_FACTORY = XmlPullParserFactory.newInstance(System.getProperty(XmlPullParserFactory.PROPERTY_NAME), null);PULL_PARSER_FACTORY.setNamespaceAware(true);DasParser dp = new DasParser(PULL_PARSER_FACTORY);URL url = new URL(""http://www.ebi.ac.uk/das-srv/uniprot/das/uniprot/features?segment=P05067"");InputStream in = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(in));String aLine, xml = """";while ((aLine = br.readLine()) != null) {xml += aLine;}WritebackDocument wbd = dp.parse(xml);System.out.println(""FIN"" + wbd);} catch (XmlPullParserException xppe) {throw new IllegalStateException(""Fatal Exception thrown at initialisation.  Cannot initialise the PullParserFactory required to allow generation of the DAS XML."", xppe);}}public static void loadConfig(DeviceEntry defaultDevice, EmulatorContext emulatorContext) {Config.defaultDevice = defaultDevice;Config.emulatorContext = emulatorContext;File configFile = new File(getConfigPath(), ""config2.xml"");try {if (configFile.exists()) {loadConfigFile(""config2.xml"");} else {configFile = new File(getConfigPath(), ""config.xml"");if (configFile.exists()) {loadConfigFile(""config.xml"");for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) {DeviceEntry entry = (DeviceEntry) e.nextElement();if (!entry.canRemove()) {continue;}removeDeviceEntry(entry);File src = new File(getConfigPath(), entry.getFileName());File dst = File.createTempFile(""dev"", "".jar"", getConfigPath());IOUtils.copyFile(src, dst);entry.setFileName(dst.getName());addDeviceEntry(entry);}} else {createDefaultConfigXml();}saveConfig();}} catch (IOException ex) {Logger.error(ex);createDefaultConfigXml();} finally {if (configXml == null) {createDefaultConfigXml();}}urlsMRU.read(configXml.getChildOrNew(""files"").getChildOrNew(""recent""));initSystemProperties();}"	5
"public static String encryptPassword(String plainPassword) {StringBuffer sb = new StringBuffer();try {MessageDigest messageDigest = MessageDigest.getInstance(""MD5"");messageDigest.update(plainPassword.getBytes());byte[] digestBytes = messageDigest.digest();String hex = null;for (int i = 0; i < digestBytes.length; i++) {hex = Integer.toHexString(0xFF & digestBytes[i]);if (hex.length() < 2) sb.append(""0"");sb.append(hex);}} catch (Exception ex) {System.out.println(ex.getMessage());}return new String(sb);}public static String getMD5HashFromString(String message) {String hashword = null;try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(message.getBytes());BigInteger hash = new BigInteger(1, md5.digest());hashword = hash.toString(16);} catch (NoSuchAlgorithmException nsae) {}return hashword;}private static String readURL(URL url) throws IOException {BufferedReader in = null;StringBuffer s = new StringBuffer();try {in = new BufferedReader(new InputStreamReader(url.openStream()));String str;while ((str = in.readLine()) != null) {s.append(str);}} finally {if (in != null) in.close();}return s.toString();}public void actionPerformed(ActionEvent e) {if (saveForWebChooser == null) {ExtensionFileFilter fileFilter = new ExtensionFileFilter(""HTML files"");fileFilter.addExtension(""html"");saveForWebChooser = new JFileChooser();saveForWebChooser.setFileFilter(fileFilter);saveForWebChooser.setDialogTitle(""Save for Web..."");saveForWebChooser.setCurrentDirectory(new File(Config.getRecentDirectory(""recentSaveForWebDirectory"")));}if (saveForWebChooser.showSaveDialog(Main.this) == JFileChooser.APPROVE_OPTION) {Config.setRecentDirectory(""recentSaveForWebDirectory"", saveForWebChooser.getCurrentDirectory().getAbsolutePath());File pathFile = saveForWebChooser.getSelectedFile().getParentFile();String name = saveForWebChooser.getSelectedFile().getName();if (!name.toLowerCase().endsWith("".html"") && name.indexOf('.') == -1) {name = name + "".html"";}String resource = MIDletClassLoader.getClassResourceName(this.getClass().getName());URL url = this.getClass().getClassLoader().getResource(resource);String path = url.getPath();int prefix = path.indexOf(':');String mainJarFileName = path.substring(prefix + 1, path.length() - resource.length());File appletJarDir = new File(new File(mainJarFileName).getParent(), ""lib"");File appletJarFile = new File(appletJarDir, ""microemu-javase-applet.jar"");if (!appletJarFile.exists()) {appletJarFile = null;}if (appletJarFile == null) {}if (appletJarFile == null) {ExtensionFileFilter fileFilter = new ExtensionFileFilter(""JAR packages"");fileFilter.addExtension(""jar"");JFileChooser appletChooser = new JFileChooser();appletChooser.setFileFilter(fileFilter);appletChooser.setDialogTitle(""Select MicroEmulator applet jar package..."");appletChooser.setCurrentDirectory(new File(Config.getRecentDirectory(""recentAppletJarDirectory"")));if (appletChooser.showOpenDialog(Main.this) == JFileChooser.APPROVE_OPTION) {Config.setRecentDirectory(""recentAppletJarDirectory"", appletChooser.getCurrentDirectory().getAbsolutePath());appletJarFile = appletChooser.getSelectedFile();} else {return;}}JadMidletEntry jadMidletEntry;Iterator it = common.jad.getMidletEntries().iterator();if (it.hasNext()) {jadMidletEntry = (JadMidletEntry) it.next();} else {Message.error(""MIDlet Suite has no entries"");return;}String midletInput = common.jad.getJarURL();DeviceEntry deviceInput = selectDevicePanel.getSelectedDeviceEntry();if (deviceInput != null && deviceInput.getDescriptorLocation().equals(DeviceImpl.DEFAULT_LOCATION)) {deviceInput = null;}File htmlOutputFile = new File(pathFile, name);if (!allowOverride(htmlOutputFile)) {return;}File appletPackageOutputFile = new File(pathFile, ""microemu-javase-applet.jar"");if (!allowOverride(appletPackageOutputFile)) {return;}File midletOutputFile = new File(pathFile, midletInput.substring(midletInput.lastIndexOf(""/"") + 1));if (!allowOverride(midletOutputFile)) {return;}File deviceOutputFile = null;String deviceDescriptorLocation = null;if (deviceInput != null) {deviceOutputFile = new File(pathFile, deviceInput.getFileName());if (!allowOverride(deviceOutputFile)) {return;}deviceDescriptorLocation = deviceInput.getDescriptorLocation();}try {AppletProducer.createHtml(htmlOutputFile, (DeviceImpl) DeviceFactory.getDevice(), jadMidletEntry.getClassName(), midletOutputFile, appletPackageOutputFile, deviceOutputFile);AppletProducer.createMidlet(new URL(midletInput), midletOutputFile);IOUtils.copyFile(appletJarFile, appletPackageOutputFile);if (deviceInput != null) {IOUtils.copyFile(new File(Config.getConfigPath(), deviceInput.getFileName()), deviceOutputFile);}} catch (IOException ex) {Logger.error(ex);}}}private void copyFileTo(File destination) throws IOException {logger.fine(""Copying from "" + destination + ""..."");FileChannel srcChannel = new FileInputStream(getAbsolutePath()).getChannel();logger.fine(""...got source channel "" + srcChannel + ""..."");FileChannel destChannel = new FileOutputStream(new File(destination.getAbsolutePath())).getChannel();logger.fine(""...got destination channel "" + destChannel + ""..."");logger.fine(""...Got channels..."");destChannel.transferFrom(srcChannel, 0, srcChannel.size());logger.fine(""...transferred."");srcChannel.close();destChannel.close();}private void resourceCopy(String resource, IProject project, String target, IProgressMonitor monitor, Map<String, String> replacement, String charset) throws URISyntaxException, IOException {IFile targetFile = project.getFile(target);URL url = bundle.getEntry(resource);InputStream is = null;ByteArrayInputStream bais = null;try {is = FileLocator.toFileURL(url).openStream();int len = is.available();byte[] buf = new byte[len];is.read(buf);String str = new String(buf, charset);for (String toRepl : replacement.keySet()) {str = str.replaceAll(toRepl, replacement.get(toRepl));}bais = new ByteArrayInputStream(str.getBytes(""UTF-8""));if (targetFile.exists()) {targetFile.setContents(bais, true, false, monitor);} else {targetFile.create(bais, true, monitor);}} catch (Exception e) {throw new IOException(e);} finally {if (bais != null) {bais.close();}if (is != null) {is.close();}}}private void resourceDirectoryCopy(String resource, IProject project, String target, IProgressMonitor monitor) throws URISyntaxException, IOException, CoreException {if (!target.endsWith(""/"")) {target += ""/"";}String res = resource;if (!res.endsWith(""/"")) ;{res += ""/"";}Enumeration<URL> it = bundle.findEntries(resource, ""*"", false);while (it.hasMoreElements()) {URL url = it.nextElement();File f = new File(FileLocator.toFileURL(url).toURI());String fName = f.getName();boolean skip = false;for (String skiper : skipList) {if (fName.equals(skiper)) {skip = true;break;}}if (skip) {continue;}String targetName = target + fName;if (f.isDirectory()) {IFolder folder = project.getFolder(targetName);if (!folder.exists()) {folder.create(true, true, monitor);}resourceDirectoryCopy(res + f.getName(), project, targetName, monitor);} else if (f.isFile()) {IFile targetFile = project.getFile(targetName);InputStream is = null;try {is = url.openStream();if (targetFile.exists()) {targetFile.setContents(is, true, false, monitor);} else {targetFile.create(is, true, monitor);}} catch (Exception e) {throw new IOException(e);} finally {if (is != null) {is.close();}}}}}public void sendMail() throws Exception {try {if (param.length > 0) {System.setProperty(""mail.host"", param[0].trim());URL url = new URL(""mailto:"" + param[1].trim());URLConnection conn = url.openConnection();PrintWriter out = new PrintWriter(conn.getOutputStream(), true);out.print(""To:"" + param[1].trim() + ""\n"");out.print(""Subject: "" + param[2] + ""\n"");out.print(""MIME-Version: 1.0\n"");out.print(""Content-Type: multipart/mixed; boundary=\""tcppop000\""\n\n"");out.print(""--tcppop000\n"");out.print(""Content-Type: text/plain\n"");out.print(""Content-Transfer-Encoding: 7bit\n\n\n"");out.print(param[3] + ""\n\n\n"");out.print(""--tcppop000\n"");String filename = param[4].trim();int sep = filename.lastIndexOf(File.separator);if (sep > 0) {filename = filename.substring(sep + 1, filename.length());}out.print(""Content-Type: text/html; name=\"""" + filename + ""\""\n"");out.print(""Content-Transfer-Encoding: binary\n"");out.print(""Content-Disposition: attachment; filename=\"""" + filename + ""\""\n\n"");System.out.println(""FOR ATTACHMENT Content-Transfer-Encoding: binary "");RandomAccessFile file = new RandomAccessFile(param[4].trim(), ""r"");byte[] buffer = new byte[(int) file.length()];file.readFully(buffer);file.close();String fileContent = new String(buffer);out.print(fileContent);out.print(""\n"");out.print(""--tcppop000--"");out.close();} else {}} catch (MalformedURLException e) {throw e;} catch (IOException e) {throw e;}}public ObservationResult[] call(String url, String servicename, String srsname, String version, String offering, String observed_property, String responseFormat) {System.out.println(""GetObservationBasic.call url "" + url);URL service = null;URLConnection connection = null;ArrayList<ObservationResult> obsList = new ArrayList<ObservationResult>();boolean isDataArrayRead = false;try {service = new URL(url);connection = service.openConnection();} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}connection.setDoOutput(true);connection.setDoInput(true);connection.setUseCaches(false);connection.setRequestProperty(""Content-Type"", ""application/x-www-form-urlencoded"");try {DataOutputStream out = new DataOutputStream(connection.getOutputStream());GetObservationDocument getobDoc = GetObservationDocument.Factory.newInstance();GetObservation getob = getobDoc.addNewGetObservation();getob.setService(servicename);getob.setVersion(version);getob.setSrsName(srsname);getob.setOffering(offering);getob.setObservedPropertyArray(new String[] { observed_property });getob.setResponseFormat(responseFormat);String request = URLEncoder.encode(getobDoc.xmlText(), ""UTF-8"");out.writeBytes(request);out.flush();out.close();} catch (UnsupportedEncodingException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}try {URL observation_url = new URL(""file:///E:/Temp/Observation.xml"");URLConnection urlc = observation_url.openConnection();urlc.connect();InputStream observation_url_is = urlc.getInputStream();ObservationCollectionDocument obsCollDoc = ObservationCollectionDocument.Factory.parse(observation_url_is);ObservationCollectionType obsColl = obsCollDoc.getObservationCollection();ObservationPropertyType[] aObsPropType = obsColl.getMemberArray();for (ObservationPropertyType observationPropertyType : aObsPropType) {ObservationType observation = observationPropertyType.getObservation();if (observation != null) {System.out.println(""observation "" + observation.getClass().getName());ObservationResult obsResult = new ObservationResult();if (observation instanceof GeometryObservationTypeImpl) {GeometryObservationTypeImpl geometryObservation = (GeometryObservationTypeImpl) observation;TimeObjectPropertyType samplingTime = geometryObservation.getSamplingTime();TimeInstantTypeImpl timeInstant = (TimeInstantTypeImpl) samplingTime.getTimeObject();TimePositionType timePosition = timeInstant.getTimePosition();String time = (String) timePosition.getObjectValue();StringTokenizer date_st;String day = new StringTokenizer(time, ""T"").nextToken();SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd"");Date d = sdf.parse(day);String timetemp = null;date_st = new StringTokenizer(time, ""T"");while (date_st.hasMoreElements()) timetemp = date_st.nextToken();sdf = new SimpleDateFormat(""HH:mm:ss"");Date ti = sdf.parse(timetemp.substring(0, timetemp.lastIndexOf(':') + 2));d.setHours(ti.getHours());d.setMinutes(ti.getMinutes());d.setSeconds(ti.getSeconds());obsResult.setDatetime(d);String textValue = ""null"";FeaturePropertyType featureOfInterest = (FeaturePropertyType) geometryObservation.getFeatureOfInterest();Node fnode = featureOfInterest.getDomNode();NodeList childNodes = fnode.getChildNodes();for (int j = 0; j < childNodes.getLength(); j++) {Node cnode = childNodes.item(j);if (cnode.getNodeName().equals(""n52:movingObject"")) {NamedNodeMap att = cnode.getAttributes();Node id = att.getNamedItem(""gml:id"");textValue = id.getNodeValue();obsResult.setTextValue(textValue);obsResult.setIsTextValue(true);}}XmlObject result = geometryObservation.getResult();if (result instanceof GeometryPropertyTypeImpl) {GeometryPropertyTypeImpl geometryPropertyType = (GeometryPropertyTypeImpl) result;AbstractGeometryType geometry = geometryPropertyType.getGeometry();String srsName = geometry.getSrsName();StringTokenizer st = new StringTokenizer(srsName, "":"");String epsg = null;while (st.hasMoreElements()) epsg = st.nextToken();int sri = Integer.parseInt(epsg);if (geometry instanceof PointTypeImpl) {PointTypeImpl point = (PointTypeImpl) geometry;Node node = point.getDomNode();PointDocument pointDocument = PointDocument.Factory.parse(node);PointType point2 = pointDocument.getPoint();XmlCursor cursor = point.newCursor();cursor.toFirstChild();CoordinatesDocument coordinatesDocument = CoordinatesDocument.Factory.parse(cursor.xmlText());CoordinatesType coords = coordinatesDocument.getCoordinates();StringTokenizer tok = new StringTokenizer(coords.getStringValue(), "" ,;"", false);double x = Double.parseDouble(tok.nextToken());double y = Double.parseDouble(tok.nextToken());double z = 0;if (tok.hasMoreTokens()) {z = Double.parseDouble(tok.nextToken());}x += 207561;y += 3318814;z += 20;Point3d center = new Point3d(x, y, z);obsResult.setCenter(center);GeometryFactory fact = new GeometryFactory();Coordinate coordinate = new Coordinate(x, y, z);Geometry g1 = fact.createPoint(coordinate);g1.setSRID(sri);obsResult.setGeometry(g1);String href = observation.getProcedure().getHref();obsResult.setProcedure(href);obsList.add(obsResult);}}}}}observation_url_is.close();} catch (IOException e) {e.printStackTrace();} catch (XmlException e) {e.printStackTrace();} catch (Exception e) {e.printStackTrace();}ObservationResult[] ar = new ObservationResult[obsList.size()];return obsList.toArray(ar);}private void downloadDirectory() throws SocketException, IOException {FTPClient client = new FTPClient();client.connect(source.getHost());client.login(username, password);FTPFile[] files = client.listFiles(source.getPath());for (FTPFile file : files) {if (!file.isDirectory()) {long file_size = file.getSize() / 1024;Calendar cal = file.getTimestamp();URL source_file = new File(source + file.getName()).toURI().toURL();DownloadQueue.add(new Download(projectName, parser.getParserID(), source_file, file_size, cal, target + file.getName()));}}}"	5
"public static String generateSig(Map<String, String> params, String secret) {SortedSet<String> keys = new TreeSet<String>(params.keySet());keys.remove(FacebookParam.SIGNATURE.toString());String str = """";for (String key : keys) {str += key + ""="" + params.get(key);}str += secret;try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(str.getBytes(""UTF-8""));StringBuilder result = new StringBuilder();for (byte b : md.digest()) {result.append(Integer.toHexString((b & 0xf0) >>> 4));result.append(Integer.toHexString(b & 0x0f));}return result.toString();} catch (Exception e) {throw new RuntimeException(e);}}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}private ArrayList execAtParentServer(ArrayList paramList) throws Exception {ArrayList outputList = null;String message = """";try {HashMap serverUrlMap = InitXml.getInstance().getServerMap();Iterator it = serverUrlMap.keySet().iterator();while (it.hasNext()) {String server = (String) it.next();String serverUrl = (String) serverUrlMap.get(server);serverUrl = serverUrl + Primer3Manager.servletName;URL url = new URL(serverUrl);URLConnection uc = url.openConnection();uc.setDoOutput(true);OutputStream os = uc.getOutputStream();StringBuffer buf = new StringBuffer();buf.append(""actionType=designparent"");for (int i = 0; i < paramList.size(); i++) {Primer3Param param = (Primer3Param) paramList.get(i);if (i == 0) {buf.append(""&sequence="" + param.getSequence());buf.append(""&upstream_size"" + upstreamSize);buf.append(""&downstreamSize"" + downstreamSize);buf.append(""&MARGIN_LENGTH="" + marginLength);buf.append(""&OVERLAP_LENGTH="" + overlapLength);buf.append(""&MUST_XLATE_PRODUCT_MIN_SIZE="" + param.getPrimerProductMinSize());buf.append(""&MUST_XLATE_PRODUCT_MAX_SIZE="" + param.getPrimerProductMaxSize());buf.append(""&PRIMER_PRODUCT_OPT_SIZE="" + param.getPrimerProductOptSize());buf.append(""&PRIMER_MAX_END_STABILITY="" + param.getPrimerMaxEndStability());buf.append(""&PRIMER_MAX_MISPRIMING="" + param.getPrimerMaxMispriming());buf.append(""&PRIMER_PAIR_MAX_MISPRIMING="" + param.getPrimerPairMaxMispriming());buf.append(""&PRIMER_MIN_SIZE="" + param.getPrimerMinSize());buf.append(""&PRIMER_OPT_SIZE="" + param.getPrimerOptSize());buf.append(""&PRIMER_MAX_SIZE="" + param.getPrimerMaxSize());buf.append(""&PRIMER_MIN_TM="" + param.getPrimerMinTm());buf.append(""&PRIMER_OPT_TM="" + param.getPrimerOptTm());buf.append(""&PRIMER_MAX_TM="" + param.getPrimerMaxTm());buf.append(""&PRIMER_MAX_DIFF_TM="" + param.getPrimerMaxDiffTm());buf.append(""&PRIMER_MIN_GC="" + param.getPrimerMinGc());buf.append(""&PRIMER_OPT_GC_PERCENT="" + param.getPrimerOptGcPercent());buf.append(""&PRIMER_MAX_GC="" + param.getPrimerMaxGc());buf.append(""&PRIMER_SELF_ANY="" + param.getPrimerSelfAny());buf.append(""&PRIMER_SELF_END="" + param.getPrimerSelfEnd());buf.append(""&PRIMER_NUM_NS_ACCEPTED="" + param.getPrimerNumNsAccepted());buf.append(""&PRIMER_MAX_POLY_X="" + param.getPrimerMaxPolyX());buf.append(""&PRIMER_GC_CLAMP="" + param.getPrimerGcClamp());}buf.append(""&target="" + param.getPrimerSequenceId() + "","" + (param.getTarget())[0] + "","" + (param.getTarget())[1]);}PrintStream ps = new PrintStream(os);ps.print(buf.toString());ps.close();ObjectInputStream ois = new ObjectInputStream(uc.getInputStream());outputList = (ArrayList) ois.readObject();ois.close();}} catch (IOException e1) {e1.printStackTrace();}if ((outputList == null || outputList.size() == 0) && message != null && message.length() > 0) {throw new Exception(message);}return outputList;}public DownloadThread call() throws UpdateModException {try {Thread.currentThread().setName(""Download - "" + modName);if (url != null) {URL urls = new URL(this.url);URLConnection connection = urls.openConnection();connection.setConnectTimeout(7500);InputStream is = urls.openStream();String filename = null;if (path == null || path.isEmpty()) {String pattern = ""[^a-z,A-Z,0-9, ,.]"";filename = this.url.substring(this.url.lastIndexOf(""/"") + 1).replace(""%20"", "" "");filename = filename.replaceAll(pattern, """");} else {filename = path;}FileOutputStream fos = null;file = new File(System.getProperty(""java.io.tmpdir"") + File.separator + filename);fos = new FileOutputStream(file, false);FileUtils.copyInputStream(is, fos);is.close();fos.flush();fos.close();}} catch (MalformedURLException ex) {System.out.println(ex);file = null;throw new UpdateModException(null, ex);} catch (ConnectException ex) {System.out.println(ex);file = null;throw new UpdateModException(null, ex);} catch (NullPointerException ex) {System.out.println(ex);file = null;throw new UpdateModException(null, ex);} catch (InvalidParameterException ex) {System.out.println(ex);file = null;throw new UpdateModException(null, ex);} catch (FileNotFoundException ex) {System.out.println(ex);file = null;throw new UpdateModException(null, ex);} catch (IOException ex) {System.out.println(ex);file = null;throw new UpdateModException(null, ex);}return this;}@SuppressWarnings(""static-access"")@Overrideprotected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException {PrintWriter writer = null;InputStream is = null;FileOutputStream fos = null;try {writer = response.getWriter();} catch (IOException ex) {log(OctetStreamReader.class.getName() + ""has thrown an exception: "" + ex.getMessage());}String filename = request.getHeader(""X-File-Name"");try {filename = URLDecoder.decode(filename, ""utf-8"");} catch (UnsupportedEncodingException e) {e.printStackTrace();}try {is = request.getInputStream();File newFile = new File(realPath + filename);if (!newFile.exists()) {fos = new FileOutputStream(new File(realPath + filename));IOUtils.copy(is, fos);response.setStatus(response.SC_OK);writer.print(""{success: true,detailMsg}"");} else {response.setStatus(response.SC_INTERNAL_SERVER_ERROR);writer.print(""{success: false,detailMsg:'文件已经存在！请重命名后上传！'}"");log(OctetStreamReader.class.getName() + ""has thrown an exception: "" + filename + "" has existed!"");}} catch (FileNotFoundException ex) {response.setStatus(response.SC_INTERNAL_SERVER_ERROR);writer.print(""{success: false}"");log(OctetStreamReader.class.getName() + ""has thrown an exception: "" + ex.getMessage());} catch (IOException ex) {response.setStatus(response.SC_INTERNAL_SERVER_ERROR);writer.print(""{success: false}"");log(OctetStreamReader.class.getName() + ""has thrown an exception: "" + ex.getMessage());} finally {try {fos.close();is.close();} catch (IOException ignored) {}}writer.flush();writer.close();}@Overridepublic void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {response.setContentType(""text/html"");PrintWriter out = response.getWriter();int i;String dicomURL = request.getParameter(""datasetURL"");String contentType = request.getParameter(""contentType"");String studyUID = request.getParameter(""studyUID"");String seriesUID = request.getParameter(""seriesUID"");String objectUID = request.getParameter(""objectUID"");dicomURL += ""&contentType="" + contentType + ""&studyUID="" + studyUID + ""&seriesUID="" + seriesUID + ""&objectUID="" + objectUID + ""&transferSyntax=1.2.840.10008.1.2.1"";dicomURL = dicomURL.replace(""+"", ""%2B"");InputStream is = null;DataInputStream dis = null;try {URL url = new URL(dicomURL);is = url.openStream();dis = new DataInputStream(is);for (i = 0; i < dicomData.length; i++) dicomData[i] = dis.readUnsignedByte();String windowCenter = getElementValue(""00281050"");String windowWidth = getElementValue(""00281051"");request.getSession(true).setAttribute(WINDOW_CENTER_PARAM, windowCenter == null ? null : windowCenter.trim());request.getSession(true).setAttribute(WINDOW_WIDTH_PARAM, windowWidth == null ? null : windowWidth.trim());dis.skipBytes(50000000);is.close();dis.close();out.println(""Success"");out.close();} catch (Exception e) {log.error(""Unable to read and send the DICOM dataset page"", e);}}protected static Parser buildParser(URL url) throws IOException, ParserException {Parser parser;URLConnection connection = openConnection(url);if (!(connection instanceof HttpURLConnection) || ((HttpURLConnection) connection).getResponseCode() == 200) {parser = new Parser(connection);} else {parser = null;}return parser;}private String load(URL url) {BufferedReader r = null;try {r = new BufferedReader(new InputStreamReader(url.openStream()));StringBuffer buf = new StringBuffer();while (r.ready()) {buf.append(r.readLine()).append('\n');}r.close();return buf.toString();} catch (IOException e) {e.printStackTrace();return null;}}public InputStream getDaoConfig(String connectionType) throws IOException {URL url = null;if (connectionType.equals(SQL.ORACLE)) {url = com.apelon.dts.db.admin.config.MigrateConfig.class.getResource(""oracle.xml"");} else if (connectionType.equals(SQL.SQL2K)) {url = com.apelon.dts.db.admin.config.MigrateConfig.class.getResource(""sql2k.xml"");}return url.openStream();}public static void test2() throws Exception {int keySize = 1024;int dBlockSize = keySize / 8;int eBlockSize = dBlockSize - 8 - 3;CertAndKeyGen certAndKeyGen = new CertAndKeyGen(""RSA"", ""MD5WithRSA"");certAndKeyGen.generate(keySize);PublicKey publicKey = certAndKeyGen.getPublicKey();PrivateKey privateKey = certAndKeyGen.getPrivateKey();Cipher cipher1 = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");cipher1.init(Cipher.ENCRYPT_MODE, publicKey);String fileA = ""C:/temp/a.txt"";String fileB = ""C:/temp/b.txt"";String fileC = ""C:/temp/c.txt"";FileInputStream fis = new FileInputStream(fileA);FileOutputStream fos = new FileOutputStream(fileB, false);CipherOutputStream eos = new CipherOutputStream(fos, cipher1, eBlockSize);byte[] b = new byte[128];int i = fis.read(b);while (i != -1) {eos.write(b, 0, i);i = fis.read(b);}eos.flush();eos.close();fos.close();Cipher cipher2 = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");cipher2.init(Cipher.DECRYPT_MODE, privateKey);fis = new FileInputStream(fileB);CipherInputStream cis = new CipherInputStream(fis, cipher2, dBlockSize);FileOutputStream decodedFile = new FileOutputStream(fileC, false);int read = -1;while ((read = cis.read()) > -1) {decodedFile.write(read);}decodedFile.close();fis.close();}"	5
"public static String md5(String s) {try {MessageDigest digest = MessageDigest.getInstance(""MD5"");digest.update(s.getBytes());byte[] md5sum = digest.digest();BigInteger bigInt = new BigInteger(1, md5sum);String output = bigInt.toString(16);return prepad(output, 32, '0');} catch (NoSuchAlgorithmException e) {System.err.println(""No MD5 algorithm. we are sunk."");return s;}}public String transformByMD5(String password) throws XSServiceException {MessageDigest md5;byte[] output;StringBuffer bufferPass;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {logger.warn(""DataAccessException thrown while getting MD5 algorithm:"" + e.getMessage(), e);throw new XSServiceException(""Database error while saving user"");}md5.reset();md5.update(password.getBytes());output = md5.digest();bufferPass = new StringBuffer();for (byte b : output) {bufferPass.append(Integer.toHexString(0xff & b).length() == 1 ? ""0"" + Integer.toHexString(0xff & b) : Integer.toHexString(0xff & b));}return bufferPass.toString();}@Overridepublic String encryptPassword(String password) throws JetspeedSecurityException {if (securePasswords == false) {return password;}if (password == null) {return null;}try {if (""SHA-512"".equals(passwordsAlgorithm)) {password = password + JetspeedResources.getString(""aipo.encrypt_key"");MessageDigest md = MessageDigest.getInstance(passwordsAlgorithm);md.reset();md.update(password.getBytes());byte[] hash = md.digest();StringBuffer sb = new StringBuffer();for (int i = 0; i < hash.length; i++) {sb.append(Integer.toHexString((hash[i] >> 4) & 0x0F));sb.append(Integer.toHexString(hash[i] & 0x0F));}return sb.toString();} else {MessageDigest md = MessageDigest.getInstance(passwordsAlgorithm);byte[] digest = md.digest(password.getBytes(ALEipConstants.DEF_CONTENT_ENCODING));ByteArrayOutputStream bas = new ByteArrayOutputStream(digest.length + digest.length / 3 + 1);OutputStream encodedStream = MimeUtility.encode(bas, ""base64"");encodedStream.write(digest);encodedStream.flush();encodedStream.close();return bas.toString();}} catch (Exception e) {logger.error(""Unable to encrypt password."" + e.getMessage(), e);return null;}}public static String cryptografar(String senha) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(senha.getBytes());BigInteger hash = new BigInteger(1, md.digest());senha = hash.toString(16);} catch (NoSuchAlgorithmException ns) {ns.printStackTrace();}return senha;}public Texture loadTexture(String file) throws IOException {URL imageUrl = urlFactory.makeUrl(file);Texture cached = textureLoader.getImageFromCache(imageUrl);if (cached != null) return cached;Image image;if (zip) {ZipInputStream zis = new ZipInputStream(url.openStream());ZipEntry entry;boolean found = false;while ((entry = zis.getNextEntry()) != null) {if (file.equals(entry.getName())) {found = true;break;}}if (!found) {throw new IOException(""Cannot find file \"""" + file + ""\""."");}int extIndex = file.lastIndexOf('.');if (extIndex == -1) {throw new IOException(""Cannot parse file extension."");}String fileExt = file.substring(extIndex);image = TextureManager.loadImage(fileExt, zis, true);} else {image = TextureManager.loadImage(imageUrl, true);}return textureLoader.loadTexture(imageUrl, image);}private static String getMD5(String phrase) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(phrase.getBytes());return asHexString(md.digest());} catch (Exception e) {}return """";}private File copyFile(File currFile) throws IOException {String relativePath = currFile.getPath().substring(_distDir.length() + 1);File targetFile = new File(_installDir, relativePath);if (targetFile.exists()) {log(targetFile.getPath() + "" already exists, skipping libcopy"", Project.MSG_INFO);return targetFile;} else {if (!targetFile.getParentFile().exists()) {if (!targetFile.getParentFile().mkdirs()) {log(""Unable to create target dir tree for "" + targetFile.getPath(), Project.MSG_ERR);throw new IOException();}}}FileInputStream fis = null;FileOutputStream fos = null;try {fis = new FileInputStream(currFile);} catch (FileNotFoundException e) {log(""Library from plugin manifest appears to have been deleted: "" + currFile.getPath(), Project.MSG_ERR);throw new IOException();}try {fos = new FileOutputStream(targetFile);} catch (FileNotFoundException e) {log(""Unable to create target file to write to: "" + targetFile.getPath(), Project.MSG_ERR);throw new IOException();}BufferedInputStream bis = new BufferedInputStream(fis);BufferedOutputStream bos = new BufferedOutputStream(fos);int read = 0;byte[] buff = new byte[65536];boolean success = true;while (read != -1 && success) {try {read = bis.read(buff, 0, 65536);} catch (IOException e) {log(""Read error whilst reading from: "" + currFile.getPath(), Project.MSG_ERR);success = false;}if (read != -1 && success) {try {bos.write(buff, 0, read);} catch (IOException e) {log(""Write error whilst writing to: "" + targetFile.getPath(), Project.MSG_ERR);success = false;}}}try {bis.close();} catch (IOException e) {}try {bos.close();} catch (IOException e) {}try {fis.close();} catch (IOException e) {}try {fos.close();} catch (IOException e) {}if (!success) {throw new IOException();}return targetFile;}public static void copier(final File pFichierSource, final File pFichierDest) {FileChannel vIn = null;FileChannel vOut = null;try {vIn = new FileInputStream(pFichierSource).getChannel();vOut = new FileOutputStream(pFichierDest).getChannel();vIn.transferTo(0, vIn.size(), vOut);} catch (Exception e) {e.printStackTrace();} finally {if (vIn != null) {try {vIn.close();} catch (IOException e) {}}if (vOut != null) {try {vOut.close();} catch (IOException e) {}}}}public void initialize(IProgressMonitor monitor) throws JETException {IProgressMonitor progressMonitor = monitor;progressMonitor.beginTask("""", 10);progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_GeneratingJETEmitterFor_message"", new Object[] { getTemplateURI() }));final IWorkspace workspace = ResourcesPlugin.getWorkspace();IJavaModel javaModel = JavaCore.create(ResourcesPlugin.getWorkspace().getRoot());try {final JETCompiler jetCompiler = getTemplateURIPath() == null ? new MyBaseJETCompiler(getTemplateURI(), getEncoding(), getClassLoader()) : new MyBaseJETCompiler(getTemplateURIPath(), getTemplateURI(), getEncoding(), getClassLoader());progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETParsing_message"", new Object[] { jetCompiler.getResolvedTemplateURI() }));jetCompiler.parse();progressMonitor.worked(1);String packageName = jetCompiler.getSkeleton().getPackageName();if (getTemplateURIPath() != null) {URI templateURI = URI.createURI(getTemplateURIPath()[0]);URLClassLoader theClassLoader = null;if (templateURI.isPlatformResource()) {IProject project = workspace.getRoot().getProject(templateURI.segment(1));if (JETNature.getRuntime(project) != null) {List<URL> urls = new ArrayList<URL>();IJavaProject javaProject = JavaCore.create(project);urls.add(new File(project.getLocation() + ""/"" + javaProject.getOutputLocation().removeFirstSegments(1) + ""/"").toURI().toURL());for (IClasspathEntry classpathEntry : javaProject.getResolvedClasspath(true)) {if (classpathEntry.getEntryKind() == IClasspathEntry.CPE_PROJECT) {IPath projectPath = classpathEntry.getPath();IProject otherProject = workspace.getRoot().getProject(projectPath.segment(0));IJavaProject otherJavaProject = JavaCore.create(otherProject);urls.add(new File(otherProject.getLocation() + ""/"" + otherJavaProject.getOutputLocation().removeFirstSegments(1) + ""/"").toURI().toURL());}}theClassLoader = AccessController.doPrivileged(new GetURLClassLoaderSuperAction(urls));}} else if (templateURI.isPlatformPlugin()) {final Bundle bundle = Platform.getBundle(templateURI.segment(1));if (bundle != null) {theClassLoader = AccessController.doPrivileged(new GetURLClassLoaderBundleAction(bundle));}}if (theClassLoader != null) {String className = (packageName.length() == 0 ? """" : packageName + ""."") + jetCompiler.getSkeleton().getClassName();if (className.endsWith(""_"")) {className = className.substring(0, className.length() - 1);}try {Class<?> theClass = theClassLoader.loadClass(className);Class<?> theOtherClass = null;try {theOtherClass = getClassLoader().loadClass(className);} catch (ClassNotFoundException exception) {}if (theClass != theOtherClass) {String methodName = jetCompiler.getSkeleton().getMethodName();Method[] methods = theClass.getDeclaredMethods();for (int i = 0; i < methods.length; ++i) {if (methods[i].getName().equals(methodName)) {jetEmitter.setMethod(methods[i]);break;}}return;}} catch (ClassNotFoundException exception) {}}}ByteArrayOutputStream outputStream = new ByteArrayOutputStream();jetCompiler.generate(outputStream);final InputStream contents = new ByteArrayInputStream(outputStream.toByteArray());if (!javaModel.isOpen()) {javaModel.open(new SubProgressMonitor(progressMonitor, 1));} else {progressMonitor.worked(1);}final IProject project = workspace.getRoot().getProject(jetEmitter.getProjectName());progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETPreparingProject_message"", new Object[] { project.getName() }));IJavaProject javaProject;if (!project.exists()) {progressMonitor.subTask(""JET creating project "" + project.getName());project.create(new SubProgressMonitor(progressMonitor, 1));progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETCreatingProject_message"", new Object[] { project.getName() }));IProjectDescription description = workspace.newProjectDescription(project.getName());description.setNatureIds(new String[] { JavaCore.NATURE_ID });description.setLocation(null);project.open(new SubProgressMonitor(progressMonitor, 1));project.setDescription(description, new SubProgressMonitor(progressMonitor, 1));} else {project.open(new SubProgressMonitor(progressMonitor, 5));IProjectDescription description = project.getDescription();description.setNatureIds(new String[] { JavaCore.NATURE_ID });project.setDescription(description, new SubProgressMonitor(progressMonitor, 1));}javaProject = JavaCore.create(project);List<IClasspathEntry> classpath = new UniqueEList<IClasspathEntry>(Arrays.asList(javaProject.getRawClasspath()));for (int i = 0, len = classpath.size(); i < len; i++) {IClasspathEntry entry = classpath.get(i);if (entry.getEntryKind() == IClasspathEntry.CPE_SOURCE && (""/"" + project.getName()).equals(entry.getPath().toString())) {classpath.remove(i);}}progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETInitializingProject_message"", new Object[] { project.getName() }));IClasspathEntry classpathEntry = JavaCore.newSourceEntry(new Path(""/"" + project.getName() + ""/src""));IClasspathEntry jreClasspathEntry = JavaCore.newContainerEntry(new Path(""org.eclipse.jdt.launching.JRE_CONTAINER""));classpath.add(classpathEntry);classpath.add(jreClasspathEntry);classpath.addAll(getClassPathEntries());IFolder sourceFolder = project.getFolder(new Path(""src""));if (!sourceFolder.exists()) {sourceFolder.create(false, true, new SubProgressMonitor(progressMonitor, 1));}IFolder runtimeFolder = project.getFolder(new Path(""bin""));if (!runtimeFolder.exists()) {runtimeFolder.create(false, true, new SubProgressMonitor(progressMonitor, 1));}javaProject.setRawClasspath(classpath.toArray(new IClasspathEntry[classpath.size()]), new SubProgressMonitor(progressMonitor, 1));javaProject.setOutputLocation(new Path(""/"" + project.getName() + ""/bin""), new SubProgressMonitor(progressMonitor, 1));javaProject.close();progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETOpeningJavaProject_message"", new Object[] { project.getName() }));javaProject.open(new SubProgressMonitor(progressMonitor, 1));IPackageFragmentRoot[] packageFragmentRoots = javaProject.getPackageFragmentRoots();IPackageFragmentRoot sourcePackageFragmentRoot = null;for (int j = 0; j < packageFragmentRoots.length; ++j) {IPackageFragmentRoot packageFragmentRoot = packageFragmentRoots[j];if (packageFragmentRoot.getKind() == IPackageFragmentRoot.K_SOURCE) {sourcePackageFragmentRoot = packageFragmentRoot;break;}}StringTokenizer stringTokenizer = new StringTokenizer(packageName, ""."");IProgressMonitor subProgressMonitor = new SubProgressMonitor(progressMonitor, 1);subProgressMonitor.beginTask("""", stringTokenizer.countTokens() + 4);subProgressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_CreateTargetFile_message""));IContainer sourceContainer = sourcePackageFragmentRoot == null ? project : (IContainer) sourcePackageFragmentRoot.getCorrespondingResource();while (stringTokenizer.hasMoreElements()) {String folderName = stringTokenizer.nextToken();sourceContainer = sourceContainer.getFolder(new Path(folderName));if (!sourceContainer.exists()) {((IFolder) sourceContainer).create(false, true, new SubProgressMonitor(subProgressMonitor, 1));}}IFile targetFile = sourceContainer.getFile(new Path(jetCompiler.getSkeleton().getClassName() + "".java""));if (!targetFile.exists()) {subProgressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETCreating_message"", new Object[] { targetFile.getFullPath() }));targetFile.create(contents, true, new SubProgressMonitor(subProgressMonitor, 1));} else {subProgressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETUpdating_message"", new Object[] { targetFile.getFullPath() }));targetFile.setContents(contents, true, true, new SubProgressMonitor(subProgressMonitor, 1));}subProgressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETBuilding_message"", new Object[] { project.getName() }));project.build(IncrementalProjectBuilder.INCREMENTAL_BUILD, new SubProgressMonitor(subProgressMonitor, 1));boolean errors = hasErrors(subProgressMonitor, targetFile);if (!errors) {subProgressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETLoadingClass_message"", new Object[] { jetCompiler.getSkeleton().getClassName() + "".class"" }));List<URL> urls = new ArrayList<URL>();urls.add(new File(project.getLocation() + ""/"" + javaProject.getOutputLocation().removeFirstSegments(1) + ""/"").toURI().toURL());final Set<Bundle> bundles = new HashSet<Bundle>();LOOP: for (IClasspathEntry jetEmitterClasspathEntry : jetEmitter.getClasspathEntries()) {IClasspathAttribute[] classpathAttributes = jetEmitterClasspathEntry.getExtraAttributes();if (classpathAttributes != null) {for (IClasspathAttribute classpathAttribute : classpathAttributes) {if (classpathAttribute.getName().equals(CodeGenUtil.EclipseUtil.PLUGIN_ID_CLASSPATH_ATTRIBUTE_NAME)) {Bundle bundle = Platform.getBundle(classpathAttribute.getValue());if (bundle != null) {bundles.add(bundle);continue LOOP;}}}}urls.add(new URL(""platform:/resource"" + jetEmitterClasspathEntry.getPath() + ""/""));}URLClassLoader theClassLoader = AccessController.doPrivileged(new GetURLClassLoaderSuperBundlesAction(bundles, urls));Class<?> theClass = theClassLoader.loadClass((packageName.length() == 0 ? """" : packageName + ""."") + jetCompiler.getSkeleton().getClassName());String methodName = jetCompiler.getSkeleton().getMethodName();Method[] methods = theClass.getDeclaredMethods();for (int i = 0; i < methods.length; ++i) {if (methods[i].getName().equals(methodName)) {jetEmitter.setMethod(methods[i]);break;}}}subProgressMonitor.done();} catch (CoreException exception) {throw new JETException(exception);} catch (Exception exception) {throw new JETException(exception);} finally {progressMonitor.done();}}private String signMethod() {String str = API.SHARED_SECRET;Vector<String> v = new Vector<String>(parameters.keySet());Collections.sort(v);for (String key : v) {str += key + parameters.get(key);}MessageDigest m = null;try {m = MessageDigest.getInstance(""MD5"");m.update(str.getBytes(), 0, str.length());return new BigInteger(1, m.digest()).toString(16);} catch (NoSuchAlgorithmException e) {return null;}}"	5
"public String loadURLString(java.net.URL url) {try {BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));StringBuffer buf = new StringBuffer();String s = """";while (br.ready() && s != null) {s = br.readLine();if (s != null) {buf.append(s);buf.append(""\n"");}}return buf.toString();} catch (IOException ex) {return """";} catch (NullPointerException npe) {return """";}}public void actionPerformed(ActionEvent e) {if (e.getActionCommand().equals(""LOAD"")) {JFileChooser chooser = new JFileChooser();chooser.setFileFilter(new JPEGFilter());chooser.setMultiSelectionEnabled(false);if (chooser.showOpenDialog(getTopLevelAncestor()) == JFileChooser.APPROVE_OPTION) {try {File file = chooser.getSelectedFile();BufferedInputStream is = new BufferedInputStream(new FileInputStream(file));ByteArrayOutputStream bos = new ByteArrayOutputStream((int) file.length());int read = is.read();while (read != -1) {bos.write(read);read = is.read();}is.close();_changed = true;setImage(bos.toByteArray());} catch (Exception e1) {_log.error(""actionPerformed(ActionEvent)"", e1);}}} else if (e.getActionCommand().equals(""SAVE"")) {JFileChooser chooser = new JFileChooser();chooser.setFileFilter(new JPEGFilter());chooser.setMultiSelectionEnabled(false);if (_data != null && chooser.showSaveDialog(getTopLevelAncestor()) == JFileChooser.APPROVE_OPTION) {try {File file = chooser.getSelectedFile();BufferedOutputStream os = new BufferedOutputStream(new FileOutputStream(file));os.write(_data);os.flush();os.close();} catch (Exception e1) {_log.error(""actionPerformed(ActionEvent)"", e1);}}} else if (e.getActionCommand().equals(""DELETE"")) {if (_data != null) {int result = JOptionPane.showConfirmDialog(getTopLevelAncestor(), GuiStrings.getString(""message.removeimg""), GuiStrings.getString(""title.confirm""), JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);if (result == JOptionPane.YES_OPTION) {removeImage();_changed = true;}}}}public static String createHash(String password) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(password.getBytes());byte[] digest = md.digest();return toHexString(digest);} catch (NoSuchAlgorithmException nsae) {System.out.println(nsae.getMessage());}return """";}private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {jButton1.setEnabled(false);for (int i = 0; i < max; i++) {Card crd = WLP.getSelectedCard(WLP.jTable1.getSelectedRows()[i]);String s, s2;s = """";s2 = """";try {URL url = new URL(""http://www.m-w.com/dictionary/"" + crd.getWord());BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String str;while ((str = in.readLine()) != null) {s = s + str;}in.close();} catch (MalformedURLException e) {} catch (IOException e) {}Pattern pattern = Pattern.compile(""popWin\\('/cgi-bin/(.+?)'"", Pattern.CASE_INSENSITIVE | Pattern.DOTALL);Matcher matcher = pattern.matcher(s);if (matcher.find()) {String newurl = ""http://m-w.com/cgi-bin/"" + matcher.group(1);try {URL url2 = new URL(newurl);BufferedReader in2 = new BufferedReader(new InputStreamReader(url2.openStream()));String str;while ((str = in2.readLine()) != null) {s2 = s2 + str;}in2.close();} catch (MalformedURLException e) {} catch (IOException e) {}Pattern pattern2 = Pattern.compile(""<A HREF=\""http://(.+?)\"">Click here to listen with your default audio player"", Pattern.CASE_INSENSITIVE | Pattern.DOTALL);Matcher matcher2 = pattern2.matcher(s2);if (matcher2.find()) {getWave(""http://"" + matcher2.group(1), crd.getWord());}int val = jProgressBar1.getValue();val++;jProgressBar1.setValue(val);this.paintAll(this.getGraphics());}}jButton1.setEnabled(true);}private boolean getWave(String url, String Word) {try {File FF = new File(f.getParent() + ""/"" + f.getName() + ""pron"");FF.mkdir();URL url2 = new URL(url);BufferedReader stream = new BufferedReader(new InputStreamReader(url2.openStream()));File Fdel = new File(f.getParent() + ""/"" + f.getName() + ""pron/"" + Word + "".wav"");if (!Fdel.exists()) {FileOutputStream outstream = new FileOutputStream(f.getParent() + ""/"" + f.getName() + ""pron/"" + Word + "".wav"");BufferedWriter bwriter = new BufferedWriter(new OutputStreamWriter(outstream));char[] binput = new char[1024];int len = stream.read(binput, 0, 1024);while (len > 0) {bwriter.write(binput, 0, len);len = stream.read(binput, 0, 1024);}bwriter.close();outstream.close();}stream.close();} catch (Exception e) {System.out.println(e.getMessage());return false;}return true;}private void getGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}private SpequlosResponse executeGet(String targetURL, String urlParameters) {URL url;HttpURLConnection connection = null;boolean succ = false;try {url = new URL(targetURL + ""?"" + urlParameters);connection = (HttpURLConnection) url.openConnection();connection.setRequestMethod(""GET"");connection.setRequestProperty(""Content-Type"", ""application/x-www-form-urlencoded"");connection.setRequestProperty(""Content-Length"", """" + Integer.toString(urlParameters.getBytes().length));connection.setRequestProperty(""Content-Language"", ""en-US"");connection.setUseCaches(false);connection.setDoInput(true);connection.setDoOutput(true);InputStream is = connection.getInputStream();BufferedReader rd = new BufferedReader(new InputStreamReader(is));String line;StringBuffer log = new StringBuffer();ArrayList<String> response = new ArrayList<String>();while ((line = rd.readLine()) != null) {if (line.startsWith(""<div class=\""qos\"">"")) {System.out.println(""here is the line : "" + line);String resp = line.split("">"")[1].split(""<"")[0];System.out.println(""here is the splitted line : "" + resp);if (!resp.startsWith(""None"")) {succ = true;String[] values = resp.split("" "");ArrayList<String> realvalues = new ArrayList<String>();for (String s : values) {realvalues.add(s);}if (realvalues.size() == 5) {realvalues.add(2, realvalues.get(2) + "" "" + realvalues.get(3));realvalues.remove(3);realvalues.remove(3);}for (String n : realvalues) {response.add(n);}}} else {log.append(line);log.append('\r');}}rd.close();SpequlosResponse speqresp = new SpequlosResponse(response, log.toString(), succ);return speqresp;} catch (Exception e) {e.printStackTrace();String log = ""Please check the availability of Spequlos server!<br />"" + ""URL:"" + targetURL + ""<br />"" + ""PARAMETERS:"" + urlParameters + ""<br />"";return new SpequlosResponse(null, log, succ);} finally {if (connection != null) connection.disconnect();}}public static void doVersionCheck(View view) {view.showWaitCursor();try {URL url = new URL(jEdit.getProperty(""version-check.url""));InputStream in = url.openStream();BufferedReader bin = new BufferedReader(new InputStreamReader(in));String line;String develBuild = null;String stableBuild = null;while ((line = bin.readLine()) != null) {if (line.startsWith("".build"")) develBuild = line.substring(6).trim(); else if (line.startsWith("".stablebuild"")) stableBuild = line.substring(12).trim();}bin.close();if (develBuild != null && stableBuild != null) {doVersionCheck(view, stableBuild, develBuild);}} catch (IOException e) {String[] args = { jEdit.getProperty(""version-check.url""), e.toString() };GUIUtilities.error(view, ""read-error"", args);}view.hideWaitCursor();}private static String getDigest(String srcStr, String alg) {Assert.notNull(srcStr);Assert.notNull(alg);try {MessageDigest alga = MessageDigest.getInstance(alg);alga.update(srcStr.getBytes());byte[] digesta = alga.digest();return byte2hex(digesta);} catch (Exception e) {throw new RuntimeException(e);}}public InputStream getPage(String page) throws IOException {URL url = new URL(hattrickServerURL + ""/Common/"" + page);HttpURLConnection huc = (HttpURLConnection) url.openConnection();huc.setRequestProperty(""Cookie"", sessionCookie);return huc.getInputStream();}"	5
"private void foundNewVersion() {updater = new UpdaterView();updater.setLabelText(""Initiating Updater..."");updater.setProgress(0);updater.setLocationRelativeTo(null);updater.setVisible(true);URL pathUrl = ClassLoader.getSystemResource(""img/icon.png"");String path = pathUrl.toString();path = path.substring(4, path.length() - 14);try {file = new File(new URI(path));updaterFile = new File(new URI(path.substring(0, path.length() - 4) + ""Updater.jar""));if (updaterFile.exists()) {updaterFile.delete();}updater.setProgress(25);SwingUtilities.invokeLater(new Runnable() {public void run() {try {FileChannel in = (new FileInputStream(file)).getChannel();FileChannel out = (new FileOutputStream(updaterFile)).getChannel();in.transferTo(0, file.length(), out);updater.setProgress(50);in.close();out.close();} catch (IOException e) {e.printStackTrace();}startUpdater();}});} catch (URISyntaxException e) {e.printStackTrace();JOptionPane.showMessageDialog(null, ""Update error! Could not create Updater. Check folder permission."", ""Error"", JOptionPane.ERROR_MESSAGE);}}public void run() {try {FileChannel in = (new FileInputStream(file)).getChannel();FileChannel out = (new FileOutputStream(updaterFile)).getChannel();in.transferTo(0, file.length(), out);updater.setProgress(50);in.close();out.close();} catch (IOException e) {e.printStackTrace();}startUpdater();}private static void doCopyFile(FileInputStream in, FileOutputStream out) {FileChannel inChannel = null, outChannel = null;try {inChannel = in.getChannel();outChannel = out.getChannel();inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {throw ManagedIOException.manage(e);} finally {if (inChannel != null) {close(inChannel);}if (outChannel != null) {close(outChannel);}}}public String[] getElements() throws IOException {Vector v = new Vector();PushbackInputStream in = null;try {URLConnection urlConn = dtdURL.openConnection();in = new PushbackInputStream(new BufferedInputStream(urlConn.getInputStream()));while (scanForLTBang(in)) {String elementType = getString(in);if (elementType.equals(""ELEMENT"")) {skipWhiteSpace(in);String elementName = getString(in);v.addElement(elementName);}}in.close();String[] elements = new String[v.size()];v.copyInto(elements);return elements;} catch (Exception exc) {if (in != null) {try {in.close();} catch (Exception ignore) {}}throw new IOException(""Error reading DTD: "" + exc.toString());}}private void executeScript(SQLiteDatabase sqlDatabase, InputStream input) {StringWriter writer = new StringWriter();try {IOUtils.copy(input, writer);} catch (IOException e) {throw new ComixException(""Could not read the database script"", e);}String multipleSql = writer.toString();String[] split = multipleSql.split(""-- SCRIPT_SPLIT --"");for (String sql : split) {if (!sql.trim().equals("""")) {sqlDatabase.execSQL(sql);}}}protected void loadXmlFromUri(URI uri) {URLConnection urlc;try {urlc = uri.toURL().openConnection();InputStream is = urlc.getInputStream();Reader rd = new InputStreamReader(is);xmlSource = new StreamSource(rd);} catch (IOException ioe) {ioe.printStackTrace();}}protected void loadXslFromUri(URI uri) {URLConnection urlc;try {urlc = uri.toURL().openConnection();InputStream is = urlc.getInputStream();Reader rd = new InputStreamReader(is);Source xslSource = new StreamSource(rd);try {xslTemplate = factory.newTemplates(xslSource);} catch (TransformerConfigurationException tce) {tce.printStackTrace();}} catch (IOException ioe) {ioe.printStackTrace();}}@Overridepublic IMedium createMedium(String urlString, IMetadata optionalMetadata) throws MM4UCannotCreateMediumElementsException {Debug.println(""createMedium(): URL: "" + urlString);IAudio tempAudio = null;try {String cachedFileUri = null;try {URL url = new URL(urlString);InputStream is = url.openStream();ByteArrayOutputStream out = new ByteArrayOutputStream();byte[] buf = new byte[1024];int len;while ((len = is.read(buf)) > 0) out.write(buf, 0, len);MediaCache cache = new MediaCache();cachedFileUri = cache.addAudio(urlString, out).getURI().substring(5);} catch (MalformedURLException e) {cachedFileUri = urlString;}TAudioFileFormat fFormat = null;try {fFormat = (TAudioFileFormat) new MpegAudioFileReader().getAudioFileFormat(new File(cachedFileUri));} catch (Exception e) {System.err.println(""getAudioFileFormat() failed: "" + e);}int length = Constants.UNDEFINED_INTEGER;if (fFormat != null) {length = Math.round(Integer.valueOf(fFormat.properties().get(""duration"").toString()).intValue() / 1000);}String mimeType = Utilities.getMimetype(Utilities.getURISuffix(urlString));optionalMetadata.addIfNotNull(IMedium.MEDIUM_METADATA_MIMETYPE, mimeType);if (length != Constants.UNDEFINED_INTEGER) {tempAudio = new Audio(this, length, urlString, optionalMetadata);}} catch (Exception exc) {exc.printStackTrace();return null;}return tempAudio;}public void writeTo(OutputStream out) throws IOException {if (!closed) {throw new IOException(""Stream not closed"");}if (isInMemory()) {memoryOutputStream.writeTo(out);} else {FileInputStream fis = new FileInputStream(outputFile);try {IOUtils.copy(fis, out);} finally {IOUtils.close(fis);}}}public static void copy(File fromFile, File toFile) throws IOException {if (!fromFile.exists()) throw new IOException(""FileCopy: "" + ""no such source file: "" + fromFile.getCanonicalPath());if (!fromFile.isFile()) throw new IOException(""FileCopy: "" + ""can't copy directory: "" + fromFile.getCanonicalPath());if (!fromFile.canRead()) throw new IOException(""FileCopy: "" + ""source file is unreadable: "" + fromFile.getCanonicalPath());if (toFile.isDirectory()) toFile = new File(toFile, fromFile.getName());if (toFile.exists()) {if (!toFile.canWrite()) throw new IOException(""FileCopy: "" + ""destination file is unwriteable: "" + toFile.getCanonicalPath());throw new IOException(""FileCopy: "" + ""existing file was not overwritten."");} else {String parent = toFile.getParent();if (parent == null) parent = System.getProperty(""user.dir"");File dir = new File(parent);if (!dir.exists()) throw new IOException(""FileCopy: "" + ""destination directory doesn't exist: "" + parent);if (dir.isFile()) throw new IOException(""FileCopy: "" + ""destination is not a directory: "" + parent);if (!dir.canWrite()) throw new IOException(""FileCopy: "" + ""destination directory is unwriteable: "" + parent);}FileInputStream from = null;FileOutputStream to = null;try {from = new FileInputStream(fromFile);to = new FileOutputStream(toFile);byte[] buffer = new byte[1024 * 1024];int bytesRead;while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead);if (fromFile.isHidden()) {}toFile.setLastModified(fromFile.lastModified());toFile.setExecutable(fromFile.canExecute());toFile.setReadable(fromFile.canRead());toFile.setWritable(toFile.canWrite());} finally {if (from != null) try {from.close();} catch (IOException e) {;}if (to != null) try {to.close();} catch (IOException e) {;}}}"	5
"protected long getURLLastModified(final URL url) throws IOException {final URLConnection con = url.openConnection();long lastModified = con.getLastModified();try {con.getInputStream().close();} catch (IOException ignored) {}return lastModified;}public void createZip(File zipFileName, Vector<File> selected) {try {byte[] buffer = new byte[4096];ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(zipFileName), 8096));out.setLevel(Deflater.BEST_COMPRESSION);out.setMethod(ZipOutputStream.DEFLATED);for (int i = 0; i < selected.size(); i++) {FileInputStream in = new FileInputStream(selected.get(i));String file = selected.get(i).getPath();if (file.indexOf(""\\"") != -1) file = file.substring(file.lastIndexOf(fs) + 1, file.length());ZipEntry ze = new ZipEntry(file);out.putNextEntry(ze);int len;while ((len = in.read(buffer)) > 0) out.write(buffer, 0, len);out.closeEntry();in.close();selected.get(i).delete();}out.close();} catch (IllegalArgumentException iae) {iae.printStackTrace();} catch (FileNotFoundException fnfe) {fnfe.printStackTrace();} catch (IOException ioe) {ioe.printStackTrace();}}@Overridepublic User createUser(User bean) throws SitoolsException {checkUser();if (!User.isValid(bean)) {throw new SitoolsException(""CREATE_USER_MALFORMED"");}Connection cx = null;try {cx = ds.getConnection();cx.setAutoCommit(false);PreparedStatement st = cx.prepareStatement(jdbcStoreResource.CREATE_USER);int i = 1;st.setString(i++, bean.getIdentifier());st.setString(i++, bean.getFirstName());st.setString(i++, bean.getLastName());st.setString(i++, bean.getSecret());st.setString(i++, bean.getEmail());st.executeUpdate();st.close();createProperties(bean, cx);if (!cx.getAutoCommit()) {cx.commit();}} catch (SQLException e) {try {cx.rollback();} catch (SQLException e1) {e1.printStackTrace();throw new SitoolsException(""CREATE_USER ROLLBACK"" + e1.getMessage(), e1);}e.printStackTrace();throw new SitoolsException(""CREATE_USER "" + e.getMessage(), e);} finally {closeConnection(cx);}return getUserById(bean.getIdentifier());}@Overridepublic User updateUser(User bean) throws SitoolsException {checkUser();Connection cx = null;try {cx = ds.getConnection();cx.setAutoCommit(false);PreparedStatement st;int i = 1;if (bean.getSecret() != null && !"""".equals(bean.getSecret())) {st = cx.prepareStatement(jdbcStoreResource.UPDATE_USER_WITH_PW);st.setString(i++, bean.getFirstName());st.setString(i++, bean.getLastName());st.setString(i++, bean.getSecret());st.setString(i++, bean.getEmail());st.setString(i++, bean.getIdentifier());} else {st = cx.prepareStatement(jdbcStoreResource.UPDATE_USER_WITHOUT_PW);st.setString(i++, bean.getFirstName());st.setString(i++, bean.getLastName());st.setString(i++, bean.getEmail());st.setString(i++, bean.getIdentifier());}st.executeUpdate();st.close();if (bean.getProperties() != null) {deleteProperties(bean.getIdentifier(), cx);createProperties(bean, cx);}if (!cx.getAutoCommit()) {cx.commit();}} catch (SQLException e) {try {cx.rollback();} catch (SQLException e1) {throw new SitoolsException(""UPDATE_USER ROLLBACK"" + e1.getMessage(), e1);}throw new SitoolsException(""UPDATE_USER "" + e.getMessage(), e);} finally {closeConnection(cx);}return getUserById(bean.getIdentifier());}private static void copy(File source, File target) throws IOException {FileChannel sourceChannel = new FileInputStream(source).getChannel();FileChannel targetChannel = new FileOutputStream(target).getChannel();sourceChannel.transferTo(0, sourceChannel.size(), targetChannel);sourceChannel.close();targetChannel.close();}public boolean smsResponse(String customerPhoneNumber) throws ClientProtocolException, IOException {boolean message = true;String textMessage = ""La%20sua%20prenotazione%20e%60%20andata%20a%20buon%20fine"";DefaultHttpClient httpclient = new DefaultHttpClient();String uri = ""http://smswizard.globalitalia.it/smsgateway/send.asp"";String other = ""http://smswizard.globalitalia.it/smsgateway/send.asp"";String url = uri + ""?"" + ""Account=sardricerche"" + ""&Password=v8LomdZT"" + ""&PhoneNumbers="" + ""%2b393285683484"" + ""&SMSData="" + textMessage + ""&Recipients=1"" + ""&Sender=Web Hotel"" + ""&ID=11762"";String urlProva = other + ""?"" + ""Account=sardricerche"" + ""&Password=v8LomdZT"" + ""&PhoneNumbers="" + customerPhoneNumber + ""&SMSData="" + textMessage + ""&Recipients=1"" + ""&Sender=+393337589951"" + ""&ID=11762"";HttpPost httpPost = new HttpPost(urlProva);HttpResponse response = httpclient.execute(httpPost);HttpEntity entity = response.getEntity();return message;}private void retrieveData() {StringBuffer obsBuf = new StringBuffer();try {URL url = new URL(getProperty(""sourceURL""));BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String lineIn = null;while ((lineIn = in.readLine()) != null) {if (GlobalProps.DEBUG) {logger.log(Level.FINE, ""WebSource retrieveData: "" + lineIn);}obsBuf.append(lineIn);}String fmt = getProperty(""dataFormat"");if (GlobalProps.DEBUG) {logger.log(Level.FINE, ""Raw: "" + obsBuf.toString());}if (""NWS XML"".equals(fmt)) {obs = new NWSXmlObservation(obsBuf.toString());}} catch (Exception e) {logger.log(Level.SEVERE, ""Can't connect to: "" + getProperty(""sourceURL""));if (GlobalProps.DEBUG) {e.printStackTrace();}}}protected static String getInitialUUID() {if (myRand == null) {myRand = new Random();}long rand = myRand.nextLong();String sid;try {sid = InetAddress.getLocalHost().toString();} catch (UnknownHostException e) {sid = Thread.currentThread().getName();}StringBuffer sb = new StringBuffer();sb.append(sid);sb.append("":"");sb.append(Long.toString(rand));MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {throw new OMException(e);}md5.update(sb.toString().getBytes());byte[] array = md5.digest();StringBuffer sb2 = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;sb2.append(Integer.toHexString(b));}int begin = myRand.nextInt();if (begin < 0) begin = begin * -1;begin = begin % 8;return sb2.toString().substring(begin, begin + 18).toUpperCase();}public void invoke(MessageContext msgContext) throws AxisFault {log.debug(""Enter: MD5AttachHandler::invoke"");try {Message msg = msgContext.getRequestMessage();SOAPConstants soapConstants = msgContext.getSOAPConstants();org.apache.axis.message.SOAPEnvelope env = (org.apache.axis.message.SOAPEnvelope) msg.getSOAPEnvelope();org.apache.axis.message.SOAPBodyElement sbe = env.getFirstBody();org.w3c.dom.Element sbElement = sbe.getAsDOM();org.w3c.dom.Node n = sbElement.getFirstChild();for (; n != null && !(n instanceof org.w3c.dom.Element); n = n.getNextSibling()) ;org.w3c.dom.Element paramElement = (org.w3c.dom.Element) n;String href = paramElement.getAttribute(soapConstants.getAttrHref());org.apache.axis.Part ap = msg.getAttachmentsImpl().getAttachmentByReference(href);javax.activation.DataHandler dh = org.apache.axis.attachments.AttachmentUtils.getActivationDataHandler(ap);org.w3c.dom.Node timeNode = paramElement.getFirstChild();long startTime = -1;if (timeNode != null && timeNode instanceof org.w3c.dom.Text) {String startTimeStr = ((org.w3c.dom.Text) timeNode).getData();startTime = Long.parseLong(startTimeStr);}long receivedTime = System.currentTimeMillis();long elapsedTime = -1;if (startTime > 0) elapsedTime = receivedTime - startTime;String elapsedTimeStr = elapsedTime + """";java.security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");java.io.InputStream attachmentStream = dh.getInputStream();int bread = 0;byte[] buf = new byte[64 * 1024];do {bread = attachmentStream.read(buf);if (bread > 0) {md.update(buf, 0, bread);}} while (bread > -1);attachmentStream.close();buf = null;String contentType = dh.getContentType();if (contentType != null && contentType.length() != 0) {md.update(contentType.getBytes(""US-ASCII""));}sbe = env.getFirstBody();sbElement = sbe.getAsDOM();n = sbElement.getFirstChild();for (; n != null && !(n instanceof org.w3c.dom.Element); n = n.getNextSibling()) ;paramElement = (org.w3c.dom.Element) n;String MD5String = org.apache.axis.encoding.Base64.encode(md.digest());String senddata = "" elapsedTime="" + elapsedTimeStr + "" MD5="" + MD5String;paramElement.appendChild(paramElement.getOwnerDocument().createTextNode(senddata));sbe = new org.apache.axis.message.SOAPBodyElement(sbElement);env.clearBody();env.addBodyElement(sbe);msg = new Message(env);msgContext.setResponseMessage(msg);} catch (Exception e) {log.error(Messages.getMessage(""exception00""), e);throw AxisFault.makeFault(e);}log.debug(""Exit: MD5AttachHandler::invoke"");}public static byte[] getHashedID(String ID) {try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.reset();md5.update(ID.getBytes());byte[] digest = md5.digest();byte[] bytes = new byte[WLDB_ID_SIZE];for (int i = 0; i < bytes.length; i++) {bytes[i] = digest[i];}return bytes;} catch (NoSuchAlgorithmException exception) {System.err.println(""Java VM is not compatible"");return null;}}"	5
"public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public NodeId generateTopicId(String topicName) {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {System.err.println(""No SHA support!"");}md.update(topicName.getBytes());byte[] digest = md.digest();NodeId newId = new NodeId(digest);return newId;}public Source get_source(String pageURL, Boolean checkInBase) {URL url;URLConnection conn;Reader inReader;Source source = null;String LastModified = """";Boolean updateData = false;try {url = new URL(pageURL);conn = url.openConnection();conn.setRequestProperty(""Accept-Charset"", ""windows-1251"");if (checkInBase) {for (int i = 0; ; i++) {String name = conn.getHeaderFieldKey(i);String value = conn.getHeaderField(i);if (name == null && value == null) {break;}if (""Last-Modified"".equals(name)) {LastModified = value;}}Ini.rs = Ini.stmt.executeQuery(""select count(1) as qwe from "" + "" PUBLIC.PAGES "" + ""where url = '"" + pageURL + ""';"");Ini.rs.next();if (Ini.rs.getInt(""qwe"") == 0) {Ini.stmt.executeUpdate(""insert into PUBLIC.PAGES(url, lastUpdateDate) "" + "" values('"" + pageURL + ""', "" + ""'"" + LastModified + ""'"" + "");"");} else {Ini.rs = Ini.stmt.executeQuery(""select lastUpdateDate from "" + "" PUBLIC.PAGES "" + ""where url = '"" + pageURL + ""';"");Ini.rs.next();if (!Ini.rs.getString(""lastUpdateDate"").equals(LastModified)) {updateData = true;} else {return null;}}}inReader = new InputStreamReader(conn.getInputStream(), ""windows-1251"");source = new Source(inReader);source.setLogger(null);source.fullSequentialParse();if (updateData) {Ini.stmt.executeUpdate(""delete from PUBLIC.LINKDATA "" + ""where id in ("" + ""select id from PUBLIC.PAGES "" + ""where url = '"" + pageURL + ""'"" + "")"");Ini.stmt.executeUpdate(""delete from PUBLIC.PAGES "" + ""where url = '"" + pageURL + ""';"");Ini.stmt.executeUpdate(""insert into PUBLIC.PAGES "" + "" values('"" + pageURL + ""', "" + ""'"" + LastModified + ""'"" + "");"");}} catch (Exception ex) {Ini.logger.fatal(""Error: "", ex);}return source;}void bubbleSort(int ids[]) {boolean flag = true;int temp;while (flag) {flag = false;for (int i = 0; i < ids.length - 1; i++) if (ids[i] < ids[i + 1]) {temp = ids[i];ids[i] = ids[i + 1];ids[i + 1] = temp;flag = true;}}}private void makeQuery(String query) {System.out.println("" Querying for "" + query);try {query = URLEncoder.encode(query, ""UTF-8"");for (int k = 0; k < 100; k++) {System.out.println(query);URL url = new URL(""http://ajax.googleapis.com/ajax/services/search/web?start="" + k * 8 + ""&rsz=large&v=1.0&q="" + query);URLConnection connection = url.openConnection();connection.addRequestProperty(""Referer"", HTTP_REFERER);String line;StringBuilder builder = new StringBuilder();BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));while ((line = reader.readLine()) != null) {builder.append(line);}String response = builder.toString();JSONObject json = new JSONObject(response);if (k == 0) {result = ""Total results = "" + json.getJSONObject(""responseData"").getJSONObject(""cursor"").getString(""estimatedResultCount"") + ""\n"";}JSONArray ja = json.getJSONObject(""responseData"").getJSONArray(""results"");jsonres = ja;for (int i = 0; i < ja.length(); i++) {System.out.print((i + 1) + "". "");JSONObject j = ja.getJSONObject(i);result = result + j.getString(""titleNoFormatting"") + "" "";result = result + j.getString(""url"") + ""\n"";result = result + j.getString(""content"") + ""\n\n"";}}} catch (Exception e) {System.err.println(""Something went wrong..."");e.printStackTrace();}}public static void copyFile(IPath fromFileName, IPath toFileName) throws IOException {File fromFile = fromFileName.toFile();File toFile = toFileName.toFile();if (!fromFile.exists()) throw new IOException(""FileCopy: "" + ""no such source file: "" + fromFileName);if (!fromFile.isFile()) throw new IOException(""FileCopy: "" + ""can't copy directory: "" + fromFileName);if (!fromFile.canRead()) throw new IOException(""FileCopy: "" + ""source file is unreadable: "" + fromFileName);if (toFile.isDirectory()) toFile = new File(toFile, fromFile.getName());if (toFile.exists()) {if (!toFile.canWrite()) throw new IOException(""FileCopy: "" + ""destination file is unwriteable: "" + toFileName);} else {String parent = toFile.getParent();if (parent == null) parent = System.getProperty(""user.dir"");File dir = new File(parent);if (!dir.exists()) throw new IOException(""FileCopy: "" + ""destination directory doesn't exist: "" + parent);if (dir.isFile()) throw new IOException(""FileCopy: "" + ""destination is not a directory: "" + parent);if (!dir.canWrite()) throw new IOException(""FileCopy: "" + ""destination directory is unwriteable: "" + parent);}InputStream from = null;OutputStream to = null;try {from = new BufferedInputStream(new FileInputStream(fromFile));to = new BufferedOutputStream(new FileOutputStream(toFile));byte[] buffer = new byte[4096];int bytesRead;while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead);} finally {if (from != null) try {from.close();} catch (IOException e) {}if (to != null) try {to.close();} catch (IOException e) {}}}private void getRdfResponse(StringBuilder sb, String url) {try {String inputLine = null;BufferedReader reader = new BufferedReader(new InputStreamReader(new URL(url).openStream()));while ((inputLine = reader.readLine()) != null) {sb.append(inputLine);}reader.close();} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}}private synchronized void createFTPConnection() throws RemoteClientException {ftpClient = new FTPClient();try {URL url = fileset.getHostURL();PasswordAuthentication passwordAuthentication = fileset.getPasswordAuthentication();if (null == passwordAuthentication) {passwordAuthentication = anonPassAuth;}InetAddress inetAddress = InetAddress.getByName(url.getHost());if (url.getPort() == -1) {ftpClient.connect(inetAddress);} else {ftpClient.connect(inetAddress, url.getPort());}if (!FTPReply.isPositiveCompletion(ftpClient.getReplyCode())) {throw new FTPBrowseException(ftpClient.getReplyString());}ftpClient.login(passwordAuthentication.getUserName(), new StringBuffer().append(passwordAuthentication.getPassword()).toString());if (url.getPath().length() > 0) {ftpClient.changeWorkingDirectory(url.getPath());}} catch (UnknownHostException e) {throw new RemoteClientException(""Host not found."", e);} catch (SocketException e) {throw new RemoteClientException(""Socket cannot be opened."", e);} catch (IOException e) {throw new RemoteClientException(""Socket cannot be opened."", e);}}private void RotaDraw(GeoPoint orig, GeoPoint dest, int color, MapView mapa) {StringBuilder urlString = new StringBuilder();urlString.append(""http://maps.google.com/maps?f=d&hl=en"");urlString.append(""&saddr="");urlString.append(Double.toString((double) orig.getLatitudeE6() / 1.0E6));urlString.append("","");urlString.append(Double.toString((double) orig.getLongitudeE6() / 1.0E6));urlString.append(""&daddr="");urlString.append(Double.toString((double) dest.getLatitudeE6() / 1.0E6));urlString.append("","");urlString.append(Double.toString((double) dest.getLongitudeE6() / 1.0E6));urlString.append(""&ie=UTF8&0&om=0&output=kml"");Document doc = null;HttpURLConnection urlConnection = null;URL url = null;try {url = new URL(urlString.toString());urlConnection = (HttpURLConnection) url.openConnection();urlConnection.setRequestMethod(""GET"");urlConnection.setDoOutput(true);urlConnection.setDoInput(true);urlConnection.connect();DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();DocumentBuilder db = dbf.newDocumentBuilder();doc = db.parse(urlConnection.getInputStream());if (doc.getElementsByTagName(""GeometryCollection"").getLength() > 0) {String path = doc.getElementsByTagName(""GeometryCollection"").item(0).getFirstChild().getFirstChild().getFirstChild().getNodeValue();Log.d(""xxx"", ""path="" + path);String[] pairs = path.split("" "");String[] lngLat = pairs[0].split("","");GeoPoint startGP = new GeoPoint((int) (Double.parseDouble(lngLat[1]) * 1E6), (int) (Double.parseDouble(lngLat[0]) * 1E6));mapa.getOverlays().add(new CamadaGS(startGP, startGP, 1));GeoPoint gp1;GeoPoint gp2 = startGP;for (int i = 1; i < pairs.length; i++) {lngLat = pairs[i].split("","");gp1 = gp2;gp2 = new GeoPoint((int) (Double.parseDouble(lngLat[1]) * 1E6), (int) (Double.parseDouble(lngLat[0]) * 1E6));mapa.getOverlays().add(new CamadaGS(gp1, gp2, 2, color));Log.d(""xxx"", ""pair:"" + pairs[i]);}mapa.getOverlays().add(new CamadaGS(dest, dest, 3));}} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();} catch (ParserConfigurationException e) {e.printStackTrace();} catch (SAXException e) {e.printStackTrace();}}public static String readUrlText(String urlString) throws IOException {URL url = new URL(urlString);InputStream stream = url.openStream();StringBuilder buf = new StringBuilder();BufferedReader in = null;try {in = new BufferedReader(new InputStreamReader(stream));String str;while ((str = in.readLine()) != null) {buf.append(str);buf.append(System.getProperty(""line.separator""));}} catch (IOException e) {System.out.println(""Error reading text from URL ["" + url + ""]: "" + e.toString());throw e;} finally {if (in != null) {try {in.close();} catch (IOException e) {System.out.println(""Error closing after reading text from URL ["" + url + ""]: "" + e.toString());}}}return buf.toString();}"	5
"public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}private String getHash(String string) {MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {e.printStackTrace();}md5.reset();md5.update(string.getBytes());byte[] result = md5.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < result.length; i++) {hexString.append(Integer.toHexString(0xFF & result[i]));}String str = hexString.toString();return str;}public CmsSetupTestResult execute(CmsSetupBean setupBean) {CmsSetupTestResult testResult = new CmsSetupTestResult(this);String basePath = setupBean.getWebAppRfsPath();if (!basePath.endsWith(File.separator)) {basePath += File.separator;}File file1;Random rnd = new Random();do {file1 = new File(basePath + ""test"" + rnd.nextInt(1000));} while (file1.exists());boolean success = false;try {file1.createNewFile();FileWriter fw = new FileWriter(file1);fw.write(""aA1"");fw.close();success = true;FileReader fr = new FileReader(file1);success = success && (fr.read() == 'a');success = success && (fr.read() == 'A');success = success && (fr.read() == '1');success = success && (fr.read() == -1);fr.close();success = file1.delete();success = !file1.exists();} catch (Exception e) {success = false;}if (!success) {testResult.setRed();testResult.setInfo(""OpenCms cannot be installed without read and write privileges for path "" + basePath + ""! Please check you are running your servlet container with the right user and privileges."");testResult.setHelp(""Not enough permissions to create/read/write a file"");testResult.setResult(RESULT_FAILED);} else {testResult.setGreen();testResult.setResult(RESULT_PASSED);}return testResult;}protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {if (request.getParameter(""edit"") != null) {try {User cu = (User) request.getSession().getAttribute(""currentuser"");UserDetails ud = cu.getUserDetails();String returnTo = ""editprofile.jsp"";if (!request.getParameter(""password"").equals("""")) {String password = request.getParameter(""password"");MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(new String(password).getBytes());byte[] hash = md.digest();String pass = new BigInteger(1, hash).toString(16);cu.setClientPassword(pass);}ud.setFirstName(request.getParameter(""fname""));ud.setLastName(request.getParameter(""lname""));ud.setEmailAddress(request.getParameter(""email""));ud.setAddress(request.getParameter(""address""));ud.setZipcode(request.getParameter(""zipcode""));ud.setTown(request.getParameter(""town""));ud.setCountry(request.getParameter(""country""));ud.setTrackingColor(request.getParameter(""input1""));String vis = request.getParameter(""visibility"");if (vis.equals(""self"")) {cu.setVisibility(0);} else if (vis.equals(""friends"")) {cu.setVisibility(1);} else if (vis.equals(""all"")) {cu.setVisibility(2);} else {response.sendRedirect(""error.jsp?id=8"");}em.getTransaction().begin();em.persist(cu);em.getTransaction().commit();response.sendRedirect(returnTo);} catch (Throwable e) {e.printStackTrace();response.sendRedirect(""error.jsp?id=5"");}return;}}public void loadProperties() {try {java.util.Properties props = new java.util.Properties();java.net.URL url = ClassLoader.getSystemResource(""env.properties"");props.load(url.openStream());this.proxyCertificatePath = props.getProperty(""proxy.certificate.path"");this.dummyFileDirName = props.getProperty(""delete.dummyFileDirName"");this.idleTimeTestDelay = new Integer(props.getProperty(""idleTimeTestDelaySeconds""));if (props.getProperty(""gridftp.timeoutMilliSecs"") != null) {this.gridftpTimeoutMilliSecs = new Integer(props.getProperty(""gridftp.timeoutMilliSecs"").trim());}this.assertContentInWriteTests = new Boolean(props.getProperty(""assertContentInWriteTests""));this.gridftpHost1 = props.getProperty(""gridftp.host1"");this.gridftpPort1 = new Integer(props.getProperty(""gridftp.port1""));this.gridftpHost2 = props.getProperty(""gridftp.host2"");this.gridftpPort2 = new Integer(props.getProperty(""gridftp.port2""));this.srbGsiHost = props.getProperty(""srb.gsi.host"");this.srbGsiPort = new Integer(props.getProperty(""srb.gsi.port""));this.srbGsiPortMin = new Integer(props.getProperty(""srb.gsi.port.min""));this.srbGsiPortMax = new Integer(props.getProperty(""srb.gsi.port.max""));this.srbGsiDefaultResource = props.getProperty(""srb.gsi.defaultResource"");this.srbEncryptHost = props.getProperty(""srb.encrypt.host"");this.srbEncryptPort = new Integer(props.getProperty(""srb.encrypt.port""));this.srbEncryptPortMin = new Integer(props.getProperty(""srb.encrypt.port.min""));this.srbEncryptPortMax = new Integer(props.getProperty(""srb.encrypt.port.max""));this.srbEncryptDefaultResource = props.getProperty(""srb.encrypt.defaultResource"");this.srbEncryptHomeDirectory = props.getProperty(""srb.encrypt.homeDirectory"");this.srbEncryptMcatZone = props.getProperty(""srb.encrypt.mcatZone"");this.srbEncryptMdasDomainName = props.getProperty(""srb.encrypt.mdasDomainName"");this.srbEncryptUsername = props.getProperty(""srb.encrypt.username"");this.srbEncryptPassword = props.getProperty(""srb.encrypt.password"");this.sftpHost = props.getProperty(""sftp.host"");this.sftpPort = new Integer(props.getProperty(""sftp.port""));this.sftpPath = props.getProperty(""sftp.path"");this.sftpUsername = props.getProperty(""sftp.username"");this.sftpPassword = props.getProperty(""sftp.password"");if (props.getProperty(""sftp.timeoutMilliSecs"") != null) {this.sftpTimeoutMilliSecs = new Integer(props.getProperty(""sftp.timeoutMilliSecs"").trim());}irodsEncryptHost = props.getProperty(""irods.encrypt.host"");irodsEncryptPort = new Integer(props.getProperty(""irods.encrypt.port""));irodsEncryptResource = props.getProperty(""irods.encrypt.defaultResource"");irodsEncryptHomeDirectory = props.getProperty(""irods.encrypt.homeDirectory"");irodsEncryptZone = props.getProperty(""irods.encrypt.zone"");irodsEncryptUsername = props.getProperty(""irods.encrypt.username"");irodsEncryptPassword = props.getProperty(""irods.encrypt.password"");irodsGsiHost = props.getProperty(""irods.gsi.host"");irodsGsiPort = new Integer(props.getProperty(""irods.gsi.port""));irodsGsiZone = props.getProperty(""irods.gsi.zone"");srbQueryTimeout = new Integer(props.getProperty(""srb.query.timeout""));this.ftpUri = props.getProperty(""ftp.uri"");this.httpUri = props.getProperty(""http.uri"");this.httpProxy = props.getProperty(""http.proxy"");this.httpPort = new Integer(props.getProperty(""http.port""));this.fileUri = props.getProperty(""file.uri"");java.net.URI tempUri = new java.net.URI(this.fileUri);File f = new File(tempUri);if (!f.exists()) {String temp = System.getProperty(""java.io.tmpdir"");System.out.println(""Cannot list ["" + fileUri + ""] listing java.io.tmpdir instead ["" + temp + ""]"");this.fileUri = temp;}useSrbGsiInFsCopyTest = new Boolean(props.getProperty(""srb.gsi.use.in.fs.copy.test""));useSrbEncryptInFsCopyTest = new Boolean(props.getProperty(""srb.encrypt.use.in.fs.copy.test""));useGridftpHost1InFsCopyTest = new Boolean(props.getProperty(""gridftp.host1.use.in.fs.copy.test""));useGridftpHost2InFsCopyTest = new Boolean(props.getProperty(""gridftp.host2.use.in.fs.copy.test""));useSftpInFsCopyTest = new Boolean(props.getProperty(""sftp.use.in.fs.copy.test""));useLocalFileInFsCopyTest = new Boolean(props.getProperty(""file.use.in.fs.copy.test""));useIrodsGsiCopyTest = new Boolean(props.getProperty(""irods.gsi.use.in.fs.copy.test""));useIrodsEncryptCopyTest = new Boolean(props.getProperty(""irods.encrypt.use.in.fs.copy.test""));assertNotNull(this.proxyCertificatePath);assertNotNull(this.dummyFileDirName);assertNotNull(this.idleTimeTestDelay);assertNotNull(this.ftpUri);assertNotNull(this.httpUri);} catch (Exception ex) {Logger.getLogger(AbstractTestClass.class.getName()).log(Level.SEVERE, null, ex);fail(""Unable to locate and load 'testsettings.properties' file in source "" + ex);}}public void register(URL codeBase, String filePath) throws Exception {Properties properties = new Properties();URL url = new URL(codeBase + filePath);properties.load(url.openStream());initializeContext(codeBase, properties);}private void renameTo(File from, File to) {if (!from.exists()) return;if (to.exists()) to.delete();boolean worked = false;try {worked = from.renameTo(to);} catch (Exception e) {database.logError(this, """" + e, null);}if (!worked) {database.logWarning(this, ""Could not rename GEDCOM to "" + to.getAbsolutePath(), null);try {to.delete();final FileReader in = new FileReader(from);final FileWriter out = new FileWriter(to);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();from.delete();} catch (Exception e) {database.logError(this, """" + e, null);}}}public static void copy(String a, String b) throws IOException {File inputFile = new File(a);File outputFile = new File(b);FileReader in = new FileReader(inputFile);FileWriter out = new FileWriter(outputFile);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();}public static String getStringFromURL(URL url) {try {if (url == null) {return null;}URLConnection conn = url.openConnection();conn.connect();if (conn instanceof HttpURLConnection) {int status = ((HttpURLConnection) conn).getResponseCode();if (status != HttpURLConnection.HTTP_OK) {return null;}}int available = conn.getContentLength();InputStream is = conn.getInputStream();byte buffer[] = new byte[available];int pos = 0;while (available > 0) {int amount = is.read(buffer, pos, available);available -= amount;pos += amount;}is.close();String tmp = new String(buffer);return tmp;} catch (Exception ex) {System.out.println(ex);return """";}}public static void copyZip() {InputStream is;OutputStream os;String javacZip = """";try {if (""windows"".equalsIgnoreCase(Compilador.getSo())) {javacZip = ""javacWin.zip"";is = UnZip.class.getResourceAsStream(""javacWin.zip"");} else if (""linux"".equalsIgnoreCase(Compilador.getSo())) {javacZip = ""javacLinux.zip"";is = UnZip.class.getResourceAsStream(""javacLinux.zip"");}is = UnZip.class.getResourceAsStream(javacZip);File tempZip = File.createTempFile(""tempJavacJTraductor"", "".zip"");tempZip.mkdir();tempZip.deleteOnExit();os = FileUtils.openOutputStream(tempZip);IOUtils.copy(is, os);is.close();os.close();extractZip(tempZip.getPath());} catch (Exception ex) {JOptionPane.showMessageDialog(PseutemView.mainPanel, ""Error al copiar los archivos temporales necesarios para ejecutar el programa:\n\n"" + ex, ""Error copiando."", JOptionPane.ERROR_MESSAGE);}}"	5
"private void generateGuid() throws NoSuchAlgorithmException {MessageDigest md5 = MessageDigest.getInstance(""MD5"");StringBuilder stringToDigest = new StringBuilder();long time = System.currentTimeMillis();long rand = random.nextLong();stringToDigest.append(time);stringToDigest.append(""-"");stringToDigest.append(rand);md5.update(stringToDigest.toString().getBytes());byte[] digestBytes = md5.digest();StringBuilder digest = new StringBuilder();for (int i = 0; i < digestBytes.length; ++i) {int b = digestBytes[i] & 0xFF;if (b < 0x10) {digest.append('0');}digest.append(Integer.toHexString(b));}guid = digest.toString();}protected boolean downloadFile(TestThread thread, ActionResult result) {result.setRequestString(""download file "" + remoteFile);InputStream input = null;OutputStream output = null;OutputStream target = null;boolean status = false;ftpClient.enterLocalPassiveMode();try {if (localFile != null) {File lcFile = new File(localFile);if (lcFile.exists() && lcFile.isDirectory()) output = new FileOutputStream(new File(lcFile, remoteFile)); else output = new FileOutputStream(lcFile);target = output;} else {target = new FileOutputStream(remoteFile);}input = ftpClient.retrieveFileStream(remoteFile);long bytes = IOUtils.copy(input, target);status = bytes > 0;if (status) {result.setResponseLength(bytes);}} catch (Exception e) {result.setException(new TestActionException(config, e));} finally {IOUtils.closeQuietly(input);IOUtils.closeQuietly(output);}return status;}public boolean login(URL strUrl, String loginName, String loginPwd, String sessionID) throws Exception {String starter = ""-----------------------------"";String returnChar = ""\r\n"";String lineEnd = ""--"";URL urlString = strUrl;String input = null;List txtList = new ArrayList();List fileList = new ArrayList();String targetFile = null;String actionStatus = null;StringBuffer returnMessage = new StringBuffer();List head = new ArrayList();final String boundary = String.valueOf(System.currentTimeMillis());URL url = null;URLConnection conn = null;BufferedReader br = null;DataOutputStream dos = null;boolean isLogin = false;txtList.add(new HtmlFormText(""loginName"", loginName));txtList.add(new HtmlFormText(""loginPwd"", loginPwd));txtList.add(new HtmlFormText(""navMode"", ""I""));txtList.add(new HtmlFormText(""action"", ""login""));try {url = new URL(urlString, ""/"" + projectName + ""/Login.do"");conn = url.openConnection();((HttpURLConnection) conn).setRequestMethod(""POST"");conn.setDoInput(true);conn.setDoOutput(true);conn.setUseCaches(false);conn.setRequestProperty(""Content-Type"", ""multipart/form-data, boundary="" + ""---------------------------"" + boundary);if (input != null) {String auth = ""Basic "" + new sun.misc.BASE64Encoder().encode(input.getBytes());conn.setRequestProperty(""Authorization"", auth);}dos = new DataOutputStream(conn.getOutputStream());dos.write((starter + boundary + returnChar).getBytes());for (int i = 0; i < txtList.size(); i++) {HtmlFormText htmltext = (HtmlFormText) txtList.get(i);dos.write(htmltext.getTranslated());if (i + 1 < txtList.size()) {dos.write((starter + boundary + returnChar).getBytes());} else if (fileList.size() > 0) {dos.write((starter + boundary + returnChar).getBytes());}}dos.write((starter + boundary + ""--"" + returnChar).getBytes());dos.flush();br = new BufferedReader(new InputStreamReader(conn.getInputStream()));String key;String header;int i = 1;key = conn.getHeaderFieldKey(i);header = conn.getHeaderField(i);System.out.println(header);if (Utility.isEmpty(header) || header.indexOf(""JSESSIONID"") < 0) {header = ""JSESSIONID="" + sessionID + ""; Path=/"" + projectName;}while (key != null) {head.add(header);i++;key = conn.getHeaderFieldKey(i);header = conn.getHeaderField(i);}String tempstr;int line = 0;while (null != ((tempstr = br.readLine()))) {if (!tempstr.equals("""")) {if (""window.location.replace(\""/eip/Home.do\"");"".indexOf(returnMessage.append(formatLine(tempstr)).toString()) != -1) {isLogin = true;break;}line++;}}txtList.clear();fileList.clear();} catch (Exception e) {e.printStackTrace();} finally {try {dos.close();} catch (Exception e) {}try {br.close();} catch (Exception e) {}}this.setHeadList(head);return isLogin;}public ObjectInputStream getObjectInputStreamFromServlet(String strUrl) throws Exception {if (headList.size() == 0) {return null;}String starter = ""-----------------------------"";String returnChar = ""\r\n"";String lineEnd = ""--"";String urlString = strUrl;String input = null;List txtList = new ArrayList();List fileList = new ArrayList();String targetFile = null;String actionStatus = null;StringBuffer returnMessage = new StringBuffer();List head = new ArrayList();final String boundary = String.valueOf(System.currentTimeMillis());URL url = null;URLConnection conn = null;DataOutputStream dos = null;ObjectInputStream inputFromServlet = null;try {url = new URL(baseURL, ""/"" + projectName + strUrl);conn = url.openConnection();((HttpURLConnection) conn).setRequestMethod(""POST"");conn.setDoInput(true);conn.setDoOutput(true);conn.setUseCaches(false);conn.setRequestProperty(""Content-Type"", ""multipart/form-data, boundary="" + ""---------------------------"" + boundary);conn.setRequestProperty(""Cookie"", (String) headList.get(0));if (input != null) {String auth = ""Basic "" + new sun.misc.BASE64Encoder().encode(input.getBytes());conn.setRequestProperty(""Authorization"", auth);}dos = new DataOutputStream(conn.getOutputStream());dos.flush();inputFromServlet = new ObjectInputStream(conn.getInputStream());txtList.clear();fileList.clear();} catch (EOFException e) {workflowEditor.getEditor().outputMessage(""Session Expired!"", false);throw e;} catch (Exception e) {e.printStackTrace();return null;} finally {try {dos.close();} catch (Exception e) {}}return inputFromServlet;}public Object execute(ExecutionEvent event) throws ExecutionException {try {Shell shell = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell();QuizTreeView view = (QuizTreeView) PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().showView(""org.rcpquizengine.views.quizzes"");Folder rootFolder = view.getRootFolder();if (rootFolder.isEncrypted()) {PasswordDialog dialog = new PasswordDialog(shell);if (dialog.open() == Window.OK) {String password = dialog.getPassword();if (!password.equals("""")) {String md5 = """";MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(password.getBytes());md5 = new BigInteger(md.digest()).toString();if (rootFolder.getMd5Digest().equals(md5)) {rootFolder.setMd5Digest("""");rootFolder.setEncrypted(false);MessageDialog.openInformation(shell, ""Quiz bank unlocked"", ""The current quiz bank has been unlocked"");} else {MessageDialog.openError(shell, ""Error unlocking quiz bank"", ""Incorrect password"");}password = """";md5 = """";}}} else {MessageDialog.openError(shell, ""Error unlocking quiz bank"", ""Quiz bank already unlocked"");}} catch (PartInitException e) {e.printStackTrace();} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return null;}public String getResponse(URL url) throws OAuthException {try {HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.connect();BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));String inputLine;StringBuilder response = new StringBuilder();while ((inputLine = in.readLine()) != null) {response.append(inputLine);}in.close();return response.toString();} catch (IOException e) {throw new OAuthException(""Error getting HTTP response"", e);}}Library(MainFrame mf, boolean newLibrary, String templateName, String newFileName) throws Exception {mainFrame = mf;trackMap = new HashMap<String, LibraryTrack>();trackVec = new Vector<LibraryTrack>();String propFileName = null;File propFile = null;String notExist = """";String[] options = templateDesc;boolean isCurrent = mainFrame.library != null;int ix;if (!newLibrary) {propFileName = mainFrame.name + "".jampal"";propFile = new File(propFileName);}if (isCurrent) {options = new String[templateDesc.length + 1];options[0] = ""Copy of Current Library"";for (ix = 0; ix < templateDesc.length; ix++) {options[ix + 1] = templateDesc[ix];}}boolean copyLibrary = false;if (newLibrary) {if (templateName == null) {Object resp = JOptionPane.showInputDialog(mainFrame.frame, ""Please select a template."", ""Select Type of Library"", JOptionPane.WARNING_MESSAGE, null, options, null);if (resp == null) return;templateName = (String) resp;}for (ix = 0; ix < options.length && !options[ix].equals(templateName); ix++) ;if (isCurrent) ix--;boolean creatingPlaylist = false;BufferedReader in;if (ix == -1) {in = new BufferedReader(new FileReader(mainFrame.name + "".jampal""));copyLibrary = true;creatingPlaylist = (mainFrame.library.attributes.libraryType == 'P');} else {in = new BufferedReader(new InputStreamReader(ClassLoader.getSystemResourceAsStream(""pgbennett/jampal/"" + templateNames[ix])));creatingPlaylist = (""playlist.jampal"".equals(templateNames[ix]));}if (newFileName == null) {JFileChooser fileChooser = new JFileChooser();fileChooser.setDialogTitle(""Create New Library File"");String currentDirectory = null;if (mainFrame.name != null) {File nameFile = new File(mainFrame.name);currentDirectory = nameFile.getParent();if (currentDirectory == null) currentDirectory = ""."";}if (currentDirectory == null) currentDirectory = Jampal.jampalDirectory;if (currentDirectory != null) fileChooser.setCurrentDirectory(new File(currentDirectory));fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);fileChooser.setMultiSelectionEnabled(false);Mp3FileFilter filter = new Mp3FileFilter();filter.setExtension(""jampal"", ""Jampal library files"");fileChooser.addChoosableFileFilter(filter);fileChooser.setAcceptAllFileFilterUsed(false);fileChooser.setFileFilter(filter);fileChooser.setDialogType(JFileChooser.SAVE_DIALOG);int returnVal = fileChooser.showSaveDialog(mainFrame.frame);if (returnVal == fileChooser.APPROVE_OPTION) {propFile = fileChooser.getSelectedFile();propFileName = propFile.getPath();if (!propFileName.toLowerCase().endsWith("".jampal"")) {propFileName = propFileName + "".jampal"";propFile = new File(propFileName);}} else return;} else {propFileName = newFileName;propFile = new File(propFileName);}if (propFile.exists()) {if (JOptionPane.showConfirmDialog(mainFrame.frame, ""File "" + propFileName + "" already exists. Do you want to overwrite it ?"", ""Warning"", JOptionPane.YES_NO_OPTION) != JOptionPane.YES_OPTION) return;}PrintWriter out = new PrintWriter(new FileOutputStream(propFile));String libName = propFile.getName();libName = libName.substring(0, libName.length() - 7);for (; ; ) {String line = in.readLine();if (line == null) break;if (creatingPlaylist && line.startsWith(""playlist="")) {line = ""playlist="" + libName;}if (line.startsWith(""libraryname="")) {line = ""libraryname="" + libName + "".jmp"";}out.println(line);}in.close();out.close();if (!creatingPlaylist && !copyLibrary) {String playlistName = propFile.getParent() + File.separator + ""playlist.jampal"";File playlistFile = new File(playlistName);if (!playlistFile.exists()) {in = new BufferedReader(new InputStreamReader(ClassLoader.getSystemResourceAsStream(""pgbennett/jampal/playlist.jampal"")));out = new PrintWriter(new FileOutputStream(playlistFile));for (; ; ) {String line = in.readLine();if (line == null) break;out.println(line);}in.close();out.close();}}}if (propFileName != null) attributes = new LibraryAttributes(propFileName);insertBefore = -1;}@Overridepublic void run() {try {FileChannel in = new FileInputStream(inputfile).getChannel();long pos = 0;for (int i = 1; i <= noofparts; i++) {FileChannel out = new FileOutputStream(outputfile.getAbsolutePath() + ""."" + ""v"" + i).getChannel();status.setText(""Rozdělovač: Rozděluji část "" + i + "".."");in.transferTo(pos, splitsize, out);pos += splitsize;remainingsize -= splitsize;if (remainingsize < splitsize) in.transferTo(pos, remainingsize, out);pb.setValue(100 * i / noofparts);out.close();}in.close();if (deleteOnFinish) new File(inputfile + """").delete();status.setText(""Rozdělovač: Hotovo.."");JOptionPane.showMessageDialog(null, ""Rozděleno!"", ""Rozdělovač"", JOptionPane.INFORMATION_MESSAGE);} catch (IOException ex) {}}private void readURL(URL url) throws IOException {statusLine.setText(""Opening "" + url.toExternalForm());URLConnection connection = url.openConnection();StringBuffer buffer = new StringBuffer();BufferedReader in = null;try {in = new BufferedReader(new InputStreamReader(connection.getInputStream()));String line;while ((line = in.readLine()) != null) {buffer.append(line).append('\n');statusLine.setText(""Read "" + buffer.length() + "" bytes..."");}} finally {if (in != null) in.close();}String type = connection.getContentType();if (type == null) type = ""text/plain"";statusLine.setText(""Content type "" + type);content.setContentType(type);content.setText(buffer.toString());statusLine.setText(""Done"");}public static void copyFile(File in, File out) throws IOException {FileChannel inChannel = new FileInputStream(in).getChannel();FileChannel outChannel = new FileOutputStream(out).getChannel();try {inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {throw e;} finally {if (inChannel != null) inChannel.close();if (outChannel != null) outChannel.close();}}"	5
"public static String readUrl(String urlString) {try {java.net.URL url = new java.net.URL(urlString);BufferedReader br = null;if (url != null) {br = new BufferedReader(new InputStreamReader(url.openStream()));}StringBuffer fileString = new StringBuffer();while (true) {String line = br.readLine();if (line == null) {break;}fileString.append(line + ""\n"");}return fileString.toString();} catch (Exception e) {return null;}}@Overridepublic String getMD5(String host) {String res = """";Double randNumber = Math.random() + System.currentTimeMillis();try {MessageDigest algorithm = MessageDigest.getInstance(""MD5"");algorithm.reset();algorithm.update(randNumber.toString().getBytes());byte[] md5 = algorithm.digest();String tmp = """";for (int i = 0; i < md5.length; i++) {tmp = (Integer.toHexString(0xFF & md5[i]));if (tmp.length() == 1) {res += ""0"" + tmp;} else {res += tmp;}}} catch (Exception ex) {}return res;}public static String encryptMd5(String plaintext) {String hashtext = """";try {MessageDigest m;m = MessageDigest.getInstance(""MD5"");m.reset();m.update(plaintext.getBytes());byte[] digest = m.digest();BigInteger bigInt = new BigInteger(1, digest);hashtext = bigInt.toString(16);while (hashtext.length() < 32) {hashtext = ""0"" + hashtext;}} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return hashtext;}public boolean authenticate(String userName, String loginPassword) {if (!systemConfigManager.getBool(""ldap"", ""authEnable"")) {return false;}String ldapName = userName;AkteraUser user = userDAO.findUserByName(userName);if (user != null && StringTools.isNotTrimEmpty(user.getLdapName())) {ldapName = user.getLdapName();}String server = systemConfigManager.getString(""ldap"", ""authHost"");if (StringTools.isTrimEmpty(server)) {return false;}int port = NumberTools.toInt(systemConfigManager.get(""ldap"", ""authPort""), 389);String type = StringTools.trim(systemConfigManager.getString(""ldap"", ""authType""));String baseDn = StringTools.trim(systemConfigManager.getString(""ldap"", ""authBaseDn""));String userDn = StringTools.trim(systemConfigManager.getString(""ldap"", ""authUserDn""));String password = StringTools.trim(systemConfigManager.getString(""ldap"", ""authPassword""));String query = StringTools.trim(systemConfigManager.getString(""ldap"", ""authQuery""));String bindDn = StringTools.trim(systemConfigManager.getString(""ldap"", ""authBindDn""));String passwordAttributeName = StringTools.trim(systemConfigManager.getString(""ldap"", ""authPasswordAttributeName""));Map<String, Object> params = new HashMap<String, Object>();params.put(""userName"", userName);params.put(""ldapName"", ldapName);params.put(""loginName"", StringTools.isTrimEmpty(ldapName) ? userName : ldapName);query = StringTools.replaceTemplate(query, params);bindDn = StringTools.replaceTemplate(bindDn, params);Hashtable<String, Object> env = new Hashtable<String, Object>();env.put(Context.INITIAL_CONTEXT_FACTORY, ""com.sun.jndi.ldap.LdapCtxFactory"");env.put(Context.PROVIDER_URL, ""ldap://"" + server + "":"" + port + ""/"" + baseDn);env.put(Context.SECURITY_AUTHENTICATION, ""simple"");if (""ldapAuthBind"".equals(type)) {env.put(Context.SECURITY_PRINCIPAL, bindDn);env.put(Context.SECURITY_CREDENTIALS, loginPassword);try {DirContext ctx = new InitialDirContext(env);try {ctx.close();} catch (Exception ignored) {}return true;} catch (Exception ignored) {return false;}}if (StringTools.isTrimEmpty(userDn) || StringTools.isTrimEmpty(password)) {return false;}env.put(Context.SECURITY_PRINCIPAL, userDn);env.put(Context.SECURITY_CREDENTIALS, password);DirContext ctx = null;NamingEnumeration<SearchResult> results = null;try {ctx = new InitialDirContext(env);SearchControls controls = new SearchControls();controls.setSearchScope(SearchControls.SUBTREE_SCOPE);results = ctx.search("""", query, controls);if (results.hasMore()) {SearchResult searchResult = results.next();Attributes attributes = searchResult.getAttributes();if (attributes.get(passwordAttributeName) == null) {return false;}String pass = new String((byte[]) attributes.get(passwordAttributeName).get());if (pass.startsWith(""{SHA}"") || pass.startsWith(""{MD5}"")) {String method = pass.substring(1, pass.indexOf('}'));MessageDigest digest = MessageDigest.getInstance(method);digest.update(loginPassword.getBytes(), 0, loginPassword.length());if (pass.equals(""{"" + method + ""}"" + Base64.encode(digest.digest()))) {return true;}} else {if (pass.equals(loginPassword)) {return true;}}}} catch (Exception x) {} finally {if (results != null) {try {results.close();} catch (Exception e) {}}if (ctx != null) {try {ctx.close();} catch (Exception e) {}}}return false;}public ActualTask(TEditor editor, TIGDataBase dataBase, String directoryPath) {File myDirectory = new File(directoryPath);int i;Vector images = new Vector();images = dataBase.allImageSearch();lengthOfTask = images.size() * 2;String directory = directoryPath + ""Images"" + myDirectory.separator;File newDirectoryFolder = new File(directory);newDirectoryFolder.mkdirs();try {DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance();DocumentBuilder domBuilder = domFactory.newDocumentBuilder();doc = domBuilder.newDocument();} catch (Exception exc) {System.out.println(exc.getMessage());System.out.println(exc.toString());}Element dbElement = doc.createElement(""dataBase"");for (i = 0; ((i < images.size()) && !stop); i++) {current = i;String element = (String) images.elementAt(i);String pathSrc = ""Images"" + File.separator + element.substring(0, 1).toUpperCase() + File.separator + element;String name = pathSrc.substring(pathSrc.lastIndexOf(myDirectory.separator) + 1, pathSrc.length());String pathDst = directory + name;try {FileChannel srcChannel = new FileInputStream(pathSrc).getChannel();FileChannel dstChannel = new FileOutputStream(pathDst).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (IOException exc) {System.out.println(exc.getMessage());System.out.println(exc.toString());}Vector keyWords = new Vector();keyWords = dataBase.asociatedConceptSearch((String) images.elementAt(i));Element imageElement = doc.createElement(""image"");Element imageNameElement = doc.createElement(""name"");imageNameElement.appendChild(doc.createTextNode(name));imageElement.appendChild(imageNameElement);for (int j = 0; j < keyWords.size(); j++) {Element keyWordElement = doc.createElement(""keyWord"");keyWordElement.appendChild(doc.createTextNode((String) keyWords.elementAt(j)));imageElement.appendChild(keyWordElement);}dbElement.appendChild(imageElement);}try {doc.appendChild(dbElement);File dst = new File(directory.concat(""Images""));BufferedWriter bufferWriter = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(dst), ""UTF-8""));TransformerFactory transformerFactory = TransformerFactory.newInstance();Transformer transformer = transformerFactory.newTransformer();DOMSource source = new DOMSource(doc);StreamResult result = new StreamResult(bufferWriter);transformer.transform(source, result);bufferWriter.close();} catch (Exception exc) {System.out.println(exc.getMessage());System.out.println(exc.toString());}current = lengthOfTask;}public void insert() throws Exception {Connection con = DbUtil.connectToDb();PreparedStatement pStmt = null;try {pStmt = con.prepareStatement(""INSERT INTO "" + Constants.TABLENAME + "" (name,phone,address)"" + "" values(?,?,?)"");con.setAutoCommit(false);pStmt.setString(1, name);pStmt.setString(2, phone);pStmt.setString(3, address);int j = pStmt.executeUpdate();con.commit();} catch (Exception ex) {try {con.rollback();} catch (SQLException sqlex) {sqlex.printStackTrace(System.out);}throw ex;} finally {try {pStmt.close();con.close();} catch (Exception e) {e.printStackTrace();}}}public static HttpURLConnection getHttpConn(String urlStr, String Method) throws IOException {URL url = null;HttpURLConnection connection = null;url = new URL(urlStr);connection = (HttpURLConnection) url.openConnection();connection.setDoOutput(true);connection.setDoInput(true);connection.setRequestMethod(Method);connection.setUseCaches(false);connection.connect();return connection;}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}public static void doHttpPost(String urlName, byte[] data, String contentType, String cookieData) throws InteropException {URL url = getAccessURL(urlName);try {HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.setDoOutput(true);connection.setRequestMethod(""POST"");connection.setRequestProperty(""Cookie"", cookieData);connection.setRequestProperty(""Content-type"", contentType);connection.setRequestProperty(""Content-length"", """" + data.length);OutputStream stream = connection.getOutputStream();stream.write(data);stream.flush();stream.close();connection.connect();InputStream inputStream = connection.getInputStream();inputStream.close();} catch (IOException ex) {throw new InteropException(""Error POSTing to "" + urlName, ex);}}public void copyServer(int id) throws Exception {File in = new File(""servers"" + File.separatorChar + ""server_"" + id);File serversDir = new File(""servers"" + File.separatorChar);int newNumber = serversDir.listFiles().length + 1;System.out.println(""New File Number: "" + newNumber);File out = new File(""servers"" + File.separatorChar + ""server_"" + newNumber);FileChannel inChannel = new FileInputStream(in).getChannel();FileChannel outChannel = new FileOutputStream(out).getChannel();try {inChannel.transferTo(0, inChannel.size(), outChannel);} catch (Exception e) {e.printStackTrace();} finally {if (inChannel != null) inChannel.close();if (outChannel != null) outChannel.close();}getServer(newNumber - 1);}"	5
"private void convertClasses(File source, File destination) throws PostProcessingException, CodeCheckException, IOException {Stack sourceStack = new Stack();Stack destinationStack = new Stack();sourceStack.push(source);destinationStack.push(destination);while (!sourceStack.isEmpty()) {source = (File) sourceStack.pop();destination = (File) destinationStack.pop();if (!destination.exists()) destination.mkdirs();File[] files = source.listFiles();for (int i = 0; i < files.length; i++) {File current = (File) files[i];if (current.isDirectory()) {sourceStack.push(current);destinationStack.push(new File(destination, current.getName()));} else if (current.getName().endsWith("".class"")) {ClassWriter writer = new ClassWriter();InputStream is = new BufferedInputStream(new FileInputStream(current));writer.readClass(is);is.close();if ((getStatusFlags(writer.getClassName(writer.getCurrentClassIndex())) & PP_PROCESSED) != 0) {ClassWriter[] auxWriter = new ClassWriter[1];transformClass(writer, auxWriter);File output = new File(destination, current.getName());OutputStream os = new BufferedOutputStream(new FileOutputStream(output));writer.writeClass(os);os.close();if (auxWriter[0] != null) {String className = auxWriter[0].getClassName(auxWriter[0].getCurrentClassIndex());className = className.substring(className.lastIndexOf('.') + 1, className.length());output = new File(destination, className + "".class"");os = new BufferedOutputStream(new FileOutputStream(output));auxWriter[0].writeClass(os);os.close();}}}}}}public String sendSMS(String destinationNumber, String txt, String id) throws IOException {String out = """";String smsdata = """";smsdata += URLEncoder.encode(""id"", enc) + ""="" + URLEncoder.encode(id, enc);smsdata += ""&"" + URLEncoder.encode(""phoneNumber"", enc) + ""="" + URLEncoder.encode(destinationNumber, enc);smsdata += ""&"" + URLEncoder.encode(""conversationId"", enc) + ""="" + URLEncoder.encode(id, enc);smsdata += ""&"" + URLEncoder.encode(""text"", enc) + ""="" + URLEncoder.encode(txt, enc);smsdata += ""&"" + URLEncoder.encode(""_rnr_se"", enc) + ""="" + URLEncoder.encode(rnrSEE, enc);System.out.println(""smsdata: "" + smsdata);URL smsurl = new URL(""https://www.google.com/voice/b/0/sms/send/"");URLConnection smsconn = smsurl.openConnection();smsconn.setRequestProperty(""Authorization"", ""GoogleLogin auth="" + authToken);smsconn.setRequestProperty(""User-agent"", USER_AGENT);smsconn.setDoOutput(true);OutputStreamWriter callwr = new OutputStreamWriter(smsconn.getOutputStream());callwr.write(smsdata);callwr.flush();BufferedReader callrd = new BufferedReader(new InputStreamReader(smsconn.getInputStream()));String line;while ((line = callrd.readLine()) != null) {out += line + ""\n\r"";}callwr.close();callrd.close();if (out.equals("""")) {throw new IOException(""No Response Data Received."");}return out;}public static void changeStructure(double version) throws DException {try {Class cl = Class.forName(""com.daffodilwoods.daffodildb.server.datadictionarysystem.SystemTablesCreator"");java.net.URL urlw = cl.getResource(""/com/daffodilwoods/daffodildb/server/datadictionarysystem/systemtablesStructure.obj"");ObjectInputStream ois = new ObjectInputStream(new BufferedInputStream(urlw.openStream()));structureMap = (HashMap) ois.readObject();if (version >= 3.4) {Object[][] columnsTableStructure = (Object[][]) structureMap.get((Object) SystemTables.columns_TableName);columnsTableStructure[9][2] = new Integer(1027);}ois.close();} catch (IOException ex) {} catch (ClassNotFoundException ex) {}}@Overridepublic void execute() throws BuildException {if (this.toFile == null && this.toDir == null) throw new BuildException(""Missing Destination File/Dir"");if (this.toFile != null && this.toDir != null) throw new BuildException(""Both Defined Destination File/Dir"");if (this.urlStr == null) throw new BuildException(""Missing URL"");URL base = null;try {if (baseStr != null) base = new URL(this.baseStr + (baseStr.endsWith(""/"") ? """" : ""/""));} catch (MalformedURLException e) {throw new BuildException(e);}String tokens[] = this.urlStr.split(""[ \t\n]+"");try {for (String nextURL : tokens) {nextURL = nextURL.trim();if (nextURL.length() == 0) continue;URL url = null;try {url = new URL(base, nextURL);} catch (MalformedURLException e) {throw new BuildException(e);}File dest = null;if (this.toDir != null) {String file = url.getFile();int i = file.lastIndexOf('/');if (i != -1 && i + 1 != file.length()) file = file.substring(i + 1);dest = new File(this.toDir, file);} else {dest = this.toFile;}if (dest.exists()) continue;byte buff[] = new byte[2048];FileOutputStream out = new FileOutputStream(dest);InputStream in = url.openStream();int n = 0;while ((n = in.read(buff)) != -1) {out.write(buff, 0, n);}in.close();out.flush();out.close();System.out.println(""Downloaded "" + url + "" to "" + dest);}} catch (IOException e) {throw new BuildException(e);}}public static byte[] resolveRef(String url) throws MalformedURLException, IOException {ByteArrayOutputStream out = new ByteArrayOutputStream();URL addressurl = new URL(url);InputStream in = addressurl.openStream();BufferedReader bin = new BufferedReader(new InputStreamReader(in));int bufferSize = 4096;byte[] buffer = new byte[bufferSize];int bytesRead;while ((bytesRead = in.read(buffer, 0, bufferSize)) != -1) {out.write(buffer, 0, bytesRead);out.flush();}return out.toByteArray();}private String encryptPassword(String password) throws NoSuchAlgorithmException {MessageDigest encript = MessageDigest.getInstance(""MD5"");encript.update(password.getBytes());byte[] b = encript.digest();int size = b.length;StringBuffer h = new StringBuffer(size);for (int i = 0; i < size; i++) {h.append(b[i]);}return h.toString();}public static void doVersionCheck(View view) {view.showWaitCursor();try {URL url = new URL(jEdit.getProperty(""version-check.url""));InputStream in = url.openStream();BufferedReader bin = new BufferedReader(new InputStreamReader(in));String line;String develBuild = null;String stableBuild = null;while ((line = bin.readLine()) != null) {if (line.startsWith("".build"")) develBuild = line.substring(6).trim(); else if (line.startsWith("".stablebuild"")) stableBuild = line.substring(12).trim();}bin.close();if (develBuild != null && stableBuild != null) {doVersionCheck(view, stableBuild, develBuild);}} catch (IOException e) {String[] args = { jEdit.getProperty(""version-check.url""), e.toString() };GUIUtilities.error(view, ""read-error"", args);}view.hideWaitCursor();}public void run() {try {ThreadGroup transfers = new ThreadGroup(""transfers"");URL url = new URL(""jar:http://jopenrpg.sourceforge.net/files/dev/pythonlib.jar!/"");JarURLConnection juc = (JarURLConnection) url.openConnection();File top = new File(System.getProperty(""user.home""), ""jopenrpg"");final JarFile jarfile = juc.getJarFile();Enumeration enumer = jarfile.entries();while (enumer.hasMoreElements()) {final JarEntry entry = (JarEntry) enumer.nextElement();final File f = new File(top, entry.getName());if (entry.isDirectory()) {f.mkdirs();} else {if (!entry.getName().startsWith(""META-INF"")) new Thread(transfers, new Runnable() {public void run() {try {BufferedReader br = new BufferedReader(new InputStreamReader(jarfile.getInputStream(entry)));BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(f)));StringBuffer buf = new StringBuffer();while (br.ready()) {buf.append(br.read());}bw.write(buf.toString(), 0, buf.length());bw.close();br.close();} catch (Exception ex) {System.out.println(ex);}}}).start();}}while (transfers.activeCount() > 0) yield();SwingUtilities.invokeLater(new Runnable() {public void run() {JOptionPane.showMessageDialog(ReferenceManager.getInstance().getMainFrame(), ""Jython libraries installed."");}});} catch (Exception ex) {ex.printStackTrace();}}public static void copyFile(File src, File dst) throws IOException {InputStream in = new FileInputStream(src);OutputStream out = new FileOutputStream(dst);byte[] buf = new byte[1024];int len;while ((len = in.read(buf)) > 0) out.write(buf, 0, len);in.close();out.close();}public void run() {try {URL url = new URL(""http://mydiversite.appspot.com/version.html"");BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = reader.readLine()) != null) {System.out.println(line);}reader.close();} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}}"	5
"public static byte[] getHashedID(String ID) {try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.reset();md5.update(ID.getBytes());byte[] digest = md5.digest();byte[] bytes = new byte[WLDB_ID_SIZE];for (int i = 0; i < bytes.length; i++) {bytes[i] = digest[i];}return bytes;} catch (NoSuchAlgorithmException exception) {System.err.println(""Java VM is not compatible"");return null;}}private boolean saveDocumentXml(String repository, String tempRepo) {boolean result = true;try {XPath xpath = XPathFactory.newInstance().newXPath();String expression = ""documents/document"";InputSource insource = new InputSource(new FileInputStream(tempRepo + File.separator + AppConstants.DMS_XML));NodeList nodeList = (NodeList) xpath.evaluate(expression, insource, XPathConstants.NODESET);for (int i = 0; i < nodeList.getLength(); i++) {Node node = nodeList.item(i);System.out.println(node.getNodeName());DocumentModel document = new DocumentModel();NodeList childs = node.getChildNodes();for (int j = 0; j < childs.getLength(); j++) {Node child = childs.item(j);if (child.getNodeType() == Node.ELEMENT_NODE) {if (child.getNodeName() != null && child.getFirstChild() != null && child.getFirstChild().getNodeValue() != null) {System.out.println(child.getNodeName() + ""::"" + child.getFirstChild().getNodeValue());}if (Document.FLD_ID.equals(child.getNodeName())) {if (child.getFirstChild() != null) {String szId = child.getFirstChild().getNodeValue();if (szId != null && szId.length() > 0) {try {document.setId(new Long(szId));} catch (Exception e) {e.printStackTrace();}}}} else if (document.FLD_NAME.equals(child.getNodeName())) {document.setName(child.getFirstChild().getNodeValue());document.setTitle(document.getName());document.setDescr(document.getName());document.setExt(getExtension(document.getName()));} else if (document.FLD_LOCATION.equals(child.getNodeName())) {document.setLocation(child.getFirstChild().getNodeValue());} else if (document.FLD_OWNER.equals(child.getNodeName())) {Long id = new Long(child.getFirstChild().getNodeValue());User user = new UserModel();user.setId(id);user = (User) userService.find(user);if (user != null && user.getId() != null) {document.setOwner(user);}}}}boolean isSave = docService.save(document);if (isSave) {String repo = preference.getRepository();Calendar calendar = Calendar.getInstance();StringBuffer sbRepo = new StringBuffer(repo);sbRepo.append(File.separator);StringBuffer sbFolder = new StringBuffer(sdf.format(calendar.getTime()));sbFolder.append(File.separator).append(calendar.get(Calendar.HOUR_OF_DAY));File fileFolder = new File(sbRepo.append(sbFolder).toString());if (!fileFolder.exists()) {fileFolder.mkdirs();}FileChannel fcSource = null, fcDest = null;try {StringBuffer sbFile = new StringBuffer(fileFolder.getAbsolutePath());StringBuffer fname = new StringBuffer(document.getId().toString());fname.append(""."").append(document.getExt());sbFile.append(File.separator).append(fname);fcSource = new FileInputStream(tempRepo + File.separator + document.getName()).getChannel();fcDest = new FileOutputStream(sbFile.toString()).getChannel();fcDest.transferFrom(fcSource, 0, fcSource.size());document.setLocation(sbFolder.toString());document.setSize(fcSource.size());log.info(""Batch upload file "" + document.getName() + "" into ["" + document.getLocation() + ""] as "" + document.getName() + ""."" + document.getExt());folder.setId(DEFAULT_FOLDER);folder = (Folder) folderService.find(folder);if (folder != null && folder.getId() != null) {document.setFolder(folder);}workspace.setId(DEFAULT_WORKSPACE);workspace = (Workspace) workspaceService.find(workspace);if (workspace != null && workspace.getId() != null) {document.setWorkspace(workspace);}user.setId(DEFAULT_USER);user = (User) userService.find(user);if (user != null && user.getId() != null) {document.setCrtby(user.getId());}document.setCrtdate(new Date());document = (DocumentModel) docService.resetDuplicateDocName(document);docService.save(document);DocumentIndexer.indexDocument(preference, document);} catch (FileNotFoundException notFoundEx) {log.error(""saveFile file not found: "" + document.getName(), notFoundEx);} catch (IOException ioEx) {log.error(""saveFile IOException: "" + document.getName(), ioEx);} finally {try {if (fcSource != null) {fcSource.close();}if (fcDest != null) {fcDest.close();}} catch (Exception e) {log.error(e.getMessage(), e);}}}}} catch (Exception e) {result = false;e.printStackTrace();}return result;}public String hash(String text) {try {MessageDigest md = MessageDigest.getInstance(hashFunction);md.update(text.getBytes(charset));byte[] raw = md.digest();return new String(encodeHex(raw));} catch (Exception e) {throw new RuntimeException(e);}}String readArticleFromFile(String urlStr) {String docbase = getDocumentBase().toString();int pos = docbase.lastIndexOf('/');if (pos > -1) {docbase = docbase.substring(0, pos + 1);} else {docbase = """";}docbase = docbase + urlStr;String prog = """";try {URL url = new URL(docbase);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));if (in != null) {while (true) {try {String mark = in.readLine();if (mark == null) break;prog = prog + mark + ""\n"";} catch (Exception e) {}}in.close();}} catch (Exception e) {}return prog;}private void populatePortfolioEntry(ActionResponse resp, PortfolioEntry e, String market) throws Exception {String tmp = getURL(market, e);if (tmp == null) {tmp = URL_QUOTE_DATA;}tmp = tmp.replace(""@"", e.getSymbol());URL url = new URL(tmp);HttpURLConnection conn = (HttpURLConnection) url.openConnection();BufferedReader in = null;try {int status = conn.getResponseCode();if (status == 200) {in = new BufferedReader(new InputStreamReader(conn.getInputStream()));StringBuffer responseBody = new StringBuffer();while (true) {String line = in.readLine();if (line == null) break;responseBody.append(line);}ArrayList<String> data = parseData(responseBody.toString(), "","");if (data.size() == 2) {e.setName(MiscUtils.trimChars(data.get(0), '""'));String val = data.get(1);val = MiscUtils.trimChars(val.trim(), '\r');val = MiscUtils.trimChars(val.trim(), '\n');BigDecimal d = new BigDecimal(val);e.setPricePerShare(d);} else {resp.setErrorCode(ActionResponse.GENERAL_ERROR);resp.setErrorMessage(""Error retrieving data"");}} else {resp.setErrorCode(ActionResponse.GENERAL_ERROR);resp.setErrorMessage(""Error retrieving data Http code: "" + status);}} finally {if (in != null) in.close();}}public void testStreamURL() throws Exception {boolean ok = false;String url = ""http://www.apache.org/dist/lucene/solr/"";String txt = null;try {txt = IOUtils.toString(new URL(url).openStream());} catch (Exception ex) {fail(""this test only works if you have a network connection."");return;}SolrCore core = h.getCore();Map<String, String[]> args = new HashMap<String, String[]>();args.put(CommonParams.STREAM_URL, new String[] { url });List<ContentStream> streams = new ArrayList<ContentStream>();parser.buildRequestFrom(core, new MultiMapSolrParams(args), streams);assertEquals(1, streams.size());assertEquals(txt, IOUtils.toString(streams.get(0).getStream()));}public static String hashPassword(String password) {String hashword = null;try {MessageDigest md5 = MessageDigest.getInstance(MESSAGE_DIGEST_ALGORITHM_MD5);md5.update(password.getBytes());BigInteger hash = new BigInteger(1, md5.digest());hashword = hash.toString(16);} catch (NoSuchAlgorithmException e) {logger.error(""Cannot find algorithm = '"" + MESSAGE_DIGEST_ALGORITHM_MD5 + ""'"", e);throw new IllegalStateException(e);}return pad(hashword, 32, '0');}public void run() {BufferedReader reader = null;log = ""Downloading... "" + name;setChanged();notifyObservers();try {Date marker = to;int previousSize = 0;list.clear();do {previousSize = list.size();URL url = new URL(createLink(from, marker));reader = new BufferedReader(new InputStreamReader(url.openStream()));String line = """";while ((line = reader.readLine()) != null) {try {IQuoteHistorical quote = parse(line + "","");if (quote != null && !list.contains(quote)) list.add(quote); else System.err.println(line);} catch (ParseException e) {e.printStackTrace();}}if (list.size() > 0) marker = list.get(list.size() - 1).getData();} while (marker.after(from) && previousSize != list.size());log = ""download Completed!"";} catch (MalformedURLException e) {e.printStackTrace();log = e.getMessage();} catch (IOException e) {e.printStackTrace();log = e.getMessage();} finally {try {if (reader != null) reader.close();} catch (IOException e) {e.printStackTrace();log = e.getMessage();}}setChanged();notifyObservers();}public void transaction() {String delPets = ""delete from PETS where PERSON_ID = 1"";String delPersons = ""delete from PERSONS where PERSON_ID = 1"";if (true) {System.out.println(delPets);System.out.println(delPersons);}Connection conn = null;Statement stmt = null;try {conn = ConnHelper.getConnectionByDriverManager();conn.setAutoCommit(false);stmt = conn.createStatement();int affectedRows = stmt.executeUpdate(delPets);System.out.println(""affectedRows = "" + affectedRows);if (true) {throw new SQLException(""fasfdsaf"");}affectedRows = stmt.executeUpdate(delPersons);System.out.println(""affectedRows = "" + affectedRows);conn.commit();conn.setAutoCommit(true);} catch (Exception e) {try {conn.rollback();} catch (SQLException e1) {e.printStackTrace(System.out);}e.printStackTrace(System.out);} finally {ConnHelper.close(conn, stmt, null);}}protected String getLibJSCode() throws IOException {if (cachedLibJSCode == null) {InputStream is = getClass().getResourceAsStream(JS_LIB_FILE);StringWriter output = new StringWriter();IOUtils.copy(is, output);cachedLibJSCode = output.toString();}return cachedLibJSCode;}"	5
"@Override@Transactionalpublic FileData store(FileData data, InputStream stream) {try {FileData file = save(data);file.setPath(file.getGroup() + File.separator + file.getId());file = save(file);File folder = new File(PATH, file.getGroup());if (!folder.exists()) folder.mkdirs();File filename = new File(folder, file.getId() + """");IOUtils.copyLarge(stream, new FileOutputStream(filename));return file;} catch (IOException e) {throw new ServiceException(""storage"", e);}}@PostConstructpublic void init() {logger.info(""+++++ TRACAuditChecklistWizardMB: init() start ++++++++"");try {tracSectionAll = new ArrayList<TRACCriteriaCheckListItem>();List<TRACCriteriaCheckListItem> tracSectionA = new ArrayList<TRACCriteriaCheckListItem>();List<TRACCriteriaCheckListItem> tracSectionB = new ArrayList<TRACCriteriaCheckListItem>();List<TRACCriteriaCheckListItem> tracSectionC = new ArrayList<TRACCriteriaCheckListItem>();URL url = TRACAuditChecklistManagedBean.class.getResource(tracCriteriaPropertiesFileName);tracCriteriaCheckList = new LinkedProperties();tracCriteriaCheckList.load(url.openStream());Set<String> tmpKeys = tracCriteriaCheckList.stringPropertyNames();List<String> sortWrkList = new ArrayList<String>();sortWrkList.addAll(tmpKeys);sortList(sortWrkList);for (String key : sortWrkList) {String aspectCode = key.substring(aspectCodeOffsetValue);logger.info(""aspectCode="" + aspectCode);if (aspectCode.startsWith(""A"")) {if (aspectCode.equals(""A"")) {sectionAcaption = tracCriteriaCheckList.getProperty(key);} else {if (aspectCode.length() == 4) {tracSectionAll.add(new TRACCriteriaCheckListItem(aspectCode, tracCriteriaCheckList.getProperty(key), """", """", """"));}}} else if (aspectCode.startsWith(""B"")) {if (aspectCode.equals(""B"")) {sectionBcaption = tracCriteriaCheckList.getProperty(key);} else {if (aspectCode.length() == 4) {tracSectionAll.add(new TRACCriteriaCheckListItem(aspectCode, tracCriteriaCheckList.getProperty(key), """", """", """"));}}} else if (aspectCode.startsWith(""C"")) {if (aspectCode.equals(""C"")) {sectionCcaption = tracCriteriaCheckList.getProperty(key);} else {if (aspectCode.length() == 4) {tracSectionAll.add(new TRACCriteriaCheckListItem(aspectCode, tracCriteriaCheckList.getProperty(key), """", """", """"));}}} else {logger.warning(""offset value is wrong: 16th character must be A or B or C"");}}} catch (FileNotFoundException ex) {logger.log(Level.WARNING, ""specified properties file was not found"", ex);} catch (IOException ex) {logger.log(Level.WARNING, ""IO error occurred"", ex);} finally {}logger.info(""+++++ TRACAuditChecklistWizardMB: init() end++++++++"");}protected Document fetchResource(String method, String parameter, Locale locale, final FloodLimit limit) throws IOException, SAXException {return getDocument(new CachedPage(getResourceLocation(method, parameter, locale)) {@Overrideprotected Reader openConnection(URL url) throws IOException {try {if (limit != null) {limit.acquirePermit();}return super.openConnection(url);} catch (InterruptedException e) {throw new IOException(e);}};}.get());}@Overrideprotected Reader openConnection(URL url) throws IOException {try {if (limit != null) {limit.acquirePermit();}return super.openConnection(url);} catch (InterruptedException e) {throw new IOException(e);}}public AssessmentItemType getAssessmentItemType(String filename) {if (filename.contains("" "") && (System.getProperty(""os.name"").contains(""Windows""))) {File source = new File(filename);String tempDir = System.getenv(""TEMP"");File dest = new File(tempDir + ""/temp.xml"");MQMain.logger.info(""Importing from "" + dest.getAbsolutePath());FileChannel in = null, out = null;try {in = new FileInputStream(source).getChannel();out = new FileOutputStream(dest).getChannel();long size = in.size();MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buf);} catch (Exception e) {e.printStackTrace();} finally {if (in != null) try {in.close();} catch (IOException e) {e.printStackTrace();}if (out != null) try {out.close();} catch (IOException e) {e.printStackTrace();}filename = tempDir + ""/temp.xml"";}}AssessmentItemType assessmentItemType = null;JAXBElement<?> jaxbe = null;try {XMLReader reader = XMLReaderFactory.createXMLReader();ChangeNamespace convertfromv2p0tov2p1 = new ChangeNamespace(reader, ""http://www.imsglobal.org/xsd/imsqti_v2p0"", ""http://www.imsglobal.org/xsd/imsqti_v2p1"");SAXSource source = null;try {FileInputStream fis = new FileInputStream(filename);InputStreamReader isr = null;try {isr = new InputStreamReader(fis, ""UTF-8"");} catch (UnsupportedEncodingException e) {}InputSource is = new InputSource(isr);source = new SAXSource(convertfromv2p0tov2p1, is);} catch (FileNotFoundException e) {MQMain.logger.error(""SAX/getAssessmentItemType/file not found"");}jaxbe = (JAXBElement<?>) MQModel.qtiCf.unmarshal(MQModel.imsqtiUnmarshaller, source);assessmentItemType = (AssessmentItemType) jaxbe.getValue();} catch (JAXBException e) {MQMain.logger.error(""JAX/getAssessmentItemType"", e);} catch (SAXException e) {MQMain.logger.error(""SAX/getAssessmentItemType"", e);}return assessmentItemType;}public final int wordFrequency(String word) {String replWebQuery = webQuery.replaceFirst(""WORDREPLACE"", word);try {URL url = new URL(replWebQuery);String content = url.toString();BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String inputLine;while ((inputLine = in.readLine()) != null) {if (inputLine.matches(nrResultsPattern)) {int fr = matchedLine(inputLine);if (fr >= 0) {return fr;}}}} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return 0;}public void store(Component component, String componentName, int currentPilot) {try {PreparedStatement psta = jdbc.prepareStatement(""UPDATE component_prop "" + ""SET size_height = ?, size_width = ?, pos_x = ?, pos_y = ? "" + ""WHERE pilot_id = ? "" + ""AND component_name = ?"");psta.setInt(1, component.getHeight());psta.setInt(2, component.getWidth());Point point = component.getLocation();psta.setInt(3, point.x);psta.setInt(4, point.y);psta.setInt(5, currentPilot);psta.setString(6, componentName);int update = psta.executeUpdate();if (update == 0) {psta = jdbc.prepareStatement(""INSERT INTO component_prop "" + ""(size_height, size_width, pos_x, pos_y, pilot_id, component_name) "" + ""VALUES (?,?,?,?,?,?)"");psta.setInt(1, component.getHeight());psta.setInt(2, component.getWidth());psta.setInt(3, point.x);psta.setInt(4, point.y);psta.setInt(5, currentPilot);psta.setString(6, componentName);psta.executeUpdate();}jdbc.commit();} catch (SQLException e) {jdbc.rollback();log.debug(e);}}public void reset(String componentName, int currentPilot) {try {PreparedStatement psta = jdbc.prepareStatement(""DELETE FROM component_prop "" + ""WHERE pilot_id = ? "" + ""AND component_name = ?"");psta.setInt(1, currentPilot);psta.setString(2, componentName);psta.executeUpdate();jdbc.commit();} catch (SQLException e) {jdbc.rollback();log.debug(e);}}public void reset(int currentPilot) {try {PreparedStatement psta = jdbc.prepareStatement(""DELETE FROM component_prop "" + ""WHERE pilot_id = ? "");psta.setInt(1, currentPilot);psta.executeUpdate();jdbc.commit();} catch (SQLException e) {jdbc.rollback();log.debug(e);}}private void Connect() throws NpsException {try {client = new FTPClient();client.connect(host.hostname, host.remoteport);int reply = client.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {client.disconnect();client = null;nps.util.DefaultLog.error_noexception(""FTP Server:"" + host.hostname + ""refused connection."");return;}client.login(host.uname, host.upasswd);client.enterLocalPassiveMode();client.setFileType(FTPClient.BINARY_FILE_TYPE);client.changeWorkingDirectory(host.remotedir);} catch (Exception e) {nps.util.DefaultLog.error(e);}}"	5
"private void analyseCorpus(final IStatusDisplayer fStatus) {final String sDistrosFile = ""Distros.tmp"";final String sSymbolsFile = ""Symbols.tmp"";Chunker = new EntropyChunker();int Levels = 2;sgOverallGraph = new SymbolicGraph(1, Levels);siIndex = new SemanticIndex(sgOverallGraph);try {siIndex.MeaningExtractor = new LocalWordNetMeaningExtractor();} catch (IOException ioe) {siIndex.MeaningExtractor = null;}try {DocumentSet dsSet = new DocumentSet(FilePathEdt.getText(), 1.0);dsSet.createSets(true, (double) 100 / 100);int iCurCnt, iTotal;String sFile = """";Iterator iIter = dsSet.getTrainingSet().iterator();iTotal = dsSet.getTrainingSet().size();if (iTotal == 0) {appendToLog(""No input documents.\n"");appendToLog(""======DONE=====\n"");return;}appendToLog(""Training chunker..."");Chunker.train(dsSet.toFilenameSet(DocumentSet.FROM_WHOLE_SET));appendToLog(""Setting delimiters..."");setDelimiters(Chunker.getDelimiters());iCurCnt = 0;cdDoc = new DistributionDocument[Levels];for (int iCnt = 0; iCnt < Levels; iCnt++) cdDoc[iCnt] = new DistributionDocument(1, MinLevel + iCnt);fStatus.setVisible(true);ThreadList t = new ThreadList(Runtime.getRuntime().availableProcessors() + 1);appendToLog(""(Pass 1/3) Loading files..."" + sFile);TreeSet tsOverallSymbols = new TreeSet();while (iIter.hasNext()) {sFile = ((CategorizedFileEntry) iIter.next()).getFileName();fStatus.setStatus(""(Pass 1/3) Loading file..."" + sFile, (double) iCurCnt / iTotal);final DistributionDocument[] cdDocArg = cdDoc;final String sFileArg = sFile;for (int iCnt = 0; iCnt < cdDoc.length; iCnt++) {final int iCntArg = iCnt;while (!t.addThreadFor(new Runnable() {public void run() {if (!RightToLeftText) cdDocArg[iCntArg].loadDataStringFromFile(sFileArg, false); else {cdDocArg[iCntArg].setDataString(utils.reverseString(utils.loadFileToString(sFileArg)), iCntArg, false);}}})) Thread.yield();}try {t.waitUntilCompletion();} catch (InterruptedException ex) {ex.printStackTrace(System.err);appendToLog(""Interrupted..."");sgOverallGraph.removeNotificationListener();return;}sgOverallGraph.setDataString(((new StringBuffer().append((char) StreamTokenizer.TT_EOF))).toString());sgOverallGraph.loadFromFile(sFile);fStatus.setStatus(""Loaded file..."" + sFile, (double) ++iCurCnt / iTotal);Thread.yield();}Set sSymbols = null;File fPreviousSymbols = new File(sSymbolsFile);boolean bSymbolsLoadedOK = false;if (fPreviousSymbols.exists()) {System.err.println(""ATTENTION: Using previous symbols..."");try {FileInputStream fis = new FileInputStream(fPreviousSymbols);ObjectInputStream ois = new ObjectInputStream(fis);sSymbols = (Set) ois.readObject();ois.close();bSymbolsLoadedOK = true;} catch (FileNotFoundException ex) {ex.printStackTrace(System.err);} catch (IOException ex) {ex.printStackTrace(System.err);} catch (ClassNotFoundException ex) {ex.printStackTrace(System.err);}}if (!bSymbolsLoadedOK) sSymbols = getSymbolsByProbabilities(sgOverallGraph.getDataString(), fStatus);int iMinSymbolSize = Integer.MAX_VALUE;int iMaxSymbolSize = Integer.MIN_VALUE;Iterator iSymbol = sSymbols.iterator();while (iSymbol.hasNext()) {String sCurSymbol = (String) iSymbol.next();if (iMaxSymbolSize < sCurSymbol.length()) iMaxSymbolSize = sCurSymbol.length();if (iMinSymbolSize > sCurSymbol.length()) iMinSymbolSize = sCurSymbol.length();}try {FileOutputStream fos = new FileOutputStream(sSymbolsFile);ObjectOutputStream oos = new ObjectOutputStream(fos);oos.writeObject(sSymbols);oos.close();} catch (FileNotFoundException ex) {ex.printStackTrace(System.err);} catch (IOException ex) {ex.printStackTrace(System.err);}appendToLog(""(Pass 2/3) Determining symbol distros per n-gram size..."");iIter = dsSet.getTrainingSet().iterator();iTotal = dsSet.getTrainingSet().size();if (iTotal == 0) {appendToLog(""No input documents.\n"");appendToLog(""======DONE=====\n"");return;}iCurCnt = 0;Distribution dSymbolsPerSize = new Distribution();Distribution dNonSymbolsPerSize = new Distribution();Distribution dSymbolSizes = new Distribution();File fPreviousRun = new File(sDistrosFile);boolean bDistrosLoadedOK = false;if (fPreviousRun.exists()) {System.err.println(""ATTENTION: Using previous distros..."");try {FileInputStream fis = new FileInputStream(fPreviousRun);ObjectInputStream ois = new ObjectInputStream(fis);dSymbolsPerSize = (Distribution) ois.readObject();dNonSymbolsPerSize = (Distribution) ois.readObject();dSymbolSizes = (Distribution) ois.readObject();ois.close();bDistrosLoadedOK = true;} catch (FileNotFoundException ex) {ex.printStackTrace(System.err);} catch (IOException ex) {ex.printStackTrace(System.err);dSymbolsPerSize = new Distribution();dNonSymbolsPerSize = new Distribution();dSymbolSizes = new Distribution();} catch (ClassNotFoundException ex) {ex.printStackTrace(System.err);dSymbolsPerSize = new Distribution();dNonSymbolsPerSize = new Distribution();dSymbolSizes = new Distribution();}}if (!bDistrosLoadedOK) while (iIter.hasNext()) {fStatus.setStatus(""(Pass 2/3) Parsing file..."" + sFile, (double) iCurCnt++ / iTotal);sFile = ((CategorizedFileEntry) iIter.next()).getFileName();String sDataString = """";try {ByteArrayOutputStream bsOut = new ByteArrayOutputStream();FileInputStream fiIn = new FileInputStream(sFile);int iData = 0;while ((iData = fiIn.read()) > -1) bsOut.write(iData);sDataString = bsOut.toString();} catch (IOException ioe) {ioe.printStackTrace(System.err);}final Distribution dSymbolsPerSizeArg = dSymbolsPerSize;final Distribution dNonSymbolsPerSizeArg = dNonSymbolsPerSize;final Distribution dSymbolSizesArg = dSymbolSizes;final String sDataStringArg = sDataString;final Set sSymbolsArg = sSymbols;for (int iSymbolSize = iMinSymbolSize; iSymbolSize <= iMaxSymbolSize; iSymbolSize++) {final int iSymbolSizeArg = iSymbolSize;while (!t.addThreadFor(new Runnable() {public void run() {NGramDocument ndCur = new NGramDocument(iSymbolSizeArg, iSymbolSizeArg, 1, iSymbolSizeArg, iSymbolSizeArg);ndCur.setDataString(sDataStringArg);int iSymbolCnt = 0;int iNonSymbolCnt = 0;Iterator iExtracted = ndCur.getDocumentGraph().getGraphLevel(0).getVertexSet().iterator();while (iExtracted.hasNext()) {String sCur = ((Vertex) iExtracted.next()).toString();if (sSymbolsArg.contains(sCur)) {iSymbolCnt++;synchronized (dSymbolSizesArg) {dSymbolSizesArg.setValue(sCur.length(), dSymbolSizesArg.getValue(sCur.length()) + 1.0);}} else iNonSymbolCnt++;}synchronized (dSymbolsPerSizeArg) {dSymbolsPerSizeArg.setValue(iSymbolSizeArg, dSymbolsPerSizeArg.getValue(iSymbolSizeArg) + iSymbolCnt);}synchronized (dNonSymbolsPerSizeArg) {dNonSymbolsPerSizeArg.setValue(iSymbolSizeArg, dNonSymbolsPerSizeArg.getValue(iSymbolSizeArg) + iNonSymbolCnt);}}})) Thread.yield();}}if (!bDistrosLoadedOK) try {t.waitUntilCompletion();try {FileOutputStream fos = new FileOutputStream(sDistrosFile);ObjectOutputStream oos = new ObjectOutputStream(fos);oos.writeObject(dSymbolsPerSize);oos.writeObject(dNonSymbolsPerSize);oos.writeObject(dSymbolSizes);oos.close();} catch (FileNotFoundException ex) {ex.printStackTrace(System.err);} catch (IOException ex) {ex.printStackTrace(System.err);}} catch (InterruptedException ex) {appendToLog(""Interrupted..."");sgOverallGraph.removeNotificationListener();return;}appendToLog(""\n(Pass 3/3) Determining optimal n-gram range...\n"");NGramSizeEstimator nseEstimator = new NGramSizeEstimator(dSymbolsPerSize, dNonSymbolsPerSize);IntegerPair p = nseEstimator.getOptimalRange();appendToLog(""\nProposed n-gram sizes:"" + p.first() + "","" + p.second());fStatus.setStatus(""Determining optimal distance..."", 0.0);DistanceEstimator de = new DistanceEstimator(dSymbolsPerSize, dNonSymbolsPerSize, nseEstimator);int iBestDist = de.getOptimalDistance(1, nseEstimator.getMaxRank() * 2, p.first(), p.second());fStatus.setStatus(""Determining optimal distance..."", 1.0);appendToLog(""\nOptimal distance:"" + iBestDist);appendToLog(""======DONE=====\n"");} finally {sgOverallGraph.removeNotificationListener();}}private static void readAndRewrite(File inFile, File outFile) throws IOException {ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);Dataset ds = DcmObjectFactory.getInstance().newDataset();dcmParser.setDcmHandler(ds.getDcmHandler());dcmParser.parseDcmFile(null, Tags.PixelData);PixelDataReader pdReader = pdFact.newReader(ds, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());System.out.println(""reading "" + inFile + ""..."");pdReader.readPixelData(false);ImageOutputStream out = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;ds.writeDataset(out, dcmEncParam);ds.writeHeader(out, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());System.out.println(""writing "" + outFile + ""..."");PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, ds, out, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());pdWriter.writePixelData();out.flush();out.close();System.out.println(""done!"");}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer(128);try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {logger.error(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer(32);for (int j = 0; j < array.length; ++j) {int b = array[j] & TWO_BYTES;if (b < PAD_BELOW) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {logger.error(""Error:"" + e);}}void ProcessRequests(DataInputStream in, PrintStream out) {String sQuery;while (true) {try {sQuery = in.readLine();if (sQuery == null) return;if (sQuery.startsWith(""select"")) {ProcessQuery(sQuery, out);} else if (sQuery.startsWith(""insert"")) {Statement stmt = con.createStatement();stmt.executeUpdate(sQuery);} else if (sQuery.startsWith(""update"")) {Statement stmt = con.createStatement();stmt.executeUpdate(sQuery);} else if (sQuery.startsWith(""commit"")) {con.commit();} else if (sQuery.startsWith(""autocommit true"")) {con.setAutoCommit(true);} else if (sQuery.startsWith(""autocommit false"")) {con.setAutoCommit(false);} else if (sQuery.startsWith(""delete"")) {Statement stmt = con.createStatement();stmt.executeUpdate(sQuery);} else if (sQuery.startsWith(""rollback"")) {con.rollback();} else {out.println(""What ?"");}out.println("">"");} catch (SQLException ex) {out.println(""\n*** SQLException caught ***\n"");while (ex != null) {out.println(""SQLState: "" + ex.getSQLState());out.println(""Message:  "" + ex.getMessage());out.println(""Vendor:"" + ex.getErrorCode());ex = ex.getNextException();out.println("""");}} catch (java.lang.Exception ex) {ex.printStackTrace();}}}@Overridepublic KeySelectorResult select(KeyInfo keyInfo, Purpose purpose, AlgorithmMethod method, XMLCryptoContext context) throws KeySelectorException {try {return super.select(keyInfo, purpose, method, context);} catch (KeySelectorException e) {LOG.debug(""no key found via ds:KeyInfo key selector"");}LOG.debug(""signature resource name: "" + this.signatureResourceName);String signatureSegment = this.signatureResourceName.substring(0, this.signatureResourceName.lastIndexOf(""/""));LOG.debug(""signature segment: "" + signatureSegment);String signatureBase = this.signatureResourceName.substring(this.signatureResourceName.lastIndexOf(""/"") + 1);LOG.debug(""signature base: "" + signatureBase);String signatureRelationshipResourceName = signatureSegment + ""/_rels/"" + signatureBase + "".rels"";LOG.debug(""signature relationship resource name: "" + signatureRelationshipResourceName);ZipArchiveInputStream zipInputStream;try {zipInputStream = new ZipArchiveInputStream(this.opcUrl.openStream(), ""UTF8"", true, true);} catch (IOException e) {throw new KeySelectorException(e);}ZipArchiveEntry zipEntry;try {while (null != (zipEntry = zipInputStream.getNextZipEntry())) {if (signatureRelationshipResourceName.equals(zipEntry.getName())) {break;}}} catch (IOException e) {throw new KeySelectorException(e);}if (null == zipEntry) {LOG.warn(""relationship part not present: "" + signatureRelationshipResourceName);throw new KeySelectorException(""no key found"");}LOG.debug(""signature relationship part found"");JAXBElement<CTRelationships> signatureRelationshipsElement;try {signatureRelationshipsElement = (JAXBElement<CTRelationships>) this.relationshipsUnmarshaller.unmarshal(zipInputStream);} catch (JAXBException e) {throw new KeySelectorException(e);}CTRelationships signatureRelationships = signatureRelationshipsElement.getValue();List<CTRelationship> signatureRelationshipList = signatureRelationships.getRelationship();List<String> certificateResourceNames = new LinkedList<String>();for (CTRelationship signatureRelationship : signatureRelationshipList) {if (DIGITAL_SIGNATURE_CERTIFICATE_REL_TYPE.equals(signatureRelationship.getType())) {String certificateResourceName = signatureRelationship.getTarget().substring(1);certificateResourceNames.add(certificateResourceName);}}X509Certificate endEntityCertificate = null;for (String certificateResourceName : certificateResourceNames) {try {zipInputStream = new ZipArchiveInputStream(this.opcUrl.openStream(), ""UTF8"", true, true);} catch (IOException e) {throw new KeySelectorException(e);}try {while (null != (zipEntry = zipInputStream.getNextZipEntry())) {if (certificateResourceName.equals(zipEntry.getName())) {break;}}} catch (IOException e) {throw new KeySelectorException(e);}if (null == zipEntry) {LOG.warn(""certificate part not present: "" + certificateResourceName);continue;}X509Certificate certificate;try {certificate = (X509Certificate) this.certificateFactory.generateCertificate(zipInputStream);} catch (CertificateException e) {throw new KeySelectorException(e);}LOG.debug(""certificate subject: "" + certificate.getSubjectX500Principal());if (-1 != certificate.getBasicConstraints()) {LOG.debug(""skipping CA certificate"");continue;}if (null != endEntityCertificate) {throw new KeySelectorException(""two possible end entity certificates"");}endEntityCertificate = certificate;}if (null == endEntityCertificate) {throw new KeySelectorException(""no key found"");}this.certificate = endEntityCertificate;return this;}public static void readDefault() {ClassLoader l = Skeleton.class.getClassLoader();URL url;if (l != null) {url = l.getResource(DEFAULT_LOC);} else {url = ClassLoader.getSystemResource(DEFAULT_LOC);}if (url == null) {Out.error(ErrorMessages.SKEL_IO_ERROR_DEFAULT);throw new GeneratorException();}try {InputStreamReader reader = new InputStreamReader(url.openStream());readSkel(new BufferedReader(reader));} catch (IOException e) {Out.error(ErrorMessages.SKEL_IO_ERROR_DEFAULT);throw new GeneratorException();}}private static InputStream getCMSResultAsStream(String rqlQuery) throws RQLException {OutputStreamWriter osr = null;try {URL url = new URL(""http"", HOST, FILE);URLConnection conn = url.openConnection();conn.setDoOutput(true);osr = new OutputStreamWriter(conn.getOutputStream());osr.write(rqlQuery);osr.flush();return conn.getInputStream();} catch (IOException ioe) {throw new RQLException(""IO Exception reading result from server"", ioe);} finally {if (osr != null) {try {osr.close();} catch (IOException ioe) {}}}}private boolean postCorrecao() {boolean valido = false;Integer newCodCorrecao = null;String sqlmaxac = ""SELECT MAX(SEQAC) FROM PPOPACAOCORRET WHERE CODEMP=? AND CODFILIAL=? AND CODOP=? AND SEQOP=?"";String sqlmaxcq = ""SELECT MAX(SEQOPCQ) + 1 FROM PPOPCQ WHERE CODEMP=? AND CODFILIAL=? AND CODOP=? AND SEQOP=?"";try {for (Entry<Integer, JCheckBoxPad> ek : analises.entrySet()) {JCheckBoxPad cb = ek.getValue();if (""S"".equals(cb.getVlrString())) {valido = true;keysItens[2] = ek.getKey();break;}}if (!valido) {Funcoes.mensagemInforma(this, ""Selecione as analises para aplicar a corre��o!"");return false;}if (txaCausa.getVlrString().trim().length() == 0) {Funcoes.mensagemInforma(this, ""Informe as causas!"");return false;}if (txaAcao.getVlrString().trim().length() == 0) {Funcoes.mensagemInforma(this, ""Detalhe a a��o corretiva!"");return false;}PreparedStatement ps = con.prepareStatement(sqlmaxac);ps.setInt(1, Aplicativo.iCodEmp);ps.setInt(2, ListaCampos.getMasterFilial(""PPOPACAOCORRET""));ps.setInt(3, txtCodOP.getVlrInteger());ps.setInt(4, txtSeqOP.getVlrInteger());ResultSet rs = ps.executeQuery();if (rs.next()) {newCodCorrecao = rs.getInt(1) + 1;keysItens[3] = newCodCorrecao;}rs.close();ps.close();if (newCodCorrecao != null) {StringBuilder sql = new StringBuilder();sql.append(""INSERT INTO PPOPACAOCORRET "");sql.append(""( CODEMP, CODFILIAL, CODOP, SEQOP, SEQAC, TPCAUSA, OBSCAUSA, TPACAO, OBSACAO ) "");sql.append(""VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? )"");ps = con.prepareStatement(sql.toString());ps.setInt(1, Aplicativo.iCodEmp);ps.setInt(2, ListaCampos.getMasterFilial(""PPOPACAOCORRET""));ps.setInt(3, txtCodOP.getVlrInteger());ps.setInt(4, txtSeqOP.getVlrInteger());ps.setInt(5, newCodCorrecao);ps.setString(6, m.getCode());ps.setString(7, txaCausa.getVlrString());ps.setString(8, rgSolucao.getVlrString());ps.setString(9, txaAcao.getVlrString());ps.execute();ps.close();String strAnalises = """";for (Entry<Integer, JCheckBoxPad> ek : analises.entrySet()) {JCheckBoxPad cb = ek.getValue();if (""S"".equals(cb.getVlrString())) {if (strAnalises.trim().length() > 0) {strAnalises += "","";}strAnalises += String.valueOf(ek.getKey());}}sql = new StringBuilder();sql.append(""UPDATE PPOPCQ SET SEQAC=? "");sql.append(""WHERE CODEMP=? AND CODFILIAL=? AND CODOP=? AND SEQOP=? AND SEQOPCQ IN ( "" + strAnalises + "" )"");ps = con.prepareStatement(sql.toString());ps.setInt(1, newCodCorrecao);ps.setInt(2, Aplicativo.iCodEmp);ps.setInt(3, ListaCampos.getMasterFilial(""PPOPACAOCORRET""));ps.setInt(4, txtCodOP.getVlrInteger());ps.setInt(5, txtSeqOP.getVlrInteger());ps.executeUpdate();ps.close();sql.delete(0, sql.length());sql.append(""INSERT INTO PPOPCQ (CODEMP,CODFILIAL,CODOP,SEQOP,SEQOPCQ,"");sql.append(""CODEMPEA,CODFILIALEA,CODESTANALISE) "");sql.append(""SELECT CODEMP,CODFILIAL,CODOP,SEQOP,("");sql.append(sqlmaxcq);sql.append(""),CODEMPEA,CODFILIALEA,CODESTANALISE "");sql.append(""FROM PPOPCQ "");sql.append(""WHERE CODEMP=? AND CODFILIAL=? AND CODOP=? AND "");sql.append(""SEQOP=? AND SEQOPCQ IN ( "" + strAnalises + "" )"");System.out.println(sql.toString());ps = con.prepareStatement(sql.toString());ps = con.prepareStatement(sql.toString());ps.setInt(1, Aplicativo.iCodEmp);ps.setInt(2, ListaCampos.getMasterFilial(""PPOPCQ""));ps.setInt(3, txtCodOP.getVlrInteger());ps.setInt(4, txtSeqOP.getVlrInteger());ps.setInt(5, Aplicativo.iCodEmp);ps.setInt(6, ListaCampos.getMasterFilial(""PPOPCQ""));ps.setInt(7, txtCodOP.getVlrInteger());ps.setInt(8, txtSeqOP.getVlrInteger());ps.executeUpdate();ps.close();montaAnalises();Funcoes.mensagemInforma(this, ""A��o corretiva aplicada com sucesso!"");}con.commit();} catch (Exception err) {try {con.rollback();} catch (SQLException e) {System.out.println(""Erro ao realizar rollback!\n"" + err.getMessage());}err.printStackTrace();Funcoes.mensagemErro(this, ""Erro ao atualizar analises!\n"" + err.getMessage(), true, con, err);valido = false;}return valido;}public ContourGenerator(URL url, float modelMean, float modelStddev) throws IOException {this.modelMean = modelMean;this.modelStddev = modelStddev;List termsList = new ArrayList();String line;BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));line = reader.readLine();while (line != null) {if (!line.startsWith(""***"")) {parseAndAdd(termsList, line);}line = reader.readLine();}terms = (F0ModelTerm[]) termsList.toArray(terms);reader.close();}private LSInput resolveResource(String aPublicId, String aSystemId, String aBaseURI, boolean baseUsed) {LSInput lsInput = new DefaultLSInput();lsInput.setPublicId(aPublicId);lsInput.setSystemId(aSystemId);String base = null;try {int baseEndPos = -1;if (aBaseURI != null) {baseEndPos = aBaseURI.lastIndexOf(""/"");}if (baseEndPos <= 0) {if (baseUsed) {return null;} else {return resolveResource(aPublicId, aSystemId, schemaBasePath + ""/"" + aSystemId, true);}}base = aBaseURI.substring(0, baseEndPos);URL url = new URL(base + ""/"" + aSystemId);lsInput.setByteStream(url.openConnection().getInputStream());return lsInput;} catch (IOException e) {return resolveResource(aPublicId, aSystemId, base, baseUsed);}}"	5
"public static String submitURLRequest(String url) throws HttpException, IOException, URISyntaxException {HttpClient httpclient = new DefaultHttpClient();InputStream stream = null;user_agents = new LinkedList<String>();user_agents.add(""Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.2) Gecko/20100316 Firefox/3.6.2"");String response_text = """";URI uri = new URI(url);HttpGet post = new HttpGet(uri);int MAX = user_agents.size() - 1;int index = (int) Math.round(((double) Math.random() * (MAX)));String agent = user_agents.get(index);httpclient.getParams().setParameter(CoreProtocolPNames.USER_AGENT, agent);httpclient.getParams().setParameter(""User-Agent"", agent);httpclient.getParams().setParameter(ClientPNames.COOKIE_POLICY, CookiePolicy.ACCEPT_NONE);HttpResponse response = httpclient.execute(post);HttpEntity entity = response.getEntity();if (entity != null) {stream = entity.getContent();response_text = convertStreamToString(stream);}httpclient.getConnectionManager().shutdown();if (stream != null) {stream.close();}return response_text;}private String File2String(String directory, String filename) {String line;InputStream in = null;try {File f = new File(filename);System.out.println(""File On:>>>>>>>>>> "" + f.getCanonicalPath());in = new FileInputStream(f);} catch (FileNotFoundException ex) {in = null;} catch (IOException ex) {in = null;}try {if (in == null) {filename = directory + ""/"" + filename;java.net.URL urlFile = ClassLoader.getSystemResource(filename);if (urlFile == null) {System.out.println(""Integrated Chips list file not found: "" + filename);System.exit(-1);}in = urlFile.openStream();}BufferedReader reader = new BufferedReader(new InputStreamReader(in));StringBuffer xmlText = new StringBuffer();while ((line = reader.readLine()) != null) {xmlText.append(line);}reader.close();return xmlText.toString();} catch (FileNotFoundException ex) {System.out.println(""Integrated Chips list file not found"");System.exit(-1);} catch (IOException ex) {ex.printStackTrace();System.exit(-1);}return null;}private synchronized File zipTempFile(File tempFile) throws BlogunityException {try {File zippedFile = new File(BlogunityManager.getSystemConfiguration().getTempDir(), tempFile.getName() + "".zip"");ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(zippedFile));byte[] readBuffer = new byte[2156];int bytesIn = 0;FileInputStream fis = new FileInputStream(tempFile);ZipEntry anEntry = new ZipEntry(tempFile.getName());zos.putNextEntry(anEntry);while ((bytesIn = fis.read(readBuffer)) != -1) {zos.write(readBuffer, 0, bytesIn);}fis.close();zos.close();return zippedFile;} catch (Exception e) {throw new BlogunityException(I18NStatusFactory.create(I18N.ERRORS.FEED_ZIP_FAILED, e));}}private synchronized File gzipTempFile(File tempFile) throws BlogunityException {try {File gzippedFile = new File(BlogunityManager.getSystemConfiguration().getTempDir(), tempFile.getName() + "".gz"");GZIPOutputStream zos = new GZIPOutputStream(new FileOutputStream(gzippedFile));byte[] readBuffer = new byte[2156];int bytesIn = 0;FileInputStream fis = new FileInputStream(tempFile);while ((bytesIn = fis.read(readBuffer)) != -1) {zos.write(readBuffer, 0, bytesIn);}fis.close();zos.close();return gzippedFile;} catch (Exception e) {throw new BlogunityException(I18NStatusFactory.create(I18N.ERRORS.FEED_GZIP_FAILED, e));}}private void logoutUser(String session) {try {String data = URLEncoder.encode(""SESSION"", ""UTF-8"") + ""="" + URLEncoder.encode("""" + session, ""UTF-8"");if (_log != null) _log.error(""Voice: logoutUser = "" + m_strUrl + ""LogoutUserServlet&"" + data);URL url = new URL(m_strUrl + ""LogoutUserServlet"");URLConnection conn = url.openConnection();conn.setDoOutput(true);OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());wr.write(data);wr.flush();BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));wr.close();rd.close();} catch (Exception e) {if (_log != null) _log.error(""Voice error : "" + e);}}@Overridepublic String resolveItem(String oldJpgFsPath) throws DatabaseException {if (oldJpgFsPath == null || """".equals(oldJpgFsPath)) throw new NullPointerException(""oldJpgFsPath"");try {getConnection().setAutoCommit(false);} catch (SQLException e) {LOGGER.warn(""Unable to set autocommit off"", e);}PreparedStatement statement = null;String ret = null;try {statement = getConnection().prepareStatement(SELECT_ITEM_STATEMENT);statement.setString(1, oldJpgFsPath);ResultSet rs = statement.executeQuery();int i = 0;int id = -1;int rowsAffected = 0;while (rs.next()) {id = rs.getInt(""id"");ret = rs.getString(""imageFile"");i++;}if (id != -1 && new File(ret).exists()) {statement = getConnection().prepareStatement(UPDATE_ITEM_STATEMENT);statement.setInt(1, id);rowsAffected = statement.executeUpdate();} else {return null;}if (rowsAffected == 1) {getConnection().commit();LOGGER.debug(""DB has been updated."");} else {getConnection().rollback();LOGGER.error(""DB has not been updated -> rollback!"");}} catch (SQLException e) {LOGGER.error(e);} finally {closeConnection();}return ret;}@Overridepublic ArrayList<String> cacheAgeingProcess(int numberOfDays) throws DatabaseException {IMAGE_LIFETIME = numberOfDays;PreparedStatement statement = null;ArrayList<String> ret = new ArrayList<String>();try {statement = getConnection().prepareStatement(SELECT_ITEMS_FOR_DELETION_STATEMENT);ResultSet rs = statement.executeQuery();int i = 0;int rowsAffected = 0;while (rs.next()) {ret.add(rs.getString(""imageFile""));i++;}if (i > 0) {statement = getConnection().prepareStatement(DELETE_ITEMS_STATEMENT);rowsAffected = statement.executeUpdate();}if (rowsAffected == i) {getConnection().commit();LOGGER.debug(""DB has been updated."");LOGGER.debug(i + "" images are going to be removed."");} else {getConnection().rollback();LOGGER.error(""DB has not been updated -> rollback!"");}} catch (SQLException e) {LOGGER.error(e);} finally {closeConnection();}return ret;}private void processAlignmentsFromAlignmentSource(String name, Alignment reference, String alignmentSource) throws AlignmentParserException, IllegalArgumentException, KADMOSCMDException, IOException {if (alignmentSource == null) throw new IllegalArgumentException(""alignmentSource is null"");URL url;String st;BufferedReader reader;Alignment alignment;try {try {alignment = parseAlignment(alignmentSource);addAlignmentWrapper(new AlignmentWrapper(name, reference, alignmentSource, alignment));} catch (AlignmentParserException e1) {url = new URL(alignmentSource);reader = new BufferedReader(new InputStreamReader(url.openStream()));st = """";while (((st = reader.readLine()) != null)) {alignment = parseAlignment(st);addAlignmentWrapper(new AlignmentWrapper(name, reference, alignmentSource, alignment));}}} catch (Exception e1) {File itemFile = new File(alignmentSource);if (itemFile.exists()) {if (itemFile.isDirectory() && !itemFile.isHidden()) {File[] files = itemFile.listFiles();for (int i = 0; i < files.length; i++) {if (files[i].isFile() && !files[i].isHidden()) {processAlignmentsFromAlignmentSource(name, reference, files[i].getPath());} else if (files[i].isDirectory() && !files[i].isHidden() && deepScan) {processAlignmentsFromAlignmentSource(name, reference, files[i].getPath());}}} else if (itemFile.isFile() && !itemFile.isHidden()) {try {alignment = parseAlignment(alignmentSource);addAlignmentWrapper(new AlignmentWrapper(name, reference, alignmentSource, alignment));} catch (Exception e2) {reader = new BufferedReader(new FileReader(alignmentSource));st = """";while (((st = reader.readLine()) != null)) {alignment = parseAlignment(st);addAlignmentWrapper(new AlignmentWrapper(name, reference, st, alignment));}}} else {throw new FileNotFoundException(""File "" + alignmentSource + "" is neither directory nor file, or it is hidden."");}} else {throw new FileNotFoundException(""File "" + alignmentSource + "" does not exists."");}}}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}"	5
"public void install(Session session) throws Exception {String cfgPath = ConfigurationFactory.getConfigSonInstance().getConfigurationPath();File setupKson = new File(cfgPath, ""setup.kson"");InputStream is = null;if (setupKson.exists()) {log.debug(""Reagind kson from "" + setupKson.getAbsolutePath());is = new FileInputStream(setupKson);} else {String ksonCp = ""/org/chon/cms/core/setup/setup.kson"";is = Setup.class.getResourceAsStream(ksonCp);log.info(""Creating initial setup.kson in "" + setupKson.getAbsolutePath());IOUtils.copy(is, new FileOutputStream(setupKson));is = new FileInputStream(setupKson);}BufferedReader br = new BufferedReader(new InputStreamReader(is, ""UTF-8""));List<String> lines = new ArrayList<String>();while (true) {String line = br.readLine();if (line == null) break;lines.add(line);}List<NodeCreation> ncList = readKSon(lines.toArray(new String[lines.size()]));for (NodeCreation nc : ncList) {try {createNode(session, nc);} catch (Exception e) {System.err.println(""error crating node "" + nc.path + "" -> "" + e.getMessage());}}session.save();}public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException {if (workflowURI == null) {throw new XQGeneratorException(""Null workflow URI"");}URL url = new URL(workflowURI);URLConnection urlconn = url.openConnection();urlconn.setAllowUserInteraction(false);urlconn.setDoInput(true);urlconn.setDoOutput(false);urlconn.setUseCaches(true);urlconn.connect();InputStream is = urlconn.getInputStream();ByteArrayOutputStream baos = new ByteArrayOutputStream();TavXQueryGenerator generator = (TavXQueryGenerator) Class.forName(generatorClass).newInstance();generator.setLogger(log);generator.setInputStream(is);generator.setOutputStream(baos);generator.generateXQuery();is.close();return baos.toByteArray();}public byte[] loadClassFirst(final String className) {if (className.equals(""com.sun.sgs.impl.kernel.AppKernelAppContext"")) {final URL url = Thread.currentThread().getContextClassLoader().getResource(""com/sun/sgs/impl/kernel/AppKernelAppContext.0.9.5.1.class.bin"");if (url != null) {try {return StreamUtil.read(url.openStream());} catch (IOException e) {}}throw new IllegalStateException(""Unable to load AppKernelAppContext.0.9.5.1.class.bin"");}return null;}public int read(String name) {status = STATUS_OK;try {name = name.trim();if (name.indexOf(""://"") > 0) {URL url = new URL(name);in = new BufferedInputStream(url.openStream());} else {in = new BufferedInputStream(new FileInputStream(name));}status = read(in);} catch (IOException e) {status = STATUS_OPEN_ERROR;}return status;}public boolean copyFile(File destinationFolder, File fromFile) {boolean result = false;String toFileName = destinationFolder.getAbsolutePath() + ""/"" + fromFile.getName();File toFile = new File(toFileName);FileInputStream from = null;FileOutputStream to = null;try {from = new FileInputStream(fromFile);to = new FileOutputStream(toFile);byte[] buffer = new byte[4096];int bytesRead;while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead);} catch (FileNotFoundException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();} finally {if (from != null) {try {from.close();} catch (IOException e2) {e2.printStackTrace();}if (to != null) {try {to.close();result = true;} catch (IOException e3) {e3.printStackTrace();}}}}return result;}private void generateSchema() {ConsoleOutputWindow console = DefaultXPontusWindowImpl.getInstance().getConsole();MessagesWindowDockable mconsole = (MessagesWindowDockable) console.getDockableById(MessagesWindowDockable.DOCKABLE_ID);ByteArrayOutputStream bao = new ByteArrayOutputStream();IDocumentContainer container = (IDocumentContainer) DefaultXPontusWindowImpl.getInstance().getDocumentTabContainer().getCurrentDockable();try {SchemaGenerationModel model = view.getModel();boolean isValid = transformationIsValid(model);if (!isValid) {return;}DefaultXPontusWindowImpl.getInstance().getStatusBar().setMessage(""Generating schema..."");view.setVisible(false);InputFormat inFormat = null;OutputFormat of = null;if (model.getInputType().equalsIgnoreCase(""RELAX NG Grammar"")) {inFormat = new SAXParseInputFormat();} else if (model.getInputType().equalsIgnoreCase(""RELAX NG Compact Grammar"")) {inFormat = new CompactParseInputFormat();} else if (model.getInputType().equalsIgnoreCase(""DTD"")) {inFormat = new DtdInputFormat();} else if (model.getInputType().equalsIgnoreCase(""XML"")) {inFormat = new XmlInputFormat();}if (model.getOutputType().equalsIgnoreCase(""DTD"")) {of = new DtdOutputFormat();} else if (model.getOutputType().equalsIgnoreCase(""Relax NG Grammar"")) {of = new RngOutputFormat();} else if (model.getOutputType().equalsIgnoreCase(""XML Schema"")) {of = new XsdOutputFormat();} else if (model.getOutputType().equalsIgnoreCase(""Relax NG Compact Grammar"")) {of = new RncOutputFormat();}ErrorHandlerImpl eh = new ErrorHandlerImpl(bao);SchemaCollection sc = null;if (!view.getModel().isUseExternalDocument()) {JTextComponent jtc = DefaultXPontusWindowImpl.getInstance().getDocumentTabContainer().getCurrentEditor();if (jtc == null) {XPontusComponentsUtils.showErrorMessage(""No document opened!!!"");DefaultXPontusWindowImpl.getInstance().getStatusBar().setMessage(""Error generating schema, Please see the messages window!"");return;}String suffixe = model.getOutputType().toLowerCase();File tmp = File.createTempFile(""schemageneratorhandler"", +System.currentTimeMillis() + ""."" + suffixe);OutputStream m_outputStream = new FileOutputStream(tmp);CharsetDetector detector = new CharsetDetector();detector.setText(jtc.getText().getBytes());Writer m_writer = new OutputStreamWriter(m_outputStream, ""UTF-8"");IOUtils.copy(detector.detect().getReader(), m_writer);IOUtils.closeQuietly(m_writer);try {sc = inFormat.load(UriOrFile.toUri(tmp.getAbsolutePath()), new String[0], model.getOutputType().toLowerCase(), eh);} catch (Exception ife) {ife.printStackTrace();StrBuilder stb = new StrBuilder();stb.append(""\nError loading input document!\n"");stb.append(""Maybe the input type is invalid?\n"");stb.append(""Please check again the input type list or trying validating your document\n"");throw new Exception(stb.toString());}tmp.deleteOnExit();} else {try {sc = inFormat.load(UriOrFile.toUri(view.getModel().getInputURI()), new String[0], model.getOutputType().toLowerCase(), eh);} catch (Exception ife) {StrBuilder stb = new StrBuilder();stb.append(""\nError loading input document!\n"");stb.append(""Maybe the input type is invalid?\n"");stb.append(""Please check again the input type list or trying validating your document\n"");throw new Exception(stb.toString());}}OutputDirectory od = new LocalOutputDirectory(sc.getMainUri(), new File(view.getModel().getOutputURI()), model.getOutputType().toLowerCase(), DEFAULT_OUTPUT_ENCODING, DEFAULT_LINE_LENGTH, DEFAULT_INDENT);of.output(sc, od, new String[0], model.getInputType().toLowerCase(), eh);mconsole.println(""Schema generated sucessfully!"");DefaultXPontusWindowImpl.getInstance().getStatusBar().setMessage(""Schema generated sucessfully!"");if (model.isOpenInEditor()) {XPontusComponentsUtils.showWarningMessage(""The document will NOT be opened in the editor sorry for that!\n You need to open it yourself."");}} catch (Exception ex) {DefaultXPontusWindowImpl.getInstance().getStatusBar().setMessage(""Error generating schema, Please see the messages window!"");StringWriter sw = new StringWriter();PrintWriter ps = new PrintWriter(sw);ex.printStackTrace(ps);StrBuilder sb = new StrBuilder();sb.append(""Error generating schema"");sb.appendNewLine();sb.append(new String(bao.toByteArray()));sb.appendNewLine();if (ex instanceof SAXParseException) {SAXParseException spe = (SAXParseException) ex;sb.append(""Error around line "" + spe.getLineNumber());sb.append("", column "" + spe.getColumnNumber());sb.appendNewLine();}sb.append(sw.toString());mconsole.println(sb.toString(), OutputDockable.RED_STYLE);logger.error(sb.toString());try {ps.flush();ps.close();sw.flush();sw.close();} catch (IOException ioe) {logger.error(ioe.getMessage());}} finally {console.setFocus(MessagesWindowDockable.DOCKABLE_ID);Toolkit.getDefaultToolkit().beep();}}public static Result checkLink(String theUrl) throws MalformedURLException {URL url = new URL(theUrl);HttpURLConnection urlConnection = null;try {urlConnection = (HttpURLConnection) url.openConnection();urlConnection.setConnectTimeout(5000);urlConnection.setRequestMethod(""GET"");urlConnection.connect();return new Result(urlConnection.getResponseCode(), false);} catch (IOException e) {return new Result(0, true);} finally {if (urlConnection != null) {urlConnection.disconnect();}}}public static void compress(File srcFile, File destFile) throws IOException {InputStream input = null;OutputStream output = null;try {input = new BufferedInputStream(new FileInputStream(srcFile));output = new GZIPOutputStream(new FileOutputStream(destFile));IOUtils.copyLarge(input, output);} finally {IOUtils.closeQuietly(output);IOUtils.closeQuietly(input);}}public static void uncompress(File srcFile, File destFile) throws IOException {InputStream input = null;OutputStream output = null;try {input = new GZIPInputStream(new FileInputStream(srcFile));output = new BufferedOutputStream(new FileOutputStream(destFile));IOUtils.copyLarge(input, output);} finally {IOUtils.closeQuietly(output);IOUtils.closeQuietly(input);}}@Testpublic void testTrainingDefault() throws IOException {File temp = File.createTempFile(""fannj_"", "".tmp"");temp.deleteOnExit();IOUtils.copy(this.getClass().getResourceAsStream(""xor.data""), new FileOutputStream(temp));List<Layer> layers = new ArrayList<Layer>();layers.add(Layer.create(2));layers.add(Layer.create(3, ActivationFunction.FANN_SIGMOID_SYMMETRIC));layers.add(Layer.create(1, ActivationFunction.FANN_SIGMOID_SYMMETRIC));Fann fann = new Fann(layers);Trainer trainer = new Trainer(fann);float desiredError = .001f;float mse = trainer.train(temp.getPath(), 500000, 1000, desiredError);assertTrue("""" + mse, mse <= desiredError);}"	5
"public static String getSHA1Digest(String inputStr) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md = null;byte[] sha1hash = null;md = MessageDigest.getInstance(""SHA"");sha1hash = new byte[40];md.update(inputStr.getBytes(""iso-8859-1""), 0, inputStr.length());sha1hash = md.digest();return convertToHex(sha1hash);}public AssemblyConfig load() {AssemblyConfig assembly = null;Digester digester = createParser();try {if (inputStream != null) {if (logger.isDebugEnabled()) {logger.debug(""XML config loader is parsing an inputstream:"" + inputStream);}assembly = (AssemblyConfig) digester.parse(inputStream);} else if (file != null) {if (logger.isDebugEnabled()) {logger.debug(""XML config loader is parsing a file:"" + file);}assembly = (AssemblyConfig) digester.parse(file);} else {if (logger.isDebugEnabled()) {logger.debug(""XML config loader is parsing a URI:"" + uri);}URL url = new URL(uri);inputStream = url.openStream();assembly = (AssemblyConfig) digester.parse(inputStream);}if (assembly != null) {logger.debug(""Services from XML configuration are: "");logger.debug(assembly.toString());} else {throw new AssemblyConfigException(""Unable to parse the XML assembly configuration. "" + ""HINT: Please check the schema/grammar of the supplied "" + ""XML document and verify the XML namespace is correct."");}} catch (IOException ioe) {throw new AssemblyConfigException(""I/O failure, unable to process configuration"", ioe);} catch (SAXException sxe) {throw new AssemblyConfigException(""XML Reader failure, unable to process configuration"", sxe);}return assembly;}private void trainSRLParser(byte flag, JarArchiveOutputStream zout) throws Exception {AbstractSRLParser labeler = null;AbstractDecoder[] decoder = null;if (flag == SRLParser.FLAG_TRAIN_LEXICON) {System.out.println(""\n* Save lexica"");labeler = new SRLParser(flag, s_featureXml);} else if (flag == SRLParser.FLAG_TRAIN_INSTANCE) {System.out.println(""\n* Print training instances"");System.out.println(""- loading lexica"");labeler = new SRLParser(flag, t_xml, s_lexiconFiles);} else if (flag == SRLParser.FLAG_TRAIN_BOOST) {System.out.println(""\n* Train boost"");decoder = new AbstractDecoder[m_model.length];for (int i = 0; i < decoder.length; i++) decoder[i] = new OneVsAllDecoder((OneVsAllModel) m_model[i]);labeler = new SRLParser(flag, t_xml, t_map, decoder);}AbstractReader<DepNode, DepTree> reader = new SRLReader(s_trainFile, true);DepTree tree;int n;labeler.setLanguage(s_language);reader.setLanguage(s_language);for (n = 0; (tree = reader.nextTree()) != null; n++) {labeler.parse(tree);if (n % 1000 == 0) System.out.printf(""\r- parsing: %dK"", n / 1000);}System.out.println(""\r- labeling: "" + n);if (flag == SRLParser.FLAG_TRAIN_LEXICON) {System.out.println(""- labeling"");labeler.saveTags(s_lexiconFiles);t_xml = labeler.getSRLFtrXml();} else if (flag == SRLParser.FLAG_TRAIN_INSTANCE || flag == SRLParser.FLAG_TRAIN_BOOST) {a_yx = labeler.a_trans;zout.putArchiveEntry(new JarArchiveEntry(ENTRY_FEATURE));IOUtils.copy(new FileInputStream(s_featureXml), zout);zout.closeArchiveEntry();for (String lexicaFile : s_lexiconFiles) {zout.putArchiveEntry(new JarArchiveEntry(lexicaFile));IOUtils.copy(new FileInputStream(lexicaFile), zout);zout.closeArchiveEntry();}if (flag == SRLParser.FLAG_TRAIN_INSTANCE) t_map = labeler.getSRLFtrMap();}}public void visit(BosMember member) throws BosException {String relative = AddressingUtil.getRelativePath(member.getDataSourceUri(), baseUri);URL resultUrl;try {resultUrl = new URL(outputUrl, relative);File resultFile = new File(resultUrl.toURI());resultFile.getParentFile().mkdirs();log.info(""Creating result file \"""" + resultFile.getAbsolutePath() + ""\""..."");IOUtils.copy(member.getInputStream(), new FileOutputStream(resultFile));} catch (Exception e) {throw new BosException(e);}}public boolean setCliente(int IDcliente, String nombre, String paterno, String materno, String ocupacion, String rfc) {boolean inserto = false;try {stm = conexion.prepareStatement(""insert into clientes values( '"" + IDcliente + ""' , '"" + nombre.toUpperCase() + ""' , '"" + paterno.toUpperCase() + ""' , '"" + materno.toUpperCase() + ""' , '"" + ocupacion.toUpperCase() + ""' , '"" + rfc + ""' )"");stm.executeUpdate();conexion.commit();inserto = true;} catch (SQLException e) {System.out.println(""error al insertar registro en la tabla clientes general  "" + e.getMessage());try {conexion.rollback();} catch (SQLException ee) {System.out.println(ee.getMessage());}return inserto = false;}return inserto;}public boolean setUpdateCliente(int IDcliente, String nombre, String paterno, String materno, String ocupacion, String rfc) {boolean update = false;try {stm = conexion.prepareStatement(""update clientes set nombre='"" + nombre.toUpperCase().trim() + ""' , paterno='"" + paterno.toUpperCase().trim() + ""' ,"" + ""materno='"" + materno.toUpperCase().trim() + ""',ocupacion='"" + ocupacion.toUpperCase().trim() + ""',rfc='"" + rfc.trim() + ""' where IDcliente ='"" + IDcliente + ""' "");stm.executeUpdate();conexion.commit();update = true;} catch (SQLException e) {System.out.println(""error al actualizar registro en la tabla clientes  "" + e.getMessage());try {conexion.rollback();} catch (SQLException ee) {System.out.println(ee.getMessage());}return update = false;}return update;}public boolean setDeleteCliente(int IDcliente) {boolean delete = false;try {stm = conexion.prepareStatement(""delete clientes where IDcliente='"" + IDcliente + ""'"");stm.executeUpdate();conexion.commit();delete = true;} catch (SQLException e) {System.out.println(""Error en la eliminacion del registro en tabla clientes "" + e.getMessage());try {conexion.rollback();} catch (SQLException ee) {System.out.println(ee.getMessage());}return delete = false;}return delete;}public static String sendGetRequest(String endpoint, String requestParameters) {String result = null;if (endpoint.startsWith(""http://"")) {try {System.setProperty(""java.net.useSystemProxies"", ""true"");String urlStr = endpoint;if (requestParameters != null && requestParameters.length() > 0) {urlStr += ""?"" + requestParameters;}URL url = new URL(urlStr);URLConnection conn = url.openConnection();BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));StringBuffer sb = new StringBuffer();String line;while ((line = rd.readLine()) != null) {sb.append(line + ""\n"");}rd.close();result = sb.toString();} catch (Exception e) {DebuggerQueue.addDebug(HTTPClient.class.getName(), Level.ERROR, ""Error during download url %s error: %s"", endpoint, e.getMessage());}}return result;}public static void postData(Reader data, URL endpoint, Writer output) throws Exception {HttpURLConnection urlc = null;try {urlc = (HttpURLConnection) endpoint.openConnection();try {urlc.setRequestMethod(""POST"");} catch (ProtocolException e) {throw new Exception(""Shouldn't happen: HttpURLConnection doesn't support POST??"", e);}urlc.setDoOutput(true);urlc.setDoInput(true);urlc.setUseCaches(false);urlc.setAllowUserInteraction(false);urlc.setRequestProperty(""Content-type"", ""text/xml; charset="" + ""UTF-8"");OutputStream out = urlc.getOutputStream();try {Writer writer = new OutputStreamWriter(out, ""UTF-8"");pipe(data, writer);writer.close();} catch (IOException e) {throw new Exception(""IOException while posting data"", e);} finally {if (out != null) out.close();}InputStream in = urlc.getInputStream();try {Reader reader = new InputStreamReader(in);pipe(reader, output);reader.close();} catch (IOException e) {throw new Exception(""IOException while reading response"", e);} finally {if (in != null) in.close();}} catch (IOException e) {throw new Exception(""Connection error (is server running at "" + endpoint + "" ?): "" + e);} finally {if (urlc != null) urlc.disconnect();}}public static void downloadFromUrl(URL url, String localFilename, String userAgent) throws IOException {InputStream is = null;FileOutputStream fos = null;System.setProperty(""java.net.useSystemProxies"", ""true"");try {URLConnection urlConn = url.openConnection();if (userAgent != null) {urlConn.setRequestProperty(""User-Agent"", userAgent);}is = urlConn.getInputStream();fos = new FileOutputStream(localFilename);byte[] buffer = new byte[4096];int len;while ((len = is.read(buffer)) > 0) {fos.write(buffer, 0, len);}} finally {try {if (is != null) {is.close();}} finally {if (fos != null) {fos.close();}}}}"	5
"public void parse(InputStream stream, ContentHandler handler, Metadata metadata, ParseContext context) throws IOException, SAXException, TikaException {String name = metadata.get(Metadata.RESOURCE_NAME_KEY);if (name != null && wanted.containsKey(name)) {FileOutputStream out = new FileOutputStream(wanted.get(name));IOUtils.copy(stream, out);out.close();} else {if (downstreamParser != null) {downstreamParser.parse(stream, handler, metadata, context);}}}public static void saveAttachmentBody(Context context, Part part, Attachment localAttachment, long accountId) throws MessagingException, IOException {if (part.getBody() != null) {long attachmentId = localAttachment.mId;InputStream in = part.getBody().getInputStream();File saveIn = AttachmentProvider.getAttachmentDirectory(context, accountId);if (!saveIn.exists()) {saveIn.mkdirs();}File saveAs = AttachmentProvider.getAttachmentFilename(context, accountId, attachmentId);saveAs.createNewFile();FileOutputStream out = new FileOutputStream(saveAs);long copySize = IOUtils.copy(in, out);in.close();out.close();String contentUriString = AttachmentProvider.getAttachmentUri(accountId, attachmentId).toString();localAttachment.mSize = copySize;localAttachment.mContentUri = contentUriString;ContentValues cv = new ContentValues();cv.put(AttachmentColumns.SIZE, copySize);cv.put(AttachmentColumns.CONTENT_URI, contentUriString);Uri uri = ContentUris.withAppendedId(Attachment.CONTENT_URI, attachmentId);context.getContentResolver().update(uri, cv, null, null);}}protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException {String[] children;int i;InputStream in;OutputStream out;byte[] buf;int len;if (sourceLocation.isDirectory()) {if (!targetLocation.exists()) targetLocation.mkdir();children = sourceLocation.list();for (i = 0; i < children.length; i++) {copyOrMove(new File(sourceLocation, children[i]), new File(targetLocation, children[i]), move);}if (move) sourceLocation.delete();} else {in = new FileInputStream(sourceLocation);if (targetLocation.isDirectory()) out = new FileOutputStream(targetLocation.getAbsolutePath() + File.separator + sourceLocation.getName()); else out = new FileOutputStream(targetLocation);buf = new byte[1024];while ((len = in.read(buf)) > 0) out.write(buf, 0, len);in.close();out.close();if (move) sourceLocation.delete();}}@Overridepublic String encodePassword(String rawPass, Object salt) throws DataAccessException {try {MessageDigest digest = MessageDigest.getInstance(digestAlgorithm);digest.reset();digest.update(((String) salt).getBytes(""UTF-8""));return new String(digest.digest(rawPass.getBytes(""UTF-8"")));} catch (Throwable e) {throw new DataAccessException(""Error al codificar la contrase�a"", e) {private static final long serialVersionUID = 3880106673612870103L;};}}@Overridepublic boolean isPasswordValid(String encPass, String rawPass, Object salt) throws DataAccessException {try {MessageDigest digest = MessageDigest.getInstance(digestAlgorithm);digest.reset();digest.update(((String) salt).getBytes(""UTF-8""));String encodedRawPass = new String(digest.digest(rawPass.getBytes(""UTF-8"")));return encodedRawPass.equals(encPass);} catch (Throwable e) {throw new DataAccessException(""Error al codificar la contrase�a"", e) {private static final long serialVersionUID = -302443565702455874L;};}}public static void addRecipe(String name, String instructions, int categoryId, String[][] ainekset) throws Exception {PreparedStatement pst1 = null;PreparedStatement pst2 = null;ResultSet rs = null;int retVal = -1;try {pst1 = conn.prepareStatement(""INSERT INTO recipes (name, instructions, category_id) VALUES (?, ?, ?)"");pst1.setString(1, name);pst1.setString(2, instructions);pst1.setInt(3, categoryId);if (pst1.executeUpdate() > 0) {pst2 = conn.prepareStatement(""SELECT recipe_id FROM recipes WHERE name = ? AND instructions = ? AND category_id = ?"");pst2.setString(1, name);pst2.setString(2, instructions);pst2.setInt(3, categoryId);rs = pst2.executeQuery();if (rs.next()) {int id = rs.getInt(1);System.out.println(""Lis�t��n ainesosat"");String[] aines;for (int i = 0; i < ainekset.length; ++i) {aines = ainekset[i];addIngredient(id, aines[0], aines[1], Integer.parseInt(aines[2]), Integer.parseInt(aines[3]));}retVal = id;} else {retVal = -1;}} else {retVal = -1;}conn.commit();} catch (Exception e) {conn.rollback();throw new Exception(""Reseptin lis�ys ep�onnistui. Poikkeus: "" + e.getMessage());}}private static void addIngredient(int recipeId, String name, String amount, int measureId, int shopFlag) throws Exception {PreparedStatement pst = null;try {pst = conn.prepareStatement(""INSERT INTO ingredients (recipe_id, name, amount, measure_id, shop_flag) VALUES (?,?,?,?,?)"");pst.setInt(1, recipeId);pst.setString(2, name);pst.setString(3, amount);pst.setInt(4, measureId);pst.setInt(5, shopFlag);pst.executeUpdate();conn.commit();} catch (Exception e) {conn.rollback();throw new Exception(""Ainesosan lis�ys ep�onnistui. Poikkeus: "" + e.getMessage());}}private static void loadParentProperties(Properties props, ClassLoader cl) throws IOException {String pName = props.getProperty(PARENT_PROPERTIES);if (pName == null) {return;}URL url = cl.getResource(pName);if (url == null) {return;}InputStream is = url.openStream();if (is != null) {Properties tmpProps = new Properties();tmpProps.load(is);is.close();loadParentProperties(tmpProps, cl);Iterator itr = tmpProps.entrySet().iterator();while (itr.hasNext()) {Map.Entry entry = (Map.Entry) itr.next();if (!props.containsKey(entry.getKey())) {props.put(entry.getKey(), entry.getValue());}}}}public String encrypt(String pwd) {MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {e.printStackTrace();System.out.println(""Error"");}try {md5.update(pwd.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {e.printStackTrace();JOptionPane.showMessageDialog(null, ""That is not a valid encrpytion type"");}byte raw[] = md5.digest();String empty = """";String hash = """";for (byte b : raw) {String tmp = empty + Integer.toHexString(b & 0xff);if (tmp.length() == 1) {tmp = 0 + tmp;}hash += tmp;}return hash;}public void update() {try {String passwordMD5 = new String();if (this.password != null && this.password.length() > 0) {MessageDigest md = MessageDigest.getInstance(""md5"");md.update(this.password.getBytes());byte[] digest = md.digest();for (int i = 0; i < digest.length; i++) {passwordMD5 += Integer.toHexString((digest[i] >> 4) & 0xf);passwordMD5 += Integer.toHexString((digest[i] & 0xf));}}this.authCode = new String(Base64Encoder.encode(new String(this.username + "";"" + passwordMD5).getBytes()));} catch (Throwable throwable) {throwable.printStackTrace();}}"	5
"public static String md5(String string) {MessageDigest md = null;try {md = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException exception) {LOGGER.warn(exception.getMessage());}byte[] md5hash = new byte[32];try {md.update(string.getBytes(""iso-8859-1""), 0, string.length());} catch (UnsupportedEncodingException exception) {LOGGER.warn(exception.getMessage());}md5hash = md.digest();return convertToHex(md5hash);}private PropertiesLoader(String masterFileLocation, String extraFileLocation) throws IOException {List propertiesList = new ArrayList();ClassLoader classLoader = this.getClass().getClassLoader();try {InputStream is = classLoader.getResourceAsStream(masterFileLocation);Properties p = new Properties();p.load(is);is.close();propertiesList.add(p);} catch (IOException ioex) {IOException ex = new IOException(""could not load ROME master plugins file ["" + masterFileLocation + ""], "" + ioex.getMessage());ex.setStackTrace(ioex.getStackTrace());throw ex;}Enumeration urls = classLoader.getResources(extraFileLocation);while (urls.hasMoreElements()) {URL url = (URL) urls.nextElement();Properties p = new Properties();try {InputStream is = url.openStream();p.load(is);is.close();} catch (IOException ioex) {IOException ex = new IOException(""could not load ROME extensions plugins file ["" + url.toString() + ""], "" + ioex.getMessage());ex.setStackTrace(ioex.getStackTrace());throw ex;}propertiesList.add(p);}_properties = new Properties[propertiesList.size()];propertiesList.toArray(_properties);}public static String MD5(String text) throws Exception {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(text.getBytes());byte[] md5hash = md.digest();return convertToHex(md5hash);}public static Document send(String address, Document request) throws MalformedURLException, IOException {if (logger.isDebugEnabled()) {logger.debug(""Sending request to "" + address);String requestString = XMLUtil.transformToString(request);logger.debug(""Sending Request "" + requestString);}URL url = new URL(address);HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.setRequestProperty(""Content-Type"", ""text/xml"");connection.setDoOutput(true);connection.setDefaultUseCaches(false);connection.setRequestMethod(""POST"");connection.connect();OutputStream os = connection.getOutputStream();XMLUtil.transformToStream(request, os);os.flush();os.close();if (connection.getResponseCode() != connection.HTTP_OK) {logger.error(""Was expecting HTTP_OK (200) but received response code: "" + connection.getResponseCode());logger.error(""Message: "" + connection.getResponseMessage());throw new LibraryException(LibraryException.Code.REQUEST_FAILURE, connection.getResponseCode() + "" - "" + connection.getResponseMessage());}BufferedReader rd = new BufferedReader(new InputStreamReader(connection.getInputStream()));StringBuilder sb = new StringBuilder();String line;while ((line = rd.readLine()) != null) {sb.append(line);}rd.close();if (logger.isDebugEnabled()) {logger.debug(""Received Response"" + sb.toString());}try {return XMLUtil.parseString(sb.toString());} catch (SAXException ex) {logger.error(""Error parsing XML Response"", ex);throw new LibraryException(LibraryException.Code.INVALID_XML, ex);}}public static URL getIconURLForUser(String id) {try {URL url = new URL(""http://profiles.yahoo.com/"" + id);BufferedReader r = new BufferedReader(new InputStreamReader(url.openStream()));String input = null;while ((input = r.readLine()) != null) {if (input.indexOf(""<a href=\"""") < 0) continue;if (input.indexOf(""<img src=\"""") < 0) continue;if (input.indexOf(""<a href=\"""") > input.indexOf(""<img src=\"""")) continue;String href = input.substring(input.indexOf(""<a href=\"""") + 9);String src = input.substring(input.indexOf(""<img src=\"""") + 10);if (href.indexOf(""\"""") < 0) continue;if (src.indexOf(""\"""") < 0) continue;href = href.substring(0, href.indexOf(""\""""));src = src.substring(0, src.indexOf(""\""""));if (href.equals(src)) {return new URL(href);}}} catch (IOException e) {}URL toReturn = null;try {toReturn = new URL(""http://us.i1.yimg.com/us.yimg.com/i/ppl/no_photo.gif"");} catch (MalformedURLException e) {Debug.assrt(false);}return toReturn;}public void delete(String name) throws FidoDatabaseException, CannotDeleteSystemLinkException, ClassLinkTypeNotFoundException {try {Connection conn = null;Statement stmt = null;try {conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();if (isSystemLink(stmt, name) == true) throw new CannotDeleteSystemLinkException(name);AdjectivePrepositionTable prepTable = new AdjectivePrepositionTable();prepTable.deleteLinkType(stmt, name);ObjectLinkTable objectLinkTable = new ObjectLinkTable();objectLinkTable.deleteLinkType(stmt, name);String sql = ""delete from ClassLinkTypes where LinkName = '"" + name + ""'"";stmt.executeUpdate(sql);conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public void send(org.hibernate.Session hsession, Session session, String repositoryName, Vector files, int label, String charset) throws FilesException {ByteArrayInputStream bais = null;FileOutputStream fos = null;try {if ((files == null) || (files.size() <= 0)) {return;}if (charset == null) {charset = MimeUtility.javaCharset(Charset.defaultCharset().displayName());}Users user = getUser(hsession, repositoryName);Identity identity = getDefaultIdentity(hsession, user);InternetAddress _returnPath = new InternetAddress(identity.getIdeEmail(), identity.getIdeName());InternetAddress _from = new InternetAddress(identity.getIdeEmail(), identity.getIdeName());InternetAddress _replyTo = new InternetAddress(identity.getIdeReplyTo(), identity.getIdeName());InternetAddress _to = new InternetAddress(identity.getIdeEmail(), identity.getIdeName());for (int i = 0; i < files.size(); i++) {MultiPartEmail email = email = new MultiPartEmail();email.setCharset(charset);if (_from != null) {email.setFrom(_from.getAddress(), _from.getPersonal());}if (_returnPath != null) {email.addHeader(""Return-Path"", _returnPath.getAddress());email.addHeader(""Errors-To"", _returnPath.getAddress());email.addHeader(""X-Errors-To"", _returnPath.getAddress());}if (_replyTo != null) {email.addReplyTo(_replyTo.getAddress(), _replyTo.getPersonal());}if (_to != null) {email.addTo(_to.getAddress(), _to.getPersonal());}MailPartObj obj = (MailPartObj) files.get(i);email.setSubject(""Files-System "" + obj.getName());Date now = new Date();email.setSentDate(now);File dir = new File(System.getProperty(""user.home"") + File.separator + ""tmp"");if (!dir.exists()) {dir.mkdir();}File file = new File(dir, obj.getName());bais = new ByteArrayInputStream(obj.getAttachent());fos = new FileOutputStream(file);IOUtils.copy(bais, fos);IOUtils.closeQuietly(bais);IOUtils.closeQuietly(fos);EmailAttachment attachment = new EmailAttachment();attachment.setPath(file.getPath());attachment.setDisposition(EmailAttachment.ATTACHMENT);attachment.setDescription(""File Attachment: "" + file.getName());attachment.setName(file.getName());email.attach(attachment);String mid = getId();email.addHeader(RFC2822Headers.IN_REPLY_TO, ""<"" + mid + "".JavaMail.duroty@duroty"" + "">"");email.addHeader(RFC2822Headers.REFERENCES, ""<"" + mid + "".JavaMail.duroty@duroty"" + "">"");email.addHeader(""X-DBox"", ""FILES"");email.addHeader(""X-DRecent"", ""false"");email.setMailSession(session);email.buildMimeMessage();MimeMessage mime = email.getMimeMessage();int size = MessageUtilities.getMessageSize(mime);if (!controlQuota(hsession, user, size)) {throw new MailException(""ErrorMessages.mail.quota.exceded"");}messageable.storeMessage(mid, mime, user);}} catch (FilesException e) {throw e;} catch (Exception e) {throw new FilesException(e);} catch (java.lang.OutOfMemoryError ex) {System.gc();throw new FilesException(ex);} catch (Throwable e) {throw new FilesException(e);} finally {GeneralOperations.closeHibernateSession(hsession);IOUtils.closeQuietly(bais);IOUtils.closeQuietly(fos);}}public String plainStringToMD5(String input) {MessageDigest md = null;byte[] byteHash = null;StringBuffer resultString = new StringBuffer();try {md = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {logger.throwing(getClass().getName(), ""plainStringToMD5"", e);}md.reset();try {md.update(input.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {}byteHash = md.digest();for (int i = 0; i < byteHash.length; i++) {resultString.append(Integer.toHexString(0xF0 & byteHash[i]).charAt(0));resultString.append(Integer.toHexString(0x0F & byteHash[i]));}return (resultString.toString());}public AudioInputStream getAudioInputStream(URL url, String userAgent) throws UnsupportedAudioFileException, IOException {if (TDebug.TraceAudioFileReader) {TDebug.out(""MpegAudioFileReaderWorkaround.getAudioInputStream(URL,String): begin"");}long lFileLengthInBytes = AudioSystem.NOT_SPECIFIED;URLConnection conn = url.openConnection();boolean isShout = false;int toRead = 4;byte[] head = new byte[toRead];if (userAgent != null) conn.setRequestProperty(""User-Agent"", userAgent);conn.setRequestProperty(""Accept"", ""*/*"");conn.setRequestProperty(""Icy-Metadata"", ""1"");conn.setRequestProperty(""Connection"", ""close"");BufferedInputStream bInputStream = new BufferedInputStream(conn.getInputStream());bInputStream.mark(toRead);int read = bInputStream.read(head, 0, toRead);if ((read > 2) && (((head[0] == 'I') | (head[0] == 'i')) && ((head[1] == 'C') | (head[1] == 'c')) && ((head[2] == 'Y') | (head[2] == 'y')))) {isShout = true;}bInputStream.reset();InputStream inputStream = null;if (isShout == true) {IcyInputStream icyStream = new IcyInputStream(bInputStream);icyStream.addTagParseListener(IcyListener.getInstance());inputStream = icyStream;} else {String metaint = conn.getHeaderField(""icy-metaint"");if (metaint != null) {IcyInputStream icyStream = new IcyInputStream(bInputStream, metaint);icyStream.addTagParseListener(IcyListener.getInstance());inputStream = icyStream;} else {inputStream = bInputStream;}}AudioInputStream audioInputStream = null;try {audioInputStream = getAudioInputStream(inputStream, lFileLengthInBytes);} catch (UnsupportedAudioFileException e) {inputStream.close();throw e;} catch (IOException e) {inputStream.close();throw e;}if (TDebug.TraceAudioFileReader) {TDebug.out(""MpegAudioFileReaderWorkaround.getAudioInputStream(URL,String): end"");}return audioInputStream;}public static String crypt(String strPassword, String strSalt) {try {StringTokenizer st = new StringTokenizer(strSalt, ""$"");st.nextToken();byte[] abyPassword = strPassword.getBytes();byte[] abySalt = st.nextToken().getBytes();MessageDigest _md = MessageDigest.getInstance(""MD5"");_md.update(abyPassword);_md.update(MAGIC.getBytes());_md.update(abySalt);MessageDigest md2 = MessageDigest.getInstance(""MD5"");md2.update(abyPassword);md2.update(abySalt);md2.update(abyPassword);byte[] abyFinal = md2.digest();for (int n = abyPassword.length; n > 0; n -= 16) {_md.update(abyFinal, 0, n > 16 ? 16 : n);}abyFinal = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };for (int j = 0, i = abyPassword.length; i != 0; i >>>= 1) {if ((i & 1) == 1) _md.update(abyFinal, j, 1); else _md.update(abyPassword, j, 1);}StringBuffer sbPasswd = new StringBuffer();sbPasswd.append(MAGIC);sbPasswd.append(new String(abySalt));sbPasswd.append('$');abyFinal = _md.digest();for (int n = 0; n < 1000; n++) {MessageDigest md3 = MessageDigest.getInstance(""MD5"");if ((n & 1) != 0) md3.update(abyPassword); else md3.update(abyFinal);if ((n % 3) != 0) md3.update(abySalt);if ((n % 7) != 0) md3.update(abyPassword);if ((n & 1) != 0) md3.update(abyFinal); else md3.update(abyPassword);abyFinal = md3.digest();}int[] anFinal = new int[] { (abyFinal[0] & 0x7f) | (abyFinal[0] & 0x80), (abyFinal[1] & 0x7f) | (abyFinal[1] & 0x80), (abyFinal[2] & 0x7f) | (abyFinal[2] & 0x80), (abyFinal[3] & 0x7f) | (abyFinal[3] & 0x80), (abyFinal[4] & 0x7f) | (abyFinal[4] & 0x80), (abyFinal[5] & 0x7f) | (abyFinal[5] & 0x80), (abyFinal[6] & 0x7f) | (abyFinal[6] & 0x80), (abyFinal[7] & 0x7f) | (abyFinal[7] & 0x80), (abyFinal[8] & 0x7f) | (abyFinal[8] & 0x80), (abyFinal[9] & 0x7f) | (abyFinal[9] & 0x80), (abyFinal[10] & 0x7f) | (abyFinal[10] & 0x80), (abyFinal[11] & 0x7f) | (abyFinal[11] & 0x80), (abyFinal[12] & 0x7f) | (abyFinal[12] & 0x80), (abyFinal[13] & 0x7f) | (abyFinal[13] & 0x80), (abyFinal[14] & 0x7f) | (abyFinal[14] & 0x80), (abyFinal[15] & 0x7f) | (abyFinal[15] & 0x80) };to64(sbPasswd, anFinal[0] << 16 | anFinal[6] << 8 | anFinal[12], 4);to64(sbPasswd, anFinal[1] << 16 | anFinal[7] << 8 | anFinal[13], 4);to64(sbPasswd, anFinal[2] << 16 | anFinal[8] << 8 | anFinal[14], 4);to64(sbPasswd, anFinal[3] << 16 | anFinal[9] << 8 | anFinal[15], 4);to64(sbPasswd, anFinal[4] << 16 | anFinal[10] << 8 | anFinal[5], 4);to64(sbPasswd, anFinal[11], 2);return sbPasswd.toString();} catch (NoSuchAlgorithmException e) {return null;}}"	5
"private HttpURLConnection prepare(URL url, String method) {if (this.username != null && this.password != null) {this.headers.put(""Authorization"", ""Basic "" + Codec.encodeBASE64(this.username + "":"" + this.password));}try {HttpURLConnection connection = (HttpURLConnection) url.openConnection();checkFileBody(connection);connection.setRequestMethod(method);for (String key : this.headers.keySet()) {connection.setRequestProperty(key, headers.get(key));}return connection;} catch (Exception e) {throw new RuntimeException(e);}}public static long copyFile(File source, File target) throws IOException {FileInputStream fileInputStream = null;FileOutputStream fileOutputStream = null;try {fileInputStream = new FileInputStream(source);fileOutputStream = new FileOutputStream(target);FileChannel in = fileInputStream.getChannel();FileChannel out = fileOutputStream.getChannel();return out.transferFrom(in, 0, source.length());} finally {if (fileInputStream != null) fileInputStream.close();if (fileOutputStream != null) fileOutputStream.close();}}public void run() {Vector<Update> updates = new Vector<Update>();if (dic != null) updates.add(dic);if (gen != null) updates.add(gen);if (res != null) updates.add(res);if (help != null) updates.add(help);for (Iterator iterator = updates.iterator(); iterator.hasNext(); ) {Update update = (Update) iterator.next();try {File temp = File.createTempFile(""fm_"" + update.getType(), "".jar"");temp.deleteOnExit();FileOutputStream out = new FileOutputStream(temp);URL url = new URL(update.getAction());URLConnection conn = url.openConnection();com.diccionarioderimas.Utils.setupProxy(conn);InputStream in = conn.getInputStream();byte[] buffer = new byte[1024];int read = 0;int total = 0;while ((read = in.read(buffer)) != -1) {out.write(buffer, 0, read);total += read;if (total > 10000) {progressBar.setValue(progressBar.getValue() + total);total = 0;}}out.close();in.close();String fileTo = basePath + ""diccionariorimas.jar"";if (update.getType() == Update.GENERATOR) fileTo = basePath + ""generador.jar""; else if (update.getType() == Update.RESBC) fileTo = basePath + ""resbc.me""; else if (update.getType() == Update.HELP) fileTo = basePath + ""help.html"";if (update.getType() == Update.RESBC) {Utils.unzip(temp, new File(fileTo));} else {Utils.copyFile(new FileInputStream(temp), new File(fileTo));}} catch (Exception e) {e.printStackTrace();}}setVisible(false);if (gen != null || res != null) {try {new Main(null, basePath, false);} catch (Exception e) {new ErrorDialog(frame, e);}}String restart = """";if (dic != null) restart += ""\nAlgunas de ellas s�lo estar�n disponibles despu�s de reiniciar el diccionario."";JOptionPane.showMessageDialog(frame, ""Se han terminado de realizar las actualizaciones."" + restart, ""Actualizaciones"", JOptionPane.INFORMATION_MESSAGE);}public static void fileCopy(File sourceFile, File destFile) throws IOException {FileChannel source = null;FileChannel destination = null;FileInputStream fis = null;FileOutputStream fos = null;try {fis = new FileInputStream(sourceFile);fos = new FileOutputStream(destFile);source = fis.getChannel();destination = fos.getChannel();destination.transferFrom(source, 0, source.size());} finally {fis.close();fos.close();if (source != null) {source.close();}if (destination != null) {destination.close();}}}public static void copyFile(File in, File out) throws IOException {FileChannel inChannel = new FileInputStream(in).getChannel();FileChannel outChannel = new FileOutputStream(out).getChannel();try {inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {throw e;} finally {if (inChannel != null) inChannel.close();if (outChannel != null) outChannel.close();}}private void copy(File inputFile, File outputFile) throws Exception {FileReader in = new FileReader(inputFile);FileWriter out = new FileWriter(outputFile);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();}public void doActionxxx() {try {System.out.println(""app: ggc"");String server_name = ""http://192.168.4.3:8080/"";server_name = server_name.trim();if (server_name.length() == 0) {server_name = ""http://www.atech-software.com/"";} else {if (!server_name.startsWith(""http://"")) server_name = ""http://"" + server_name;if (!server_name.endsWith(""/"")) server_name = server_name + ""/"";}URL url = new URL(server_name + ""ATechUpdateGetFile?"" + """" + ""file_id=1"" + ""&"" + ""version_requested=1"");InputStream is = url.openStream();RandomAccessFile raf = new RandomAccessFile(""/home/andy/test.jpg"", ""rw"");ArrayList<Integer> list = new ArrayList<Integer>();float size = 671200;long current_size = 0;System.out.println(""File size: "" + is.available());byte[] array = new byte[1024];while (is.available() > 0) {if (is.available() < 1024) {array = new byte[is.available()];}is.read(array);raf.write(array);current_size += array.length;System.out.println(""Progress: "" + ((current_size / size) * 100));}System.out.println(""Size Arr: "" + list.size());CheckSumUtility csu = new CheckSumUtility();System.out.println(""Checksum: "" + csu.getChecksumValue(""/home/andy/test.jpg""));} catch (Exception ex) {ex.printStackTrace();}}private String hashKey(String key) {String hashed = """";try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(key.getBytes());BigInteger hash = new BigInteger(1, md5.digest());hashed = hash.toString(16);} catch (Exception ex) {ex.printStackTrace();hashed = String.valueOf(key.hashCode());}return hashed;}private byte[] getMD5(String string) throws IMException {byte[] buffer = null;try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(string.getBytes(""utf-8""));buffer = md.digest();buffer = getHexString(buffer);} catch (NoSuchAlgorithmException e) {throw new IMException(e);} catch (UnsupportedEncodingException ue) {throw new IMException(ue);}return buffer;}public void load(String url) throws IOException {this.url = url;int col = url.indexOf(':');if (col > 1 && col < 5) {load(new URL(url).openStream());} else {if (new File(url).exists()) {System.out.println(""Loading JAD from file : "" + url);FileInputStream fin = new FileInputStream(url);try {load(fin);} finally {fin.close();}} else {InputStream in = getClass().getResourceAsStream(url);if (in != null) {System.out.println(""Loading JAD from classpath : "" + url);load(in);} else {throw new IOException(""\"""" + url + ""\"" was found in file system or classpath"");}}}}"	5
"private DataFileType[] getDataFiles(Collection<ContentToSend> contentsToSend) {DataFileType[] files = new DataFileType[contentsToSend.size()];int fileIndex = 0;for (ContentToSend contentToSend : contentsToSend) {DataFileType dataFile = DataFileType.Factory.newInstance();dataFile.setFilename(contentToSend.getFileName());dataFile.setId(""D"" + fileIndex);dataFile.setMimeType(contentToSend.getMimeType());dataFile.setContentType(DataFileType.ContentType.EMBEDDED_BASE_64);final StringWriter stringWriter = new StringWriter();final OutputStream encodeStream = Base64.newEncoder(stringWriter, 0, null);final InputStream is = contentToSend.getInputStream();try {long sizeCopied = IOUtils.copyLarge(is, encodeStream);dataFile.setSize(BigDecimal.valueOf(sizeCopied));} catch (IOException e) {throw new RuntimeException(""Failed to get input to the file to be sent"", e);} finally {IOUtils.closeQuietly(encodeStream);IOUtils.closeQuietly(is);}dataFile.setStringValue(stringWriter.toString());files[fileIndex++] = dataFile;}return files;}private static <OS extends OutputStream> OS getUnzipAndDecodeOutputStream(InputStream inputStream, final OS outputStream) {final PipedOutputStream pipedOutputStream = new PipedOutputStream();final List<Throwable> ungzipThreadThrowableList = new LinkedList<Throwable>();Writer decoderWriter = null;Thread ungzipThread = null;try {final PipedInputStream pipedInputStream = new PipedInputStream(pipedOutputStream);ungzipThread = new Thread(new Runnable() {public void run() {GZIPInputStream gzipInputStream = null;try {gzipInputStream = new GZIPInputStream(pipedInputStream);IOUtils.copy(gzipInputStream, outputStream);} catch (Throwable t) {ungzipThreadThrowableList.add(t);} finally {IOUtils.closeQuietly(gzipInputStream);IOUtils.closeQuietly(pipedInputStream);}}});decoderWriter = Base64.newDecoder(pipedOutputStream);ungzipThread.start();IOUtils.copy(inputStream, decoderWriter, DVK_MESSAGE_CHARSET);decoderWriter.flush();pipedOutputStream.flush();} catch (IOException e) {throw new RuntimeException(""failed to unzip and decode input"", e);} finally {IOUtils.closeQuietly(decoderWriter);IOUtils.closeQuietly(pipedOutputStream);if (ungzipThread != null) {try {ungzipThread.join();} catch (InterruptedException ie) {throw new RuntimeException(""thread interrupted while for ungzip thread to finish"", ie);}}}if (!ungzipThreadThrowableList.isEmpty()) {throw new RuntimeException(""ungzip failed"", ungzipThreadThrowableList.get(0));}return outputStream;}public void run() {GZIPInputStream gzipInputStream = null;try {gzipInputStream = new GZIPInputStream(pipedInputStream);IOUtils.copy(gzipInputStream, outputStream);} catch (Throwable t) {ungzipThreadThrowableList.add(t);} finally {IOUtils.closeQuietly(gzipInputStream);IOUtils.closeQuietly(pipedInputStream);}}private static void main(String mp3Path) throws IOException {String convPath = ""http://android.adinterest.biz/wav2mp3.php?k="";String uri = convPath + mp3Path;URL rssurl = new URL(uri);InputStream is = rssurl.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(is, ""UTF-8""));String buf = """";while ((buf = br.readLine()) != null) {}is.close();br.close();}private static void readAndRewrite(File inFile, File outFile) throws IOException {ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);Dataset ds = DcmObjectFactory.getInstance().newDataset();dcmParser.setDcmHandler(ds.getDcmHandler());dcmParser.parseDcmFile(null, Tags.PixelData);PixelDataReader pdReader = pdFact.newReader(ds, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());System.out.println(""reading "" + inFile + ""..."");pdReader.readPixelData(false);ImageOutputStream out = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;ds.writeDataset(out, dcmEncParam);ds.writeHeader(out, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());System.out.println(""writing "" + outFile + ""..."");PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, ds, out, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());pdWriter.writePixelData();out.flush();out.close();System.out.println(""done!"");}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;final StringBuilder sbValueBeforeMD5 = new StringBuilder();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {logger.fatal("""", e);return;}try {final long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(sId);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());final byte[] array = md5.digest();final StringBuilder sb = new StringBuilder();for (int j = 0; j < array.length; ++j) {final int b = array[j] & 0xFF;if (b < 0x10) {sb.append('0');}sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {logger.fatal("""", e);}}public static final String getUniqueId() {String digest = """";try {MessageDigest md = MessageDigest.getInstance(""MD5"");String timeVal = """" + (System.currentTimeMillis() + 1);String localHost = """";try {localHost = InetAddress.getLocalHost().toString();} catch (UnknownHostException e) {throw new RuntimeException(""Error trying to get localhost"" + e.getMessage());}String randVal = """" + new Random().nextInt();String val = timeVal + localHost + randVal;md.reset();md.update(val.getBytes());digest = toHexString(md.digest());} catch (NoSuchAlgorithmException e) {throw new RuntimeException(""NoSuchAlgorithmException : "" + e.getMessage());}return digest;}public static void copy(File source, File dest) throws Exception {FileInputStream in = new FileInputStream(source);FileOutputStream out = new FileOutputStream(dest);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();}public void notifyIterationEnds(final IterationEndsEvent event) {log.info(""moving files..."");File source = new File(""deqsim.log"");if (source.exists()) {File destination = new File(Controler.getIterationFilename(""deqsim.log""));if (!IOUtils.renameFile(source, destination)) {log.info(""WARNING: Could not move deqsim.log to its iteration directory."");}}int parallelCnt = 0;source = new File(""deqsim.log."" + parallelCnt);while (source.exists()) {File destination = new File(Controler.getIterationFilename(""deqsim.log."" + parallelCnt));if (!IOUtils.renameFile(source, destination)) {log.info(""WARNING: Could not move deqsim.log."" + parallelCnt + "" to its iteration directory."");}parallelCnt++;source = new File(""deqsim.log."" + parallelCnt);}source = new File(""loads_out.txt"");if (source.exists()) {File destination = new File(Controler.getIterationFilename(""loads_out.txt""));try {IOUtils.copyFile(source, destination);} catch (FileNotFoundException e) {log.info(""WARNING: Could not copy loads_out.txt to its iteration directory."");} catch (IOException e) {log.info(""WARNING: Could not copy loads_out.txt to its iteration directory."");}destination = new File(""loads_in.txt"");if (!IOUtils.renameFile(source, destination)) {log.info(""WARNING: Could not move loads_out.txt to loads_in.txt."");}}source = new File(""linkprocs.txt"");if (source.exists()) {File destination = new File(Controler.getIterationFilename(""linkprocs.txt""));if (!IOUtils.renameFile(source, destination)) {log.info(""WARNING: Could not move linkprocs.txt to its iteration directory."");}}}@Overridepublic final boolean delete() throws RecordException {if (frozen) {throw new RecordException(""The object is frozen."");}Connection conn = ConnectionManager.getConnection();LoggableStatement pStat = null;Class<? extends Record> actualClass = this.getClass();StatementBuilder builder = null;try {builder = new StatementBuilder(""delete from "" + TableNameResolver.getTableName(actualClass) + "" where id = :id"");Field f = FieldHandler.findField(this.getClass(), ""id"");builder.set(""id"", FieldHandler.getValue(f, this));pStat = builder.getPreparedStatement(conn);log.log(pStat.getQueryString());int i = pStat.executeUpdate();return i == 1;} catch (Exception e) {try {conn.rollback();} catch (SQLException e1) {throw new RecordException(""Error executing rollback"");}throw new RecordException(e);} finally {try {if (pStat != null) {pStat.close();}conn.commit();conn.close();} catch (SQLException e) {throw new RecordException(""Error closing connection"");}}}"	5
"public String index(URL url) {InputStream is = null;try {HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();urlConnection.setInstanceFollowRedirects(true);urlConnection.setAllowUserInteraction(false);System.setProperty(""sun.net.client.defaultConnectTimeout"", ""15000"");System.setProperty(""sun.net.client.defaultReadTimeout"", ""15000"");urlConnection.connect();is = urlConnection.getInputStream();return index(is);} catch (Throwable t) {} finally {IOUtils.closeQuietly(is);}return """";}protected byte[] getHashedID(String ID) {try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.reset();md5.update(ID.getBytes());byte[] digest = md5.digest();byte[] bytes = new byte[WLDB_ID_SIZE];for (int i = 0; i < bytes.length; i++) {bytes[i] = digest[i];}return bytes;} catch (NoSuchAlgorithmException exception) {System.err.println(""Java VM is not compatible"");exit();return null;}}public void init() {String inputLine = """";String registeredLine = """";println(""Insert RSS link:"");String urlString = sc.nextLine();if (urlString.length() == 0) init();println(""Working..."");BufferedReader in = null;URL url = null;try {url = new URL(urlString);in = new BufferedReader(new InputStreamReader(url.openStream()));while ((inputLine = in.readLine()) != null) registeredLine += inputLine;in.close();} catch (MalformedURLException e2) {e2.printStackTrace();} catch (IOException e) {e.printStackTrace();}File elenco = new File(""elenco.txt"");PrintWriter pout = null;try {pout = new PrintWriter(elenco);} catch (FileNotFoundException e1) {e1.printStackTrace();}Vector<String> vector = new Vector<String>();int endIndex = 0;int numeroFoto = 0;while ((registeredLine = registeredLine.substring(endIndex)).length() > 10) {int startIndex = registeredLine.indexOf(""<media:content url='"");if (startIndex == -1) break;registeredLine = registeredLine.substring(startIndex);String address = """";startIndex = registeredLine.indexOf(""http://"");endIndex = registeredLine.indexOf(""' height"");address = registeredLine.substring(startIndex, endIndex);println(address);pout.println(address);vector.add(address);numeroFoto++;}if (pout.checkError()) println(""ERROR"");println(""Images number: "" + numeroFoto);if (numeroFoto == 0) {println(""No photos found, WebAlbum is empty or the RSS link is incorrect."");sc.nextLine();System.exit(0);}println(""Start downloading? (y/n)"");if (!sc.nextLine().equalsIgnoreCase(""y"")) System.exit(0);SimpleDateFormat data = new SimpleDateFormat(""dd-MM-yy_HH.mm"");Calendar oggi = Calendar.getInstance();String cartella = data.format(oggi.getTime());boolean success = new File(cartella).mkdir();if (success) println(""Sub-directory created..."");println(""downloading...\npress ctrl-C to stop"");BufferedInputStream bin = null;BufferedOutputStream bout = null;URL photoAddr = null;int len = 0;for (int x = 0; x < vector.size(); x++) {println(""file "" + (x + 1) + "" of "" + numeroFoto);try {photoAddr = new URL(vector.get(x));bin = new BufferedInputStream(photoAddr.openStream());bout = new BufferedOutputStream(new FileOutputStream(cartella + ""/"" + (x + 1) + "".jpg""));while ((len = bin.read()) != -1) bout.write(len);bout.flush();bout.close();bin.close();} catch (FileNotFoundException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}}println(""Done!"");}public String contentType() {if (_contentType != null) {return (String) _contentType;}String uti = null;URL url = url();LOG.info(""OKIOSIDManagedObject.contentType(): url = "" + url + ""\n"");if (url != null) {String contentType = null;try {contentType = url.openConnection().getContentType();} catch (java.io.IOException e) {LOG.info(""OKIOSIDManagedObject.contentType(): couldn't open URL connection!\n"");String urlString = url.getPath();LOG.info(""OKIOSIDManagedObject.contentType(): urlString = "" + urlString + ""\n"");if (urlString != null) {uti = UTType.preferredIdentifierForTag(UTType.FilenameExtensionTagClass, (NSPathUtilities.pathExtension(urlString)).toLowerCase(), null);}if (uti == null) {uti = UTType.Item;}return uti;}if (contentType != null) {LOG.info(""OKIOSIDManagedObject.contentType(): contentType = "" + contentType + ""\n"");uti = UTType.preferredIdentifierForTag(UTType.MIMETypeTagClass, contentType, null);}if (uti == null) {uti = UTType.Item;}} else {uti = UTType.Item;}_contentType = uti;LOG.info(""OKIOSIDManagedObject.contentType(): uti = "" + uti + ""\n"");return uti;}public boolean isPasswordCorrect(String attempt) {try {MessageDigest digest = MessageDigest.getInstance(attempt);digest.update(salt);digest.update(attempt.getBytes(""UTF-8""));byte[] attemptHash = digest.digest();return attemptHash.equals(hash);} catch (UnsupportedEncodingException ex) {Logger.getLogger(UserRecord.class.getName()).log(Level.SEVERE, null, ex);return false;} catch (NoSuchAlgorithmException ex) {Logger.getLogger(UserRecord.class.getName()).log(Level.SEVERE, null, ex);return false;}}public static void doGet(HttpServletRequest request, HttpServletResponse response, CollOPort colloport, PrintStream out) throws ServletException, IOException {response.addDateHeader(""Expires"", System.currentTimeMillis() - 86400);String id = request.getParameter(""id"");String url_index = request.getParameter(""url_index"");int url_i;try {url_i = Integer.parseInt(url_index);} catch (NumberFormatException nfe) {url_i = 0;}Summary summary = colloport.getSummary(id);String filename = request.getPathInfo();if (filename != null && filename.length() > 0) {filename = filename.substring(1);}String includeURLAll = summary.getIncludeURL();String includeURLs[] = includeURLAll.split("" "");String includeURL = includeURLs[url_i];if (includeURL != null && includeURL.length() > 0) {if (filename.indexOf("":"") > 0) {includeURL = """";} else if (filename.startsWith(""/"")) {includeURL = includeURL.substring(0, includeURL.indexOf(""/""));} else if (!includeURL.endsWith(""/"") && includeURL.indexOf(""."") > 0) {includeURL = includeURL.substring(0, includeURL.lastIndexOf(""/"") + 1);}URL url = null;try {url = new URL(includeURL + response.encodeURL(filename));} catch (MalformedURLException mue) {System.out.println(mue);}URLConnection conn = null;if (url != null) {try {conn = url.openConnection();} catch (IOException ioe) {System.out.println(ioe);}}if (conn != null) {String contentType = conn.getContentType();String contentDisposition;if (contentType == null) {contentType = ""application/x-java-serialized-object"";contentDisposition = ""attachment;filename=\"""" + filename + ""\"""";} else {contentDisposition = ""inline;filename=\"""" + filename + ""\"""";}response.setHeader(""content-disposition"", contentDisposition);response.setContentType(contentType);try {InputStream inputStream = conn.getInputStream();byte[] buffer = new byte[4096];int bytesRead;while ((bytesRead = inputStream.read(buffer)) >= 0) {response.getOutputStream().write(buffer, 0, bytesRead);}inputStream.close();} catch (IOException ioe) {response.setContentType(""text/plain"");ioe.printStackTrace(out);}if (conn instanceof HttpURLConnection) {((HttpURLConnection) conn).disconnect();}}}}public static String getUrl(String urlString) {int retries = 0;String result = """";while (true) {try {URL url = new URL(urlString);BufferedReader rdr = new BufferedReader(new InputStreamReader(url.openStream()));String line = rdr.readLine();while (line != null) {result += line;line = rdr.readLine();}return result;} catch (IOException ex) {if (retries == 5) {logger.debug(""Problem getting url content exhausted"");return result;} else {logger.debug(""Problem getting url content retrying..."" + urlString);try {Thread.sleep((int) Math.pow(2.0, retries) * 1000);} catch (InterruptedException e) {}retries++;}}}}public void start(OutputStream bytes, Target target) throws IOException {URLConnection conn = url.openConnection();InputStream fis = conn.getInputStream();byte[] buf = new byte[4096];while (true) {int bytesRead = fis.read(buf);if (bytesRead < 1) break;bytes.write(buf, 0, bytesRead);}fis.close();}protected ProductionTabsProperties(final PlayerID playerId, final List<Rule> mRules, final String mapDir) {m_rules = mRules;final ResourceLoader loader = ResourceLoader.getMapResourceLoader(mapDir);String propertyFile = PROPERTY_FILE + ""."" + playerId.getName() + "".properties"";URL url = loader.getResource(propertyFile);if (url == null) {propertyFile = PROPERTY_FILE + "".properties"";url = loader.getResource(propertyFile);if (url == null) {} else {try {m_properties.load(url.openStream());} catch (final IOException e) {System.out.println(""Error reading "" + propertyFile + e);}}}}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}"	5
"private void renameTo(File from, File to) {if (!from.exists()) return;if (to.exists()) to.delete();boolean worked = false;try {worked = from.renameTo(to);} catch (Exception e) {database.logError(this, """" + e, null);}if (!worked) {database.logWarning(this, ""Could not rename GEDCOM to "" + to.getAbsolutePath(), null);try {to.delete();final FileReader in = new FileReader(from);final FileWriter out = new FileWriter(to);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();from.delete();} catch (Exception e) {database.logError(this, """" + e, null);}}}public static void copy(String a, String b) throws IOException {File inputFile = new File(a);File outputFile = new File(b);FileReader in = new FileReader(inputFile);FileWriter out = new FileWriter(outputFile);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();}public static String getStringFromURL(URL url) {try {if (url == null) {return null;}URLConnection conn = url.openConnection();conn.connect();if (conn instanceof HttpURLConnection) {int status = ((HttpURLConnection) conn).getResponseCode();if (status != HttpURLConnection.HTTP_OK) {return null;}}int available = conn.getContentLength();InputStream is = conn.getInputStream();byte buffer[] = new byte[available];int pos = 0;while (available > 0) {int amount = is.read(buffer, pos, available);available -= amount;pos += amount;}is.close();String tmp = new String(buffer);return tmp;} catch (Exception ex) {System.out.println(ex);return """";}}public static void copyZip() {InputStream is;OutputStream os;String javacZip = """";try {if (""windows"".equalsIgnoreCase(Compilador.getSo())) {javacZip = ""javacWin.zip"";is = UnZip.class.getResourceAsStream(""javacWin.zip"");} else if (""linux"".equalsIgnoreCase(Compilador.getSo())) {javacZip = ""javacLinux.zip"";is = UnZip.class.getResourceAsStream(""javacLinux.zip"");}is = UnZip.class.getResourceAsStream(javacZip);File tempZip = File.createTempFile(""tempJavacJTraductor"", "".zip"");tempZip.mkdir();tempZip.deleteOnExit();os = FileUtils.openOutputStream(tempZip);IOUtils.copy(is, os);is.close();os.close();extractZip(tempZip.getPath());} catch (Exception ex) {JOptionPane.showMessageDialog(PseutemView.mainPanel, ""Error al copiar los archivos temporales necesarios para ejecutar el programa:\n\n"" + ex, ""Error copiando."", JOptionPane.ERROR_MESSAGE);}}protected void download() {boolean connected = false;String outcome = """";try {InputStream is = null;try {SESecurityManager.setThreadPasswordHandler(this);synchronized (this) {if (destroyed) {return;}scratch_file = AETemporaryFileHandler.createTempFile();raf = new RandomAccessFile(scratch_file, ""rw"");}HttpURLConnection connection;int response;connection = (HttpURLConnection) original_url.openConnection();connection.setRequestProperty(""Connection"", ""Keep-Alive"");connection.setRequestProperty(""User-Agent"", user_agent);int time_remaining = listener.getPermittedTime();if (time_remaining > 0) {Java15Utils.setConnectTimeout(connection, time_remaining);}connection.connect();time_remaining = listener.getPermittedTime();if (time_remaining < 0) {throw (new IOException(""Timeout during connect""));}Java15Utils.setReadTimeout(connection, time_remaining);connected = true;response = connection.getResponseCode();last_response = response;last_response_retry_after_secs = -1;if (response == 503) {long retry_after_date = new Long(connection.getHeaderFieldDate(""Retry-After"", -1L)).longValue();if (retry_after_date <= -1) {last_response_retry_after_secs = connection.getHeaderFieldInt(""Retry-After"", -1);} else {last_response_retry_after_secs = (int) ((retry_after_date - System.currentTimeMillis()) / 1000);if (last_response_retry_after_secs < 0) {last_response_retry_after_secs = -1;}}}is = connection.getInputStream();if (response == HttpURLConnection.HTTP_ACCEPTED || response == HttpURLConnection.HTTP_OK || response == HttpURLConnection.HTTP_PARTIAL) {byte[] buffer = new byte[64 * 1024];int requests_outstanding = 1;while (!destroyed) {int permitted = listener.getPermittedBytes();if (requests_outstanding == 0 || permitted < 1) {permitted = 1;Thread.sleep(100);}int len = is.read(buffer, 0, Math.min(permitted, buffer.length));if (len <= 0) {break;}synchronized (this) {try {raf.write(buffer, 0, len);} catch (Throwable e) {outcome = ""Write failed: "" + e.getMessage();ExternalSeedException error = new ExternalSeedException(outcome, e);error.setPermanentFailure(true);throw (error);}}listener.reportBytesRead(len);requests_outstanding = checkRequests();}checkRequests();} else {outcome = ""Connection failed: "" + connection.getResponseMessage();ExternalSeedException error = new ExternalSeedException(outcome);error.setPermanentFailure(true);throw (error);}} catch (IOException e) {if (con_fail_is_perm_fail && !connected) {outcome = ""Connection failed: "" + e.getMessage();ExternalSeedException error = new ExternalSeedException(outcome);error.setPermanentFailure(true);throw (error);} else {outcome = ""Connection failed: "" + Debug.getNestedExceptionMessage(e);if (last_response_retry_after_secs >= 0) {outcome += "", Retry-After: "" + last_response_retry_after_secs + "" seconds"";}ExternalSeedException excep = new ExternalSeedException(outcome, e);if (e instanceof FileNotFoundException) {excep.setPermanentFailure(true);}throw (excep);}} catch (ExternalSeedException e) {throw (e);} catch (Throwable e) {if (e instanceof ExternalSeedException) {throw ((ExternalSeedException) e);}outcome = ""Connection failed: "" + Debug.getNestedExceptionMessage(e);throw (new ExternalSeedException(""Connection failed"", e));} finally {SESecurityManager.unsetThreadPasswordHandler();if (is != null) {try {is.close();} catch (Throwable e) {}}}} catch (ExternalSeedException e) {if (!connected && con_fail_is_perm_fail) {e.setPermanentFailure(true);}destroy(e);}}public static String genDigest(String info) {MessageDigest alga;byte[] digesta = null;try {alga = MessageDigest.getInstance(""SHA-1"");alga.update(info.getBytes());digesta = alga.digest();} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return byte2hex(digesta);}public Scene load(URL url) throws FileNotFoundException, IncorrectFormatException, ParsingErrorException {BufferedReader reader;if (baseUrl == null) setBaseUrlFromUrl(url);try {reader = new BufferedReader(new InputStreamReader(url.openStream()));} catch (IOException e) {throw new FileNotFoundException(e.getMessage());}fromUrl = true;return load(reader);}private void mergeInDefaultMenuItemActionPerformed(java.awt.event.ActionEvent evt) {try {String surl = AutoplotUtil.getProperty(""autoplot.default.bookmarks"", ""http://www.autoplot.org/data/demos.xml"");URL url = new URL(surl);Document doc = AutoplotUtil.readDoc(url.openStream());List<Bookmark> importBook = Bookmark.parseBookmarks(doc.getDocumentElement());List<Bookmark> newList = new ArrayList(model.list.size());for (int i = 0; i < model.list.size(); i++) {newList.add(i, model.list.get(i).copy());}model.mergeList(importBook, newList);model.setList(newList);formatToFile(bookmarksFile);} catch (SAXException ex) {logger.log(Level.SEVERE, null, ex);} catch (IOException ex) {logger.log(Level.SEVERE, null, ex);} catch (ParserConfigurationException ex) {logger.log(Level.SEVERE, null, ex);}}public OAuthResponseMessage access(OAuthMessage request, net.oauth.ParameterStyle style) throws IOException {HttpMessage httpRequest = HttpMessage.newRequest(request, style);HttpResponseMessage httpResponse = http.execute(httpRequest, httpParameters);httpResponse = HttpMessageDecoder.decode(httpResponse);return new OAuthResponseMessage(httpResponse);}public void run() {try {Socket socket = getSocket();System.out.println(""opening socket to "" + address + "" on "" + port);InputStream in = socket.getInputStream();for (; ; ) {FileTransferHeader header = FileTransferHeader.readHeader(in);if (header == null) break;System.out.println(""header: "" + header);List<String> parts = header.getFilename().getSegments();String filename;if (parts.size() > 0) filename = ""dl-"" + parts.get(parts.size() - 1); else filename = ""dl-"" + session.getScreenname();System.out.println(""writing to file "" + filename);long sum = 0;if (new File(filename).exists()) {FileInputStream fis = new FileInputStream(filename);byte[] block = new byte[10];for (int i = 0; i < block.length; ) {int count = fis.read(block);if (count == -1) break;i += count;}FileTransferChecksum summer = new FileTransferChecksum();summer.update(block, 0, 10);sum = summer.getValue();}FileChannel fileChannel = new FileOutputStream(filename).getChannel();FileTransferHeader outHeader = new FileTransferHeader(header);outHeader.setHeaderType(FileTransferHeader.HEADERTYPE_ACK);outHeader.setIcbmMessageId(cookie);outHeader.setBytesReceived(0);outHeader.setReceivedChecksum(sum);OutputStream socketOut = socket.getOutputStream();System.out.println(""sending header: "" + outHeader);outHeader.write(socketOut);for (int i = 0; i < header.getFileSize(); ) {long transferred = fileChannel.transferFrom(Channels.newChannel(in), 0, header.getFileSize() - i);System.out.println(""transferred "" + transferred);if (transferred == -1) return;i += transferred;}System.out.println(""finished transfer!"");fileChannel.close();FileTransferHeader doneHeader = new FileTransferHeader(header);doneHeader.setHeaderType(FileTransferHeader.HEADERTYPE_RECEIVED);doneHeader.setFlags(doneHeader.getFlags() | FileTransferHeader.FLAG_DONE);doneHeader.setBytesReceived(doneHeader.getBytesReceived() + 1);doneHeader.setIcbmMessageId(cookie);doneHeader.setFilesLeft(doneHeader.getFilesLeft() - 1);doneHeader.write(socketOut);if (doneHeader.getFilesLeft() - 1 <= 0) {socket.close();break;}}} catch (IOException e) {e.printStackTrace();return;}}"	5
"public static String getMd5Hash(String plaintext) {try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.reset();md5.update(plaintext.getBytes());byte[] digest = md5.digest();BigInteger bigInt = new BigInteger(1, digest);String hashtext = bigInt.toString(16);while (hashtext.length() < 32) {hashtext = ""0"" + hashtext;}return hashtext;} catch (final NoSuchAlgorithmException e) {e.printStackTrace();}return """";}private void scanURL(String packagePath, Collection<String> componentClassNames, URL url) throws IOException {URLConnection connection = url.openConnection();JarFile jarFile;if (connection instanceof JarURLConnection) {jarFile = ((JarURLConnection) connection).getJarFile();} else {jarFile = getAlternativeJarFile(url);}if (jarFile != null) {scanJarFile(packagePath, componentClassNames, jarFile);} else if (supportsDirStream(url)) {Stack<Queued> queue = new Stack<Queued>();queue.push(new Queued(url, packagePath));while (!queue.isEmpty()) {Queued queued = queue.pop();scanDirStream(queued.packagePath, queued.packageURL, componentClassNames, queue);}} else {String packageName = packagePath.replace(""/"", ""."");if (packageName.endsWith(""."")) {packageName = packageName.substring(0, packageName.length() - 1);}scanDir(packageName, new File(url.getFile()), componentClassNames);}}private void weightAndPlaceClasses() {int rows = getRows();for (int curRow = _maxPackageRank; curRow < rows; curRow++) {xPos = getHGap() / 2;BOTLRuleDiagramNode[] rowObject = getObjectsInRow(curRow);for (int i = 0; i < rowObject.length; i++) {if (curRow == _maxPackageRank) {int nDownlinks = rowObject[i].getDownlinks().size();rowObject[i].setWeight((nDownlinks > 0) ? (1 / nDownlinks) : 2);} else {Vector uplinks = rowObject[i].getUplinks();int nUplinks = uplinks.size();if (nUplinks > 0) {float average_col = 0;for (int j = 0; j < uplinks.size(); j++) {average_col += ((BOTLRuleDiagramNode) (uplinks.elementAt(j))).getColumn();}average_col /= nUplinks;rowObject[i].setWeight(average_col);} else {rowObject[i].setWeight(1000);}}}int[] pos = new int[rowObject.length];for (int i = 0; i < pos.length; i++) {pos[i] = i;}boolean swapped = true;while (swapped) {swapped = false;for (int i = 0; i < pos.length - 1; i++) {if (rowObject[pos[i]].getWeight() > rowObject[pos[i + 1]].getWeight()) {int temp = pos[i];pos[i] = pos[i + 1];pos[i + 1] = temp;swapped = true;}}}for (int i = 0; i < pos.length; i++) {rowObject[pos[i]].setColumn(i);if ((i > _vMax) && (rowObject[pos[i]].getUplinks().size() == 0) && (rowObject[pos[i]].getDownlinks().size() == 0)) {if (getColumns(rows - 1) > _vMax) {rows++;}rowObject[pos[i]].setRank(rows - 1);} else {rowObject[pos[i]].setLocation(new Point(xPos, yPos));xPos += rowObject[pos[i]].getSize().getWidth() + getHGap();}}yPos += getRowHeight(curRow) + getVGap();}}public boolean check(int timeout) {StringBuilder result = null;java.net.URL url;java.io.InputStream in = null;try {url = new java.net.URL(location + ""/prisms?method=test"");java.net.URLConnection conn = url.openConnection();conn.setConnectTimeout(timeout);in = conn.getInputStream();java.io.Reader reader = new java.io.InputStreamReader(in);result = new StringBuilder();int read = reader.read();while (read >= 0) {result.append((char) read);read = reader.read();}} catch (java.io.IOException e) {log.error(""Instance check failed"", e);if (in != null) try {in.close();} catch (java.io.IOException e2) {}}return result != null && result.toString().startsWith(""success"");}private static void dumpUrl(URL url) throws IOException {BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String s = reader.readLine();while (s != null) {System.out.println(s);s = reader.readLine();}reader.close();}public static void main(String[] args) {final String filePath1 = ""e:\\mysite\\data\\up\\itsite"";final String filePath2 = ""d:\\works\\itsite\\itsite"";IOUtils.listAllFilesNoRs(new File(filePath2), new FileFilter() {@Overridepublic boolean accept(File file) {if (file.getName().equals("".svn"")) {return false;}final long modify = file.lastModified();final long time = DateUtils.toDate(""2012-03-21 17:43"", ""yyyy-MM-dd HH:mm"").getTime();if (modify >= time) {if (file.isFile()) {File f = new File(StringsUtils.replace(file.getAbsolutePath(), filePath2, filePath1));f.getParentFile().mkdirs();try {IOUtils.copyFile(file, f);} catch (IOException e) {e.printStackTrace();}System.out.println(f.getName());}}return true;}});}@Overridepublic boolean accept(File file) {if (file.getName().equals("".svn"")) {return false;}final long modify = file.lastModified();final long time = DateUtils.toDate(""2012-03-21 17:43"", ""yyyy-MM-dd HH:mm"").getTime();if (modify >= time) {if (file.isFile()) {File f = new File(StringsUtils.replace(file.getAbsolutePath(), filePath2, filePath1));f.getParentFile().mkdirs();try {IOUtils.copyFile(file, f);} catch (IOException e) {e.printStackTrace();}System.out.println(f.getName());}}return true;}private InputStream loadFromUrl(URL url, String contentType) throws IOException {Proxy proxy = null;if (isUseProxy) {Authenticator.setDefault(new Authenticator() {protected PasswordAuthentication getPasswordAuthentication() {return new PasswordAuthentication(proxyUser, proxyPassword.toCharArray());}});proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyHost, proxyPort));} else {proxy = Proxy.NO_PROXY;}URLConnection connection = url.openConnection(proxy);connection.setRequestProperty(""Accept-Charset"", DEFAULT_CHARSET);connection.setRequestProperty(""Content-Type"", contentType);connection.setRequestProperty(""User-Agent"", USER_AGENT);InputStream response = connection.getInputStream();return response;}public boolean backupLastAuditSchema(File lastAuditSchema) {boolean isBkupFileOK = false;String writeTimestamp = DateFormatUtils.format(new java.util.Date(), configFile.getTimestampPattern());File target = new File(configFile.getAuditSchemaFileDir() + File.separator + configFile.getAuditSchemaFileName() + "".bkup_"" + writeTimestamp);FileChannel sourceChannel = null;FileChannel targetChannel = null;try {sourceChannel = new FileInputStream(lastAuditSchema).getChannel();targetChannel = new FileOutputStream(target).getChannel();targetChannel.transferFrom(sourceChannel, 0, sourceChannel.size());} catch (IOException e) {logger.log(Level.SEVERE, ""IO exception occurred while copying file"", e);} finally {if ((target != null) && (target.exists()) && (target.length() > 0)) {isBkupFileOK = true;}try {if (sourceChannel != null) {sourceChannel.close();}if (targetChannel != null) {targetChannel.close();}} catch (IOException e) {logger.warning(""closing channels failed"");}}return isBkupFileOK;}private void addEMInformation() {try {long emDate = System.currentTimeMillis();if (_local == true) {File emFile = new File(""emprotz.dat"");if (!emFile.exists()) {return;}emDate = emFile.lastModified();}if (emDate > this._emFileDate) {this._emFileDate = emDate;this._emDate = emDate;for (int ii = 0; ii < this._projectInfo.size(); ii++) {Information info = getInfo(ii);if (info != null) {info._emDeadline = null;info._emFrames = null;info._emValue = null;}}Reader reader = null;if (_local == true) {reader = new FileReader(""emprotz.dat"");} else {StringBuffer urlName = new StringBuffer();urlName.append(""http://home.comcast.net/"");urlName.append(""~wxdude1/emsite/download/"");urlName.append(""emprotz.zip"");try {URL url = new URL(urlName.toString());InputStream stream = url.openStream();ZipInputStream zip = new ZipInputStream(stream);zip.getNextEntry();reader = new InputStreamReader(zip);} catch (MalformedURLException mue) {mue.printStackTrace();}}BufferedReader file = new BufferedReader(reader);try {String line1 = null;int count = 0;while ((line1 = file.readLine()) != null) {String line2 = (line1 != null) ? file.readLine() : null;String line3 = (line2 != null) ? file.readLine() : null;String line4 = (line3 != null) ? file.readLine() : null;count++;if ((count > 1) && (line1 != null) && (line2 != null) && (line3 != null) && (line4 != null)) {if (line1.length() > 2) {int posBegin = line1.indexOf(""\"""", 0);int posEnd = line1.indexOf(""\"""", posBegin + 1);if ((posBegin >= 0) && (posEnd >= 0)) {String project = line1.substring(posBegin + 1, posEnd - posBegin);int projectNum = Integer.parseInt(project);Integer deadline = Integer.valueOf(line2.trim());Double value = Double.valueOf(line3.trim());Integer frames = Integer.valueOf(line4.trim());Information info = getInfo(projectNum);if (info == null) {info = createInfo(projectNum);}if (info._emValue == null) {info._emDeadline = deadline;info._emFrames = frames;info._emValue = value;}}}}}} catch (Exception e) {e.printStackTrace();} finally {file.close();}}} catch (FileNotFoundException e) {} catch (IOException e) {}}"	5
"protected static void copyFile(File in, File out) throws IOException {java.io.FileWriter filewriter = null;java.io.FileReader filereader = null;try {filewriter = new java.io.FileWriter(out);filereader = new java.io.FileReader(in);char[] buf = new char[4096];int nread = filereader.read(buf, 0, 4096);while (nread >= 0) {filewriter.write(buf, 0, nread);nread = filereader.read(buf, 0, 4096);}buf = null;} finally {try {filereader.close();} catch (Throwable t) {}try {filewriter.close();} catch (Throwable t) {}}}@SuppressWarnings(""unchecked"")public ArrayList<GmailContact> getAllContacts() throws GmailException {String query = properties.getString(""export_page"");query = query.replace(""[RANDOM_INT]"", """" + random.nextInt());int statusCode = -1;GetMethod get = new GetMethod(query);if (log.isInfoEnabled()) log.info(""getting all contacts ..."");try {statusCode = client.executeMethod(get);if (statusCode != 200) throw new GmailException(""In contacts export page: Status code expected: 200 -> Status code returned: "" + statusCode);} catch (HttpException e) {throw new GmailException(""HttpException in contacts export page:"" + e.getMessage());} catch (IOException e) {throw new GmailException(""IOException in contacts export page:"" + e.getMessage());} finally {get.releaseConnection();}if (log.isTraceEnabled()) log.trace(""accessing contacts export page successful..."");String query_post = properties.getString(""outlook_export_page"");PostMethod post = new PostMethod(query_post);post.addRequestHeader(""Accept-Encoding"", ""gzip,deflate"");post.addRequestHeader(""Accept-Charset"", ""ISO-8859-1,utf-8;q=0.7,*;q=0.8"");NameValuePair[] data = { new NameValuePair(""at"", getCookie(""GMAIL_AT"")), new NameValuePair(""ecf"", ""o""), new NameValuePair(""ac"", ""Export Contacts"") };post.setRequestBody(data);if (log.isTraceEnabled()) log.trace(""getting contacts csv file..."");try {statusCode = client.executeMethod(post);if (statusCode != 200) throw new GmailException(""In csv file post: Status code expected: 200 -> Status code returned: "" + statusCode);if (log.isTraceEnabled()) log.trace(""Gmail: csv charset: "" + post.getResponseCharSet());GMAIL_OUTPUT_CHARSET = post.getResponseCharSet();InputStreamReader isr = new InputStreamReader(new GZIPInputStream(post.getResponseBodyAsStream()), post.getResponseCharSet());CSVReader reader = new CSVReader(isr);List csvEntries = reader.readAll();reader.close();ArrayList<GmailContact> contacts = new ArrayList<GmailContact>();MessageDigest m = MessageDigest.getInstance(""MD5"");if (log.isTraceEnabled()) log.trace(""creating Gmail contacts..."");for (int i = 1; i < csvEntries.size(); i++) {GmailContact contact = new GmailContact();String[] value = (String[]) csvEntries.get(i);for (int j = 0; j < value.length; j++) {switch(j) {case 0:contact.setName(value[j]);break;case 1:contact.setEmail(value[j]);if (contact.getName() == null) contact.setIdName(value[j]); else contact.setIdName(contact.getName() + value[j]);break;case 2:contact.setNotes(value[j]);break;case 3:contact.setEmail2(value[j]);break;case 4:contact.setEmail3(value[j]);break;case 5:contact.setMobilePhone(value[j]);break;case 6:contact.setPager(value[j]);break;case 7:contact.setCompany(value[j]);break;case 8:contact.setJobTitle(value[j]);break;case 9:contact.setHomePhone(value[j]);break;case 10:contact.setHomePhone2(value[j]);break;case 11:contact.setHomeFax(value[j]);break;case 12:contact.setHomeAddress(value[j]);break;case 13:contact.setBusinessPhone(value[j]);break;case 14:contact.setBusinessPhone2(value[j]);break;case 15:contact.setBusinessFax(value[j]);break;case 16:contact.setBusinessAddress(value[j]);break;case 17:contact.setOtherPhone(value[j]);break;case 18:contact.setOtherFax(value[j]);break;case 19:contact.setOtherAddress(value[j]);break;}}m.update(contact.toString().getBytes());if (log.isTraceEnabled()) log.trace(""setting Md5 Hash..."");contact.setMd5Hash(new BigInteger(m.digest()).toString());contacts.add(contact);}if (log.isTraceEnabled()) log.trace(""Mapping contacts uid..."");Collections.sort(contacts);ArrayList<GmailContact> idList = getAllContactsID();for (int i = 0; i < idList.size(); i++) {contacts.get(i).setId(idList.get(i).getId());}if (log.isInfoEnabled()) log.info(""getting all contacts info successful..."");return contacts;} catch (HttpException e) {throw new GmailException(""HttpException in csv file post:"" + e.getMessage());} catch (IOException e) {throw new GmailException(""IOException in csv file post:"" + e.getMessage());} catch (NoSuchAlgorithmException e) {throw new GmailException(""No such md5 algorithm "" + e.getMessage());} finally {post.releaseConnection();}}private static void sentRequest() {try {URLConnection urlConn;URL url = new URL(gatewayURL);urlConn = url.openConnection();urlConn.setRequestProperty(""Content-Type"", ""text/xml"");urlConn.setDoOutput(true);OutputStream ostream = urlConn.getOutputStream();PrintWriter out = new PrintWriter(ostream);out.print(request);out.close();ostream.close();InputStream inStream = urlConn.getInputStream();File myFile = new File(styleSheetLocation);if (type.equals(""A"") && myFile.exists()) {TransformerFactory tFactory = TransformerFactory.newInstance();Transformer transformer = tFactory.newTransformer(new StreamSource(styleSheetLocation));transformer.transform(new StreamSource(inStream), new StreamResult(System.out));} else {BufferedReader in = new BufferedReader(new InputStreamReader(inStream));String inputLine;while ((inputLine = in.readLine()) != null) {System.out.println(inputLine);}in.close();}} catch (Exception e) {e.printStackTrace();}}public static void copyFile(File in, File out) {int len;byte[] buffer = new byte[1024];try {FileInputStream fin = new FileInputStream(in);FileOutputStream fout = new FileOutputStream(out);while ((len = fin.read(buffer)) >= 0) fout.write(buffer, 0, len);fin.close();fout.close();} catch (IOException ex) {}}@Testpublic final void testImportODScontentXml() throws Exception {URL url = ODSTableImporterTest.class.getResource(""/Messages.ods_FILES/content.xml"");String systemId = url.getPath();InputStream in = url.openStream();ODSTableImporter b = new ODSTableImporter();b.importODSContentXml(systemId, in, null);assertMessagesOds(b);}@Testpublic final void testImportODS() throws Exception {URL url = ODSTableImporterTest.class.getResource(""/Messages.ods"");InputStream in = url.openStream();ODSTableImporter b = new ODSTableImporter();b.importODS(in, null);assertMessagesOds(b);}public File uploadImage(InputStream inputStream, String fileName, String sessionId) {File file = new File(PathConfig.getInstance().sessionFolder(sessionId) + File.separator + fileName);FileOutputStream fileOutputStream = null;try {FileUtils.touch(file);fileOutputStream = new FileOutputStream(file);IOUtils.copy(inputStream, fileOutputStream);} catch (IOException e) {logger.error(""Save uploaded image to file occur IOException."", e);throw new FileOperationException(""Save uploaded image to file occur IOException."", e);} finally {try {if (fileOutputStream != null) {fileOutputStream.close();}} catch (IOException e) {logger.error(""Close FileOutputStream Occur IOException while save a uploaded image."", e);}}return file;}private void initFiles() throws IOException {if (!tempDir.exists()) {if (!tempDir.mkdir()) throw new IOException(""Temp dir '' can not be created"");}File tmp = new File(tempDir, TORRENT_FILENAME);if (!tmp.exists()) {FileChannel in = new FileInputStream(torrentFile).getChannel();FileChannel out = new FileOutputStream(tmp).getChannel();in.transferTo(0, in.size(), out);in.close();out.close();}torrentFile = tmp;if (!stateFile.exists()) {FileChannel out = new FileOutputStream(stateFile).getChannel();int numChunks = metadata.getPieceHashes().size();ByteBuffer zero = ByteBuffer.wrap(new byte[] { 0, 0, 0, 0 });for (int i = 0; i < numChunks; i++) {out.write(zero);zero.clear();}out.close();}}@Overridepublic void run() {try {BufferedReader in = new BufferedReader(new InputStreamReader(new URL(urlInfo).openStream()));String ligneEnCours;int i = 0;informations = """";while ((ligneEnCours = in.readLine()) != null) {switch(i) {case 0:version = ligneEnCours;break;case 1:url = ligneEnCours;break;default:informations += ligneEnCours + '\n';break;}i++;}in.close();erreur = false;} catch (IOException e) {erreur = true;texteErreur = e.getMessage();if (texteErreur.equals(""Network is unreachable"")) {texteErreur = ""Pas de réseau"";numErreur = 1;}if (e instanceof FileNotFoundException) {texteErreur = ""Problème paramétrage"";numErreur = 2;}e.printStackTrace();} finally {for (ActionListener al : listeners) {al.actionPerformed(null);}}}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}"	5
"public void testJDBCSavepoints() throws Exception {String sql;String msg;int i;PreparedStatement ps;ResultSet rs;Savepoint sp1;Savepoint sp2;Savepoint sp3;Savepoint sp4;Savepoint sp5;Savepoint sp6;Savepoint sp7;int rowcount = 0;sql = ""drop table t if exists"";stmt.executeUpdate(sql);sql = ""create table t(id int, fn varchar, ln varchar, zip int)"";stmt.executeUpdate(sql);conn1.setAutoCommit(true);conn1.setAutoCommit(false);sql = ""insert into t values(?,?,?,?)"";ps = conn1.prepareStatement(sql);ps.setString(2, ""Mary"");ps.setString(3, ""Peterson-Clancy"");i = 0;for (; i < 10; i++) {ps.setInt(1, i);ps.setInt(4, i);ps.executeUpdate();}sp1 = conn1.setSavepoint(""savepoint1"");for (; i < 20; i++) {ps.setInt(1, i);ps.setInt(4, i);ps.executeUpdate();}sp2 = conn1.setSavepoint(""savepoint2"");for (; i < 30; i++) {ps.setInt(1, i);ps.setInt(4, i);ps.executeUpdate();}sp3 = conn1.setSavepoint(""savepoint3"");for (; i < 40; i++) {ps.setInt(1, i);ps.setInt(4, i);ps.executeUpdate();}sp4 = conn1.setSavepoint(""savepoint4"");for (; i < 50; i++) {ps.setInt(1, i);ps.setInt(4, i);ps.executeUpdate();}sp5 = conn1.setSavepoint(""savepoint5"");sp6 = conn1.setSavepoint(""savepoint6"");sp7 = conn1.setSavepoint(""savepoint7"");rs = stmt.executeQuery(""select count(*) from t"");rs.next();rowcount = rs.getInt(1);rs.close();msg = ""select count(*) from t value"";try {assertEquals(msg, 50, rowcount);} catch (Exception e) {}conn2.setAutoCommit(false);conn2.setSavepoint(""savepoint1"");conn2.setSavepoint(""savepoint2"");msg = ""savepoint released succesfully on non-originating connection"";try {conn2.releaseSavepoint(sp2);assertTrue(msg, false);} catch (Exception e) {}try {conn2.rollback(sp1);msg = ""succesful rollback to savepoint on "" + ""non-originating connection"";assertTrue(msg, false);} catch (Exception e) {}msg = ""direct execution of <release savepoint> statement failed to "" + ""release JDBC-created SQL-savepoint with identical savepoint name"";try {conn2.createStatement().executeUpdate(""release savepoint \""savepoint2\"""");} catch (Exception e) {try {assertTrue(msg, false);} catch (Exception e2) {}}msg = ""direct execution of <rollback to savepoint> statement failed to "" + ""roll back to existing JDBC-created SQL-savepoint with identical "" + ""savepoint name"";try {conn2.createStatement().executeUpdate(""rollback to savepoint \""savepoint1\"""");} catch (Exception e) {e.printStackTrace();try {assertTrue(msg, false);} catch (Exception e2) {}}conn1.releaseSavepoint(sp6);msg = ""savepoint released succesfully > 1 times"";try {conn1.releaseSavepoint(sp6);assertTrue(msg, false);} catch (Exception e) {}msg = ""savepoint released successfully after preceding savepoint released"";try {conn1.releaseSavepoint(sp7);assertTrue(msg, false);} catch (Exception e) {}msg = ""preceding same-point savepoint destroyed by following savepoint release"";try {conn1.releaseSavepoint(sp5);} catch (Exception e) {try {assertTrue(msg, false);} catch (Exception e2) {}}conn1.rollback(sp4);rs = stmt.executeQuery(""select count(*) from t"");rs.next();rowcount = rs.getInt(1);rs.close();msg = ""select * rowcount after 50 inserts - 10 rolled back:"";try {assertEquals(msg, 40, rowcount);} catch (Exception e) {}msg = ""savepoint rolled back succesfully > 1 times"";try {conn1.rollback(sp4);assertTrue(msg, false);} catch (Exception e) {}conn1.rollback(sp3);rs = stmt.executeQuery(""select count(*) from t"");rs.next();rowcount = rs.getInt(1);rs.close();msg = ""select count(*) after 50 inserts - 20 rolled back:"";try {assertEquals(msg, 30, rowcount);} catch (Exception e) {}msg = ""savepoint released succesfully after use in rollback"";try {conn1.releaseSavepoint(sp3);assertTrue(msg, false);} catch (Exception e) {}conn1.rollback(sp1);msg = ""savepoint rolled back without raising an exception after "" + ""rollback to a preceeding savepoint"";try {conn1.rollback(sp2);assertTrue(msg, false);} catch (Exception e) {}conn1.rollback();msg = ""savepoint released succesfully when it should have been "" + ""destroyed by a full rollback"";try {conn1.releaseSavepoint(sp1);assertTrue(msg, false);} catch (Exception e) {}conn1.setAutoCommit(false);sp1 = conn1.setSavepoint(""savepoint1"");conn1.rollback();conn1.setAutoCommit(false);conn1.createStatement().executeUpdate(""savepoint \""savepoint1\"""");conn1.setAutoCommit(false);sp1 = conn1.setSavepoint(""savepoint1"");conn1.createStatement().executeUpdate(""savepoint \""savepoint1\"""");conn1.setAutoCommit(false);sp1 = conn1.setSavepoint(""savepoint1"");conn1.createStatement().executeUpdate(""savepoint \""savepoint1\"""");}private void initSerializerFiles(String fileName, HashSet<String> fileList, HashMap<Class, Class> classMap, Class type) {try {ClassLoader classLoader = getClassLoader();if (classLoader == null) return;Enumeration iter;iter = classLoader.getResources(fileName);while (iter.hasMoreElements()) {URL url = (URL) iter.nextElement();if (fileList.contains(url.toString())) continue;fileList.add(url.toString());InputStream is = null;try {is = url.openStream();Properties props = new Properties();props.load(is);for (Map.Entry entry : props.entrySet()) {String apiName = (String) entry.getKey();String serializerName = (String) entry.getValue();Class apiClass = null;Class serializerClass = null;try {apiClass = Class.forName(apiName, false, classLoader);} catch (ClassNotFoundException e) {log.fine(url + "": "" + apiName + "" is not available in this context: "" + getClassLoader());continue;}try {serializerClass = Class.forName(serializerName, false, classLoader);} catch (ClassNotFoundException e) {log.fine(url + "": "" + serializerName + "" is not available in this context: "" + getClassLoader());continue;}if (!type.isAssignableFrom(serializerClass)) throw new HessianException(url + "": "" + serializerClass.getName() + "" is invalid because it does not implement "" + type.getName());classMap.put(apiClass, serializerClass);}} finally {if (is != null) is.close();}}} catch (RuntimeException e) {throw e;} catch (Exception e) {throw new HessianException(e);}}private static void ensureJavaScriptHostBytes(TreeLogger logger) throws UnableToCompleteException {if (javaScriptHostBytes != null) {return;}String className = JavaScriptHost.class.getName();try {String path = className.replace('.', '/') + "".class"";ClassLoader cl = Thread.currentThread().getContextClassLoader();URL url = cl.getResource(path);if (url != null) {javaScriptHostBytes = getClassBytesFromStream(url.openStream());} else {logger.log(TreeLogger.ERROR, ""Could not find required bootstrap class '"" + className + ""' in the classpath"", null);throw new UnableToCompleteException();}} catch (IOException e) {logger.log(TreeLogger.ERROR, ""Error reading class bytes for "" + className, e);throw new UnableToCompleteException();}}public void initializeWebInfo() throws MalformedURLException, IOException, DOMException {Tidy tidy = new Tidy();URL url = new URL(YOUTUBE_URL + videoId);InputStream in = url.openConnection().getInputStream();Document doc = tidy.parseDOM(in, null);Element e = doc.getDocumentElement();String title = null;if (e != null && e.hasChildNodes()) {NodeList children = e.getElementsByTagName(""title"");if (children != null) {for (int i = 0; i < children.getLength(); i++) {try {Element childE = (Element) children.item(i);if (childE.getTagName().equals(""title"")) {NodeList titleChildren = childE.getChildNodes();for (int n = 0; n < titleChildren.getLength(); n++) {if (titleChildren.item(n).getNodeType() == childE.TEXT_NODE) {title = titleChildren.item(n).getNodeValue();}}}} catch (Exception exp) {exp.printStackTrace();}}}}if (title == null || title.equals("""")) {throw new DOMException(DOMException.NOT_FOUND_ERR, ""no title found"");} else {setTitle(title);}}@Overridepublic void runTask(HashMap jobStack) throws Exception {String lstrFilter = (String) getResources().get(""filter"");String lstrTarget = (String) getResources().get(""target"");String lstrSource = (String) getResources().get(""source"");String[] lstrFilesFound = null;lstrFilesFound = searchForFiles(lstrSource, lstrFilter);if (lstrFilesFound != null) {for (int i = 0; i < lstrFilesFound.length; i++) {getLog().debug(""Found match ["" + lstrSource + File.separator + lstrFilesFound[i] + ""]"");File lfileSource = new File(lstrSource + File.separator + lstrFilesFound[i]);File lfileTarget = new File(lstrTarget + File.separator + lstrFilesFound[i]);FileChannel lfisInput = null;FileChannel lfosOutput = null;try {lfisInput = new FileInputStream(lfileSource).getChannel();lfosOutput = new FileOutputStream(lfileTarget).getChannel();int maxCount = (32 * 1024 * 1024) - (32 * 1024);long size = lfisInput.size();long position = 0;while (position < size) {position += lfisInput.transferTo(position, maxCount, lfosOutput);}} finally {if (lfisInput != null) {lfisInput.close();}if (lfosOutput != null) {lfosOutput.close();}}}}}private String md5(String txt) {try {MessageDigest m = MessageDigest.getInstance(""MD5"");m.update(txt.getBytes(), 0, txt.length());return new BigInteger(1, m.digest()).toString(16);} catch (Exception e) {return ""BAD MD5"";}}public static void copyAFile(final String entree, final String sortie) {FileChannel in = null;FileChannel out = null;try {in = new FileInputStream(entree).getChannel();out = new FileOutputStream(sortie).getChannel();in.transferTo(0, in.size(), out);} catch (Exception e) {e.printStackTrace();} finally {if (in != null) {try {in.close();} catch (IOException e) {e.printStackTrace();}}if (out != null) {try {out.close();} catch (IOException e) {e.printStackTrace();}}}}private String getStoreName() {try {final MessageDigest digest = MessageDigest.getInstance(""MD5"");digest.update(protectionDomain.getBytes());final byte[] bs = digest.digest();final StringBuffer sb = new StringBuffer(bs.length * 2);for (int i = 0; i < bs.length; i++) {final String s = Integer.toHexString(bs[i] & 0xff);if (s.length() < 2) sb.append('0');sb.append(s);}return sb.toString();} catch (final NoSuchAlgorithmException e) {throw new RuntimeException(""Can't save credentials: digest method MD5 unavailable."");}}public static String encrypt(String senha) {try {MessageDigest digest = MessageDigest.getInstance(""MD5"");digest.update(senha.getBytes());BASE64Encoder encoder = new BASE64Encoder();return encoder.encode(digest.digest());} catch (NoSuchAlgorithmException ns) {ns.printStackTrace();return senha;}}static Object read(String path, String encoding, boolean return_string) throws IOException {InputStream in;if (path.startsWith(""classpath:"")) {path = path.substring(""classpath:"".length());URL url = Estimate.class.getClassLoader().getResource(path);if (url == null) {throw new IllegalArgumentException(""Not found "" + path + "" in classpath."");}System.out.println(""read content from:"" + url.getFile());in = url.openStream();} else {File f = new File(path);if (!f.exists()) {throw new IllegalArgumentException(""Not found "" + path + "" in system."");}System.out.println(""read content from:"" + f.getAbsolutePath());in = new FileInputStream(f);}Reader re;if (encoding != null) {re = new InputStreamReader(in, encoding);} else {re = new InputStreamReader(in);}if (!return_string) {return re;}char[] chs = new char[1024];int count;StringBuffer content = new StringBuffer();while ((count = re.read(chs)) != -1) {content.append(chs, 0, count);}re.close();return content.toString();}"	5
"public HTTPResponse makeRequest(BasicHttpRequest request) throws IOException {try {if (!conn.isOpen()) {logger.warn(ApacheHTTP.class, ""Creating socket"");Socket socket = getSocket(host.getHostName(), host.getPort(), ssl, true);conn.bind(socket, params);}HttpContext context = new BasicHttpContext(null);context.setAttribute(ExecutionContext.HTTP_CONNECTION, conn);context.setAttribute(ExecutionContext.HTTP_TARGET_HOST, host);context.setAttribute(ExecutionContext.HTTP_REQUEST, request);request.setParams(params);httpexecutor.preProcess(request, httpproc, context);HttpResponse response = httpexecutor.execute(request, conn, context);httpexecutor.postProcess(response, httpproc, context);if (!connStrategy.keepAlive(response, context)) keepAlive = false;int statusCode = response.getStatusLine().getStatusCode();HttpEntity resp = response.getEntity();if (statusCode >= 400) {HTTPEntityInfo info = new HTTPEntityInfo((int) resp.getContentLength(), """", resp.getContentType().getValue());byte[] bytes = IOUtil.toByteArray(resp.getContent());throw new HTTPErrorResponse(response.getStatusLine().getReasonPhrase(), statusCode + """", bytes, info);} else {Header lastmodHeader = response.getLastHeader(""last-modified"");String lastmod = lastmodHeader == null ? """" : lastmodHeader.getValue();Header contentType = resp.getContentType();HTTPEntityInfo info = new HTTPEntityInfo((int) resp.getContentLength(), lastmod, contentType == null ? null : contentType.getValue());return new HTTPResponse(info, resp.getContent());}} catch (HttpException he) {throw new IOException(he);}}public String loadURL(URL url) {String retVal = """";try {InputStream inputStream = url.openStream();BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));String line = bufferedReader.readLine();retVal += line + ""\n"";while (line != null) {System.out.println(line);line = bufferedReader.readLine();if (line != null) retVal += line + ""\n"";}bufferedReader.close();} catch (MalformedURLException e) {e.printStackTrace();retVal = e.getMessage();} catch (IOException e) {e.printStackTrace();retVal = e.getMessage();} catch (Exception e) {e.printStackTrace();retVal = e.getMessage();}return retVal;}public boolean check(Object credentials) {try {byte[] digest = null;if (credentials instanceof Password || credentials instanceof String) {synchronized (__md5Lock) {if (__md == null) __md = MessageDigest.getInstance(""MD5"");__md.reset();__md.update(credentials.toString().getBytes(StringUtil.__ISO_8859_1));digest = __md.digest();}if (digest == null || digest.length != _digest.length) return false;for (int i = 0; i < digest.length; i++) if (digest[i] != _digest[i]) return false;return true;} else if (credentials instanceof MD5) {MD5 md5 = (MD5) credentials;if (_digest.length != md5._digest.length) return false;for (int i = 0; i < _digest.length; i++) if (_digest[i] != md5._digest[i]) return false;return true;} else if (credentials instanceof Credential) {return ((Credential) credentials).check(this);} else {Log.warn(""Can't check "" + credentials.getClass() + "" against MD5"");return false;}} catch (Exception e) {Log.warn(e);return false;}}public static String digest(String password) {try {byte[] digest;synchronized (__md5Lock) {if (__md == null) {try {__md = MessageDigest.getInstance(""MD5"");} catch (Exception e) {Log.warn(e);return null;}}__md.reset();__md.update(password.getBytes(StringUtil.__ISO_8859_1));digest = __md.digest();}return __TYPE + TypeUtil.toString(digest, 16);} catch (Exception e) {Log.warn(e);return null;}}public void actionPerformed(ActionEvent ae) {String actionCommand = ae.getActionCommand();if (actionCommand == null) {return;}if (DataManager.SHOW_DEBUG) {System.out.println(""Action command : "" + actionCommand);}DataManager dataManager = ClientDirector.getDataManager();PlayerImpl myPlayer = dataManager.getMyPlayer();if (!myPlayer.getLocation().isRoom() && actionCommand.equals(""createChatRoom"")) {JOptionPane.showMessageDialog(null, ""Sorry, but you can not create/leave chat channels\n"" + ""on World/Town Maps."", ""INFORMATION"", JOptionPane.INFORMATION_MESSAGE);return;}if (actionCommand.equals(""createChatRoom"")) {WotlasLocation chatRoomLocation = myPlayer.getLocation();String chatRoomName = JOptionPane.showInputDialog(""Please enter a Name:"");if (chatRoomName == null || chatRoomName.length() == 0) {return;}if (this.tabbedPane.getTabCount() >= ChatRoom.MAXIMUM_CHATROOMS_PER_ROOM - 1) {this.b_createChatRoom.setEnabled(false);} else {this.b_createChatRoom.setEnabled(true);}myPlayer.sendMessage(new ChatRoomCreationMessage(chatRoomName, myPlayer.getPrimaryKey()));} else if (actionCommand.equals(""leaveChatRoom"")) {if (!this.currentPrimaryKey.equals(ChatRoom.DEFAULT_CHAT)) {myPlayer.sendMessage(new RemPlayerFromChatRoomMessage(myPlayer.getPrimaryKey(), this.currentPrimaryKey));}} else if (actionCommand.equals(""helpChat"")) {DataManager dManager = ClientDirector.getDataManager();dManager.sendMessage(new SendTextMessage(dManager.getMyPlayer().getPrimaryKey(), dManager.getMyPlayer().getPlayerName(), getMyCurrentChatPrimaryKey(), ""/help"", ChatRoom.NORMAL_VOICE_LEVEL));} else if (actionCommand.equals(""imageChat"")) {String imageURL = JOptionPane.showInputDialog(""Please enter your image's URL:\nExample: http://wotlas.sf.net/images/wotlas.gif"");if (imageURL == null || imageURL.length() == 0) {return;}try {URL url = new URL(imageURL);URLConnection urlC = url.openConnection();urlC.connect();String ctype = urlC.getContentType();if (!ctype.startsWith(""image/"")) {JOptionPane.showMessageDialog(null, ""The specified URL does not refer to an image !"", ""Information"", JOptionPane.INFORMATION_MESSAGE);return;}if (urlC.getContentLength() > 50 * 1024) {JOptionPane.showMessageDialog(null, ""The specified image is too big (above 50kB)."", ""Information"", JOptionPane.INFORMATION_MESSAGE);return;}} catch (Exception ex) {Debug.signal(Debug.ERROR, this, ""Failed to get image: "" + ex);JOptionPane.showMessageDialog(null, ""Failed to get the specified image...\nCheck your URL."", ""Error"", JOptionPane.ERROR_MESSAGE);return;}DataManager dManager = ClientDirector.getDataManager();dManager.sendMessage(new SendTextMessage(dManager.getMyPlayer().getPrimaryKey(), dManager.getMyPlayer().getPlayerName(), getMyCurrentChatPrimaryKey(), ""<img src='"" + imageURL + ""'>"", ChatRoom.NORMAL_VOICE_LEVEL));} else {if (DataManager.SHOW_DEBUG) {System.out.println(""Err : unknown actionCommand"");System.out.println(""No action command found!"");}}}public static void copyFile(File source, File destination, long copyLength) throws IOException {if (!source.exists()) {String message = ""File "" + source + "" does not exist"";throw new FileNotFoundException(message);}if (destination.getParentFile() != null && !destination.getParentFile().exists()) {forceMkdir(destination.getParentFile());}if (destination.exists() && !destination.canWrite()) {String message = ""Unable to open file "" + destination + "" for writing."";throw new IOException(message);}if (source.getCanonicalPath().equals(destination.getCanonicalPath())) {String message = ""Unable to write file "" + source + "" on itself."";throw new IOException(message);}if (copyLength == 0) {truncateFile(destination, 0);}FileInputStream input = null;FileOutputStream output = null;try {input = new FileInputStream(source);output = new FileOutputStream(destination);long lengthLeft = copyLength;byte[] buffer = new byte[(int) Math.min(BUFFER_LENGTH, lengthLeft + 1)];int read;while (lengthLeft > 0) {read = input.read(buffer);if (read == -1) {break;}lengthLeft -= read;output.write(buffer, 0, read);}output.flush();output.getFD().sync();} finally {IOUtil.closeQuietly(input);IOUtil.closeQuietly(output);}destination.setLastModified(source.lastModified());}public static void renameFileMultiFallback(File sourceFile, File destFile) throws FileHandlingException {if (destFile.exists()) {throw new FileHandlingException(FileHandlingException.FILE_ALREADY_EXISTS);}if (!sourceFile.exists()) {return;}boolean succ = sourceFile.renameTo(destFile);if (succ) {NLogger.warn(FileUtils.class, ""First renameTo operation worked!"");return;}NLogger.warn(FileUtils.class, ""First renameTo operation failed."");System.gc();Thread.yield();succ = sourceFile.renameTo(destFile);if (succ) {return;}NLogger.warn(FileUtils.class, ""Second renameTo operation failed."");FileInputStream input = null;FileOutputStream output = null;try {input = new FileInputStream(sourceFile);output = new FileOutputStream(destFile);long lengthLeft = sourceFile.length();byte[] buffer = new byte[(int) Math.min(BUFFER_LENGTH, lengthLeft + 1)];int read;while (lengthLeft > 0) {read = input.read(buffer);if (read == -1) {break;}lengthLeft -= read;output.write(buffer, 0, read);}} catch (IOException exp) {NLogger.warn(FileUtils.class, ""Third renameTo operation failed."");throw new FileHandlingException(FileHandlingException.RENAME_FAILED, exp);} finally {IOUtil.closeQuietly(input);IOUtil.closeQuietly(output);}destFile.setLastModified(sourceFile.lastModified());FileUtils.deleteFileMultiFallback(sourceFile);}private static void doCopyFile(File srcFile, File destFile, boolean preserveFileDate) throws IOException {if (destFile.exists() && destFile.isDirectory()) {throw new IOException(""Destination '"" + destFile + ""' exists but is a directory"");}FileChannel input = new FileInputStream(srcFile).getChannel();try {FileChannel output = new FileOutputStream(destFile).getChannel();try {output.transferFrom(input, 0, input.size());} finally {IOUtil.closeQuietly(output);}} finally {IOUtil.closeQuietly(input);}if (srcFile.length() != destFile.length()) {throw new IOException(""Failed to copy full contents from '"" + srcFile + ""' to '"" + destFile + ""'"");}if (preserveFileDate) {destFile.setLastModified(srcFile.lastModified());}}public static void rewrite(String[] args) throws IOException, CodeCheckException {ClassWriter writer = new ClassWriter();writer.readClass(new FileInputStream(args[0]));for (Iterator i = writer.getMethods().iterator(); i.hasNext(); ) {MethodInfo method = (MethodInfo) i.next();CodeAttribute attribute = method.getCodeAttribute();int origStack = attribute.getMaxStack();System.out.print(method.getName());attribute.codeCheck();System.out.println("" "" + origStack + "" "" + attribute.getMaxStack());}BufferedOutputStream outStream = new BufferedOutputStream(new FileOutputStream(args[1]));writer.writeClass(outStream);outStream.close();}public static void testclass(String[] args) throws IOException, CodeCheckException {ClassWriter writer = new ClassWriter();writer.emptyClass(ClassWriter.ACC_PUBLIC, ""TestClass"", ""java/lang/Object"");MethodInfo newMethod = writer.addMethod(ClassWriter.ACC_PUBLIC | ClassWriter.ACC_STATIC, ""main"", ""([Ljava/lang/String;)V"");CodeAttribute attribute = newMethod.getCodeAttribute();int constantIndex = writer.getStringConstantIndex(""It's alive! It's alive!!"");int fieldRefIndex = writer.getReferenceIndex(ClassWriter.CONSTANT_Fieldref, ""java/lang/System"", ""out"", ""Ljava/io/PrintStream;"");int methodRefIndex = writer.getReferenceIndex(ClassWriter.CONSTANT_Methodref, ""java/io/PrintStream"", ""println"", ""(Ljava/lang/String;)V"");ArrayList instructions = new ArrayList();byte[] operands;operands = new byte[2];NetByte.intToPair(fieldRefIndex, operands, 0);instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""getstatic""), 0, operands, false));operands = new byte[1];operands[0] = (byte) constantIndex;instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""ldc""), 0, operands, false));operands = new byte[2];NetByte.intToPair(methodRefIndex, operands, 0);instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""invokevirtual""), 0, operands, false));instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""return""), 0, null, false));attribute.insertInstructions(0, 0, instructions);attribute.setMaxLocals(1);attribute.codeCheck();System.out.println(""constantIndex="" + constantIndex + "" fieldRef="" + fieldRefIndex + "" methodRef="" + methodRefIndex);writer.writeClass(new FileOutputStream(""c:/cygnus/home/javaodb/classes/TestClass.class""));writer.readClass(new FileInputStream(""c:/cygnus/home/javaodb/classes/TestClass.class""));}"	5
"public void writeBack(File destinationFile, boolean makeCopy) throws IOException {if (makeCopy) {FileChannel sourceChannel = new java.io.FileInputStream(getFile()).getChannel();FileChannel destinationChannel = new java.io.FileOutputStream(destinationFile).getChannel();sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel);sourceChannel.close();destinationChannel.close();} else {getFile().renameTo(destinationFile);}if (getExifTime() != null && getOriginalTime() != null && !getExifTime().equals(getOriginalTime())) {String adjustArgument = ""-ts"" + m_dfJhead.format(getExifTime());ProcessBuilder pb = new ProcessBuilder(m_tm.getJheadCommand(), adjustArgument, destinationFile.getAbsolutePath());pb.directory(destinationFile.getParentFile());System.out.println(pb.command().get(0) + "" "" + pb.command().get(1) + "" "" + pb.command().get(2));final Process p = pb.start();try {p.waitFor();} catch (InterruptedException e) {e.printStackTrace();}}}public SparqlQueryLoaderImpl() throws IOException {ClassLoader loader = SparqlQueryLoaderImpl.class.getClassLoader();URL url = loader.getResource(PROPERTIES_FILENAME);InputStream stream = url.openStream();properties.load(stream);stream.close();String names = getProperties().getProperty(NAMES_PARAMETER);StringTokenizer st = new StringTokenizer(names, "","");while (st.hasMoreTokens()) {String name = st.nextToken();String value = readContents(String.format(""sparql/%s.sparql"", name));getName2Query().put(name, value);}}public static void copy(String fileFrom, String fileTo) throws IOException {FileInputStream inputStream = null;FileOutputStream outputStream = null;FileChannel inputChannel = null;FileChannel outputChannel = null;try {inputStream = new FileInputStream(fileFrom);outputStream = new FileOutputStream(fileTo);inputChannel = inputStream.getChannel();outputChannel = outputStream.getChannel();inputChannel.transferTo(0, inputChannel.size(), outputChannel);} finally {try {inputChannel.close();} finally {try {outputChannel.close();} finally {try {inputStream.close();} finally {outputStream.close();}}}}}private ByteBuffer getByteBuffer(String resource) throws IOException {ClassLoader classLoader = this.getClass().getClassLoader();InputStream in = classLoader.getResourceAsStream(resource);ByteArrayOutputStream out = new ByteArrayOutputStream();IOUtils.copy(in, out);return ByteBuffer.wrap(out.toByteArray());}public static void main(String[] args) {final MavenDeployerGui gui = new MavenDeployerGui();final Chooser repositoryChooser = new Chooser(gui.formPanel, JFileChooser.DIRECTORIES_ONLY);final Chooser artifactChooser = new Chooser(gui.formPanel, JFileChooser.FILES_ONLY);final Chooser pomChooser = new Chooser(gui.formPanel, JFileChooser.FILES_ONLY, new POMFilter());gui.cancel.setEnabled(false);gui.cbDeployPOM.setVisible(false);gui.cbDeployPOM.setEnabled(false);gui.mavenBin.setText(findMavenExecutable());gui.repositoryBrowser.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {File repo = repositoryChooser.chooseFrom(currentDir);if (repo != null) {currentDir = repositoryChooser.currentFolder;gui.repositoryURL.setText(repo.getAbsolutePath());}}});gui.artifactBrowser.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {File artifact = artifactChooser.chooseFrom(currentDir);if (artifact != null) {currentDir = artifactChooser.currentFolder;gui.artifactFile.setText(artifact.getAbsolutePath());}}});gui.deploy.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {deployer = new Deployer(gui, pom);deployer.execute();}});gui.clear.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {gui.console.setText("""");}});gui.cancel.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {if (deployer != null) {deployer.stop();deployer = null;}}});gui.cbDeployPOM.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {readPOM(gui);}});gui.loadPOM.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {pom = pomChooser.chooseFrom(currentDir);if (pom != null) {currentDir = pomChooser.currentFolder;readPOM(gui);gui.cbDeployPOM.setText(""Deploy also "" + pom.getAbsolutePath());gui.cbDeployPOM.setEnabled(true);gui.cbDeployPOM.setVisible(true);}}});String version = """";try {URL url = Thread.currentThread().getContextClassLoader().getResource(""META-INF/maven/com.mycila.maven/maven-deployer/pom.properties"");Properties p = new Properties();p.load(url.openStream());version = "" "" + p.getProperty(""version"");} catch (Exception ignored) {version = "" x.y"";}JFrame frame = new JFrame(""Maven Deployer"" + version + "" - By Mathieu Carbou (http://blog.mycila.com)"");frame.setContentPane(gui.formPanel);frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);frame.setLocationRelativeTo(null);frame.setLocationByPlatform(true);frame.pack();frame.setVisible(true);}public static SOAPMessage call(SOAPMessage request, URL url) throws IOException, SOAPException {URLConnection conn = url.openConnection();conn.setDoOutput(true);conn.setDoInput(true);conn.connect();request.writeTo(conn.getOutputStream());MessageFactory mf = MessageFactory.newInstance(SOAPConstants.SOAP_1_2_PROTOCOL);return mf.createMessage(null, conn.getInputStream());}private static void copyFile(final File sourceFile, final File destFile) throws IOException {if (!destFile.exists()) {if (!destFile.createNewFile()) {throw new IOException(""Destination file cannot be created: "" + destFile.getPath());}}FileChannel source = null;FileChannel destination = null;try {source = new FileInputStream(sourceFile).getChannel();destination = new FileOutputStream(destFile).getChannel();destination.transferFrom(source, 0, source.size());} finally {if (source != null) {source.close();}if (destination != null) {destination.close();}}}public static String encrypt(String text) {char[] toEncrypt = text.toCharArray();StringBuffer hexString = new StringBuffer();try {MessageDigest dig = MessageDigest.getInstance(""MD5"");dig.reset();String pw = """";for (int i = 0; i < toEncrypt.length; i++) {pw += toEncrypt[i];}dig.update(pw.getBytes());byte[] digest = dig.digest();int digestLength = digest.length;for (int i = 0; i < digestLength; i++) {hexString.append(hexDigit(digest[i]));}} catch (java.security.NoSuchAlgorithmException ae) {ae.printStackTrace();}return hexString.toString();}public static void copyCompletely(InputStream input, OutputStream output) throws IOException {if ((output instanceof FileOutputStream) && (input instanceof FileInputStream)) {try {FileChannel target = ((FileOutputStream) output).getChannel();FileChannel source = ((FileInputStream) input).getChannel();source.transferTo(0, Integer.MAX_VALUE, target);source.close();target.close();return;} catch (Exception e) {}}byte[] buf = new byte[8192];while (true) {int length = input.read(buf);if (length < 0) break;output.write(buf, 0, length);}try {input.close();} catch (IOException ignore) {}try {output.close();} catch (IOException ignore) {}}public void run() {btnReintentar.setEnabled(false);try {lblEstado.setText(""Conectando con servidor..."");escribir(""\nConectando con servidor..."");URL url = new URL(""http://apeiron.sourceforge.net/version.php"");lblEstado.setText(""Obteniendo informaci�n de versi�n..."");escribir(""Ok\n"");escribir(""Obteniendo informaci�n sobre �ltima versi�n..."");BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));String linea = br.readLine();escribir(""Ok\n"");if (linea != null) {escribir(""Versi�n mas reciente: "" + linea + ""\n"");if (Principal.version < Double.parseDouble(linea)) {lblEstado.setText(""Hay una nueva versi�n: Apeiron "" + linea);escribir(""Puede obtener la actualizaci�n de: http://apeiron.sourceforge.net\n"");btnActualizar.setEnabled(true);setVisible(true);} else {lblEstado.setText(""Usted tiene la �ltima versi�n"");}}br.close();} catch (MalformedURLException e) {escribir(""Fall�\n"" + e + ""\n"");e.printStackTrace();} catch (IOException e) {escribir(""Fall�\n"" + e + ""\n"");e.printStackTrace();}btnReintentar.setEnabled(true);}"	5
"@Testpublic void testMark() throws IllegalArgumentException, IOException {Assert.assertNotNull(this.m_detector);File f = new File(""testdocuments/voiddocument/Voiderror.htm"");Assert.assertTrue(""Test file "" + f.getAbsolutePath() + "" does not exist. "", f.exists());URL url = f.toURL();this.m_detector.detectCodepage(url.openStream(), 200);}@SuppressWarnings(""unchecked"")public static void createInstance(ExternProtoDeclare externProtoDeclare) {ExternProtoDeclareImport epdi = new ExternProtoDeclareImport();HashMap<String, ProtoDeclareImport> protoMap = X3DImport.getTheImport().getCurrentParser().getProtoMap();boolean loadedFromWeb = false;File f = null;URL url = null;List<String> urls = externProtoDeclare.getUrl();String tmpUrls = urls.toString();urls = Util.splitStringToListOfStrings(tmpUrls);String protoName = null;int urlCount = urls.size();for (int urlIndex = 0; urlIndex < urlCount; urlIndex++) {try {String path = urls.get(urlIndex);if (path.startsWith(""\"""") && path.endsWith(""\"""")) path = path.substring(1, path.length() - 1);int hashMarkPos = path.indexOf(""#"");int urlLength = path.length();if (hashMarkPos == -1) path = path.substring(0, urlLength); else {protoName = path.substring(hashMarkPos + 1, urlLength);path = path.substring(0, hashMarkPos);}if (path.toLowerCase().startsWith(""http://"")) {String filename = path.substring(path.lastIndexOf(""/"") + 1, path.lastIndexOf("".""));String fileext = path.substring(path.lastIndexOf("".""), path.length());f = File.createTempFile(filename, fileext);url = new URL(path);InputStream is = url.openStream();FileOutputStream os = new FileOutputStream(f);byte[] buffer = new byte[0xFFFF];for (int len; (len = is.read(buffer)) != -1; ) os.write(buffer, 0, len);is.close();os.close();url = f.toURI().toURL();loadedFromWeb = true;} else {if (path.startsWith(""/"") || (path.charAt(1) == ':')) {} else {File x3dfile = X3DImport.getTheImport().getCurrentParser().getFile();path = Util.getRealPath(x3dfile) + path;}f = new File(path);url = f.toURI().toURL();Object testContent = url.getContent();if (testContent == null) continue;loadedFromWeb = false;}X3DDocument x3dDocument = null;try {x3dDocument = X3DDocument.Factory.parse(f);} catch (XmlException e) {e.printStackTrace();return;} catch (IOException e) {e.printStackTrace();return;}Scene scene = x3dDocument.getX3D().getScene();ProtoDeclare[] protos = scene.getProtoDeclareArray();ProtoDeclare protoDeclare = null;if (protoName == null) {protoDeclare = protos[0];} else {for (ProtoDeclare proto : protos) {if (proto.getName().equals(protoName)) {protoDeclare = proto;break;}}}if (protoDeclare == null) continue;ProtoBody protoBody = protoDeclare.getProtoBody();epdi.protoBody = protoBody;protoMap.put(externProtoDeclare.getName(), epdi);break;} catch (MalformedURLException e) {} catch (IOException e) {} finally {if (loadedFromWeb && f != null) {f.delete();}}}}public static String addWeibo(String weibo, File pic, String uid) throws Throwable {List<NameValuePair> qparams = new ArrayList<NameValuePair>();qparams.add(new BasicNameValuePair(""_surl"", """"));qparams.add(new BasicNameValuePair(""_t"", ""0""));qparams.add(new BasicNameValuePair(""location"", ""home""));qparams.add(new BasicNameValuePair(""module"", ""stissue""));if (pic != null) {String picId = upLoadImg(pic, uid);qparams.add(new BasicNameValuePair(""pic_id"", picId));}qparams.add(new BasicNameValuePair(""rank"", ""weibo""));qparams.add(new BasicNameValuePair(""text"", weibo));HttpPost post = getHttpPost(""http://weibo.com/aj/mblog/add?__rnd=1333611402611"", uid);UrlEncodedFormEntity params = new UrlEncodedFormEntity(qparams, HTTP.UTF_8);post.setEntity(params);HttpResponse response = client.execute(post);HttpEntity entity = response.getEntity();String content = EntityUtils.toString(entity, HTTP.UTF_8);post.abort();return content;}public static String upLoadImg(File pic, String uid) throws Throwable {System.out.println(""开始上传======================================================="");HttpPost post = getHttpPost(getUploadUrl(uid), uid);FileBody file = new FileBody(pic, ""image/jpg"");MultipartEntity reqEntity = new MultipartEntity();reqEntity.addPart(""pic1"", file);post.setEntity(reqEntity);HttpResponse response = client.execute(post);int status = response.getStatusLine().getStatusCode();post.abort();if (status == HttpStatus.SC_MOVED_TEMPORARILY || status == HttpStatus.SC_MOVED_PERMANENTLY) {String newuri = response.getHeaders(""location"")[0].getValue();System.out.println(newuri);return newuri.substring(newuri.indexOf(""pid="") + 4, newuri.indexOf(""&token=""));}return null;}protected void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {response.setContentType(""application/zip"");response.setHeader(""Content-Disposition"", ""inline; filename=c:/server1.zip"");try {BufferedInputStream origin = null;FileOutputStream dest = new FileOutputStream(""server.zip"");ZipOutputStream zipOut = new ZipOutputStream(new BufferedOutputStream(dest));byte data[] = new byte[BUFFER];java.util.Properties props = new java.util.Properties();props.load(new java.io.FileInputStream(ejb.bprocess.util.NewGenLibRoot.getRoot() + ""/SystemFiles/ENV_VAR.txt""));String jbossHomePath = props.getProperty(""JBOSS_HOME"");jbossHomePath = jbossHomePath.replaceAll(""deploy"", ""log"");FileInputStream fis = new FileInputStream(new File(jbossHomePath + ""/server.log""));origin = new BufferedInputStream(fis, BUFFER);ZipEntry entry = new ZipEntry(jbossHomePath + ""/server.log"");zipOut.putNextEntry(entry);int count;while ((count = origin.read(data, 0, BUFFER)) != -1) {zipOut.write(data, 0, count);}origin.close();zipOut.closeEntry();java.io.FileInputStream fis1 = new java.io.FileInputStream(new java.io.File(""server.zip""));java.nio.channels.FileChannel fc1 = fis1.getChannel();int length1 = (int) fc1.size();byte buffer[] = new byte[length1];System.out.println(""size of zip file = "" + length1);fis1.read(buffer);OutputStream out1 = response.getOutputStream();out1.write(buffer);fis1.close();out1.close();} catch (Exception e) {e.printStackTrace();}}private static void _readAllRegionMDFiles(ClassLoader loader, RegionMetadata bean, String regionMDFile) {if (_LOG.isFinest()) {_LOG.finest(""searching for region-metadata with resource:{0}"", regionMDFile);}try {Enumeration<URL> files = loader.getResources(regionMDFile);while (files.hasMoreElements()) {URL url = files.nextElement();String publicId = url.toString();try {InputStream in = url.openStream();_readRegionMetadata(bean, in, publicId);in.close();} catch (IOException e) {_error(publicId, e);}}} catch (IOException e) {_LOG.warning(""ERR_GET_REGION_METADATA_FILE"", __CONFIG_FILE_OTHER);_LOG.warning(e);}}public void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {String version = req.getParameter(""version"");String cdn = req.getParameter(""cdn"");String dependencies = req.getParameter(""dependencies"");String optimize = req.getParameter(""optimize"");String cacheFile = null;String result = null;boolean isCached = false;Boolean isError = true;if (!version.equals(""1.3.2"")) {result = ""invalid version: "" + version;}if (!cdn.equals(""google"") && !cdn.equals(""aol"")) {result = ""invalide CDN type: "" + cdn;}if (!optimize.equals(""comments"") && !optimize.equals(""shrinksafe"") && !optimize.equals(""none"") && !optimize.equals(""shrinksafe.keepLines"")) {result = ""invalid optimize type: "" + optimize;}if (!dependencies.matches(""^[\\w\\-\\,\\s\\.]+$"")) {result = ""invalid dependency list: "" + dependencies;}try {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {result = e.getMessage();}if (result == null) {md.update(dependencies.getBytes());String digest = (new BASE64Encoder()).encode(md.digest()).replace('+', '~').replace('/', '_').replace('=', '_');cacheFile = cachePath + ""/"" + version + ""/"" + cdn + ""/"" + digest + ""/"" + optimize + "".js"";File file = new File(cacheFile);if (file.exists()) {isCached = true;isError = false;}}if (result == null && !isCached) {BuilderContextAction contextAction = new BuilderContextAction(builderPath, version, cdn, dependencies, optimize);ContextFactory.getGlobal().call(contextAction);Exception exception = contextAction.getException();if (exception != null) {result = exception.getMessage();} else {result = contextAction.getResult();FileUtil.writeToFile(cacheFile, result, null, true);isError = false;}}} catch (Exception e) {result = e.getMessage();}res.setCharacterEncoding(""utf-8"");if (isError) {result = result.replaceAll(""\\\"""", ""\\\"""");result = ""<html><head><script type=\""text/javascript\"">alert(\"""" + result + ""\"");</script></head><body></body></html>"";PrintWriter writer = res.getWriter();writer.append(result);} else {res.setHeader(""Content-Type"", ""application/x-javascript"");res.setHeader(""Content-disposition"", ""attachment; filename=dojo.js"");res.setHeader(""Content-Encoding"", ""gzip"");File file = new File(cacheFile);BufferedInputStream in = new java.io.BufferedInputStream(new DataInputStream(new FileInputStream(file)));OutputStream out = res.getOutputStream();byte[] bytes = new byte[64000];int bytesRead = 0;while (bytesRead != -1) {bytesRead = in.read(bytes);if (bytesRead != -1) {out.write(bytes, 0, bytesRead);}}}}public static void main(String[] args) throws IOException {ReadableByteChannel in = Channels.newChannel((new FileInputStream(""/home/sannies/suckerpunch-distantplanet_h1080p/suckerpunch-distantplanet_h1080p.mov"")));Movie movie = MovieCreator.build(in);in.close();List<Track> tracks = movie.getTracks();movie.setTracks(new LinkedList<Track>());double startTime = 35.000;double endTime = 145.000;boolean timeCorrected = false;for (Track track : tracks) {if (track.getSyncSamples() != null && track.getSyncSamples().length > 0) {if (timeCorrected) {throw new RuntimeException(""The startTime has already been corrected by another track with SyncSample. Not Supported."");}startTime = correctTimeToNextSyncSample(track, startTime);endTime = correctTimeToNextSyncSample(track, endTime);timeCorrected = true;}}for (Track track : tracks) {long currentSample = 0;double currentTime = 0;long startSample = -1;long endSample = -1;for (int i = 0; i < track.getDecodingTimeEntries().size(); i++) {TimeToSampleBox.Entry entry = track.getDecodingTimeEntries().get(i);for (int j = 0; j < entry.getCount(); j++) {if (currentTime <= startTime) {startSample = currentSample;}if (currentTime <= endTime) {endSample = currentSample;} else {break;}currentTime += (double) entry.getDelta() / (double) track.getTrackMetaData().getTimescale();currentSample++;}}movie.addTrack(new CroppedTrack(track, startSample, endSample));}long start1 = System.currentTimeMillis();IsoFile out = new DefaultMp4Builder().build(movie);long start2 = System.currentTimeMillis();FileOutputStream fos = new FileOutputStream(String.format(""output-%f-%f.mp4"", startTime, endTime));FileChannel fc = fos.getChannel();out.getBox(fc);fc.close();fos.close();long start3 = System.currentTimeMillis();System.err.println(""Building IsoFile took : "" + (start2 - start1) + ""ms"");System.err.println(""Writing IsoFile took  : "" + (start3 - start2) + ""ms"");System.err.println(""Writing IsoFile speed : "" + (new File(String.format(""output-%f-%f.mp4"", startTime, endTime)).length() / (start3 - start2) / 1000) + ""MB/s"");}public ABIFile(URL url) throws FileFormatException, IOException {URLConnection connection = url.openConnection();int contentLength = connection.getContentLength();if (contentLength <= 0) throw new RuntimeException(url + "" contained no content"");byte[] content = new byte[contentLength];DataInputStream dis = new DataInputStream(connection.getInputStream());dis.readFully(content);dis.close();dis = new DataInputStream(new ByteArrayInputStream(content));if (!isABI(dis)) {throw new FileFormatException(url + "" is not an ABI trace file"");}char[] fwo = null;dis.reset();dis.skipBytes(18);int len = dis.readInt();dis.skipBytes(4);int off = dis.readInt();ABIRecord[] data = new ABIRecord[12];ABIRecord[] pbas = new ABIRecord[2];ABIRecord[] ploc = new ABIRecord[2];dis.reset();dis.skipBytes(off);for (; len > 0; len--) {ABIRecord rec = new ABIRecord(dis);if (rec.tag.equals(""DATA"")) {try {data[rec.n - 1] = rec;} catch (ArrayIndexOutOfBoundsException e) {System.err.println(""ABI record contains erroneous n field"");}} else if (rec.tag.equals(""FWO_"")) {fwo = ((String) rec.data).toCharArray();} else if (rec.tag.equals(""PBAS"")) {pbas[rec.n - 1] = rec;} else if (rec.tag.equals(""PLOC"")) {ploc[rec.n - 1] = rec;}}traceLength = data[8].len;sequenceLength = pbas[1].len;A = new short[traceLength];C = new short[traceLength];G = new short[traceLength];T = new short[traceLength];max = Short.MIN_VALUE;for (int i = 0; i < 4; i++) {dis.reset();dis.skipBytes(data[8 + i].off);short[] current = traceArray(fwo[i]);for (int j = 0; j < traceLength; j++) {current[j] = dis.readShort();if (current[j] > max) max = current[j];}}byte[] buf = new byte[sequenceLength];dis.reset();dis.skipBytes(pbas[1].off);dis.readFully(buf);sequence = new String(buf);centers = new short[sequenceLength];dis.reset();dis.skipBytes(ploc[1].off);for (int i = 0; i < sequenceLength; i++) centers[i] = dis.readShort();}private void _resetLanguages(ActionRequest req, ActionResponse res, PortletConfig config, ActionForm form) throws Exception {List list = (List) req.getAttribute(WebKeys.LANGUAGE_MANAGER_LIST);for (int i = 0; i < list.size(); i++) {long langId = ((Language) list.get(i)).getId();try {String filePath = getGlobalVariablesPath() + ""cms_language_"" + langId + "".properties"";File from = new java.io.File(filePath);from.createNewFile();String tmpFilePath = getTemporyDirPath() + ""cms_language_"" + langId + ""_properties.tmp"";File to = new java.io.File(tmpFilePath);to.createNewFile();FileChannel srcChannel = new FileInputStream(from).getChannel();FileChannel dstChannel = new FileOutputStream(to).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (IOException e) {Logger.debug(this, ""Property File copy Failed "" + e, e);}}}"	5
"private void bokActionPerformed(java.awt.event.ActionEvent evt) {if (this.tfGeneralSubDivision.getText().trim().equals("""")) {this.showWarningMessage(""Enter general sub division"");} else {String[] patlib = newgen.presentation.NewGenMain.getAppletInstance().getPatronLibraryIds();String xmlreq = newgen.presentation.administration.AdministrationXMLGenerator.getInstance().saveGeneralSubDivision(""1"", this.tfGeneralSubDivision.getText(), patlib);System.out.println(xmlreq);try {java.net.URL url = new java.net.URL(ResourceBundle.getBundle(""Administration"").getString(""ServerURL"") + ResourceBundle.getBundle(""Administration"").getString(""ServletSubPath"") + ""SubDivisionServlet"");java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection();urlconn.setDoOutput(true);java.io.OutputStream dos = urlconn.getOutputStream();dos.write(xmlreq.getBytes());java.io.InputStream ios = urlconn.getInputStream();SAXBuilder saxb = new SAXBuilder();Document retdoc = saxb.build(ios);Element rootelement = retdoc.getRootElement();if (rootelement.getChild(""Error"") == null) {this.showInformationMessage(ResourceBundle.getBundle(""Administration"").getString(""DataSavedInDatabase""));} else {this.showErrorMessage(ResourceBundle.getBundle(""Administration"").getString(""ErrorPleaseContactTheVendor""));}} catch (Exception e) {System.out.println(e);}}}private static boolean hasPackageInfo(URL url) {if (url == null) return false;BufferedReader br = null;try {br = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = br.readLine()) != null) {if (line.startsWith(""Specification-Title: "") || line.startsWith(""Specification-Version: "") || line.startsWith(""Specification-Vendor: "") || line.startsWith(""Implementation-Title: "") || line.startsWith(""Implementation-Version: "") || line.startsWith(""Implementation-Vendor: "")) return true;}} catch (IOException ioe) {} finally {if (br != null) try {br.close();} catch (IOException e) {}}return false;}@Test(dataProvider = Arquillian.ARQUILLIAN_DATA_PROVIDER)public void shouldGreetUser(@ArquillianResource URL baseURL) throws IOException {final String name = ""Earthlings"";final URL url = new URL(baseURL, ""Foo.action"");StringBuilder builder = new StringBuilder();BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = reader.readLine()) != null) {builder.append(line);}reader.close();LOGGER.info(""Returned response: "" + builder.toString());Assert.assertEquals(builder.toString(), FooService.GREETING + name);}public ActionForward sendTrackback(ActionMapping mapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws RollerException {ActionForward forward = mapping.findForward(""weblogEdit.page"");ActionErrors errors = new ActionErrors();WeblogEntryData entry = null;try {RollerRequest rreq = RollerRequest.getRollerRequest(request);if (rreq.isUserAuthorizedToEdit()) {WeblogEntryFormEx form = (WeblogEntryFormEx) actionForm;String entryid = form.getId();if (entryid == null) {entryid = request.getParameter(RollerRequest.WEBLOGENTRYID_KEY);}RollerContext rctx = RollerContext.getRollerContext(request);WeblogManager wmgr = rreq.getRoller().getWeblogManager();entry = wmgr.retrieveWeblogEntry(entryid);String title = entry.getTitle();PageHelper pageHelper = PageHelper.createPageHelper(request, response);pageHelper.setSkipFlag(true);String excerpt = pageHelper.renderPlugins(entry);excerpt = StringUtils.left(Utilities.removeHTML(excerpt), 255);String url = rctx.createEntryPermalink(entry, request, true);String blog_name = entry.getWebsite().getName();if (form.getTrackbackUrl() != null) {try {String data = URLEncoder.encode(""title"", ""UTF-8"") + ""="" + URLEncoder.encode(title, ""UTF-8"");data += (""&"" + URLEncoder.encode(""excerpt"", ""UTF-8"") + ""="" + URLEncoder.encode(excerpt, ""UTF-8""));data += (""&"" + URLEncoder.encode(""url"", ""UTF-8"") + ""="" + URLEncoder.encode(url, ""UTF-8""));data += (""&"" + URLEncoder.encode(""blog_name"", ""UTF-8"") + ""="" + URLEncoder.encode(blog_name, ""UTF-8""));URL tburl = new URL(form.getTrackbackUrl());URLConnection conn = tburl.openConnection();conn.setDoOutput(true);OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());wr.write(data);wr.flush();BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));String line;StringBuffer resultBuff = new StringBuffer();while ((line = rd.readLine()) != null) {resultBuff.append(Utilities.escapeHTML(line, true));resultBuff.append(""<br />"");}ActionMessages resultMsg = new ActionMessages();resultMsg.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(""weblogEdit.trackbackResults"", resultBuff));saveMessages(request, resultMsg);wr.close();rd.close();} catch (IOException e) {errors.add(ActionErrors.GLOBAL_ERROR, new ActionError(""error.trackback"", e));}} else {errors.add(ActionErrors.GLOBAL_ERROR, new ActionError(""error.noTrackbackUrlSpecified""));}form.setTrackbackUrl(null);} else {forward = mapping.findForward(""access-denied"");}} catch (Exception e) {mLogger.error(e);String msg = e.getMessage();if (msg == null) {msg = e.getClass().getName();}errors.add(ActionErrors.GLOBAL_ERROR, new ActionError(""error.general"", msg));}if (!errors.isEmpty()) {saveErrors(request, errors);}request.setAttribute(""model"", new WeblogEntryPageModel(request, response, mapping, (WeblogEntryFormEx) actionForm, WeblogEntryPageModel.EDIT_MODE));return forward;}public void copyFile(File source, File destination, boolean lazy) {if (!source.exists()) {return;}if (lazy) {String oldContent = null;try {oldContent = read(source);} catch (Exception e) {return;}String newContent = null;try {newContent = read(destination);} catch (Exception e) {}if ((oldContent == null) || !oldContent.equals(newContent)) {copyFile(source, destination, false);}} else {if ((destination.getParentFile() != null) && (!destination.getParentFile().exists())) {destination.getParentFile().mkdirs();}try {FileChannel srcChannel = new FileInputStream(source).getChannel();FileChannel dstChannel = new FileOutputStream(destination).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (IOException ioe) {_log.error(ioe.getMessage());}}}public void createIndex(File indexDir) throws SearchLibException, IOException {if (!indexDir.mkdir()) throw new SearchLibException(""directory creation failed ("" + indexDir + "")"");InputStream is = null;FileWriter target = null;for (String resource : resources) {String res = rootPath + '/' + resource;is = getClass().getResourceAsStream(res);if (is == null) is = getClass().getResourceAsStream(""common"" + '/' + resource);if (is == null) throw new SearchLibException(""Unable to find resource "" + res);try {File f = new File(indexDir, resource);if (f.getParentFile() != indexDir) f.getParentFile().mkdirs();target = new FileWriter(f);IOUtils.copy(is, target);} finally {if (target != null) target.close();if (is != null) is.close();}}}public File download(Show s) throws Exception {Collection<String> exclude = Util.toCollection((List<String>) this.exclude.clone(), Util.nonNullString(s.getExclude()).split("",""));URL url = new URL(""http://v3.newzbin.com/search/"" + buildQuery(s));BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = in.readLine()) != null) {if (!Util.containsNone(line, exclude)) continue;String id = line.split(""\"",\"""", 3)[1];File downloaded = download(s, id);if (downloaded != null) return downloaded;}return null;}private static MapEntry<String, Properties> loadFpmConf() throws ConfigurationReadException {MapEntry<String, Properties> ret = null;Scanner sc = new Scanner(CONF_PATHS).useDelimiter(SEP_P);String prev = """";while (sc.hasNext() && !hasLoaded) {Properties fpmConf = null;boolean relative = false;String path = sc.next();if (path.startsWith(PREV_P)) {path = path.replace(PREV_P, prev.substring(0, prev.length() - 1));} else if (path.startsWith(REL_P)) {path = path.replace(REL_P + FS, """");relative = true;} else if (path.contains(HOME_P)) {path = path.replace(HOME_P, USER_HOME);}prev = path;path = path.concat(MAIN_CONF_FILE);try {InputStream is = null;if (relative) {is = ClassLoader.getSystemResourceAsStream(path);path = getSystemConfDir();Strings.getOne().createPath(path);path += MAIN_CONF_FILE;FileOutputStream os = new FileOutputStream(path);IOUtils.copy(is, os);os.flush();os.close();os = null;} else {is = new FileInputStream(path);}fpmConf = new Properties();fpmConf.load(is);if (fpmConf.isEmpty()) {throw new ConfigurationReadException();}ret = new MapEntry<String, Properties>(path, fpmConf);hasLoaded = true;} catch (FileNotFoundException e) {fpmConf = null;singleton = null;hasLoaded = false;} catch (IOException e) {throw new ConfigurationReadException();}}return ret;}@Overrideprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {String rewrittenQueryString = URLDecoder.decode(request.getRequestURI(), ""UTF-8"").replaceFirst(""^.*?\\/(id:.*)\\/.*?$"", ""$1"");logger.debug(""rewrittenQueryString: "" + rewrittenQueryString);URL rewrittenUrl = new URL(fedoraUrl + rewrittenQueryString);logger.debug(""rewrittenUrl: "" + rewrittenUrl.getProtocol() + ""://"" + rewrittenUrl.getHost() + "":"" + rewrittenUrl.getPort() + rewrittenUrl.getFile());HttpURLConnection httpURLConnection = (HttpURLConnection) rewrittenUrl.openConnection();HttpURLConnection.setFollowRedirects(false);httpURLConnection.connect();response.setStatus(httpURLConnection.getResponseCode());logger.debug(""[status="" + httpURLConnection.getResponseCode() + ""]"");logger.debug(""[headers]"");for (Entry<String, List<String>> header : httpURLConnection.getHeaderFields().entrySet()) {if (header.getKey() != null) {for (String value : header.getValue()) {if (value != null) {logger.debug(header.getKey() + "": "" + value);if (!header.getKey().equals(""Server"") && !header.getKey().equals(""Transfer-Encoding"")) {response.addHeader(header.getKey(), value);}}}}}logger.debug(""[/headers]"");InputStream inputStream = httpURLConnection.getInputStream();OutputStream outputStream = response.getOutputStream();IOUtils.copy(inputStream, outputStream);}private String readFile(String urlFileString) throws IOException {URL url = new URL(urlFileString);VizDebugUtils.debug(""url: "" + url.toString());InputStream stream = url.openStream();Reader reader = new InputStreamReader(stream, ""iso-8859-1"");StringWriter writer = new StringWriter();StreamUtils.transfer(reader, writer);stream.close();return writer.toString();}"	5
"public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}private HttpURLConnection getConnection(String url, int connTimeout, int readTimeout) throws IOException {HttpURLConnection con = null;con = (HttpURLConnection) new URL(url).openConnection();if (connTimeout > 0) {if (!isJDK14orEarlier) {con.setConnectTimeout(connTimeout * 1000);} else {System.setProperty(""sun.net.client.defaultConnectTimeout"", String.valueOf(connTimeout * 1000));}}if (readTimeout > 0) {if (!isJDK14orEarlier) {con.setReadTimeout(readTimeout * 1000);} else {System.setProperty(""sun.net.client.defaultReadTimeout"", String.valueOf(readTimeout * 1000));}}con.setInstanceFollowRedirects(false);return con;}public String hmacSHA256(String message, byte[] key) {MessageDigest sha256 = null;try {sha256 = MessageDigest.getInstance(""SHA-256"");} catch (NoSuchAlgorithmException e) {throw new java.lang.AssertionError(this.getClass().getName() + "".hmacSHA256(): SHA-256 algorithm not found!"");}if (key.length > 64) {sha256.update(key);key = sha256.digest();sha256.reset();}byte block[] = new byte[64];for (int i = 0; i < key.length; ++i) block[i] = key[i];for (int i = key.length; i < block.length; ++i) block[i] = 0;for (int i = 0; i < 64; ++i) block[i] ^= 0x36;sha256.update(block);try {sha256.update(message.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {throw new java.lang.AssertionError(""ITunesU.hmacSH256(): UTF-8 encoding not supported!"");}byte[] hash = sha256.digest();sha256.reset();for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c);sha256.update(block);sha256.update(hash);hash = sha256.digest();char[] hexadecimals = new char[hash.length * 2];for (int i = 0; i < hash.length; ++i) {for (int j = 0; j < 2; ++j) {int value = (hash[i] >> (4 - 4 * j)) & 0xf;char base = (value < 10) ? ('0') : ('a' - 10);hexadecimals[i * 2 + j] = (char) (base + value);}}return new String(hexadecimals);}public void copyFile(String from, String to) throws IOException {FileChannel srcChannel = new FileInputStream(from).getChannel();FileChannel dstChannel = new FileOutputStream(to).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();}public byte[] download(URL url, OutputStream out) throws IOException {boolean returnByByteArray = (out == null);ByteArrayOutputStream helper = null;if (returnByByteArray) {helper = new ByteArrayOutputStream();}String s = url.toExternalForm();URLConnection conn = url.openConnection();String name = Launcher.getFileName(s);InputStream in = conn.getInputStream();total = url.openConnection().getContentLength();setStatusText(String.format(""Downloading %s (%.2fMB)..."", name, ((float) total / 1024 / 1024)));long justNow = System.currentTimeMillis();int numRead = -1;byte[] buffer = new byte[2048];while ((numRead = in.read(buffer)) != -1) {size += numRead;if (returnByByteArray) {helper.write(buffer, 0, numRead);} else {out.write(buffer, 0, numRead);}long now = System.currentTimeMillis();if ((now - justNow) > 250) {setProgress((int) (((float) size / (float) total) * 100));justNow = now;}}hideProgress();if (returnByByteArray) {return helper.toByteArray();} else {return null;}}public void createTempFile(String resourceName) throws IOException {InputStream input = JulImportCallableTest.class.getResourceAsStream(resourceName);if (input == null) {fail(""Couldn't resolve resource '"" + resourceName + ""'!"");}inputFile = File.createTempFile(""Import"", ""test"");inputFile.delete();FileOutputStream output = new FileOutputStream(inputFile);IOUtils.copyLarge(input, output);IOUtilities.closeQuietly(output);}protected void lookupForParsedElementAnnotations(JClassType t) {List<JMethod> methods = getParsableElementMethods(t);if (methods != null) {for (JMethod method : methods) {ParsedElement elementAnnotation = method.getAnnotation(ParsedElement.class);if (elementAnnotation.type() == ParsedElement.Types.SYNC) {try {String contents = """";URL url = getClass().getClassLoader().getResource(elementAnnotation.file());BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String line = null;while ((line = reader.readLine()) != null) {contents += line;}reader.close();ParsedElementDescriptor elementDescriptor = new ParsedElementDescriptor(method.getName(), contents.replaceAll(""\"""", ""'""), elementAnnotation.type());this.parsedElementList.add(elementDescriptor);} catch (IOException e) {e.printStackTrace();}} else {ParsedElementDescriptor elementDescriptor = new ParsedElementDescriptor(method.getName(), elementAnnotation.file(), elementAnnotation.type());this.parsedElementList.add(elementDescriptor);}}}}public void removerDisciplina(Disciplina disciplina) throws ClassNotFoundException, SQLException {this.criaConexao(false);String sql = ""DELETE FROM \""Disciplina\"""" + ""  WHERE ID_Disciplina =  ? )"";PreparedStatement stmt = null;try {stmt = connection.prepareStatement(sql);stmt.setString(1, disciplina.getId());stmt.executeUpdate();connection.commit();} catch (SQLException e) {connection.rollback();throw e;} finally {try {stmt.close();this.fechaConexao();} catch (SQLException e) {throw e;}}}public Ontology open(String resource_name) {Ontology ontology = null;try {URL url = null;if (resource_name.startsWith(""jar"")) url = new URL(resource_name); else {ClassLoader cl = this.getClass().getClassLoader();url = cl.getResource(resource_name);}InputStream input_stream;if (url != null) {JarURLConnection jc = (JarURLConnection) url.openConnection();input_stream = jc.getInputStream();} else input_stream = new FileInputStream(resource_name);ObjectInputStream ois = new ObjectInputStream(input_stream);ontology = (Ontology) ois.readObject();ois.close();} catch (IOException ioe) {ioe.printStackTrace();} catch (ClassNotFoundException cnfe) {cnfe.printStackTrace();}return ontology;}@Overridepublic Representation getRepresentation(Variant variant) {Representation representation = null;MediaType requestMediaType = variant.getMediaType();if (MediaType.TEXT_XML.equals(requestMediaType)) {try {representation = new DomRepresentation(MediaType.TEXT_XML);} catch (IOException e) {e.printStackTrace();return null;}}String strJobsUrl = ((ResourceApplication) getApplication()).getJobsUrl();org.dom4j.Document reportDoc = null;try {SAXReader reader = new SAXReader();reportDoc = reader.read(strJobsUrl + ""/"" + strJobId + ""/report.xml"");} catch (DocumentException e) {String strErrMsg = ""Unable to find job, "" + strJobId + "": "" + e.getMessage();log.debug(strErrMsg);Representation rep = SetRepositoryMessage(Status.CLIENT_ERROR_NOT_FOUND, null, ""JobNotFound"", strErrMsg, null);return rep;}if (MediaType.TEXT_XML.equals(requestMediaType)) {log.debug(""XML Media Type requested"");try {reportDoc.removeProcessingInstruction(""xml-stylesheet"");DOMWriter writer = new DOMWriter();Document doc = writer.write(reportDoc);doc.normalizeDocument();((DomRepresentation) representation).setDocument(doc);return representation;} catch (DocumentException e) {String strErrMsg = ""Error display job's report: "" + e.getMessage();log.debug(strErrMsg);Representation rep = SetRepositoryMessage(Status.CLIENT_ERROR_CONFLICT, null, ""ClientConflict"", strErrMsg, null);return rep;}} else if (MediaType.TEXT_HTML.equals(requestMediaType)) {log.debug(""HTML Media Type requested"");try {ProcessingInstruction pi = reportDoc.processingInstruction(""xml-stylesheet"");if (pi != null) {String strXslHref = pi.getValue(""href"");URL url = new URL(strXslHref);XSLTransformer reportDocTransformer = new XSLTransformer();log.debug(""constructed the reportDocTransformer"");reportDoc = reportDocTransformer.transform(reportDoc, url.openStream());}} catch (MalformedURLException e) {String strErrMsg = ""Error accessing referenced XSL-STYLESHEET: "" + e.getMessage();log.debug(strErrMsg);Representation rep = SetRepositoryMessage(Status.SERVER_ERROR_INTERNAL, null, ""InternalError"", strErrMsg, null);return rep;} catch (IOException e) {String strErrMsg = ""Error accessing referenced XSL-STYLESHEET: "" + e.getMessage();log.debug(strErrMsg);Representation rep = SetRepositoryMessage(Status.SERVER_ERROR_INTERNAL, null, ""InternalError"", strErrMsg, null);return rep;} catch (FedoraAPIException e) {String strErrMsg = ""Error accessing referenced XSL-STYLESHEET: "" + e.getMessage();log.debug(strErrMsg);Representation rep = SetRepositoryMessage(Status.SERVER_ERROR_INTERNAL, null, ""InternalError"", strErrMsg, null);return rep;}representation = new StringRepresentation(reportDoc.asXML(), MediaType.TEXT_HTML);return representation;}return null;}"	5
"private LSInput resolveResource(String aPublicId, String aSystemId, String aBaseURI, boolean baseUsed) {LSInput lsInput = new DefaultLSInput();lsInput.setPublicId(aPublicId);lsInput.setSystemId(aSystemId);String base = null;try {int baseEndPos = -1;if (aBaseURI != null) {baseEndPos = aBaseURI.lastIndexOf(""/"");}if (baseEndPos <= 0) {if (baseUsed) {return null;} else {return resolveResource(aPublicId, aSystemId, schemaBasePath + ""/"" + aSystemId, true);}}base = aBaseURI.substring(0, baseEndPos);URL url = new URL(base + ""/"" + aSystemId);lsInput.setByteStream(url.openConnection().getInputStream());return lsInput;} catch (IOException e) {return resolveResource(aPublicId, aSystemId, base, baseUsed);}}public static void copyFile(File src, File dst) throws IOException {InputStream in = new FileInputStream(src);OutputStream out = new FileOutputStream(dst);byte[] buf = new byte[1024];int len;while ((len = in.read(buf)) > 0) out.write(buf, 0, len);in.close();out.close();}public byte[] computeMD5(String plainText) throws VHException {MessageDigest md = null;try {md = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException ex) {throw new VHException(""The MD5 hash algorithm is not available."", ex);}try {md.update(plainText.getBytes(""UTF-8""));} catch (UnsupportedEncodingException ex) {throw new VHException(""The UTF-8 encoding is not supported."", ex);}return md.digest();}@Overridepublic int run() {Enumeration<?> e;try {e = About.class.getClassLoader().getResources(""META-INF/MANIFEST.MF"");while (e.hasMoreElements()) {final URL url = (URL) e.nextElement();if (url.toString().indexOf(""renaissance"") != -1) {final InputStream is = url.openStream();Properties p = new Properties();p.load(is);for (Entry<?, ?> entry : p.entrySet()) {System.err.println(entry);}}}} catch (IOException e1) {logger.fatal(""Caught an exception "" + e1);return 1;}System.err.println(""Classpath is "" + System.getProperty(""java.class.path""));return 0;}public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {String target = null;boolean allowedToAccess = false;try {URL requestUrl = new URL(""http:/"" + request.getPathInfo());for (Enumeration en = allowedUrls.elements(); en.hasMoreElements(); ) {URL nextUrl = (URL) en.nextElement();if ((nextUrl).getHost().equalsIgnoreCase(requestUrl.getHost())) {allowedToAccess = true;}}} catch (MalformedURLException ex) {System.err.println(""Error in url: "" + ""http:/"" + request.getPathInfo());return;}if (!allowedToAccess) {response.setStatus(407);return;}if (request.getPathInfo() != null && !request.getPathInfo().equals("""")) {target = ""http:/"" + request.getPathInfo() + ""?"" + request.getQueryString();} else {response.setStatus(404);return;}InputStream is = null;ServletOutputStream out = null;try {URL url = new URL(target);URLConnection uc = url.openConnection();response.setContentType(uc.getContentType());is = uc.getInputStream();out = response.getOutputStream();byte[] buf = new byte[4096];int bytesRead;while ((bytesRead = is.read(buf)) != -1) {out.write(buf, 0, bytesRead);}} catch (MalformedURLException e) {response.setStatus(404);} catch (IOException e) {response.setStatus(404);} finally {if (is != null) {is.close();}if (out != null) {out.close();}}}private List<String> createProjectInfoFile() throws SocketException, IOException {FTPClient client = new FTPClient();Set<String> projects = new HashSet<String>();client.connect(""ftp.drupal.org"");System.out.println(""Connected to ftp.drupal.org"");System.out.println(client.getReplyString());boolean loggedIn = client.login(""anonymous"", ""info@regilo.org"");if (loggedIn) {FTPFile[] files = client.listFiles(""pub/drupal/files/projects"");for (FTPFile file : files) {String name = file.getName();Pattern p = Pattern.compile(""([a-zAZ_]*)-(\\d.x)-(.*)"");Matcher m = p.matcher(name);if (m.matches()) {String projectName = m.group(1);String version = m.group(2);if (version.equals(""6.x"")) {projects.add(projectName);}}}}List<String> projectList = new ArrayList<String>();for (String project : projects) {projectList.add(project);}Collections.sort(projectList);return projectList;}public String getContentAsString(String url) {StringBuffer sb = new StringBuffer("""");try {URL urlmy = new URL(url);HttpURLConnection con = (HttpURLConnection) urlmy.openConnection();HttpURLConnection.setFollowRedirects(true);con.setInstanceFollowRedirects(false);con.connect();BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream(), ""UTF-8""));String s = """";while ((s = br.readLine()) != null) {sb.append(s + ""\r\n"");}con.disconnect();} catch (Exception ex) {this.logException(ex);}return sb.toString();}public void actionPerformed(ActionEvent e) {try {URL url = new URL(""http://mailsomething.sf.net/helppages.xml"");try {File file = File.createTempFile(""temp"", ""xml"");InputStream in = new BufferedInputStream(url.openStream());OutputStream out = new FileOutputStream(file);byte[] buf = new byte[1024];int n;while ((n = in.read(buf)) > 0) out.write(buf, 0, n);out.flush();out.close();module.merge(file);} catch (IOException f) {}} catch (MalformedURLException f) {}}public static String encrypt(String message) {try {MessageDigest digest = MessageDigest.getInstance(""MD5"");digest.update(message.getBytes());BASE64Encoder encoder = new BASE64Encoder();return encoder.encode(digest.digest());} catch (NoSuchAlgorithmException ex) {ex.printStackTrace();return null;}}private Properties loadProperties(final String propertiesName) throws IOException {Properties bundle = null;final ClassLoader loader = Thread.currentThread().getContextClassLoader();final URL url = loader.getResource(propertiesName);if (url == null) {throw new IOException(""Properties file "" + propertiesName + "" not found"");}final InputStream is = url.openStream();if (is != null) {bundle = new Properties();bundle.load(is);} else {throw new IOException(""Properties file "" + propertiesName + "" not avilable"");}return bundle;}"	5
"public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public void extract(CabFolder cabfolder, File outputFolder) throws IOException {InputStream in = null;OutputStream out = null;File file;byte[] buffer = new byte[2048];int read, remain, maxread = buffer.length;in = new CabFileInputStream(cabfolder);CabEntry[] cabentries = this.getEntries();for (int i = 0; i < cabentries.length; i++) {if (cabentries[i].getCabFolder() == cabfolder) {file = new File(outputFolder, cabentries[i].getName().replace('\\', '/'));FileUtils.createParents(file);out = new FileOutputStream(file);remain = cabentries[i].getInflatedSize();while (remain != 0 && (read = in.read(buffer, 0, maxread)) != -1) {out.write(buffer, 0, read);remain -= read;if (buffer.length > remain) maxread = remain; else maxread = buffer.length;}in.close();out.close();}}}private void doIt() throws Throwable {GenericDAO<User> dao = DAOFactory.createDAO(User.class);try {final User user = dao.findUniqueByCriteria(Expression.eq(""login"", login));if (user == null) throw new IllegalArgumentException(""Specified user isn't exist"");if (srcDir.isDirectory() && srcDir.exists()) {final String[] fileList = srcDir.list(new XFilenameFilter() {public boolean accept(XFile dir, String file) {String[] fNArr = file.split(""\\."");return (fNArr.length > 1 && (fNArr[fNArr.length - 1].equalsIgnoreCase(""map"") || fNArr[fNArr.length - 1].equalsIgnoreCase(""plt"") || fNArr[fNArr.length - 1].equalsIgnoreCase(""wpt"")));}});int pointsCounter = 0;int tracksCounter = 0;int mapsCounter = 0;for (final String fName : fileList) {try {TransactionManager.beginTransaction();} catch (Throwable e) {logger.error(e);throw e;}final XFile file = new XFile(srcDir, fName);InputStream in = new XFileInputStream(file);try {ArrayList<UserMapOriginal> maps = new ArrayList<UserMapOriginal>();ArrayList<MapTrackPointsScaleRequest> tracks = new ArrayList<MapTrackPointsScaleRequest>();final byte[] headerBuf = new byte[1024];if (in.read(headerBuf) <= 0) continue;final String fileHeader = new String(headerBuf);final boolean isOziWPT = (fileHeader.indexOf(""OziExplorer Waypoint File"") >= 0);final boolean isOziPLT = (fileHeader.indexOf(""OziExplorer Track Point File"") >= 0);final boolean isOziMAP = (fileHeader.indexOf(""OziExplorer Map Data File"") >= 0);final boolean isKML = (fileHeader.indexOf(""<kml xmlns="") >= 0);if (isOziMAP || isOziPLT || isOziWPT || isKML) {in.close();in = new XFileInputStream(file);} else continue;WPTPoint wp;if (isOziWPT) {try {wp = new WPTPointParser(in, ""Cp1251"").parse();} catch (Throwable t) {wp = null;}if (wp != null) {Set<WayPointRow> rows = wp.getPoints();for (WayPointRow row : rows) {final UserMapPoint p = BeanFactory.createUserPoint(row, user);logger.info(""point:"" + p.getGuid());}pointsCounter += rows.size();}} else if (isOziPLT) {PLTTrack plt;try {plt = new PLTTrackParser(in, ""Cp1251"").parse();} catch (Throwable t) {plt = null;}if (plt != null) {final UserMapTrack t = BeanFactory.createUserTrack(plt, user);tracks.add(new MapTrackPointsScaleRequest(t));tracksCounter++;logger.info(""track:"" + t.getGuid());}} else if (isOziMAP) {MapProjection projection;MAPParser parser = new MAPParser(in, ""Cp1251"");try {projection = parser.parse();} catch (Throwable t) {projection = null;}if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) {GenericDAO<UserMapOriginal> mapDao = DAOFactory.createDAO(UserMapOriginal.class);final UserMapOriginal mapOriginal = new UserMapOriginal();mapOriginal.setName(projection.getTitle());mapOriginal.setUser(user);mapOriginal.setState(UserMapOriginal.State.UPLOAD);mapOriginal.setSubstate(UserMapOriginal.SubState.COMPLETE);MapManager.updateProjection(projection, mapOriginal);final XFile srcFile = new XFile(srcDir, projection.getPath());if (!srcFile.exists() || !srcFile.isFile()) throw new IllegalArgumentException(""file: "" + srcFile.getPath() + "" not found"");final XFile mapStorage = new XFile(new XFile(Configuration.getInstance().getPrivateMapStorage().toString()), mapOriginal.getGuid());mapStorage.mkdir();XFile dstFile = new XFile(mapStorage, mapOriginal.getGuid());XFileOutputStream out = new XFileOutputStream(dstFile);XFileInputStream inImg = new XFileInputStream(srcFile);IOUtils.copy(inImg, out);out.flush();out.close();inImg.close();mapDao.save(mapOriginal);maps.add(mapOriginal);srcFile.delete();mapsCounter++;logger.info(""map:"" + mapOriginal.getGuid());}} else logger.warn(""unsupported file format: "" + file.getName());TransactionManager.commitTransaction();for (MapTrackPointsScaleRequest track : tracks) {if (track != null) {try {PoolClientInterface pool = PoolFactory.getInstance().getClientPool();if (pool == null) throw new IllegalStateException(""pool not found"");pool.put(track, new StatesStack(new byte[] { 0x00, 0x11 }), GeneralCompleteStrategy.class);} catch (Throwable t) {logger.error(t);}}}} catch (Throwable e) {logger.error(""Error importing"", e);TransactionManager.rollbackTransaction();} finally {in.close();file.delete();}}logger.info(""waypoints: "" + pointsCounter + ""\ntracks: "" + tracksCounter + ""\nmaps: "" + mapsCounter);}} catch (Throwable e) {logger.error(""Error importing"", e);}}public void copy(File source, File destination) {try {FileInputStream fileInputStream = new FileInputStream(source);FileOutputStream fileOutputStream = new FileOutputStream(destination);FileChannel inputChannel = fileInputStream.getChannel();FileChannel outputChannel = fileOutputStream.getChannel();transfer(inputChannel, outputChannel, source.length(), false);fileInputStream.close();fileOutputStream.close();destination.setLastModified(source.lastModified());} catch (Exception e) {e.printStackTrace();}}private static void doCopyFile(File srcFile, File destFile, boolean preserveFileDate) throws IOException {if (destFile.exists() && destFile.isDirectory()) {throw new IOException(""Destination '"" + destFile + ""' exists but is a directory"");}FileInputStream input = new FileInputStream(srcFile);try {FileOutputStream output = new FileOutputStream(destFile);try {IOUtils.copy(input, output);} finally {IOUtils.closeQuietly(output);}} finally {IOUtils.closeQuietly(input);}if (srcFile.length() != destFile.length()) {throw new IOException(""Failed to copy full contents from '"" + srcFile + ""' to '"" + destFile + ""'"");}if (preserveFileDate) {destFile.setLastModified(srcFile.lastModified());}}int responseTomcat(InetAddress dest, int port, String request, boolean methodPost, StringBuffer response, int timeout) {int methodGetMaxSize = 250;int methodPostMaxSize = 32000;if (request == null || response == null) return -1;String fullRequest;if (methodPost) {String resource;String queryStr;int qIdx = request.indexOf('?');if (qIdx == -1) {resource = request;queryStr = """";} else {resource = request.substring(0, qIdx);queryStr = request.substring(qIdx + 1);}fullRequest = ""POST "" + resource + "" HTTP/1.1\nHost: "" + dest.getHostName() + "":"" + (new Integer(port)).toString() + ""\n\n"" + queryStr;} else {fullRequest = ""GET "" + request + "" HTTP/1.1\nHost: "" + dest.getHostName() + "":"" + (new Integer(port)).toString() + ""\n\n"";}if (methodPost && fullRequest.length() > methodPostMaxSize) {response.setLength(0);response.append(""Complete POST request longer than maximum of "" + methodPostMaxSize);return -5;} else if ((!methodPost) && fullRequest.length() > methodGetMaxSize) {response.setLength(0);response.append(""Complete GET request longer than maximum of "" + methodGetMaxSize);return -6;}String inputLine = """";request = ""http://"" + dest.getHostName() + "":"" + (new Integer(port).toString()) + request;try {URL urlAddress = new URL(request);URLConnection urlC = urlAddress.openConnection();BufferedReader in = new BufferedReader(new InputStreamReader(urlC.getInputStream()));while ((inputLine = in.readLine()) != null) {response = response.append(inputLine).append(""\n"");}} catch (MalformedURLException e) {return -4;} catch (IOException e) {return -3;}return 200;}public void backup(File source) throws BackupException {try {int index = source.getAbsolutePath().lastIndexOf(""."");if (index == -1) return;File dest = new File(source.getAbsolutePath().substring(0, index) + "".bak"");FileChannel srcChannel = new FileInputStream(source).getChannel();FileChannel dstChannel = new FileOutputStream(dest).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (Exception ex) {throw new BackupException(ex.getMessage(), ex, source);}}public static String encrypt(String algorithm, String str) {try {MessageDigest md = MessageDigest.getInstance(algorithm);md.update(str.getBytes());StringBuffer sb = new StringBuffer();byte[] bytes = md.digest();for (int i = 0; i < bytes.length; i++) {int b = bytes[i] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}return sb.toString();} catch (Exception e) {return """";}}private URLConnection getServletConnection(String strServlet_name) throws MalformedURLException, IOException {URL urlServlet = null;if (strServlet_name == null) {urlServlet = m_Url;} else {urlServlet = new URL(m_Url, strServlet_name);}URLConnection connection = urlServlet.openConnection();connection.setConnectTimeout(180000);connection.setDoInput(true);connection.setDoOutput(true);connection.setUseCaches(false);connection.setRequestProperty(""Content-Type"", ""application/x-java-serialized-object"");if (m_strJsessionid != null) {connection.setRequestProperty(""Cookie"", m_strJsessionid);}return connection;}"	5
"public static FileChannel getFileChannel(Object o) throws IOException {Class c = o.getClass();try {Method m = c.getMethod(""getChannel"", null);return (FileChannel) m.invoke(o, null);} catch (IllegalAccessException x) {} catch (NoSuchMethodException x) {} catch (InvocationTargetException x) {if (x.getTargetException() instanceof IOException) throw (IOException) x.getTargetException();}if (o instanceof FileInputStream) return new MyFileChannelImpl((FileInputStream) o);if (o instanceof FileOutputStream) return new MyFileChannelImpl((FileOutputStream) o);if (o instanceof RandomAccessFile) return new MyFileChannelImpl((RandomAccessFile) o);Assert.UNREACHABLE(o.getClass().toString());return null;}public static String generatePassword(String userKey, int applicationId, String applicationKey) {String nonce = generateNonce();String createDate = fmtDate.format(new Date());String keyDigest = null;MessageDigest sha1 = null;try {sha1 = MessageDigest.getInstance(""SHA1"");sha1.update(nonce.getBytes(""UTF-8""));sha1.update(createDate.getBytes(""UTF-8""));sha1.update(userKey.getBytes(""UTF-8""));sha1.update(applicationKey.getBytes(""UTF-8""));keyDigest = getHexaDecimal(sha1.digest());} catch (Exception e) {throw new RuntimeException(e);}StringBuilder sb = new StringBuilder();sb.append(applicationId);sb.append(',');sb.append(nonce);sb.append(',');sb.append(createDate);sb.append(',');sb.append(keyDigest);return sb.toString();}static void invalidSlave(String msg, Socket sock) throws IOException {BufferedReader _sinp = null;PrintWriter _sout = null;try {_sout = new PrintWriter(sock.getOutputStream(), true);_sinp = new BufferedReader(new InputStreamReader(sock.getInputStream()));_sout.println(msg);logger.info(""NEW< "" + msg);String txt = SocketSlaveListener.readLine(_sinp, 30);String sname = """";String spass = """";String shash = """";try {String[] items = txt.split("" "");sname = items[1].trim();spass = items[2].trim();shash = items[3].trim();} catch (Exception e) {throw new IOException(""Slave Inititalization Faailed"");}String pass = sname + spass + _pass;MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.reset();md5.update(pass.getBytes());String hash = SocketSlaveListener.hash2hex(md5.digest()).toLowerCase();if (!hash.equals(shash)) {throw new IOException(""Slave Inititalization Faailed"");}} catch (Exception e) {}throw new IOException(""Slave Inititalization Faailed"");}public static void fastBackup(File file) {FileChannel in = null;FileChannel out = null;FileInputStream fin = null;FileOutputStream fout = null;try {in = (fin = new FileInputStream(file)).getChannel();out = (fout = new FileOutputStream(file.getAbsolutePath() + "".bak"")).getChannel();in.transferTo(0, in.size(), out);} catch (IOException e) {Logging.getErrorLog().reportError(""Fast backup failure ("" + file.getAbsolutePath() + ""): "" + e.getMessage());} finally {if (fin != null) {try {fin.close();} catch (IOException e) {Logging.getErrorLog().reportException(""Failed to close file input stream"", e);}}if (fout != null) {try {fout.close();} catch (IOException e) {Logging.getErrorLog().reportException(""Failed to close file output stream"", e);}}if (in != null) {try {in.close();} catch (IOException e) {Logging.getErrorLog().reportException(""Failed to close file channel"", e);}}if (out != null) {try {out.close();} catch (IOException e) {Logging.getErrorLog().reportException(""Failed to close file channel"", e);}}}}private void doLogin(String password) throws LoginFailedException, IncorrectPasswordException {long mgr = Constants.MANAGER;Data data, response;try {response = sendAndWait(new Request(mgr)).get(0);MessageDigest md;try {md = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {throw new RuntimeException(""MD5 hash not supported."");}byte[] challenge = response.getBytes();md.update(challenge);md.update(password.getBytes(Data.STRING_ENCODING));try {data = Data.valueOf(md.digest());response = sendAndWait(new Request(mgr).add(0, data)).get(0);} catch (ExecutionException ex) {throw new IncorrectPasswordException();}loginMessage = response.getString();response = sendAndWait(new Request(mgr).add(0, getLoginData())).get(0);ID = response.getWord();} catch (InterruptedException ex) {throw new LoginFailedException(ex);} catch (ExecutionException ex) {throw new LoginFailedException(ex);} catch (IOException ex) {throw new LoginFailedException(ex);}}public static String encrypt(String data) throws IOException, NoSuchAlgorithmException {Properties props = Configuration.getInstance().getProperties();String algorithm = props.getProperty(""com.makeabyte.jhosting.server.persistence.security.algorithm"");String encryptedData = data;boolean encrypt = Boolean.parseBoolean(props.getProperty(""com.makeabyte.jhosting.server.persistence.security.encrypt""));if (encrypt) {if (algorithm.equalsIgnoreCase(""UTF-16LE"")) return encryptActiveDirectory(data);MessageDigest md = java.security.MessageDigest.getInstance(algorithm);md.reset();md.update(data.getBytes());encryptedData = md.digest().toString();}return encryptedData;}public String getDigest(String algorithm, String data) throws IOException, NoSuchAlgorithmException {MessageDigest md = java.security.MessageDigest.getInstance(algorithm);md.reset();md.update(data.getBytes());return md.digest().toString();}private Document parseResponse(String url) throws IOException, MalformedURLException, ParserConfigurationException, SAXException {DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();InputStream stream = null;try {stream = new URL(url).openStream();return db.parse(stream);} finally {PetstoreUtil.closeIgnoringException(stream);}}public static String md5(String plainText) {String ret = null;try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(plainText.getBytes());byte b[] = md.digest();int i;StringBuffer buf = new StringBuffer("""");for (int offset = 0; offset < b.length; offset++) {i = b[offset];if (i < 0) i += 256;if (i < 16) buf.append(""0"");buf.append(Integer.toHexString(i));}ret = buf.toString();} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return ret;}public BufferedImage extractUsingCompositor() throws IOException, DjatokaException {boolean useRegion = false;int left = 0;int top = 0;int width = 50;int height = 50;boolean useleftDouble = false;Double leftDouble = 0.0;boolean usetopDouble = false;Double topDouble = 0.0;boolean usewidthDouble = false;Double widthDouble = 0.0;boolean useheightDouble = false;Double heightDouble = 0.0;if (params.getRegion() != null) {StringTokenizer st = new StringTokenizer(params.getRegion(), ""{},"");String token;if ((token = st.nextToken()).contains(""."")) {topDouble = Double.parseDouble(token);usetopDouble = true;} else top = Integer.parseInt(token);if ((token = st.nextToken()).contains(""."")) {leftDouble = Double.parseDouble(token);useleftDouble = true;} else left = Integer.parseInt(token);if ((token = st.nextToken()).contains(""."")) {heightDouble = Double.parseDouble(token);useheightDouble = true;} else height = Integer.parseInt(token);if ((token = st.nextToken()).contains(""."")) {widthDouble = Double.parseDouble(token);usewidthDouble = true;} else width = Integer.parseInt(token);useRegion = true;}if (is != null) {File f = File.createTempFile(""tmp"", "".jp2"");f.deleteOnExit();FileOutputStream fos = new FileOutputStream(f);sourceFile = f.getAbsolutePath();IOUtils.copyStream(is, fos);}Kdu_simple_file_source raw_src = null;Jp2_family_src family_src = new Jp2_family_src();Jpx_source wrapped_src = new Jpx_source();Kdu_region_compositor compositor = null;BufferedImage image = null;try {family_src.Open(sourceFile);int success = wrapped_src.Open(family_src, true);if (success < 0) {family_src.Close();wrapped_src.Close();raw_src = new Kdu_simple_file_source(sourceFile);}compositor = new Kdu_region_compositor();if (raw_src != null) compositor.Create(raw_src); else compositor.Create(wrapped_src);Kdu_dims imageDimensions = new Kdu_dims();compositor.Get_total_composition_dims(imageDimensions);Kdu_coords imageSize = imageDimensions.Access_size();Kdu_coords imagePosition = imageDimensions.Access_pos();if (useleftDouble) left = imagePosition.Get_x() + (int) Math.round(leftDouble * imageSize.Get_x());if (usetopDouble) top = imagePosition.Get_y() + (int) Math.round(topDouble * imageSize.Get_y());if (useheightDouble) height = (int) Math.round(heightDouble * imageSize.Get_y());if (usewidthDouble) width = (int) Math.round(widthDouble * imageSize.Get_x());if (useRegion) {imageSize.Set_x(width);imageSize.Set_y(height);imagePosition.Set_x(left);imagePosition.Set_y(top);}int reduce = 1 << params.getLevelReductionFactor();imageSize.Set_x(imageSize.Get_x());imageSize.Set_y(imageSize.Get_y());imagePosition.Set_x(imagePosition.Get_x() / reduce - (1 / reduce - 1) / 2);imagePosition.Set_y(imagePosition.Get_y() / reduce - (1 / reduce - 1) / 2);Kdu_dims viewDims = new Kdu_dims();viewDims.Assign(imageDimensions);viewDims.Access_size().Set_x(imageSize.Get_x());viewDims.Access_size().Set_y(imageSize.Get_y());compositor.Add_compositing_layer(0, viewDims, viewDims);if (params.getRotationDegree() == 90) compositor.Set_scale(true, false, true, 1.0F); else if (params.getRotationDegree() == 180) compositor.Set_scale(false, true, true, 1.0F); else if (params.getRotationDegree() == 270) compositor.Set_scale(true, true, false, 1.0F); else compositor.Set_scale(false, false, false, 1.0F);compositor.Get_total_composition_dims(viewDims);Kdu_coords viewSize = viewDims.Access_size();compositor.Set_buffer_surface(viewDims);int[] imgBuffer = new int[viewSize.Get_x() * viewSize.Get_y()];Kdu_compositor_buf compositorBuffer = compositor.Get_composition_buffer(viewDims);int regionBufferSize = 0;int[] kduBuffer = null;Kdu_dims newRegion = new Kdu_dims();while (compositor.Process(100000, newRegion)) {Kdu_coords newOffset = newRegion.Access_pos();Kdu_coords newSize = newRegion.Access_size();newOffset.Subtract(viewDims.Access_pos());int newPixels = newSize.Get_x() * newSize.Get_y();if (newPixels == 0) continue;if (newPixels > regionBufferSize) {regionBufferSize = newPixels;kduBuffer = new int[regionBufferSize];}compositorBuffer.Get_region(newRegion, kduBuffer);int imgBuffereIdx = newOffset.Get_x() + newOffset.Get_y() * viewSize.Get_x();int kduBufferIdx = 0;int xDiff = viewSize.Get_x() - newSize.Get_x();for (int j = 0; j < newSize.Get_y(); j++, imgBuffereIdx += xDiff) {for (int i = 0; i < newSize.Get_x(); i++) {imgBuffer[imgBuffereIdx++] = kduBuffer[kduBufferIdx++];}}}if (params.getRotationDegree() == 90 || params.getRotationDegree() == 270) image = new BufferedImage(imageSize.Get_y(), imageSize.Get_x(), BufferedImage.TYPE_INT_RGB); else image = new BufferedImage(imageSize.Get_x(), imageSize.Get_y(), BufferedImage.TYPE_INT_RGB);image.setRGB(0, 0, viewSize.Get_x(), viewSize.Get_y(), imgBuffer, 0, viewSize.Get_x());if (compositor != null) compositor.Native_destroy();wrapped_src.Native_destroy();family_src.Native_destroy();if (raw_src != null) raw_src.Native_destroy();return image;} catch (KduException e) {e.printStackTrace();throw new DjatokaException(e);} catch (Exception e) {e.printStackTrace();throw new DjatokaException(e);}}"	5
"private Collection<Class<? extends Plugin>> loadFromResource(ClassLoader classLoader, String resource) throws IOException {Collection<Class<? extends Plugin>> pluginClasses = new HashSet<Class<? extends Plugin>>();Enumeration providerFiles = classLoader.getResources(resource);if (!providerFiles.hasMoreElements()) {logger.warning(""Can't find the resource: "" + resource);return pluginClasses;}do {URL url = (URL) providerFiles.nextElement();InputStream stream = url.openStream();BufferedReader reader;try {reader = new BufferedReader(new InputStreamReader(stream, ""UTF-8""));} catch (IOException e) {continue;}String line;while ((line = reader.readLine()) != null) {int index = line.indexOf('#');if (index != -1) {line = line.substring(0, index);}line = line.trim();if (line.length() > 0) {Class pluginClass;try {pluginClass = classLoader.loadClass(line);} catch (ClassNotFoundException e) {logger.log(Level.WARNING, ""Can't use the Pluginclass with the name "" + line + ""."", e);continue;}if (Plugin.class.isAssignableFrom(pluginClass)) {pluginClasses.add((Class<? extends Plugin>) pluginClass);} else {logger.warning(""The Pluginclass with the name "" + line + "" isn't a subclass of Plugin."");}}}reader.close();stream.close();} while (providerFiles.hasMoreElements());return pluginClasses;}private boolean downloadFile() {FTPClient ftp = new FTPClient();try {int reply;ftp.connect(this.server);ResourcePool.LogMessage(this, ResourcePool.INFO_MESSAGE, ""Connected to "" + this.server);reply = ftp.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {ftp.disconnect();ResourcePool.LogMessage(this, ResourcePool.ERROR_MESSAGE, ""FTP server refused connection."");return false;}} catch (IOException e) {if (ftp.isConnected()) {try {ftp.disconnect();} catch (IOException f) {return false;}}ResourcePool.LogMessage(this, ResourcePool.ERROR_MESSAGE, ""FTP Could not connect to server."");ResourcePool.LogException(e, this);return false;}try {if (!ftp.login(this.user, this.password)) {ftp.logout();ResourcePool.LogMessage(this, ResourcePool.ERROR_MESSAGE, ""FTP login failed."");return false;}ResourcePool.LogMessage(this, ResourcePool.INFO_MESSAGE, ""Remote system is "" + ftp.getSystemName());if ((this.transferType != null) && (this.transferType.compareTo(FTPWorkerThread.ASCII) == 0)) {ftp.setFileType(FTP.ASCII_FILE_TYPE);} else {ftp.setFileType(FTP.BINARY_FILE_TYPE);}if ((this.passiveMode != null) && this.passiveMode.equalsIgnoreCase(FTPWorkerThread.FALSE)) {ftp.enterLocalActiveMode();} else {ftp.enterLocalPassiveMode();}} catch (FTPConnectionClosedException e) {ResourcePool.LogMessage(this, ResourcePool.ERROR_MESSAGE, ""Server closed connection."");ResourcePool.LogException(e, this);return false;} catch (IOException e) {ResourcePool.LogException(e, this);return false;}OutputStream output;try {java.util.Date startDate = new java.util.Date();output = new FileOutputStream(this.destFileName);ftp.retrieveFile(this.fileName, output);File f = new File(this.destFileName);if (f.exists() && (this.lastModifiedDate != null)) {f.setLastModified(this.lastModifiedDate.longValue());}java.util.Date endDate = new java.util.Date();this.downloadTime = endDate.getTime() - startDate.getTime();double iDownLoadTime = ((this.downloadTime + 1) / 1000) + 1;ResourcePool.LogMessage(this, ResourcePool.INFO_MESSAGE, ""Download Complete, Rate = "" + (this.fileSize / (iDownLoadTime * 1024)) + "" Kb/s, Seconds = "" + iDownLoadTime);this.downloadTime = (this.downloadTime + 1) / 1000;if (ftp.isConnected()) {ftp.disconnect();}} catch (FTPConnectionClosedException e) {ResourcePool.LogMessage(this, ResourcePool.ERROR_MESSAGE, e.getMessage());ResourcePool.LogException(e, this);return false;} catch (IOException e) {ResourcePool.LogException(e, this);return false;}return true;}private FTPClient getFTPConnection(String strUser, String strPassword, String strServer, boolean binaryTransfer, String connectionNote, boolean passiveMode) {FTPClient ftp = new FTPClient();try {int reply;ftp.connect(strServer);ResourcePool.LogMessage(this, ResourcePool.INFO_MESSAGE, ""Connected to "" + strServer + "", "" + connectionNote);reply = ftp.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {ftp.disconnect();ResourcePool.LogMessage(this, ResourcePool.ERROR_MESSAGE, ""FTP server refused connection."");return null;}} catch (IOException e) {if (ftp.isConnected()) {try {ftp.disconnect();} catch (IOException f) {return null;}}ResourcePool.LogMessage(this, ResourcePool.ERROR_MESSAGE, ""FTP Could not connect to server."");ResourcePool.LogException(e, this);return null;}try {if (!ftp.login(strUser, strPassword)) {ftp.logout();ResourcePool.LogMessage(this, ResourcePool.ERROR_MESSAGE, ""FTP login failed."");return null;}ResourcePool.LogMessage(this, ResourcePool.INFO_MESSAGE, ""Remote system is "" + ftp.getSystemName() + "", "" + connectionNote);if (binaryTransfer) {ftp.setFileType(FTP.BINARY_FILE_TYPE);} else {ftp.setFileType(FTP.ASCII_FILE_TYPE);}if (passiveMode) {ftp.enterLocalPassiveMode();} else {ftp.enterLocalActiveMode();}} catch (FTPConnectionClosedException e) {ResourcePool.LogMessage(this, ResourcePool.ERROR_MESSAGE, ""Server closed connection."");ResourcePool.LogException(e, this);return null;} catch (IOException e) {ResourcePool.LogException(e, this);return null;}return ftp;}@SuppressWarnings(""deprecation"")private void loadClassFilesFromJar() {IPackageFragmentRoot packageFragmentRoot = (IPackageFragmentRoot) getJavaElement();File jarFile = packageFragmentRoot.getResource().getLocation().toFile();try {URL url = jarFile.toURL();URLConnection u = url.openConnection();ZipInputStream inputStream = new ZipInputStream(u.getInputStream());ZipEntry entry = inputStream.getNextEntry();while (null != entry) {if (entry.getName().endsWith("".class"")) {ClassParser parser = new ClassParser(inputStream, entry.getName());Repository.addClass(parser.parse());}entry = inputStream.getNextEntry();}} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}}protected static void copyDeleting(File source, File dest) throws IOException {byte[] buf = new byte[8 * 1024];FileInputStream in = new FileInputStream(source);try {FileOutputStream out = new FileOutputStream(dest);try {int count;while ((count = in.read(buf)) >= 0) out.write(buf, 0, count);} finally {out.close();}} finally {in.close();}}public void loadFromURLPath(String type, URL urlPath, HashMap parentAttributes) throws IOException {this.urlPath = urlPath;this.type = type;JmeBinaryReader jbr = new JmeBinaryReader();setProperties(jbr, parentAttributes);InputStream loaderInput = urlPath.openStream();if (type.equals(""xml"")) {XMLtoBinary xtb = new XMLtoBinary();ByteArrayOutputStream BO = new ByteArrayOutputStream();xtb.sendXMLtoBinary(loaderInput, BO);loaderInput = new ByteArrayInputStream(BO.toByteArray());} else if (!type.equals(""binary"")) throw new IOException(""Unknown LoaderNode flag: "" + type);jbr.loadBinaryFormat(this, loaderInput);}private void sortMasters() {masterCounter = 0;for (int i = 0; i < maxID; i++) {if (users[i].getMasterPoints() > 0) {masterHandleList[masterCounter] = users[i].getHandle();masterPointsList[masterCounter] = users[i].getMasterPoints();masterCounter = masterCounter + 1;}}for (int i = masterCounter; --i >= 0; ) {for (int j = 0; j < i; j++) {if (masterPointsList[j] > masterPointsList[j + 1]) {int tempp = masterPointsList[j];String temppstring = masterHandleList[j];masterPointsList[j] = masterPointsList[j + 1];masterHandleList[j] = masterHandleList[j + 1];masterPointsList[j + 1] = tempp;masterHandleList[j + 1] = temppstring;}}}}protected void truncate(final File file) {LogLog.debug(""Compression of file: "" + file.getAbsolutePath() + "" started."");if (FileUtils.isFileOlder(file, ManagementFactory.getRuntimeMXBean().getStartTime())) {final File backupRoot = new File(this.getBackupDir());if (!backupRoot.exists() && !backupRoot.mkdirs()) {throw new AppenderInitializationError(""Can't create backup dir for backup storage"");}SimpleDateFormat df;try {df = new SimpleDateFormat(this.getBackupDateFormat());} catch (final Exception e) {throw new AppenderInitializationError(""Invalid date formate for backup files: "" + this.getBackupDateFormat(), e);}final String date = df.format(new Date(file.lastModified()));final File zipFile = new File(backupRoot, file.getName() + ""."" + date + "".zip"");ZipOutputStream zos = null;FileInputStream fis = null;try {zos = new ZipOutputStream(new FileOutputStream(zipFile));final ZipEntry entry = new ZipEntry(file.getName());entry.setMethod(ZipEntry.DEFLATED);entry.setCrc(FileUtils.checksumCRC32(file));zos.putNextEntry(entry);fis = FileUtils.openInputStream(file);final byte[] buffer = new byte[1024];int readed;while ((readed = fis.read(buffer)) != -1) {zos.write(buffer, 0, readed);}} catch (final Exception e) {throw new AppenderInitializationError(""Can't create zip file"", e);} finally {if (zos != null) {try {zos.close();} catch (final IOException e) {LogLog.warn(""Can't close zip file"", e);}}if (fis != null) {try {fis.close();} catch (final IOException e) {LogLog.warn(""Can't close zipped file"", e);}}}if (!file.delete()) {throw new AppenderInitializationError(""Can't delete old log file "" + file.getAbsolutePath());}}}public void run() {if (saveAsDialog == null) {saveAsDialog = new FileDialog(window.getShell(), SWT.SAVE);saveAsDialog.setFilterExtensions(saveAsTypes);}String outputFile = saveAsDialog.open();if (outputFile != null) {Object inputFile = DataSourceSingleton.getInstance().getContainer().getWrapped();InputStream in;try {if (inputFile instanceof URL) in = ((URL) inputFile).openStream(); else in = new FileInputStream((File) inputFile);OutputStream out = new FileOutputStream(outputFile);if (outputFile.endsWith(""xml"")) {int c;while ((c = in.read()) != -1) out.write(c);} else {PrintWriter pw = new PrintWriter(out);Element data = DataSourceSingleton.getInstance().getRawData();writeTextFile(data, pw, -1);pw.close();}in.close();out.close();} catch (MalformedURLException e1) {} catch (IOException e) {}}}@Overridepublic void onCreate(Bundle savedInstanceState) {super.onCreate(savedInstanceState);setContentView(R.layout.cautaprodus);HttpGet request = new HttpGet(SERVICE_URI + ""/json/getproducts"");request.setHeader(""Accept"", ""application/json"");request.setHeader(""Content-type"", ""application/json"");DefaultHttpClient httpClient = new DefaultHttpClient();String theString = new String("""");try {HttpResponse response = httpClient.execute(request);HttpEntity responseEntity = response.getEntity();InputStream stream = responseEntity.getContent();BufferedReader reader = new BufferedReader(new InputStreamReader(stream));Vector<String> vectorOfStrings = new Vector<String>();String tempString = new String();StringBuilder builder = new StringBuilder();String line;while ((line = reader.readLine()) != null) {builder.append(line);}stream.close();theString = builder.toString();JSONObject json = new JSONObject(theString);Log.i(""_GetPerson_"", ""<jsonobject>\n"" + json.toString() + ""\n</jsonobject>"");JSONArray nameArray = json.getJSONArray(""getProductsResult"");for (int i = 0; i < nameArray.length(); i++) {Log.i(""_GetProducts_"", ""<ID"" + i + "">"" + nameArray.getJSONObject(i).getString(""ID"") + ""</ID"" + i + "">\n"");Log.i(""_GetProducts_"", ""<Name"" + i + "">"" + nameArray.getJSONObject(i).getString(""Name"") + ""</Name"" + i + "">\n"");Log.i(""_GetProducts_"", ""<Price"" + i + "">"" + nameArray.getJSONObject(i).getString(""Price"") + ""</Price"" + i + "">\n"");Log.i(""_GetProducts_"", ""<Symbol"" + i + "">"" + nameArray.getJSONObject(i).getString(""Symbol"") + ""</Symbol"" + i + "">\n"");tempString = nameArray.getJSONObject(i).getString(""Name"") + ""\n"" + nameArray.getJSONObject(i).getString(""Price"") + ""\n"" + nameArray.getJSONObject(i).getString(""Symbol"");vectorOfStrings.add(new String(tempString));}int orderCount = vectorOfStrings.size();String[] orderTimeStamps = new String[orderCount];vectorOfStrings.copyInto(orderTimeStamps);setListAdapter(new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, orderTimeStamps));} catch (Exception e) {e.printStackTrace();}}"	5
"public String computeMD5(String string) throws ServiceException {try {MessageDigest digest = MessageDigest.getInstance(""md5"");digest.reset();digest.update(string.getBytes(Invoker.ENCODING));return convertToHex(digest.digest());} catch (NoSuchAlgorithmException exception) {String message = ""Could not create properly the MD5 digest"";log.error(message, exception);throw new ServiceException(message, exception);} catch (UnsupportedEncodingException exception) {String message = ""Could not encode properly the MD5 digest"";log.error(message, exception);throw new ServiceException(message, exception);}}private URLConnection getURLConnection(String str) {try {if (isHttps) {System.setProperty(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");if (isProxy) {System.setProperty(""https.proxyHost"", proxyHost);System.setProperty(""https.proxyPort"", proxyPort);}} else {if (isProxy) {System.setProperty(""http.proxyHost"", proxyHost);System.setProperty(""http.proxyPort"", proxyPort);}}URL url = new URL(str);return (url.openConnection());} catch (MalformedURLException me) {System.out.println(""Malformed URL"");me.printStackTrace();return null;} catch (Exception e) {e.printStackTrace();return null;}}private String doOAIQuery(String request) throws IOException, ProtocolException {DannoClient ac = getClient();HttpGet get = new HttpGet(request);get.setHeader(""Accept"", ""application/xml"");HttpResponse response = ac.execute(get);if (!ac.isOK()) {throw new DannoRequestFailureException(""GET"", response);}return massage(new BasicResponseHandler().handleResponse(response));}public static String getGoGl(final String urlPath, String key) {log.debug(""getGoGl url "" + urlPath);log.debug(""getGoGl key "" + key);String shortUrl = null;URL simpleURL = null;HttpsURLConnection url = null;BufferedInputStream bStream = null;StringBuffer resultString = new StringBuffer("""");String inputString = ""{\""longUrl\"":\"""" + urlPath + ""\""}"";log.debug(""getGoGl inputString "" + inputString);try {simpleURL = new URL(""https://www.googleapis.com/urlshortener/v1/url?key="" + key);url = (HttpsURLConnection) simpleURL.openConnection();url.setDoOutput(true);url.setRequestProperty(""content-type"", ""application/json"");PrintWriter pw = new PrintWriter(url.getOutputStream());pw.print(inputString);pw.close();} catch (Exception ex) {log.error(ex);shortUrl = urlPath;}try {bStream = new BufferedInputStream(url.getInputStream());int i;while ((i = bStream.read()) >= 0) {resultString.append((char) i);}} catch (Exception ex) {SocialUtils.log.error(ex);shortUrl = urlPath;}return shortUrl;}public static boolean copyFile(File sourceFile, File destFile) throws IOException {long flag = 0;if (!destFile.exists()) destFile.createNewFile();FileChannel source = null;FileChannel destination = null;try {source = new FileInputStream(sourceFile).getChannel();destination = new FileOutputStream(destFile).getChannel();flag = destination.transferFrom(source, 0, source.size());} catch (Exception e) {Logger.getLogger(FileUtils.class.getPackage().getName()).log(Level.WARNING, ""ERROR: Problem copying file"", e);} finally {if (source != null) source.close();if (destination != null) destination.close();}if (flag == 0) return false; else return true;}public ResourceMigrator createDefaultResourceMigrator(NotificationReporter reporter, boolean strictMode) throws ResourceMigrationException {return new ResourceMigrator() {public void migrate(InputMetadata meta, InputStream inputStream, OutputCreator outputCreator) throws IOException, ResourceMigrationException {OutputStream outputStream = outputCreator.createOutputStream();IOUtils.copy(inputStream, outputStream);}};}public RemotePolicyMigrator createRemotePolicyMigrator() {return new RemotePolicyMigrator() {public String migratePolicy(InputStream stream, String url) throws ResourceMigrationException, IOException {ByteArrayOutputCreator oc = new ByteArrayOutputCreator();IOUtils.copyAndClose(stream, oc.getOutputStream());return oc.getOutputStream().toString();}};}@Overridepublic void decorate(Object element, IDecoration decoration) {if (element != null && element instanceof IProject) {InputStream is = null;try {IProject project = (IProject) element;IFile file = project.getFile(Activator.PLUGIN_CONF);if (file.exists()) {URL url = bundle.getEntry(""icons/leaf4e_decorator.gif"");is = FileLocator.toFileURL(url).openStream();Image img = new Image(Display.getCurrent(), is);ImageDescriptor id = ImageDescriptor.createFromImage(img);decoration.addOverlay(id, IDecoration.TOP_LEFT);}} catch (Exception e) {Status status = new Status(IStatus.WARNING, Activator.PLUGIN_ID, ""Decorating error"", e);logger.log(status);} finally {if (is != null) {try {is.close();} catch (IOException e) {Status status = new Status(IStatus.WARNING, Activator.PLUGIN_ID, """", e);logger.log(status);}}}}}public static Image getPluginImage(Object plugin, String name) {try {try {URL url = getPluginImageURL(plugin, name);if (m_URLImageMap.containsKey(url)) return m_URLImageMap.get(url);InputStream is = url.openStream();Image image;try {image = getImage(is);m_URLImageMap.put(url, image);} finally {is.close();}return image;} catch (Throwable e) {}} catch (Throwable e) {}return null;}private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) throws IOException {boolean resultat = false;FileInputStream fis = new FileInputStream(sRC2);FileOutputStream fos = new FileOutputStream(dEST2);java.nio.channels.FileChannel channelSrc = fis.getChannel();java.nio.channels.FileChannel channelDest = fos.getChannel();progressEnCours.setValue(0);progressEnCours.setString(sRC2 + "" : 0 %"");channelSrc.transferTo(0, channelSrc.size(), channelDest);progressEnCours.setValue(100);progressEnCours.setString(sRC2 + "" : 100 %"");if (channelSrc.size() == channelDest.size()) {resultat = true;} else {resultat = false;}fis.close();fos.close();return (resultat);}"	5
"public void command() {JFileChooser chooser = new JFileChooser();chooser.setCurrentDirectory(new File(dir));int returnVal = chooser.showOpenDialog(null);if (returnVal == JFileChooser.APPROVE_OPTION) {filename = chooser.getSelectedFile().getAbsolutePath();String f2 = """";for (int i = 0; i < filename.length(); ++i) {if (filename.charAt(i) != '\\') {f2 = f2 + filename.charAt(i);} else f2 = f2 + '/';}filename = f2;if (filename.contains(dir)) {filename = filename.substring(dir.length());} else {try {FileChannel srcFile = new FileInputStream(filename).getChannel();FileChannel dstFile;filename = ""ueditor_files/"" + chooser.getSelectedFile().getName();File newFile;if (!(newFile = new File(dir + filename)).createNewFile()) {dstFile = new FileInputStream(dir + filename).getChannel();newFile = null;} else {dstFile = new FileOutputStream(newFile).getChannel();}dstFile.transferFrom(srcFile, 0, srcFile.size());srcFile.close();dstFile.close();System.out.println(""file copyed to: "" + dir + filename);} catch (Exception e) {e.printStackTrace();label.setIcon(InputText.iconX);filename = null;for (Group g : groups) {g.updateValidity(true);}return;}}label.setIcon(InputText.iconV);for (Group g : groups) {g.updateValidity(true);}}}private void insertContent(ImageData imageData, Element element) {URL url = getClass().getResource(imageData.getURL());try {File imageFileRead = new File(url.toURI());FileInputStream inputStream = new FileInputStream(imageFileRead);String imageFileWritePath = ""htmlReportFiles"" + ""/"" + imageData.getURL();File imageFileWrite = new File(imageFileWritePath);String[] filePathTokens = imageFileWritePath.split(""/"");String directoryPathCreate = filePathTokens[0];int i = 1;while (i < filePathTokens.length - 1) {directoryPathCreate = directoryPathCreate + ""/"" + filePathTokens[i];i++;}File fileDirectoryPathCreate = new File(directoryPathCreate);if (!fileDirectoryPathCreate.exists()) {boolean successfulFileCreation = fileDirectoryPathCreate.mkdirs();if (successfulFileCreation == false) {throw new ExplanationException(""Unable to create folders in path "" + directoryPathCreate);}}FileOutputStream fileOutputStream = new FileOutputStream(imageFileWrite);byte[] data = new byte[1024];int readDataNumberOfBytes = 0;while (readDataNumberOfBytes != -1) {readDataNumberOfBytes = inputStream.read(data, 0, data.length);if (readDataNumberOfBytes != -1) {fileOutputStream.write(data, 0, readDataNumberOfBytes);}}inputStream.close();fileOutputStream.close();} catch (Exception ex) {throw new ExplanationException(ex.getMessage());}String caption = imageData.getCaption();Element imageElement = element.addElement(""img"");if (imageData.getURL().charAt(0) != '/') imageElement.addAttribute(""src"", ""htmlReportFiles"" + ""/"" + imageData.getURL()); else imageElement.addAttribute(""src"", ""htmlReportFiles"" + imageData.getURL());imageElement.addAttribute(""alt"", ""image not available"");if (caption != null) {element.addElement(""br"");element.addText(caption);}}public static void get_PK_data() {try {FileWriter file_writer = new FileWriter(""xml_data/PK_data_dump.xml"");BufferedWriter file_buffered_writer = new BufferedWriter(file_writer);URL fdt = new URL(""http://opendata.5t.torino.it/get_pk"");URLConnection url_connection = fdt.openConnection();BufferedReader in = new BufferedReader(new InputStreamReader(url_connection.getInputStream()));String input_line;int num_lines = 0;while ((input_line = in.readLine()) != null) {file_buffered_writer.write(input_line + ""\n"");num_lines++;}System.out.println(""Parking :: Writed "" + num_lines + "" lines."");in.close();} catch (Exception e) {System.err.println(""Error: "" + e.getMessage());}}private static String makeMD5(String str) {byte[] bytes = new byte[32];try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(str.getBytes(""iso-8859-1""), 0, str.length());bytes = md.digest();} catch (Exception e) {return null;}return convertToHex(bytes);}public int addDecisionInstruction(int condition, String frameSlot, String linkName, int objectId, String attribute, int positive, int negative) throws FidoDatabaseException, ObjectNotFoundException, InstructionNotFoundException {try {Connection conn = null;Statement stmt = null;try {if ((condition == ConditionalOperatorTable.CONTAINS_LINK) || (condition == ConditionalOperatorTable.NOT_CONTAINS_LINK)) {ObjectTable ot = new ObjectTable();if (ot.contains(objectId) == false) throw new ObjectNotFoundException(objectId);}conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();if (contains(stmt, positive) == false) throw new InstructionNotFoundException(positive);if (contains(stmt, negative) == false) throw new InstructionNotFoundException(negative);String sql = ""insert into Instructions (Type, Operator, FrameSlot, LinkName, ObjectId, AttributeName) "" + ""values (2, "" + condition + "", '"" + frameSlot + ""', '"" + linkName + ""', "" + objectId + "", '"" + attribute + ""')"";stmt.executeUpdate(sql);int id = getCurrentId(stmt);InstructionGroupTable groupTable = new InstructionGroupTable();groupTable.deleteInstruction(stmt, id);if (positive != -1) groupTable.addInstructionAt(stmt, id, 1, positive);if (negative != -1) groupTable.addInstructionAt(stmt, id, 2, negative);conn.commit();return id;} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public void modifyDecisionInstruction(int id, int condition, String frameSlot, String linkName, int objectId, String attribute, int positive, int negative) throws FidoDatabaseException, ObjectNotFoundException, InstructionNotFoundException {try {Connection conn = null;Statement stmt = null;try {if ((condition == ConditionalOperatorTable.CONTAINS_LINK) || (condition == ConditionalOperatorTable.NOT_CONTAINS_LINK)) {ObjectTable ot = new ObjectTable();if (ot.contains(objectId) == false) throw new ObjectNotFoundException(objectId);}conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();if (contains(stmt, positive) == false) throw new InstructionNotFoundException(positive);if (contains(stmt, negative) == false) throw new InstructionNotFoundException(negative);String sql = ""update Instructions set Operator = "" + condition + "", "" + ""FrameSlot = '"" + frameSlot + ""', "" + ""LinkName = '"" + linkName + ""', "" + ""ObjectId = "" + objectId + "", "" + ""AttributeName = '"" + attribute + ""' "" + ""where InstructionId = "" + id;stmt.executeUpdate(sql);InstructionGroupTable groupTable = new InstructionGroupTable();groupTable.deleteInstruction(stmt, id);if (positive != -1) groupTable.addInstructionAt(stmt, id, 1, positive);if (negative != -1) groupTable.addInstructionAt(stmt, id, 2, negative);conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public int addCollectionInstruction() throws FidoDatabaseException {try {Connection conn = null;Statement stmt = null;try {String sql = ""insert into Instructions (Type, Operator) "" + ""values (1, 0)"";conn = fido.util.FidoDataSource.getConnection();stmt = conn.createStatement();stmt.executeUpdate(sql);return getCurrentId(stmt);} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public void delete(int id) throws FidoDatabaseException {try {Connection conn = null;Statement stmt = null;try {conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();String sql = ""delete from Instructions where InstructionId = "" + id;stmt.executeUpdate(sql);sql = ""delete from InstructionGroups where InstructionId = "" + id;stmt.executeUpdate(sql);conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public ChatClient registerPlayer(int playerId, String playerLogin) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md = MessageDigest.getInstance(""SHA-256"");md.reset();md.update(playerLogin.getBytes(""UTF-8""), 0, playerLogin.length());byte[] accountToken = md.digest();byte[] token = generateToken(accountToken);ChatClient chatClient = new ChatClient(playerId, token);players.put(playerId, chatClient);return chatClient;}private String encryptPassword(String password) {String result = password;if (password != null) {try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.reset();md5.update(password.getBytes());BigInteger hash = new BigInteger(1, md5.digest());result = hash.toString(16);if ((result.length() % 2) != 0) {result = ""0"" + result;}} catch (NoSuchAlgorithmException e) {e.printStackTrace();getLogger().error(""Cannot generate MD5"", e);}}return result;}"	5
"private void retrieveData() {StringBuffer obsBuf = new StringBuffer();try {URL url = new URL(getProperty(""sourceURL""));BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String lineIn = null;while ((lineIn = in.readLine()) != null) {if (GlobalProps.DEBUG) {logger.log(Level.FINE, ""WebSource retrieveData: "" + lineIn);}obsBuf.append(lineIn);}String fmt = getProperty(""dataFormat"");if (GlobalProps.DEBUG) {logger.log(Level.FINE, ""Raw: "" + obsBuf.toString());}if (""NWS XML"".equals(fmt)) {obs = new NWSXmlObservation(obsBuf.toString());}} catch (Exception e) {logger.log(Level.SEVERE, ""Can't connect to: "" + getProperty(""sourceURL""));if (GlobalProps.DEBUG) {e.printStackTrace();}}}protected static String getInitialUUID() {if (myRand == null) {myRand = new Random();}long rand = myRand.nextLong();String sid;try {sid = InetAddress.getLocalHost().toString();} catch (UnknownHostException e) {sid = Thread.currentThread().getName();}StringBuffer sb = new StringBuffer();sb.append(sid);sb.append("":"");sb.append(Long.toString(rand));MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {throw new OMException(e);}md5.update(sb.toString().getBytes());byte[] array = md5.digest();StringBuffer sb2 = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;sb2.append(Integer.toHexString(b));}int begin = myRand.nextInt();if (begin < 0) begin = begin * -1;begin = begin % 8;return sb2.toString().substring(begin, begin + 18).toUpperCase();}public void invoke(MessageContext msgContext) throws AxisFault {log.debug(""Enter: MD5AttachHandler::invoke"");try {Message msg = msgContext.getRequestMessage();SOAPConstants soapConstants = msgContext.getSOAPConstants();org.apache.axis.message.SOAPEnvelope env = (org.apache.axis.message.SOAPEnvelope) msg.getSOAPEnvelope();org.apache.axis.message.SOAPBodyElement sbe = env.getFirstBody();org.w3c.dom.Element sbElement = sbe.getAsDOM();org.w3c.dom.Node n = sbElement.getFirstChild();for (; n != null && !(n instanceof org.w3c.dom.Element); n = n.getNextSibling()) ;org.w3c.dom.Element paramElement = (org.w3c.dom.Element) n;String href = paramElement.getAttribute(soapConstants.getAttrHref());org.apache.axis.Part ap = msg.getAttachmentsImpl().getAttachmentByReference(href);javax.activation.DataHandler dh = org.apache.axis.attachments.AttachmentUtils.getActivationDataHandler(ap);org.w3c.dom.Node timeNode = paramElement.getFirstChild();long startTime = -1;if (timeNode != null && timeNode instanceof org.w3c.dom.Text) {String startTimeStr = ((org.w3c.dom.Text) timeNode).getData();startTime = Long.parseLong(startTimeStr);}long receivedTime = System.currentTimeMillis();long elapsedTime = -1;if (startTime > 0) elapsedTime = receivedTime - startTime;String elapsedTimeStr = elapsedTime + """";java.security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");java.io.InputStream attachmentStream = dh.getInputStream();int bread = 0;byte[] buf = new byte[64 * 1024];do {bread = attachmentStream.read(buf);if (bread > 0) {md.update(buf, 0, bread);}} while (bread > -1);attachmentStream.close();buf = null;String contentType = dh.getContentType();if (contentType != null && contentType.length() != 0) {md.update(contentType.getBytes(""US-ASCII""));}sbe = env.getFirstBody();sbElement = sbe.getAsDOM();n = sbElement.getFirstChild();for (; n != null && !(n instanceof org.w3c.dom.Element); n = n.getNextSibling()) ;paramElement = (org.w3c.dom.Element) n;String MD5String = org.apache.axis.encoding.Base64.encode(md.digest());String senddata = "" elapsedTime="" + elapsedTimeStr + "" MD5="" + MD5String;paramElement.appendChild(paramElement.getOwnerDocument().createTextNode(senddata));sbe = new org.apache.axis.message.SOAPBodyElement(sbElement);env.clearBody();env.addBodyElement(sbe);msg = new Message(env);msgContext.setResponseMessage(msg);} catch (Exception e) {log.error(Messages.getMessage(""exception00""), e);throw AxisFault.makeFault(e);}log.debug(""Exit: MD5AttachHandler::invoke"");}public static byte[] getHashedID(String ID) {try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.reset();md5.update(ID.getBytes());byte[] digest = md5.digest();byte[] bytes = new byte[WLDB_ID_SIZE];for (int i = 0; i < bytes.length; i++) {bytes[i] = digest[i];}return bytes;} catch (NoSuchAlgorithmException exception) {System.err.println(""Java VM is not compatible"");return null;}}private boolean saveDocumentXml(String repository, String tempRepo) {boolean result = true;try {XPath xpath = XPathFactory.newInstance().newXPath();String expression = ""documents/document"";InputSource insource = new InputSource(new FileInputStream(tempRepo + File.separator + AppConstants.DMS_XML));NodeList nodeList = (NodeList) xpath.evaluate(expression, insource, XPathConstants.NODESET);for (int i = 0; i < nodeList.getLength(); i++) {Node node = nodeList.item(i);System.out.println(node.getNodeName());DocumentModel document = new DocumentModel();NodeList childs = node.getChildNodes();for (int j = 0; j < childs.getLength(); j++) {Node child = childs.item(j);if (child.getNodeType() == Node.ELEMENT_NODE) {if (child.getNodeName() != null && child.getFirstChild() != null && child.getFirstChild().getNodeValue() != null) {System.out.println(child.getNodeName() + ""::"" + child.getFirstChild().getNodeValue());}if (Document.FLD_ID.equals(child.getNodeName())) {if (child.getFirstChild() != null) {String szId = child.getFirstChild().getNodeValue();if (szId != null && szId.length() > 0) {try {document.setId(new Long(szId));} catch (Exception e) {e.printStackTrace();}}}} else if (document.FLD_NAME.equals(child.getNodeName())) {document.setName(child.getFirstChild().getNodeValue());document.setTitle(document.getName());document.setDescr(document.getName());document.setExt(getExtension(document.getName()));} else if (document.FLD_LOCATION.equals(child.getNodeName())) {document.setLocation(child.getFirstChild().getNodeValue());} else if (document.FLD_OWNER.equals(child.getNodeName())) {Long id = new Long(child.getFirstChild().getNodeValue());User user = new UserModel();user.setId(id);user = (User) userService.find(user);if (user != null && user.getId() != null) {document.setOwner(user);}}}}boolean isSave = docService.save(document);if (isSave) {String repo = preference.getRepository();Calendar calendar = Calendar.getInstance();StringBuffer sbRepo = new StringBuffer(repo);sbRepo.append(File.separator);StringBuffer sbFolder = new StringBuffer(sdf.format(calendar.getTime()));sbFolder.append(File.separator).append(calendar.get(Calendar.HOUR_OF_DAY));File fileFolder = new File(sbRepo.append(sbFolder).toString());if (!fileFolder.exists()) {fileFolder.mkdirs();}FileChannel fcSource = null, fcDest = null;try {StringBuffer sbFile = new StringBuffer(fileFolder.getAbsolutePath());StringBuffer fname = new StringBuffer(document.getId().toString());fname.append(""."").append(document.getExt());sbFile.append(File.separator).append(fname);fcSource = new FileInputStream(tempRepo + File.separator + document.getName()).getChannel();fcDest = new FileOutputStream(sbFile.toString()).getChannel();fcDest.transferFrom(fcSource, 0, fcSource.size());document.setLocation(sbFolder.toString());document.setSize(fcSource.size());log.info(""Batch upload file "" + document.getName() + "" into ["" + document.getLocation() + ""] as "" + document.getName() + ""."" + document.getExt());folder.setId(DEFAULT_FOLDER);folder = (Folder) folderService.find(folder);if (folder != null && folder.getId() != null) {document.setFolder(folder);}workspace.setId(DEFAULT_WORKSPACE);workspace = (Workspace) workspaceService.find(workspace);if (workspace != null && workspace.getId() != null) {document.setWorkspace(workspace);}user.setId(DEFAULT_USER);user = (User) userService.find(user);if (user != null && user.getId() != null) {document.setCrtby(user.getId());}document.setCrtdate(new Date());document = (DocumentModel) docService.resetDuplicateDocName(document);docService.save(document);DocumentIndexer.indexDocument(preference, document);} catch (FileNotFoundException notFoundEx) {log.error(""saveFile file not found: "" + document.getName(), notFoundEx);} catch (IOException ioEx) {log.error(""saveFile IOException: "" + document.getName(), ioEx);} finally {try {if (fcSource != null) {fcSource.close();}if (fcDest != null) {fcDest.close();}} catch (Exception e) {log.error(e.getMessage(), e);}}}}} catch (Exception e) {result = false;e.printStackTrace();}return result;}public String hash(String text) {try {MessageDigest md = MessageDigest.getInstance(hashFunction);md.update(text.getBytes(charset));byte[] raw = md.digest();return new String(encodeHex(raw));} catch (Exception e) {throw new RuntimeException(e);}}String readArticleFromFile(String urlStr) {String docbase = getDocumentBase().toString();int pos = docbase.lastIndexOf('/');if (pos > -1) {docbase = docbase.substring(0, pos + 1);} else {docbase = """";}docbase = docbase + urlStr;String prog = """";try {URL url = new URL(docbase);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));if (in != null) {while (true) {try {String mark = in.readLine();if (mark == null) break;prog = prog + mark + ""\n"";} catch (Exception e) {}}in.close();}} catch (Exception e) {}return prog;}private void populatePortfolioEntry(ActionResponse resp, PortfolioEntry e, String market) throws Exception {String tmp = getURL(market, e);if (tmp == null) {tmp = URL_QUOTE_DATA;}tmp = tmp.replace(""@"", e.getSymbol());URL url = new URL(tmp);HttpURLConnection conn = (HttpURLConnection) url.openConnection();BufferedReader in = null;try {int status = conn.getResponseCode();if (status == 200) {in = new BufferedReader(new InputStreamReader(conn.getInputStream()));StringBuffer responseBody = new StringBuffer();while (true) {String line = in.readLine();if (line == null) break;responseBody.append(line);}ArrayList<String> data = parseData(responseBody.toString(), "","");if (data.size() == 2) {e.setName(MiscUtils.trimChars(data.get(0), '""'));String val = data.get(1);val = MiscUtils.trimChars(val.trim(), '\r');val = MiscUtils.trimChars(val.trim(), '\n');BigDecimal d = new BigDecimal(val);e.setPricePerShare(d);} else {resp.setErrorCode(ActionResponse.GENERAL_ERROR);resp.setErrorMessage(""Error retrieving data"");}} else {resp.setErrorCode(ActionResponse.GENERAL_ERROR);resp.setErrorMessage(""Error retrieving data Http code: "" + status);}} finally {if (in != null) in.close();}}public void testStreamURL() throws Exception {boolean ok = false;String url = ""http://www.apache.org/dist/lucene/solr/"";String txt = null;try {txt = IOUtils.toString(new URL(url).openStream());} catch (Exception ex) {fail(""this test only works if you have a network connection."");return;}SolrCore core = h.getCore();Map<String, String[]> args = new HashMap<String, String[]>();args.put(CommonParams.STREAM_URL, new String[] { url });List<ContentStream> streams = new ArrayList<ContentStream>();parser.buildRequestFrom(core, new MultiMapSolrParams(args), streams);assertEquals(1, streams.size());assertEquals(txt, IOUtils.toString(streams.get(0).getStream()));}public static String hashPassword(String password) {String hashword = null;try {MessageDigest md5 = MessageDigest.getInstance(MESSAGE_DIGEST_ALGORITHM_MD5);md5.update(password.getBytes());BigInteger hash = new BigInteger(1, md5.digest());hashword = hash.toString(16);} catch (NoSuchAlgorithmException e) {logger.error(""Cannot find algorithm = '"" + MESSAGE_DIGEST_ALGORITHM_MD5 + ""'"", e);throw new IllegalStateException(e);}return pad(hashword, 32, '0');}"	5
"private void getImage(String filename) throws MalformedURLException, IOException, SAXException, FileNotFoundException {String url = Constants.STRATEGICDOMINATION_URL + ""/images/gameimages/"" + filename;WebRequest req = new GetMethodWebRequest(url);SiteResponse response = getSiteResponse(req);File file = new File(""etc/images/"" + filename);FileOutputStream outputStream = new FileOutputStream(file);IOUtils.copy(response.getInputStream(), outputStream);}public static String encrypt(String input) {try {MessageDigest md = MessageDigest.getInstance(""SHA1"");md.update(input.getBytes(""UTF-8""));return toHexString(md.digest());} catch (NoSuchAlgorithmException e) {e.printStackTrace();} catch (UnsupportedEncodingException e) {e.printStackTrace();}return null;}public boolean run() {String url;try {url = getFileName();} catch (NoSuchFieldException e) {return false;}if (url == null) {logger.error(""URL not specified! Cannot continue."");return false;}try {URL newURL = new URL(url);String extension = url.substring((url.lastIndexOf(""."")) + 1, url.length());File temp = File.createTempFile(""temp"", ""."" + extension);System.out.printf(""Storing URL contents to a temp file : %s\n"", temp);temp.deleteOnExit();InputStream urlINS = new BufferedInputStream(newURL.openConnection().getInputStream());BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(temp));int len = 0;for (int singleByte = urlINS.read(); singleByte != -1; singleByte = urlINS.read()) {out.write(singleByte);len++;}System.out.printf(""Stored %d bytes from URL contents\n"", len);out.flush();out.close();System.out.printf(""URL/Temp extension : %s\n"", extension);if (extension.equalsIgnoreCase(""gz"")) {String shorterName = url.substring(0, url.lastIndexOf("".""));String extension2 = shorterName.substring((shorterName.lastIndexOf(""."")) + 1, shorterName.length());File temp2 = File.createTempFile(""temp"", ""."" + extension2);temp2.deleteOnExit();System.out.printf(""URL/Temp extension after decompressing gzip : %s\n"", extension2);GZIPInputStream decompressor = new GZIPInputStream(new FileInputStream(temp));OutputStream target = new FileOutputStream(temp2);byte[] buffer = new byte[1024];int length;while ((length = decompressor.read(buffer)) > 0) {target.write(buffer, 0, length);}target.flush();target.close();temp = temp2;}String tempName = temp.getName();extension = tempName.substring((tempName.lastIndexOf(""."")) + 1, tempName.length());Preprocessor fileLoader = null;BasePreprocessorConfig configObject = null;if (MethodCallTable.containsKey(extension) == false) {fileLoader = MethodCallTable.get(""default"");} else {fileLoader = MethodCallTable.get(extension);}System.out.printf(""Calling filter '%s' for extension: %s\n"", fileLoader.getPreprocessingMethodName(), extension);configObject = new LoadCSVPreprocessorConfig();configObject.setValueByName(""FileName"", temp.getAbsolutePath());fileLoader.setConfigurationClass(configObject);return fileLoader.run();} catch (Exception e) {logger.error(e);return false;}}private void copy(File source, File target) throws IOException {FileChannel in = (new FileInputStream(source)).getChannel();FileChannel out = (new FileOutputStream(target)).getChannel();in.transferTo(0, source.length(), out);in.close();out.close();}public File createFileFromClasspathResource(String resourceUrl) throws IOException {File fichierTest = File.createTempFile(""xmlFieldTestFile"", """");FileOutputStream fos = new FileOutputStream(fichierTest);InputStream is = XmlFieldDomSelectorTest.class.getResourceAsStream(resourceUrl);IOUtils.copy(is, fos);is.close();fos.close();return fichierTest;}public static String sha1(String src) {MessageDigest md1 = null;try {md1 = MessageDigest.getInstance(""SHA-1"");} catch (NoSuchAlgorithmException e) {e.printStackTrace();}try {md1.update(src.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {e.printStackTrace();}return hex(md1.digest());}public String move(Integer param) {LOG.debug(""move "" + param);StringBuffer ret = new StringBuffer();try {URL url = new URL(""http://"" + host + ""/decoder_control.cgi?command="" + param + ""&user="" + user + ""&pwd="" + password);URLConnection con = url.openConnection();BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));String inputLine;while ((inputLine = in.readLine()) != null) {ret.append(inputLine);}in.close();} catch (Exception e) {logException(e);connect(host, user, password);}return ret.toString();}public static LinkedList<String> read(URL url) throws IOException {LinkedList<String> data = new LinkedList<String>();HttpURLConnection con = (HttpURLConnection) url.openConnection();BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream()));String input = """";while (true) {input = br.readLine();if (input == null) break;data.add(input);}br.close();return data;}public static LinkedList<String> read(URL url, String exc) throws IOException {LinkedList<String> data = new LinkedList<String>();HttpURLConnection con = (HttpURLConnection) url.openConnection();BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream()));String input = """";while (true) {input = br.readLine();if (input == null) break;if (!input.startsWith(exc)) {data.add(input);}}br.close();return data;}private void connect(URL url) throws IOException {String protocol = url.getProtocol();if (!protocol.equals(""http"")) throw new IllegalArgumentException(""URL must use 'http:' protocol"");int port = url.getPort();if (port == -1) port = 80;fileName = url.getFile();conn = (HttpURLConnection) url.openConnection();conn.setRequestMethod(""POST"");conn.setDoOutput(true);conn.setDoInput(true);toServer = new OutputStreamWriter(conn.getOutputStream());fromServer = conn.getInputStream();}"	5
"public void retrieveFiles() throws DataSyncException {try {ftp.connect(hostname, port);boolean success = ftp.login(username, password);log.info(""FTP Login:"" + success);if (success) {System.out.println(directory);ftp.changeWorkingDirectory(directory);ftp.setFileType(FTP.ASCII_FILE_TYPE);ftp.enterLocalPassiveMode();ftp.setRemoteVerificationEnabled(false);FTPFile[] files = ftp.listFiles();for (FTPFile file : files) {ftp.setFileType(file.getType());log.debug(file.getName() + "","" + file.getSize());FileOutputStream output = new FileOutputStream(localDirectory + file.getName());try {ftp.retrieveFile(file.getName(), output);} finally {IOUtils.closeQuietly(output);}}}} catch (Exception e) {throw new DataSyncException(e);} finally {try {ftp.disconnect();} catch (IOException e) {}}}@Overridepublic void save(String arxivId, InputStream inputStream, String encoding) {String filename = StringUtil.arxivid2filename(arxivId, ""tex"");try {Writer writer = new OutputStreamWriter(new FileOutputStream(String.format(""%s/%s"", LATEX_DOCUMENT_DIR, filename)), encoding);IOUtils.copy(inputStream, writer, encoding);writer.flush();writer.close();inputStream.close();} catch (IOException e) {logger.error(""Failed to save the Latex source with id='{}'"", arxivId, e);throw new RuntimeException(e);}}public void convert(File src, File dest) throws IOException {InputStream in = new BufferedInputStream(new FileInputStream(src));DcmParser p = pfact.newDcmParser(in);Dataset ds = fact.newDataset();p.setDcmHandler(ds.getDcmHandler());try {FileFormat format = p.detectFileFormat();if (format != FileFormat.ACRNEMA_STREAM) {System.out.println(""\n"" + src + "": not an ACRNEMA stream!"");return;}p.parseDcmFile(format, Tags.PixelData);if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {System.out.println(""\n"" + src + "": contains UIDs!"" + "" => probable already DICOM - do not convert"");return;}boolean hasPixelData = p.getReadTag() == Tags.PixelData;boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;int pxlen = p.getReadLength();if (hasPixelData) {if (inflate) {ds.putUS(Tags.BitsAllocated, 16);pxlen = pxlen * 4 / 3;}if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {System.out.println(""\n"" + src + "": mismatch pixel data length!"" + "" => do not convert"");return;}}ds.putUI(Tags.StudyInstanceUID, uid(studyUID));ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));ds.putUI(Tags.SOPInstanceUID, uid(instUID));ds.putUI(Tags.SOPClassUID, classUID);if (!ds.contains(Tags.NumberOfSamples)) {ds.putUS(Tags.NumberOfSamples, 1);}if (!ds.contains(Tags.PhotometricInterpretation)) {ds.putCS(Tags.PhotometricInterpretation, ""MONOCHROME2"");}if (fmi) {ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));}OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));try {} finally {ds.writeFile(out, encodeParam());if (hasPixelData) {if (!skipGroupLen) {out.write(PXDATA_GROUPLEN);int grlen = pxlen + 8;out.write((byte) grlen);out.write((byte) (grlen >> 8));out.write((byte) (grlen >> 16));out.write((byte) (grlen >> 24));}out.write(PXDATA_TAG);out.write((byte) pxlen);out.write((byte) (pxlen >> 8));out.write((byte) (pxlen >> 16));out.write((byte) (pxlen >> 24));}if (inflate) {int b2, b3;for (; pxlen > 0; pxlen -= 3) {out.write(in.read());b2 = in.read();b3 = in.read();out.write(b2 & 0x0f);out.write(b2 >> 4 | ((b3 & 0x0f) << 4));out.write(b3 >> 4);}} else {for (; pxlen > 0; --pxlen) {out.write(in.read());}}out.close();}System.out.print('.');} finally {in.close();}}public static void copy(File source, File sink) throws IOException {if (source == null) throw new NullPointerException(""Source file must not be null"");if (sink == null) throw new NullPointerException(""Target file must not be null"");if (!source.exists()) throw new IOException(""Source file "" + source.getPath() + "" does not exist"");if (!source.isFile()) throw new IOException(""Source file "" + source.getPath() + "" is not a regular file"");if (!source.canRead()) throw new IOException(""Source file "" + source.getPath() + "" can not be read (missing acces right)"");if (!sink.exists()) throw new IOException(""Target file "" + sink.getPath() + "" does not exist"");if (!sink.isFile()) throw new IOException(""Target file "" + sink.getPath() + "" is not a regular file"");if (!sink.canWrite()) throw new IOException(""Target file "" + sink.getPath() + "" is write protected"");InputStream input = null;OutputStream output = null;try {input = new FileInputStream(source);output = new FileOutputStream(sink);byte[] buffer = new byte[1024];while (input.available() > 0) {int bread = input.read(buffer);if (bread > 0) output.write(buffer, 0, bread);}} finally {if (input != null) try {input.close();} catch (IOException x) {}if (output != null) try {output.close();} catch (IOException x) {}}}public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception {if (baseDirStr.endsWith(sep)) {baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1);}if (destDirStr.endsWith(sep)) {destDirStr = destDirStr.substring(0, destDirStr.length() - 1);}FileUtils.getInstance().createDirectory(baseDirStr);if (null == newNamesTable) {newNamesTable = new Hashtable();}BufferedInputStream in = null;BufferedOutputStream out = null;byte dataBuff[] = new byte[bufferSize];File baseDir = new File(baseDirStr);baseDir.mkdirs();if ((baseDir.exists()) && (baseDir.isDirectory())) {if (!newNamesTable.isEmpty()) {Enumeration enumFiles = newNamesTable.keys();while (enumFiles.hasMoreElements()) {String newName = (String) enumFiles.nextElement();String oldPathName = (String) newNamesTable.get(newName);if ((newName != null) && (!"""".equals(newName)) && (oldPathName != null) && (!"""".equals(oldPathName))) {String newPathFileName = destDirStr + sep + newName;String oldPathFileName = baseDirStr + sep + oldPathName;if (oldPathName.startsWith(sep)) {oldPathFileName = baseDirStr + oldPathName;}File f = new File(oldPathFileName);if ((f.exists()) && (f.isFile())) {in = new BufferedInputStream(new FileInputStream(oldPathFileName), bufferSize);out = new BufferedOutputStream(new FileOutputStream(newPathFileName), bufferSize);int readLen;while ((readLen = in.read(dataBuff)) > 0) {out.write(dataBuff, 0, readLen);}out.flush();in.close();out.close();} else {}}}} else {}} else {throw new Exception(""Base (baseDirStr) dir not exist !"");}}public long copyDirAllFilesToDirectory(String baseDirStr, String destDirStr) throws Exception {long plussQuotaSize = 0;if (baseDirStr.endsWith(sep)) {baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1);}if (destDirStr.endsWith(sep)) {destDirStr = destDirStr.substring(0, destDirStr.length() - 1);}FileUtils.getInstance().createDirectory(destDirStr);BufferedInputStream in = null;BufferedOutputStream out = null;byte dataBuff[] = new byte[bufferSize];File baseDir = new File(baseDirStr);baseDir.mkdirs();if (!baseDir.exists()) {createDirectory(baseDirStr);}if ((baseDir.exists()) && (baseDir.isDirectory())) {String[] entryList = baseDir.list();if (entryList.length > 0) {for (int pos = 0; pos < entryList.length; pos++) {String entryName = entryList[pos];String oldPathFileName = baseDirStr + sep + entryName;File entryFile = new File(oldPathFileName);if (entryFile.isFile()) {String newPathFileName = destDirStr + sep + entryName;File newFile = new File(newPathFileName);if (newFile.exists()) {plussQuotaSize -= newFile.length();newFile.delete();}in = new BufferedInputStream(new FileInputStream(oldPathFileName), bufferSize);out = new BufferedOutputStream(new FileOutputStream(newPathFileName), bufferSize);int readLen;while ((readLen = in.read(dataBuff)) > 0) {out.write(dataBuff, 0, readLen);plussQuotaSize += readLen;}out.flush();in.close();out.close();}}}} else {throw new Exception(""Base dir not exist ! baseDirStr = ("" + baseDirStr + "")"");}return plussQuotaSize;}public long copyDirAllFilesToDirectoryRecursive(String baseDirStr, String destDirStr, boolean copyOutputsRtIDsDirs) throws Exception {long plussQuotaSize = 0;if (baseDirStr.endsWith(sep)) {baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1);}if (destDirStr.endsWith(sep)) {destDirStr = destDirStr.substring(0, destDirStr.length() - 1);}FileUtils.getInstance().createDirectory(destDirStr);BufferedInputStream in = null;BufferedOutputStream out = null;byte dataBuff[] = new byte[bufferSize];File baseDir = new File(baseDirStr);baseDir.mkdirs();if (!baseDir.exists()) {createDirectory(baseDirStr);}if ((baseDir.exists()) && (baseDir.isDirectory())) {String[] entryList = baseDir.list();if (entryList.length > 0) {for (int pos = 0; pos < entryList.length; pos++) {String entryName = entryList[pos];String oldPathFileName = baseDirStr + sep + entryName;File entryFile = new File(oldPathFileName);if (entryFile.isFile()) {String newPathFileName = destDirStr + sep + entryName;File newFile = new File(newPathFileName);if (newFile.exists()) {plussQuotaSize -= newFile.length();newFile.delete();}in = new BufferedInputStream(new FileInputStream(oldPathFileName), bufferSize);out = new BufferedOutputStream(new FileOutputStream(newPathFileName), bufferSize);int readLen;while ((readLen = in.read(dataBuff)) > 0) {out.write(dataBuff, 0, readLen);plussQuotaSize += readLen;}out.flush();in.close();out.close();}if (entryFile.isDirectory()) {boolean enableCopyDir = false;if (copyOutputsRtIDsDirs) {enableCopyDir = true;} else {if (entryFile.getParentFile().getName().equals(""outputs"")) {enableCopyDir = false;} else {enableCopyDir = true;}}if (enableCopyDir) {plussQuotaSize += this.copyDirAllFilesToDirectoryRecursive(baseDirStr + sep + entryName, destDirStr + sep + entryName, copyOutputsRtIDsDirs);}}}}} else {throw new Exception(""Base dir not exist ! baseDirStr = ("" + baseDirStr + "")"");}return plussQuotaSize;}public long copyFile(String baseDirStr, String fileName, String file2FullPath) throws Exception {long plussQuotaSize = 0;if (!baseDirStr.endsWith(sep)) {baseDirStr += sep;}BufferedInputStream in = null;BufferedOutputStream out = null;byte dataBuff[] = new byte[bufferSize];String file1FullPath = new String(baseDirStr + fileName);if (!file1FullPath.equalsIgnoreCase(file2FullPath)) {File file1 = new File(file1FullPath);if (file1.exists() && (file1.isFile())) {File file2 = new File(file2FullPath);if (file2.exists()) {plussQuotaSize -= file2.length();file2.delete();}FileUtils.getInstance().createDirectory(file2.getParent());in = new BufferedInputStream(new FileInputStream(file1FullPath), bufferSize);out = new BufferedOutputStream(new FileOutputStream(file2FullPath), bufferSize);int readLen;while ((readLen = in.read(dataBuff)) > 0) {out.write(dataBuff, 0, readLen);plussQuotaSize += readLen;}out.flush();in.close();out.close();} else {throw new Exception(""Source file not exist ! file1FullPath = ("" + file1FullPath + "")"");}}return plussQuotaSize;}public long copyFileWithPaths(String userBaseDir, String sourcePath, String destinPath) throws Exception {if (userBaseDir.endsWith(sep)) {userBaseDir = userBaseDir.substring(0, userBaseDir.length() - sep.length());}String file1FullPath = new String();if (sourcePath.startsWith(sep)) {file1FullPath = new String(userBaseDir + sourcePath);} else {file1FullPath = new String(userBaseDir + sep + sourcePath);}String file2FullPath = new String();if (destinPath.startsWith(sep)) {file2FullPath = new String(userBaseDir + destinPath);} else {file2FullPath = new String(userBaseDir + sep + destinPath);}long plussQuotaSize = 0;BufferedInputStream in = null;BufferedOutputStream out = null;byte dataBuff[] = new byte[bufferSize];File fileordir = new File(file1FullPath);if (fileordir.exists()) {if (fileordir.isFile()) {File file2 = new File(file2FullPath);if (file2.exists()) {plussQuotaSize -= file2.length();file2.delete();}FileUtils.getInstance().createDirectory(file2.getParent());in = new BufferedInputStream(new FileInputStream(file1FullPath), bufferSize);out = new BufferedOutputStream(new FileOutputStream(file2FullPath), bufferSize);int readLen;while ((readLen = in.read(dataBuff)) > 0) {out.write(dataBuff, 0, readLen);plussQuotaSize += readLen;}out.flush();in.close();out.close();}if (fileordir.isDirectory()) {String[] entryList = fileordir.list();if (entryList.length > 0) {for (int pos = 0; pos < entryList.length; pos++) {String entryName = entryList[pos];String file1FullPathEntry = new String(file1FullPath.concat(entryList[pos]));String file2FullPathEntry = new String(file2FullPath.concat(entryList[pos]));File file2 = new File(file2FullPathEntry);if (file2.exists()) {plussQuotaSize -= file2.length();file2.delete();}FileUtils.getInstance().createDirectory(file2.getParent());in = new BufferedInputStream(new FileInputStream(file1FullPathEntry), bufferSize);out = new BufferedOutputStream(new FileOutputStream(file2FullPathEntry), bufferSize);int readLen;while ((readLen = in.read(dataBuff)) > 0) {out.write(dataBuff, 0, readLen);plussQuotaSize += readLen;}out.flush();in.close();out.close();}}}} else {throw new Exception(""Source file or dir not exist ! file1FullPath = ("" + file1FullPath + "")"");}return plussQuotaSize;}public void copyFileToFileWithPaths(String sourcePath, String destinPath) throws Exception {BufferedInputStream in = null;BufferedOutputStream out = null;byte dataBuff[] = new byte[bufferSize];File file1 = new File(sourcePath);if (file1.exists() && (file1.isFile())) {File file2 = new File(destinPath);if (file2.exists()) {file2.delete();}FileUtils.getInstance().createDirectory(file2.getParent());in = new BufferedInputStream(new FileInputStream(sourcePath), bufferSize);out = new BufferedOutputStream(new FileOutputStream(destinPath), bufferSize);int readLen;while ((readLen = in.read(dataBuff)) > 0) {out.write(dataBuff, 0, readLen);}out.flush();in.close();out.close();} else {throw new Exception(""Source file not exist ! sourcePath = ("" + sourcePath + "")"");}}"	5
"private static String hash(String string) {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (Exception e) {return null;}try {md.update(string.getBytes(""UTF-8""));} catch (Exception e) {return null;}byte raw[] = md.digest();return (new BASE64Encoder()).encode(raw);}public void createJAR(String fileString, String ext) {try {File file = new File(fileString);int i = fileString.lastIndexOf(java.io.File.separator);String dir = fileString.substring(0, i + 1);if (ext.matches(""jar"")) {jarFile = new File(getClass().getClassLoader().getResource(""jsdviewer.jar"").toURI());java.io.FileOutputStream fstrm = new java.io.FileOutputStream(file);FileChannel in = (new java.io.FileInputStream(jarFile)).getChannel();FileChannel out = fstrm.getChannel();in.transferTo(0, jarFile.length(), out);in.close();out.close();} else {file.mkdir();}File.umount(file);File temp = new File(dir + ""document.jsd"");FileOutputStream fstrm2 = new FileOutputStream(temp.getCanonicalPath());ostrm = new ObjectOutputStream(fstrm2);ostrm.writeObject(doc);ostrm.flush();ostrm.close();File.umount();File docFile = new File(file.getCanonicalPath() + java.io.File.separator + ""document.jsd"");File.cp_p(temp, docFile);File.umount();temp.delete();File.umount(file);} catch (Exception e) {e.printStackTrace();}}public HttpResponse execute(final HttpRequest request, final HttpClientConnection conn, final HttpContext context) throws IOException, HttpException {if (request == null) {throw new IllegalArgumentException(""HTTP request may not be null"");}if (conn == null) {throw new IllegalArgumentException(""Client connection may not be null"");}if (context == null) {throw new IllegalArgumentException(""HTTP context may not be null"");}try {HttpResponse response = doSendRequest(request, conn, context);if (response == null) {response = doReceiveResponse(request, conn, context);}return response;} catch (IOException ex) {conn.close();throw ex;} catch (HttpException ex) {conn.close();throw ex;} catch (RuntimeException ex) {conn.close();throw ex;}}private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException {if (clazz == null) {throw new IllegalArgumentException(""Argument 'clazz' cannot be null!"");}ClassLoader classLoader = loader;if (classLoader == null) {classLoader = clazz.getClassLoader();}String interfaceName = clazz.getName();ArrayList tmp = new ArrayList();ArrayList toRemove = new ArrayList();String className = System.getProperty(interfaceName);if (className != null && className.trim().length() > 0) {tmp.add(className.trim());}Enumeration en = null;try {en = classLoader.getResources(""META-INF/services/"" + clazz.getName());} catch (IOException e) {e.printStackTrace();}while (en != null && en.hasMoreElements()) {URL url = (URL) en.nextElement();InputStream is = null;try {is = url.openStream();BufferedReader reader = new BufferedReader(new InputStreamReader(is, ""UTF-8""));String line;do {line = reader.readLine();boolean remove = false;if (line != null) {if (line.startsWith(""#-"")) {remove = true;line = line.substring(2);}int pos = line.indexOf('#');if (pos >= 0) {line = line.substring(0, pos);}line = line.trim();if (line.length() > 0) {if (remove) {toRemove.add(line);} else {tmp.add(line);}}}} while (line != null);} catch (IOException e) {e.printStackTrace();} finally {if (is != null) {try {is.close();} catch (IOException e) {e.printStackTrace();}}}}if (defaultImplementations != null) {for (int i = 0; i < defaultImplementations.length; i++) {tmp.add(defaultImplementations[i].trim());}}if (!clazz.isInterface()) {int m = clazz.getModifiers();if (!Modifier.isAbstract(m) && Modifier.isPublic(m) && !Modifier.isStatic(m)) {tmp.add(interfaceName);}}tmp.removeAll(toRemove);ArrayList res = new ArrayList();for (Iterator it = tmp.iterator(); it.hasNext(); ) {className = (String) it.next();try {Class c = Class.forName(className, false, classLoader);if (c != null) {if (clazz.isAssignableFrom(c)) {if (returnInstances) {Object o = null;try {o = c.newInstance();} catch (Throwable e) {e.printStackTrace();}if (o != null) {res.add(o);if (onlyFirst) {return res;}}} else {res.add(c);if (onlyFirst) {return res;}}} else {logger.warning(""MetaInfLookup: Class '"" + className + ""' is not a subclass of class : "" + interfaceName);}}} catch (ClassNotFoundException e) {logger.log(Level.WARNING, ""Cannot create implementation of interface: "" + interfaceName, e);}}if (res.size() == 0) {throw new ClassNotFoundException(""Cannot find any implemnetation of class "" + interfaceName);}return res;}private void writeToUrl(byte[] data, String url) throws IOException, MalformedURLException {HttpURLConnection connection = (HttpURLConnection) new URL(url).openConnection();OutputStream out = connection.getOutputStream();out.write(data);out.flush();out.close();}public static LinkedList Import(String url) throws Exception {LinkedList data = new LinkedList();BufferedReader in = new BufferedReader(new InputStreamReader((new URL(url)).openStream()));String csvLine;while ((csvLine = in.readLine()) != null) {StringTokenizer st = new StringTokenizer(csvLine, "","");CSVData cd = new CSVData();st.nextToken();st.nextToken();cd.matrNumber = Integer.parseInt(st.nextToken().trim());cd.fName = st.nextToken().trim();cd.lName = st.nextToken().trim();cd.email = st.nextToken().trim();cd.stdyPath = st.nextToken().trim();cd.sem = Integer.parseInt(st.nextToken().trim());data.add(cd);}in.close();return data;}private String generateUniqueIdMD5(String workgroupIdString, String runIdString) {String passwordUnhashed = workgroupIdString + ""-"" + runIdString;MessageDigest m = null;try {m = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {e.printStackTrace();}m.update(passwordUnhashed.getBytes(), 0, passwordUnhashed.length());String uniqueIdMD5 = new BigInteger(1, m.digest()).toString(16);return uniqueIdMD5;}public static AudioFileFormat getAudioFileFormat(URL url) throws UnsupportedAudioFileException, IOException {InputStream inputStream = null;if (useragent != null) {URLConnection myCon = url.openConnection();myCon.setUseCaches(false);myCon.setDoInput(true);myCon.setDoOutput(true);myCon.setAllowUserInteraction(false);myCon.setRequestProperty(""User-Agent"", useragent);myCon.setRequestProperty(""Accept"", ""*/*"");myCon.setRequestProperty(""Icy-Metadata"", ""1"");myCon.setRequestProperty(""Connection"", ""close"");inputStream = new BufferedInputStream(myCon.getInputStream());} else {inputStream = new BufferedInputStream(url.openStream());}try {if (DEBUG == true) {System.err.println(""Using AppletMpegSPIWorkaround to get codec (AudioFileFormat:url)"");}return getAudioFileFormatForUrl(inputStream);} finally {inputStream.close();}}public void updateFiles(String ourPath) {System.out.println(""Update"");DataInputStream dis = null;DataOutputStream dos = null;for (int i = 0; i < newFiles.size() && i < nameNewFiles.size(); i++) {try {dis = new DataInputStream(new FileInputStream((String) newFiles.get(i)));dos = new DataOutputStream(new FileOutputStream((new StringBuilder(String.valueOf(ourPath))).append(""\\"").append((String) nameNewFiles.get(i)).toString()));} catch (IOException e) {System.out.println(e.toString());System.exit(0);}try {do dos.writeChar(dis.readChar()); while (true);} catch (EOFException e) {} catch (IOException e) {System.out.println(e.toString());}}}public PropertiesImpl(URL url) {this();InputStream in = null;lock.lock();try {in = url.openStream();PropertiesLexer lexer = new PropertiesLexer(in);lexer.lex();List<PropertiesToken> list = lexer.getList();new PropertiesParser(list, this).parse();} catch (IOException e) {e.printStackTrace();} finally {if (in != null) try {in.close();} catch (IOException e) {}lock.unlock();}}"	5
"public static byte[] excutePostRaw(String targetURL, byte[] postdata) {URL url;HttpURLConnection connection = null;try {url = new URL(targetURL);connection = (HttpURLConnection) url.openConnection();connection.setRequestMethod(""POST"");connection.setRequestProperty(""Content-Type"", ""application/x-www-form-urlencoded"");connection.setRequestProperty(""Content-Length"", """" + Integer.toString(postdata.length));connection.setRequestProperty(""Content-Language"", ""en-US"");connection.setUseCaches(false);connection.setDoInput(true);connection.setDoOutput(true);DataOutputStream wr = new DataOutputStream(connection.getOutputStream());wr.write(postdata);wr.flush();wr.close();int amt = connection.getContentLength();InputStream in = connection.getInputStream();MojasiWriter writer = new MojasiWriter();byte[] buff = new byte[256];while (writer.size() < amt) {int got = in.read(buff);if (got < 0) break;writer.pushBytes(buff, got);if (writer.size() > 1) System.out.println();}in.close();connection.disconnect();return writer.getBytes();} catch (Exception e) {e.printStackTrace();return null;} finally {if (connection != null) {connection.disconnect();}}}private String getResourceAsString(final String name) throws IOException {final InputStream is = JiBXTestCase.class.getResourceAsStream(name);final ByteArrayOutputStream baos = new ByteArrayOutputStream();IOUtils.copyAndClose(is, baos);return baos.toString();}public static URLConnection getURLConnection(URL url, boolean ignoreBadCertificates) throws KeyManagementException, NoSuchAlgorithmException, UnknownHostException, IOException {SSLSocketFactory sslSocketFactory = null;if (ignoreBadCertificates) {SSLContext sslContext = SSLContext.getInstance(""SSL"");sslContext.init(null, getAllTrustingTrustManager(), new java.security.SecureRandom());sslSocketFactory = sslContext.getSocketFactory();} else {sslSocketFactory = (SSLSocketFactory) SSLSocketFactory.getDefault();}HttpsURLConnection.setDefaultSSLSocketFactory(sslSocketFactory);return url.openConnection();}public Object invoke(Invocation invocation) throws Throwable {SmartRef smartRef = (SmartRef) invocation.getValue(Invocation.SMARTREF);HttpURLConnection connection = null;ObjectOutputStream out = null;URL url = null;try {url = new URL(smartRef.getProperties().getProperty(""org.smartcc.connector.url""));url = new URL(url, smartRef.getLookup());connection = (HttpURLConnection) url.openConnection();connection.setRequestProperty(""Content-Type"", ""application/octet-stream"");connection.setDoOutput(true);connection.setDoInput(true);connection.setUseCaches(false);out = new ObjectOutputStream(connection.getOutputStream());out.writeObject(invocation);out.flush();} catch (ObjectStreamException e) {System.err.println(""error: during serialization"");throw new EJBException(""error: during serialization"", e);} catch (IOException e) {System.err.println(""error: could not connect to "" + url);throw new ConnectIOException(""could not connect to "" + url, e);} finally {try {out.close();} catch (Exception e) {}}boolean isThrowable = false;Object result = null;ObjectInputStream in = null;try {in = new ObjectInputStream(connection.getInputStream());isThrowable = in.readBoolean();if (isThrowable || !invocation.getMethod().getReturnType().equals(void.class)) result = in.readObject();} catch (ObjectStreamException e) {System.err.println(""error: during deserialization"");throw new EJBException(""error: during deserialization"", e);} catch (IOException e) {System.err.println(""error: could not connect to "" + url);throw new ConnectIOException(""could not connect to "" + url, e);} finally {try {in.close();} catch (Exception e) {}}if (isThrowable) throw (Throwable) result;return result;}@Overridepublic void runTask(HashMap pjobParameters) throws Exception {if (hasRequiredResources(isSubTask())) {File lfileSource = new File(getSource());File lfileTarget = new File(getTarget());FileChannel lfisInput = null;FileChannel lfosOutput = null;try {int mbCount = 64;boolean lblnDone = false;while (!lblnDone) {lfisInput = new FileInputStream(lfileSource).getChannel();lfosOutput = new FileOutputStream(lfileTarget).getChannel();try {int maxCount = (mbCount * 1024 * 1024) - (32 * 1024);long size = lfisInput.size();long position = 0;while (position < size) {position += lfisInput.transferTo(position, maxCount, lfosOutput);}lblnDone = true;} catch (IOException lioXcp) {getLog().warn(lioXcp);if (lioXcp.getMessage().contains(""Insufficient system resources exist to complete the requested servic"")) {mbCount--;getLog().debug(""Dropped resource count down to ["" + mbCount + ""]"");if (mbCount == 0) {lblnDone = true;}if (lfisInput != null) {lfisInput.close();}if (lfosOutput != null) {lfosOutput.close();}} else {throw lioXcp;}}}} finally {if (lfisInput != null) {lfisInput.close();}if (lfosOutput != null) {lfosOutput.close();}}}}public static void writeInputStreamToFile(final InputStream stream, final File target) {long size = 0;FileOutputStream fileOut;try {fileOut = new FileOutputStream(target);size = IOUtils.copyLarge(stream, fileOut);} catch (FileNotFoundException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}if (log.isInfoEnabled()) {log.info(""Wrote "" + size + "" bytes to "" + target.getAbsolutePath());} else {System.out.println(""Wrote "" + size + "" bytes to "" + target.getAbsolutePath());}}public static long writeInputStreamToOutputStream(final InputStream in, final OutputStream out) {long size = 0;try {size = IOUtils.copyLarge(in, out);} catch (IOException e1) {e1.printStackTrace();}return size;}@Testpublic void testExactCopySize() throws IOException {final int size = Byte.SIZE + RANDOMIZER.nextInt(TEST_DATA.length - Long.SIZE);final InputStream in = new ByteArrayInputStream(TEST_DATA);final ByteArrayOutputStream out = new ByteArrayOutputStream(size);final int cpySize = ExtraIOUtils.copy(in, out, size);assertEquals(""Mismatched copy size"", size, cpySize);final byte[] subArray = ArrayUtils.subarray(TEST_DATA, 0, size), outArray = out.toByteArray();assertArrayEquals(""Mismatched data"", subArray, outArray);}@Testpublic void testCopyOverSize() throws IOException {final InputStream in = new ByteArrayInputStream(TEST_DATA);final ByteArrayOutputStream out = new ByteArrayOutputStream(TEST_DATA.length);final int cpySize = ExtraIOUtils.copy(in, out, TEST_DATA.length + Long.SIZE);assertEquals(""Mismatched copy size"", TEST_DATA.length, cpySize);final byte[] outArray = out.toByteArray();assertArrayEquals(""Mismatched data"", TEST_DATA, outArray);}@Testpublic void testCopyUnknownSize() throws IOException {final InputStream in = new ByteArrayInputStream(TEST_DATA);final ByteArrayOutputStream out = new ByteArrayOutputStream(TEST_DATA.length);final int cpySize = ExtraIOUtils.copy(in, out, (-1));assertEquals(""Mismatched copy size"", TEST_DATA.length, cpySize);final byte[] outArray = out.toByteArray();assertArrayEquals(""Mismatched data"", TEST_DATA, outArray);}"	5
"private static URL handleRedirectUrl(URL url) {try {URLConnection cn = url.openConnection();Utils.setHeader(cn);if (!(cn instanceof HttpURLConnection)) {return url;}HttpURLConnection hcn = (HttpURLConnection) cn;hcn.setInstanceFollowRedirects(false);int resCode = hcn.getResponseCode();if (resCode == 200) {System.out.println(""URL: "" + url);return url;}String location = hcn.getHeaderField(""Location"");hcn.disconnect();return handleRedirectUrl(new URL(location.replace("" "", ""%20"")));} catch (IOException e) {e.printStackTrace();}return url;}@SuppressWarnings(""unchecked"")public static <T> List<T> getServices(String service) {String serviceUri = ""META-INF/services/"" + service;ClassLoader loader = Thread.currentThread().getContextClassLoader();try {Enumeration<URL> urls = loader.getResources(serviceUri);if (urls.hasMoreElements()) {List<T> services = new ArrayList<T>(1);Set<String> keys = new HashSet<String>(20);do {URL url = urls.nextElement();if (_LOG.isLoggable(Level.FINEST)) {_LOG.finest(""Processing: "" + url);}try {BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));try {while (true) {String line = in.readLine();if (line == null) break;String className = _parseLine(line);if (className != null && keys.add(className)) {T instance = (T) _getClass(loader, className);services.add(instance);}}} finally {in.close();}} catch (Exception e) {if (_LOG.isLoggable(Level.WARNING)) {_LOG.log(Level.WARNING, ""Error parsing URL: "" + url, e);}}} while (urls.hasMoreElements());if (services.size() == 1) return Collections.singletonList(services.get(0));return Collections.unmodifiableList(services);}} catch (IOException e) {if (_LOG.isLoggable(Level.SEVERE)) {_LOG.log(Level.SEVERE, ""Error loading Resource: "" + serviceUri, e);}}return Collections.emptyList();}private static JvUndoableTableModel CSVReader(String filepath) throws IOException {try {URI url = new URI(filepath);return CSVReader(url.toURL().openStream());} catch (URISyntaxException ex) {File file = new File(filepath);return CSVReader(file);}}@Overridepublic void run() {String src = null;try {src = File.readText(srcFile);if (Char.isValidate(src)) {java.net.URL url = new java.net.URL(ConsEnv.HOMEPAGE + ""code/code0001.ashx"");java.util.HashMap<String, String> params = new java.util.HashMap<String, String>();String ext = File.getExtension(srcFile.getName());if (Char.isValidate(ext) && ext.charAt(0) == '.') {ext = ext.substring(1);}params.put(""l"", ext);params.put(""i"", ""1"");params.put(""n"", ck_LineNbr.isSelected() ? ""1"" : ""0"");params.put(""u"", ck_LinkUri.isSelected() ? ""1"" : ""0"");params.put(""t"", cb_TagStyle.getSelectedItem() + """");String tab = tf_TabCount.getText().trim();if (java.util.regex.Pattern.matches(""^\\d+$"", tab)) {tab = ""4"";}params.put(""s"", tab);params.put(""o"", ""html"");params.put(""c"", src);java.net.HttpURLConnection con = (java.net.HttpURLConnection) url.openConnection();java.io.InputStream stream = Http.post(con, params);ep_CodeView.setContentType(con.getContentType());src = File.readText(stream);stream.close();con.disconnect();java.io.File tmpFile = java.io.File.createTempFile(""src_"", "".html"");tmpFile.deleteOnExit();File.saveText(tmpFile, src);ep_CodeView.setPage(tmpFile.toURI().toURL());ep_CodeView.setFont(ep_CodeView.getFont().deriveFont(20f));}} catch (Exception exp) {Logs.exception(exp);}}@Overridepublic int write(FileStatus.FileTrackingStatus fileStatus, InputStream input, PostWriteAction postWriteAction) throws WriterException, InterruptedException {String key = logFileNameExtractor.getFileName(fileStatus);int wasWritten = 0;FileOutputStreamPool fileOutputStreamPool = fileOutputStreamPoolFactory.getPoolForKey(key);RollBackOutputStream outputStream = null;File file = null;try {file = getOutputFile(key);lastWrittenFile = file;outputStream = fileOutputStreamPool.open(key, compressionCodec, file, true);outputStream.mark();wasWritten = IOUtils.copy(input, outputStream);if (postWriteAction != null) {postWriteAction.run(wasWritten);}} catch (Throwable t) {LOG.error(t.toString(), t);if (outputStream != null && wasWritten > 0) {LOG.error(""Rolling back file "" + file.getAbsolutePath());try {outputStream.rollback();} catch (IOException e) {throwException(e);} catch (InterruptedException e) {throw e;}}throwException(t);} finally {try {fileOutputStreamPool.releaseFile(key);} catch (IOException e) {throwException(e);}}return wasWritten;}public String stringOfUrl(String addr) throws IOException {ByteArrayOutputStream output = new ByteArrayOutputStream();URL url = new URL(addr);IOUtils.copy(url.openStream(), output);return output.toString();}public static void refresh() {URL[] urls = Constants.Wiki2xhtml.getUpdateURLs();content.setLength(0);InputStream is = null;BufferedReader br = null;for (int i = 0; i < urls.length; i++) {try {is = urls[i].openStream();br = new BufferedReader(new InputStreamReader(is));String s;while ((s = br.readLine()) != null) {if (s.length() == 0) continue;if (s.startsWith(""--"")) break;content.append(s + '\n');}is.close();break;} catch (FileNotFoundException e) {System.err.println(""File not found: "" + urls[i].getHost() + urls[i].getPath());} catch (IOException e) {System.err.println(""Error: "" + e.getMessage());}}}private void fileCopy(final File src, final File dest) throws IOException {final FileChannel srcChannel = new FileInputStream(src).getChannel();final FileChannel dstChannel = new FileOutputStream(dest).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}"	5
"public static Set<Province> getProvincias(String pURL) {Set<Province> result = new HashSet<Province>();String iniProv = ""<prov>"";String finProv = ""</prov>"";String iniNomProv = ""<np>"";String finNomProv = ""</np>"";String iniCodigo = ""<cpine>"";String finCodigo = ""</cpine>"";int ini, fin;try {URL url = new URL(pURL);BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));String str;Province provincia;while ((str = br.readLine()) != null) {if (str.contains(iniProv)) {provincia = new Province();while ((str = br.readLine()) != null && !str.contains(finProv)) {if (str.contains(iniNomProv)) {ini = str.indexOf(iniNomProv) + iniNomProv.length();fin = str.indexOf(finNomProv);provincia.setDescription(str.substring(ini, fin));}if (str.contains(iniCodigo)) {ini = str.indexOf(iniCodigo) + iniCodigo.length();fin = str.indexOf(finCodigo);provincia.setCodeProvince(Integer.parseInt(str.substring(ini, fin)));}}result.add(provincia);}}br.close();} catch (Exception e) {System.err.println(e);}return result;}public static Set<Municipality> getMunicipios(String pURL) {Set<Municipality> result = new HashSet<Municipality>();String iniCuerr = ""<cuerr>"";String finCuerr = ""</cuerr>"";String iniDesErr = ""<des>"";String finDesErr = ""</des>"";String iniMun = ""<muni>"";String finMun = ""</muni>"";String iniNomMun = ""<nm>"";String finNomMun = ""</nm>"";String iniCarto = ""<carto>"";String iniCodDelMEH = ""<cd>"";String finCodDelMEH = ""</cd>"";String iniCodMunMEH = ""<cmc>"";String finCodMunMEH = ""</cmc>"";String iniCodProvINE = ""<cp>"";String finCodProvINE = ""</cp>"";String iniCodMunINE = ""<cm>"";String finCodMunINE = ""</cm>"";boolean error = false;int ini, fin;try {URL url = new URL(pURL);BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));String str;Municipality municipio;while ((str = br.readLine()) != null) {if (str.contains(iniCuerr)) {ini = str.indexOf(iniCuerr) + iniCuerr.length();fin = str.indexOf(finCuerr);if (Integer.parseInt(str.substring(ini, fin)) > 0) error = true;}if (error) {if (str.contains(iniDesErr)) {ini = str.indexOf(iniDesErr) + iniDesErr.length();fin = str.indexOf(finDesErr);throw (new Exception(str.substring(ini, fin)));}} else {if (str.contains(iniMun)) {municipio = new Municipality();municipio.setCodemunicipalityine(0);municipio.setCodemunicipalitydgc(0);while ((str = br.readLine()) != null && !str.contains(finMun)) {if (str.contains(iniNomMun)) {ini = str.indexOf(iniNomMun) + iniNomMun.length();fin = str.indexOf(finNomMun);municipio.setMuniName(str.substring(ini, fin).trim());}if (str.contains(iniCarto)) {if (str.contains(""URBANA"")) municipio.setIsurban(true);if (str.contains(""RUSTICA"")) municipio.setIsrustic(true);}if (str.contains(iniCodDelMEH)) {ini = str.indexOf(iniCodDelMEH) + iniCodDelMEH.length();fin = str.indexOf(finCodDelMEH);municipio.setCodemunicipalitydgc(municipio.getCodemunicipalitydgc() + Integer.parseInt(str.substring(ini, fin)) * 1000);}if (str.contains(iniCodMunMEH)) {ini = str.indexOf(iniCodMunMEH) + iniCodMunMEH.length();fin = str.indexOf(finCodMunMEH);municipio.setCodemunicipalitydgc(municipio.getCodemunicipalitydgc() + Integer.parseInt(str.substring(ini, fin)));}if (str.contains(iniCodProvINE)) {ini = str.indexOf(iniCodProvINE) + iniCodProvINE.length();fin = str.indexOf(finCodProvINE);municipio.setCodemunicipalityine(municipio.getCodemunicipalityine() + Integer.parseInt(str.substring(ini, fin)) * 1000);}if (str.contains(iniCodMunINE)) {ini = str.indexOf(iniCodMunINE) + iniCodMunINE.length();fin = str.indexOf(finCodMunINE);municipio.setCodemunicipalityine(municipio.getCodemunicipalityine() + Integer.parseInt(str.substring(ini, fin)));}municipio.setDescription();}result.add(municipio);}}}br.close();} catch (Exception e) {System.err.println(e);}return result;}public static Set<Street> getVias(String pURL) {Set<Street> result = new HashSet<Street>();String iniCuerr = ""<cuerr>"";String finCuerr = ""</cuerr>"";String iniDesErr = ""<des>"";String finDesErr = ""</des>"";String iniVia = ""<calle>"";String finVia = ""</calle>"";String iniCodVia = ""<cv>"";String finCodVia = ""</cv>"";String iniTipoVia = ""<tv>"";String finTipoVia = ""</tv>"";String iniNomVia = ""<nv>"";String finNomVia = ""</nv>"";boolean error = false;int ini, fin;try {URL url = new URL(pURL);BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));String str;Street via;while ((str = br.readLine()) != null) {if (str.contains(iniCuerr)) {ini = str.indexOf(iniCuerr) + iniCuerr.length();fin = str.indexOf(finCuerr);if (Integer.parseInt(str.substring(ini, fin)) > 0) error = true;}if (error) {if (str.contains(iniDesErr)) {ini = str.indexOf(iniDesErr) + iniDesErr.length();fin = str.indexOf(finDesErr);throw (new Exception(str.substring(ini, fin)));}} else {if (str.contains(iniVia)) {via = new Street();while ((str = br.readLine()) != null && !str.contains(finVia)) {if (str.contains(iniCodVia)) {ini = str.indexOf(iniCodVia) + iniCodVia.length();fin = str.indexOf(finCodVia);via.setCodeStreet(Integer.parseInt(str.substring(ini, fin)));}if (str.contains(iniTipoVia)) {TypeStreet tipo = new TypeStreet();if (!str.contains(finTipoVia)) tipo.setCodetpStreet(""""); else {ini = str.indexOf(iniTipoVia) + iniTipoVia.length();fin = str.indexOf(finTipoVia);tipo.setCodetpStreet(str.substring(ini, fin));}tipo.setDescription(getDescripcionTipoVia(tipo.getCodetpStreet()));via.setTypeStreet(tipo);}if (str.contains(iniNomVia)) {ini = str.indexOf(iniNomVia) + iniNomVia.length();fin = str.indexOf(finNomVia);via.setStreetName(str.substring(ini, fin).trim());}}result.add(via);}}}br.close();} catch (Exception e) {System.err.println(e);}return result;}public static Set<Address> getDatosCatastrales(String pURL) {Set<Address> result = new HashSet<Address>();String iniCuerr = ""<cuerr>"";String finCuerr = ""</cuerr>"";String iniDesErr = ""<des>"";String finDesErr = ""</des>"";String iniInm1 = ""<rcdnp>"";String finInm1 = ""</rcdnp>"";String iniInm2 = ""<bi>"";String finInm2 = ""</bi>"";String iniPC1 = ""<pc1>"";String iniPC2 = ""<pc2>"";String finPC1 = ""</pc1>"";String finPC2 = ""</pc2>"";String iniCar = ""<car>"";String finCar = ""</car>"";String iniCC1 = ""<cc1>"";String finCC1 = ""</cc1>"";String iniCC2 = ""<cc2>"";String finCC2 = ""</cc2>"";String iniLDT = ""<ldt>"";String iniBq = ""<bq>"";String finBq = ""</bq>"";String iniEs = ""<es>"";String finEs = ""</es>"";String iniPt = ""<pt>"";String finPt = ""</pt>"";String iniPu = ""<pu>"";String finPu = ""</pu>"";boolean error = false;int ini, fin;int postal = 0;try {URL url = new URL(pURL);BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));String str;while ((str = br.readLine()) != null) {if (str.contains(iniCuerr)) {ini = str.indexOf(iniCuerr) + iniCuerr.length();fin = str.indexOf(finCuerr);if (Integer.parseInt(str.substring(ini, fin)) > 0) error = true;}if (error) {if (str.contains(iniDesErr)) {ini = str.indexOf(iniDesErr) + iniDesErr.length();fin = str.indexOf(finDesErr);throw (new Exception(str.substring(ini, fin)));}} else {if (str.contains(iniInm1) || str.contains(iniInm2)) {Address inmueble = new Address();while ((str = br.readLine()) != null && !str.contains(finInm1) && !str.contains(finInm2)) {if (str.contains(iniPC1) && str.contains(finPC1)) {ini = str.indexOf(iniPC1) + iniPC1.length();fin = str.indexOf(finPC1);inmueble.setDescription(str.substring(ini, fin));}if (str.contains(iniPC2) && str.contains(finPC2)) {ini = str.indexOf(iniPC2) + iniPC2.length();fin = str.indexOf(finPC2);inmueble.setDescription(inmueble.getDescription().concat(str.substring(ini, fin)));}if (str.contains(iniLDT) && str.contains(""-"")) {postal = Integer.parseInt(str.substring(str.lastIndexOf(""-"") - 5, str.lastIndexOf(""-"")));}if (str.contains(iniCar) && str.contains(finCar)) {ini = str.indexOf(iniCar) + iniCar.length();fin = str.indexOf(finCar);inmueble.setDescription(inmueble.getDescription().concat(str.substring(ini, fin)));}if (str.contains(iniCC1) && str.contains(finCC1)) {ini = str.indexOf(iniCC1) + iniCC1.length();fin = str.indexOf(finCC1);inmueble.setDescription(inmueble.getDescription().concat(str.substring(ini, fin)));}if (str.contains(iniCC2) && str.contains(finCC2)) {ini = str.indexOf(iniCC2) + iniCC2.length();fin = str.indexOf(finCC2);inmueble.setDescription(inmueble.getDescription().concat(str.substring(ini, fin)));}if (str.contains(iniBq) && str.contains(finBq)) {ini = str.indexOf(iniBq) + iniBq.length();fin = str.indexOf(finBq);inmueble.setBlock(str.substring(ini, fin));}if (str.contains(iniEs) && str.contains(finEs)) {ini = str.indexOf(iniEs) + iniEs.length();fin = str.indexOf(finEs);inmueble.setStairs(str.substring(ini, fin));}if (str.contains(iniPt) && str.contains(finPt)) {ini = str.indexOf(iniPt) + iniPt.length();fin = str.indexOf(finPt);inmueble.setFloor(str.substring(ini, fin));}if (str.contains(iniPu) && str.contains(finPu)) {ini = str.indexOf(iniPu) + iniPu.length();fin = str.indexOf(finPu);inmueble.setDoor(str.substring(ini, fin));}}result.add(inmueble);}}}br.close();if (result.size() == 1) {Object ad[] = result.toArray();Coordinate coord = ConversorCoordenadas.getCoordenadas(((Address) ad[0]).getDescription());coord.setPostcode(postal);for (Address inm : result) inm.setCoodinate(coord);}} catch (Exception e) {System.err.println(e);}return result;}public static String hash(String str) {if (str == null || str.length() == 0) {throw new CaptureSecurityException(""String to encript cannot be null or zero length"");}StringBuilder hexString = new StringBuilder();try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(str.getBytes());byte[] hash = md.digest();for (byte element : hash) {if ((0xff & element) < 0x10) {hexString.append('0').append(Integer.toHexString((0xFF & element)));} else {hexString.append(Integer.toHexString(0xFF & element));}}} catch (NoSuchAlgorithmException e) {throw new CaptureSecurityException(e);}return hexString.toString();}public final void navigate(final URL url) {try {EncogLogging.log(EncogLogging.LEVEL_INFO, ""Navigating to page:"" + url);final URLConnection connection = url.openConnection();final InputStream is = connection.getInputStream();navigate(url, is);is.close();} catch (final IOException e) {EncogLogging.log(EncogLogging.LEVEL_ERROR, e);throw new BrowseError(e);}}public static Image getPluginImage(Object plugin, String name) {try {try {URL url = getPluginImageURL(plugin, name);if (m_URLImageMap.containsKey(url)) return m_URLImageMap.get(url);InputStream is = url.openStream();Image image;try {image = getImage(is);m_URLImageMap.put(url, image);} finally {is.close();}return image;} catch (Throwable e) {}} catch (Throwable e) {}return null;}public static String calculatesMD5(String plainText) throws NoSuchAlgorithmException {MessageDigest mdAlgorithm = MessageDigest.getInstance(""MD5"");mdAlgorithm.update(plainText.getBytes());byte[] digest = mdAlgorithm.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < digest.length; i++) {plainText = Integer.toHexString(0xFF & digest[i]);if (plainText.length() < 2) {plainText = ""0"" + plainText;}hexString.append(plainText);}return hexString.toString();}public String[] getLine(String prefecture) {HttpClient httpclient = null;String[] lines = null;try {httpclient = new DefaultHttpClient();List<NameValuePair> qparams = new ArrayList<NameValuePair>();qparams.add(new BasicNameValuePair(""method"", ""getLines""));qparams.add(new BasicNameValuePair(""prefecture"", prefecture));URI uri = URIUtils.createURI(""http"", ""express.heartrails.com"", -1, ""/api/xml"", URLEncodedUtils.format(qparams, ""UTF-8""), null);HttpGet httpget = new HttpGet(uri);HttpResponse response = httpclient.execute(httpget);HttpEntity entity = response.getEntity();InputStream instream = entity.getContent();BufferedReader reader = new BufferedReader(new InputStreamReader(instream, ""UTF-8""));StringBuffer buf = new StringBuffer();String str;while ((str = reader.readLine()) != null) {buf.append(str);buf.append(""\n"");}reader.close();LineResponse res = new LineResponse(buf.toString());lines = res.getLineAsString();} catch (URISyntaxException ex) {ex.printStackTrace();} catch (ClientProtocolException ex) {ex.printStackTrace();} catch (IOException ex) {ex.printStackTrace();} catch (SAXException ex) {ex.printStackTrace();} catch (ParserConfigurationException ex) {ex.printStackTrace();} finally {httpclient.getConnectionManager().shutdown();}return lines;}public void getStation(String prefecture, String line) {HttpClient httpclient = null;try {httpclient = new DefaultHttpClient();List<NameValuePair> qparams = new ArrayList<NameValuePair>();qparams.add(new BasicNameValuePair(""method"", ""getStations""));qparams.add(new BasicNameValuePair(""prefecture"", prefecture));qparams.add(new BasicNameValuePair(""line"", line));URI uri = URIUtils.createURI(""http"", ""express.heartrails.com"", -1, ""/api/xml"", URLEncodedUtils.format(qparams, ""UTF-8""), null);HttpGet httpget = new HttpGet(uri);HttpResponse response = httpclient.execute(httpget);HttpEntity entity = response.getEntity();InputStream instream = entity.getContent();BufferedReader reader = new BufferedReader(new InputStreamReader(instream, ""UTF-8""));StringBuffer buf = new StringBuffer();String str;while ((str = reader.readLine()) != null) {buf.append(str);buf.append(""\n"");}reader.close();stationRes = new StationResponse(buf.toString());} catch (URISyntaxException ex) {ex.printStackTrace();} catch (ClientProtocolException ex) {ex.printStackTrace();} catch (IOException ex) {ex.printStackTrace();} catch (SAXException ex) {ex.printStackTrace();} catch (ParserConfigurationException ex) {ex.printStackTrace();} finally {mSearchStation.setEnabled(true);}}"	5
"public static void copyFile(File srcFile, File destFile) throws IOException {if (!(srcFile.exists() && srcFile.isFile())) throw new IllegalArgumentException(""Source file doesn't exist: "" + srcFile.getAbsolutePath());if (destFile.exists() && destFile.isDirectory()) throw new IllegalArgumentException(""Destination file is directory: "" + destFile.getAbsolutePath());FileInputStream in = new FileInputStream(srcFile);FileOutputStream out = new FileOutputStream(destFile);byte[] buffer = new byte[4096];int no = 0;try {while ((no = in.read(buffer)) != -1) out.write(buffer, 0, no);} finally {in.close();out.close();}}public static void transfer(FileInputStream fileInStream, FileOutputStream fileOutStream) throws IOException {FileChannel fileInChannel = fileInStream.getChannel();FileChannel fileOutChannel = fileOutStream.getChannel();long fileInSize = fileInChannel.size();try {long transferred = fileInChannel.transferTo(0, fileInSize, fileOutChannel);if (transferred != fileInSize) {throw new IOException(""transfer() did not complete"");}} finally {ensureClose(fileInChannel, fileOutChannel);}}public ArrayList parseFile(File newfile) throws IOException {String s;String firstName;String header;String name = null;Integer PVLoggerID = new Integer(0);String[] tokens;int nvalues = 0;double num1, num2, num3;double xoffset = 1.0;double xdelta = 1.0;double yoffset = 1.0;double ydelta = 1.0;double zoffset = 1.0;double zdelta = 1.0;boolean readfit = false;boolean readraw = false;boolean zerodata = false;boolean baddata = false;boolean harpdata = false;ArrayList fitparams = new ArrayList();ArrayList xraw = new ArrayList();ArrayList yraw = new ArrayList();ArrayList zraw = new ArrayList();ArrayList sraw = new ArrayList();ArrayList sxraw = new ArrayList();ArrayList syraw = new ArrayList();ArrayList szraw = new ArrayList();URL url = newfile.toURI().toURL();InputStream is = url.openStream();InputStreamReader isr = new InputStreamReader(is);BufferedReader br = new BufferedReader(isr);while ((s = br.readLine()) != null) {tokens = s.split(""\\s+"");nvalues = tokens.length;firstName = (String) tokens[0];if (((String) tokens[0]).length() == 0) {readraw = false;readfit = false;continue;}if ((nvalues == 4) && (!firstName.startsWith(""---""))) {if ((Double.parseDouble(tokens[1]) == 0.) && (Double.parseDouble(tokens[2]) == 0.) && (Double.parseDouble(tokens[3]) == 0.)) {zerodata = true;} else {zerodata = false;}if (tokens[1].equals(""NaN"") || tokens[2].equals(""NaN"") || tokens[3].equals(""NaN"")) {baddata = true;} else {baddata = false;}}if (firstName.startsWith(""start"")) {header = s;}if (firstName.indexOf(""WS"") > 0) {if (name != null) {dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw);}name = tokens[0];readraw = false;readfit = false;zerodata = false;baddata = false;harpdata = false;fitparams.clear();xraw.clear();yraw.clear();zraw.clear();sraw.clear();sxraw.clear();syraw.clear();szraw.clear();}if (firstName.startsWith(""Area"")) ;if (firstName.startsWith(""Ampl"")) ;if (firstName.startsWith(""Mean"")) ;if (firstName.startsWith(""Sigma"")) {fitparams.add(new Double(Double.parseDouble(tokens[3])));fitparams.add(new Double(Double.parseDouble(tokens[1])));fitparams.add(new Double(Double.parseDouble(tokens[5])));}if (firstName.startsWith(""Offset"")) ;if (firstName.startsWith(""Slope"")) ;if ((firstName.equals(""Position"")) && (((String) tokens[2]).equals(""Raw""))) {readraw = true;continue;}if ((firstName.equals(""Position"")) && (((String) tokens[2]).equals(""Fit""))) {readfit = true;continue;}if ((firstName.contains(""Harp""))) {xraw.clear();yraw.clear();zraw.clear();sraw.clear();sxraw.clear();syraw.clear();szraw.clear();harpdata = true;readraw = true;name = tokens[0];continue;}if (firstName.startsWith(""---"")) continue;if (harpdata == true) {if (((String) tokens[0]).length() != 0) {if (firstName.startsWith(""PVLogger"")) {try {PVLoggerID = new Integer(Integer.parseInt(tokens[2]));} catch (NumberFormatException e) {}} else {sxraw.add(new Double(Double.parseDouble(tokens[0])));xraw.add(new Double(Double.parseDouble(tokens[1])));syraw.add(new Double(Double.parseDouble(tokens[2])));yraw.add(new Double(Double.parseDouble(tokens[3])));szraw.add(new Double(Double.parseDouble(tokens[4])));zraw.add(new Double(Double.parseDouble(tokens[5])));}}continue;}if (readraw && (!zerodata) && (!baddata)) {sraw.add(new Double(Double.parseDouble(tokens[0]) / Math.sqrt(2.0)));sxraw.add(new Double(Double.parseDouble(tokens[0]) / Math.sqrt(2.0)));syraw.add(new Double(Double.parseDouble(tokens[0]) / Math.sqrt(2.0)));szraw.add(new Double(Double.parseDouble(tokens[0])));yraw.add(new Double(Double.parseDouble(tokens[1])));zraw.add(new Double(Double.parseDouble(tokens[2])));xraw.add(new Double(Double.parseDouble(tokens[3])));}if (firstName.startsWith(""PVLogger"")) {try {PVLoggerID = new Integer(Integer.parseInt(tokens[2]));} catch (NumberFormatException e) {}}}dumpData(name, fitparams, sraw, sxraw, syraw, szraw, yraw, zraw, xraw);wiredata.add((Integer) PVLoggerID);return wiredata;}public static void main(String[] args) throws NoSuchAlgorithmException {String password = ""root"";MessageDigest messageDigest = MessageDigest.getInstance(""MD5"");messageDigest.update(password.getBytes());final byte[] digest = messageDigest.digest();final StringBuilder buf = new StringBuilder(digest.length * 2);for (int j = 0; j < digest.length; j++) {buf.append(HEX_DIGITS[(digest[j] >> 4) & 0x0f]);buf.append(HEX_DIGITS[digest[j] & 0x0f]);}String pwd = buf.toString();System.out.println(pwd);}private void doPost(String request) throws IOException {URL url = new URL(""http://localhost:8080/exist/rest"" + DBBroker.ROOT_COLLECTION);HttpURLConnection connect = (HttpURLConnection) url.openConnection();connect.setRequestMethod(""POST"");connect.setDoOutput(true);OutputStream os = connect.getOutputStream();os.write(request.getBytes(""UTF-8""));connect.connect();BufferedReader is = new BufferedReader(new InputStreamReader(connect.getInputStream()));String line;while ((line = is.readLine()) != null) System.out.println(line);}private String calculateMD5(String value) {String finalString;try {MessageDigest md5Alg = MessageDigest.getInstance(""MD5"");md5Alg.reset();md5Alg.update(value.getBytes());byte messageDigest[] = md5Alg.digest();StringBuilder hexString = new StringBuilder(256);for (int i = 0; i < messageDigest.length; i++) {String hex = Integer.toHexString(0xFF & messageDigest[i]);if (hex.length() == 1) {hexString.append('0');}hexString.append(hex);}finalString = hexString.toString();} catch (NoSuchAlgorithmException exc) {throw new RuntimeException(""Hashing error happened:"", exc);}return finalString;}private void update() {if (VERSION.contains(""dev"")) return;System.out.println(updateURL_s);try {URL updateURL = new URL(updateURL_s);InputStream uis = updateURL.openStream();InputStreamReader uisr = new InputStreamReader(uis);BufferedReader ubr = new BufferedReader(uisr);String header = ubr.readLine();if (header.equals(""GENREMANUPDATEPAGE"")) {String cver = ubr.readLine();String cdl = ubr.readLine();if (!cver.equals(VERSION)) {System.out.println(""Update available!"");int i = JOptionPane.showConfirmDialog(this, Language.get(""UPDATE_AVAILABLE_MSG"").replaceAll(""%o"", VERSION).replaceAll(""%c"", cver), Language.get(""UPDATE_AVAILABLE_TITLE""), JOptionPane.YES_NO_OPTION);if (i == 0) {URL url = new URL(cdl);HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.connect();if (connection.getResponseCode() / 100 != 2) {throw new Exception(""Server error! Response code: "" + connection.getResponseCode());}int contentLength = connection.getContentLength();if (contentLength < 1) {throw new Exception(""Invalid content length!"");}int size = contentLength;File tempfile = File.createTempFile(""genreman_update"", "".zip"");tempfile.deleteOnExit();RandomAccessFile file = new RandomAccessFile(tempfile, ""rw"");InputStream stream = connection.getInputStream();int downloaded = 0;ProgressWindow pwin = new ProgressWindow(this, ""Downloading"");pwin.setVisible(true);pwin.setProgress(0);pwin.setText(""Connecting..."");while (downloaded < size) {byte buffer[];if (size - downloaded > 1024) {buffer = new byte[1024];} else {buffer = new byte[size - downloaded];}int read = stream.read(buffer);if (read == -1) break;file.write(buffer, 0, read);downloaded += read;pwin.setProgress(downloaded / size);}file.close();System.out.println(""Downloaded file to "" + tempfile.getAbsolutePath());pwin.setVisible(false);pwin.dispose();pwin = null;ZipInputStream zin = new ZipInputStream(new FileInputStream(tempfile));ZipEntry entry;while ((entry = zin.getNextEntry()) != null) {File outf = new File(entry.getName());System.out.println(outf.getAbsoluteFile());if (outf.exists()) outf.delete();OutputStream out = new FileOutputStream(outf);byte[] buf = new byte[1024];int len;while ((len = zin.read(buf)) > 0) {out.write(buf, 0, len);}out.close();}JOptionPane.showMessageDialog(this, Language.get(""UPDATE_SUCCESS_MSG""), Language.get(""UPDATE_SUCCESS_TITLE""), JOptionPane.INFORMATION_MESSAGE);setVisible(false);if (System.getProperty(""os.name"").indexOf(""Windows"") != -1) {Runtime.getRuntime().exec(""iTunesGenreArtManager.exe"");} else {Runtime.getRuntime().exec(""java -jar \""iTunes Genre Art Manager.app/Contents/Resources/Java/iTunes_Genre_Art_Manager.jar\"""");}System.exit(0);} else {}}ubr.close();uisr.close();uis.close();} else {while (ubr.ready()) {System.out.println(ubr.readLine());}ubr.close();uisr.close();uis.close();throw new Exception(""Update page had invalid header: "" + header);}} catch (Exception ex) {JOptionPane.showMessageDialog(this, Language.get(""UPDATE_ERROR_MSG""), Language.get(""UPDATE_ERROR_TITLE""), JOptionPane.ERROR_MESSAGE);ex.printStackTrace();}}public static void copyFile(File in, File out) throws IOException {FileChannel inChannel = new FileInputStream(in).getChannel();FileChannel outChannel = new FileOutputStream(out).getChannel();try {inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {throw e;} finally {if (inChannel != null) inChannel.close();if (outChannel != null) outChannel.close();}}private String sendQuery(String query) {File xmlServerResponse = null;String serverResponse = """";try {long start = Calendar.getInstance().getTimeInMillis();System.out.println(""\n\n++++++++++++++++++++++++++++++++++++++++++++++++++++"");System.out.println(""consulta de busqueda -> "" + query);URL url = new URL(query);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String line = """";while ((line = in.readLine()) != null) {serverResponse += line;}long ahora = (Calendar.getInstance().getTimeInMillis() - start);System.out.println("" Tiempo transcurrido en la consulta (en milesimas) -> "" + ahora);System.out.println(""++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n"");} catch (IOException e) {e.printStackTrace();}return serverResponse;}@Overrideprotected String doWget(final URL url, final boolean post, final boolean ignore, final String... post_data) throws Exception {String msg = """";InputStream in = null;OutputStream out = null;String data = null;try {final URLConnection urlcon = url.openConnection();if (post) {boolean key = false;for (final String s : post_data) {msg += URLEncoder.encode(s, ""UTF-8"");if (key = !key) {msg += ""="";} else {msg += ""&"";}}urlcon.setDoOutput(true);out = urlcon.getOutputStream();out.write(msg.getBytes());}in = urlcon.getInputStream();data = ignore ? null : """";int len;final byte[] buffer = new byte[1023];while ((len = in.read(buffer)) >= 0) {if (!ignore) {data += new String(buffer, 0, len);}}if (LogHelper.isLogLevelEnabled(LogLevel.DEBUG, DefaultCommunicationHelper.class)) {LogHelper.log(DefaultCommunicationHelper.class, LogLevel.DEBUG, ""WGET= URL["" + url.toString() + ""?"" + msg + ""] RETURN["" + data + ""]"");}return data;} catch (final Exception ex) {LogHelper.log(DefaultCommunicationHelper.class, LogLevel.WARN, ""An error occurred while submitting "" + msg + "" request to "" + url.toString() + "" with the following data: "" + data, ex);throw ex;} finally {if (in != null) {try {in.close();} catch (final Exception e) {LogHelper.log(DefaultCommunicationHelper.class, LogLevel.DEBUG, ""An error occurred while closing an input stream"", e);}}if (out != null) {try {out.close();} catch (final Exception e) {LogHelper.log(DefaultCommunicationHelper.class, LogLevel.DEBUG, ""An error occurred while closing an output stream"", e);}}}}"	5
"@Overrideprotected Reader openConnection(URL url) throws IOException {try {if (limit != null) {limit.acquirePermit();}return super.openConnection(url);} catch (InterruptedException e) {throw new IOException(e);}}public AssessmentItemType getAssessmentItemType(String filename) {if (filename.contains("" "") && (System.getProperty(""os.name"").contains(""Windows""))) {File source = new File(filename);String tempDir = System.getenv(""TEMP"");File dest = new File(tempDir + ""/temp.xml"");MQMain.logger.info(""Importing from "" + dest.getAbsolutePath());FileChannel in = null, out = null;try {in = new FileInputStream(source).getChannel();out = new FileOutputStream(dest).getChannel();long size = in.size();MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buf);} catch (Exception e) {e.printStackTrace();} finally {if (in != null) try {in.close();} catch (IOException e) {e.printStackTrace();}if (out != null) try {out.close();} catch (IOException e) {e.printStackTrace();}filename = tempDir + ""/temp.xml"";}}AssessmentItemType assessmentItemType = null;JAXBElement<?> jaxbe = null;try {XMLReader reader = XMLReaderFactory.createXMLReader();ChangeNamespace convertfromv2p0tov2p1 = new ChangeNamespace(reader, ""http://www.imsglobal.org/xsd/imsqti_v2p0"", ""http://www.imsglobal.org/xsd/imsqti_v2p1"");SAXSource source = null;try {FileInputStream fis = new FileInputStream(filename);InputStreamReader isr = null;try {isr = new InputStreamReader(fis, ""UTF-8"");} catch (UnsupportedEncodingException e) {}InputSource is = new InputSource(isr);source = new SAXSource(convertfromv2p0tov2p1, is);} catch (FileNotFoundException e) {MQMain.logger.error(""SAX/getAssessmentItemType/file not found"");}jaxbe = (JAXBElement<?>) MQModel.qtiCf.unmarshal(MQModel.imsqtiUnmarshaller, source);assessmentItemType = (AssessmentItemType) jaxbe.getValue();} catch (JAXBException e) {MQMain.logger.error(""JAX/getAssessmentItemType"", e);} catch (SAXException e) {MQMain.logger.error(""SAX/getAssessmentItemType"", e);}return assessmentItemType;}public final int wordFrequency(String word) {String replWebQuery = webQuery.replaceFirst(""WORDREPLACE"", word);try {URL url = new URL(replWebQuery);String content = url.toString();BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String inputLine;while ((inputLine = in.readLine()) != null) {if (inputLine.matches(nrResultsPattern)) {int fr = matchedLine(inputLine);if (fr >= 0) {return fr;}}}} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return 0;}public void store(Component component, String componentName, int currentPilot) {try {PreparedStatement psta = jdbc.prepareStatement(""UPDATE component_prop "" + ""SET size_height = ?, size_width = ?, pos_x = ?, pos_y = ? "" + ""WHERE pilot_id = ? "" + ""AND component_name = ?"");psta.setInt(1, component.getHeight());psta.setInt(2, component.getWidth());Point point = component.getLocation();psta.setInt(3, point.x);psta.setInt(4, point.y);psta.setInt(5, currentPilot);psta.setString(6, componentName);int update = psta.executeUpdate();if (update == 0) {psta = jdbc.prepareStatement(""INSERT INTO component_prop "" + ""(size_height, size_width, pos_x, pos_y, pilot_id, component_name) "" + ""VALUES (?,?,?,?,?,?)"");psta.setInt(1, component.getHeight());psta.setInt(2, component.getWidth());psta.setInt(3, point.x);psta.setInt(4, point.y);psta.setInt(5, currentPilot);psta.setString(6, componentName);psta.executeUpdate();}jdbc.commit();} catch (SQLException e) {jdbc.rollback();log.debug(e);}}public void reset(String componentName, int currentPilot) {try {PreparedStatement psta = jdbc.prepareStatement(""DELETE FROM component_prop "" + ""WHERE pilot_id = ? "" + ""AND component_name = ?"");psta.setInt(1, currentPilot);psta.setString(2, componentName);psta.executeUpdate();jdbc.commit();} catch (SQLException e) {jdbc.rollback();log.debug(e);}}public void reset(int currentPilot) {try {PreparedStatement psta = jdbc.prepareStatement(""DELETE FROM component_prop "" + ""WHERE pilot_id = ? "");psta.setInt(1, currentPilot);psta.executeUpdate();jdbc.commit();} catch (SQLException e) {jdbc.rollback();log.debug(e);}}private void Connect() throws NpsException {try {client = new FTPClient();client.connect(host.hostname, host.remoteport);int reply = client.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {client.disconnect();client = null;nps.util.DefaultLog.error_noexception(""FTP Server:"" + host.hostname + ""refused connection."");return;}client.login(host.uname, host.upasswd);client.enterLocalPassiveMode();client.setFileType(FTPClient.BINARY_FILE_TYPE);client.changeWorkingDirectory(host.remotedir);} catch (Exception e) {nps.util.DefaultLog.error(e);}}public void sorter() {String inputLine1, inputLine2;String epiNames[] = new String[1000];String epiEpisodes[] = new String[1000];int lineCounter = 0;try {String pluginDir = pluginInterface.getPluginDirectoryName();String eplist_file = pluginDir + System.getProperty(""file.separator"") + ""EpisodeList.txt"";File episodeList = new File(eplist_file);if (!episodeList.isFile()) {episodeList.createNewFile();}final BufferedReader in = new BufferedReader(new FileReader(episodeList));while ((inputLine1 = in.readLine()) != null) {if ((inputLine2 = in.readLine()) != null) {epiNames[lineCounter] = inputLine1;epiEpisodes[lineCounter] = inputLine2;lineCounter++;}}in.close();int epiLength = epiNames.length;for (int i = 0; i < (lineCounter); i++) {for (int j = 0; j < (lineCounter - 1); j++) {if (epiNames[j].compareToIgnoreCase(epiNames[j + 1]) > 0) {String temp = epiNames[j];epiNames[j] = epiNames[j + 1];epiNames[j + 1] = temp;String temp2 = epiEpisodes[j];epiEpisodes[j] = epiEpisodes[j + 1];epiEpisodes[j + 1] = temp2;}}}File episodeList2 = new File(eplist_file);BufferedWriter bufWriter = new BufferedWriter(new FileWriter(episodeList2));for (int i = 0; i <= lineCounter; i++) {if (epiNames[i] == null) {break;}bufWriter.write(epiNames[i] + ""\n"");bufWriter.write(epiEpisodes[i] + ""\n"");}bufWriter.close();} catch (IOException e) {e.printStackTrace();}}public static String machineInfo() {StringBuilder machineInfo = new StringBuilder();try {Enumeration networkInterfaces = NetworkInterface.getNetworkInterfaces();while (networkInterfaces.hasMoreElements()) {NetworkInterface networkInterface = (NetworkInterface) networkInterfaces.nextElement();if (""eth0"".equals(networkInterface.getDisplayName())) {for (byte b : networkInterface.getHardwareAddress()) {StringTools.appendWithDelimiter(machineInfo, String.format(""%02x"", b).toUpperCase(), "":"");}machineInfo.append(""\n"");break;}}} catch (IOException x) {System.out.println(""LicenseTools.machineInfo: "" + x.getMessage());x.printStackTrace();}if (machineInfo.length() == 0) {return null;}String info = machineInfo.toString();try {MessageDigest messageDigest = MessageDigest.getInstance(""MD5"", ""SUN"");messageDigest.update(info.getBytes());byte[] md5 = messageDigest.digest(info.getBytes());return new String(Base64.encodeBase64(md5));} catch (Exception x) {System.out.println(""LicenseTools.machineInfo: "" + x.getMessage());x.printStackTrace();}return null;}public void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {PrintWriter out = null;ServletOutputStream outstream = null;try {String action = req.getParameter(""nmrshiftdbaction"");String relativepath = ServletUtils.expandRelative(this.getServletConfig(), ""/WEB-INF"");TurbineConfig tc = new TurbineConfig(relativepath + "".."", relativepath + getServletConfig().getInitParameter(""properties""));tc.init();int spectrumId = -1;DBSpectrum spectrum = null;Export export = null;String format = req.getParameter(""format"");if (action.equals(""test"")) {try {res.setContentType(""text/plain"");out = res.getWriter();List l = DBSpectrumPeer.executeQuery(""select SPECTRUM_ID from SPECTRUM limit 1"");if (l.size() > 0) spectrumId = ((Record) l.get(0)).getValue(1).asInt();out.write(""success"");} catch (Exception ex) {out.write(""failure"");}} else if (action.equals(""rss"")) {int numbertoexport = 10;out = res.getWriter();if (req.getParameter(""numbertoexport"") != null) {try {numbertoexport = Integer.parseInt(req.getParameter(""numbertoexport""));if (numbertoexport < 1 || numbertoexport > 20) throw new NumberFormatException(""Number to small/large"");} catch (NumberFormatException ex) {out.println(""The parameter <code>numbertoexport</code>must be an integer from 1 to 20"");}}res.setContentType(""text/xml"");RssWriter rssWriter = new RssWriter();rssWriter.setWriter(res.getWriter());AtomContainerSet soac = new AtomContainerSet();String query = ""select distinct MOLECULE.MOLECULE_ID from MOLECULE, SPECTRUM where SPECTRUM.MOLECULE_ID = MOLECULE.MOLECULE_ID and SPECTRUM.REVIEW_FLAG =\""true\"" order by MOLECULE.DATE desc;"";List l = NmrshiftdbUserPeer.executeQuery(query);for (int i = 0; i < numbertoexport; i++) {if (i == l.size()) break;DBMolecule mol = DBMoleculePeer.retrieveByPK(new NumberKey(((Record) l.get(i)).getValue(1).asInt()));IMolecule cdkmol = mol.getAsCDKMoleculeAsEntered(1);soac.addAtomContainer(cdkmol);rssWriter.getLinkmap().put(cdkmol, mol.getEasylink(req));rssWriter.getDatemap().put(cdkmol, mol.getDate());rssWriter.getTitlemap().put(cdkmol, mol.getChemicalNamesAsOneStringWithFallback());rssWriter.getCreatormap().put(cdkmol, mol.getNmrshiftdbUser().getUserName());rssWriter.setCreator(GeneralUtils.getAdminEmail(getServletConfig()));Vector v = mol.getDBCanonicalNames();for (int k = 0; k < v.size(); k++) {DBCanonicalName canonName = (DBCanonicalName) v.get(k);if (canonName.getDBCanonicalNameType().getCanonicalNameType() == ""INChI"") {rssWriter.getInchimap().put(cdkmol, canonName.getName());break;}}rssWriter.setTitle(""NMRShiftDB"");rssWriter.setLink(""http://www.nmrshiftdb.org"");rssWriter.setDescription(""NMRShiftDB is an open-source, open-access, open-submission, open-content web database for chemical structures and their nuclear magnetic resonance data"");rssWriter.setPublisher(""NMRShiftDB.org"");rssWriter.setImagelink(""http://www.nmrshiftdb.org/images/nmrshift-logo.gif"");rssWriter.setAbout(""http://www.nmrshiftdb.org/NmrshiftdbServlet?nmrshiftdbaction=rss"");Collection coll = new ArrayList();Vector spectra = mol.selectSpectra(null);for (int k = 0; k < spectra.size(); k++) {Element el = ((DBSpectrum) spectra.get(k)).getCmlSpect();Element el2 = el.getChildElements().get(0);el.removeChild(el2);coll.add(el2);}rssWriter.getMultiMap().put(cdkmol, coll);}rssWriter.write(soac);} else if (action.equals(""getattachment"")) {res.setContentType(""application/zip"");outstream = res.getOutputStream();DBSample sample = DBSamplePeer.retrieveByPK(new NumberKey(req.getParameter(""sampleid"")));outstream.write(sample.getAttachment());} else if (action.equals(""createreport"")) {res.setContentType(""application/pdf"");outstream = res.getOutputStream();boolean yearly = req.getParameter(""style"").equals(""yearly"");int yearstart = Integer.parseInt(req.getParameter(""yearstart""));int yearend = Integer.parseInt(req.getParameter(""yearend""));int monthstart = 0;int monthend = 0;if (!yearly) {monthstart = Integer.parseInt(req.getParameter(""monthstart""));monthend = Integer.parseInt(req.getParameter(""monthend""));}int type = Integer.parseInt(req.getParameter(""type""));JasperReport jasperReport = (JasperReport) JRLoader.loadObject(relativepath + ""/reports/"" + (yearly ? ""yearly"" : ""monthly"") + ""_report_"" + type + "".jasper"");Map parameters = new HashMap();if (yearly) parameters.put(""HEADER"", ""Report for years "" + yearstart + "" - "" + yearend); else parameters.put(""HEADER"", ""Report for "" + monthstart + ""/"" + yearstart + "" - "" + monthend + ""/"" + yearend);DBConnection dbconn = TurbineDB.getConnection();Connection conn = dbconn.getConnection();Statement stmt = conn.createStatement();ResultSet rs = null;if (type == 1) {rs = stmt.executeQuery(""select YEAR(DATE) as YEAR, "" + (yearly ? """" : "" MONTH(DATE) as MONTH, "") + ""AFFILIATION_1, AFFILIATION_2, MACHINE.NAME as NAME, count(*) as C, sum(WISHED_SPECTRUM like '%13C%' or WISHED_SPECTRUM like '%variable temperature%' or WISHED_SPECTRUM like '%ID sel. NOE%' or WISHED_SPECTRUM like '%solvent suppression%' or WISHED_SPECTRUM like '%standard spectrum%') as 1_D, sum(WISHED_SPECTRUM like '%H,H-COSY%' or WISHED_SPECTRUM like '%NOESY%' or WISHED_SPECTRUM like '%HMQC%' or WISHED_SPECTRUM like '%HMBC%') as 2_D, sum(OTHER_WISHED_SPECTRUM!='') as SPECIAL, sum(OTHER_NUCLEI!='') as HETERO, sum(PROCESS='self') as SELF, sum(PROCESS='robot') as ROBOT, sum(PROCESS='worker') as OPERATOR from (SAMPLE join TURBINE_USER using (USER_ID)) join MACHINE on MACHINE.MACHINE_ID=SAMPLE.MACHINE where YEAR(DATE)>="" + yearstart + "" and YEAR(DATE)<="" + yearend + "" and LOGIN_NAME<>'testuser' group by YEAR, "" + (yearly ? """" : ""MONTH, "") + ""AFFILIATION_1, AFFILIATION_2, MACHINE.NAME"");} else if (type == 2) {rs = stmt.executeQuery(""select YEAR(DATE) as YEAR, "" + (yearly ? """" : "" MONTH(DATE) as MONTH, "") + ""MACHINE.NAME as NAME, count(*) as C, sum(WISHED_SPECTRUM like '%13C%' or WISHED_SPECTRUM like '%variable temperature%' or WISHED_SPECTRUM like '%ID sel. NOE%' or WISHED_SPECTRUM like '%solvent suppression%' or WISHED_SPECTRUM like '%standard spectrum%') as 1_D, sum(WISHED_SPECTRUM like '%H,H-COSY%' or WISHED_SPECTRUM like '%NOESY%' or WISHED_SPECTRUM like '%HMQC%' or WISHED_SPECTRUM like '%HMBC%') as 2_D, sum(OTHER_WISHED_SPECTRUM!='') as SPECIAL, sum(OTHER_NUCLEI!='') as HETERO, sum(PROCESS='self') as SELF, sum(PROCESS='robot') as ROBOT, sum(PROCESS='worker') as OPERATOR from (SAMPLE join TURBINE_USER using (USER_ID)) join MACHINE on MACHINE.MACHINE_ID=SAMPLE.MACHINE group by YEAR, "" + (yearly ? """" : ""MONTH, "") + ""MACHINE.NAME"");}JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, new JRResultSetDataSource(rs));JasperExportManager.exportReportToPdfStream(jasperPrint, outstream);dbconn.close();} else if (action.equals(""exportcmlbyinchi"")) {res.setContentType(""text/xml"");out = res.getWriter();String inchi = req.getParameter(""inchi"");String spectrumtype = req.getParameter(""spectrumtype"");Criteria crit = new Criteria();crit.add(DBCanonicalNamePeer.NAME, inchi);crit.addJoin(DBCanonicalNamePeer.MOLECULE_ID, DBSpectrumPeer.MOLECULE_ID);crit.addJoin(DBSpectrumPeer.SPECTRUM_TYPE_ID, DBSpectrumTypePeer.SPECTRUM_TYPE_ID);crit.add(DBSpectrumTypePeer.NAME, spectrumtype);try {GeneralUtils.logToSql(crit.toString(), null);} catch (Exception ex) {}Vector spectra = DBSpectrumPeer.doSelect(crit);if (spectra.size() == 0) {out.write(""No such molecule or spectrum"");} else {Element cmlElement = new Element(""cml"");cmlElement.addAttribute(new Attribute(""convention"", ""nmrshiftdb-convention""));cmlElement.setNamespaceURI(""http://www.xml-cml.org/schema"");Element parent = ((DBSpectrum) spectra.get(0)).getDBMolecule().getCML(1);nu.xom.Node cmldoc = parent.getChild(0);((Element) cmldoc).setNamespaceURI(""http://www.xml-cml.org/schema"");parent.removeChildren();cmlElement.appendChild(cmldoc);for (int k = 0; k < spectra.size(); k++) {Element parentspec = ((DBSpectrum) spectra.get(k)).getCmlSpect();Node spectrumel = parentspec.getChild(0);parentspec.removeChildren();cmlElement.appendChild(spectrumel);((Element) spectrumel).setNamespaceURI(""http://www.xml-cml.org/schema"");}out.write(cmlElement.toXML());}} else if (action.equals(""namelist"")) {res.setContentType(""application/zip"");outstream = res.getOutputStream();ByteArrayOutputStream baos = new ByteArrayOutputStream();ZipOutputStream zipout = new ZipOutputStream(baos);Criteria crit = new Criteria();crit.addJoin(DBMoleculePeer.MOLECULE_ID, DBSpectrumPeer.MOLECULE_ID);crit.add(DBSpectrumPeer.REVIEW_FLAG, ""true"");Vector v = DBMoleculePeer.doSelect(crit);for (int i = 0; i < v.size(); i++) {if (i % 500 == 0) {if (i != 0) {zipout.write(new String(""<p>The list is continued <a href=\""nmrshiftdb.names."" + i + "".html\"">here</a></p></body></html>"").getBytes());zipout.closeEntry();}zipout.putNextEntry(new ZipEntry(""nmrshiftdb.names."" + i + "".html""));zipout.write(new String(""<html><body><h1>This is a list of strcutures in <a href=\""http://www.nmrshiftdb.org\"">NMRShiftDB</a>, starting at "" + i + "", Its main purpose is to be found by search engines</h1>"").getBytes());}DBMolecule mol = (DBMolecule) v.get(i);zipout.write(new String(""<p><a href=\"""" + mol.getEasylink(req) + ""\"">"").getBytes());Vector cannames = mol.getDBCanonicalNames();for (int k = 0; k < cannames.size(); k++) {zipout.write(new String(((DBCanonicalName) cannames.get(k)).getName() + "" "").getBytes());}Vector chemnames = mol.getDBChemicalNames();for (int k = 0; k < chemnames.size(); k++) {zipout.write(new String(((DBChemicalName) chemnames.get(k)).getName() + "" "").getBytes());}zipout.write(new String(""</a>. Information we have got: NMR spectra"").getBytes());Vector spectra = mol.selectSpectra();for (int k = 0; k < spectra.size(); k++) {zipout.write(new String(((DBSpectrum) spectra.get(k)).getDBSpectrumType().getName() + "", "").getBytes());}if (mol.hasAny3d()) zipout.write(new String(""3D coordinates, "").getBytes());zipout.write(new String(""File formats: CML, mol, png, jpeg"").getBytes());zipout.write(new String(""</p>"").getBytes());}zipout.write(new String(""</body></html>"").getBytes());zipout.closeEntry();zipout.close();InputStream is = new ByteArrayInputStream(baos.toByteArray());byte[] buf = new byte[32 * 1024];int nRead = 0;while ((nRead = is.read(buf)) != -1) {outstream.write(buf, 0, nRead);}} else if (action.equals(""predictor"")) {if (req.getParameter(""symbol"") == null) {res.setContentType(""text/plain"");out = res.getWriter();out.write(""please give the symbol to create the predictor for in the request with symbol=X (e. g. symbol=C"");}res.setContentType(""application/zip"");outstream = res.getOutputStream();ByteArrayOutputStream baos = new ByteArrayOutputStream();ZipOutputStream zipout = new ZipOutputStream(baos);String filename = ""org/openscience/nmrshiftdb/PredictionTool.class"";zipout.putNextEntry(new ZipEntry(filename));JarInputStream jip = new JarInputStream(new FileInputStream(ServletUtils.expandRelative(getServletConfig(), ""/WEB-INF/lib/nmrshiftdb-lib.jar"")));JarEntry entry = jip.getNextJarEntry();while (entry.getName().indexOf(""PredictionTool.class"") == -1) {entry = jip.getNextJarEntry();}for (int i = 0; i < entry.getSize(); i++) {zipout.write(jip.read());}zipout.closeEntry();zipout.putNextEntry(new ZipEntry(""nmrshiftdb.csv""));int i = 0;org.apache.turbine.util.db.pool.DBConnection conn = TurbineDB.getConnection();HashMap mapsmap = new HashMap();while (true) {Statement stmt = conn.createStatement();ResultSet rs = stmt.executeQuery(""select HOSE_CODE, VALUE, SYMBOL from HOSE_CODES where CONDITION_TYPE='m' and WITH_RINGS=0 and SYMBOL='"" + req.getParameter(""symbol"") + ""' limit "" + (i * 1000) + "", 1000"");int m = 0;while (rs.next()) {String code = rs.getString(1);Double value = new Double(rs.getString(2));String symbol = rs.getString(3);if (mapsmap.get(symbol) == null) {mapsmap.put(symbol, new HashMap());}for (int spheres = 6; spheres > 0; spheres--) {StringBuffer hoseCodeBuffer = new StringBuffer();StringTokenizer st = new StringTokenizer(code, ""()/"");for (int k = 0; k < spheres; k++) {if (st.hasMoreTokens()) {String partcode = st.nextToken();hoseCodeBuffer.append(partcode);}if (k == 0) {hoseCodeBuffer.append(""("");} else if (k == 3) {hoseCodeBuffer.append("")"");} else {hoseCodeBuffer.append(""/"");}}String hoseCode = hoseCodeBuffer.toString();if (((HashMap) mapsmap.get(symbol)).get(hoseCode) == null) {((HashMap) mapsmap.get(symbol)).put(hoseCode, new ArrayList());}((ArrayList) ((HashMap) mapsmap.get(symbol)).get(hoseCode)).add(value);}m++;}i++;stmt.close();if (m == 0) break;}Set keySet = mapsmap.keySet();Iterator it = keySet.iterator();while (it.hasNext()) {String symbol = (String) it.next();HashMap hosemap = ((HashMap) mapsmap.get(symbol));Set keySet2 = hosemap.keySet();Iterator it2 = keySet2.iterator();while (it2.hasNext()) {String hoseCode = (String) it2.next();ArrayList list = ((ArrayList) hosemap.get(hoseCode));double[] values = new double[list.size()];for (int k = 0; k < list.size(); k++) {values[k] = ((Double) list.get(k)).doubleValue();}zipout.write(new String(symbol + ""|"" + hoseCode + ""|"" + Statistics.minimum(values) + ""|"" + Statistics.average(values) + ""|"" + Statistics.maximum(values) + ""\r\n"").getBytes());}}zipout.closeEntry();zipout.close();InputStream is = new ByteArrayInputStream(baos.toByteArray());byte[] buf = new byte[32 * 1024];int nRead = 0;i = 0;while ((nRead = is.read(buf)) != -1) {outstream.write(buf, 0, nRead);}} else if (action.equals(""exportspec"") || action.equals(""exportmol"")) {if (spectrumId > -1) spectrum = DBSpectrumPeer.retrieveByPK(new NumberKey(spectrumId)); else spectrum = DBSpectrumPeer.retrieveByPK(new NumberKey(req.getParameter(""spectrumid"")));export = new Export(spectrum);} else if (action.equals(""exportmdl"")) {res.setContentType(""text/plain"");outstream = res.getOutputStream();DBMolecule mol = DBMoleculePeer.retrieveByPK(new NumberKey(req.getParameter(""moleculeid"")));outstream.write(mol.getStructureFile(Integer.parseInt(req.getParameter(""coordsetid"")), false).getBytes());} else if (action.equals(""exportlastinputs"")) {format = action;} else if (action.equals(""printpredict"")) {res.setContentType(""text/html"");out = res.getWriter();HttpSession session = req.getSession();VelocityContext context = PredictPortlet.getContext(session, true, true, new StringBuffer(), getServletConfig(), req, true);StringWriter w = new StringWriter();Velocity.mergeTemplate(""predictprint.vm"", ""ISO-8859-1"", context, w);out.println(w.toString());} else {res.setContentType(""text/html"");out = res.getWriter();out.println(""No valid action"");}if (format == null) format = """";if (format.equals(""pdf"") || format.equals(""rtf"")) {res.setContentType(""application/"" + format);out = res.getWriter();}if (format.equals(""docbook"")) {res.setContentType(""application/zip"");outstream = res.getOutputStream();}if (format.equals(""svg"")) {res.setContentType(""image/x-svg"");out = res.getWriter();}if (format.equals(""tiff"")) {res.setContentType(""image/tiff"");outstream = res.getOutputStream();}if (format.equals(""jpeg"")) {res.setContentType(""image/jpeg"");outstream = res.getOutputStream();}if (format.equals(""png"")) {res.setContentType(""image/png"");outstream = res.getOutputStream();}if (format.equals(""mdl"") || format.equals(""txt"") || format.equals(""cml"") || format.equals(""cmlboth"") || format.indexOf(""exsection"") == 0) {res.setContentType(""text/plain"");out = res.getWriter();}if (format.equals(""simplehtml"") || format.equals(""exportlastinputs"")) {res.setContentType(""text/html"");out = res.getWriter();}if (action.equals(""exportlastinputs"")) {int numbertoexport = 4;if (req.getParameter(""numbertoexport"") != null) {try {numbertoexport = Integer.parseInt(req.getParameter(""numbertoexport""));if (numbertoexport < 1 || numbertoexport > 20) throw new NumberFormatException(""Number to small/large"");} catch (NumberFormatException ex) {out.println(""The parameter <code>numbertoexport</code>must be an integer from 1 to 20"");}}NmrshiftdbUser user = null;try {user = NmrshiftdbUserPeer.getByName(req.getParameter(""username""));} catch (NmrshiftdbException ex) {out.println(""Seems <code>username</code> is not OK: "" + ex.getMessage());}if (user != null) {List l = NmrshiftdbUserPeer.executeQuery(""SELECT LAST_DOWNLOAD_DATE FROM TURBINE_USER  where LOGIN_NAME=\"""" + user.getUserName() + ""\"";"");Date lastDownloadDate = ((Record) l.get(0)).getValue(1).asDate();if (((new Date().getTime() - lastDownloadDate.getTime()) / 3600000) < 24) {out.println(""Your last download was at "" + lastDownloadDate + "". You may download your last inputs only once a day. Sorry for this, but we need to be carefull with resources. If you want to put your last inputs on your homepage best use some sort of cache (e. g. use wget for downlaod with crond and link to this static resource))!"");} else {NmrshiftdbUserPeer.executeStatement(""UPDATE TURBINE_USER SET LAST_DOWNLOAD_DATE=NOW() where LOGIN_NAME=\"""" + user.getUserName() + ""\"";"");Vector<String> parameters = new Vector<String>();String query = ""select distinct MOLECULE.MOLECULE_ID from MOLECULE, SPECTRUM where SPECTRUM.MOLECULE_ID = MOLECULE.MOLECULE_ID and SPECTRUM.REVIEW_FLAG =\""true\"" and SPECTRUM.USER_ID="" + user.getUserId() + "" order by MOLECULE.DATE desc;"";l = NmrshiftdbUserPeer.executeQuery(query);String url = javax.servlet.http.HttpUtils.getRequestURL(req).toString();url = url.substring(0, url.length() - 17);for (int i = 0; i < numbertoexport; i++) {if (i == l.size()) break;DBMolecule mol = DBMoleculePeer.retrieveByPK(new NumberKey(((Record) l.get(i)).getValue(1).asInt()));parameters.add(new String(""<a href=\"""" + url + ""/portal/pane0/Results?nmrshiftdbaction=showDetailsFromHome&molNumber="" + mol.getMoleculeId() + ""\""><img src=\"""" + javax.servlet.http.HttpUtils.getRequestURL(req).toString() + ""?nmrshiftdbaction=exportmol&spectrumid="" + ((DBSpectrum) mol.getDBSpectrums().get(0)).getSpectrumId() + ""&format=jpeg&size=150x150&backcolor=12632256\""></a>""));}VelocityContext context = new VelocityContext();context.put(""results"", parameters);StringWriter w = new StringWriter();Velocity.mergeTemplate(""lateststructures.vm"", ""ISO-8859-1"", context, w);out.println(w.toString());}}}if (action.equals(""exportspec"")) {if (format.equals(""txt"")) {String lastsearchtype = req.getParameter(""lastsearchtype"");if (lastsearchtype.equals(NmrshiftdbConstants.TOTALSPECTRUM) || lastsearchtype.equals(NmrshiftdbConstants.SUBSPECTRUM)) {List l = ParseUtils.parseSpectrumFromSpecFile(req.getParameter(""lastsearchvalues""));spectrum.initSimilarity(l, lastsearchtype.equals(NmrshiftdbConstants.SUBSPECTRUM));}Vector v = spectrum.getOptions();DBMolecule mol = spectrum.getDBMolecule();out.print(mol.getChemicalNamesAsOneString(false) + mol.getMolecularFormula(false) + ""; "" + mol.getMolecularWeight() + "" Dalton\n\r"");out.print(""\n\rAtom\t"");if (spectrum.getDBSpectrumType().getElementSymbol() == (""H"")) out.print(""Mult.\t"");out.print(""Meas."");if (lastsearchtype.equals(NmrshiftdbConstants.TOTALSPECTRUM) || lastsearchtype.equals(NmrshiftdbConstants.SUBSPECTRUM)) {out.print(""\tInput\tDiff"");}out.print(""\n\r"");out.print(""No.\t"");if (spectrum.getDBSpectrumType().getElementSymbol() == (""H"")) out.print(""\t"");out.print(""Shift"");if (lastsearchtype.equals(NmrshiftdbConstants.TOTALSPECTRUM) || lastsearchtype.equals(NmrshiftdbConstants.SUBSPECTRUM)) {out.print(""\tShift\tM-I"");}out.print(""\n\r"");for (int i = 0; i < v.size(); i++) {out.print(((ValuesForVelocityBean) v.get(i)).getDisplayText() + ""\t"" + ((ValuesForVelocityBean) v.get(i)).getRange());if (lastsearchtype.equals(NmrshiftdbConstants.TOTALSPECTRUM) || lastsearchtype.equals(NmrshiftdbConstants.SUBSPECTRUM)) {out.print(""\t"" + ((ValuesForVelocityBean) v.get(i)).getNameForElements() + ""\t"" + ((ValuesForVelocityBean) v.get(i)).getDelta());}out.print(""\n\r"");}}if (format.equals(""simplehtml"")) {String i1 = export.getImage(false, ""jpeg"", ServletUtils.expandRelative(this.getServletConfig(), ""/nmrshiftdbhtml"") + ""/tmp/"" + System.currentTimeMillis(), true);export.pictures[0] = new File(i1).getName();String i2 = export.getImage(true, ""jpeg"", ServletUtils.expandRelative(this.getServletConfig(), ""/nmrshiftdbhtml"") + ""/tmp/"" + System.currentTimeMillis(), true);export.pictures[1] = new File(i2).getName();String docbook = export.getHtml();out.print(docbook);}if (format.equals(""pdf"") || format.equals(""rtf"")) {String svgSpec = export.getSpecSvg(400, 200);String svgspecfile = relativepath + ""/tmp/"" + System.currentTimeMillis() + ""s.svg"";new FileOutputStream(svgspecfile).write(svgSpec.getBytes());export.pictures[1] = svgspecfile;String molSvg = export.getMolSvg(true);String svgmolfile = relativepath + ""/tmp/"" + System.currentTimeMillis() + ""m.svg"";new FileOutputStream(svgmolfile).write(molSvg.getBytes());export.pictures[0] = svgmolfile;String docbook = export.getDocbook(""pdf"", ""SVG"");TransformerFactory tFactory = TransformerFactory.newInstance();Transformer transformer = tFactory.newTransformer(new StreamSource(""file:"" + GeneralUtils.getNmrshiftdbProperty(""docbookxslpath"", getServletConfig()) + ""/fo/docbook.xsl""));ByteArrayOutputStream baos = new ByteArrayOutputStream();transformer.transform(new StreamSource(new StringReader(docbook)), new StreamResult(baos));FopFactory fopFactory = FopFactory.newInstance();FOUserAgent foUserAgent = fopFactory.newFOUserAgent();OutputStream out2 = new ByteArrayOutputStream();Fop fop = fopFactory.newFop(format.equals(""rtf"") ? MimeConstants.MIME_RTF : MimeConstants.MIME_PDF, foUserAgent, out2);TransformerFactory factory = TransformerFactory.newInstance();transformer = factory.newTransformer();Source src = new StreamSource(new StringReader(baos.toString()));Result res2 = new SAXResult(fop.getDefaultHandler());transformer.transform(src, res2);out.print(out2.toString());}if (format.equals(""docbook"")) {String i1 = relativepath + ""/tmp/"" + System.currentTimeMillis() + "".svg"";new FileOutputStream(i1).write(export.getSpecSvg(300, 200).getBytes());export.pictures[0] = new File(i1).getName();String i2 = relativepath + ""/tmp/"" + System.currentTimeMillis() + "".svg"";new FileOutputStream(i2).write(export.getMolSvg(true).getBytes());export.pictures[1] = new File(i2).getName();String docbook = export.getDocbook(""pdf"", ""SVG"");String docbookfile = relativepath + ""/tmp/"" + System.currentTimeMillis() + "".xml"";new FileOutputStream(docbookfile).write(docbook.getBytes());ByteArrayOutputStream baos = export.makeZip(new String[] { docbookfile, i1, i2 });outstream.write(baos.toByteArray());}if (format.equals(""svg"")) {out.print(export.getSpecSvg(400, 200));}if (format.equals(""tiff"") || format.equals(""jpeg"") || format.equals(""png"")) {InputStream is = new FileInputStream(export.getImage(false, format, relativepath + ""/tmp/"" + System.currentTimeMillis(), true));byte[] buf = new byte[32 * 1024];int nRead = 0;while ((nRead = is.read(buf)) != -1) {outstream.write(buf, 0, nRead);}}if (format.equals(""cml"")) {out.print(spectrum.getCmlSpect().toXML());}if (format.equals(""cmlboth"")) {Element cmlElement = new Element(""cml"");cmlElement.addAttribute(new Attribute(""convention"", ""nmrshiftdb-convention""));cmlElement.setNamespaceURI(""http://www.xml-cml.org/schema"");Element parent = spectrum.getDBMolecule().getCML(1, spectrum.getDBSpectrumType().getName().equals(""1H""));nu.xom.Node cmldoc = parent.getChild(0);((Element) cmldoc).setNamespaceURI(""http://www.xml-cml.org/schema"");parent.removeChildren();cmlElement.appendChild(cmldoc);Element parentspec = spectrum.getCmlSpect();Node spectrumel = parentspec.getChild(0);parentspec.removeChildren();cmlElement.appendChild(spectrumel);((Element) spectrumel).setNamespaceURI(""http://www.xml-cml.org/schema"");out.write(cmlElement.toXML());}if (format.indexOf(""exsection"") == 0) {StringTokenizer st = new StringTokenizer(format, ""-"");st.nextToken();String template = st.nextToken();Criteria crit = new Criteria();crit.add(DBSpectrumPeer.USER_ID, spectrum.getUserId());Vector v = spectrum.getDBMolecule().getDBSpectrums(crit);VelocityContext context = new VelocityContext();context.put(""spectra"", v);context.put(""molecule"", spectrum.getDBMolecule());StringWriter w = new StringWriter();Velocity.mergeTemplate(""exporttemplates/"" + template, ""ISO-8859-1"", context, w);out.write(w.toString());}}if (action.equals(""exportmol"")) {int width = -1;int height = -1;if (req.getParameter(""size"") != null) {StringTokenizer st = new StringTokenizer(req.getParameter(""size""), ""x"");width = Integer.parseInt(st.nextToken());height = Integer.parseInt(st.nextToken());}boolean shownumbers = true;if (req.getParameter(""shownumbers"") != null && req.getParameter(""shownumbers"").equals(""false"")) {shownumbers = false;}if (req.getParameter(""backcolor"") != null) {export.backColor = new Color(Integer.parseInt(req.getParameter(""backcolor"")));}if (req.getParameter(""markatom"") != null) {export.selected = Integer.parseInt(req.getParameter(""markatom"")) - 1;}if (format.equals(""svg"")) {out.print(export.getMolSvg(true));}if (format.equals(""tiff"") || format.equals(""jpeg"") || format.equals(""png"")) {InputStream is = new FileInputStream(export.getImage(true, format, relativepath + ""/tmp/"" + System.currentTimeMillis(), width, height, shownumbers, null));byte[] buf = new byte[32 * 1024];int nRead = 0;while ((nRead = is.read(buf)) != -1) {outstream.write(buf, 0, nRead);}}if (format.equals(""mdl"")) {out.println(spectrum.getDBMolecule().getStructureFile(1, false));}if (format.equals(""cml"")) {out.println(spectrum.getDBMolecule().getCMLString(1));}}if (out != null) out.flush(); else outstream.flush();} catch (Exception ex) {ex.printStackTrace();out.print(GeneralUtils.logError(ex, ""NmrshiftdbServlet"", null, true));out.flush();}}"	5
"public boolean resourceExists(String location) {if ((location == null) || (location.length() == 0)) {return false;}try {URL url = buildURL(location);URLConnection cxn = url.openConnection();InputStream is = null;try {byte[] byteBuffer = new byte[2048];is = cxn.getInputStream();while (is.read(byteBuffer, 0, 2048) >= 0) ;return true;} finally {if (is != null) {is.close();}}} catch (IOException ex) {return false;}}public void startElement(String uri, String tag, String qName, org.xml.sax.Attributes attributes) throws SAXException {wabclient.Attributes prop = new wabclient.Attributes(attributes);try {if (tag.equals(""window"")) {if (prop == null) {System.err.println(""window without properties"");return;}int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);Color bgcolor = prop.getValue(""bgcolor"", Color.white);String caption = prop.getValue(""caption"", """");layout = prop.getValue(""layout"", 0);boolean statusbar = prop.getValue(""statusbar"", false);if (sheet.opentype == WABSheet.LAYERED) {Point pos = frame.getNextMDIPos();sheet.setBounds(pos.x, pos.y, 400, 200);sheet.setNormalBounds(new Rectangle(pos.x, pos.y, 400, 200));} else {sheet.setBounds(x, y, width, height);sheet.setNormalBounds(new Rectangle(x, y, width, height));}if (sheet.opentype == WABSheet.MAXIMIZED) sheet.setMaximum(true); else sheet.setMaximum(false);sheet.setTitle(caption);frame.addSheetToMenu(caption);sheet.setBackground(bgcolor);if (layout == 1) sheet.getContentPane().setLayout(new FlowLayout()); else if (layout == 2) sheet.getContentPane().setLayout(new BorderLayout()); else sheet.getContentPane().setLayout(null);} else if (tag.equals(""menu"")) {if (prop == null) {System.err.println(""menu without properties"");return;}String id = prop.getValue(""id"", """");String label = prop.getValue(""label"", """");if ((id != null && id.equals(""WINDOW_MENU"") || label.equalsIgnoreCase(""window""))) {windowMenu = new JMenu();menu = windowMenu;sheet.setWindowMenu(menu);} else {menu = new JMenu();}menu.setText(label);sheet.menubar.add(menu);} else if (tag.equals(""menuitem"")) {if (prop == null) {System.err.println(""menuitem without properties"");return;}JMenuItem item;String action = prop.getValue(""action"", """");String label = prop.getValue(""label"", """");boolean visible = prop.getValue(""visible"", true);String icon = prop.getValue(""icon"", """");if (action.equals(""WINDOW_OVERLAPPED"")) {item = windowMenuOverlapped = new JMenuItem();item.setActionCommand(""10001"");item.addActionListener(frame);} else if (action.equals(""WINDOW_TILE_HORIZONTALLY"")) {item = windowMenuTile = new JMenuItem();item.setActionCommand(""10002"");item.addActionListener(frame);} else if (action.equals(""WINDOW_TILE_VERTICALLY"")) {item = windowMenuArrange = new JMenuItem();item.setActionCommand(""10003"");item.addActionListener(frame);} else {item = new JMenuItem();item.setActionCommand(action);item.addActionListener((WABClient) global);}item.setText(label);if (!visible) menu.setVisible(false);menu.add(item);if (frame.getToolBar() != null) {if (icon.length() > 0) {try {ImageIcon img = new ImageIcon(new URL(icon));BufferedImage image = new BufferedImage(25, 25, BufferedImage.TYPE_4BYTE_ABGR);Graphics g = image.createGraphics();g.setColor(new Color(0, 0, 0, 0));g.fillRect(0, 0, 25, 25);g.drawImage(img.getImage(), 4, 4, 16, 16, (ImageObserver) null);BufferedImage pressed = new BufferedImage(25, 25, BufferedImage.TYPE_4BYTE_ABGR);g = pressed.createGraphics();g.setColor(new Color(0, 0, 0, 0));g.fillRect(0, 0, 25, 25);g.drawImage(img.getImage(), 5, 5, 16, 16, (ImageObserver) null);g.setColor(new Color(132, 132, 132));g.drawLine(0, 0, 24, 0);g.drawLine(0, 0, 0, 24);g.setColor(new Color(255, 255, 255));g.drawLine(24, 24, 24, 0);g.drawLine(24, 24, 0, 24);BufferedImage over = new BufferedImage(25, 25, BufferedImage.TYPE_4BYTE_ABGR);g = over.createGraphics();g.setColor(new Color(0, 0, 0, 0));g.fillRect(0, 0, 25, 25);g.drawImage(img.getImage(), 4, 4, 16, 16, (ImageObserver) null);g.setColor(new Color(255, 255, 255));g.drawLine(0, 0, 24, 0);g.drawLine(0, 0, 0, 24);g.setColor(new Color(132, 132, 132));g.drawLine(24, 24, 24, 0);g.drawLine(24, 24, 0, 24);JButton b = new JButton(new ImageIcon(image));b.setRolloverEnabled(true);b.setPressedIcon(new ImageIcon(pressed));b.setRolloverIcon(new ImageIcon(over));b.setToolTipText(label);b.setActionCommand(action);b.setFocusPainted(false);b.setBorderPainted(false);b.setContentAreaFilled(false);b.setMargin(new Insets(0, 0, 0, 0));b.addActionListener(sheet);sheet.toolbar.add(b);} catch (Exception e) {}}}} else if (tag.equals(""separator"")) {menu.addSeparator();} else if (tag.equals(""choice"")) {if (prop == null) {System.err.println(""choice without properties"");return;}combo = new JComboBox();list = null;int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String id = prop.getValue(""id"", """");Object constraints = prop.getValue(""constraints"");boolean editable = prop.getValue(""editable"", false);boolean visible = prop.getValue(""visible"", true);boolean enabled = prop.getValue(""enabled"", true);combo_text = prop.getValue(""text"", """");combo.setBounds(x, y, width, height);combo.setName((String) id);if (editable) {combo.setEditable(editable);combo.setSelectedItem(combo_text);}if (!visible) combo.setVisible(false);if (!enabled) combo.setEnabled(false);if (layout == 0) sheet.getContentPane().add(combo); else sheet.getContentPane().add(combo, constraints);} else if (tag.equals(""list"")) {if (prop == null) {System.err.println(""list without properties"");return;}list = new JList();combo = null;listdata = new Vector();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String id = prop.getValue(""id"", """");Object constraints = prop.getValue(""constraints"");list.setName((String) id);list.setListData(listdata);JScrollPane sp = new JScrollPane(list);sp.setBounds(x, y, width, height);if (layout == 0) sheet.getContentPane().add(sp); else sheet.getContentPane().add(sp, constraints);} else if (tag.equals(""option"")) {if (prop == null) {System.err.println(""choice.option without properties"");return;}String value = prop.getValue(""value"", """");String text = prop.getValue(""text"", """");if (list != null) listdata.addElement(new ComboOption(text, value));if (combo != null) {ComboOption co = new ComboOption(text, value);combo.addItem(co);if (combo_text.equals(text.trim())) combo.setSelectedItem(co);}} else if (tag.equals(""label"")) {if (prop == null) {System.err.println(""label without properties"");return;}JLabel label = new JLabel();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String text = prop.getValue(""text"", """");Object constraints = prop.getValue(""constraints"");boolean visible = prop.getValue(""visible"", true);label.setBounds(x, y, width, height);label.setText(text);if (!visible) label.setVisible(false);if (layout == 0) sheet.getContentPane().add(label); else sheet.getContentPane().add(label, constraints);} else if (tag.equals(""button"")) {if (prop == null) {System.err.println(""button without properties"");return;}JButton btn = new JButton();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String id = prop.getValue(""id"", """");String text = prop.getValue(""text"", """");String onmouseup = prop.getValue(""onmouseup"", """");Object constraints = prop.getValue(""constraints"");btn.setBounds(x, y, width, height);btn.setText(text);btn.addActionListener(sheet);btn.setActionCommand(onmouseup);if (layout == 0) sheet.getContentPane().add(btn); else sheet.getContentPane().add(btn, constraints);} else if (tag.equals(""radiobutton"")) {if (prop == null) {System.err.println(""radiobutton without properties"");return;}JRadioButton rb = new JRadioButton();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String id = prop.getValue(""id"", """");String text = prop.getValue(""text"", """");Object constraints = prop.getValue(""constraints"");String checked = prop.getValue(""checked"", ""false"");rb.setBounds(x, y, width, height);rb.setText(text);rb.setName((String) id);rb.addActionListener(sheet);rb.setSelected(checked.equalsIgnoreCase(""true""));if (layout == 0) sheet.getContentPane().add(rb); else sheet.getContentPane().add(rb, constraints);} else if (tag.equals(""checkbox"")) {if (prop == null) {System.err.println(""checkbox without properties"");return;}JCheckBox cb = new JCheckBox();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String id = prop.getValue(""id"", """");String text = prop.getValue(""text"", """");String onmouseup = prop.getValue(""onmouseup"", """");Object constraints = prop.getValue(""constraints"");String checked = prop.getValue(""checked"", ""false"");cb.setBounds(x, y, width, height);cb.setText(text);cb.setName((String) id);cb.setSelected(checked.equalsIgnoreCase(""true""));if (layout == 0) sheet.getContentPane().add(cb); else sheet.getContentPane().add(cb, constraints);} else if (tag.equals(""image"")) {if (prop == null) {System.err.println(""image without properties"");return;}JLabel label = new JLabel();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String src = prop.getValue(""src"", """");Object constraints = prop.getValue(""constraints"");label.setIcon(new ImageIcon(new URL(src)));label.setBounds(x, y, width, height);if (layout == 0) sheet.getContentPane().add(label); else sheet.getContentPane().add(label, constraints);} else if (tag.equals(""singlelineedit"")) {if (prop == null) {System.err.println(""singlelineedit without properties"");return;}String pwd = prop.getValue(""password"", """");JTextField sle;if (pwd.equalsIgnoreCase(""true"")) sle = new JPasswordField(); else sle = new JTextField();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);Object id = prop.getValue(""id"");String text = prop.getValue(""text"", """");Object constraints = prop.getValue(""constraints"");sle.setBounds(x, y, width, height);sle.setText(text);sle.setName((String) id);if (layout == 0) sheet.getContentPane().add(sle); else sheet.getContentPane().add(sle, constraints);} else if (tag.equals(""treeview"")) {if (prop == null) {System.err.println(""treeview without properties"");return;}treeview_root = new DefaultMutableTreeNode(""root"");treeview = new JTree(treeview_root);Object constraints = prop.getValue(""constraints"");sheet.getContentPane().add(new JScrollPane(treeview), constraints);} else if (tag.equals(""treeitem"")) {if (prop == null) {System.err.println(""treeview.treeitem without properties"");return;}String text = prop.getValue(""text"", """");String value = prop.getValue(""value"", """");DefaultMutableTreeNode node = new DefaultMutableTreeNode(text);treeview_root.add(node);} else if (tag.equals(""table"")) {if (prop == null) {System.err.println(""table without properties"");return;}String id = prop.getValue(""id"", """");table = new JTable();model = new DefaultTableModel() {public boolean isCellEditable(int row, int col) {return false;}};table.setModel(model);table.setName((String) id);Object constraints = prop.getValue(""constraints"");sheet.getContentPane().add(new JScrollPane(table), constraints);rowNumber = 0;columnNumber = 0;headerWidths = new Vector();} else if (tag.equals(""header"")) {if (prop == null) {System.err.println(""table.header without properties"");return;}String text = prop.getValue(""text"", """");int width = prop.getValue(""width"", 0);headerWidths.addElement(new Integer(width));model.addColumn(text);} else if (tag.equals(""row"")) {rowNumber++;columnNumber = 0;model.setRowCount(rowNumber);} else if (tag.equals(""column"")) {columnNumber++;if (prop == null) {System.err.println(""table.column without properties"");return;}String value = prop.getValue(""value"", """");model.setValueAt(value, rowNumber - 1, columnNumber - 1);} else if (tag.equals(""script"")) {sheet.beginScript();String url = prop.getValue(""src"");if (url.length() > 0) {try {BufferedReader r = new BufferedReader(new InputStreamReader(new URL(url).openStream()));String buffer;while (true) {buffer = r.readLine();if (buffer == null) break;sheet.script += buffer + ""\n"";}r.close();sheet.endScript();} catch (IOException ioe) {System.err.println(""[IOError] "" + ioe.getMessage());System.exit(0);}}} else System.err.println(""[sheet] unparsed tag: "" + tag);} catch (Exception e) {e.printStackTrace(System.err);}}public static String encrypt(final String pass) {try {final MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(pass.getBytes(""UTF-8""));return new String(Base64.encodeBase64(md.digest()));} catch (final Exception e) {throw new RuntimeException(""No se pudo encriptar el password."", e);}}public Object process(Atom oAtm) throws IOException {File oFile;FileReader oFileRead;String sPathHTML;char cBuffer[];Object oReplaced;final String sSep = System.getProperty(""file.separator"");if (DebugFile.trace) {DebugFile.writeln(""Begin FileDumper.process([Job:"" + getStringNull(DB.gu_job, """") + "", Atom:"" + String.valueOf(oAtm.getInt(DB.pg_atom)) + ""])"");DebugFile.incIdent();}if (bHasReplacements) {sPathHTML = getProperty(""workareasput"");if (!sPathHTML.endsWith(sSep)) sPathHTML += sSep;sPathHTML += getParameter(""gu_workarea"") + sSep + ""apps"" + sSep + ""Mailwire"" + sSep + ""html"" + sSep + getParameter(""gu_pageset"") + sSep;sPathHTML += getParameter(""nm_pageset"").replace(' ', '_') + "".html"";if (DebugFile.trace) DebugFile.writeln(""PathHTML = "" + sPathHTML);oReplaced = oReplacer.replace(sPathHTML, oAtm.getItemMap());bHasReplacements = (oReplacer.lastReplacements() > 0);} else {oReplaced = null;if (null != oFileStr) oReplaced = oFileStr.get();if (null == oReplaced) {sPathHTML = getProperty(""workareasput"");if (!sPathHTML.endsWith(sSep)) sPathHTML += sSep;sPathHTML += getParameter(""gu_workarea"") + sSep + ""apps"" + sSep + ""Mailwire"" + sSep + ""html"" + sSep + getParameter(""gu_pageset"") + sSep + getParameter(""nm_pageset"").replace(' ', '_') + "".html"";if (DebugFile.trace) DebugFile.writeln(""PathHTML = "" + sPathHTML);oFile = new File(sPathHTML);cBuffer = new char[new Long(oFile.length()).intValue()];oFileRead = new FileReader(oFile);oFileRead.read(cBuffer);oFileRead.close();if (DebugFile.trace) DebugFile.writeln(String.valueOf(cBuffer.length) + "" characters readed"");oReplaced = new String(cBuffer);oFileStr = new SoftReference(oReplaced);}}String sPathJobDir = getProperty(""storage"");if (!sPathJobDir.endsWith(sSep)) sPathJobDir += sSep;sPathJobDir += ""jobs"" + sSep + getParameter(""gu_workarea"") + sSep + getString(DB.gu_job) + sSep;FileWriter oFileWrite = new FileWriter(sPathJobDir + getString(DB.gu_job) + ""_"" + String.valueOf(oAtm.getInt(DB.pg_atom)) + "".html"", true);oFileWrite.write((String) oReplaced);oFileWrite.close();iPendingAtoms--;if (DebugFile.trace) {DebugFile.writeln(""End FileDumper.process([Job:"" + getStringNull(DB.gu_job, """") + "", Atom:"" + String.valueOf(oAtm.getInt(DB.pg_atom)) + ""])"");DebugFile.decIdent();}return oReplaced;}public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException {InputStream inputStream = url.openStream();try {return getAudioInputStream(inputStream);} catch (UnsupportedAudioFileException e) {inputStream.close();throw e;} catch (IOException e) {inputStream.close();throw e;}}public void transport(File file) throws TransportException {if (file.exists()) {if (file.isDirectory()) {File[] files = file.listFiles();for (int i = 0; i < files.length; i++) {transport(file);}} else if (file.isFile()) {try {FileChannel inChannel = new FileInputStream(file).getChannel();FileChannel outChannel = new FileOutputStream(destinationDir).getChannel();inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {log.error(""File transfer failed"", e);}}}}public static void copyTo(File inFile, File outFile) throws IOException {char[] cbuff = new char[32768];BufferedReader reader = new BufferedReader(new FileReader(inFile));BufferedWriter writer = new BufferedWriter(new FileWriter(outFile));int readedBytes = 0;long absWrittenBytes = 0;while ((readedBytes = reader.read(cbuff, 0, cbuff.length)) != -1) {writer.write(cbuff, 0, readedBytes);absWrittenBytes += readedBytes;}reader.close();writer.close();}private void load() throws SQLException {Connection conn = null;Statement stmt = null;try {conn = FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();ClearData.clearTables(stmt);stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (100, 'Living Thing')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (200, 'Inanimate Object')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (300, 'Dog')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (400, 'Sheltie')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (500, 'Eskimo')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (600, 'Person')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (700, 'Collar')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (800, 'Ball')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (401, 'Fido')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (501, 'Samantha')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (801, 'A collar')"");stmt.executeQuery(""select setval('objects_objectid_seq', 1000)"");stmt.executeUpdate(""insert into ClassLinkTypes (LinkName, LinkType) values ('hasa', 2)"");stmt.executeUpdate(""insert into ClassLinkTypes (LinkName, LinkType) values ('partof', 2)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (100, 'isa', 1)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (200, 'isa', 1)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (300, 'isa', 100)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (400, 'isa', 300)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (500, 'isa', 300)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (600, 'isa', 100)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (700, 'isa', 200)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (800, 'isa', 200)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (401, 'instance', 400)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (501, 'instance', 500)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (801, 'instance', 800)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (401, 'hasa', 801)"");stmt.executeUpdate(""insert into AttributeCategories (CategoryName) values ('color')"");stmt.executeUpdate(""insert into AttributeCategories (CategoryName) values ('weight')"");stmt.executeUpdate(""insert into AttributeCategories (CategoryName) values ('length')"");stmt.executeUpdate(""insert into Attributes (AttributeName, Category) values ('green', 'color')"");stmt.executeUpdate(""insert into Attributes (AttributeName, Category) values ('blue', 'color')"");stmt.executeUpdate(""insert into Attributes (AttributeName, Category) values ('light', 'weight')"");stmt.executeUpdate(""insert into Attributes (AttributeName, Category) values ('heavy', 'weight')"");stmt.executeUpdate(""insert into Attributes (AttributeName, Category) values ('short', 'length')"");stmt.executeUpdate(""insert into Attributes (AttributeName, Category) values ('long', 'length')"");stmt.executeUpdate(""insert into ObjectAttributes (ObjectId, AttributeName) values (401, 'light')"");stmt.executeUpdate(""insert into ObjectAttributes (ObjectId, AttributeName) values (401, 'short')"");stmt.executeUpdate(""insert into ObjectAttributes (ObjectId, AttributeName) values (801, 'blue')"");stmt.executeUpdate(""insert into Dictionary (Word, SenseNumber, GrammarString, ObjectId) values ('LEFT-WALL', '1', 'AV+ | NP+', 1)"");stmt.executeUpdate(""insert into Dictionary (Word, SenseNumber, GrammarString, ObjectId) values ('the', '1', 'D+', 1)"");stmt.executeUpdate(""insert into Dictionary (Word, SenseNumber, GrammarString, ObjectId) values ('big', '1', 'ADJ+', 400)"");stmt.executeUpdate(""insert into Dictionary (Word, SenseNumber, GrammarString, ObjectId) values ('dog', '1', '[@ADJ-] & [D-] & (S+ | DO- | PO- | NP-)', 700)"");stmt.executeUpdate(""insert into Dictionary (Word, SenseNumber, GrammarString, ObjectId) values ('run', '1', '[S-] & AV- & [PREP+]', 800)"");stmt.executeUpdate(""insert into Dictionary (Word, SenseNumber, GrammarString, ObjectId) values ('across', '1', 'PREP- & PO+', 800)"");stmt.executeUpdate(""insert into Dictionary (Word, SenseNumber, GrammarString, ObjectId) values ('street', '1', '[@ADJ-] & [D-] & (S+ | DO- | PO- | NP-)', 800)"");stmt.executeUpdate(""insert into AdjectivePrepositions (PrepositionName, ObjectId, LinkName) values ('with', 100, 'hasa')"");stmt.executeUpdate(""insert into AdjectivePrepositions (PrepositionName, ObjectId, LinkName) values ('in', 200, 'partof')"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'superlative', 1, 'good', 'best', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'superlative', 2, '*y', '*iest', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'superlative', 3, '*e', '*est', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'superlative', 4, '*', '*est', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'comparative', 1, 'good', 'better', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'comparative', 2, '*y', '*ier', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'comparative', 3, '*e', '*er', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'comparative', 4, '*', '*er', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'possessive', 1, '*s', '*s\\'', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'possessive', 2, '*', '*\\'s', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 1, 'be', 'being', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 2, '*Vy', '*Vying', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 3, '*c', '*cking', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 4, '*VVC', '*VVCing', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 5, '*VC', '*VCCing', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 6, '*ie', '*ying', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 7, '*e', '*ing', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 8, '*', '*ing', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 1, 'sing', 'sang', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 2, 'give', 'gave', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 3, 'swim', 'swam', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 4, 'have', 'had', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 5, 'run', 'ran', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 6, 'do', 'did', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 7, 'be', 'was', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 8, 'throw', 'threw', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 9, 'sleep', 'slept', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 10, '*c', '*cked', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 11, '*VVC', '*VVCed', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 12, '*VC', '*VCCed', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 13, '*y', '*ied', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 14, '*oe', '*oed', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 15, '*e', '*ed', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 16, '*', '*ed', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 1, 'sing', 'sung', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 2, 'give', 'given', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 3, 'swim', 'swum', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 4, 'have', 'had', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 5, 'do', 'done', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 6, 'be', 'been', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 7, 'sleep', 'slept', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 8, '*e', '*ed', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 9, '*', '*ed', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'first singular', 1, 'be', 'am', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'first singular', 2, 'have', 'have', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'first singular', 3, '*', '*', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'second singular', 1, 'be', 'are', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'second singular', 2, 'have', 'have', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'second singular', 3, '*', '*', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 1, 'be', 'is', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 2, 'have', 'has', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 3, 'do', 'do', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 4, '*ch', '*ches', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 5, '*sh', '*shes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 6, '*x', '*xes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 7, '*z', '*zes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 8, '*Cy', '*Cies', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 9, '*s', '*ses', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 10, '*o', '*oes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 11, '*', '*s', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'first plural', 1, 'be', 'are', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'first plural', 2, 'have', 'have', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'first plural', 3, '*', '*', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third plural', 1, 'be', 'are', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third plural', 2, 'have', 'have', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third plural', 3, '*', '*', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 1, 'leaf', 'leaves', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 2, 'knife', 'knives', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 3, 'elf', 'elves', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 4, 'half', 'halves', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 5, 'loaf', 'loaves', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 6, 'shelf', 'shelves', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 7, 'wife', 'wives', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 8, 'person', 'people', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 9, 'deer', 'deer', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 10, 'child', 'children', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 11, '*Co', '*Coes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 12, '*s', '*ses', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 13, '*ch', '*ches', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 14, '*sh', '*shes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 15, '*x', '*xes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 16, '*z', '*zes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 17, '*Cy', '*Cies', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 18, '*', '*s', TRUE)"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (1, '$N[.N]', 'D+', 100, 'money')"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (2, 'N/N/N', 'D+', 200, 'date')"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (3, '[/](C/)C', 'D+', 300, 'unix path')"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (4, '[A:](C\\\\)C', 'D+', 400, 'dos path')"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (5, 'N:N', 'D+', 500, 'time')"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (6, 'N.N.N.N', 'D+', 600, 'internet')"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (7, 'E(.E)', 'D+', 700, 'hostname')"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (8, '{+-}N[.N]', 'D+', 800, 'number')"");stmt.executeUpdate(""insert into Pronouns (Pronoun, Person, Gender, Plural) values ('i', 1, 3, FALSE)"");stmt.executeUpdate(""insert into Pronouns (Pronoun, Person, Gender, Plural) values ('we', 1, 3, TRUE)"");stmt.executeUpdate(""insert into Pronouns (Pronoun, Person, Gender, Plural) values ('they', 3, 3, TRUE)"");stmt.executeUpdate(""insert into Pronouns (Pronoun, Person, Gender, Plural) values ('he', 3, 1, FALSE)"");stmt.executeUpdate(""insert into Pronouns (Pronoun, Person, Gender, Plural) values ('she', 3, 2, FALSE)"");stmt.executeUpdate(""insert into Pronouns (Pronoun, Person, Gender, Plural) values ('it', 3, 3, FALSE)"");stmt.executeUpdate(""insert into Pronouns (Pronoun, Person, Gender, Plural) values ('you', 2, 3, FALSE)"");stmt.executeUpdate(""insert into FrameSlots (SlotName) values ('actor')"");stmt.executeUpdate(""insert into FrameSlots (SlotName) values ('origin')"");stmt.executeUpdate(""insert into FrameSlots (SlotName) values ('destination')"");stmt.executeUpdate(""insert into FrameSlots (SlotName) values ('object')"");stmt.executeUpdate(""insert into FrameSlots (SlotName) values ('instrument')"");stmt.executeUpdate(""insert into FrameSlots (SlotName) values ('beneficiary')"");stmt.executeUpdate(""insert into FrameSlots (SlotName) values ('location')"");stmt.executeUpdate(""insert into Verbs (VerbName, SubjectSlot, IndirectObjectSlot, PredicateNounSlot) values ('throw', 'actor', 'destination', 'object')"");stmt.executeUpdate(""insert into Verbs (VerbName, SubjectSlot, IndirectObjectSlot, PredicateNounSlot) values ('melt', 'actor', '', '')"");stmt.executeUpdate(""insert into Verbs (VerbName, SubjectSlot, IndirectObjectSlot, PredicateNounSlot) values ('kill', 'actor', '', 'object')"");stmt.executeUpdate(""insert into AdverbPrepositions (PrepositionName, ObjectId, FrameSlot) values ('with', 200, 'instrument')"");stmt.executeUpdate(""insert into AdverbPrepositions (PrepositionName, ObjectId, FrameSlot) values ('at', 1, 'location')"");stmt.executeUpdate(""insert into Articles (ArticleName, Dereference) values ('the', 1)"");stmt.executeUpdate(""insert into Articles (ArticleName, Dereference) values ('a', 2)"");stmt.executeUpdate(""insert into Articles (ArticleName, Dereference) values ('an', 2)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('S', 1)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('PN', 2)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('DO', 3)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('IO', 4)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('PO', 5)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('NP', 6)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('AV', 7)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('LV', 8)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('PREP', 9)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('D', 10)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('ADJ', 11)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('ADV', 12)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('CONJ', 13)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('INTJ', 14)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('PA', 15)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('HV', 16)"");stmt.executeQuery(""select setval('instructions_instructionid_seq', 1)"");int next = 2;stmt.executeUpdate(""insert into Instructions (Type, ExecuteString, FrameSlot, Operator, LinkName, ObjectId, AttributeName) "" + ""values (3, 'throw', null, 0, null, null, null)"");stmt.executeUpdate(""insert into Instructions (Type, ExecuteString, FrameSlot, Operator, LinkName, ObjectId, AttributeName) "" + ""values (3, 'test', null, 0, null, null, null)"");stmt.executeUpdate(""insert into Instructions (Type, ExecuteString, FrameSlot, Operator, LinkName, ObjectId, AttributeName) "" + ""values (2, null, 'actor', 1, 'hasa', '300', '')"");stmt.executeUpdate(""insert into Instructions (Type, ExecuteString, FrameSlot, Operator, LinkName, ObjectId, AttributeName) "" + ""values (2, null, 'instrument', 3, null, null, 'blue')"");stmt.executeUpdate(""insert into Instructions (Type, ExecuteString, FrameSlot, Operator, LinkName, ObjectId, AttributeName) "" + ""values (1, null, null, 0, null, null, null)"");stmt.executeUpdate(""insert into Instructions (Type, ExecuteString, FrameSlot, Operator, LinkName, ObjectId, AttributeName) "" + ""values (3, 'get', null, 0, null, null, null)"");stmt.executeUpdate(""insert into Instructions (Type, ExecuteString, FrameSlot, Operator, LinkName, ObjectId, AttributeName) "" + ""values (3, 'drop', null, 0, null, null, null)"");stmt.executeUpdate(""insert into InstructionGroups (InstructionId, Rank, GroupInstruction) values ("" + (next + 2) + "", 1, "" + (next + 0) + "")"");stmt.executeUpdate(""insert into InstructionGroups (InstructionId, Rank, GroupInstruction) values ("" + (next + 2) + "", 2, "" + (next + 1) + "")"");stmt.executeUpdate(""insert into InstructionGroups (InstructionId, Rank, GroupInstruction) values ("" + (next + 3) + "", 1, "" + (next + 1) + "")"");stmt.executeUpdate(""insert into InstructionGroups (InstructionId, Rank, GroupInstruction) values ("" + (next + 3) + "", 2, "" + (next + 0) + "")"");stmt.executeUpdate(""insert into InstructionGroups (InstructionId, Rank, GroupInstruction) values ("" + (next + 4) + "", 1, "" + (next + 2) + "")"");stmt.executeUpdate(""insert into InstructionGroups (InstructionId, Rank, GroupInstruction) values ("" + (next + 4) + "", 2, "" + (next + 3) + "")"");stmt.executeQuery(""select setval('transactions_transactionid_seq', 1)"");stmt.executeUpdate(""insert into Transactions (InstructionId, Description) values ("" + (next + 4) + "", 'throw something')"");stmt.executeUpdate(""insert into Transactions (InstructionId, Description) values ("" + (next + 5) + "", 'get something')"");stmt.executeUpdate(""insert into Transactions (InstructionId, Description) values ("" + (next + 6) + "", 'drop something')"");stmt.executeUpdate(""insert into TransactionPreconditions (TransactionId, IfFrameSlot, Operator, LinkName, LinkFrameSlot, AttributeName, SatisfyTransactionId) "" + ""values (2, 'actor', 1, 'hasa', 'object', '', 3)"");stmt.executeUpdate(""insert into TransactionPreconditions (TransactionId, IfFrameSlot, Operator, LinkName, LinkFrameSlot, AttributeName, SatisfyTransactionId) "" + ""values (2, 'object', 4, '', '', 'heavy', 4)"");stmt.executeUpdate(""insert into TransactionSlots (TransactionId, FrameSlot, InstructionId) values (2, 'object', "" + (next + 6) + "")"");stmt.executeUpdate(""insert into TransactionSlots (TransactionId, FrameSlot, InstructionId) values (2, 'destination', "" + (next + 5) + "")"");stmt.executeQuery(""select setval('verbtransactions_verbid_seq', 1)"");stmt.executeUpdate(""insert into VerbTransactions (VerbString, MoodType, TransactionId) values ('throw', 2, 2)"");stmt.executeUpdate(""insert into VerbConstraints (VerbId, FrameSlot, ObjectId) values (2, 'object', 200)"");stmt.executeUpdate(""update SystemProperties set value = 'Play Data' where name = 'DB Data Version'"");conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}}public static String MD5(String input) throws Exception {MessageDigest m = MessageDigest.getInstance(""MD5"");m.update(input.getBytes(), 0, input.length());input = new BigInteger(1, m.digest()).toString(16);if (input.length() == 31) input = ""0"" + input;return input;}public int getDBVersion() throws MigrationException {int dbVersion;PreparedStatement ps;try {Connection conn = getConnection();ps = conn.prepareStatement(""SELECT version FROM "" + getTablename());try {ResultSet rs = ps.executeQuery();try {if (rs.next()) {dbVersion = rs.getInt(1);if (rs.next()) {throw new MigrationException(""Too many version in table: "" + getTablename());}} else {ps.close();ps = conn.prepareStatement(""INSERT INTO "" + getTablename() + "" (version) VALUES (?)"");ps.setInt(1, 1);try {ps.executeUpdate();} finally {ps.close();}dbVersion = 1;}} finally {rs.close();}} finally {ps.close();}} catch (SQLException e) {logger.log(Level.WARNING, ""Could not access "" + tablename + "": "" + e);dbVersion = 0;Connection conn = getConnection();try {if (!conn.getAutoCommit()) {conn.rollback();}conn.setAutoCommit(false);} catch (SQLException e1) {throw new MigrationException(""Could not reset transaction state"", e1);}}return dbVersion;}"	5
"public static ArrayList<String> loadURLToStrings(URL url, int maxLines, String userAgent, int timeout) throws IOException {URLConnection connection = url.openConnection();if (userAgent != null && userAgent.trim().length() > 0) {connection.setRequestProperty(""User-Agent"", userAgent);} else {connection.setRequestProperty(""User-Agent"", ""Mozilla/5.0 (compatible; astrominer/1.0;)"");}if (timeout > 0) {connection.setConnectTimeout(timeout);}connection.connect();return loadURLToStrings(connection, maxLines);}public static void main(String[] args) {File srcDir = new File(args[0]);File dstDir = new File(args[1]);File[] srcFiles = srcDir.listFiles();for (File f : srcFiles) {if (f.isDirectory()) continue;try {FileChannel srcChannel = new FileInputStream(f).getChannel();FileChannel dstChannel = new FileOutputStream(dstDir.getAbsolutePath() + System.getProperty(""file.separator"") + f.getName()).getChannel();ByteBuffer buffer = ByteBuffer.allocate(1024);int nr = 0;srcChannel.position(nr);nr += srcChannel.read(buffer);while (nr < f.length()) {buffer.flip();dstChannel.write(buffer);buffer.clear();nr += srcChannel.read(buffer);}srcChannel.close();dstChannel.close();} catch (IOException e) {}}}@Overridepublic void loadTest(StoryCardModel story) {String strUrl = story.getStoryCard().getAcceptanceTestUrl();DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();DocumentBuilder loader;try {URL url = new URL(strUrl);loader = factory.newDocumentBuilder();Document document;document = loader.parse(url.openStream());this.numPass = Integer.parseInt(((Element) document.getElementsByTagName(""num-pass"").item(0)).getFirstChild().getNodeValue());this.numFail = Integer.parseInt(((Element) document.getElementsByTagName(""num-fail"").item(0)).getFirstChild().getNodeValue());this.numRuns = Integer.parseInt(((Element) document.getElementsByTagName(""num-runs"").item(0)).getFirstChild().getNodeValue());this.numExceptions = Integer.parseInt(((Element) document.getElementsByTagName(""num-exceptions"").item(0)).getFirstChild().getNodeValue());this.wikiText = ((Element) document.getElementsByTagName(""wiki"").item(0)).getFirstChild().getNodeValue();} catch (Exception e) {util.Logger.singleton().error(e);}}public void run() {if (data.length() > 0) {String method = getMethod();String action = getAction();URL url;try {URL actionURL;URL baseURL = hdoc.getBase();if (action == null) {String file = baseURL.getFile();actionURL = new URL(baseURL.getProtocol(), baseURL.getHost(), baseURL.getPort(), file);} else actionURL = new URL(baseURL, action);URLConnection connection;if (""post"".equalsIgnoreCase(method)) {url = actionURL;connection = url.openConnection();((HttpURLConnection) connection).setFollowRedirects(false);XRendererSupport.setCookies(url, connection);connection.setRequestProperty(""Accept-Language"", ""en-us"");connection.setRequestProperty(""User-Agent"", XRendererSupport.getContext().getUserAgent());postData(connection, data);XRendererSupport.getContext().getLogger().message(this, ""Posted data: {"" + data + ""}"");} else {url = new URL(actionURL + ""?"" + data);connection = url.openConnection();XRendererSupport.setCookies(url, connection);}connection.connect();in = connection.getInputStream();URL base = connection.getURL();XRendererSupport.getCookies(base, connection);XRendererSupport.getContext().getLogger().message(this, ""Stream got ok."");JEditorPane c = (JEditorPane) getContainer();HTMLEditorKit kit = (HTMLEditorKit) c.getEditorKit();newDoc = (HTMLDocument) kit.createDefaultDocument();newDoc.putProperty(Document.StreamDescriptionProperty, base);SwingUtilities.invokeLater(new Runnable() {public void run() {XRendererSupport.getContext().getLogger().message(this, ""loading..."");loadDocument();XRendererSupport.getContext().getLogger().message(this, ""document loaded..."");}});} catch (MalformedURLException m) {} catch (IOException e) {}}}public HttpResponse navigateTo(URI url) {log.debug(""navigateTo: "" + url.toString());HttpGet get = new HttpGet(url);try {HttpResponse response = client.execute(get);log.debug(response.getStatusLine());return response;} catch (ClientProtocolException e) {e.printStackTrace();return null;} catch (IOException e) {e.printStackTrace();return null;}}private static void copyFile(File in, File out) throws IOException {FileChannel inChannel = new FileInputStream(in).getChannel();FileChannel outChannel = new FileOutputStream(out).getChannel();try {inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {throw e;} finally {if (inChannel != null) inChannel.close();if (outChannel != null) outChannel.close();}}@Testpublic void mockingURLWorks() throws Exception {URL url = mock(URL.class);URLConnection urlConnectionMock = mock(URLConnection.class);when(url.openConnection()).thenReturn(urlConnectionMock);URLConnection openConnection = url.openConnection();assertSame(openConnection, urlConnectionMock);}public void readDocument(URL url) {stopTiming();try {String xmlData = """";BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String line = """";boolean cont = true;while (cont) {line = in.readLine();if (line == null) {break;}line = line.trim();if (line.length() > 0 && line.charAt(0) != '%') {xmlData = xmlData + line + System.getProperty(""line.separator"");}if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') {cont = false;}}XmlDataAdaptor readAdp = null;readAdp = XmlDataAdaptor.adaptorForString(xmlData, false);if (readAdp != null) {XmlDataAdaptor mpsfileData_Adaptor = readAdp.childAdaptor(dataRootName);if (mpsfileData_Adaptor != null) {setTitle(mpsfileData_Adaptor.stringValue(""title""));java.util.Iterator<XmlDataAdaptor> plotIt = mpsfileData_Adaptor.childAdaptorIterator(""Plot"");while (plotIt.hasNext()) {XmlDataAdaptor pvDA = plotIt.next();String name = pvDA.stringValue(""name"");String xMin = pvDA.stringValue(""xmin"");String xMax = pvDA.stringValue(""xmax"");String step = pvDA.stringValue(""step"");System.out.println(name + "" "" + xMax + "" "" + xMin + "" "" + step);bModel.setPlotAxes(name, xMin, xMax, step);}java.util.Iterator<XmlDataAdaptor> timingIt = mpsfileData_Adaptor.childAdaptorIterator(""TimingPV"");while (timingIt.hasNext()) {XmlDataAdaptor pvDA = timingIt.next();String name = pvDA.stringValue(""name"");bModel.setTimingPVName(name);}java.util.Iterator<XmlDataAdaptor> trigIt = mpsfileData_Adaptor.childAdaptorIterator(""Trigger"");while (trigIt.hasNext()) {XmlDataAdaptor pvDA = trigIt.next();String name = pvDA.stringValue(""name"");String type = pvDA.stringValue(""type"");bModel.addTrigger(name, type);}java.util.Iterator<XmlDataAdaptor> blmIt = mpsfileData_Adaptor.childAdaptorIterator(""BLMdevice"");while (blmIt.hasNext()) {XmlDataAdaptor pvDA = blmIt.next();String name = pvDA.stringValue(""name"");String section = pvDA.stringValue(""section"");String mpschan = pvDA.stringValue(""mpschan"");String devType = pvDA.stringValue(""devicetype"");String location = pvDA.stringValue(""locationz"");double locz = 0;try {locz = Double.parseDouble(location);} catch (NumberFormatException e) {locz = 0.0;}if (devType == null) bModel.addBLM(new IonizationChamber(name, section, mpschan, locz)); else if (devType.equals(""ND"")) bModel.addBLM(new NeutronDetector(name, section, mpschan, locz)); else if (devType.equals(""IC"")) bModel.addBLM(new IonizationChamber(name, section, mpschan, locz));}}}in.close();} catch (IOException exception) {System.out.println(""Fatal error. Something wrong with input file. Stop."");}startTiming();}public String getResource(String resourceName) throws IOException {InputStream resourceStream = resourceClass.getResourceAsStream(resourceName);ByteArrayOutputStream baos = new ByteArrayOutputStream(2048);IOUtils.copyAndClose(resourceStream, baos);String expected = new String(baos.toByteArray());return expected;}public static void copy(File source, File destination) {try {FileInputStream fileInputStream = new FileInputStream(source);FileOutputStream fileOutputStream = new FileOutputStream(destination);FileChannel inputChannel = fileInputStream.getChannel();FileChannel outputChannel = fileOutputStream.getChannel();transfer(inputChannel, outputChannel, source.length(), 1024 * 1024 * 32, true, true);fileInputStream.close();fileOutputStream.close();} catch (Exception e) {e.printStackTrace();}}"	5
"public void serveResource(HTTPResource resource, HttpServletRequest request, HttpServletResponse response) throws java.io.IOException {Image image = (Image) resource;log.debug(""Serving: "" + image);URL url = image.getResourceURL();int idx = url.toString().lastIndexOf(""."");String fn = image.getId() + url.toString().substring(idx);String cd = ""filename=\"""" + fn + ""\"""";response.setContentType(image.getContentType());log.debug(""LOADING: "" + url);IOUtil.copyData(response.getOutputStream(), url.openStream());}public static String getMD5Hash(String in) {StringBuffer result = new StringBuffer(32);try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(in.getBytes());Formatter f = new Formatter(result);for (byte b : md5.digest()) {f.format(""%02x"", b);}} catch (NoSuchAlgorithmException ex) {ex.printStackTrace();}return result.toString();}private String readRDF() {try {FileReader fileStream = new FileReader(GeoModel.PATH_STORED_FILES + ""rdfVersion.xml"");BufferedReader readBuf = new BufferedReader(fileStream);StringBuilder contents = new StringBuilder();String line;while ((line = readBuf.readLine()) != null) {contents.append(line);contents.append(System.getProperty(""line.separator""));}readBuf.close();return contents.toString();} catch (IOException e) {MessageViewer.infoMessage(mainFrame, ""You are running a demo version using data files fetched from the web.\nResults cannot be saved."");mainFrame.setTitle(mainFrame.getTitle() + "". You are running a demo version using data files fetched from the web. Results cannot be saved."");URL urlRdf;try {urlRdf = new URL(GeoModel.URL_STORED_FILES + ""rdfVersion.xml"");URLConnection urlConnRdf = urlRdf.openConnection();BufferedReader urlReader = new BufferedReader(new InputStreamReader(urlConnRdf.getInputStream()));StringBuilder contents = new StringBuilder();String line;while ((line = urlReader.readLine()) != null) {contents.append(line);contents.append(System.getProperty(""line.separator""));}urlReader.close();return contents.toString();} catch (Exception e1) {return null;}}}public static String hashClientPassword(String algorithm, String password, String salt) throws IllegalArgumentException, DruidSafeRuntimeException {if (algorithm == null) {throw new IllegalArgumentException(""THE ALGORITHM MUST NOT BE NULL"");}if (password == null) {throw new IllegalArgumentException(""THE PASSWORD MUST NOT BE NULL"");}if (salt == null) {salt = """";}String result = null;try {MessageDigest md = MessageDigest.getInstance(algorithm);md.update(password.getBytes());md.update(salt.getBytes());result = SecurityHelper.byteArrayToHexString(md.digest());} catch (NoSuchAlgorithmException e) {throw new DruidSafeRuntimeException(e);}return result;}public static Hashtable getNamingHashtable() {Hashtable namingHash = new Hashtable();URL url = AceTree.class.getResource(""/org/rhwlab/snight/namesHash.txt"");InputStream istream = null;try {istream = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(istream));String s;while (br.ready()) {s = br.readLine();if (s.length() == 0) continue;String[] sa = s.split("","");namingHash.put(sa[0], sa[1]);}br.close();} catch (Exception e) {e.printStackTrace();}return namingHash;}public static void copyFile(String fileName, String dstPath) throws IOException {FileChannel sourceChannel = new FileInputStream(fileName).getChannel();FileChannel destinationChannel = new FileOutputStream(dstPath).getChannel();sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel);sourceChannel.close();destinationChannel.close();}private void gerarFaturamento() {int opt = Funcoes.mensagemConfirma(null, ""Confirma o faturamento?"");if (opt == JOptionPane.OK_OPTION) {StringBuilder insert = new StringBuilder();insert.append(""INSERT INTO RPFATURAMENTO "");insert.append(""(CODEMP, CODFILIAL, CODPED, CODITPED, "");insert.append(""QTDFATURADO, VLRFATURADO, QTDPENDENTE, "");insert.append(""PERCCOMISFAT, VLRCOMISFAT, DTFATURADO ) "");insert.append(""VALUES"");insert.append(""(?,?,?,?,?,?,?,?,?,?)"");PreparedStatement ps;int parameterIndex;try {for (int i = 0; i < tab.getNumLinhas(); i++) {parameterIndex = 1;ps = con.prepareStatement(insert.toString());ps.setInt(parameterIndex++, AplicativoRep.iCodEmp);ps.setInt(parameterIndex++, ListaCampos.getMasterFilial(""RPFATURAMENTO""));ps.setInt(parameterIndex++, txtCodPed.getVlrInteger());ps.setInt(parameterIndex++, (Integer) tab.getValor(i, ETabNota.ITEM.ordinal()));ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QTDFATURADA.ordinal()));ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRFATURADO.ordinal()));ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QDTPENDENTE.ordinal()));ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.PERCCOMIS.ordinal()));ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRCOMIS.ordinal()));ps.setDate(parameterIndex++, Funcoes.dateToSQLDate(Calendar.getInstance().getTime()));ps.executeUpdate();}gerarFaturamento.setEnabled(false);gerarComissao.setEnabled(true);Funcoes.mensagemInforma(null, ""Faturamento criado para pedido "" + txtCodPed.getVlrInteger());con.commit();} catch (Exception e) {e.printStackTrace();Funcoes.mensagemErro(this, ""Erro ao gerar faturamento!\n"" + e.getMessage());try {con.rollback();} catch (SQLException e1) {e1.printStackTrace();}}}}private void gerarComissao() {int opt = Funcoes.mensagemConfirma(null, ""Confirma gerar comiss�es para o vendedor "" + txtNomeVend.getVlrString().trim() + ""?"");if (opt == JOptionPane.OK_OPTION) {StringBuilder insert = new StringBuilder();insert.append(""INSERT INTO RPCOMISSAO "");insert.append(""(CODEMP, CODFILIAL, CODPED, CODITPED, "");insert.append(""CODEMPVD, CODFILIALVD, CODVEND, VLRCOMISS ) "");insert.append(""VALUES "");insert.append(""(?,?,?,?,?,?,?,?)"");PreparedStatement ps;int parameterIndex;boolean gerou = false;try {for (int i = 0; i < tab.getNumLinhas(); i++) {if (((BigDecimal) tab.getValor(i, 8)).floatValue() > 0) {parameterIndex = 1;ps = con.prepareStatement(insert.toString());ps.setInt(parameterIndex++, AplicativoRep.iCodEmp);ps.setInt(parameterIndex++, ListaCampos.getMasterFilial(""RPCOMISSAO""));ps.setInt(parameterIndex++, txtCodPed.getVlrInteger());ps.setInt(parameterIndex++, (Integer) tab.getValor(i, ETabNota.ITEM.ordinal()));ps.setInt(parameterIndex++, AplicativoRep.iCodEmp);ps.setInt(parameterIndex++, ListaCampos.getMasterFilial(""RPVENDEDOR""));ps.setInt(parameterIndex++, txtCodVend.getVlrInteger());ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRCOMIS.ordinal()));ps.executeUpdate();gerou = true;}}if (gerou) {Funcoes.mensagemInforma(null, ""Comiss�o gerada para "" + txtNomeVend.getVlrString().trim());txtCodPed.setText(""0"");lcPedido.carregaDados();carregaTabela();con.commit();} else {Funcoes.mensagemInforma(null, ""N�o foi possiv�l gerar comiss�o!\nVerifique os valores das comiss�es dos itens."");}} catch (Exception e) {e.printStackTrace();Funcoes.mensagemErro(this, ""Erro ao gerar comiss�o!\n"" + e.getMessage());try {con.rollback();} catch (SQLException e1) {e1.printStackTrace();}}}}public void testImageDataField() {PropertySet propertySet = fetchPropertySet();try {ImageDataField dataField = propertySet.getDataField(PropertySetTestStruct.TESTBLOCK_IMAGE, ImageDataField.class);URL url = getClass().getResource(""JFire_Test.gif"");if (url == null) return;InputStream in = url.openStream();try {dataField.loadStream(in, ""JFire_Test.gif"", ""image/gif"");} finally {in.close();}} catch (Exception e) {throw new RuntimeException(""Setting image of ImageDataField failed"", e);}try {propertySet.deflate();getPropertyManager().storePropertySet(propertySet, true, FETCH_GROUPS, FETCH_DEPTH);} catch (Exception e) {throw new RuntimeException(""Storing PropertySet with ImageDataField failed"", e);}}public static boolean writeFile(HttpServletResponse resp, File reqFile) {boolean retVal = false;InputStream in = null;try {in = new BufferedInputStream(new FileInputStream(reqFile));IOUtils.copy(in, resp.getOutputStream());logger.debug(""File successful written to servlet response: "" + reqFile.getAbsolutePath());} catch (FileNotFoundException e) {logger.error(""Resource not found: "" + reqFile.getAbsolutePath());} catch (IOException e) {logger.error(String.format(""Error while rendering [%s]: %s"", reqFile.getAbsolutePath(), e.getMessage()), e);} finally {IOUtils.closeQuietly(in);}return retVal;}"	5
"public void sendLargePostRequest(final int size) throws IOException {String encodedData = URLEncoder.encode(""test"", WebCastellumParameter.DEFAULT_CHARACTER_ENCODING.getValue()) + ""="" + URLEncoder.encode(""this is just a mass test"", WebCastellumParameter.DEFAULT_CHARACTER_ENCODING.getValue());encodedData += ""&"" + URLEncoder.encode(""payload"", WebCastellumParameter.DEFAULT_CHARACTER_ENCODING.getValue()) + ""="" + createTestdata(size);final long start = System.currentTimeMillis();final long end;HttpURLConnection connection = (HttpURLConnection) this.url.openConnection();connection.setDoOutput(true);connection.setDoInput(true);connection.setUseCaches(false);connection.setFollowRedirects(true);connection.setInstanceFollowRedirects(true);connection.setRequestMethod(""POST"");connection.setRequestProperty(""Content-Type"", ""application/x-www-form-urlencoded"");connection.setRequestProperty(""Content-Length"", """" + encodedData.length());DataOutputStream output = null;BufferedReader reader = null;try {output = new DataOutputStream(connection.getOutputStream());output.writeBytes(encodedData);output.flush();reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));String line;while ((line = reader.readLine()) != null) {}end = System.currentTimeMillis();} finally {if (output != null) {try {output.close();} catch (IOException ignored) {}}if (reader != null) {try {reader.close();} catch (IOException ignored) {}}}System.out.println(""@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"");System.out.println(""Duration: "" + (end - start) + "" ms"");}@Overridepublic InitResult init(String name) {this.urlString = name;URL url;URLConnection con;try {url = new URL(urlString);con = url.openConnection();int size = con.getContentLength();char[] characters = new char[size];BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));in.read(characters);in.close();return new InitResult(0, size, characters);} catch (Exception e) {throw new ParserException(e);}}@Overridepublic void addApplication(Application app) {logger.info(""Adding a new application "" + app.getName() + "" by "" + app.getOrganisation() + "" ("" + app.getEmail() + "") "");app.setRegtime(new Timestamp(new Date().getTime()));try {MessageDigest md = MessageDigest.getInstance(""SHA-1"");md.update((app.getName() + app.getEmail() + app.getRegtime()).getBytes());byte byteData[] = md.digest();StringBuffer sb = new StringBuffer();for (int i = 0; i < byteData.length; i++) {sb.append(Integer.toString((byteData[i] & 0xff) + 0x100, 16).substring(1));}app.setAppid(sb.toString());} catch (NoSuchAlgorithmException ex) {java.util.logging.Logger.getLogger(ApplicationDAOImpl.class.getName()).log(Level.SEVERE, null, ex);}System.out.println(app.toString());SqlParameterSource parameters = new BeanPropertySqlParameterSource(app);Number appUid = insertApplication.executeAndReturnKey(parameters);app.setId(appUid.longValue());}@Test(dependsOnMethods = { ""getSize"" })public void download() throws IOException {FileObject typica = fsManager.resolveFile(""s3://"" + bucketName + ""/jonny.zip"");File localCache = File.createTempFile(""vfs."", "".s3-test"");FileOutputStream out = new FileOutputStream(localCache);IOUtils.copy(typica.getContent().getInputStream(), out);Assert.assertEquals(localCache.length(), typica.getContent().getSize());localCache.delete();}public String getMD5String(String par1Str) {try {String s = (new StringBuilder()).append(field_27370_a).append(par1Str).toString();MessageDigest messagedigest = MessageDigest.getInstance(""MD5"");messagedigest.update(s.getBytes(), 0, s.length());return (new BigInteger(1, messagedigest.digest())).toString(16);} catch (NoSuchAlgorithmException nosuchalgorithmexception) {throw new RuntimeException(nosuchalgorithmexception);}}public static String calculateHash(String data, String algorithm) {if (data == null) {return null;}algorithm = (algorithm == null ? INTERNAL : algorithm.toUpperCase());if (algorithm.equals(PLAIN)) {return data;}if (algorithm.startsWith(""{RSA}"")) {return encode(data, algorithm.substring(5), ""RSA"");}try {MessageDigest md = MessageDigest.getInstance(algorithm);md.update(data.getBytes(""UTF-8""));return getHashString(md.digest());} catch (UnsupportedEncodingException e) {logger.error(e.getMessage());return null;} catch (NoSuchAlgorithmException nsae) {logger.error(nsae.getMessage());return null;}}public static String md5Encode(String s) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(s.getBytes());return toHexString(md.digest());} catch (NoSuchAlgorithmException e) {e.printStackTrace();return s;}}public static String md5(String value) throws NoSuchAlgorithmException {MessageDigest messageDigest = MessageDigest.getInstance(""MD5"");try {messageDigest.update(value.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {messageDigest.update(value.getBytes());}byte[] bytes = messageDigest.digest();return byteArrayToHexString(bytes);}@Deprecatedpublic static Collection<SearchKeyResult> searchKey(String iText, String iKeyServer) throws Exception {List<SearchKeyResult> outVec = new ArrayList<SearchKeyResult>();String uri = iKeyServer + ""/pks/lookup?search="" + URLEncoder.encode(iText, UTF8);URL url = new URL(uri);BufferedReader input = new BufferedReader(new InputStreamReader(url.openStream()));Pattern regex = Pattern.compile(""pub.*?<a\\s+href\\s*=\""(.*?)\"".*?>\\s*(\\w+)\\s*</a>.*?(\\d+-\\d+-\\d+).*?<a\\s+href\\s*=\"".*?\"".*?>\\s*(.+?)\\s*</a>"", Pattern.CANON_EQ);String line;while ((line = input.readLine()) != null) {Matcher regexMatcher = regex.matcher(line);while (regexMatcher.find()) {String id = regexMatcher.group(2);String downUrl = iKeyServer + regexMatcher.group(1);String downDate = regexMatcher.group(3);String name = decodeHTML(regexMatcher.group(4));outVec.add(new SearchKeyResult(id, name, downDate, downUrl));}}IOUtils.closeQuietly(input);return outVec;}public static boolean urlStrIsDir(String urlStr) {if (urlStr.endsWith(""/"")) return true;int lastSlash = urlStr.lastIndexOf('/');int lastPeriod = urlStr.lastIndexOf('.');if (lastPeriod != -1 && (lastSlash == -1 || lastPeriod > lastSlash)) return false;String urlStrWithSlash = urlStr + ""/"";try {URL url = new URL(urlStrWithSlash);InputStream f = url.openStream();f.close();return true;} catch (Exception e) {return false;}}"	5
"private void downloadFile(String url, File destFile) {try {System.out.println(""Downloading "" + url + "" to "" + destFile + ""..."");destFile.getParentFile().mkdirs();OutputStream out = new FileOutputStream(destFile);URLConnection conn = new URL(url).openConnection();InputStream in = conn.getInputStream();int totalSize = conn.getContentLength(), downloadedSize = 0, size;byte[] buffer = new byte[32768];ProgressMonitor pm = new ProgressMonitor(null, ""Downloading "" + url, """", 0, totalSize);pm.setMillisToDecideToPopup(100);pm.setMillisToPopup(500);boolean canceled = false;while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) {out.write(buffer, 0, size);pm.setProgress(downloadedSize += size);pm.setNote((100 * downloadedSize / totalSize) + ""% finished"");}in.close();out.close();if (canceled) {destFile.delete();fatalError(""Starting canceled"", ""Downloading canceled. Exiting..."");}pm.close();} catch (IOException ex) {ex.printStackTrace();destFile.delete();fatalError(""Download Error"", ""Couldn't download file "" + url + "": "" + ex);}}public boolean validateZipFile(File zipFile) {String tempdir = Config.CONTEXT.getRealPath(getBackupTempFilePath());try {deleteTempFiles();File ftempDir = new File(tempdir);ftempDir.mkdirs();File tempZip = new File(tempdir + File.separator + zipFile.getName());tempZip.createNewFile();FileChannel ic = new FileInputStream(zipFile).getChannel();FileChannel oc = new FileOutputStream(tempZip).getChannel();for (long i = 0; i <= ic.size(); i++) {ic.transferTo(0, 1000000, oc);i = i + 999999;}ic.close();oc.close();if (zipFile != null && zipFile.getName().toLowerCase().endsWith("".zip"")) {ZipFile z = new ZipFile(zipFile);ZipUtil.extract(z, new File(Config.CONTEXT.getRealPath(backupTempFilePath)));}return true;} catch (Exception e) {Logger.error(this, ""Error with file"", e);return false;}}public String MD5(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""MD5"");byte[] md5hash = new byte[32];md.update(text.getBytes(""iso-8859-1""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);}private Reader getReader() throws IOException {if (data != null) {if (url != null) throw new IllegalArgumentException(""URL for source data and the data itself must never be specified together."");if (charset != null) throw new IllegalArgumentException(""Charset has sense only for URL-based data"");return new StringReader(data);} else if (url != null) {InputStream stream = url.openStream();if (charset == null) return new InputStreamReader(stream); else return new InputStreamReader(stream, charset);}return null;}public void open(String server, String user, String pass, int port, String option) throws Exception {log.info(""Login to FTP: "" + server);this.port = port;ftp = new FTPClient();ftp.connect(server, port);ftp.login(user, pass);checkReply(""FTP server refused connection."" + server);modeBINARY();this.me = this;}public void chmod(String remoteFile, String mode) {String remotePath = connector.getRemoteDirectory();remotePath += PATH_SEPARATOR + remoteFile;FTPClient ftp = new FTPClient();try {String hostname = connector.getUrl().getHost();ftp.connect(hostname);log.info(""Connected to "" + hostname);log.info(ftp.getReplyString());boolean loggedIn = ftp.login(connector.getUsername(), connector.getPassword());if (loggedIn) {String parameters = ""chmod "" + mode + "" "" + remotePath;ftp.site(parameters);ftp.logout();}ftp.disconnect();} catch (SocketException e) {log.error(""File chmod failed with message: "" + e.getMessage());} catch (IOException e) {log.error(""File chmod failed with message: "" + e.getMessage());} finally {if (ftp.isConnected()) {try {ftp.disconnect();} catch (IOException ioe) {}}}}public void delete(String remoteFile) {String remotePath = connector.getRemoteDirectory();remotePath += PATH_SEPARATOR + remoteFile;FTPClient ftp = new FTPClient();try {String hostname = connector.getUrl().getHost();ftp.connect(hostname);log.info(""Connected to "" + hostname);log.info(ftp.getReplyString());boolean loggedIn = ftp.login(connector.getUsername(), connector.getPassword());if (loggedIn) {ftp.deleteFile(remotePath);ftp.logout();}ftp.disconnect();} catch (SocketException e) {log.error(""File chmod failed with message: "" + e.getMessage());} catch (IOException e) {log.error(""File chmod failed with message: "" + e.getMessage());} finally {if (ftp.isConnected()) {try {ftp.disconnect();} catch (IOException ioe) {}}}}public Map<String, String> getMetadata(WebFileObject fo) throws IOException {if (!fo.wfs.getRootURL().getProtocol().equals(""ftp"")) {String realName = fo.pathname;boolean exists;URL ur = new URL(fo.wfs.getRootURL(), realName);HttpURLConnection connect = (HttpURLConnection) ur.openConnection();connect.setRequestMethod(""HEAD"");HttpURLConnection.setFollowRedirects(false);connect.connect();HttpURLConnection.setFollowRedirects(true);if (connect.getResponseCode() == 303) {String surl = connect.getHeaderField(""Location"");if (surl.startsWith(fo.wfs.root.toString())) {realName = surl.substring(fo.wfs.root.toString().length());}connect.disconnect();ur = new URL(fo.wfs.getRootURL(), realName);connect = (HttpURLConnection) ur.openConnection();connect.setRequestMethod(""HEAD"");connect.connect();}exists = connect.getResponseCode() != 404;Map<String, String> result = new HashMap<String, String>();Map<String, List<String>> fields = connect.getHeaderFields();for (Entry<String, List<String>> e : fields.entrySet()) {String key = e.getKey();List<String> value = e.getValue();result.put(key, value.get(0));}result.put(META_EXIST, String.valueOf(exists));connect.disconnect();return result;} else {Map<String, String> result = new HashMap<String, String>();URL url = new URL(fo.wfs.getRootURL(), fo.pathname);URLConnection urlc = url.openConnection();try {urlc.connect();urlc.getInputStream().close();result.put(META_EXIST, ""true"");} catch (IOException ex) {result.put(META_EXIST, ""false"");}return result;}}private void copy(File source, File destinationDirectory) throws IOException {if (source.isDirectory()) {File newDir = new File(destinationDirectory, source.getName());newDir.mkdir();File[] children = source.listFiles();for (int i = 0; i < children.length; i++) {if (children[i].getName().equals("".svn"")) {continue;}copy(children[i], newDir);}} else {File newFile = new File(destinationDirectory, source.getName());if (newFile.exists() && source.lastModified() == newFile.lastModified()) {return;}FileOutputStream output = new FileOutputStream(newFile);FileInputStream input = new FileInputStream(source);byte[] buff = new byte[2048];int read = 0;while ((read = input.read(buff)) > 0) {output.write(buff, 0, read);}output.flush();output.close();input.close();}}public synchronized String encrypt(String plaintext) {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");md.update(plaintext.getBytes(""UTF-8""));} catch (NoSuchAlgorithmException e) {log().error(""failed to encrypt the password."", e);throw new RuntimeException(""failed to encrypt the password."", e);} catch (UnsupportedEncodingException e) {log().error(""failed to encrypt the password."", e);throw new RuntimeException(""failed to encrypt the password."", e);}byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}"	5
"public static String hashPassword(String password) {String hashword = null;try {MessageDigest md5 = MessageDigest.getInstance(MESSAGE_DIGEST_ALGORITHM_MD5);md5.update(password.getBytes());BigInteger hash = new BigInteger(1, md5.digest());hashword = hash.toString(16);} catch (NoSuchAlgorithmException e) {logger.error(""Cannot find algorithm = '"" + MESSAGE_DIGEST_ALGORITHM_MD5 + ""'"", e);throw new IllegalStateException(e);}return pad(hashword, 32, '0');}public void run() {BufferedReader reader = null;log = ""Downloading... "" + name;setChanged();notifyObservers();try {Date marker = to;int previousSize = 0;list.clear();do {previousSize = list.size();URL url = new URL(createLink(from, marker));reader = new BufferedReader(new InputStreamReader(url.openStream()));String line = """";while ((line = reader.readLine()) != null) {try {IQuoteHistorical quote = parse(line + "","");if (quote != null && !list.contains(quote)) list.add(quote); else System.err.println(line);} catch (ParseException e) {e.printStackTrace();}}if (list.size() > 0) marker = list.get(list.size() - 1).getData();} while (marker.after(from) && previousSize != list.size());log = ""download Completed!"";} catch (MalformedURLException e) {e.printStackTrace();log = e.getMessage();} catch (IOException e) {e.printStackTrace();log = e.getMessage();} finally {try {if (reader != null) reader.close();} catch (IOException e) {e.printStackTrace();log = e.getMessage();}}setChanged();notifyObservers();}public void transaction() {String delPets = ""delete from PETS where PERSON_ID = 1"";String delPersons = ""delete from PERSONS where PERSON_ID = 1"";if (true) {System.out.println(delPets);System.out.println(delPersons);}Connection conn = null;Statement stmt = null;try {conn = ConnHelper.getConnectionByDriverManager();conn.setAutoCommit(false);stmt = conn.createStatement();int affectedRows = stmt.executeUpdate(delPets);System.out.println(""affectedRows = "" + affectedRows);if (true) {throw new SQLException(""fasfdsaf"");}affectedRows = stmt.executeUpdate(delPersons);System.out.println(""affectedRows = "" + affectedRows);conn.commit();conn.setAutoCommit(true);} catch (Exception e) {try {conn.rollback();} catch (SQLException e1) {e.printStackTrace(System.out);}e.printStackTrace(System.out);} finally {ConnHelper.close(conn, stmt, null);}}protected String getLibJSCode() throws IOException {if (cachedLibJSCode == null) {InputStream is = getClass().getResourceAsStream(JS_LIB_FILE);StringWriter output = new StringWriter();IOUtils.copy(is, output);cachedLibJSCode = output.toString();}return cachedLibJSCode;}@Overridepublic void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {resp.setContentType(""application/json"");resp.setCharacterEncoding(""utf-8"");EntityManager em = EMF.get().createEntityManager();String url = req.getRequestURL().toString();String key = req.getParameter(""key"");String format = req.getParameter(""format"");if (key == null || !key.equals(Keys.APPREGKEY)) {resp.setStatus(HttpServletResponse.SC_UNAUTHORIZED);if (format != null && format.equals(""xml"")) resp.getWriter().print(Error.notAuthorised("""").toXML(em)); else resp.getWriter().print(Error.notAuthorised("""").toJSON(em));em.close();return;}String appname = req.getParameter(""name"");if (appname == null || appname.equals("""")) {resp.setStatus(HttpServletResponse.SC_BAD_REQUEST);if (format != null && format.equals(""xml"")) resp.getWriter().print(Error.noAppId(null).toXML(em)); else resp.getWriter().print(Error.noAppId(null).toJSON(em));em.close();return;}StringBuffer appkey = new StringBuffer();try {MessageDigest algorithm = MessageDigest.getInstance(""MD5"");algorithm.reset();String api = System.nanoTime() + """" + System.identityHashCode(this) + """" + appname;algorithm.update(api.getBytes());byte[] digest = algorithm.digest();for (int i = 0; i < digest.length; i++) {appkey.append(Integer.toHexString(0xFF & digest[i]));}} catch (NoSuchAlgorithmException e) {resp.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);if (format != null && format.equals(""xml"")) resp.getWriter().print(Error.unknownError().toXML(em)); else resp.getWriter().print(Error.unknownError().toJSON(em));log.severe(e.toString());em.close();return;}ClientApp app = new ClientApp();app.setName(appname);app.setKey(appkey.toString());app.setNumreceipts(0L);EntityTransaction tx = em.getTransaction();tx.begin();try {em.persist(app);tx.commit();} catch (Throwable t) {log.severe(""Error persisting application "" + app.getName() + "": "" + t.getMessage());tx.rollback();resp.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);if (format != null && format.equals(""xml"")) resp.getWriter().print(Error.unknownError().toXML(em)); else resp.getWriter().print(Error.unknownError().toJSON(em));em.close();return;}resp.setStatus(HttpServletResponse.SC_CREATED);if (format != null && format.equals(""xml"")) resp.getWriter().print(app.toXML(em)); else resp.getWriter().print(app.toJSON(em));em.close();}public void execute(HttpResponse response) throws HttpException, IOException {StringBuffer content = new StringBuffer();NodeSet allNodes = membershipRegistry.listAllMembers();for (Node node : allNodes) {content.append(node.getId().toString());content.append(SystemUtils.LINE_SEPARATOR);}StringEntity body = new StringEntity(content.toString());body.setContentType(PLAIN_TEXT_RESPONSE_CONTENT_TYPE);response.setEntity(body);}public void setPassword(String password) {MessageDigest md;try {md = MessageDigest.getInstance(""SHA-256"");md.update(password.getBytes(""UTF-8""));byte[] digest = md.digest();String encodedPassword = Base64.encode(digest);this.password = encodedPassword;} catch (NoSuchAlgorithmException e) {logger.log(Level.SEVERE, ""Password creation failed"", e);throw new RuntimeException(e);} catch (UnsupportedEncodingException e) {logger.log(Level.SEVERE, ""Password creation failed"", e);throw new RuntimeException(e);}}public final void build() {if (!built_) {built_ = true;final boolean[] done = new boolean[] { false };Runnable runnable = new Runnable() {public void run() {try {exists_ = true;URL url = getContentURL();URLConnection cnx = url.openConnection();cnx.connect();lastModified_ = cnx.getLastModified();length_ = cnx.getContentLength();type_ = cnx.getContentType();if (isDirectory()) {InputStream in = cnx.getInputStream();BufferedReader nr = new BufferedReader(new InputStreamReader(in));FuVectorString v = readList(nr);nr.close();v.sort();v.uniq();list_ = v.toArray();}} catch (Exception ex) {exists_ = false;}done[0] = true;}};Thread t = new Thread(runnable, ""VfsFileUrl connection "" + getContentURL());t.setPriority(Math.max(Thread.MIN_PRIORITY, t.getPriority() - 1));t.start();for (int i = 0; i < 100; i++) {if (done[0]) break;try {Thread.sleep(300L);} catch (InterruptedException ex) {}}if (!done[0]) {t.interrupt();exists_ = false;canRead_ = false;FuLog.warning(""VFS: fail to get "" + url_);}}}public void run() {try {exists_ = true;URL url = getContentURL();URLConnection cnx = url.openConnection();cnx.connect();lastModified_ = cnx.getLastModified();length_ = cnx.getContentLength();type_ = cnx.getContentType();if (isDirectory()) {InputStream in = cnx.getInputStream();BufferedReader nr = new BufferedReader(new InputStreamReader(in));FuVectorString v = readList(nr);nr.close();v.sort();v.uniq();list_ = v.toArray();}} catch (Exception ex) {exists_ = false;}done[0] = true;}private String readData(URL url) {try {BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));StringBuffer responseBuffer = new StringBuffer();String line;while ((line = in.readLine()) != null) {responseBuffer.append(line);}in.close();return new String(responseBuffer);} catch (Exception e) {System.out.println(e);}return null;}"	5
"public static String encodeFromFile(String filename) throws java.io.IOException, URISyntaxException {String encodedData = null;Base641.InputStream bis = null;File file;try {URL url = new URL(filename);URLConnection conn = url.openConnection();file = new File(""myfile.doc"");java.io.InputStream inputStream = (java.io.InputStream) conn.getInputStream();FileOutputStream out = new FileOutputStream(file);byte buf[] = new byte[1024];int len;while ((len = inputStream.read(buf)) > 0) out.write(buf, 0, len);out.close();inputStream.close();byte[] buffer = new byte[Math.max((int) (file.length() * 1.4), 40)];int length = 0;int numBytes = 0;bis = new Base641.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(file)), Base641.ENCODE);while ((numBytes = bis.read(buffer, length, 4096)) >= 0) {length += numBytes;}encodedData = new String(buffer, 0, length, Base641.PREFERRED_ENCODING);} catch (java.io.IOException e) {throw e;} finally {try {bis.close();} catch (Exception e) {}}return encodedData;}public int doEndTag() throws JspException {JspWriter saida = pageContext.getOut();HttpURLConnection urlConnection = null;try {URL requisicao = new URL(((HttpServletRequest) pageContext.getRequest()).getRequestURL().toString());URL link = new URL(requisicao, url);urlConnection = (HttpURLConnection) link.openConnection();BufferedReader entrada = new BufferedReader(new InputStreamReader(urlConnection.getInputStream(), ""ISO-8859-1""));String linha = entrada.readLine();while (linha != null) {saida.write(linha + ""\n"");linha = entrada.readLine();}entrada.close();} catch (Exception e) {try {saida.write(""Erro ao incluir o conte�do da URL \"""" + url + ""\"""");} catch (IOException e1) {}} finally {if (urlConnection != null) {urlConnection.disconnect();}}return super.doEndTag();}public static boolean copy(File source, File dest) {FileChannel in = null, out = null;try {in = new FileInputStream(source).getChannel();out = new FileOutputStream(dest).getChannel();long size = in.size();MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buf);if (in != null) in.close();if (out != null) out.close();} catch (IOException e) {e.printStackTrace();return false;}return true;}private void putAlgosFromJar(File jarfile, AlgoDir dir, Model model) throws FileNotFoundException, IOException {URLClassLoader urlLoader = new URLClassLoader(new URL[] { jarfile.toURI().toURL() });JarInputStream jis = new JarInputStream(new FileInputStream(jarfile));JarEntry entry = jis.getNextJarEntry();String name = null;String tmpdir = System.getProperty(""user.dir"") + File.separator + Application.getProperty(""dir.tmp"") + File.separator;byte[] buffer = new byte[1000];while (entry != null) {name = entry.getName();if (name.endsWith("".class"")) {name = name.substring(0, name.length() - 6);name = name.replace('/', '.');try {Class<?> cls = urlLoader.loadClass(name);if (IAlgorithm.class.isAssignableFrom(cls) && !cls.isInterface() && ((cls.getModifiers() & Modifier.ABSTRACT) == 0)) {dir.addAlgorithm(cls);model.putClass(cls.getName(), cls);} else if (ISerializable.class.isAssignableFrom(cls)) {model.putClass(cls.getName(), cls);}} catch (ClassNotFoundException e) {e.printStackTrace();}} else if (Constants.isAllowedImageType(name)) {int lastSep = name.lastIndexOf(""/"");if (lastSep != -1) {String dirs = tmpdir + name.substring(0, lastSep);File d = new File(dirs);if (!d.exists()) d.mkdirs();}String filename = tmpdir + name;File f = new File(filename);if (!f.exists()) {f.createNewFile();FileOutputStream fos = new FileOutputStream(f);int read = -1;while ((read = jis.read(buffer)) != -1) {fos.write(buffer, 0, read);}fos.close();}}entry = jis.getNextJarEntry();}}static String getMD5Hash(String str) throws NoSuchAlgorithmException {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(str.getBytes());byte[] b = md.digest();StringBuffer sb = new StringBuffer();for (int i = 0; i < b.length; i++) {int v = (int) b[i];v = v < 0 ? 0x100 + v : v;String cc = Integer.toHexString(v);if (cc.length() == 1) sb.append('0');sb.append(cc);}return sb.toString();}public static void copyFile(File sourceFile, File destFile) throws IOException {if (!destFile.exists()) {destFile.createNewFile();}FileChannel source = null;FileChannel destination = null;try {source = new FileInputStream(sourceFile).getChannel();destination = new FileOutputStream(destFile).getChannel();destination.transferFrom(source, 0, source.size());} finally {if (source != null) {source.close();}if (destination != null) {destination.close();}}}public String login() {String authSuccess = ""false"";try {String errorMesg = """";int error;if ((error = utils.stringIsNull(passwd)) != -1) {errorMesg += rb.getString(""passwdField"") + "": "" + utils.errors[error] + "" "";} else if ((error = utils.stringIsEmpty(passwd)) != -1) {errorMesg += rb.getString(""passwdField"") + "": "" + utils.errors[error] + "" "";}if ((error = utils.stringIsNull(login)) != -1) {errorMesg += rb.getString(""loginField"") + "": "" + utils.errors[error] + "" "";} else if ((error = utils.stringIsEmpty(login)) != -1) {errorMesg += rb.getString(""loginField"") + "": "" + utils.errors[error] + "" "";}String[] admins = conf.getProperty(""admin"").split(""\\s"");boolean admin = false;for (int i = 0; i < admins.length; i++) {if (admins[i].equals(login)) {admin = true;}}if (!admin) {errorMesg += rb.getString(""noAdmin"");session.invalidate();} else {session.setAttribute(""conf"", conf);}if (errorMesg.length() > 0) {status = errorMesg;System.out.println(status);FacesContext context = FacesContext.getCurrentInstance();context.renderResponse();} else {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.reset();md5.update(passwd.getBytes());byte[] result = md5.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < result.length; i++) {String hex = Integer.toHexString(0xFF & result[i]);if (hex.length() == 1) {hexString.append('0');}hexString.append(hex);}authSuccess = (sqlManager.getPassword(login).equals(hexString.toString())) ? ""true"" : ""false"";if (authSuccess.equals(""false"")) session.invalidate();}} catch (NoSuchAlgorithmException nsae) {utils.catchExp(nsae);status = utils.getStatus();if (stacktrace) {stackTrace = utils.getStackTrace();}FacesContext.getCurrentInstance().renderResponse();} catch (SQLException sqle) {utils.catchExp(sqle);status = utils.getStatus();if (stacktrace) {stackTrace = utils.getStackTrace();}FacesContext.getCurrentInstance().renderResponse();}return authSuccess;}public static String getEncodedHex(String text) {MessageDigest md = null;String encodedString = null;try {md = MessageDigest.getInstance(""MD5"");md.update(text.getBytes());} catch (NoSuchAlgorithmException e) {e.printStackTrace();}Hex hex = new Hex();encodedString = new String(hex.encode(md.digest()));md.reset();return encodedString;}private boolean copyFile(File inFile, File outFile) {BufferedReader reader = null;BufferedWriter writer = null;try {reader = new BufferedReader(new FileReader(inFile));writer = new BufferedWriter(new FileWriter(outFile));while (reader.ready()) {writer.write(reader.read());}writer.flush();} catch (IOException ex) {ex.printStackTrace();} finally {if (reader != null) {try {reader.close();} catch (IOException ex) {ex.printStackTrace();return false;}}if (writer != null) {try {writer.close();} catch (IOException ex) {return false;}}}return true;}private String generateHash(String key, String data) throws ChiropteraException {try {MessageDigest md = MessageDigest.getInstance(Constants.Connection.Auth.MD5);md.update(key.getBytes());byte[] raw = md.digest();String s = toHexString(raw);SecretKey skey = new SecretKeySpec(s.getBytes(), Constants.Connection.Auth.HMACMD5);Mac mac = Mac.getInstance(skey.getAlgorithm());mac.init(skey);byte digest[] = mac.doFinal(data.getBytes());String digestB64 = BaculaBase64.binToBase64(digest);return digestB64.substring(0, digestB64.length());} catch (NoSuchAlgorithmException e) {throw new ChiropteraException(Constants.Chiroptera.Errors.HASH, e.getMessage(), e);} catch (InvalidKeyException e) {throw new ChiropteraException(Constants.Chiroptera.Errors.HASH, e.getMessage(), e);}}"	5
"public Object process(Atom oAtm) throws IOException {File oFile;FileReader oFileRead;String sPathHTML;char cBuffer[];Object oReplaced;final String sSep = System.getProperty(""file.separator"");if (DebugFile.trace) {DebugFile.writeln(""Begin FileDumper.process([Job:"" + getStringNull(DB.gu_job, """") + "", Atom:"" + String.valueOf(oAtm.getInt(DB.pg_atom)) + ""])"");DebugFile.incIdent();}if (bHasReplacements) {sPathHTML = getProperty(""workareasput"");if (!sPathHTML.endsWith(sSep)) sPathHTML += sSep;sPathHTML += getParameter(""gu_workarea"") + sSep + ""apps"" + sSep + ""Mailwire"" + sSep + ""html"" + sSep + getParameter(""gu_pageset"") + sSep;sPathHTML += getParameter(""nm_pageset"").replace(' ', '_') + "".html"";if (DebugFile.trace) DebugFile.writeln(""PathHTML = "" + sPathHTML);oReplaced = oReplacer.replace(sPathHTML, oAtm.getItemMap());bHasReplacements = (oReplacer.lastReplacements() > 0);} else {oReplaced = null;if (null != oFileStr) oReplaced = oFileStr.get();if (null == oReplaced) {sPathHTML = getProperty(""workareasput"");if (!sPathHTML.endsWith(sSep)) sPathHTML += sSep;sPathHTML += getParameter(""gu_workarea"") + sSep + ""apps"" + sSep + ""Mailwire"" + sSep + ""html"" + sSep + getParameter(""gu_pageset"") + sSep + getParameter(""nm_pageset"").replace(' ', '_') + "".html"";if (DebugFile.trace) DebugFile.writeln(""PathHTML = "" + sPathHTML);oFile = new File(sPathHTML);cBuffer = new char[new Long(oFile.length()).intValue()];oFileRead = new FileReader(oFile);oFileRead.read(cBuffer);oFileRead.close();if (DebugFile.trace) DebugFile.writeln(String.valueOf(cBuffer.length) + "" characters readed"");oReplaced = new String(cBuffer);oFileStr = new SoftReference(oReplaced);}}String sPathJobDir = getProperty(""storage"");if (!sPathJobDir.endsWith(sSep)) sPathJobDir += sSep;sPathJobDir += ""jobs"" + sSep + getParameter(""gu_workarea"") + sSep + getString(DB.gu_job) + sSep;FileWriter oFileWrite = new FileWriter(sPathJobDir + getString(DB.gu_job) + ""_"" + String.valueOf(oAtm.getInt(DB.pg_atom)) + "".html"", true);oFileWrite.write((String) oReplaced);oFileWrite.close();iPendingAtoms--;if (DebugFile.trace) {DebugFile.writeln(""End FileDumper.process([Job:"" + getStringNull(DB.gu_job, """") + "", Atom:"" + String.valueOf(oAtm.getInt(DB.pg_atom)) + ""])"");DebugFile.decIdent();}return oReplaced;}public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException {InputStream inputStream = url.openStream();try {return getAudioInputStream(inputStream);} catch (UnsupportedAudioFileException e) {inputStream.close();throw e;} catch (IOException e) {inputStream.close();throw e;}}public void transport(File file) throws TransportException {if (file.exists()) {if (file.isDirectory()) {File[] files = file.listFiles();for (int i = 0; i < files.length; i++) {transport(file);}} else if (file.isFile()) {try {FileChannel inChannel = new FileInputStream(file).getChannel();FileChannel outChannel = new FileOutputStream(destinationDir).getChannel();inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {log.error(""File transfer failed"", e);}}}}public static void copyTo(File inFile, File outFile) throws IOException {char[] cbuff = new char[32768];BufferedReader reader = new BufferedReader(new FileReader(inFile));BufferedWriter writer = new BufferedWriter(new FileWriter(outFile));int readedBytes = 0;long absWrittenBytes = 0;while ((readedBytes = reader.read(cbuff, 0, cbuff.length)) != -1) {writer.write(cbuff, 0, readedBytes);absWrittenBytes += readedBytes;}reader.close();writer.close();}private void load() throws SQLException {Connection conn = null;Statement stmt = null;try {conn = FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();ClearData.clearTables(stmt);stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (100, 'Living Thing')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (200, 'Inanimate Object')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (300, 'Dog')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (400, 'Sheltie')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (500, 'Eskimo')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (600, 'Person')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (700, 'Collar')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (800, 'Ball')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (401, 'Fido')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (501, 'Samantha')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (801, 'A collar')"");stmt.executeQuery(""select setval('objects_objectid_seq', 1000)"");stmt.executeUpdate(""insert into ClassLinkTypes (LinkName, LinkType) values ('hasa', 2)"");stmt.executeUpdate(""insert into ClassLinkTypes (LinkName, LinkType) values ('partof', 2)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (100, 'isa', 1)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (200, 'isa', 1)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (300, 'isa', 100)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (400, 'isa', 300)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (500, 'isa', 300)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (600, 'isa', 100)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (700, 'isa', 200)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (800, 'isa', 200)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (401, 'instance', 400)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (501, 'instance', 500)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (801, 'instance', 800)"");stmt.executeUpdate(""insert into ObjectLinks (ObjectId, LinkName, LinkToObject) values (401, 'hasa', 801)"");stmt.executeUpdate(""insert into AttributeCategories (CategoryName) values ('color')"");stmt.executeUpdate(""insert into AttributeCategories (CategoryName) values ('weight')"");stmt.executeUpdate(""insert into AttributeCategories (CategoryName) values ('length')"");stmt.executeUpdate(""insert into Attributes (AttributeName, Category) values ('green', 'color')"");stmt.executeUpdate(""insert into Attributes (AttributeName, Category) values ('blue', 'color')"");stmt.executeUpdate(""insert into Attributes (AttributeName, Category) values ('light', 'weight')"");stmt.executeUpdate(""insert into Attributes (AttributeName, Category) values ('heavy', 'weight')"");stmt.executeUpdate(""insert into Attributes (AttributeName, Category) values ('short', 'length')"");stmt.executeUpdate(""insert into Attributes (AttributeName, Category) values ('long', 'length')"");stmt.executeUpdate(""insert into ObjectAttributes (ObjectId, AttributeName) values (401, 'light')"");stmt.executeUpdate(""insert into ObjectAttributes (ObjectId, AttributeName) values (401, 'short')"");stmt.executeUpdate(""insert into ObjectAttributes (ObjectId, AttributeName) values (801, 'blue')"");stmt.executeUpdate(""insert into Dictionary (Word, SenseNumber, GrammarString, ObjectId) values ('LEFT-WALL', '1', 'AV+ | NP+', 1)"");stmt.executeUpdate(""insert into Dictionary (Word, SenseNumber, GrammarString, ObjectId) values ('the', '1', 'D+', 1)"");stmt.executeUpdate(""insert into Dictionary (Word, SenseNumber, GrammarString, ObjectId) values ('big', '1', 'ADJ+', 400)"");stmt.executeUpdate(""insert into Dictionary (Word, SenseNumber, GrammarString, ObjectId) values ('dog', '1', '[@ADJ-] & [D-] & (S+ | DO- | PO- | NP-)', 700)"");stmt.executeUpdate(""insert into Dictionary (Word, SenseNumber, GrammarString, ObjectId) values ('run', '1', '[S-] & AV- & [PREP+]', 800)"");stmt.executeUpdate(""insert into Dictionary (Word, SenseNumber, GrammarString, ObjectId) values ('across', '1', 'PREP- & PO+', 800)"");stmt.executeUpdate(""insert into Dictionary (Word, SenseNumber, GrammarString, ObjectId) values ('street', '1', '[@ADJ-] & [D-] & (S+ | DO- | PO- | NP-)', 800)"");stmt.executeUpdate(""insert into AdjectivePrepositions (PrepositionName, ObjectId, LinkName) values ('with', 100, 'hasa')"");stmt.executeUpdate(""insert into AdjectivePrepositions (PrepositionName, ObjectId, LinkName) values ('in', 200, 'partof')"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'superlative', 1, 'good', 'best', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'superlative', 2, '*y', '*iest', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'superlative', 3, '*e', '*est', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'superlative', 4, '*', '*est', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'comparative', 1, 'good', 'better', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'comparative', 2, '*y', '*ier', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'comparative', 3, '*e', '*er', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'comparative', 4, '*', '*er', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'possessive', 1, '*s', '*s\\'', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'possessive', 2, '*', '*\\'s', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 1, 'be', 'being', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 2, '*Vy', '*Vying', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 3, '*c', '*cking', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 4, '*VVC', '*VVCing', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 5, '*VC', '*VCCing', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 6, '*ie', '*ying', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 7, '*e', '*ing', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'present perfect', 8, '*', '*ing', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 1, 'sing', 'sang', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 2, 'give', 'gave', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 3, 'swim', 'swam', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 4, 'have', 'had', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 5, 'run', 'ran', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 6, 'do', 'did', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 7, 'be', 'was', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 8, 'throw', 'threw', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 9, 'sleep', 'slept', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 10, '*c', '*cked', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 11, '*VVC', '*VVCed', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 12, '*VC', '*VCCed', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 13, '*y', '*ied', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 14, '*oe', '*oed', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 15, '*e', '*ed', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past', 16, '*', '*ed', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 1, 'sing', 'sung', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 2, 'give', 'given', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 3, 'swim', 'swum', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 4, 'have', 'had', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 5, 'do', 'done', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 6, 'be', 'been', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 7, 'sleep', 'slept', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 8, '*e', '*ed', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'past perfect', 9, '*', '*ed', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'first singular', 1, 'be', 'am', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'first singular', 2, 'have', 'have', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'first singular', 3, '*', '*', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'second singular', 1, 'be', 'are', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'second singular', 2, 'have', 'have', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'second singular', 3, '*', '*', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 1, 'be', 'is', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 2, 'have', 'has', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 3, 'do', 'do', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 4, '*ch', '*ches', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 5, '*sh', '*shes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 6, '*x', '*xes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 7, '*z', '*zes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 8, '*Cy', '*Cies', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 9, '*s', '*ses', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 10, '*o', '*oes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third singular', 11, '*', '*s', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'first plural', 1, 'be', 'are', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'first plural', 2, 'have', 'have', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'first plural', 3, '*', '*', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third plural', 1, 'be', 'are', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third plural', 2, 'have', 'have', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'third plural', 3, '*', '*', FALSE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 1, 'leaf', 'leaves', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 2, 'knife', 'knives', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 3, 'elf', 'elves', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 4, 'half', 'halves', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 5, 'loaf', 'loaves', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 6, 'shelf', 'shelves', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 7, 'wife', 'wives', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 8, 'person', 'people', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 9, 'deer', 'deer', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 10, 'child', 'children', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 11, '*Co', '*Coes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 12, '*s', '*ses', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 13, '*ch', '*ches', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 14, '*sh', '*shes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 15, '*x', '*xes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 16, '*z', '*zes', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 17, '*Cy', '*Cies', TRUE)"");stmt.executeUpdate(""insert into LanguageMorphologies (LanguageName, MorphologyTag, Rank, Root, Surface, Used) values ('English', 'plural', 18, '*', '*s', TRUE)"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (1, '$N[.N]', 'D+', 100, 'money')"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (2, 'N/N/N', 'D+', 200, 'date')"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (3, '[/](C/)C', 'D+', 300, 'unix path')"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (4, '[A:](C\\\\)C', 'D+', 400, 'dos path')"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (5, 'N:N', 'D+', 500, 'time')"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (6, 'N.N.N.N', 'D+', 600, 'internet')"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (7, 'E(.E)', 'D+', 700, 'hostname')"");stmt.executeUpdate(""insert into WordClassifications (Rank, Pattern, GrammarString, ObjectId, Description) values (8, '{+-}N[.N]', 'D+', 800, 'number')"");stmt.executeUpdate(""insert into Pronouns (Pronoun, Person, Gender, Plural) values ('i', 1, 3, FALSE)"");stmt.executeUpdate(""insert into Pronouns (Pronoun, Person, Gender, Plural) values ('we', 1, 3, TRUE)"");stmt.executeUpdate(""insert into Pronouns (Pronoun, Person, Gender, Plural) values ('they', 3, 3, TRUE)"");stmt.executeUpdate(""insert into Pronouns (Pronoun, Person, Gender, Plural) values ('he', 3, 1, FALSE)"");stmt.executeUpdate(""insert into Pronouns (Pronoun, Person, Gender, Plural) values ('she', 3, 2, FALSE)"");stmt.executeUpdate(""insert into Pronouns (Pronoun, Person, Gender, Plural) values ('it', 3, 3, FALSE)"");stmt.executeUpdate(""insert into Pronouns (Pronoun, Person, Gender, Plural) values ('you', 2, 3, FALSE)"");stmt.executeUpdate(""insert into FrameSlots (SlotName) values ('actor')"");stmt.executeUpdate(""insert into FrameSlots (SlotName) values ('origin')"");stmt.executeUpdate(""insert into FrameSlots (SlotName) values ('destination')"");stmt.executeUpdate(""insert into FrameSlots (SlotName) values ('object')"");stmt.executeUpdate(""insert into FrameSlots (SlotName) values ('instrument')"");stmt.executeUpdate(""insert into FrameSlots (SlotName) values ('beneficiary')"");stmt.executeUpdate(""insert into FrameSlots (SlotName) values ('location')"");stmt.executeUpdate(""insert into Verbs (VerbName, SubjectSlot, IndirectObjectSlot, PredicateNounSlot) values ('throw', 'actor', 'destination', 'object')"");stmt.executeUpdate(""insert into Verbs (VerbName, SubjectSlot, IndirectObjectSlot, PredicateNounSlot) values ('melt', 'actor', '', '')"");stmt.executeUpdate(""insert into Verbs (VerbName, SubjectSlot, IndirectObjectSlot, PredicateNounSlot) values ('kill', 'actor', '', 'object')"");stmt.executeUpdate(""insert into AdverbPrepositions (PrepositionName, ObjectId, FrameSlot) values ('with', 200, 'instrument')"");stmt.executeUpdate(""insert into AdverbPrepositions (PrepositionName, ObjectId, FrameSlot) values ('at', 1, 'location')"");stmt.executeUpdate(""insert into Articles (ArticleName, Dereference) values ('the', 1)"");stmt.executeUpdate(""insert into Articles (ArticleName, Dereference) values ('a', 2)"");stmt.executeUpdate(""insert into Articles (ArticleName, Dereference) values ('an', 2)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('S', 1)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('PN', 2)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('DO', 3)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('IO', 4)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('PO', 5)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('NP', 6)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('AV', 7)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('LV', 8)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('PREP', 9)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('D', 10)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('ADJ', 11)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('ADV', 12)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('CONJ', 13)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('INTJ', 14)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('PA', 15)"");stmt.executeUpdate(""insert into GrammarLinks (LinkName, LinkType) values ('HV', 16)"");stmt.executeQuery(""select setval('instructions_instructionid_seq', 1)"");int next = 2;stmt.executeUpdate(""insert into Instructions (Type, ExecuteString, FrameSlot, Operator, LinkName, ObjectId, AttributeName) "" + ""values (3, 'throw', null, 0, null, null, null)"");stmt.executeUpdate(""insert into Instructions (Type, ExecuteString, FrameSlot, Operator, LinkName, ObjectId, AttributeName) "" + ""values (3, 'test', null, 0, null, null, null)"");stmt.executeUpdate(""insert into Instructions (Type, ExecuteString, FrameSlot, Operator, LinkName, ObjectId, AttributeName) "" + ""values (2, null, 'actor', 1, 'hasa', '300', '')"");stmt.executeUpdate(""insert into Instructions (Type, ExecuteString, FrameSlot, Operator, LinkName, ObjectId, AttributeName) "" + ""values (2, null, 'instrument', 3, null, null, 'blue')"");stmt.executeUpdate(""insert into Instructions (Type, ExecuteString, FrameSlot, Operator, LinkName, ObjectId, AttributeName) "" + ""values (1, null, null, 0, null, null, null)"");stmt.executeUpdate(""insert into Instructions (Type, ExecuteString, FrameSlot, Operator, LinkName, ObjectId, AttributeName) "" + ""values (3, 'get', null, 0, null, null, null)"");stmt.executeUpdate(""insert into Instructions (Type, ExecuteString, FrameSlot, Operator, LinkName, ObjectId, AttributeName) "" + ""values (3, 'drop', null, 0, null, null, null)"");stmt.executeUpdate(""insert into InstructionGroups (InstructionId, Rank, GroupInstruction) values ("" + (next + 2) + "", 1, "" + (next + 0) + "")"");stmt.executeUpdate(""insert into InstructionGroups (InstructionId, Rank, GroupInstruction) values ("" + (next + 2) + "", 2, "" + (next + 1) + "")"");stmt.executeUpdate(""insert into InstructionGroups (InstructionId, Rank, GroupInstruction) values ("" + (next + 3) + "", 1, "" + (next + 1) + "")"");stmt.executeUpdate(""insert into InstructionGroups (InstructionId, Rank, GroupInstruction) values ("" + (next + 3) + "", 2, "" + (next + 0) + "")"");stmt.executeUpdate(""insert into InstructionGroups (InstructionId, Rank, GroupInstruction) values ("" + (next + 4) + "", 1, "" + (next + 2) + "")"");stmt.executeUpdate(""insert into InstructionGroups (InstructionId, Rank, GroupInstruction) values ("" + (next + 4) + "", 2, "" + (next + 3) + "")"");stmt.executeQuery(""select setval('transactions_transactionid_seq', 1)"");stmt.executeUpdate(""insert into Transactions (InstructionId, Description) values ("" + (next + 4) + "", 'throw something')"");stmt.executeUpdate(""insert into Transactions (InstructionId, Description) values ("" + (next + 5) + "", 'get something')"");stmt.executeUpdate(""insert into Transactions (InstructionId, Description) values ("" + (next + 6) + "", 'drop something')"");stmt.executeUpdate(""insert into TransactionPreconditions (TransactionId, IfFrameSlot, Operator, LinkName, LinkFrameSlot, AttributeName, SatisfyTransactionId) "" + ""values (2, 'actor', 1, 'hasa', 'object', '', 3)"");stmt.executeUpdate(""insert into TransactionPreconditions (TransactionId, IfFrameSlot, Operator, LinkName, LinkFrameSlot, AttributeName, SatisfyTransactionId) "" + ""values (2, 'object', 4, '', '', 'heavy', 4)"");stmt.executeUpdate(""insert into TransactionSlots (TransactionId, FrameSlot, InstructionId) values (2, 'object', "" + (next + 6) + "")"");stmt.executeUpdate(""insert into TransactionSlots (TransactionId, FrameSlot, InstructionId) values (2, 'destination', "" + (next + 5) + "")"");stmt.executeQuery(""select setval('verbtransactions_verbid_seq', 1)"");stmt.executeUpdate(""insert into VerbTransactions (VerbString, MoodType, TransactionId) values ('throw', 2, 2)"");stmt.executeUpdate(""insert into VerbConstraints (VerbId, FrameSlot, ObjectId) values (2, 'object', 200)"");stmt.executeUpdate(""update SystemProperties set value = 'Play Data' where name = 'DB Data Version'"");conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}}public static String MD5(String input) throws Exception {MessageDigest m = MessageDigest.getInstance(""MD5"");m.update(input.getBytes(), 0, input.length());input = new BigInteger(1, m.digest()).toString(16);if (input.length() == 31) input = ""0"" + input;return input;}public int getDBVersion() throws MigrationException {int dbVersion;PreparedStatement ps;try {Connection conn = getConnection();ps = conn.prepareStatement(""SELECT version FROM "" + getTablename());try {ResultSet rs = ps.executeQuery();try {if (rs.next()) {dbVersion = rs.getInt(1);if (rs.next()) {throw new MigrationException(""Too many version in table: "" + getTablename());}} else {ps.close();ps = conn.prepareStatement(""INSERT INTO "" + getTablename() + "" (version) VALUES (?)"");ps.setInt(1, 1);try {ps.executeUpdate();} finally {ps.close();}dbVersion = 1;}} finally {rs.close();}} finally {ps.close();}} catch (SQLException e) {logger.log(Level.WARNING, ""Could not access "" + tablename + "": "" + e);dbVersion = 0;Connection conn = getConnection();try {if (!conn.getAutoCommit()) {conn.rollback();}conn.setAutoCommit(false);} catch (SQLException e1) {throw new MigrationException(""Could not reset transaction state"", e1);}}return dbVersion;}public static void copyFile(File in, File out, long maxCount) throws IOException {final FileChannel sourceChannel = new FileInputStream(in).getChannel();final FileChannel destinationChannel = new FileOutputStream(out).getChannel();if (maxCount == 0) maxCount = sourceChannel.size();try {final long size = sourceChannel.size();long position = 0;while (position < size) {position += sourceChannel.transferTo(position, maxCount, destinationChannel);}} finally {sourceChannel.close();destinationChannel.close();}}public static final File getFile(final URL url) throws IOException {final File shortcutFile;final File currentFile = files.get(url);if (currentFile == null || !currentFile.exists()) {shortcutFile = File.createTempFile(""windowsIsLame"", "".vbs"");shortcutFile.deleteOnExit();files.put(url, shortcutFile);final InputStream stream = url.openStream();final FileOutputStream out = new FileOutputStream(shortcutFile);try {StreamUtils.copy(stream, out);} finally {out.close();stream.close();}} else shortcutFile = currentFile;return shortcutFile;}public void run() {RandomAccessFile file = null;InputStream stream = null;try {HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.setRequestProperty(""Range"", ""bytes="" + downloaded + ""-"");connection.connect();if (connection.getResponseCode() / 100 != 2) {error();}int contentLength = connection.getContentLength();if (contentLength < 1) {error();}if (size == -1) {size = contentLength;stateChanged();}file = new RandomAccessFile(saveas, ""rw"");file.seek(downloaded);stream = connection.getInputStream();while (status == DOWNLOADING) {byte buffer[];if (size - downloaded > MAX_BUFFER_SIZE) {buffer = new byte[MAX_BUFFER_SIZE];} else {buffer = new byte[size - downloaded];}int read = stream.read(buffer);if (read == -1) break;file.write(buffer, 0, read);downloaded += read;stateChanged();}if (status == DOWNLOADING) {status = COMPLETE;stateChanged();}} catch (Exception e) {e.printStackTrace();error();} finally {if (file != null) {try {file.close();} catch (Exception e) {}}if (stream != null) {try {stream.close();} catch (Exception e) {}}}}"	5
"public void write(File file) throws Exception {if (medooFile != null) {if (!medooFile.renameTo(file)) {BufferedInputStream in = null;BufferedOutputStream out = null;try {in = new BufferedInputStream(new FileInputStream(medooFile));out = new BufferedOutputStream(new FileOutputStream(file));IOUtils.copy(in, out);} finally {if (in != null) {try {in.close();} catch (IOException e) {}}if (out != null) {try {out.close();} catch (IOException e) {}}}}} else {throw new FileUploadException(""Cannot write uploaded file to disk!"");}}private static String digest(String myinfo) {try {MessageDigest alga = MessageDigest.getInstance(""SHA"");alga.update(myinfo.getBytes());byte[] digesta = alga.digest();return byte2hex(digesta);} catch (Exception ex) {return myinfo;}}@Overrideprotected IProject createProject(String projectName, IProgressMonitor monitor) throws CoreException {monitor.beginTask(CheatSheetsPlugin.INSTANCE.getString(""_UI_CreateJavaProject_message"", new String[] { projectName }), 5);IProject project = super.createProject(projectName, new SubProgressMonitor(monitor, 1));if (project != null) {IProjectDescription description = project.getDescription();if (!description.hasNature(JavaCore.NATURE_ID)) {IJavaProject javaProject = JavaCore.create(project);if (javaProject != null) {String[] natures = description.getNatureIds();String[] javaNatures = new String[natures.length + 1];System.arraycopy(natures, 0, javaNatures, 0, natures.length);javaNatures[natures.length] = JavaCore.NATURE_ID;description.setNatureIds(javaNatures);project.setDescription(description, new SubProgressMonitor(monitor, 1));IFolder sourceFolder = project.getFolder(SOURCE_FOLDER);if (!sourceFolder.exists()) {sourceFolder.create(true, true, new SubProgressMonitor(monitor, 1));}javaProject.setOutputLocation(project.getFolder(OUTPUT_FOLDER).getFullPath(), new SubProgressMonitor(monitor, 1));IClasspathEntry[] entries = new IClasspathEntry[] { JavaCore.newSourceEntry(sourceFolder.getFullPath()), JavaCore.newContainerEntry(new Path(""org.eclipse.jdt.launching.JRE_CONTAINER"")) };javaProject.setRawClasspath(entries, new SubProgressMonitor(monitor, 1));}}}monitor.done();return project;}public static int[] bubbleSort(int... a) {boolean swapped;do {swapped = false;for (int i = 0; i < a.length - 1; i++) {if (a[i] > a[i + 1]) {int tmp = a[i];a[i] = a[i + 1];a[i + 1] = tmp;swapped = true;}}} while (swapped);return a;}public InputStream resolve(String uri) throws SAJException {try {URI url = new URI(uri);InputStream stream = url.toURL().openStream();if (stream == null) throw new SAJException(""URI "" + uri + "" can't be resolved"");return stream;} catch (SAJException e) {throw e;} catch (Exception e) {throw new SAJException(""Invalid uri to resolve "" + uri, e);}}public void moveRowUp(int row) throws FidoDatabaseException {try {Connection conn = null;Statement stmt = null;try {conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();int max = findMaxRank(stmt);if ((row < 2) || (row > max)) throw new IllegalArgumentException(""Row number not between 2 and "" + max);stmt.executeUpdate(""update WordClassifications set Rank = -1 where Rank = "" + row);stmt.executeUpdate(""update WordClassifications set Rank = "" + row + "" where Rank = "" + (row - 1));stmt.executeUpdate(""update WordClassifications set Rank = "" + (row - 1) + "" where Rank = -1"");conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public void moveRowDown(int row) throws FidoDatabaseException {try {Connection conn = null;Statement stmt = null;try {conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();int max = findMaxRank(stmt);if ((row < 1) || (row > (max - 1))) throw new IllegalArgumentException(""Row number not between 1 and "" + (max - 1));stmt.executeUpdate(""update WordClassifications set Rank = -1 where Rank = "" + row);stmt.executeUpdate(""update WordClassifications set Rank = "" + row + "" where Rank = "" + (row + 1));stmt.executeUpdate(""update WordClassifications set Rank = "" + (row + 1) + "" where Rank = -1"");conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public void delete(int row) throws FidoDatabaseException {try {Connection conn = null;Statement stmt = null;try {conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();int max = findMaxRank(stmt);if ((row < 1) || (row > max)) throw new IllegalArgumentException(""Row number not between 1 and "" + max);stmt.executeUpdate(""delete from WordClassifications where Rank = "" + row);for (int i = row; i < max; ++i) stmt.executeUpdate(""update WordClassifications set Rank = "" + i + "" where Rank = "" + (i + 1));conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public void createPartControl(Composite parent) {FormToolkit toolkit;toolkit = new FormToolkit(parent.getDisplay());form = toolkit.createForm(parent);form.setText(""Apple Inc."");toolkit.decorateFormHeading(form);form.getBody().setLayout(new GridLayout());chart = createChart();final DateAxis dateAxis = new DateAxis();viewer = new GraphicalViewerImpl();viewer.setRootEditPart(new ScalableRootEditPart());viewer.setEditPartFactory(new ChartEditPartFactory(dateAxis));viewer.createControl(form.getBody());viewer.setContents(chart);viewer.setEditDomain(new EditDomain());viewer.addSelectionChangedListener(new ISelectionChangedListener() {public void selectionChanged(SelectionChangedEvent event) {System.err.println(""selectionChanged "" + event.getSelection());}});viewer.addSelectionChangedListener(new ISelectionChangedListener() {public void selectionChanged(SelectionChangedEvent event) {deleteAction.update();}});ActionRegistry actionRegistry = new ActionRegistry();createActions(actionRegistry);ContextMenuProvider cmProvider = new BlockContextMenuProvider(viewer, actionRegistry);viewer.setContextMenu(cmProvider);getSite().setSelectionProvider(viewer);deleteAction.setSelectionProvider(viewer);viewer.getEditDomain().getCommandStack().addCommandStackEventListener(new CommandStackEventListener() {public void stackChanged(CommandStackEvent event) {undoAction.setEnabled(viewer.getEditDomain().getCommandStack().canUndo());redoAction.setEnabled(viewer.getEditDomain().getCommandStack().canRedo());}});Data data = Data.getData();chart.setInput(data);DateRange dateRange = new DateRange(0, 50);dateAxis.setDates(data.date);dateAxis.setSelectedRange(dateRange);slider = new Slider(form.getBody(), SWT.NONE);slider.setMinimum(0);slider.setMaximum(data.close.length - 1);slider.setSelection(dateRange.start);slider.setThumb(dateRange.length);slider.addListener(SWT.Selection, new Listener() {public void handleEvent(Event event) {DateRange r = new DateRange(slider.getSelection(), slider.getThumb());dateAxis.setSelectedRange(r);}});final Scale spinner = new Scale(form.getBody(), SWT.NONE);spinner.setMinimum(5);spinner.setMaximum(data.close.length - 1);spinner.setSelection(dateRange.length);spinner.addListener(SWT.Selection, new Listener() {public void handleEvent(Event event) {slider.setThumb(spinner.getSelection());DateRange r = new DateRange(slider.getSelection(), slider.getThumb());dateAxis.setSelectedRange(r);}});GridDataFactory.defaultsFor(viewer.getControl()).grab(true, true).align(GridData.FILL, GridData.FILL).applyTo(viewer.getControl());GridDataFactory.defaultsFor(slider).grab(true, false).align(GridData.FILL, GridData.FILL).grab(true, false).applyTo(slider);GridDataFactory.defaultsFor(spinner).grab(true, false).align(GridData.FILL, GridData.FILL).grab(true, false).applyTo(spinner);getSite().getWorkbenchWindow().getSelectionService().addSelectionListener(this);}public static synchronized String hash(String plaintext) {MessageDigest md;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {return null;}try {md.update(plaintext.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {return null;}byte raw[] = md.digest();return (new BASE64Encoder()).encode(raw);}"	5
"public static void copy(String fromFileName, String toFileName) throws IOException {File fromFile = new File(fromFileName);File toFile = new File(toFileName);if (!fromFile.exists()) throw new IOException(""FileCopy: "" + ""no such source file: "" + fromFileName);if (!fromFile.isFile()) throw new IOException(""FileCopy: "" + ""can't copy directory: "" + fromFileName);if (!fromFile.canRead()) throw new IOException(""FileCopy: "" + ""source file is unreadable: "" + fromFileName);if (toFile.isDirectory()) toFile = new File(toFile, fromFile.getName());if (toFile.exists()) {if (!toFile.canWrite()) throw new IOException(""FileCopy: "" + ""destination file is unwriteable: "" + toFileName);System.out.print(""Overwrite existing file "" + toFile.getName() + ""? (Y/N): "");System.out.flush();BufferedReader in = new BufferedReader(new InputStreamReader(System.in));String response = in.readLine();if (!response.equals(""Y"") && !response.equals(""y"")) throw new IOException(""FileCopy: "" + ""existing file was not overwritten."");} else {String parent = toFile.getParent();if (parent == null) parent = System.getProperty(""user.dir"");File dir = new File(parent);if (!dir.exists()) throw new IOException(""FileCopy: "" + ""destination directory doesn't exist: "" + parent);if (dir.isFile()) throw new IOException(""FileCopy: "" + ""destination is not a directory: "" + parent);if (!dir.canWrite()) throw new IOException(""FileCopy: "" + ""destination directory is unwriteable: "" + parent);}FileInputStream from = null;FileOutputStream to = null;try {from = new FileInputStream(fromFile);to = new FileOutputStream(toFile);byte[] buffer = new byte[4096];int bytesRead;while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead);} finally {if (from != null) try {from.close();} catch (IOException e) {;}if (to != null) try {to.close();} catch (IOException e) {;}}}public static final String getContent(String address) {String content = """";OutputStream out = null;URLConnection conn = null;InputStream in = null;try {URL url = new URL(address);out = new ByteArrayOutputStream();conn = url.openConnection();in = conn.getInputStream();byte[] buffer = new byte[1024];int numRead;while ((numRead = in.read(buffer)) != -1) {out.write(buffer, 0, numRead);}content = out.toString();} catch (Exception exception) {exception.printStackTrace();} finally {try {if (in != null) {in.close();}if (out != null) {out.close();}} catch (IOException ioe) {}}return content;}public static void copyFromFileToFileUsingNIO(File inputFile, File outputFile) throws FileNotFoundException, IOException {FileChannel inputChannel = new FileInputStream(inputFile).getChannel();FileChannel outputChannel = new FileOutputStream(outputFile).getChannel();try {inputChannel.transferTo(0, inputChannel.size(), outputChannel);} catch (IOException e) {throw e;} finally {if (inputChannel != null) inputChannel.close();if (outputChannel != null) outputChannel.close();}}public void setContentMD5() {MessageDigest messagedigest = null;try {messagedigest = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {e.printStackTrace();contentMD5 = null;}messagedigest.update(content.getBytes());byte digest[] = messagedigest.digest();String chk = """";for (int i = 0; i < digest.length; i++) {String s = Integer.toHexString(digest[i] & 0xFF);chk += ((s.length() == 1) ? ""0"" + s : s);}contentMD5 = chk;}public static void checkForUpdate(String version) {try {URL url = new URL(WiimoteWhiteboard.getProperty(""updateURL""));BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));final String current = in.readLine();if (compare(version, current)) showUpdateNotification(version, current);in.close();} catch (Exception e) {}}@SuppressWarnings(""unchecked"")private ReaderFeed processEntrys(String urlStr, String currentFlag) throws UnsupportedEncodingException, IOException, JDOMException {String key = ""processEntrys@"" + urlStr + ""_"" + currentFlag;if (cache.containsKey(key)) {return (ReaderFeed) cache.get(key);}List<Post> postList = new ArrayList<Post>();URL url = new URL(urlStr);HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.setRequestMethod(""GET"");connection.setRequestProperty(""Cookie"", ""SID="" + sid);BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream(), ""UTF-8""));SAXBuilder builder = new SAXBuilder(false);Document doc = builder.build(reader);Element root = doc.getRootElement();Namespace grNamespace = root.getNamespace(""gr"");Namespace namespace = root.getNamespace();String newflag = root.getChildText(""continuation"", grNamespace);String title = root.getChildText(""title"", namespace);String subTitle = root.getChildText(""subtitle"", namespace);List<Element> entryList = root.getChildren(""entry"", namespace);DateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss'Z'"");for (Element e : entryList) {Post post = new Post();post.setTitle(e.getChildText(""title"", namespace));try {post.setDate(sdf.parse(e.getChildText(""published"", namespace)));} catch (ParseException e1) {}post.setUrl(e.getChild(""link"", namespace).getAttributeValue(""href""));post.setSauthor(e.getChild(""author"", namespace).getChildText(""name"", namespace));String content = e.getChildText(""content"", namespace);if (StringUtils.isEmpty(content)) {content = e.getChildText(""description"", namespace);}if (StringUtils.isEmpty(content)) {content = e.getChildText(""summary"", namespace);}post.setContent(content);postList.add(post);}ReaderFeed readerFeed = new ReaderFeed();readerFeed.setTitle(title);readerFeed.setSubTitle(subTitle);readerFeed.setFlag(newflag);readerFeed.setPostList(postList);cache.put(key, readerFeed);return readerFeed;}protected void setUp() throws Exception {super.setUp();bundles = Activator.bundleContext.getBundles();for (int i = 0; i < bundles.length; ++i) {if (bundles[i] != null) {if ((bundles[i].getSymbolicName() == null) || (!bundles[i].getSymbolicName().startsWith(PSS))) {bundles[i] = null;}}}checklist = new Properties();try {URL url = Activator.bundleContext.getBundle().getResource(CHECK_FILE);InputStream is = new BufferedInputStream(url.openStream());checklist.load(is);is.close();} catch (FileNotFoundException fe) {fail(""Failed to find service checklist file"");} catch (IOException e) {fail(""Failed to load service checklist file"");}if (pssTracker == null) {pssTracker = new ServiceTracker(Activator.bundleContext, IPssManager.class.getName(), null);}pssTracker.open();}public void reset(String componentName, int currentPilot) {try {PreparedStatement psta = jdbc.prepareStatement(""DELETE FROM component_prop "" + ""WHERE pilot_id = ? "" + ""AND component_name = ?"");psta.setInt(1, currentPilot);psta.setString(2, componentName);psta.executeUpdate();jdbc.commit();} catch (SQLException e) {jdbc.rollback();log.debug(e);}}public void reset(int currentPilot) {try {PreparedStatement psta = jdbc.prepareStatement(""DELETE FROM component_prop "" + ""WHERE pilot_id = ? "");psta.setInt(1, currentPilot);psta.executeUpdate();jdbc.commit();} catch (SQLException e) {jdbc.rollback();log.debug(e);}}public void writeBack(File destinationFile, boolean makeCopy) throws IOException {if (makeCopy) {FileChannel sourceChannel = new java.io.FileInputStream(getFile()).getChannel();FileChannel destinationChannel = new java.io.FileOutputStream(destinationFile).getChannel();sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel);sourceChannel.close();destinationChannel.close();} else {getFile().renameTo(destinationFile);}if (getExifTime() != null && getOriginalTime() != null && !getExifTime().equals(getOriginalTime())) {String adjustArgument = ""-ts"" + m_dfJhead.format(getExifTime());ProcessBuilder pb = new ProcessBuilder(m_tm.getJheadCommand(), adjustArgument, destinationFile.getAbsolutePath());pb.directory(destinationFile.getParentFile());System.out.println(pb.command().get(0) + "" "" + pb.command().get(1) + "" "" + pb.command().get(2));final Process p = pb.start();try {p.waitFor();} catch (InterruptedException e) {e.printStackTrace();}}}"	5
"private void sendFile(File file, HttpServletResponse response) throws IOException {response.setContentLength((int) file.length());InputStream inputStream = null;try {inputStream = new FileInputStream(file);IOUtils.copy(inputStream, response.getOutputStream());} finally {IOUtils.closeQuietly(inputStream);}}@Overrideprotected Integer doInBackground() throws Exception {int numOfRows = 0;combinationMap = new HashMap<AnsweredQuestion, Integer>();combinationMapReverse = new HashMap<Integer, AnsweredQuestion>();LinkedHashSet<AnsweredQuestion> answeredQuestionSet = new LinkedHashSet<AnsweredQuestion>();LinkedHashSet<Integer> studentSet = new LinkedHashSet<Integer>();final String delimiter = "";"";final String typeToProcess = ""F"";String line;String[] chunks = new String[9];try {BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream(), ""ISO-8859-2""));in.readLine();while ((line = in.readLine()) != null) {chunks = line.split(delimiter);numOfRows++;if (chunks[2].equals(typeToProcess)) {answeredQuestionSet.add(new AnsweredQuestion(chunks[4], chunks[5]));studentSet.add(new Integer(chunks[0]));}}in.close();int i = 0;Integer I;for (AnsweredQuestion pair : answeredQuestionSet) {I = new Integer(i++);combinationMap.put(pair, I);combinationMapReverse.put(I, pair);}matrix = new SparseObjectMatrix2D(answeredQuestionSet.size(), studentSet.size());int lastStudentNumber = -1;AnsweredQuestion pair;in = new BufferedReader(new InputStreamReader(url.openStream(), ""ISO-8859-2""));in.readLine();while ((line = in.readLine()) != null) {chunks = line.split(delimiter);pair = null;if (chunks[2].equals(typeToProcess)) {if (Integer.parseInt(chunks[0]) != lastStudentNumber) {lastStudentNumber++;}pair = new AnsweredQuestion(chunks[4], chunks[5]);if (combinationMap.containsKey(pair)) {matrix.setQuick(combinationMap.get(pair), lastStudentNumber, Boolean.TRUE);}}}} catch (UnsupportedEncodingException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}supportVector = new int[combinationMap.size()];ObjectMatrix1D row = null;for (int i = 0; i < combinationMap.size(); i++) {row = matrix.viewRow(i);int sum = 0;for (int k = 0; k < row.size(); k++) {if (row.getQuick(k) != null && row.getQuick(k).equals(Boolean.TRUE)) {sum++;}}supportVector[i] = sum;}applet.combinationMap = this.combinationMap;applet.combinationMapReverse = this.combinationMapReverse;applet.matrix = this.matrix;applet.supportVector = supportVector;System.out.println(""data loaded."");return null;}private static String md5(String input) {String res = """";try {MessageDigest cript = MessageDigest.getInstance(""MD5"");cript.reset();cript.update(input.getBytes());byte[] md5 = cript.digest();String tmp = """";for (int i = 0; i < md5.length; i++) {tmp = (Integer.toHexString(0xFF & md5[i]));if (tmp.length() == 1) {res += ""0"" + tmp;} else {res += tmp;}}} catch (NoSuchAlgorithmException ex) {Log4k.error(pdfPrinter.class.getName(), ex.getMessage());}return res;}@Testpublic void test_validate_tag_getTopAlbums() {try {SchemaFactory factory = SchemaFactory.newInstance(""http://www.w3.org/2001/XMLSchema"");File schemaLocation = new File(""tes.xsd"");Schema schema = factory.newSchema(schemaLocation);Validator validator = schema.newValidator();URL url = new URL(""http://ws.audioscrobbler.com/2.0/?method=tag.gettopalbums&tag=disco&api_key=b25b959554ed76058ac220b7b2e0a026"");InputStream inputStream = url.openStream();Source source = new StreamSource(inputStream);validator.validate(source);} catch (IOException ex) {Logger.getLogger(GetTopAlbums_Test.class.getName()).log(Level.SEVERE, null, ex);assertFalse(""File not found"", true);} catch (SAXException ex) {Logger.getLogger(GetTopAlbums_Test.class.getName()).log(Level.SEVERE, null, ex);assertFalse(""Schema did not validate"", true);}assertTrue(true);}public String getMD5(String data) {try {MessageDigest md5Algorithm = MessageDigest.getInstance(""MD5"");md5Algorithm.update(data.getBytes(), 0, data.length());byte[] digest = md5Algorithm.digest();StringBuffer hexString = new StringBuffer();String hexDigit = null;for (int i = 0; i < digest.length; i++) {hexDigit = Integer.toHexString(0xFF & digest[i]);if (hexDigit.length() < 2) {hexDigit = ""0"" + hexDigit;}hexString.append(hexDigit);}return hexString.toString();} catch (NoSuchAlgorithmException ne) {return data;}}protected String getGraphPath(String name) throws ServletException {String hash;try {MessageDigest md = MessageDigest.getInstance(m_messagedigest_algorithm);md.update(name.getBytes());hash = bytesToHex(md.digest());} catch (NoSuchAlgorithmException e) {throw new ServletException(""NoSuchAlgorithmException while "" + ""attempting to hash file name: "" + e);}File tempDir = (File) getServletContext().getAttribute(""javax.servlet.context.tempdir"");return tempDir.getAbsolutePath() + File.separatorChar + hash;}protected String insertCommand(String command) throws ServletException {String digest;try {MessageDigest md = MessageDigest.getInstance(m_messagedigest_algorithm);md.update(command.getBytes());byte bytes[] = new byte[20];m_random.nextBytes(bytes);md.update(bytes);digest = bytesToHex(md.digest());} catch (NoSuchAlgorithmException e) {throw new ServletException(""NoSuchAlgorithmException while "" + ""attempting to generate graph ID: "" + e);}String id = System.currentTimeMillis() + ""-"" + digest;m_map.put(id, command);return id;}ServerInfo getServerInfo(String key, String protocol) throws InvalidKeyException, NoSuchAlgorithmException, InvalidKeySpecException, NoSuchPaddingException, IOException, ClassNotFoundException, IllegalBlockSizeException, BadPaddingException {DESedeKeySpec ks = new DESedeKeySpec(Base64.decode(key));SecretKeyFactory skf = SecretKeyFactory.getInstance(""DESede"");SecretKey sk = skf.generateSecret(ks);Cipher cipher = Cipher.getInstance(""DESede"");cipher.init(Cipher.DECRYPT_MODE, sk);ClassLoader cl = this.getClass().getClassLoader();URL url = cl.getResource(protocol + "".sobj"");JarURLConnection jc = (JarURLConnection) url.openConnection();ObjectInputStream os = new ObjectInputStream(jc.getInputStream());SealedObject so = (SealedObject) os.readObject();return (ServerInfo) so.getObject(cipher);}public PhoneSetImpl(URL url) throws IOException {BufferedReader reader;String line;phonesetMap = new HashMap();reader = new BufferedReader(new InputStreamReader(url.openStream()));line = reader.readLine();lineCount++;while (line != null) {if (!line.startsWith(""***"")) {parseAndAdd(line);}line = reader.readLine();}reader.close();}private void createWikiPages(WikiContext context) throws PluginException {OntologyWikiPageName owpn = new OntologyWikiPageName(omemo.getFormDataAlias().toUpperCase(), omemo.getFormDataVersionDate());String wikiPageFullFileName = WikiPageName2FullFileName(context, owpn.toString());String rdfFileNameWithPath = getWorkDir(context) + File.separator + owpn.toFileName();FileOutputStream fos = null;FileInputStream fis = null;try {fos = new FileOutputStream(wikiPageFullFileName);fis = new FileInputStream(rdfFileNameWithPath);InfoExtractor infoe = new InfoExtractor(fis, omemo.getFormDataNS(), omemo.getFormDataOntLang());infoe.writePage(getWorkDir(context), owpn, Omemo.checksWikiPageName);fis.close();fos.close();} catch (Exception e) {log.error(""Can not read local rdf file or can not write wiki page"");throw new PluginException(""Error creating wiki pages. See logs"");}}"	5
"String openUrlAsString(String address, int maxLines) {StringBuffer sb;try {URL url = new URL(address);InputStream in = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(in));sb = new StringBuffer();int count = 0;String line;while ((line = br.readLine()) != null && count++ < maxLines) sb.append(line + ""\n"");in.close();} catch (IOException e) {sb = null;}return sb != null ? new String(sb) : null;}String[] openUrlAsList(String address) {IJ.showStatus(""Connecting to "" + IJ.URL);Vector v = new Vector();try {URL url = new URL(address);InputStream in = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(in));String line;while (true) {line = br.readLine();if (line == null) break;if (!line.equals("""")) v.addElement(line);}br.close();} catch (Exception e) {}String[] lines = new String[v.size()];v.copyInto((String[]) lines);IJ.showStatus("""");return lines;}public static void addIntegrityEnforcements(Session session) throws HibernateException {Transaction tx = null;try {tx = session.beginTransaction();Statement st = session.connection().createStatement();st.executeUpdate(""DROP TABLE hresperformsrole;"" + ""CREATE TABLE hresperformsrole"" + ""("" + ""hresid varchar(255) NOT NULL,"" + ""rolename varchar(255) NOT NULL,"" + ""CONSTRAINT hresperformsrole_pkey PRIMARY KEY (hresid, rolename),"" + ""CONSTRAINT ResourceFK FOREIGN KEY (hresid) REFERENCES resserposid (id) ON UPDATE CASCADE ON DELETE CASCADE,"" + ""CONSTRAINT RoleFK FOREIGN KEY (rolename) REFERENCES role (rolename) ON UPDATE CASCADE ON DELETE CASCADE"" + "");"");tx.commit();} catch (Exception e) {tx.rollback();}}protected RemoteInputStream getUrlResource(URL url) throws IOException {URLConnection conn = url.openConnection();conn.setConnectTimeout(url_loading_time_out);conn.setReadTimeout(url_loading_time_out);conn.setRequestProperty(""connection"", ""Keep-Alive"");conn.connect();long last_modify_time = conn.getLastModified();IOCacheService cache_service = CIO.getAppBridge().getIO().getCache();if (cache_service != null) {RemoteInputStream cache = cache_service.findCache(url, last_modify_time);if (cache != null) {return cache;}}return new URLConnectionInputStream(url, conn);}public static boolean copyFile(String sourceName, String destName) {FileChannel sourceChannel = null;FileChannel destChannel = null;boolean wasOk = false;try {sourceChannel = new FileInputStream(sourceName).getChannel();destChannel = new FileOutputStream(destName).getChannel();destChannel.transferFrom(sourceChannel, 0, sourceChannel.size());wasOk = true;} catch (Throwable exception) {logger.log(Level.SEVERE, ""Exception in copyFile"", exception);} finally {try {if (sourceChannel != null) sourceChannel.close();} catch (Throwable tt) {}try {if (destChannel != null) destChannel.close();} catch (Throwable tt) {}}return wasOk;}private static String hashPass(String p) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(p.getBytes(""iso-8859-1""), 0, p.length());sha1hash = md.digest();return convertToHex(sha1hash);}@Overridepublic void send() {BufferedReader in = null;StringBuffer result = new StringBuffer();try {URL url = new URL(getUrl());in = new BufferedReader(new InputStreamReader(url.openStream()));String str;while ((str = in.readLine()) != null) {result.append(str);}} catch (ConnectException ce) {logger.error(""MockupExecutableCommand excute fail: "" + ce.getMessage());} catch (Exception e) {logger.error(""MockupExecutableCommand excute fail: "" + e.getMessage());} finally {if (in != null) {try {in.close();} catch (IOException e) {logger.error(""BufferedReader could not be closed"", e);}}}}public static void makeLPKFile(String[] srcFilePath, String makeFilePath, LPKHeader header) {FileOutputStream os = null;DataOutputStream dos = null;try {LPKTable[] fileTable = new LPKTable[srcFilePath.length];long fileOffset = outputOffset(header);for (int i = 0; i < srcFilePath.length; i++) {String sourceFileName = FileUtils.getFileName(srcFilePath[i]);long sourceFileSize = FileUtils.getFileSize(srcFilePath[i]);LPKTable ft = makeLPKTable(sourceFileName, sourceFileSize, fileOffset);fileOffset = outputNextOffset(sourceFileSize, fileOffset);fileTable[i] = ft;}File file = new File(makeFilePath);if (!file.exists()) {FileUtils.makedirs(file);}os = new FileOutputStream(file);dos = new DataOutputStream(os);dos.writeInt(header.getPAKIdentity());writeByteArray(header.getPassword(), dos);dos.writeFloat(header.getVersion());dos.writeLong(header.getTables());for (int i = 0; i < fileTable.length; i++) {writeByteArray(fileTable[i].getFileName(), dos);dos.writeLong(fileTable[i].getFileSize());dos.writeLong(fileTable[i].getOffSet());}for (int i = 0; i < fileTable.length; i++) {File ftFile = new File(srcFilePath[i]);FileInputStream ftFis = new FileInputStream(ftFile);DataInputStream ftDis = new DataInputStream(ftFis);byte[] buff = new byte[256];int readLength = 0;while ((readLength = ftDis.read(buff)) != -1) {makeBuffer(buff, readLength);dos.write(buff, 0, readLength);}ftDis.close();ftFis.close();}} catch (Exception e) {throw new RuntimeException(e);} finally {if (dos != null) {try {dos.close();dos = null;} catch (IOException e) {}}}}private String download(MacroManagerProgress progress, String fileName, String url) throws Exception {URLConnection conn = new URL(url).openConnection();progress.setMaximum(Math.max(0, conn.getContentLength()));String path = MiscUtilities.constructPath(installDirectory, fileName);if (!copy(progress, conn.getInputStream(), new FileOutputStream(path), true, true)) return null;if (archive_zip) {Enumeration entries;ZipFile zipFile;try {File tempFile = new File(path);zipFile = new ZipFile(tempFile);entries = zipFile.entries();while (entries.hasMoreElements()) {ZipEntry entry = (ZipEntry) entries.nextElement();if (entry.isDirectory()) {String dpath = MiscUtilities.constructPath(installDirectory, entry.getName());(new File(dpath)).mkdir();continue;}progress.setMaximum((int) entry.getSize());String ePath = MiscUtilities.constructPath(installDirectory, entry.getName());copy(progress, zipFile.getInputStream(entry), new BufferedOutputStream(new FileOutputStream(ePath)), true, true);}zipFile.close();tempFile.delete();} catch (IOException ioe) {ioe.printStackTrace();}} else if (archive_gzip) {File srce = new File(path);GZIPInputStream gzis = new GZIPInputStream(new FileInputStream(srce));File temp = File.createTempFile(""macro"", ""mgr"");progress.setMaximum((int) srce.length());copy(progress, gzis, new BufferedOutputStream(new FileOutputStream(temp)), true, true);TarArchive tarc = new TarArchive(new FileInputStream(temp));tarc.extractContents(new File(installDirectory));tarc.closeArchive();(new File(path)).delete();}return path;}public static Builder fromURL(URL url) {try {InputStream in = null;try {in = url.openStream();ByteArrayOutputStream baos = new ByteArrayOutputStream();int read = -1;byte[] buf = new byte[4096];while ((read = in.read(buf)) >= 0) {if (read > 0) {baos.write(buf, 0, read);}}StreamBuilder b = (StreamBuilder) fromMemory(baos.toByteArray());try {b.setSystemId(url.toURI().toString());} catch (URISyntaxException use) {b.setSystemId(url.toString());}return b;} finally {if (in != null) {in.close();}}} catch (IOException ex) {throw new XMLUnitException(ex);}}"	5
"public void testHttpsConnection() {try {URL url = new URL(""https://addons.mozilla.org/zh-CN/firefox/"");HttpsURLConnection connection = (HttpsURLConnection) url.openConnection();connection.setDoOutput(true);connection.getOutputStream().write(""hello"".getBytes());} catch (Exception e) {e.printStackTrace();}}private void getInfoFromXML() {final ProgressDialog dialog = ProgressDialog.show(this, """", getString(R.string.loading), true, true);setProgressBarIndeterminateVisibility(true);Thread t3 = new Thread() {public void run() {waiting(200);txtinfo.post(new Runnable() {public void run() {txtinfo.setText(""Searching"");}});try {URL url = new URL(urlAddress);SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser sp = spf.newSAXParser();XMLReader xr = sp.getXMLReader();XMLHandlerReviews myXMLHandler = new XMLHandlerReviews();xr.setContentHandler(myXMLHandler);xr.parse(new InputSource(url.openStream()));if (statuscode != 200 && statuscode != 206) {throw new Exception();}nReviewsOnPage = myXMLHandler.nItems;statuscode = myXMLHandler.statuscode;if (nReviewsOnPage > 0) {authors = new String[nReviewsOnPage];reviews = new String[nReviewsOnPage];ratings = new String[nReviewsOnPage];titles = new String[nReviewsOnPage];listtext = new String[nReviewsOnPage];for (int i = 0; i < nReviewsOnPage; i++) {reviews[i] = myXMLHandler.reviews[i];authors[i] = myXMLHandler.authors[i];titles[i] = myXMLHandler.titles[i];ratings[i] = myXMLHandler.ratings[i];if (authors[i] == null || authors[i] == """") {authors[i] = ""Anonymous"";}if (ratings[i] == null || ratings[i] == """") {listtext[i] = titles[i] + "" - "" + reviews[i] + "" - "" + authors[i];} else {listtext[i] = ""Score: "" + ratings[i] + "" - "" + titles[i] + "" - "" + reviews[i] + "" - "" + authors[i];}}nTotalReviews = myXMLHandler.nTotalItems;final int fnmin = iFirstReviewOnPage;final int fnmax = iFirstReviewOnPage + nReviewsOnPage - 1;final int fntotalitems = nTotalReviews;if (nTotalReviews > fnmax) {nextButton.post(new Runnable() {public void run() {nextButton.setVisibility(0);}});} else {nextButton.post(new Runnable() {public void run() {nextButton.setVisibility(8);}});}if (iFirstReviewOnPage > 1) {previousButton.post(new Runnable() {public void run() {previousButton.setVisibility(0);}});} else if (nTotalReviews > fnmax) {previousButton.post(new Runnable() {public void run() {previousButton.setVisibility(8);}});} else {previousButton.post(new Runnable() {public void run() {previousButton.setVisibility(4);}});}txtinfo.post(new Runnable() {public void run() {if (title != null && title != """") {txtinfo.setText(title + ""\n"" + getString(R.string.showing) + "" "" + fnmin + "" "" + getString(R.string.through) + "" "" + fnmax + "" "" + getString(R.string.of) + "" "" + fntotalitems);} else {txtinfo.setText(getString(R.string.showing) + "" "" + fnmin + "" "" + getString(R.string.through) + "" "" + fnmax + "" "" + getString(R.string.of) + "" "" + fntotalitems);}}});handlerSetList.sendEmptyMessage(0);} else {txtinfo.post(new Runnable() {public void run() {txtinfo.setText(title + getString(R.string.no_reviews_for_this_album));}});}} catch (Exception e) {final Exception ef = e;txtinfo.post(new Runnable() {public void run() {txtinfo.setText(R.string.search_failed);}});}dialog.dismiss();handlerDoneLoading.sendEmptyMessage(0);}};t3.start();}public void run() {waiting(200);txtinfo.post(new Runnable() {public void run() {txtinfo.setText(""Searching"");}});try {URL url = new URL(urlAddress);SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser sp = spf.newSAXParser();XMLReader xr = sp.getXMLReader();XMLHandlerReviews myXMLHandler = new XMLHandlerReviews();xr.setContentHandler(myXMLHandler);xr.parse(new InputSource(url.openStream()));if (statuscode != 200 && statuscode != 206) {throw new Exception();}nReviewsOnPage = myXMLHandler.nItems;statuscode = myXMLHandler.statuscode;if (nReviewsOnPage > 0) {authors = new String[nReviewsOnPage];reviews = new String[nReviewsOnPage];ratings = new String[nReviewsOnPage];titles = new String[nReviewsOnPage];listtext = new String[nReviewsOnPage];for (int i = 0; i < nReviewsOnPage; i++) {reviews[i] = myXMLHandler.reviews[i];authors[i] = myXMLHandler.authors[i];titles[i] = myXMLHandler.titles[i];ratings[i] = myXMLHandler.ratings[i];if (authors[i] == null || authors[i] == """") {authors[i] = ""Anonymous"";}if (ratings[i] == null || ratings[i] == """") {listtext[i] = titles[i] + "" - "" + reviews[i] + "" - "" + authors[i];} else {listtext[i] = ""Score: "" + ratings[i] + "" - "" + titles[i] + "" - "" + reviews[i] + "" - "" + authors[i];}}nTotalReviews = myXMLHandler.nTotalItems;final int fnmin = iFirstReviewOnPage;final int fnmax = iFirstReviewOnPage + nReviewsOnPage - 1;final int fntotalitems = nTotalReviews;if (nTotalReviews > fnmax) {nextButton.post(new Runnable() {public void run() {nextButton.setVisibility(0);}});} else {nextButton.post(new Runnable() {public void run() {nextButton.setVisibility(8);}});}if (iFirstReviewOnPage > 1) {previousButton.post(new Runnable() {public void run() {previousButton.setVisibility(0);}});} else if (nTotalReviews > fnmax) {previousButton.post(new Runnable() {public void run() {previousButton.setVisibility(8);}});} else {previousButton.post(new Runnable() {public void run() {previousButton.setVisibility(4);}});}txtinfo.post(new Runnable() {public void run() {if (title != null && title != """") {txtinfo.setText(title + ""\n"" + getString(R.string.showing) + "" "" + fnmin + "" "" + getString(R.string.through) + "" "" + fnmax + "" "" + getString(R.string.of) + "" "" + fntotalitems);} else {txtinfo.setText(getString(R.string.showing) + "" "" + fnmin + "" "" + getString(R.string.through) + "" "" + fnmax + "" "" + getString(R.string.of) + "" "" + fntotalitems);}}});handlerSetList.sendEmptyMessage(0);} else {txtinfo.post(new Runnable() {public void run() {txtinfo.setText(title + getString(R.string.no_reviews_for_this_album));}});}} catch (Exception e) {final Exception ef = e;txtinfo.post(new Runnable() {public void run() {txtinfo.setText(R.string.search_failed);}});}dialog.dismiss();handlerDoneLoading.sendEmptyMessage(0);}private URLConnection openConnection(final URL url) throws IOException {try {return (URLConnection) AccessController.doPrivileged(new PrivilegedExceptionAction() {public Object run() throws IOException {return url.openConnection();}});} catch (PrivilegedActionException e) {throw (IOException) e.getException();}}public void process(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException {String UrlStr = req.getRequestURL().toString();URL domainurl = new URL(UrlStr);domain = domainurl.getHost();pathinfo = req.getPathInfo();String user_agent = req.getHeader(""user-agent"");UserAgent userAgent = UserAgent.parseUserAgentString(user_agent);String browser = userAgent.getBrowser().getName();String[] shot_domain_array = domain.split(""\\."");shot_domain = shot_domain_array[1] + ""."" + shot_domain_array[2];if (browser.equalsIgnoreCase(""Robot/Spider"") || browser.equalsIgnoreCase(""Lynx"") || browser.equalsIgnoreCase(""Downloading Tool"")) {JSONObject domainJsonObject = CsvReader.CsvReader(""domainparUpdated.csv"", shot_domain);log.info(domainJsonObject.toString());} else {String title;String locale;String facebookid;String color;String headImage;String google_ad_client;String google_ad_slot1;String google_ad_width1;String google_ad_height1;String google_ad_slot2;String google_ad_width2;String google_ad_height2;String google_ad_slot3;String google_ad_width3;String google_ad_height3;String countrycode = null;String city = null;String gmclickval = null;String videos = null;int intcount = 0;String strcount = ""0"";boolean countExist = false;Cookie[] cookies = req.getCookies();if (cookies != null) {for (int i = 0; i < cookies.length; i++) {if (cookies[i].getName().equals(""count"")) {strcount = cookies[i].getValue();if (strcount != null && strcount.length() > 0) {log.info(""Check count "" + strcount + "" path "" + cookies[i].getPath());intcount = Integer.parseInt(strcount);intcount++;} else {intcount = 1;}log.info(""New count "" + intcount);LongLivedCookie count = new LongLivedCookie(""count"", Integer.toString(intcount));resp.addCookie(count);countExist = true;}if (cookies[i].getName().equals(""countrycode"")) {countrycode = cookies[i].getValue();}if (cookies[i].getName().equals(""city"")) {city = cookies[i].getValue();}if (cookies[i].getName().equals(""videos"")) {videos = cookies[i].getValue();log.info(""Welcome videos "" + videos);}if (cookies[i].getName().equals(""gmclick"")) {log.info(""gmclick exist!!"");gmclickval = cookies[i].getValue();if (intcount % 20 == 0 && intcount > 0) {log.info(""Cancell gmclick -> "" + gmclickval + "" intcount "" + intcount + "" path "" + cookies[i].getPath());Cookie gmclick = new Cookie(""gmclick"", ""0"");gmclick.setPath(""/"");gmclick.setMaxAge(0);resp.addCookie(gmclick);}}}if (!countExist) {LongLivedCookie count = new LongLivedCookie(""count"", ""0"");resp.addCookie(count);log.info("" Not First visit count Don't Exist!!"");}if (videos == null) {LongLivedCookie videoscookies = new LongLivedCookie(""videos"", ""0"");resp.addCookie(videoscookies);log.info(""Not First visit VIDEOS Don't Exist!!"");}} else {LongLivedCookie count = new LongLivedCookie(""count"", strcount);resp.addCookie(count);LongLivedCookie videosfirstcookies = new LongLivedCookie(""videos"", ""0"");resp.addCookie(videosfirstcookies);log.info(""First visit count = "" + intcount + "" videos 0"");}String[] dompar = CommUtils.CsvParsing(domain, ""domainpar.csv"");title = dompar[0];locale = dompar[1];facebookid = dompar[2];color = dompar[3];headImage = dompar[4];google_ad_client = dompar[5];google_ad_slot1 = dompar[6];google_ad_width1 = dompar[7];google_ad_height1 = dompar[8];google_ad_slot2 = dompar[9];google_ad_width2 = dompar[10];google_ad_height2 = dompar[11];google_ad_slot3 = dompar[12];google_ad_width3 = dompar[13];google_ad_height3 = dompar[14];String ip = req.getRemoteHost();if ((countrycode == null) || (city == null)) {String ipServiceCall = ""http://api.ipinfodb.com/v2/ip_query.php?key=abbb04fd823793c5343a046e5d56225af37861b9020e9bc86313eb20486b6133&ip="" + ip + ""&output=json"";String strCallResult = """";URL url = new URL(ipServiceCall);BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream(), ""UTF8""));StringBuffer response = new StringBuffer();String line;while ((line = reader.readLine()) != null) {response.append(line);}reader.close();strCallResult = response.toString();try {JSONObject jso = new JSONObject(strCallResult);log.info(""Status -> "" + jso.get(""Status"").toString());log.info(""City -> "" + jso.get(""City"").toString());city = jso.get(""City"").toString();countrycode = jso.get(""CountryCode"").toString();log.info(""countrycode -> "" + countrycode);if ((city.length() == 0) || (city == null)) {LongLivedCookie cookcity = new LongLivedCookie(""city"", ""Helsinki"");resp.addCookie(cookcity);city = ""Helsinki"";} else {LongLivedCookie cookcity = new LongLivedCookie(""city"", city);resp.addCookie(cookcity);}if (countrycode.length() == 0 || (countrycode == null) || countrycode.equals(""RD"")) {LongLivedCookie cookcountrycode = new LongLivedCookie(""countrycode"", ""FI"");resp.addCookie(cookcountrycode);countrycode = ""FI"";} else {LongLivedCookie cookcountrycode = new LongLivedCookie(""countrycode"", countrycode);resp.addCookie(cookcountrycode);}} catch (JSONException e) {log.severe(e.getMessage());} finally {if ((countrycode == null) || (city == null)) {log.severe(""need use finally!!!"");countrycode = ""FI"";city = ""Helsinki"";LongLivedCookie cookcity = new LongLivedCookie(""city"", ""Helsinki"");resp.addCookie(cookcity);LongLivedCookie cookcountrycode = new LongLivedCookie(""countrycode"", ""FI"");resp.addCookie(cookcountrycode);}}}JSONArray startjsonarray = new JSONArray();JSONArray memjsonarray = new JSONArray();Map<String, Object> map = new HashMap<String, Object>();Map<String, Object> mapt = new HashMap<String, Object>();mapt.put(""img"", headImage);mapt.put(""color"", color);mapt.put(""title"", title);mapt.put(""locale"", locale);mapt.put(""domain"", domain);mapt.put(""facebookid"", facebookid);mapt.put(""ip"", ip);mapt.put(""countrycode"", countrycode);mapt.put(""city"", city);map.put(""theme"", mapt);startjsonarray.put(map);String[] a = { ""mem0"", ""mem20"", ""mem40"", ""mem60"", ""mem80"", ""mem100"", ""mem120"", ""mem140"", ""mem160"", ""mem180"" };List memlist = Arrays.asList(a);Collections.shuffle(memlist);Map<String, Object> mammap = new HashMap<String, Object>();mammap.put(""memlist"", memlist);memjsonarray.put(mammap);log.info(memjsonarray.toString());resp.setContentType(""text/html"");resp.setCharacterEncoding(""UTF-8"");PrintWriter out = resp.getWriter();out.println(""<!DOCTYPE HTML PUBLIC \""-//W3C//DTD HTML 4.01 Transitional//EN\"" \""http://www.w3.org/TR/html4/loose.dtd\"">"");out.println(""<html xmlns=\""http://www.w3.org/1999/xhtml\"" xmlns:fb=\""http://www.facebook.com/2008/fbml\"">"");out.println(""<head>"");out.println(""<meta http-equiv=\""content-type\"" content=\""text/html; charset=UTF-8\"">"");out.println(""<meta name=\""gwt:property\"" content=\""locale="" + locale + ""\"">"");out.println(""<link type=\""text/css\"" rel=\""stylesheet\"" href=\""NewTube.css\"">"");out.println(""<title>"" + title + ""</title>"");out.println(""<script type=\""text/javascript\"" language=\""javascript\"" src=\""newtube/newtube.nocache.js\""></script>"");out.println(""<script type='text/javascript'>var jsonStartParams = "" + startjsonarray.toString() + "";</script>"");out.println(""<script type='text/javascript'>var girlsphones = "" + CommUtils.CsvtoJson(""girlsphones.csv"").toString() + "";</script>"");out.println(""<script type='text/javascript'>"");out.println(""var mem = "" + memjsonarray.toString() + "";"");out.println(""</script>"");out.println(""</head>"");out.println(""<body>"");out.println(""<div id='fb-root'></div>"");out.println(""<script>"");out.println(""window.fbAsyncInit = function() {"");out.println(""FB.init({appId: '"" + facebookid + ""', status: true, cookie: true,xfbml: true});};"");out.println(""(function() {"");out.println(""var e = document.createElement('script'); e.async = true;"");out.println(""e.src = document.location.protocol +"");out.println(""'//connect.facebook.net/"" + locale + ""/all.js';"");out.println(""document.getElementById('fb-root').appendChild(e);"");out.println(""}());"");out.println(""</script>"");out.println(""<div id=\""start\""></div>"");out.println(""<div id=\""seo_content\"">"");BufferedReader bufRdr = new BufferedReader(new InputStreamReader(new FileInputStream(domain + "".html""), ""UTF8""));String contline = null;while ((contline = bufRdr.readLine()) != null) {out.println(contline);}bufRdr.close();if (countrycode != null && !countrycode.equalsIgnoreCase(""US"") && !countrycode.equalsIgnoreCase(""IE"") && !countrycode.equalsIgnoreCase(""UK"") && intcount > 2 && intcount < 51) {out.println(""<script type=\""text/javascript\""><!--"");out.println(""google_ad_client = \"""" + google_ad_client + ""\"";"");out.println(""google_ad_slot = \"""" + google_ad_slot1 + ""\"";"");out.println(""google_ad_width = "" + google_ad_width1 + "";"");out.println(""google_ad_height = "" + google_ad_height1 + "";"");out.println(""//-->"");out.println(""</script>"");out.println(""<script type=\""text/javascript\"""");out.println(""src=\"""" + google_ad_client + "".js\"">"");out.println(""</script>"");out.println(""<script type=\""text/javascript\""><!--"");out.println(""google_ad_client = \"""" + google_ad_client + ""\"";"");out.println(""google_ad_slot = \"""" + google_ad_slot2 + ""\"";"");out.println(""google_ad_width = "" + google_ad_width2 + "";"");out.println(""google_ad_height = "" + google_ad_height2 + "";"");out.println(""//-->"");out.println(""</script>"");out.println(""<script type=\""text/javascript\"""");out.println(""src=\"""" + google_ad_client + "".js\"">"");out.println(""</script>"");out.println(""<script type=\""text/javascript\""><!--"");out.println(""google_ad_client = \"""" + google_ad_client + ""\"";"");out.println(""google_ad_slot = \"""" + google_ad_slot3 + ""\"";"");out.println(""google_ad_width = "" + google_ad_width3 + "";"");out.println(""google_ad_height = "" + google_ad_height3 + "";"");out.println(""//-->"");out.println(""</script>"");out.println(""<script type=\""text/javascript\"""");out.println(""src=\"""" + google_ad_client + "".js\"">"");out.println(""</script>"");}if (countrycode != null && !countrycode.equalsIgnoreCase(""US"") && !countrycode.equalsIgnoreCase(""IE"") && !countrycode.equalsIgnoreCase(""UK"") && intcount > 50) {out.println(""<script type=\""text/javascript\""><!--"");out.println(""google_ad_client = \"""" + ""pub-9496078135369870"" + ""\"";"");out.println(""google_ad_slot = \"""" + ""8683942065"" + ""\"";"");out.println(""google_ad_width = "" + ""160"" + "";"");out.println(""google_ad_height = "" + ""600"" + "";"");out.println(""//-->"");out.println(""</script>"");out.println(""<script type=\""text/javascript\"""");out.println(""src=\""pub-9496078135369870"" + """" + "".js\"">"");out.println(""</script>"");out.println(""<script type=\""text/javascript\""><!--"");out.println(""google_ad_client = \"""" + ""pub-9496078135369870"" + ""\"";"");out.println(""google_ad_slot = \"""" + ""0941291340"" + ""\"";"");out.println(""google_ad_width = "" + ""728"" + "";"");out.println(""google_ad_height = "" + ""90"" + "";"");out.println(""//-->"");out.println(""</script>"");out.println(""<script type=\""text/javascript\"""");out.println(""src=\"""" + ""pub-9496078135369870"" + "".js\"">"");out.println(""</script>"");out.println(""<script type=\""text/javascript\""><!--"");out.println(""google_ad_client = \"""" + ""pub-9496078135369870"" + ""\"";"");out.println(""google_ad_slot = \"""" + ""4621616265"" + ""\"";"");out.println(""google_ad_width = "" + ""468"" + "";"");out.println(""google_ad_height = "" + ""60"" + "";"");out.println(""//-->"");out.println(""</script>"");out.println(""<script type=\""text/javascript\"""");out.println(""src=\"""" + ""pub-9496078135369870"" + "".js\"">"");out.println(""</script>"");}out.println(""</div>"");out.println(""</body></html>"");out.close();}}public void deleteGroup(String groupID) throws XregistryException {try {Connection connection = context.createConnection();connection.setAutoCommit(false);try {PreparedStatement statement1 = connection.prepareStatement(DELETE_GROUP_SQL_MAIN);statement1.setString(1, groupID);int updateCount = statement1.executeUpdate();if (updateCount == 0) {throw new XregistryException(""Database is not updated, Can not find such Group "" + groupID);}if (cascadingDeletes) {PreparedStatement statement2 = connection.prepareStatement(DELETE_GROUP_SQL_DEPEND);statement2.setString(1, groupID);statement2.setString(2, groupID);statement2.executeUpdate();}connection.commit();groups.remove(groupID);log.info(""Delete Group "" + groupID + (cascadingDeletes ? "" with cascading deletes "" : """"));} catch (SQLException e) {connection.rollback();throw new XregistryException(e);} finally {context.closeConnection(connection);}} catch (SQLException e) {throw new XregistryException(e);}}public void deleteUser(String userID) throws XregistryException {try {userID = Utils.canonicalizeDN(userID);Connection connection = context.createConnection();connection.setAutoCommit(false);try {PreparedStatement statement1 = connection.prepareStatement(DELETE_USER_SQL_MAIN);statement1.setString(1, userID);statement1.executeUpdate();PreparedStatement statement2 = connection.prepareStatement(DELETE_USER_SQL_DEPEND);statement2.setString(1, userID);statement2.executeUpdate();connection.commit();Collection<Group> groupList = groups.values();for (Group group : groupList) {group.removeUser(userID);}log.info(""Delete User "" + userID);} catch (SQLException e) {connection.rollback();throw new XregistryException(e);} finally {context.closeConnection(connection);}} catch (SQLException e) {throw new XregistryException(e);}}public void callBatch(final List<JsonRpcClient.Call> calls, final JsonRpcClient.BatchCallback callback) {HttpPost httpPost = new HttpPost(mRpcUrl);JSONObject requestJson = new JSONObject();JSONArray callsJson = new JSONArray();try {for (int i = 0; i < calls.size(); i++) {JsonRpcClient.Call call = calls.get(i);JSONObject callJson = new JSONObject();callJson.put(""method"", call.getMethodName());if (call.getParams() != null) {JSONObject callParams = (JSONObject) call.getParams();@SuppressWarnings(""unchecked"") Iterator<String> keysIterator = callParams.keys();String key;while (keysIterator.hasNext()) {key = keysIterator.next();callJson.put(key, callParams.get(key));}}callsJson.put(i, callJson);}requestJson.put(""calls"", callsJson);httpPost.setEntity(new StringEntity(requestJson.toString(), ""UTF-8""));if (Log.isLoggable(TAG, Log.VERBOSE)) {Log.v(TAG, ""POST request: "" + requestJson.toString());}} catch (JSONException e) {} catch (UnsupportedEncodingException e) {}try {HttpResponse httpResponse = mHttpClient.execute(httpPost);final int responseStatusCode = httpResponse.getStatusLine().getStatusCode();if (200 <= responseStatusCode && responseStatusCode < 300) {BufferedReader reader = new BufferedReader(new InputStreamReader(httpResponse.getEntity().getContent(), ""UTF-8""), 8 * 1024);StringBuilder sb = new StringBuilder();String line;while ((line = reader.readLine()) != null) {sb.append(line).append(""\n"");}if (Log.isLoggable(TAG, Log.VERBOSE)) {Log.v(TAG, ""POST response: "" + sb.toString());}JSONTokener tokener = new JSONTokener(sb.toString());JSONObject responseJson = new JSONObject(tokener);JSONArray resultsJson = responseJson.getJSONArray(""results"");Object[] resultData = new Object[calls.size()];for (int i = 0; i < calls.size(); i++) {JSONObject result = resultsJson.getJSONObject(i);if (result.has(""error"")) {callback.onError(i, new JsonRpcException((int) result.getInt(""error""), calls.get(i).getMethodName(), result.getString(""message""), null));resultData[i] = null;} else {resultData[i] = result.get(""data"");}}callback.onData(resultData);} else {callback.onError(-1, new JsonRpcException(-1, ""Received HTTP status code other than HTTP 2xx: "" + httpResponse.getStatusLine().getReasonPhrase()));}} catch (IOException e) {Log.e(""JsonRpcJavaClient"", e.getMessage());e.printStackTrace();} catch (JSONException e) {Log.e(""JsonRpcJavaClient"", ""Error parsing server JSON response: "" + e.getMessage());e.printStackTrace();}}private void initialize() {StringBuffer license = new StringBuffer();URL url;InputStreamReader in;BufferedReader reader;String str;JTextArea textArea;JButton button;GridBagConstraints c;setTitle(""Mibble License"");setSize(600, 600);setDefaultCloseOperation(DISPOSE_ON_CLOSE);getContentPane().setLayout(new GridBagLayout());url = getClass().getClassLoader().getResource(""LICENSE.txt"");if (url == null) {license.append(""Couldn't locate license file (LICENSE.txt)."");} else {try {in = new InputStreamReader(url.openStream());reader = new BufferedReader(in);while ((str = reader.readLine()) != null) {if (!str.equals("""")) {license.append(str);}license.append(""\n"");}reader.close();} catch (IOException e) {license.append(""Error reading license file "");license.append(""(LICENSE.txt):\n\n"");license.append(e.getMessage());}}textArea = new JTextArea(license.toString());textArea.setEditable(false);c = new GridBagConstraints();c.fill = GridBagConstraints.BOTH;c.weightx = 1.0d;c.weighty = 1.0d;c.insets = new Insets(4, 5, 4, 5);getContentPane().add(new JScrollPane(textArea), c);button = new JButton(""Close"");button.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {dispose();}});c = new GridBagConstraints();c.gridy = 1;c.anchor = GridBagConstraints.CENTER;c.insets = new Insets(10, 10, 10, 10);getContentPane().add(button, c);}public void copyFilesIntoProject(HashMap<String, String> files) {Set<String> filenames = files.keySet();for (String key : filenames) {String realPath = files.get(key);if (key.equals(""fw4ex.xml"")) {try {FileReader in = new FileReader(new File(realPath));FileWriter out = new FileWriter(new File(project.getLocation() + ""/"" + bundle.getString(""Stem"") + STEM_FILE_EXETENSION));int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();} catch (FileNotFoundException e) {Activator.getDefault().showMessage(""File "" + key + "" not found... Error while moving files to the new project."");} catch (IOException ie) {Activator.getDefault().showMessage(""Error while moving "" + key + "" to the new project."");}} else {try {FileReader in = new FileReader(new File(realPath));FileWriter out = new FileWriter(new File(project.getLocation() + ""/"" + key));int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();} catch (FileNotFoundException e) {Activator.getDefault().showMessage(""File "" + key + "" not found... Error while moving files to the new project."");} catch (IOException ie) {Activator.getDefault().showMessage(""Error while moving "" + key + "" to the new project."");}}}}"	5
"public static void fileCopy(final File src, final File dest, final boolean overwrite) throws IOException {if (!dest.exists() || (dest.exists() && overwrite)) {final FileChannel srcChannel = new FileInputStream(src).getChannel();final FileChannel dstChannel = new FileOutputStream(dest).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();}}public static void copyFileStreams(File fromFile, File toFile) throws IOException {if (!fromFile.exists()) {return;}FileInputStream fis = new FileInputStream(fromFile);FileOutputStream fos = new FileOutputStream(toFile);int read = 0;byte[] buf = new byte[1024];while (-1 != read) {read = fis.read(buf);if (read >= 0) {fos.write(buf, 0, read);}}fos.close();fis.close();}public void testReleaseOnEntityWriteTo() throws Exception {HttpParams params = defaultParams.copy();ConnManagerParams.setMaxTotalConnections(params, 1);ConnManagerParams.setMaxConnectionsPerRoute(params, new ConnPerRouteBean(1));ThreadSafeClientConnManager mgr = createTSCCM(params, null);assertEquals(0, mgr.getConnectionsInPool());DefaultHttpClient client = new DefaultHttpClient(mgr, params);HttpGet httpget = new HttpGet(""/random/20000"");HttpHost target = getServerHttp();HttpResponse response = client.execute(target, httpget);ClientConnectionRequest connreq = mgr.requestConnection(new HttpRoute(target), null);try {connreq.getConnection(250, TimeUnit.MILLISECONDS);fail(""ConnectionPoolTimeoutException should have been thrown"");} catch (ConnectionPoolTimeoutException expected) {}HttpEntity e = response.getEntity();assertNotNull(e);ByteArrayOutputStream outsteam = new ByteArrayOutputStream();e.writeTo(outsteam);assertEquals(1, mgr.getConnectionsInPool());connreq = mgr.requestConnection(new HttpRoute(target), null);ManagedClientConnection conn = connreq.getConnection(250, TimeUnit.MILLISECONDS);mgr.releaseConnection(conn, -1, null);mgr.shutdown();}public void testReleaseOnAbort() throws Exception {HttpParams params = defaultParams.copy();ConnManagerParams.setMaxTotalConnections(params, 1);ConnManagerParams.setMaxConnectionsPerRoute(params, new ConnPerRouteBean(1));ThreadSafeClientConnManager mgr = createTSCCM(params, null);assertEquals(0, mgr.getConnectionsInPool());DefaultHttpClient client = new DefaultHttpClient(mgr, params);HttpGet httpget = new HttpGet(""/random/20000"");HttpHost target = getServerHttp();HttpResponse response = client.execute(target, httpget);ClientConnectionRequest connreq = mgr.requestConnection(new HttpRoute(target), null);try {connreq.getConnection(250, TimeUnit.MILLISECONDS);fail(""ConnectionPoolTimeoutException should have been thrown"");} catch (ConnectionPoolTimeoutException expected) {}HttpEntity e = response.getEntity();assertNotNull(e);httpget.abort();assertEquals(0, mgr.getConnectionsInPool());connreq = mgr.requestConnection(new HttpRoute(target), null);ManagedClientConnection conn = connreq.getConnection(250, TimeUnit.MILLISECONDS);mgr.releaseConnection(conn, -1, null);mgr.shutdown();}public void testReleaseOnIOException() throws Exception {localServer.register(""/dropdead"", new HttpRequestHandler() {public void handle(final HttpRequest request, final HttpResponse response, final HttpContext context) throws HttpException, IOException {BasicHttpEntity entity = new BasicHttpEntity() {@Overridepublic void writeTo(final OutputStream outstream) throws IOException {byte[] tmp = new byte[5];outstream.write(tmp);outstream.flush();DefaultHttpServerConnection conn = (DefaultHttpServerConnection) context.getAttribute(ExecutionContext.HTTP_CONNECTION);try {conn.sendResponseHeader(response);} catch (HttpException ignore) {}}};entity.setChunked(true);response.setEntity(entity);}});HttpParams params = defaultParams.copy();ConnManagerParams.setMaxTotalConnections(params, 1);ConnManagerParams.setMaxConnectionsPerRoute(params, new ConnPerRouteBean(1));ThreadSafeClientConnManager mgr = createTSCCM(params, null);assertEquals(0, mgr.getConnectionsInPool());DefaultHttpClient client = new DefaultHttpClient(mgr, params);HttpGet httpget = new HttpGet(""/dropdead"");HttpHost target = getServerHttp();HttpResponse response = client.execute(target, httpget);ClientConnectionRequest connreq = mgr.requestConnection(new HttpRoute(target), null);try {connreq.getConnection(250, TimeUnit.MILLISECONDS);fail(""ConnectionPoolTimeoutException should have been thrown"");} catch (ConnectionPoolTimeoutException expected) {}HttpEntity e = response.getEntity();assertNotNull(e);try {EntityUtils.toByteArray(e);fail(""MalformedChunkCodingException should have been thrown"");} catch (MalformedChunkCodingException expected) {}assertEquals(0, mgr.getConnectionsInPool());connreq = mgr.requestConnection(new HttpRoute(target), null);ManagedClientConnection conn = connreq.getConnection(250, TimeUnit.MILLISECONDS);mgr.releaseConnection(conn, -1, null);mgr.shutdown();}boolean getHTML(URL url) {html = """";int r;BufferedInputStream in = null;BufferedInputStream imgIn = null;boolean retry;Vector imageRd = new Vector(0);do {retry = false;try {in = new BufferedInputStream(url.openStream(), 4096);} catch (IOException ioe) {rbe.stats.error(""Unable to open URL."", url.toExternalForm());ioe.printStackTrace();retry = true;continue;}try {while ((r = in.read(buffer, 0, buffer.length)) != -1) {if (r > 0) {html = html + new String(buffer, 0, r);}}} catch (IOException ioe) {rbe.stats.error(""Unable to read HTML from URL."", url.toExternalForm());retry = true;continue;}if (retry) {try {if (waitKey) {rbe.getKey();} else {sleep(1000L);}} catch (InterruptedException inte) {System.out.println(""In getHTML, caught interrupted exception!"");return true;}}} while (retry);try {in.close();} catch (IOException ioe) {rbe.stats.error(""Unable to close URL."", url.toExternalForm());}if (DEBUG > 0) {}if (DEBUG > 10) {System.out.println(html);}int cur = 0;if (!RBE.getImage) return true;findImg(html, url, imgPat, srcPat, quotePat, imageRd);findImg(html, url, inputPat, srcPat, quotePat, imageRd);if (DEBUG > 2) {System.out.println(""Found "" + imageRd.size() + "" images."");}while (imageRd.size() > 0) {int max = imageRd.size();int min = Math.max(max - rbe.maxImageRd, 0);int i;try {for (i = min; i < max; i++) {ImageReader rd = (ImageReader) imageRd.elementAt(i);if (!rd.readImage()) {if (DEBUG > 2) {System.out.println(""Read "" + rd.tot + "" bytes from "" + rd.imgURLStr);}imageRd.removeElementAt(i);i--;max--;}}} catch (InterruptedException inte) {System.out.println(""In getHTML, caught interrupted exception!"");return true;}}return true;}public static boolean copyFile(String sourceFileName, String destFileName) {if (sourceFileName == null || destFileName == null) return false;if (sourceFileName.equals(destFileName)) return false;try {java.io.FileInputStream in = new java.io.FileInputStream(sourceFileName);java.io.FileOutputStream out = new java.io.FileOutputStream(destFileName);try {byte[] buf = new byte[31000];int read = in.read(buf);while (read > -1) {out.write(buf, 0, read);read = in.read(buf);}} finally {in.close();out.close();}} catch (Exception e) {System.out.println(e.toString());return false;}return true;}public static boolean copyFile(final String src, final String dest) {if (fileExists(src)) {try {FileChannel srcChannel = new FileInputStream(src).getChannel();FileChannel dstChannel = new FileOutputStream(dest).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();return true;} catch (IOException e) {Logger.getAnonymousLogger().severe(e.getLocalizedMessage());}}return false;}public String encrypt(String plaintext) {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {System.err.println(e.getMessage());}try {md.update(plaintext.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {System.err.println(e.getMessage());}byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}@Testpublic void testConfigurartion() {try {Enumeration<URL> assemblersToRegister = this.getClass().getClassLoader().getResources(""META-INF/PrintAssemblerFactory.properties"");log.debug(""PrintAssemblerFactory "" + SimplePrintJobTest.class.getClassLoader().getResource(""META-INF/PrintAssemblerFactory.properties""));log.debug(""ehcache "" + SimplePrintJobTest.class.getClassLoader().getResource(""ehcache.xml""));log.debug(""log4j "" + this.getClass().getClassLoader().getResource(""/log4j.xml""));if (log.isDebugEnabled()) {while (assemblersToRegister.hasMoreElements()) {URL url = (URL) assemblersToRegister.nextElement();InputStream in = url.openStream();BufferedReader buff = new BufferedReader(new InputStreamReader(in));String line = buff.readLine();while (line != null) {log.debug(line);line = buff.readLine();}buff.close();in.close();}}} catch (IOException e) {e.printStackTrace();}}"	5
"protected static Parser buildParser(URL url) throws IOException, ParserException {Parser parser;URLConnection connection = openConnection(url);if (!(connection instanceof HttpURLConnection) || ((HttpURLConnection) connection).getResponseCode() == 200) {parser = new Parser(connection);} else {parser = null;}return parser;}private String load(URL url) {BufferedReader r = null;try {r = new BufferedReader(new InputStreamReader(url.openStream()));StringBuffer buf = new StringBuffer();while (r.ready()) {buf.append(r.readLine()).append('\n');}r.close();return buf.toString();} catch (IOException e) {e.printStackTrace();return null;}}public InputStream getDaoConfig(String connectionType) throws IOException {URL url = null;if (connectionType.equals(SQL.ORACLE)) {url = com.apelon.dts.db.admin.config.MigrateConfig.class.getResource(""oracle.xml"");} else if (connectionType.equals(SQL.SQL2K)) {url = com.apelon.dts.db.admin.config.MigrateConfig.class.getResource(""sql2k.xml"");}return url.openStream();}public static void test2() throws Exception {int keySize = 1024;int dBlockSize = keySize / 8;int eBlockSize = dBlockSize - 8 - 3;CertAndKeyGen certAndKeyGen = new CertAndKeyGen(""RSA"", ""MD5WithRSA"");certAndKeyGen.generate(keySize);PublicKey publicKey = certAndKeyGen.getPublicKey();PrivateKey privateKey = certAndKeyGen.getPrivateKey();Cipher cipher1 = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");cipher1.init(Cipher.ENCRYPT_MODE, publicKey);String fileA = ""C:/temp/a.txt"";String fileB = ""C:/temp/b.txt"";String fileC = ""C:/temp/c.txt"";FileInputStream fis = new FileInputStream(fileA);FileOutputStream fos = new FileOutputStream(fileB, false);CipherOutputStream eos = new CipherOutputStream(fos, cipher1, eBlockSize);byte[] b = new byte[128];int i = fis.read(b);while (i != -1) {eos.write(b, 0, i);i = fis.read(b);}eos.flush();eos.close();fos.close();Cipher cipher2 = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");cipher2.init(Cipher.DECRYPT_MODE, privateKey);fis = new FileInputStream(fileB);CipherInputStream cis = new CipherInputStream(fis, cipher2, dBlockSize);FileOutputStream decodedFile = new FileOutputStream(fileC, false);int read = -1;while ((read = cis.read()) > -1) {decodedFile.write(read);}decodedFile.close();fis.close();}public static void copyFile(String inName, String otName) throws Exception {File inFile = null;File otFile = null;try {inFile = new File(inName);otFile = new File(otName);} catch (Exception e) {e.printStackTrace();}if (inFile == null || otFile == null) return;FileChannel sourceChannel = new FileInputStream(inFile).getChannel();FileChannel destinationChannel = new FileOutputStream(otFile).getChannel();sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel);sourceChannel.close();destinationChannel.close();}public void get(File fileToGet) throws IOException {String fileName = fileToGet.getName();URL url = new URL(this.endpointURL + fileName);URLConnection connection = url.openConnection();InputStream input = connection.getInputStream();log.debug(""get: "" + fileName);try {FileOutputStream fileStream = new FileOutputStream(fileToGet);byte[] bt = new byte[10000];int cnt = input.read(bt);log.debug(""Read bytes: "" + cnt);while (cnt != -1) {fileStream.write(bt, 0, cnt);cnt = input.read(bt);}input.close();fileStream.close();} catch (IOException e) {new File(fileName).delete();throw e;}}public void delete(String fileName) throws IOException {log.debug(""deleting: "" + fileName);URL url = new URL(this.endpointURL + ""?operation=delete&filename="" + fileName);URLConnection connection = url.openConnection();connection.setDoOutput(false);connection.setDoInput(true);connection.setUseCaches(false);connection.getInputStream();}public static synchronized BufferedImage loadBufferedJPEGImage(URL url) {BufferedImage image = null;if (url != null) {InputStream in = null;try {in = url.openStream();JPEGImageDecoder decoder = JPEGCodec.createJPEGDecoder(in);image = decoder.decodeAsBufferedImage();} catch (Exception e) {log.severe(""URL: "" + url + "" - "" + e.getMessage());image = null;} finally {try {if (in != null) in.close();} catch (IOException ioe) {log.severe(""URL: "" + url + "" - "" + ioe.getMessage());}}if (image != null) {log.config(""Image type : "" + image.getType());if (image.getWidth() <= 0 || image.getHeight() <= 0) {log.severe(""URL: "" + url + "" =0"");image = null;}}}return image;}private void output(HttpServletResponse resp, InputStream is, long length, String fileName) throws Exception {resp.reset();String mimeType = ""image/jpeg"";resp.setContentType(mimeType);resp.setContentLength((int) length);resp.setHeader(""Content-Disposition"", ""inline; filename=\"""" + fileName + ""\"""");resp.setHeader(""Cache-Control"", ""must-revalidate"");ServletOutputStream sout = resp.getOutputStream();IOUtils.copy(is, sout);sout.flush();resp.flushBuffer();}public void writeConfigurationFile() throws IOException, ComponentException {SystemConfig config = parent.getParentSystem().getConfiguration();File original = config.getLocation();File backup = new File(original.getParentFile(), original.getName() + ""."" + System.currentTimeMillis());FileInputStream in = new FileInputStream(original);FileOutputStream out = new FileOutputStream(backup);byte[] buffer = new byte[2048];try {int bytesread = 0;while ((bytesread = in.read(buffer)) > 0) {out.write(buffer, 0, bytesread);}} catch (IOException e) {logger.warn(""Failed to copy backup of configuration file"");throw e;} finally {in.close();out.close();}FileWriter replace = new FileWriter(original);replace.write(config.toFileFormat());replace.close();logger.info(""Re-wrote configuration file "" + original.getPath());}"	5
"public static String getGoGl(final String urlPath, String key) {log.debug(""getGoGl url "" + urlPath);log.debug(""getGoGl key "" + key);String shortUrl = null;URL simpleURL = null;HttpsURLConnection url = null;BufferedInputStream bStream = null;StringBuffer resultString = new StringBuffer("""");String inputString = ""{\""longUrl\"":\"""" + urlPath + ""\""}"";log.debug(""getGoGl inputString "" + inputString);try {simpleURL = new URL(""https://www.googleapis.com/urlshortener/v1/url?key="" + key);url = (HttpsURLConnection) simpleURL.openConnection();url.setDoOutput(true);url.setRequestProperty(""content-type"", ""application/json"");PrintWriter pw = new PrintWriter(url.getOutputStream());pw.print(inputString);pw.close();} catch (Exception ex) {log.error(ex);shortUrl = urlPath;}try {bStream = new BufferedInputStream(url.getInputStream());int i;while ((i = bStream.read()) >= 0) {resultString.append((char) i);}} catch (Exception ex) {SocialUtils.log.error(ex);shortUrl = urlPath;}return shortUrl;}public static boolean copyFile(File sourceFile, File destFile) throws IOException {long flag = 0;if (!destFile.exists()) destFile.createNewFile();FileChannel source = null;FileChannel destination = null;try {source = new FileInputStream(sourceFile).getChannel();destination = new FileOutputStream(destFile).getChannel();flag = destination.transferFrom(source, 0, source.size());} catch (Exception e) {Logger.getLogger(FileUtils.class.getPackage().getName()).log(Level.WARNING, ""ERROR: Problem copying file"", e);} finally {if (source != null) source.close();if (destination != null) destination.close();}if (flag == 0) return false; else return true;}public ResourceMigrator createDefaultResourceMigrator(NotificationReporter reporter, boolean strictMode) throws ResourceMigrationException {return new ResourceMigrator() {public void migrate(InputMetadata meta, InputStream inputStream, OutputCreator outputCreator) throws IOException, ResourceMigrationException {OutputStream outputStream = outputCreator.createOutputStream();IOUtils.copy(inputStream, outputStream);}};}public RemotePolicyMigrator createRemotePolicyMigrator() {return new RemotePolicyMigrator() {public String migratePolicy(InputStream stream, String url) throws ResourceMigrationException, IOException {ByteArrayOutputCreator oc = new ByteArrayOutputCreator();IOUtils.copyAndClose(stream, oc.getOutputStream());return oc.getOutputStream().toString();}};}@Overridepublic void decorate(Object element, IDecoration decoration) {if (element != null && element instanceof IProject) {InputStream is = null;try {IProject project = (IProject) element;IFile file = project.getFile(Activator.PLUGIN_CONF);if (file.exists()) {URL url = bundle.getEntry(""icons/leaf4e_decorator.gif"");is = FileLocator.toFileURL(url).openStream();Image img = new Image(Display.getCurrent(), is);ImageDescriptor id = ImageDescriptor.createFromImage(img);decoration.addOverlay(id, IDecoration.TOP_LEFT);}} catch (Exception e) {Status status = new Status(IStatus.WARNING, Activator.PLUGIN_ID, ""Decorating error"", e);logger.log(status);} finally {if (is != null) {try {is.close();} catch (IOException e) {Status status = new Status(IStatus.WARNING, Activator.PLUGIN_ID, """", e);logger.log(status);}}}}}public static Image getPluginImage(Object plugin, String name) {try {try {URL url = getPluginImageURL(plugin, name);if (m_URLImageMap.containsKey(url)) return m_URLImageMap.get(url);InputStream is = url.openStream();Image image;try {image = getImage(is);m_URLImageMap.put(url, image);} finally {is.close();}return image;} catch (Throwable e) {}} catch (Throwable e) {}return null;}private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) throws IOException {boolean resultat = false;FileInputStream fis = new FileInputStream(sRC2);FileOutputStream fos = new FileOutputStream(dEST2);java.nio.channels.FileChannel channelSrc = fis.getChannel();java.nio.channels.FileChannel channelDest = fos.getChannel();progressEnCours.setValue(0);progressEnCours.setString(sRC2 + "" : 0 %"");channelSrc.transferTo(0, channelSrc.size(), channelDest);progressEnCours.setValue(100);progressEnCours.setString(sRC2 + "" : 100 %"");if (channelSrc.size() == channelDest.size()) {resultat = true;} else {resultat = false;}fis.close();fos.close();return (resultat);}private String readUrl(String feature) {StringBuffer content = new StringBuffer();try {URL url = new URL(feature);HttpURLConnection conn = (HttpURLConnection) url.openConnection();conn.connect();BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));String line;while ((line = rd.readLine()) != null) {content.append(line);}conn.disconnect();} catch (Exception e) {}return content.toString();}private void copy(File sourceFile, File destinationFile) {try {FileChannel in = new FileInputStream(sourceFile).getChannel();FileChannel out = new FileOutputStream(destinationFile).getChannel();try {in.transferTo(0, in.size(), out);in.close();out.close();} catch (IOException e) {}} catch (FileNotFoundException e) {}}private void deleteProject(String uid, String home, HttpServletRequest request, HttpServletResponse response) throws Exception {String project = request.getParameter(""project"");String line;response.setContentType(""text/html"");PrintWriter out = response.getWriter();htmlHeader(out, ""Project Status"", """");try {synchronized (Class.forName(""com.sun.gep.SunTCP"")) {Vector list = new Vector();String directory = home;Runtime.getRuntime().exec(""/usr/bin/rm -rf "" + directory + project);FilePermission perm = new FilePermission(directory + SUNTCP_LIST, ""read,write,execute"");File listfile = new File(directory + SUNTCP_LIST);BufferedReader read = new BufferedReader(new FileReader(listfile));while ((line = read.readLine()) != null) {if (!((new StringTokenizer(line, ""\t"")).nextToken().equals(project))) {list.addElement(line);}}read.close();if (list.size() > 0) {PrintWriter write = new PrintWriter(new BufferedWriter(new FileWriter(listfile)));for (int i = 0; i < list.size(); i++) {write.println((String) list.get(i));}write.close();} else {listfile.delete();}out.println(""The project was successfully deleted."");}} catch (Exception e) {out.println(""Error accessing this project."");}out.println(""<center><form><input type=button value=Continue onClick=\""opener.location.reload(); window.close()\""></form></center>"");htmlFooter(out);}"	5
"public static int executeUpdate(EOAdaptorChannel channel, String sql, boolean autoCommit) throws SQLException {int rowsUpdated;boolean wasOpen = channel.isOpen();if (!wasOpen) {channel.openChannel();}Connection conn = ((JDBCContext) channel.adaptorContext()).connection();try {Statement stmt = conn.createStatement();try {rowsUpdated = stmt.executeUpdate(sql);if (autoCommit) {conn.commit();}} catch (SQLException ex) {if (autoCommit) {conn.rollback();}throw new RuntimeException(""Failed to execute the statement '"" + sql + ""'."", ex);} finally {stmt.close();}} finally {if (!wasOpen) {channel.closeChannel();}}return rowsUpdated;}private Element getXmlFromGeoNetwork(String urlIn, Session userSession) throws FailedActionException {Element results = null;try {URL url = new URL(urlIn);URLConnection conn = url.openConnection();conn.setConnectTimeout(1000);String cookie = (String) userSession.getAttribute(""usercookie.object"");if (cookie != null) conn.setRequestProperty(""Cookie"", cookie);BufferedInputStream in = new BufferedInputStream(conn.getInputStream());try {results = Xml.loadStream(in);} finally {in.close();}} catch (Exception e) {throw new FailedActionException(FailedActionReason.SYSTEM_ERROR);}return results;}private ArrayList<String> loadProperties(String filename) throws DevFailed, IOException {java.net.URL url = getClass().getResource(filename);if (url == null) {Except.throw_exception(""LOAD_PROPERTY_FAILED"", ""URL for property file ("" + filename + "") is null !"", ""PogoProperty.loadProperties()"");return null;}InputStream is = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(is));ArrayList<String> vs = new ArrayList<String>();String str;while ((str = br.readLine()) != null) {str = str.trim();if (!str.startsWith(""#"")) if (str.length() > 0) vs.add(str);}br.close();return vs;}public void write(File file) throws Exception {if (medooFile != null) {if (!medooFile.renameTo(file)) {BufferedInputStream in = null;BufferedOutputStream out = null;try {in = new BufferedInputStream(new FileInputStream(medooFile));out = new BufferedOutputStream(new FileOutputStream(file));IOUtils.copy(in, out);} finally {if (in != null) {try {in.close();} catch (IOException e) {}}if (out != null) {try {out.close();} catch (IOException e) {}}}}} else {throw new FileUploadException(""Cannot write uploaded file to disk!"");}}private static String digest(String myinfo) {try {MessageDigest alga = MessageDigest.getInstance(""SHA"");alga.update(myinfo.getBytes());byte[] digesta = alga.digest();return byte2hex(digesta);} catch (Exception ex) {return myinfo;}}@Overrideprotected IProject createProject(String projectName, IProgressMonitor monitor) throws CoreException {monitor.beginTask(CheatSheetsPlugin.INSTANCE.getString(""_UI_CreateJavaProject_message"", new String[] { projectName }), 5);IProject project = super.createProject(projectName, new SubProgressMonitor(monitor, 1));if (project != null) {IProjectDescription description = project.getDescription();if (!description.hasNature(JavaCore.NATURE_ID)) {IJavaProject javaProject = JavaCore.create(project);if (javaProject != null) {String[] natures = description.getNatureIds();String[] javaNatures = new String[natures.length + 1];System.arraycopy(natures, 0, javaNatures, 0, natures.length);javaNatures[natures.length] = JavaCore.NATURE_ID;description.setNatureIds(javaNatures);project.setDescription(description, new SubProgressMonitor(monitor, 1));IFolder sourceFolder = project.getFolder(SOURCE_FOLDER);if (!sourceFolder.exists()) {sourceFolder.create(true, true, new SubProgressMonitor(monitor, 1));}javaProject.setOutputLocation(project.getFolder(OUTPUT_FOLDER).getFullPath(), new SubProgressMonitor(monitor, 1));IClasspathEntry[] entries = new IClasspathEntry[] { JavaCore.newSourceEntry(sourceFolder.getFullPath()), JavaCore.newContainerEntry(new Path(""org.eclipse.jdt.launching.JRE_CONTAINER"")) };javaProject.setRawClasspath(entries, new SubProgressMonitor(monitor, 1));}}}monitor.done();return project;}public static int[] bubbleSort(int... a) {boolean swapped;do {swapped = false;for (int i = 0; i < a.length - 1; i++) {if (a[i] > a[i + 1]) {int tmp = a[i];a[i] = a[i + 1];a[i + 1] = tmp;swapped = true;}}} while (swapped);return a;}public InputStream resolve(String uri) throws SAJException {try {URI url = new URI(uri);InputStream stream = url.toURL().openStream();if (stream == null) throw new SAJException(""URI "" + uri + "" can't be resolved"");return stream;} catch (SAJException e) {throw e;} catch (Exception e) {throw new SAJException(""Invalid uri to resolve "" + uri, e);}}public void moveRowUp(int row) throws FidoDatabaseException {try {Connection conn = null;Statement stmt = null;try {conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();int max = findMaxRank(stmt);if ((row < 2) || (row > max)) throw new IllegalArgumentException(""Row number not between 2 and "" + max);stmt.executeUpdate(""update WordClassifications set Rank = -1 where Rank = "" + row);stmt.executeUpdate(""update WordClassifications set Rank = "" + row + "" where Rank = "" + (row - 1));stmt.executeUpdate(""update WordClassifications set Rank = "" + (row - 1) + "" where Rank = -1"");conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public void moveRowDown(int row) throws FidoDatabaseException {try {Connection conn = null;Statement stmt = null;try {conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();int max = findMaxRank(stmt);if ((row < 1) || (row > (max - 1))) throw new IllegalArgumentException(""Row number not between 1 and "" + (max - 1));stmt.executeUpdate(""update WordClassifications set Rank = -1 where Rank = "" + row);stmt.executeUpdate(""update WordClassifications set Rank = "" + row + "" where Rank = "" + (row + 1));stmt.executeUpdate(""update WordClassifications set Rank = "" + (row + 1) + "" where Rank = -1"");conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}"	5
"public static String getContents(String urlStr) throws Exception {String contents = """";URL url = new URL(urlStr);URLConnection openConnection = url.openConnection();final char[] buffer = new char[1024 * 1024];StringBuilder out = new StringBuilder();Reader in = new InputStreamReader(openConnection.getInputStream(), ""UTF-8"");int read;do {read = in.read(buffer, 0, buffer.length);if (read > 0) {out.append(buffer, 0, read);}} while (read >= 0);contents = out.toString();return contents;}public static String download(String urlStr, String folder, String title) {String result = """";try {long startTime = System.currentTimeMillis();URL url = new URL(urlStr);url.openConnection();InputStream reader = url.openStream();FileOutputStream writer = new FileOutputStream(folder + File.separator + title);byte[] buffer = new byte[1024 * 1024];int totalBytesRead = 0;int bytesRead = 0;while ((bytesRead = reader.read(buffer)) > 0) {writer.write(buffer, 0, bytesRead);buffer = new byte[153600];totalBytesRead += bytesRead;}long endTime = System.currentTimeMillis();result = ""Done. "" + (new Integer(totalBytesRead).toString()) + "" bytes read ("" + (new Long(endTime - startTime).toString()) + "" millseconds).\n"";writer.close();reader.close();} catch (Exception e) {result = ""Can not download. "" + folder + File.separator + title + "":\n"" + e.getMessage();}return result;}public static String generate(boolean secure, boolean sep) throws UnknownHostException {MessageDigest messagedigest;StringBuilder stringbuffer = new StringBuilder();try {messagedigest = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException nosuchalgorithmexception) {throw new RuntimeException(nosuchalgorithmexception);}StringBuffer stringbuffer2;InetAddress inetaddress = InetAddress.getLocalHost();long l = System.currentTimeMillis();long l1 = 0L;if (secure) l1 = _secureRand.nextLong(); else l1 = _rand.nextLong();stringbuffer.append(inetaddress.toString());stringbuffer.append("":"");stringbuffer.append(Long.toString(l));stringbuffer.append("":"");stringbuffer.append(Long.toString(l1));messagedigest.update(stringbuffer.toString().getBytes());byte abyte0[] = messagedigest.digest();StringBuffer stringbuffer1 = new StringBuffer();for (int i = 0; i < abyte0.length; i++) {int j = abyte0[i] & 0xff;if (j < 16) stringbuffer1.append('0');stringbuffer1.append(Integer.toHexString(j));}String s = stringbuffer1.toString();stringbuffer2 = new StringBuffer();if (sep) {stringbuffer2.append(s.substring(0, 8));stringbuffer2.append(""-"");stringbuffer2.append(s.substring(8, 12));stringbuffer2.append(""-"");stringbuffer2.append(s.substring(12, 16));stringbuffer2.append(""-"");stringbuffer2.append(s.substring(16, 20));stringbuffer2.append(""-"");stringbuffer2.append(s.substring(20));return stringbuffer2.toString();} else {return s;}}private void writeFile(File file, String fileName) {try {FileInputStream fin = new FileInputStream(file);FileOutputStream fout = new FileOutputStream(dirTableModel.getDirectory().getAbsolutePath() + File.separator + fileName);int val;while ((val = fin.read()) != -1) fout.write(val);fin.close();fout.close();dirTableModel.reset();} catch (Exception e) {e.printStackTrace();}}public int getResponseCode(URI uri) {int response = -1;try {URL url = uri.toURL();HttpURLConnection connection = (HttpURLConnection) url.openConnection();response = connection.getResponseCode();} catch (MalformedURLException m) {throw new MalformedURLException(""URL not correct"");} catch (IOException e) {throw new IOException(""can open connection"");} finally {return response;}}private static void copyFile(File src, File dest, int bufSize, boolean force) throws IOException {if (dest.exists()) {if (force) {dest.delete();} else {throw new IOException(""Cannot overwrite existing file: "" + dest.getName());}}byte[] buffer = new byte[bufSize];int read = 0;InputStream in = null;OutputStream out = null;try {in = new FileInputStream(src);out = new FileOutputStream(dest);while (true) {read = in.read(buffer);if (read == -1) {break;}out.write(buffer, 0, read);}} finally {if (in != null) {try {in.close();} finally {if (out != null) {out.close();}}}}}private static void copy(String fromFileName, String toFileName) throws IOException {File fromFile = new File(fromFileName);File toFile = new File(toFileName);if (!fromFile.exists()) throw new IOException(""FileCopy: "" + ""no such source file: "" + fromFileName);if (!fromFile.isFile()) throw new IOException(""FileCopy: "" + ""can't copy directory: "" + fromFileName);if (!fromFile.canRead()) throw new IOException(""FileCopy: "" + ""source file is unreadable: "" + fromFileName);if (toFile.isDirectory()) toFile = new File(toFile, fromFile.getName());if (toFile.exists()) {if (!toFile.canWrite()) throw new IOException(""FileCopy: destination file is unwriteable: "" + toFileName);System.out.flush();BufferedReader in = new BufferedReader(new InputStreamReader(System.in));String response = in.readLine();if (!response.equals(""Y"") && !response.equals(""y"")) throw new IOException(""FileCopy: existing file was not overwritten."");} else {String parent = toFile.getParent();if (parent == null) parent = System.getProperty(""user.dir"");File dir = new File(parent);if (!dir.exists()) throw new IOException(""FileCopy: "" + ""destination directory doesn't exist: "" + parent);if (dir.isFile()) throw new IOException(""FileCopy: "" + ""destination is not a directory: "" + parent);if (!dir.canWrite()) throw new IOException(""FileCopy: "" + ""destination directory is unwriteable: "" + parent);}FileInputStream from = null;FileOutputStream to = null;try {from = new FileInputStream(fromFile);to = new FileOutputStream(toFile);byte[] buffer = new byte[4096];int bytesRead;while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead);} finally {if (from != null) try {from.close();} catch (IOException e) {;}if (to != null) try {to.close();} catch (IOException e) {;}}}public static void copyFile(File in, File out) throws IOException {FileChannel inChannel = new FileInputStream(in).getChannel();FileChannel outChannel = new FileOutputStream(out).getChannel();try {inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {throw e;} finally {if (inChannel != null) inChannel.close();if (outChannel != null) outChannel.close();}}public static void copyFile(File file, File dest_file) throws FileNotFoundException, IOException {DataInputStream in = new DataInputStream(new BufferedInputStream(new FileInputStream(file)));DataOutputStream out = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(dest_file)));byte[] buffer = new byte[1024];int read;while ((read = in.read(buffer)) > 0) {out.write(buffer, 0, read);}in.close();out.close();}protected void loadText(final Element elem) {final String urlAttr = elem.getAttributeValue(""url"");if (urlAttr != null) {String result = """";try {final URL url = new URL(DatabaseViewerManager.baseURL, urlAttr);final BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String line = reader.readLine();while (line != null) {result += line + ""\n"";line = reader.readLine();}elem.addContent(result);elem.removeAttribute(""url"");} catch (final Exception e) {throw new RuntimeException(""Could not insert text template for database viewer from file"", e);}}}"	5
"private URLConnection openConnection(final URL url) throws IOException {try {return (URLConnection) AccessController.doPrivileged(new PrivilegedExceptionAction() {public Object run() throws IOException {return url.openConnection();}});} catch (PrivilegedActionException e) {throw (IOException) e.getException();}}public void process(HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException {String UrlStr = req.getRequestURL().toString();URL domainurl = new URL(UrlStr);domain = domainurl.getHost();pathinfo = req.getPathInfo();String user_agent = req.getHeader(""user-agent"");UserAgent userAgent = UserAgent.parseUserAgentString(user_agent);String browser = userAgent.getBrowser().getName();String[] shot_domain_array = domain.split(""\\."");shot_domain = shot_domain_array[1] + ""."" + shot_domain_array[2];if (browser.equalsIgnoreCase(""Robot/Spider"") || browser.equalsIgnoreCase(""Lynx"") || browser.equalsIgnoreCase(""Downloading Tool"")) {JSONObject domainJsonObject = CsvReader.CsvReader(""domainparUpdated.csv"", shot_domain);log.info(domainJsonObject.toString());} else {String title;String locale;String facebookid;String color;String headImage;String google_ad_client;String google_ad_slot1;String google_ad_width1;String google_ad_height1;String google_ad_slot2;String google_ad_width2;String google_ad_height2;String google_ad_slot3;String google_ad_width3;String google_ad_height3;String countrycode = null;String city = null;String gmclickval = null;String videos = null;int intcount = 0;String strcount = ""0"";boolean countExist = false;Cookie[] cookies = req.getCookies();if (cookies != null) {for (int i = 0; i < cookies.length; i++) {if (cookies[i].getName().equals(""count"")) {strcount = cookies[i].getValue();if (strcount != null && strcount.length() > 0) {log.info(""Check count "" + strcount + "" path "" + cookies[i].getPath());intcount = Integer.parseInt(strcount);intcount++;} else {intcount = 1;}log.info(""New count "" + intcount);LongLivedCookie count = new LongLivedCookie(""count"", Integer.toString(intcount));resp.addCookie(count);countExist = true;}if (cookies[i].getName().equals(""countrycode"")) {countrycode = cookies[i].getValue();}if (cookies[i].getName().equals(""city"")) {city = cookies[i].getValue();}if (cookies[i].getName().equals(""videos"")) {videos = cookies[i].getValue();log.info(""Welcome videos "" + videos);}if (cookies[i].getName().equals(""gmclick"")) {log.info(""gmclick exist!!"");gmclickval = cookies[i].getValue();if (intcount % 20 == 0 && intcount > 0) {log.info(""Cancell gmclick -> "" + gmclickval + "" intcount "" + intcount + "" path "" + cookies[i].getPath());Cookie gmclick = new Cookie(""gmclick"", ""0"");gmclick.setPath(""/"");gmclick.setMaxAge(0);resp.addCookie(gmclick);}}}if (!countExist) {LongLivedCookie count = new LongLivedCookie(""count"", ""0"");resp.addCookie(count);log.info("" Not First visit count Don't Exist!!"");}if (videos == null) {LongLivedCookie videoscookies = new LongLivedCookie(""videos"", ""0"");resp.addCookie(videoscookies);log.info(""Not First visit VIDEOS Don't Exist!!"");}} else {LongLivedCookie count = new LongLivedCookie(""count"", strcount);resp.addCookie(count);LongLivedCookie videosfirstcookies = new LongLivedCookie(""videos"", ""0"");resp.addCookie(videosfirstcookies);log.info(""First visit count = "" + intcount + "" videos 0"");}String[] dompar = CommUtils.CsvParsing(domain, ""domainpar.csv"");title = dompar[0];locale = dompar[1];facebookid = dompar[2];color = dompar[3];headImage = dompar[4];google_ad_client = dompar[5];google_ad_slot1 = dompar[6];google_ad_width1 = dompar[7];google_ad_height1 = dompar[8];google_ad_slot2 = dompar[9];google_ad_width2 = dompar[10];google_ad_height2 = dompar[11];google_ad_slot3 = dompar[12];google_ad_width3 = dompar[13];google_ad_height3 = dompar[14];String ip = req.getRemoteHost();if ((countrycode == null) || (city == null)) {String ipServiceCall = ""http://api.ipinfodb.com/v2/ip_query.php?key=abbb04fd823793c5343a046e5d56225af37861b9020e9bc86313eb20486b6133&ip="" + ip + ""&output=json"";String strCallResult = """";URL url = new URL(ipServiceCall);BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream(), ""UTF8""));StringBuffer response = new StringBuffer();String line;while ((line = reader.readLine()) != null) {response.append(line);}reader.close();strCallResult = response.toString();try {JSONObject jso = new JSONObject(strCallResult);log.info(""Status -> "" + jso.get(""Status"").toString());log.info(""City -> "" + jso.get(""City"").toString());city = jso.get(""City"").toString();countrycode = jso.get(""CountryCode"").toString();log.info(""countrycode -> "" + countrycode);if ((city.length() == 0) || (city == null)) {LongLivedCookie cookcity = new LongLivedCookie(""city"", ""Helsinki"");resp.addCookie(cookcity);city = ""Helsinki"";} else {LongLivedCookie cookcity = new LongLivedCookie(""city"", city);resp.addCookie(cookcity);}if (countrycode.length() == 0 || (countrycode == null) || countrycode.equals(""RD"")) {LongLivedCookie cookcountrycode = new LongLivedCookie(""countrycode"", ""FI"");resp.addCookie(cookcountrycode);countrycode = ""FI"";} else {LongLivedCookie cookcountrycode = new LongLivedCookie(""countrycode"", countrycode);resp.addCookie(cookcountrycode);}} catch (JSONException e) {log.severe(e.getMessage());} finally {if ((countrycode == null) || (city == null)) {log.severe(""need use finally!!!"");countrycode = ""FI"";city = ""Helsinki"";LongLivedCookie cookcity = new LongLivedCookie(""city"", ""Helsinki"");resp.addCookie(cookcity);LongLivedCookie cookcountrycode = new LongLivedCookie(""countrycode"", ""FI"");resp.addCookie(cookcountrycode);}}}JSONArray startjsonarray = new JSONArray();JSONArray memjsonarray = new JSONArray();Map<String, Object> map = new HashMap<String, Object>();Map<String, Object> mapt = new HashMap<String, Object>();mapt.put(""img"", headImage);mapt.put(""color"", color);mapt.put(""title"", title);mapt.put(""locale"", locale);mapt.put(""domain"", domain);mapt.put(""facebookid"", facebookid);mapt.put(""ip"", ip);mapt.put(""countrycode"", countrycode);mapt.put(""city"", city);map.put(""theme"", mapt);startjsonarray.put(map);String[] a = { ""mem0"", ""mem20"", ""mem40"", ""mem60"", ""mem80"", ""mem100"", ""mem120"", ""mem140"", ""mem160"", ""mem180"" };List memlist = Arrays.asList(a);Collections.shuffle(memlist);Map<String, Object> mammap = new HashMap<String, Object>();mammap.put(""memlist"", memlist);memjsonarray.put(mammap);log.info(memjsonarray.toString());resp.setContentType(""text/html"");resp.setCharacterEncoding(""UTF-8"");PrintWriter out = resp.getWriter();out.println(""<!DOCTYPE HTML PUBLIC \""-//W3C//DTD HTML 4.01 Transitional//EN\"" \""http://www.w3.org/TR/html4/loose.dtd\"">"");out.println(""<html xmlns=\""http://www.w3.org/1999/xhtml\"" xmlns:fb=\""http://www.facebook.com/2008/fbml\"">"");out.println(""<head>"");out.println(""<meta http-equiv=\""content-type\"" content=\""text/html; charset=UTF-8\"">"");out.println(""<meta name=\""gwt:property\"" content=\""locale="" + locale + ""\"">"");out.println(""<link type=\""text/css\"" rel=\""stylesheet\"" href=\""NewTube.css\"">"");out.println(""<title>"" + title + ""</title>"");out.println(""<script type=\""text/javascript\"" language=\""javascript\"" src=\""newtube/newtube.nocache.js\""></script>"");out.println(""<script type='text/javascript'>var jsonStartParams = "" + startjsonarray.toString() + "";</script>"");out.println(""<script type='text/javascript'>var girlsphones = "" + CommUtils.CsvtoJson(""girlsphones.csv"").toString() + "";</script>"");out.println(""<script type='text/javascript'>"");out.println(""var mem = "" + memjsonarray.toString() + "";"");out.println(""</script>"");out.println(""</head>"");out.println(""<body>"");out.println(""<div id='fb-root'></div>"");out.println(""<script>"");out.println(""window.fbAsyncInit = function() {"");out.println(""FB.init({appId: '"" + facebookid + ""', status: true, cookie: true,xfbml: true});};"");out.println(""(function() {"");out.println(""var e = document.createElement('script'); e.async = true;"");out.println(""e.src = document.location.protocol +"");out.println(""'//connect.facebook.net/"" + locale + ""/all.js';"");out.println(""document.getElementById('fb-root').appendChild(e);"");out.println(""}());"");out.println(""</script>"");out.println(""<div id=\""start\""></div>"");out.println(""<div id=\""seo_content\"">"");BufferedReader bufRdr = new BufferedReader(new InputStreamReader(new FileInputStream(domain + "".html""), ""UTF8""));String contline = null;while ((contline = bufRdr.readLine()) != null) {out.println(contline);}bufRdr.close();if (countrycode != null && !countrycode.equalsIgnoreCase(""US"") && !countrycode.equalsIgnoreCase(""IE"") && !countrycode.equalsIgnoreCase(""UK"") && intcount > 2 && intcount < 51) {out.println(""<script type=\""text/javascript\""><!--"");out.println(""google_ad_client = \"""" + google_ad_client + ""\"";"");out.println(""google_ad_slot = \"""" + google_ad_slot1 + ""\"";"");out.println(""google_ad_width = "" + google_ad_width1 + "";"");out.println(""google_ad_height = "" + google_ad_height1 + "";"");out.println(""//-->"");out.println(""</script>"");out.println(""<script type=\""text/javascript\"""");out.println(""src=\"""" + google_ad_client + "".js\"">"");out.println(""</script>"");out.println(""<script type=\""text/javascript\""><!--"");out.println(""google_ad_client = \"""" + google_ad_client + ""\"";"");out.println(""google_ad_slot = \"""" + google_ad_slot2 + ""\"";"");out.println(""google_ad_width = "" + google_ad_width2 + "";"");out.println(""google_ad_height = "" + google_ad_height2 + "";"");out.println(""//-->"");out.println(""</script>"");out.println(""<script type=\""text/javascript\"""");out.println(""src=\"""" + google_ad_client + "".js\"">"");out.println(""</script>"");out.println(""<script type=\""text/javascript\""><!--"");out.println(""google_ad_client = \"""" + google_ad_client + ""\"";"");out.println(""google_ad_slot = \"""" + google_ad_slot3 + ""\"";"");out.println(""google_ad_width = "" + google_ad_width3 + "";"");out.println(""google_ad_height = "" + google_ad_height3 + "";"");out.println(""//-->"");out.println(""</script>"");out.println(""<script type=\""text/javascript\"""");out.println(""src=\"""" + google_ad_client + "".js\"">"");out.println(""</script>"");}if (countrycode != null && !countrycode.equalsIgnoreCase(""US"") && !countrycode.equalsIgnoreCase(""IE"") && !countrycode.equalsIgnoreCase(""UK"") && intcount > 50) {out.println(""<script type=\""text/javascript\""><!--"");out.println(""google_ad_client = \"""" + ""pub-9496078135369870"" + ""\"";"");out.println(""google_ad_slot = \"""" + ""8683942065"" + ""\"";"");out.println(""google_ad_width = "" + ""160"" + "";"");out.println(""google_ad_height = "" + ""600"" + "";"");out.println(""//-->"");out.println(""</script>"");out.println(""<script type=\""text/javascript\"""");out.println(""src=\""pub-9496078135369870"" + """" + "".js\"">"");out.println(""</script>"");out.println(""<script type=\""text/javascript\""><!--"");out.println(""google_ad_client = \"""" + ""pub-9496078135369870"" + ""\"";"");out.println(""google_ad_slot = \"""" + ""0941291340"" + ""\"";"");out.println(""google_ad_width = "" + ""728"" + "";"");out.println(""google_ad_height = "" + ""90"" + "";"");out.println(""//-->"");out.println(""</script>"");out.println(""<script type=\""text/javascript\"""");out.println(""src=\"""" + ""pub-9496078135369870"" + "".js\"">"");out.println(""</script>"");out.println(""<script type=\""text/javascript\""><!--"");out.println(""google_ad_client = \"""" + ""pub-9496078135369870"" + ""\"";"");out.println(""google_ad_slot = \"""" + ""4621616265"" + ""\"";"");out.println(""google_ad_width = "" + ""468"" + "";"");out.println(""google_ad_height = "" + ""60"" + "";"");out.println(""//-->"");out.println(""</script>"");out.println(""<script type=\""text/javascript\"""");out.println(""src=\"""" + ""pub-9496078135369870"" + "".js\"">"");out.println(""</script>"");}out.println(""</div>"");out.println(""</body></html>"");out.close();}}public void deleteGroup(String groupID) throws XregistryException {try {Connection connection = context.createConnection();connection.setAutoCommit(false);try {PreparedStatement statement1 = connection.prepareStatement(DELETE_GROUP_SQL_MAIN);statement1.setString(1, groupID);int updateCount = statement1.executeUpdate();if (updateCount == 0) {throw new XregistryException(""Database is not updated, Can not find such Group "" + groupID);}if (cascadingDeletes) {PreparedStatement statement2 = connection.prepareStatement(DELETE_GROUP_SQL_DEPEND);statement2.setString(1, groupID);statement2.setString(2, groupID);statement2.executeUpdate();}connection.commit();groups.remove(groupID);log.info(""Delete Group "" + groupID + (cascadingDeletes ? "" with cascading deletes "" : """"));} catch (SQLException e) {connection.rollback();throw new XregistryException(e);} finally {context.closeConnection(connection);}} catch (SQLException e) {throw new XregistryException(e);}}public void deleteUser(String userID) throws XregistryException {try {userID = Utils.canonicalizeDN(userID);Connection connection = context.createConnection();connection.setAutoCommit(false);try {PreparedStatement statement1 = connection.prepareStatement(DELETE_USER_SQL_MAIN);statement1.setString(1, userID);statement1.executeUpdate();PreparedStatement statement2 = connection.prepareStatement(DELETE_USER_SQL_DEPEND);statement2.setString(1, userID);statement2.executeUpdate();connection.commit();Collection<Group> groupList = groups.values();for (Group group : groupList) {group.removeUser(userID);}log.info(""Delete User "" + userID);} catch (SQLException e) {connection.rollback();throw new XregistryException(e);} finally {context.closeConnection(connection);}} catch (SQLException e) {throw new XregistryException(e);}}public void callBatch(final List<JsonRpcClient.Call> calls, final JsonRpcClient.BatchCallback callback) {HttpPost httpPost = new HttpPost(mRpcUrl);JSONObject requestJson = new JSONObject();JSONArray callsJson = new JSONArray();try {for (int i = 0; i < calls.size(); i++) {JsonRpcClient.Call call = calls.get(i);JSONObject callJson = new JSONObject();callJson.put(""method"", call.getMethodName());if (call.getParams() != null) {JSONObject callParams = (JSONObject) call.getParams();@SuppressWarnings(""unchecked"") Iterator<String> keysIterator = callParams.keys();String key;while (keysIterator.hasNext()) {key = keysIterator.next();callJson.put(key, callParams.get(key));}}callsJson.put(i, callJson);}requestJson.put(""calls"", callsJson);httpPost.setEntity(new StringEntity(requestJson.toString(), ""UTF-8""));if (Log.isLoggable(TAG, Log.VERBOSE)) {Log.v(TAG, ""POST request: "" + requestJson.toString());}} catch (JSONException e) {} catch (UnsupportedEncodingException e) {}try {HttpResponse httpResponse = mHttpClient.execute(httpPost);final int responseStatusCode = httpResponse.getStatusLine().getStatusCode();if (200 <= responseStatusCode && responseStatusCode < 300) {BufferedReader reader = new BufferedReader(new InputStreamReader(httpResponse.getEntity().getContent(), ""UTF-8""), 8 * 1024);StringBuilder sb = new StringBuilder();String line;while ((line = reader.readLine()) != null) {sb.append(line).append(""\n"");}if (Log.isLoggable(TAG, Log.VERBOSE)) {Log.v(TAG, ""POST response: "" + sb.toString());}JSONTokener tokener = new JSONTokener(sb.toString());JSONObject responseJson = new JSONObject(tokener);JSONArray resultsJson = responseJson.getJSONArray(""results"");Object[] resultData = new Object[calls.size()];for (int i = 0; i < calls.size(); i++) {JSONObject result = resultsJson.getJSONObject(i);if (result.has(""error"")) {callback.onError(i, new JsonRpcException((int) result.getInt(""error""), calls.get(i).getMethodName(), result.getString(""message""), null));resultData[i] = null;} else {resultData[i] = result.get(""data"");}}callback.onData(resultData);} else {callback.onError(-1, new JsonRpcException(-1, ""Received HTTP status code other than HTTP 2xx: "" + httpResponse.getStatusLine().getReasonPhrase()));}} catch (IOException e) {Log.e(""JsonRpcJavaClient"", e.getMessage());e.printStackTrace();} catch (JSONException e) {Log.e(""JsonRpcJavaClient"", ""Error parsing server JSON response: "" + e.getMessage());e.printStackTrace();}}private void initialize() {StringBuffer license = new StringBuffer();URL url;InputStreamReader in;BufferedReader reader;String str;JTextArea textArea;JButton button;GridBagConstraints c;setTitle(""Mibble License"");setSize(600, 600);setDefaultCloseOperation(DISPOSE_ON_CLOSE);getContentPane().setLayout(new GridBagLayout());url = getClass().getClassLoader().getResource(""LICENSE.txt"");if (url == null) {license.append(""Couldn't locate license file (LICENSE.txt)."");} else {try {in = new InputStreamReader(url.openStream());reader = new BufferedReader(in);while ((str = reader.readLine()) != null) {if (!str.equals("""")) {license.append(str);}license.append(""\n"");}reader.close();} catch (IOException e) {license.append(""Error reading license file "");license.append(""(LICENSE.txt):\n\n"");license.append(e.getMessage());}}textArea = new JTextArea(license.toString());textArea.setEditable(false);c = new GridBagConstraints();c.fill = GridBagConstraints.BOTH;c.weightx = 1.0d;c.weighty = 1.0d;c.insets = new Insets(4, 5, 4, 5);getContentPane().add(new JScrollPane(textArea), c);button = new JButton(""Close"");button.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {dispose();}});c = new GridBagConstraints();c.gridy = 1;c.anchor = GridBagConstraints.CENTER;c.insets = new Insets(10, 10, 10, 10);getContentPane().add(button, c);}public void copyFilesIntoProject(HashMap<String, String> files) {Set<String> filenames = files.keySet();for (String key : filenames) {String realPath = files.get(key);if (key.equals(""fw4ex.xml"")) {try {FileReader in = new FileReader(new File(realPath));FileWriter out = new FileWriter(new File(project.getLocation() + ""/"" + bundle.getString(""Stem"") + STEM_FILE_EXETENSION));int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();} catch (FileNotFoundException e) {Activator.getDefault().showMessage(""File "" + key + "" not found... Error while moving files to the new project."");} catch (IOException ie) {Activator.getDefault().showMessage(""Error while moving "" + key + "" to the new project."");}} else {try {FileReader in = new FileReader(new File(realPath));FileWriter out = new FileWriter(new File(project.getLocation() + ""/"" + key));int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();} catch (FileNotFoundException e) {Activator.getDefault().showMessage(""File "" + key + "" not found... Error while moving files to the new project."");} catch (IOException ie) {Activator.getDefault().showMessage(""Error while moving "" + key + "" to the new project."");}}}}private static void copy(File source, File target) throws IOException {InputStream is = null;OutputStream os = null;try {is = new BufferedInputStream(new FileInputStream(source));os = new BufferedOutputStream(new FileOutputStream(target));int b;while ((b = is.read()) > -1) os.write(b);} finally {try {if (is != null) is.close();} catch (IOException ignore) {}try {if (os != null) os.close();} catch (IOException ignore) {}}}@Overrideprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {String arg = req.getParameter(""file"");if (arg == null) {resp.sendError(404, ""Missing 'file' Arg"");return;}int mfid = NumberUtils.toInt(arg);Object sageFile = MediaFileAPI.GetMediaFileForID(mfid);if (sageFile == null) {resp.sendError(404, ""Sage File not found "" + mfid);return;}int seconds = NumberUtils.toInt(req.getParameter(""ss""), -1);long offset = NumberUtils.toLong(req.getParameter(""sb""), -1);if (seconds < 0 && offset < 0) {resp.sendError(501, ""Missing 'ss' or 'sb' args"");return;}int width = NumberUtils.toInt(req.getParameter(""w""), 320);int height = NumberUtils.toInt(req.getParameter(""h""), 320);File dir = new File(Phoenix.getInstance().getUserCacheDir(), ""videothumb/"" + mfid);if (!dir.exists()) {dir.mkdirs();}String prefix = """";if (offset > 0) {prefix = ""O"" + offset;} else {prefix = ""S"" + seconds;}File f = new File(dir, prefix + ""_"" + width + ""_"" + height + "".jpg"").getCanonicalFile();if (!f.exists()) {try {generateThumbnailNew(sageFile, f, seconds, offset, width, height);} catch (Exception e) {e.printStackTrace();resp.sendError(503, ""Failed to generate thumbnail\n "" + e.getMessage());return;}}if (!f.exists()) {resp.sendError(404, ""Missing File: "" + f);return;}resp.setContentType(""image/jpeg"");resp.setContentLength((int) f.length());FileInputStream fis = null;try {fis = new FileInputStream(f);OutputStream os = resp.getOutputStream();IOUtils.copyLarge(fis, os);os.flush();fis.close();} catch (Throwable e) {log.error(""Failed to send file: "" + f);resp.sendError(500, ""Failed to get file "" + f);} finally {IOUtils.closeQuietly(fis);}}public static void copyFile(File in, File out) throws IOException {FileChannel inChannel = new FileInputStream(in).getChannel();FileChannel outChannel = new FileOutputStream(out).getChannel();try {inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {throw e;} finally {if (inChannel != null) inChannel.close();if (outChannel != null) outChannel.close();}}"	5
"public static final boolean zipUpdate(String zipfile, String name, String oldname, byte[] contents, boolean delete) {try {File temp = File.createTempFile(""atf"", "".zip"");InputStream in = new BufferedInputStream(new FileInputStream(zipfile));OutputStream os = new BufferedOutputStream(new FileOutputStream(temp));ZipInputStream zin = new ZipInputStream(in);ZipOutputStream zout = new ZipOutputStream(os);ZipEntry e;ZipEntry e2;byte buffer[] = new byte[TEMP_FILE_BUFFER_SIZE];int bytesRead;boolean found = false;boolean rename = false;String oname = name;if (oldname != null) {name = oldname;rename = true;}while ((e = zin.getNextEntry()) != null) {if (!e.isDirectory()) {String ename = e.getName();if (delete && ename.equals(name)) continue;e2 = new ZipEntry(rename ? oname : ename);zout.putNextEntry(e2);if (ename.equals(name)) {found = true;zout.write(contents);} else {while ((bytesRead = zin.read(buffer)) != -1) zout.write(buffer, 0, bytesRead);}zout.closeEntry();}}if (!found && !delete) {e = new ZipEntry(name);zout.putNextEntry(e);zout.write(contents);zout.closeEntry();}zin.close();zout.close();File fp = new File(zipfile);fp.delete();MLUtil.copyFile(temp, fp);temp.delete();return (true);} catch (FileNotFoundException e) {MLUtil.runtimeError(e, ""updateZip "" + zipfile + "" "" + name);} catch (IOException e) {MLUtil.runtimeError(e, ""updateZip "" + zipfile + "" "" + name);}return (false);}@Overridepublic void download(String remoteFilePath, String localFilePath) {InputStream remoteStream = null;try {remoteStream = client.get(remoteFilePath);} catch (IOException e) {e.printStackTrace();}OutputStream localStream = null;try {localStream = new FileOutputStream(new File(localFilePath));} catch (FileNotFoundException e1) {e1.printStackTrace();}try {IOUtils.copy(remoteStream, localStream);} catch (IOException e) {e.printStackTrace();}}public T08OTSDTMInterpositionUnitTestCase(String name) throws java.io.IOException {super(name);java.net.URL url = ClassLoader.getSystemResource(""host0.cosnaming.jndi.properties"");jndiProps = new java.util.Properties();jndiProps.load(url.openStream());}public static void copyFile(File in, File out) throws IOException {FileChannel sourceChannel = new FileInputStream(in).getChannel();FileChannel destinationChannel = new FileOutputStream(out).getChannel();sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel);sourceChannel.close();destinationChannel.close();}@Overridepublic void run() {try {long pos = begin;byte[] buf = new byte[1024];URLConnection cn = url.openConnection();Utils.setHeader(cn);cn.setRequestProperty(""Range"", ""bytes="" + begin + ""-"" + end);BufferedInputStream bis = new BufferedInputStream(cn.getInputStream());int len;while ((len = bis.read(buf)) > 0) {synchronized (file) {file.seek(pos);file.write(buf, 0, len);}pos += len;Statics.getInstance().addComleted(len);}} catch (Exception e) {e.printStackTrace();}latch.countDown();}protected String contentString() {String result = null;URL url;String encoding = null;try {url = url();URLConnection connection = url.openConnection();connection.setDoInput(true);connection.setDoOutput(false);connection.setUseCaches(false);for (Enumeration e = bindingKeys().objectEnumerator(); e.hasMoreElements(); ) {String key = (String) e.nextElement();if (key.startsWith(""?"")) {connection.setRequestProperty(key.substring(1), valueForBinding(key).toString());}}if (connection.getContentEncoding() != null) {encoding = connection.getContentEncoding();}if (encoding == null) {encoding = (String) valueForBinding(""encoding"");}if (encoding == null) {encoding = ""UTF-8"";}InputStream stream = connection.getInputStream();byte bytes[] = ERXFileUtilities.bytesFromInputStream(stream);stream.close();result = new String(bytes, encoding);} catch (IOException ex) {throw NSForwardException._runtimeExceptionForThrowable(ex);}return result;}protected static byte[] hashPassword(byte[] saltBytes, String plaintextPassword) throws AssertionError {MessageDigest digest;try {digest = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException ex) {throw (AssertionError) new AssertionError(""No MD5 message digest supported."").initCause(ex);}digest.update(saltBytes);try {digest.update(plaintextPassword.getBytes(""utf-8""));} catch (UnsupportedEncodingException ex) {throw (AssertionError) new AssertionError(""No UTF-8 encoding supported."").initCause(ex);}byte[] passwordBytes = digest.digest();return passwordBytes;}public static String getMD5Str(String str) {MessageDigest messageDigest = null;try {messageDigest = MessageDigest.getInstance(""MD5"");messageDigest.reset();messageDigest.update(str.getBytes(""UTF-8""));} catch (NoSuchAlgorithmException e) {System.out.println(""NoSuchAlgorithmException caught!"");System.exit(-1);} catch (UnsupportedEncodingException e) {e.printStackTrace();}byte[] byteArray = messageDigest.digest();StringBuffer md5StrBuff = new StringBuffer();for (int i = 0; i < byteArray.length; i++) {if (Integer.toHexString(0xFF & byteArray[i]).length() == 1) md5StrBuff.append(""0"").append(Integer.toHexString(0xFF & byteArray[i])); else md5StrBuff.append(Integer.toHexString(0xFF & byteArray[i]));}return md5StrBuff.toString();}public int readRaw(byte[] buffer, int offset, int length) throws IOException {if (offset < 0 || length < 0 || (offset + length) > buffer.length) {throw new IndexOutOfBoundsException();}HttpURLConnection connection = null;InputStream is = null;int n = 0;try {connection = (HttpURLConnection) url.openConnection();String byteRange = ""bytes="" + position + ""-"" + (position + length - 1);connection.setRequestProperty(""Range"", byteRange);is = connection.getInputStream();while (n < length) {int count = is.read(buffer, offset + n, length - n);if (count < 0) {throw new EOFException();}n += count;}position += n;return n;} catch (EOFException e) {return n;} catch (IOException e) {e.printStackTrace();System.out.println(""We're screwed..."");System.out.println(n);if (e.getMessage().contains(""response code: 416"")) {System.out.println(""Trying to be mister nice guy, returning "" + n);return n;} else {throw e;}} finally {if (is != null) {is.close();}if (connection != null) {connection.disconnect();}}}public static void upload(FTPDetails ftpDetails) {FTPClient ftp = new FTPClient();try {String host = ftpDetails.getHost();logger.info(""Connecting to ftp host: "" + host);ftp.connect(host);logger.info(""Received reply from ftp :"" + ftp.getReplyString());ftp.login(ftpDetails.getUserName(), ftpDetails.getPassword());ftp.setFileType(FTP.BINARY_FILE_TYPE);ftp.makeDirectory(ftpDetails.getRemoterDirectory());logger.info(""Created directory :"" + ftpDetails.getRemoterDirectory());ftp.changeWorkingDirectory(ftpDetails.getRemoterDirectory());BufferedInputStream ftpInput = new BufferedInputStream(new FileInputStream(new File(ftpDetails.getLocalFilePath())));OutputStream storeFileStream = ftp.storeFileStream(ftpDetails.getRemoteFileName());IOUtils.copy(ftpInput, storeFileStream);logger.info(""Copied file : "" + ftpDetails.getLocalFilePath() + "" >>> "" + host + "":/"" + ftpDetails.getRemoterDirectory() + ""/"" + ftpDetails.getRemoteFileName());ftpInput.close();storeFileStream.close();ftp.logout();ftp.disconnect();logger.info(""Logged out. "");} catch (Exception e) {throw new RuntimeException(e);}}"	5
"public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException {int remainingWorkUnits = 10;monitor.beginTask(""New Modulo Project Creation"", remainingWorkUnits);IWorkspace ws = ResourcesPlugin.getWorkspace();newProject = fMainPage.getProjectHandle();IProjectDescription description = ws.newProjectDescription(newProject.getName());String[] natures = { JavaCore.NATURE_ID, ModuloLauncherPlugin.NATURE_ID };description.setNatureIds(natures);ICommand command = description.newCommand();command.setBuilderName(JavaCore.BUILDER_ID);ICommand[] commands = { command };description.setBuildSpec(commands);IJavaProject jproject = JavaCore.create(newProject);ModuloProject modProj = new ModuloProject();modProj.setJavaProject(jproject);try {newProject.create(description, new SubProgressMonitor(monitor, 1));newProject.open(new SubProgressMonitor(monitor, 1));IFolder srcFolder = newProject.getFolder(""src"");IFolder javaFolder = srcFolder.getFolder(""java"");IFolder buildFolder = newProject.getFolder(""build"");IFolder classesFolder = buildFolder.getFolder(""classes"");modProj.createFolder(srcFolder);modProj.createFolder(javaFolder);modProj.createFolder(buildFolder);modProj.createFolder(classesFolder);IPath buildPath = newProject.getFolder(""build/classes"").getFullPath();jproject.setOutputLocation(buildPath, new SubProgressMonitor(monitor, 1));IClasspathEntry[] entries = new IClasspathEntry[] { JavaCore.newSourceEntry(newProject.getFolder(""src/java"").getFullPath()), JavaCore.newContainerEntry(new Path(JavaRuntime.JRE_CONTAINER)), JavaCore.newContainerEntry(new Path(ModuloClasspathContainer.CONTAINER_ID)) };jproject.setRawClasspath(entries, new SubProgressMonitor(monitor, 1));ModuleDefinition definition = new ModuleDefinition();definition.setId(fModuloPage.getPackageName());definition.setVersion(new VersionNumber(1, 0, 0));definition.setMetaName(fModuloPage.getModuleName());definition.setMetaDescription(""The "" + fModuloPage.getModuleName() + "" Module."");definition.setModuleClassName(fModuloPage.getPackageName() + ""."" + fModuloPage.getModuleClassName());if (fModuloPage.isConfigSelectioned()) definition.setConfigurationClassName(fModuloPage.getPackageName() + ""."" + fModuloPage.getConfigClassName());if (fModuloPage.isStatSelectioned()) definition.setStatisticsClassName(fModuloPage.getPackageName() + ""."" + fModuloPage.getStatClassName());modProj.setDefinition(definition);modProj.createPackage();modProj.createModuleXML();modProj.createMainClass();if (fModuloPage.isConfigSelectioned()) modProj.createConfigClass();if (fModuloPage.isStatSelectioned()) modProj.createStatClass();modProj.createModuleProperties();modProj.createMessagesProperties();IFolder binFolder = newProject.getFolder(""bin"");binFolder.delete(true, new SubProgressMonitor(monitor, 1));} catch (CoreException e) {e.printStackTrace();} finally {monitor.done();}}private void loadProperties() {if (properties == null) {properties = new Properties();try {URL url = getClass().getResource(propsFile);properties.load(url.openStream());} catch (IOException ioe) {ioe.printStackTrace();}}}private Document getXMLDoc(Region region) {Document doc;try {InputStream stream;URL url = new URL(""http://eve-central.com/api/marketstat?hours="" + HOURS + ""&"" + getTypes() + ""&regionlimit="" + region.getTypeID());System.out.println(url.toString());stream = url.openStream();DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();DocumentBuilder parser = factory.newDocumentBuilder();doc = parser.parse(stream);} catch (MalformedURLException e) {e.printStackTrace();doc = new DefaultDocument();} catch (SAXException e) {e.printStackTrace();doc = new DefaultDocument();} catch (IOException e) {e.printStackTrace();doc = new DefaultDocument();} catch (ParserConfigurationException e) {e.printStackTrace();doc = new DefaultDocument();}return doc;}public static String md5(String input) {String res = """";try {MessageDigest algorithm = MessageDigest.getInstance(""MD5"");algorithm.reset();algorithm.update(input.getBytes());byte[] md5 = algorithm.digest();String tmp = """";for (int i = 0; i < md5.length; i++) {tmp = (Integer.toHexString(0xFF & md5[i]));if (tmp.length() == 1) res += ""0"" + tmp; else res += tmp;}} catch (NoSuchAlgorithmException ex) {}return res;}public static String send(String purl, String xml) throws Exception {URL url = new URL(purl);HttpURLConnection httpUrlCon = (HttpURLConnection) url.openConnection();httpUrlCon.setRequestMethod(""POST"");httpUrlCon.setDoOutput(true);PrintWriter writer = new PrintWriter(httpUrlCon.getOutputStream());writer.println(xml);writer.flush();writer.close();System.out.println(""Sending: "" + xml);StringBuffer response = new StringBuffer();InputStreamReader is = null;try {is = new InputStreamReader(httpUrlCon.getInputStream());} catch (Exception e) {e.printStackTrace();is = new InputStreamReader(httpUrlCon.getErrorStream());}BufferedReader br = new BufferedReader(is);String line = null;while ((line = br.readLine()) != null) {response.append(line);response.append(""\n"");}String r = response.toString();return r;}private List<Token> generateTokens(int tokenCount) throws XSServiceException {final List<Token> tokens = new ArrayList<Token>(tokenCount);final Random r = new Random();String t = Long.toString(new Date().getTime()) + Integer.toString(r.nextInt());final MessageDigest m;try {m = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {throw new XSServiceException(""Error while creating tokens"");}for (int i = 0; i < tokenCount; ++i) {final Token token = new Token();token.setValid(true);m.update(t.getBytes(), 0, t.length());String md5 = new BigInteger(1, m.digest()).toString(16);while (md5.length() < 32) {md5 = String.valueOf(r.nextInt(9)) + md5;}t = md5.substring(0, 8) + ""-"" + md5.substring(8, 16) + ""-"" + md5.substring(16, 24) + ""-"" + md5.substring(24, 32);logger.debug(""Generated token #"" + (i + 1) + "": "" + t);token.setTokenString(t);tokens.add(token);}return tokens;}public void Copy() throws IOException {if (!FileDestination.exists()) {FileDestination.createNewFile();}FileChannel source = null;FileChannel destination = null;try {source = new FileInputStream(FileSource).getChannel();destination = new FileOutputStream(FileDestination).getChannel();destination.transferFrom(source, 0, source.size());} finally {if (source != null) {source.close();}if (destination != null) {destination.close();}}}public static final void parse(String infile, String outfile) throws IOException {BufferedReader reader = new BufferedReader(new FileReader(infile));DataOutputStream output = new DataOutputStream(new FileOutputStream(outfile));int w = Integer.parseInt(reader.readLine());int h = Integer.parseInt(reader.readLine());output.writeByte(w);output.writeByte(h);int lineCount = 2;try {do {for (int i = 0; i < h; i++) {lineCount++;String line = reader.readLine();if (line == null) {throw new RuntimeException(""Unexpected end of file at line "" + lineCount);}for (int j = 0; j < w; j++) {char c = line.charAt(j);System.out.print(c);output.writeByte(c);}System.out.println("""");}lineCount++;output.writeShort(Short.parseShort(reader.readLine()));} while (reader.readLine() != null);} finally {reader.close();output.close();}}public static String generateStringSHA256(String content) {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA-256"");} catch (NoSuchAlgorithmException ex) {Logger.getLogger(ScannerChecksum.class.getName()).log(Level.SEVERE, null, ex);}md.update(content.getBytes());byte byteData[] = md.digest();@SuppressWarnings(""StringBufferMayBeStringBuilder"") StringBuffer sb = new StringBuffer();for (int i = 0; i < byteData.length; i++) {sb.append(Integer.toString((byteData[i] & 0xff) + 0x100, 16).substring(1));}@SuppressWarnings(""StringBufferMayBeStringBuilder"") StringBuffer hexString = new StringBuffer();for (int i = 0; i < byteData.length; i++) {String hex = Integer.toHexString(0xff & byteData[i]);if (hex.length() == 1) hexString.append('0');hexString.append(hex);}return hexString.toString();}public static void copyFile(File source, File dest) throws IOException {FileChannel in = null, out = null;try {in = new FileInputStream(source).getChannel();out = new FileOutputStream(dest).getChannel();long size = in.size();MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buf);} finally {if (in != null) in.close();if (out != null) out.close();}}"	5
"public boolean delwuliao(String pid) {boolean flag = false;Connection conn = null;PreparedStatement pm = null;try {conn = Pool.getConnection();conn.setAutoCommit(false);pm = conn.prepareStatement(""delete from addwuliao where pid=?"");pm.setString(1, pid);int x = pm.executeUpdate();if (x == 0) {flag = false;} else {flag = true;}conn.commit();Pool.close(pm);Pool.close(conn);} catch (Exception e) {e.printStackTrace();flag = false;try {conn.rollback();} catch (SQLException e1) {e1.printStackTrace();}Pool.close(pm);Pool.close(conn);} finally {Pool.close(pm);Pool.close(conn);}return flag;}public Item findById(String itemId) throws UnsupportedEncodingException, IOException {String sessionId = (String) RuntimeAccess.getInstance().getSession().getAttribute(""SESSION_ID"");DefaultHttpClient httpclient = new DefaultHttpClient();FindItemByIdRequest request = new FindItemByIdRequest();request.setItemID(itemId);request.setSessionId(sessionId);XStream writer = new XStream();writer.setMode(XStream.XPATH_ABSOLUTE_REFERENCES);writer.alias(""FindItemByIdRequest"", FindItemByIdRequest.class);XStream reader = new XStream();reader.setMode(XStream.XPATH_ABSOLUTE_REFERENCES);reader.alias(""FindItemByIdResponse"", FindItemByIdResponse.class);String strRequest = URLEncoder.encode(reader.toXML(request), ""UTF-8"");HttpGet httpget = new HttpGet(MewitProperties.getMewitUrl() + ""/resources/findItemById?REQUEST="" + strRequest);HttpResponse response = httpclient.execute(httpget);HttpEntity entity = response.getEntity();if (entity != null) {String result = URLDecoder.decode(EntityUtils.toString(entity), ""UTF-8"");FindItemByIdResponse fibiResponse = (FindItemByIdResponse) reader.fromXML(result);return fibiResponse.getItem();}return null;}public QueryResult doSearch(String searchTerm, Integer searchInReceivedItems, Integer searchInSentItems, Integer searchInSupervisedItems, Integer startRow, Integer resultCount, Boolean searchArchived, Boolean searchInItemsNeededAttentionOnly) throws UnsupportedEncodingException, IOException {String sessionId = (String) RuntimeAccess.getInstance().getSession().getAttribute(""SESSION_ID"");DefaultHttpClient httpclient = new DefaultHttpClient();QueryResult queryResult = new QueryResult();SearchRequest request = new SearchRequest();SearchItemsQuery query = new SearchItemsQuery();query.setArchiveIncluded(searchArchived);log(INFO, ""searchTerm="" + searchTerm);log(INFO, ""search in received="" + searchInReceivedItems);log(INFO, ""search in sent="" + searchInSentItems);log(INFO, ""search in supervised="" + searchInSupervisedItems);List<String> filters = new ArrayList<String>();if (searchInItemsNeededAttentionOnly == false) {if (searchInReceivedItems != null) {filters.add(""ALL_RECEIVED_ITEMS"");}if (searchInSentItems != null) {filters.add(""ALL_SENT_ITEMS"");}if (searchInSupervisedItems != null) {filters.add(""ALL_SUPERVISED_ITEMS"");}} else {if (searchInReceivedItems != null) {filters.add(""RECEIVED_ITEMS_NEEDED_ATTENTION"");}if (searchInSentItems != null) {filters.add(""SENT_ITEMS_NEEDED_ATTENTION"");}}query.setFilters(filters);query.setId(""1234"");query.setOwner(sessionId);query.setReferenceOnly(false);query.setSearchTerm(searchTerm);query.setUseOR(false);request.setStartRow(startRow);request.setResultCount(resultCount);request.setQuery(query);request.setSessionId(sessionId);XStream writer = new XStream();writer.setMode(XStream.XPATH_ABSOLUTE_REFERENCES);writer.alias(""SearchRequest"", SearchRequest.class);XStream reader = new XStream();reader.setMode(XStream.XPATH_ABSOLUTE_REFERENCES);reader.alias(""SearchResponse"", SearchResponse.class);String strRequest = URLEncoder.encode(reader.toXML(request), ""UTF-8"");HttpGet httpget = new HttpGet(MewitProperties.getMewitUrl() + ""/resources/search?REQUEST="" + strRequest);HttpResponse response = httpclient.execute(httpget);HttpEntity entity = response.getEntity();if (entity != null) {String result = URLDecoder.decode(EntityUtils.toString(entity), ""UTF-8"");SearchResponse searchResponse = (SearchResponse) reader.fromXML(result);List<Item> items = searchResponse.getItems();queryResult.setItems(items);queryResult.setTotal(searchResponse.getTotalResultCount());queryResult.setStartRow(searchResponse.getStartRow());}return queryResult;}public boolean checkPassword(String password, String digest) {boolean passwordMatch = false;MessageDigest sha = null;try {sha = MessageDigest.getInstance(""SHA-1"");if (digest.regionMatches(true, 0, ""{SHA}"", 0, 5)) {digest = digest.substring(5);} else if (digest.regionMatches(true, 0, ""{SSHA}"", 0, 6)) {digest = digest.substring(6);}byte[][] hs = split(Base64.decode(digest.getBytes()), 20);byte[] hash = hs[0];byte[] salt = hs[1];sha.reset();sha.update(password.getBytes());sha.update(salt);byte[] pwhash = sha.digest();if (MessageDigest.isEqual(hash, pwhash)) {passwordMatch = true;}} catch (NoSuchAlgorithmException nsae) {CofaxToolsUtil.log(""Algorithme SHA-1 non supporte a la verification du password"" + nsae + id);}return passwordMatch;}public static String getSSHADigest(String password, String salt) {String digest = null;MessageDigest sha = null;try {sha = MessageDigest.getInstance(""SHA-1"");sha.reset();sha.update(password.getBytes());sha.update(salt.getBytes());byte[] pwhash = sha.digest();digest = ""{SSHA}"" + new String(Base64.encode(concatenate(pwhash, salt.getBytes())));} catch (NoSuchAlgorithmException nsae) {CofaxToolsUtil.log(""Algorithme SHA-1 non supporte a la creation du hashage"" + nsae + id);}return digest;}public static String getSHADigest(String password) {String digest = null;MessageDigest sha = null;try {sha = MessageDigest.getInstance(""SHA-1"");sha.reset();sha.update(password.getBytes());byte[] pwhash = sha.digest();digest = ""{SHA}"" + new String(Base64.encode(pwhash));} catch (NoSuchAlgorithmException nsae) {CofaxToolsUtil.log(""Algorithme SHA-1 non supporte a la creation du hashage"" + nsae + id);}return digest;}public static void copyFromTo(File srcFile, File destFile) {FileChannel in = null, out = null;FileInputStream fis = null;FileOutputStream fos = null;try {fis = new FileInputStream(srcFile);} catch (FileNotFoundException fnfe) {System.out.println(""File: "" + srcFile.toString());System.out.println(""file does not exist, "" + ""is a directory rather than a regular file, "" + ""or for some other reason cannot be opened for reading"");System.exit(-1);}try {fos = new FileOutputStream(destFile);} catch (FileNotFoundException fnfe) {System.out.println(""File: "" + destFile.toString());System.out.println(""file exists but is a directory rather than a regular file, "" + ""does not exist but cannot be created, "" + ""or cannot be opened for any other reason"");System.exit(-1);}try {in = fis.getChannel();out = fos.getChannel();in.transferTo(0, in.size(), out);fos.flush();fos.close();out.close();fis.close();in.close();System.out.println(""Completed copying "" + srcFile.toString() + "" to "" + destFile.toString());} catch (IOException ioe) {System.out.println(""IOException copying file: "" + ioe.getMessage());System.exit(-1);}long srcModified = srcFile.lastModified();if (srcModified > 0L && destFile.exists()) {destFile.setLastModified(srcModified);}}public void setContentAsStream(final InputStream input) throws IOException {ByteArrayOutputStream output = new ByteArrayOutputStream();try {IOUtils.copy(input, output);} finally {output.close();}this.content = output.toByteArray();}private String unJar(String jarPath, String jarEntry) {String path;if (jarPath.lastIndexOf(""lib/"") >= 0) path = jarPath.substring(0, jarPath.lastIndexOf(""lib/"")); else path = jarPath.substring(0, jarPath.lastIndexOf(""/""));String relPath = jarEntry.substring(0, jarEntry.lastIndexOf(""/""));try {new File(path + ""/"" + relPath).mkdirs();JarFile jar = new JarFile(jarPath);ZipEntry ze = jar.getEntry(jarEntry);File bin = new File(path + ""/"" + jarEntry);IOUtils.copy(jar.getInputStream(ze), new FileOutputStream(bin));} catch (Exception e) {e.printStackTrace();}return path + ""/"" + jarEntry;}public alto.io.Output openOutput() throws java.io.IOException {URL url = this.url;if (null != url) {URLConnection connection = url.openConnection();connection.setDoOutput(true);if (connection instanceof alto.net.Connection) {((alto.net.Connection) connection).setReference(this);}return new ReferenceOutputStream(this, connection);}HttpMessage container = this.write();return new ReferenceOutputStream(this, container);}"	5
"public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException {if (!src.isFile() || !src.exists()) {throw new IllegalArgumentException(""Source file '"" + src.getAbsolutePath() + ""' not found!"");}if (dst.exists()) {if (dst.isDirectory()) {dst = new File(dst, src.getName());} else if (dst.isFile()) {if (!overwrite) {throw new IllegalArgumentException(""Destination file '"" + dst.getAbsolutePath() + ""' already exists!"");}} else {throw new IllegalArgumentException(""Invalid destination object '"" + dst.getAbsolutePath() + ""'!"");}}final File dstParent = dst.getParentFile();if (!dstParent.exists()) {if (!dstParent.mkdirs()) {throw new IOException(""Failed to create directory "" + dstParent.getAbsolutePath());}}long fileSize = src.length();if (fileSize > 20971520l) {final FileInputStream in = new FileInputStream(src);final FileOutputStream out = new FileOutputStream(dst);try {int doneCnt = -1;final int bufSize = 32768;final byte buf[] = new byte[bufSize];while ((doneCnt = in.read(buf, 0, bufSize)) >= 0) {if (doneCnt == 0) {Thread.yield();} else {out.write(buf, 0, doneCnt);}}out.flush();} finally {try {in.close();} catch (final IOException e) {}try {out.close();} catch (final IOException e) {}}} else {final FileInputStream fis = new FileInputStream(src);final FileOutputStream fos = new FileOutputStream(dst);final FileChannel in = fis.getChannel(), out = fos.getChannel();try {long offs = 0, doneCnt = 0;final long copyCnt = Math.min(65536, fileSize);do {doneCnt = in.transferTo(offs, copyCnt, out);offs += doneCnt;fileSize -= doneCnt;} while (fileSize > 0);} finally {try {in.close();} catch (final IOException e) {}try {out.close();} catch (final IOException e) {}try {fis.close();} catch (final IOException e) {}try {fos.close();} catch (final IOException e) {}}}}public static boolean copyFile(File src, File target) throws IOException {if (src == null || target == null || !src.exists()) return false;if (!target.exists()) if (!createNewFile(target)) return false;InputStream ins = new BufferedInputStream(new FileInputStream(src));OutputStream ops = new BufferedOutputStream(new FileOutputStream(target));int b;while (-1 != (b = ins.read())) ops.write(b);Streams.safeClose(ins);Streams.safeFlush(ops);Streams.safeClose(ops);return target.setLastModified(src.lastModified());}public void copieFichier(String fileIn, String fileOut) {FileChannel in = null;FileChannel out = null;try {in = new FileInputStream(fileIn).getChannel();out = new FileOutputStream(fileOut).getChannel();in.transferTo(0, in.size(), out);} catch (Exception e) {e.printStackTrace();} finally {if (in != null) {try {in.close();} catch (IOException e) {}}if (out != null) {try {out.close();} catch (IOException e) {}}}}public File createFileFromClasspathResource(String resourceUrl) throws IOException {File fichierTest = File.createTempFile(""xmlFieldTestFile"", """");FileOutputStream fos = new FileOutputStream(fichierTest);InputStream is = DefaultXmlFieldSelectorTest.class.getResourceAsStream(resourceUrl);IOUtils.copy(is, fos);is.close();fos.close();return fichierTest;}private static HttpURLConnection getConnection(URL url) throws IOException {HttpURLConnection conn = (HttpURLConnection) url.openConnection();conn.setRequestMethod(""GET"");conn.setDoInput(true);conn.setDoOutput(true);conn.setRequestProperty(""Accept"", ""application/zip;text/html"");return conn;}public void addUrl(URL url) throws IOException, SAXException {InputStream inStream = url.openStream();String path = url.getPath();int slashInx = path.lastIndexOf('/');String name = path.substring(slashInx + 1);Document doc = docBuild.parse(inStream);Element root = doc.getDocumentElement();String rootTag = root.getTagName();if (rootTag.equals(""graphml"")) {NodeList graphNodes = root.getElementsByTagName(""graph"");for (int i = 0; i < graphNodes.getLength(); i++) {Element elem = (Element) graphNodes.item(i);String graphName = elem.getAttribute(""id"");if (graphName == null) {graphName = name;}addStructure(new GraphSpec(graphName));urlRefs.put(graphName, url);}} else if (rootTag.equals(""tree"")) {addStructure(new TreeSpec(name));urlRefs.put(name, url);} else {throw new IllegalArgumentException(""Format of "" + url + "" not understood."");}inStream.close();}public void createZip(File zipFileName, Vector<File> selected) {try {byte[] buffer = new byte[4096];ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(zipFileName), 8096));out.setLevel(Deflater.BEST_COMPRESSION);out.setMethod(ZipOutputStream.DEFLATED);for (int i = 0; i < selected.size(); i++) {FileInputStream in = new FileInputStream(selected.get(i));String file = selected.get(i).getPath();if (file.indexOf(""\\"") != -1) file = file.substring(file.lastIndexOf(Options.fs) + 1, file.length());ZipEntry ze = new ZipEntry(file);out.putNextEntry(ze);int len;while ((len = in.read(buffer)) > 0) out.write(buffer, 0, len);out.closeEntry();in.close();selected.get(i).delete();}out.close();} catch (IllegalArgumentException iae) {iae.printStackTrace();} catch (FileNotFoundException fnfe) {fnfe.printStackTrace();} catch (IOException ioe) {ioe.printStackTrace();}}public static File copyFile(File from, File to) throws IOException {FileOutputStream fos = new FileOutputStream(to);FileInputStream fis = new FileInputStream(from);FileChannel foc = fos.getChannel();FileChannel fic = fis.getChannel();foc.transferFrom(fic, 0, fic.size());foc.close();fic.close();return to;}public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException {if (contenuFichier != null) {SupportDocument support = fichierElectronique.getSupport();support.setFichierElectronique(fichierElectronique);FicheDocument ficheDocument = support.getFicheDocument();String nomFichier = contenuFichier.getNomFichier();String extension = FilenameUtils.getExtension(nomFichier);if (ficheDocument.getFichierElectronique(nomFichier) != null) {FichierElectronique fichierElectroniqueExistant = ficheDocument.getFichierElectronique(nomFichier);if (fichierElectroniqueExistant.getId() != null && !fichierElectroniqueExistant.getId().equals(fichierElectronique.getId())) {throw new FichierElectroniqueExistantException(nomFichier, ficheDocument);}}if (fichierElectronique.getId() == null) {if (OfficeDocumentPropertiesUtil.canWriteIdIGID(extension)) {Long idIgid = OfficeDocumentPropertiesUtil.getIdIGID(contenuFichier);if (idIgid != null) {throw new FichierElectroniqueExistantException(nomFichier, idIgid, ficheDocument);}}}InputStream inputStream = contenuFichier.getInputStream();OutputStream outputStream = fichierElectronique.getOutputStream();try {IOUtils.copy(inputStream, outputStream);} finally {try {inputStream.close();} finally {outputStream.close();}}String typeMime = contenuFichier.getContentType();long tailleFichier = contenuFichier.getTailleFichier();Date dateDerniereModification = new Date();fichierElectronique.setNom(nomFichier);fichierElectronique.setTypeMime(extension);creerFormatSiNecessaire(typeMime, extension);fichierElectronique.setTaille(tailleFichier);fichierElectronique.setDateDerniereModification(dateDerniereModification);fichierElectronique.setSoumetteur(utilisateurCourant);if (extension.endsWith(""msg"")) {CourrielUtils.peuplerMetadonneesCourriel(fichierElectronique.getNom(), ficheDocument, contenuFichier.getInputStream(), utilisateurCourant);} else if (extension.endsWith(""eml"")) {Map<String, Object> properties = new GestionnaireProprietesMimeMessageParser().parseMsg(contenuFichier.getInputStream());CourrielUtils.peuplerMetadonneesCourriel(fichierElectronique.getNom(), ficheDocument, properties, utilisateurCourant);} else {FGDProprietesDocumentUtils.copierMetadonneesProprietes(fichierElectronique, ficheDocument);}}}public Object downloadFile(File destinationFile, URL[] urls, DownloadListener listener, Object checksum, long length, PRIORITY priority) throws DownloadException {URL url = urls[0];if (!url.getProtocol().equalsIgnoreCase(""http"")) {throw new DownloadException("" Only HTTP is supported in this version "");}if (!destinationFile.exists()) {try {destinationFile.createNewFile();} catch (IOException e) {e.printStackTrace();throw new DownloadException(""Unable to download from URL : "" + url.toString());}}HeadMethod head = new HeadMethod(url.toString());HttpClient httpClient = new HttpClient();try {httpClient.executeMethod(head);Header[] headers = head.getResponseHeaders();for (Header header : headers) {System.out.println(header);}Header header = head.getResponseHeader(""Content-Length"");Object contentLength = header.getValue();Long fileLength = Long.parseLong(contentLength.toString());System.out.println(length + "" : "" + fileLength);GetMethod get = new GetMethod(url.toString());httpClient.executeMethod(get);InputStream ins = get.getResponseBodyAsStream();FileOutputStream fos = new FileOutputStream(destinationFile);IOUtils.copy(ins, fos);System.out.println("" DOWNLOADED FILE"");} catch (HttpException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return null;}"	5
"public static void copy(File source, File dest) throws IOException {FileChannel in = null, out = null;try {in = new FileInputStream(source).getChannel();out = new FileOutputStream(dest).getChannel();long size = in.size();MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buf);} finally {if (in != null) in.close();if (out != null) out.close();}}private Reader getReader(String uri, Query query) throws SourceException {if (OntoramaConfig.DEBUG) {System.out.println(""uri = "" + uri);}InputStreamReader reader = null;try {System.out.println(""class UrlSource, uri = "" + uri);URL url = new URL(uri);URLConnection connection = url.openConnection();reader = new InputStreamReader(connection.getInputStream());} catch (MalformedURLException urlExc) {throw new SourceException(""Url "" + uri + "" specified for this ontology source is not well formed, error: "" + urlExc.getMessage());} catch (IOException ioExc) {throw new SourceException(""Couldn't read input data source for "" + uri + "", error: "" + ioExc.getMessage());}return reader;}@SuppressWarnings(""unchecked"")public void findServiceDescriptionsAsync(FindServiceDescriptionsCallBack callBack) {String url;boolean url_valid = true;URI url_uri = getConfiguration().getUri();url = url_uri.toString();URLConnection urlConn_test;try {urlConn_test = (new URL(url)).openConnection();} catch (MalformedURLException e2) {url_valid = false;e2.printStackTrace();System.out.println(""ERROR: Bad Opal service URL entered:"" + url);} catch (IOException e2) {url_valid = false;e2.printStackTrace();System.out.println(""ERROR: Bad Opal service URL entered:"" + url);}if (url_uri != null && url_valid == true) {System.out.println(""URL entered: "" + url_uri);url = url_uri.toString();List<ServiceDescription> results = new ArrayList<ServiceDescription>();try {URL ws_url = new URL(url);URLConnection urlConn;DataInputStream dis;try {urlConn = ws_url.openConnection();urlConn.setDoInput(true);urlConn.setUseCaches(false);dis = new DataInputStream(urlConn.getInputStream());String s;int fpos = 0;int lpos;int lslash;String sn;String hi;while ((s = dis.readLine()) != null) {if (s.contains(""?wsdl"")) {fpos = s.indexOf(""\"""") + 1;lpos = s.indexOf(""?"");s = s.substring(fpos, lpos);if (s.startsWith(""http"")) s = s.substring(7);lslash = s.lastIndexOf('/');sn = s.substring(lslash + 1);hi = s.substring(0, lslash);hi = hi.replace('/', '_');if (!sn.equals(""Version"") && !sn.equals(""AdminService"")) {ExampleServiceDesc service = new ExampleServiceDesc();s = sn + ""_from_"" + hi;service.setExampleString(s);service.setExampleUri(URI.create(url));results.add(service);}}}dis.close();} catch (IOException e) {e.printStackTrace();}} catch (MalformedURLException e1) {e1.printStackTrace();}callBack.partialResults(results);callBack.finished();}}private byte[] _generate() throws NoSuchAlgorithmException {if (host == null) {try {seed = InetAddress.getLocalHost().toString();} catch (UnknownHostException e) {seed = ""localhost/127.0.0.1"";} catch (SecurityException e) {seed = ""localhost/127.0.0.1"";}host = seed;} else {seed = host;}seed = seed + new Date().toString();seed = seed + Long.toString(rnd.nextLong());md = MessageDigest.getInstance(algorithm);md.update(seed.getBytes());return md.digest();}@Overridepublic synchronized File download_dictionary(Dictionary dict, String localfpath) {abort = false;try {URL dictionary_location = new URL(dict.getLocation());InputStream in = dictionary_location.openStream();FileOutputStream w = new FileOutputStream(local_cache, false);int b = 0;while ((b = in.read()) != -1) {w.write(b);if (abort) throw new Exception(""Download Aborted"");}in.close();w.close();File lf = new File(localfpath);FileInputStream r = new FileInputStream(local_cache);FileOutputStream fw = new FileOutputStream(lf);int c;while ((c = r.read()) != -1) fw.write(c);r.close();fw.close();clearCache();return lf;} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();} catch (InvalidTupleOperationException e) {e.printStackTrace();} catch (Exception e) {e.printStackTrace();}clearCache();return null;}private void sendLocal() throws Exception {if (validParameters()) {URL url = new URL(storageUrlString);HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();RequestUtils requestUtils = new RequestUtils();requestUtils.preRequestAddParameter(""senderObj"", ""QuotaSender"");requestUtils.preRequestAddParameter(""beanNumbers"", new String().valueOf(quotaBeans.size()));for (int vPos = 0; vPos < quotaBeans.size(); vPos++) {QuotaBean bean = (QuotaBean) quotaBeans.get(vPos);requestUtils.preRequestAddParameter("""" + vPos + ""#portalID"", bean.getPortalID());requestUtils.preRequestAddParameter("""" + vPos + ""#userID"", bean.getUserID());requestUtils.preRequestAddParameter("""" + vPos + ""#workflowID"", bean.getWorkflowID());requestUtils.preRequestAddParameter("""" + vPos + ""#runtimeID"", bean.getRuntimeID());requestUtils.preRequestAddParameter("""" + vPos + ""#plussQuotaSize"", bean.getPlussQuotaSize().toString());}requestUtils.preRequestAddFile(""zipFileName"", ""dummyZipFileName.zip"");requestUtils.createPostRequest();httpURLConnection.setRequestProperty(""Content-Type"", ""multipart/form-data; boundary="" + requestUtils.getBoundary());httpURLConnection.setRequestMethod(""POST"");httpURLConnection.setDoOutput(true);httpURLConnection.setDoInput(true);try {httpURLConnection.connect();OutputStream out = httpURLConnection.getOutputStream();byte[] preBytes = requestUtils.getPreRequestStringBytes();out.write(preBytes);out.flush();out.write(new String(""dummyFile"").getBytes());byte[] postBytes = requestUtils.getPostRequestStringBytes();out.write(postBytes);out.flush();out.close();BufferedReader in = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));in.readLine();in.close();if (HttpURLConnection.HTTP_OK != httpURLConnection.getResponseCode()) {throw new Exception(""response not HTTP_OK !"");}} catch (Exception e) {e.printStackTrace();throw new Exception(""Cannot connect to: "" + storageUrlString, e);}} else {throw new Exception(""Not valid parameters: quotaBeans !"");}}void copyFile(String sInput, String sOutput) throws IOException {File inputFile = new File(sInput);File outputFile = new File(sOutput);FileReader in = new FileReader(inputFile);FileWriter out = new FileWriter(outputFile);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();}@Overridepublic URLConnection openConnection(URL url, Proxy proxy) throws IOException {if (null == url) {throw new IllegalArgumentException(Messages.getString(""luni.1B""));}String host = url.getHost();if (host == null || host.length() == 0 || host.equalsIgnoreCase(""localhost"")) {return new FileURLConnection(url);}URL ftpURL = new URL(""ftp"", host, url.getFile());return (proxy == null) ? ftpURL.openConnection() : ftpURL.openConnection(proxy);}public void run() {BufferedInputStream bis = null;URLConnection url = null;String textType = null;StringBuffer sb = new StringBuffer();try {if (!location.startsWith(""http://"")) {location = ""http://"" + location;}url = (new URL(location)).openConnection();size = url.getContentLength();textType = url.getContentType();lastModified = url.getIfModifiedSince();InputStream is = url.getInputStream();bis = new BufferedInputStream(is);if (textType.startsWith(""text/plain"")) {int i;i = bis.read();++position;status = ""Reading From URL..."";this.setChanged();this.notifyObservers();while (i != END_OF_STREAM) {sb.append((char) i);i = bis.read();++position;if (position % (size / 25) == 0) {this.setChanged();this.notifyObservers();}if (abortLoading) {break;}}status = ""Finished reading URL..."";} else if (textType.startsWith(""text/html"")) {int i;i = bis.read();char c = (char) i;++position;status = ""Reading From URL..."";this.setChanged();this.notifyObservers();boolean enclosed = false;if (c == '<') {enclosed = true;}while (i != END_OF_STREAM) {if (enclosed) {if (c == '>') {enclosed = false;}} else {if (c == '<') {enclosed = true;} else {sb.append((char) i);}}i = bis.read();c = (char) i;++position;if (size == 0) {if (position % (size / 25) == 0) {this.setChanged();this.notifyObservers();}}if (abortLoading) {break;}}status = ""Finished reading URL..."";} else {status = ""Unable to read document type: "" + textType + ""..."";}bis.close();try {document.insertString(0, sb.toString(), SimpleAttributeSet.EMPTY);} catch (BadLocationException ble) {ble.printStackTrace();}finished = true;this.setChanged();this.notifyObservers();} catch (IOException ioe) {try {document.insertString(0, sb.toString(), SimpleAttributeSet.EMPTY);} catch (BadLocationException ble) {ble.printStackTrace();}status = ""IO Error Reading From URL..."";finished = true;this.setChanged();this.notifyObservers();}}public Web(String urlString, String charset) throws java.net.MalformedURLException, java.io.IOException {this.charset = charset;final java.net.URL url = new java.net.URL(urlString);final java.net.URLConnection uconn = url.openConnection();if (!(uconn instanceof java.net.HttpURLConnection)) throw new java.lang.IllegalArgumentException(""URL protocol must be HTTP."");final java.net.HttpURLConnection conn = (java.net.HttpURLConnection) uconn;conn.setConnectTimeout(600000);conn.setReadTimeout(600000);conn.setInstanceFollowRedirects(true);conn.setRequestProperty(""User-agent"", ""spider"");conn.connect();responseHeader = conn.getHeaderFields();responseCode = conn.getResponseCode();responseURL = conn.getURL();length = conn.getContentLength();final java.io.InputStream stream = conn.getErrorStream();if (stream != null) {content = readStream(length, stream);} else if ((inputStream = conn.getContent()) != null && inputStream instanceof java.io.InputStream) {content = readStream(length, (java.io.InputStream) inputStream);}conn.disconnect();}"	5
"public static byte[] hashFile(File file) {long size = file.length();long jump = (long) (size / (float) CHUNK_SIZE);MessageDigest digest;FileInputStream stream;try {stream = new FileInputStream(file);digest = MessageDigest.getInstance(""SHA-256"");if (size < CHUNK_SIZE * 4) {readAndUpdate(size, stream, digest);} else {if (stream.skip(jump) != jump) return null;readAndUpdate(CHUNK_SIZE, stream, digest);if (stream.skip(jump - CHUNK_SIZE) != jump - CHUNK_SIZE) return null;readAndUpdate(CHUNK_SIZE, stream, digest);if (stream.skip(jump - CHUNK_SIZE) != jump - CHUNK_SIZE) return null;readAndUpdate(CHUNK_SIZE, stream, digest);digest.update(Long.toString(size).getBytes());}return digest.digest();} catch (FileNotFoundException e) {return null;} catch (NoSuchAlgorithmException e) {return null;} catch (IOException e) {return null;}}public InstanceMonitor(String awsAccessId, String awsSecretKey, String bucketName, boolean first) throws IOException {this.awsAccessId = awsAccessId;this.awsSecretKey = awsSecretKey;props = new Properties();while (true) {try {s3 = new RestS3Service(new AWSCredentials(awsAccessId, awsSecretKey));bucket = new S3Bucket(bucketName);S3Object obj = s3.getObject(bucket, EW_PROPERTIES);props.load(obj.getDataInputStream());break;} catch (S3ServiceException ex) {logger.error(""problem fetching props from bucket, retrying"", ex);try {Thread.sleep(1000);} catch (InterruptedException iex) {}}}URL url = new URL(""http://169.254.169.254/latest/meta-data/hostname"");hostname = new BufferedReader(new InputStreamReader(url.openStream())).readLine();url = new URL(""http://169.254.169.254/latest/meta-data/instance-id"");instanceId = new BufferedReader(new InputStreamReader(url.openStream())).readLine();url = new URL(""http://169.254.169.254/latest/meta-data/public-ipv4"");externalIP = new BufferedReader(new InputStreamReader(url.openStream())).readLine();this.dns = new NetticaAPI(props.getProperty(NETTICA_USER), props.getProperty(NETTICA_PASS));this.userData = awsAccessId + "" "" + awsSecretKey + "" "" + bucketName;this.first = first;logger.info(""InstanceMonitor initialized, first="" + first);}protected byte[] mdDecode(String s, int type, byte[] salt) {try {MessageDigest md;StringBuffer hexString = new StringBuffer();if ((type == 5) && (salt != null)) {md = MessageDigest.getInstance(SHA);hexString.append(""{"" + SSHA + ""}"");} else if (type == 4) {md = MessageDigest.getInstance(SHA);hexString.append(""{"" + SHA + ""}"");} else if ((type == 3) && (salt != null)) {md = MessageDigest.getInstance(MD5);hexString.append(""{"" + SMD5 + ""}"");} else if (type == 2) {md = MessageDigest.getInstance(MD5);hexString.append(""{"" + MD5 + ""}"");} else {return (null);}md.reset();md.update(s.getBytes(""UTF-8""));if (salt != null) {md.update(salt);byte[] buff = md.digest();byte[] new_buf = new byte[buff.length + salt.length];for (int x = 0; x < buff.length; x++) new_buf[x] = buff[x];for (int x = buff.length; x < new_buf.length; x++) new_buf[x] = salt[x - buff.length];hexString.append(CBBase64.binaryToString(new_buf));} else {byte[] buff = md.digest();hexString.append(CBBase64.binaryToString(buff));}return hexString.toString().getBytes(""UTF-8"");} catch (UnsupportedEncodingException e) {log.log(Level.WARNING, ""Unexpected error encoding password "", e);e.printStackTrace();return new byte[0];} catch (java.security.NoSuchAlgorithmException e) {log.log(Level.WARNING, ""Unexpected error encoding password "", e);e.printStackTrace();return new byte[0];}}protected void innerProcess(CrawlURI curi) throws InterruptedException {if (!curi.isHttpTransaction()) {return;}if (!TextUtils.matches(""^text.*$"", curi.getContentType())) {return;}long maxsize = DEFAULT_MAX_SIZE_BYTES.longValue();try {maxsize = ((Long) getAttribute(curi, ATTR_MAX_SIZE_BYTES)).longValue();} catch (AttributeNotFoundException e) {logger.severe(""Missing max-size-bytes attribute when processing "" + curi.getURIString());}if (maxsize < curi.getContentSize() && maxsize > -1) {return;}String regexpr = """";try {regexpr = (String) getAttribute(curi, ATTR_STRIP_REG_EXPR);} catch (AttributeNotFoundException e2) {logger.severe(""Missing strip-reg-exp when processing "" + curi.getURIString());return;}ReplayCharSequence cs = null;try {cs = curi.getHttpRecorder().getReplayCharSequence();} catch (Exception e) {curi.addLocalizedError(this.getName(), e, ""Failed get of replay char sequence "" + curi.toString() + "" "" + e.getMessage());logger.warning(""Failed get of replay char sequence "" + curi.toString() + "" "" + e.getMessage() + "" "" + Thread.currentThread().getName());return;}MessageDigest digest = null;try {digest = MessageDigest.getInstance(""SHA1"");} catch (NoSuchAlgorithmException e1) {e1.printStackTrace();return;}digest.reset();String s = null;if (regexpr.length() == 0) {s = cs.toString();} else {Matcher m = TextUtils.getMatcher(regexpr, cs);s = m.replaceAll("" "");}digest.update(s.getBytes());byte[] newDigestValue = digest.digest();if (logger.isLoggable(Level.FINEST)) {logger.finest(""Recalculated content digest for "" + curi.getURIString() + "" old: "" + Base32.encode((byte[]) curi.getContentDigest()) + "", new: "" + Base32.encode(newDigestValue));}curi.setContentDigest(newDigestValue);}public ServiceInfo[] findServices(String name) {Vector results = new Vector();String service_file = ServiceDiscovery.SERVICE_HOME + name;for (int loader_count = 0; loader_count < class_loaders_.size(); loader_count++) {ClassLoader loader = (ClassLoader) class_loaders_.elementAt(loader_count);Enumeration enumeration = null;try {enumeration = loader.getResources(service_file);} catch (IOException ex) {ex.printStackTrace();}if (enumeration == null) continue;while (enumeration.hasMoreElements()) {try {URL url = (URL) enumeration.nextElement();InputStream is = url.openStream();if (is != null) {try {BufferedReader rd;try {rd = new BufferedReader(new InputStreamReader(is, ""UTF-8""));} catch (java.io.UnsupportedEncodingException e) {rd = new BufferedReader(new InputStreamReader(is));}try {String service_class_name;while ((service_class_name = rd.readLine()) != null) {service_class_name.trim();if ("""".equals(service_class_name)) continue;if (service_class_name.startsWith(""#"")) continue;ServiceInfo sinfo = new ServiceInfo();sinfo.setClassName(service_class_name);sinfo.setLoader(loader);sinfo.setURL(url);results.add(sinfo);}} finally {rd.close();}} finally {is.close();}}} catch (MalformedURLException ex) {ex.printStackTrace();} catch (IOException ioe) {;}}}ServiceInfo result_array[] = new ServiceInfo[results.size()];results.copyInto(result_array);return (result_array);}public static byte[] encrypt(String x) throws Exception {java.security.MessageDigest d = null;d = java.security.MessageDigest.getInstance(""SHA-1"");d.reset();d.update(x.getBytes());return d.digest();}private static String simpleCompute(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(text.getBytes(""utf-8""), 0, text.length());sha1hash = md.digest();return convertToHex(sha1hash);}public static void main(String[] args) throws Exception {ClassPathXmlApplicationContext appContext = new ClassPathXmlApplicationContext(""camel/exec-context.xml"");CamelContext context = appContext.getBean(CamelContext.class);Exchange exchange = new DefaultExchange(context);List<String> arg = new ArrayList<String>();arg.add(""/home/sumit/derby.log"");arg.add(""helios:cameltesting/"");exchange.getIn().setHeader(ExecBinding.EXEC_COMMAND_ARGS, arg);Exchange res = context.createProducerTemplate().send(""direct:input"", exchange);ExecResult result = (ExecResult) res.getIn().getBody();System.out.println(result.getExitValue());System.out.println(result.getCommand());if (result.getStderr() != null) {IOUtils.copy(result.getStderr(), new FileOutputStream(new File(""/home/sumit/error.log"")));}if (result.getStdout() != null) {IOUtils.copy(result.getStdout(), new FileOutputStream(new File(""/home/sumit/out.log"")));}appContext.close();}public static String exchangeForSessionToken(String protocol, String domain, String onetimeUseToken, PrivateKey key) throws IOException, GeneralSecurityException, AuthenticationException {String sessionUrl = getSessionTokenUrl(protocol, domain);URL url = new URL(sessionUrl);HttpURLConnection httpConn = (HttpURLConnection) url.openConnection();String header = formAuthorizationHeader(onetimeUseToken, key, url, ""GET"");httpConn.setRequestProperty(""Authorization"", header);if (httpConn.getResponseCode() != HttpURLConnection.HTTP_OK) {throw new AuthenticationException(httpConn.getResponseCode() + "": "" + httpConn.getResponseMessage());}String body = IOUtils.toString(httpConn.getInputStream());Map parsedTokens = StringUtils.string2Map(body, ""\n"", ""="", true);parsedTokens = StringUtils.lowercaseKeys(parsedTokens);return (String) parsedTokens.get(""token"");}private static void processFile(String file) throws IOException {FileInputStream in = new FileInputStream(file);int read = 0;byte[] buf = new byte[2048];ByteArrayOutputStream bout = new ByteArrayOutputStream();while ((read = in.read(buf)) > 0) bout.write(buf, 0, read);in.close();String converted = bout.toString().replaceAll(""@project.name@"", projectNameS).replaceAll(""@base.package@"", basePackageS).replaceAll(""@base.dir@"", baseDir).replaceAll(""@webapp.dir@"", webAppDir).replaceAll(""path=\""target/classes\"""", ""path=\""src/main/webapp/WEB-INF/classes\"""");FileOutputStream out = new FileOutputStream(file);out.write(converted.getBytes());out.close();}"	5
"public static void main(String[] args) {try {Object o = Naming.lookup(""Server"");IServer serverStub = (IServer) o;File srcDir = new File(args[0]);File dstDir = new File(args[1]);File[] srcFiles = srcDir.listFiles();long position = 0;for (File f : srcFiles) {if (f.isDirectory()) continue;try {FileChannel srcChannel = new FileInputStream(f).getChannel();String fileName = dstDir.getAbsolutePath() + System.getProperty(""file.separator"") + f.getName();FileChannel dstChannel = new FileOutputStream(fileName).getChannel();System.out.println(""Coping "" + fileName);ByteBuffer buffer = ByteBuffer.allocate(65536);int nr = 0;srcChannel.position(nr);nr = srcChannel.read(buffer);while (nr > -1) {buffer.flip();byte[] bytes = new byte[buffer.limit()];buffer.get(bytes);position = serverStub.write(bytes, position);buffer.clear();nr = srcChannel.read(buffer);}System.out.println(""Done "");srcChannel.close();dstChannel.close();} catch (IOException e) {}}} catch (MalformedURLException e) {e.printStackTrace();} catch (RemoteException e) {e.printStackTrace();} catch (NotBoundException e) {e.printStackTrace();}}private static boolean extractFromJarUsingClassLoader(String searchString, String filename, String destinationDirectory) {ClassLoader cl = null;try {Class clClass = Class.forName(""com.simontuffs.onejar.JarClassLoader"");Constructor[] constructor = clClass.getConstructors();cl = (ClassLoader) constructor[1].newInstance(ClassLoader.getSystemClassLoader());System.out.println(""Loaded JarClassLoader. cl="" + cl.toString());} catch (Throwable e) {cl = ClassLoader.getSystemClassLoader();}URL liburl = cl.getResource(filename);if (liburl == null) {return false;}if (!destinationDirectory.endsWith(File.separator)) {destinationDirectory = destinationDirectory + File.separator;}try {File destFile = new File(destinationDirectory + filename);if (destFile.exists()) {destFile.delete();}InputStream is;is = liburl.openStream();OutputStream os = new FileOutputStream(destinationDirectory + filename);byte[] buf = new byte[4096];int cnt = is.read(buf);while (cnt > 0) {os.write(buf, 0, cnt);cnt = is.read(buf);}os.close();is.close();destFile.deleteOnExit();} catch (Exception e) {e.printStackTrace();return false;}return true;}public String digest(String password, String digestType, String inputEncoding) throws CmsPasswordEncryptionException {MessageDigest md;String result;try {if (DIGEST_TYPE_PLAIN.equals(digestType.toLowerCase())) {result = password;} else if (DIGEST_TYPE_SSHA.equals(digestType.toLowerCase())) {byte[] salt = new byte[4];byte[] digest;byte[] total;if (m_secureRandom == null) {m_secureRandom = SecureRandom.getInstance(""SHA1PRNG"");}m_secureRandom.nextBytes(salt);md = MessageDigest.getInstance(DIGEST_TYPE_SHA);md.reset();md.update(password.getBytes(inputEncoding));md.update(salt);digest = md.digest();total = new byte[digest.length + salt.length];System.arraycopy(digest, 0, total, 0, digest.length);System.arraycopy(salt, 0, total, digest.length, salt.length);result = new String(Base64.encodeBase64(total));} else {md = MessageDigest.getInstance(digestType);md.reset();md.update(password.getBytes(inputEncoding));result = new String(Base64.encodeBase64(md.digest()));}} catch (NoSuchAlgorithmException e) {CmsMessageContainer message = Messages.get().container(Messages.ERR_UNSUPPORTED_ALGORITHM_1, digestType);if (LOG.isErrorEnabled()) {LOG.error(message.key(), e);}throw new CmsPasswordEncryptionException(message, e);} catch (UnsupportedEncodingException e) {CmsMessageContainer message = Messages.get().container(Messages.ERR_UNSUPPORTED_PASSWORD_ENCODING_1, inputEncoding);if (LOG.isErrorEnabled()) {LOG.error(message.key(), e);}throw new CmsPasswordEncryptionException(message, e);}return result;}@Testpublic void testHandleMessageInvalidSignature() throws Exception {KeyPair keyPair = MiscTestUtils.generateKeyPair();DateTime notBefore = new DateTime();DateTime notAfter = notBefore.plusYears(1);X509Certificate certificate = MiscTestUtils.generateCertificate(keyPair.getPublic(), ""CN=Test"", notBefore, notAfter, null, keyPair.getPrivate(), true, 0, null, null);ServletConfig mockServletConfig = EasyMock.createMock(ServletConfig.class);Map<String, String> httpHeaders = new HashMap<String, String>();HttpSession mockHttpSession = EasyMock.createMock(HttpSession.class);HttpServletRequest mockServletRequest = EasyMock.createMock(HttpServletRequest.class);EasyMock.expect(mockServletConfig.getInitParameter(""AuditService"")).andStubReturn(null);EasyMock.expect(mockServletConfig.getInitParameter(""AuditServiceClass"")).andStubReturn(AuditTestService.class.getName());EasyMock.expect(mockServletConfig.getInitParameter(""SignatureService"")).andStubReturn(null);EasyMock.expect(mockServletConfig.getInitParameter(""SignatureServiceClass"")).andStubReturn(SignatureTestService.class.getName());EasyMock.expect(mockServletRequest.getRemoteAddr()).andStubReturn(""remote-address"");MessageDigest messageDigest = MessageDigest.getInstance(""SHA1"");byte[] document = ""hello world"".getBytes();byte[] digestValue = messageDigest.digest(document);EasyMock.expect(mockHttpSession.getAttribute(SignatureDataMessageHandler.DIGEST_VALUE_SESSION_ATTRIBUTE)).andStubReturn(digestValue);EasyMock.expect(mockHttpSession.getAttribute(SignatureDataMessageHandler.DIGEST_ALGO_SESSION_ATTRIBUTE)).andStubReturn(""SHA-1"");SignatureDataMessage message = new SignatureDataMessage();message.certificateChain = new LinkedList<X509Certificate>();message.certificateChain.add(certificate);Signature signature = Signature.getInstance(""SHA1withRSA"");signature.initSign(keyPair.getPrivate());signature.update(""foobar-document"".getBytes());byte[] signatureValue = signature.sign();message.signatureValue = signatureValue;EasyMock.replay(mockServletConfig, mockHttpSession, mockServletRequest);AppletServiceServlet.injectInitParams(mockServletConfig, this.testedInstance);this.testedInstance.init(mockServletConfig);try {this.testedInstance.handleMessage(message, httpHeaders, mockServletRequest, mockHttpSession);fail();} catch (ServletException e) {LOG.debug(""expected exception: "" + e.getMessage());EasyMock.verify(mockServletConfig, mockHttpSession, mockServletRequest);assertNull(SignatureTestService.getSignatureValue());assertEquals(""remote-address"", AuditTestService.getAuditSignatureRemoteAddress());assertEquals(certificate, AuditTestService.getAuditSignatureClientCertificate());}}public void read() throws IOException {if (log.isInfoEnabled()) {log.info(""Reading the camera log, "" + url);}final BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String line;int i = 0;try {while ((line = in.readLine()) != null) {i++;try {final CameraLogRecord logDatum = new CameraLogRecord(line);records.add(logDatum);} catch (LogParseException e) {if (log.isInfoEnabled()) {log.info(""Bad record in "" + url + "" at line:"" + i);}}}} finally {in.close();}Collections.sort(records);if (log.isInfoEnabled()) {log.info(""Finished reading the camera log, "" + url);}}private void initBanner() {for (int k = 0; k < 3; k++) {if (bannerImg == null) {int i = getRandomId();imageURL = NbBundle.getMessage(BottomContent.class, ""URL_BannerImageLink"", Integer.toString(i));bannerURL = NbBundle.getMessage(BottomContent.class, ""URL_BannerLink"", Integer.toString(i));HttpContext context = new BasicHttpContext();context.setAttribute(ClientContext.COOKIE_STORE, cookieStore);HttpGet method = new HttpGet(imageURL);try {HttpResponse response = ProxyManager.httpClient.execute(method, context);HttpEntity entity = response.getEntity();if (entity != null) {bannerImg = new ImageIcon(ImageIO.read(entity.getContent()));EntityUtils.consume(entity);}} catch (IOException ex) {bannerImg = null;} finally {method.abort();}} else {break;}}if (bannerImg == null) {NotifyUtil.error(""Banner Error"", ""Application could not get banner image. Please check your internet connection."", false);}}public void mousePressed(MouseEvent e) {bannerLbl.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));HttpContext context = new BasicHttpContext();context.setAttribute(ClientContext.COOKIE_STORE, cookieStore);HttpGet method = new HttpGet(bannerURL);try {HttpResponse response = ProxyManager.httpClient.execute(method, context);HttpEntity entity = response.getEntity();HttpHost host = (HttpHost) context.getAttribute(ExecutionContext.HTTP_TARGET_HOST);HttpUriRequest request = (HttpUriRequest) context.getAttribute(ExecutionContext.HTTP_REQUEST);String targetURL = host.toURI() + request.getURI();DesktopUtil.browseAndWarn(targetURL, bannerLbl);EntityUtils.consume(entity);} catch (Exception ex) {NotifyUtil.error(""Banner Error"", ""Could not open the default web browser."", ex, false);} finally {method.abort();}bannerLbl.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));}private DataSource loadSingleDataSource(ClassLoader contextLoader, URL url) throws IOException, DataSourceException {URI datasourceURI;OWLOntology datasourceOntology = null;URL baseURL = new URL(url.toString().replace(""META-INF/artifact.properties"", """"));Properties properties = new Properties();properties.load(url.openStream());String fileName = properties.get(""db"").toString() + "".owl"";String pkg = properties.get(""package"").toString();datasourceURI = URI.create(""http://"" + properties.get(""host"").toString() + ""/"" + fileName);Set<Class> beans = new HashSet<Class>();if (baseURL.toString().startsWith(""jar"") && baseURL.toString().endsWith(""!/"")) {JarURLConnection jarConn = (JarURLConnection) baseURL.openConnection();Enumeration<JarEntry> entries = jarConn.getJarFile().entries();while (entries.hasMoreElements()) {JarEntry next = entries.nextElement();if (next.getName().startsWith(pkg.replace('.', '/')) && next.getName().endsWith("".class"")) {String fullClassName = next.getName().replace('/', '.').replace("".class"", """");try {beans.add(contextLoader.loadClass(fullClassName));} catch (ClassNotFoundException e) {throw new DataSourceException(""Unable to locate "" + fullClassName + "".class"", e);}} else if (next.getName().equals(fileName)) {String resName = next.getName();URL owl = contextLoader.getResource(resName);try {datasourceOntology = OWLManager.createOWLOntologyManager().loadOntologyFromPhysicalURI(owl.toURI());} catch (URISyntaxException e) {throw new DataSourceException(""Bad syntax converting url -> uri: "" + owl.toString(), e);} catch (OWLOntologyCreationException e) {throw new DataSourceException(""Couldn't create ontology from "" + owl.toString(), e);}}}if (beans.size() == 0) {throw new DataSourceException(""Failed to load beans for the datasource at "" + url);}if (datasourceOntology == null) {throw new DataSourceException(""The datasource at "" + url + "" contains no ontology, or the ontology could not be loaded"");}return new BeanModelDataSource(datasourceURI, datasourceOntology);} else {throw new DataSourceException(""Unable to create a datasource, cannot load classes with the "" + ""given URL protocol ("" + baseURL + "")"");}}private static byte[] finalizeStringHash(String loginHash) throws NoSuchAlgorithmException {MessageDigest md5Hasher;md5Hasher = MessageDigest.getInstance(""MD5"");md5Hasher.update(loginHash.getBytes());md5Hasher.update(LOGIN_FINAL_SALT);return md5Hasher.digest();}private String getMD5(String data) {try {MessageDigest md5Algorithm = MessageDigest.getInstance(""MD5"");md5Algorithm.update(data.getBytes(), 0, data.length());byte[] digest = md5Algorithm.digest();StringBuffer hexString = new StringBuffer();String hexDigit = null;for (int i = 0; i < digest.length; i++) {hexDigit = Integer.toHexString(0xFF & digest[i]);if (hexDigit.length() < 2) {hexDigit = ""0"" + hexDigit;}hexString.append(hexDigit);}return hexString.toString();} catch (NoSuchAlgorithmException ne) {return data;}}"	5
"public void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {String version = req.getParameter(""version"");String cdn = req.getParameter(""cdn"");String dependencies = req.getParameter(""dependencies"");String optimize = req.getParameter(""optimize"");String cacheFile = null;String result = null;boolean isCached = false;Boolean isError = true;if (!version.equals(""1.3.2"")) {result = ""invalid version: "" + version;}if (!cdn.equals(""google"") && !cdn.equals(""aol"")) {result = ""invalide CDN type: "" + cdn;}if (!optimize.equals(""comments"") && !optimize.equals(""shrinksafe"") && !optimize.equals(""none"") && !optimize.equals(""shrinksafe.keepLines"")) {result = ""invalid optimize type: "" + optimize;}if (!dependencies.matches(""^[\\w\\-\\,\\s\\.]+$"")) {result = ""invalid dependency list: "" + dependencies;}try {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {result = e.getMessage();}if (result == null) {md.update(dependencies.getBytes());String digest = (new BASE64Encoder()).encode(md.digest()).replace('+', '~').replace('/', '_').replace('=', '_');cacheFile = cachePath + ""/"" + version + ""/"" + cdn + ""/"" + digest + ""/"" + optimize + "".js"";File file = new File(cacheFile);if (file.exists()) {isCached = true;isError = false;}}if (result == null && !isCached) {BuilderContextAction contextAction = new BuilderContextAction(builderPath, version, cdn, dependencies, optimize);ContextFactory.getGlobal().call(contextAction);Exception exception = contextAction.getException();if (exception != null) {result = exception.getMessage();} else {result = contextAction.getResult();FileUtil.writeToFile(cacheFile, result, null, true);isError = false;}}} catch (Exception e) {result = e.getMessage();}res.setCharacterEncoding(""utf-8"");if (isError) {result = result.replaceAll(""\\\"""", ""\\\"""");result = ""<html><head><script type=\""text/javascript\"">alert(\"""" + result + ""\"");</script></head><body></body></html>"";PrintWriter writer = res.getWriter();writer.append(result);} else {res.setHeader(""Content-Type"", ""application/x-javascript"");res.setHeader(""Content-disposition"", ""attachment; filename=dojo.js"");res.setHeader(""Content-Encoding"", ""gzip"");File file = new File(cacheFile);BufferedInputStream in = new java.io.BufferedInputStream(new DataInputStream(new FileInputStream(file)));OutputStream out = res.getOutputStream();byte[] bytes = new byte[64000];int bytesRead = 0;while (bytesRead != -1) {bytesRead = in.read(bytes);if (bytesRead != -1) {out.write(bytes, 0, bytesRead);}}}}public static void main(String[] args) throws IOException {ReadableByteChannel in = Channels.newChannel((new FileInputStream(""/home/sannies/suckerpunch-distantplanet_h1080p/suckerpunch-distantplanet_h1080p.mov"")));Movie movie = MovieCreator.build(in);in.close();List<Track> tracks = movie.getTracks();movie.setTracks(new LinkedList<Track>());double startTime = 35.000;double endTime = 145.000;boolean timeCorrected = false;for (Track track : tracks) {if (track.getSyncSamples() != null && track.getSyncSamples().length > 0) {if (timeCorrected) {throw new RuntimeException(""The startTime has already been corrected by another track with SyncSample. Not Supported."");}startTime = correctTimeToNextSyncSample(track, startTime);endTime = correctTimeToNextSyncSample(track, endTime);timeCorrected = true;}}for (Track track : tracks) {long currentSample = 0;double currentTime = 0;long startSample = -1;long endSample = -1;for (int i = 0; i < track.getDecodingTimeEntries().size(); i++) {TimeToSampleBox.Entry entry = track.getDecodingTimeEntries().get(i);for (int j = 0; j < entry.getCount(); j++) {if (currentTime <= startTime) {startSample = currentSample;}if (currentTime <= endTime) {endSample = currentSample;} else {break;}currentTime += (double) entry.getDelta() / (double) track.getTrackMetaData().getTimescale();currentSample++;}}movie.addTrack(new CroppedTrack(track, startSample, endSample));}long start1 = System.currentTimeMillis();IsoFile out = new DefaultMp4Builder().build(movie);long start2 = System.currentTimeMillis();FileOutputStream fos = new FileOutputStream(String.format(""output-%f-%f.mp4"", startTime, endTime));FileChannel fc = fos.getChannel();out.getBox(fc);fc.close();fos.close();long start3 = System.currentTimeMillis();System.err.println(""Building IsoFile took : "" + (start2 - start1) + ""ms"");System.err.println(""Writing IsoFile took  : "" + (start3 - start2) + ""ms"");System.err.println(""Writing IsoFile speed : "" + (new File(String.format(""output-%f-%f.mp4"", startTime, endTime)).length() / (start3 - start2) / 1000) + ""MB/s"");}public ABIFile(URL url) throws FileFormatException, IOException {URLConnection connection = url.openConnection();int contentLength = connection.getContentLength();if (contentLength <= 0) throw new RuntimeException(url + "" contained no content"");byte[] content = new byte[contentLength];DataInputStream dis = new DataInputStream(connection.getInputStream());dis.readFully(content);dis.close();dis = new DataInputStream(new ByteArrayInputStream(content));if (!isABI(dis)) {throw new FileFormatException(url + "" is not an ABI trace file"");}char[] fwo = null;dis.reset();dis.skipBytes(18);int len = dis.readInt();dis.skipBytes(4);int off = dis.readInt();ABIRecord[] data = new ABIRecord[12];ABIRecord[] pbas = new ABIRecord[2];ABIRecord[] ploc = new ABIRecord[2];dis.reset();dis.skipBytes(off);for (; len > 0; len--) {ABIRecord rec = new ABIRecord(dis);if (rec.tag.equals(""DATA"")) {try {data[rec.n - 1] = rec;} catch (ArrayIndexOutOfBoundsException e) {System.err.println(""ABI record contains erroneous n field"");}} else if (rec.tag.equals(""FWO_"")) {fwo = ((String) rec.data).toCharArray();} else if (rec.tag.equals(""PBAS"")) {pbas[rec.n - 1] = rec;} else if (rec.tag.equals(""PLOC"")) {ploc[rec.n - 1] = rec;}}traceLength = data[8].len;sequenceLength = pbas[1].len;A = new short[traceLength];C = new short[traceLength];G = new short[traceLength];T = new short[traceLength];max = Short.MIN_VALUE;for (int i = 0; i < 4; i++) {dis.reset();dis.skipBytes(data[8 + i].off);short[] current = traceArray(fwo[i]);for (int j = 0; j < traceLength; j++) {current[j] = dis.readShort();if (current[j] > max) max = current[j];}}byte[] buf = new byte[sequenceLength];dis.reset();dis.skipBytes(pbas[1].off);dis.readFully(buf);sequence = new String(buf);centers = new short[sequenceLength];dis.reset();dis.skipBytes(ploc[1].off);for (int i = 0; i < sequenceLength; i++) centers[i] = dis.readShort();}private void _resetLanguages(ActionRequest req, ActionResponse res, PortletConfig config, ActionForm form) throws Exception {List list = (List) req.getAttribute(WebKeys.LANGUAGE_MANAGER_LIST);for (int i = 0; i < list.size(); i++) {long langId = ((Language) list.get(i)).getId();try {String filePath = getGlobalVariablesPath() + ""cms_language_"" + langId + "".properties"";File from = new java.io.File(filePath);from.createNewFile();String tmpFilePath = getTemporyDirPath() + ""cms_language_"" + langId + ""_properties.tmp"";File to = new java.io.File(tmpFilePath);to.createNewFile();FileChannel srcChannel = new FileInputStream(from).getChannel();FileChannel dstChannel = new FileOutputStream(to).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (IOException e) {Logger.debug(this, ""Property File copy Failed "" + e, e);}}}private void _checkLanguagesFiles(ActionRequest req, ActionResponse res, PortletConfig config, ActionForm form) throws Exception {List list = (List) req.getAttribute(WebKeys.LANGUAGE_MANAGER_LIST);for (int i = 0; i < list.size(); i++) {long langId = ((Language) list.get(i)).getId();try {String filePath = getGlobalVariablesPath() + ""cms_language_"" + langId + "".properties"";boolean copy = false;File from = new java.io.File(filePath);if (!from.exists()) {from.createNewFile();copy = true;}String tmpFilePath = getTemporyDirPath() + ""cms_language_"" + langId + ""_properties.tmp"";File to = new java.io.File(tmpFilePath);if (!to.exists()) {to.createNewFile();copy = true;}if (copy) {FileChannel srcChannel = new FileInputStream(from).getChannel();FileChannel dstChannel = new FileOutputStream(to).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();}} catch (IOException e) {Logger.error(this, ""_checkLanguagesFiles:Property File Copy Failed "" + e, e);}}}private void _save(ActionRequest req, ActionResponse res, PortletConfig config, ActionForm form) throws Exception {List list = (List) req.getAttribute(WebKeys.LANGUAGE_MANAGER_LIST);for (int i = 0; i < list.size(); i++) {long langId = ((Language) list.get(i)).getId();try {String filePath = getGlobalVariablesPath() + ""cms_language_"" + langId + "".properties"";String tmpFilePath = getTemporyDirPath() + ""cms_language_"" + langId + ""_properties.tmp"";File from = new java.io.File(tmpFilePath);from.createNewFile();File to = new java.io.File(filePath);to.createNewFile();FileChannel srcChannel = new FileInputStream(from).getChannel();FileChannel dstChannel = new FileOutputStream(to).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (NonWritableChannelException we) {} catch (IOException e) {Logger.error(this, ""Property File save Failed "" + e, e);}}SessionMessages.add(req, ""message"", ""message.languagemanager.save"");}@Testpublic void behaveTest() {InputStream is = this.getClass().getResourceAsStream(""safetyCaseTest.mdf"");ByteArrayOutputStream out = new ByteArrayOutputStream();try {IOUtils.copy(is, out);} catch (IOException e) {throw new RuntimeException(""Unable to read mdf"", e);}TrafficSimulationEngine engine = new TrafficSimulationEngine();TrafficModelDefinition def = MDFReader.read(out.toByteArray());engine.init(def);Map<Integer, Set<Integer>> linkSegments = new HashMap<Integer, Set<Integer>>();Set<Integer> segments = new HashSet<Integer>();segments.add(0);linkSegments.put(0, segments);FrameProperties frameProperties = new FrameProperties(linkSegments, new HashSet<Integer>());engine.setFrameProperties(frameProperties);RegularVehicle vehicle = (RegularVehicle) engine.getDynamicObjects().iterator().next();CompositeDriver driver = (CompositeDriver) vehicle.getDriver();driver.drive(0.1f);SafetyCase safety = new SafetyCase(driver);RectangleCCRange ccRange = (RectangleCCRange) safety.behave(0.1f);HandRange turnRange = ccRange.getTurnRange();HandRange probeRange = new HandRange();probeRange.remove(Hand.Left);assertTrue(turnRange.equals(probeRange));assertTrue(ccRange.getPriority() == Priority.SafetyCase);}private static boolean moveFiles(String sourceDir, String targetDir) {boolean isFinished = false;boolean fileMoved = false;File stagingDir = new File(sourceDir);if (!stagingDir.exists()) {System.out.println(getTimeStamp() + ""ERROR - source directory does not exist."");return true;}if (stagingDir.listFiles() == null) {System.out.println(getTimeStamp() + ""ERROR - Empty file list. Possible permission error on source directory "" + sourceDir);return true;}File[] fileList = stagingDir.listFiles();for (int x = 0; x < fileList.length; x++) {File f = fileList[x];if (f.getName().startsWith(""."")) {continue;}String targetFileName = targetDir + File.separator + f.getName();String operation = ""move"";boolean success = f.renameTo(new File(targetFileName));if (success) {fileMoved = true;} else {operation = ""mv"";try {Process process = Runtime.getRuntime().exec(new String[] { ""mv"", f.getCanonicalPath(), targetFileName });process.waitFor();process.destroy();if (!new File(targetFileName).exists()) {success = false;} else {success = true;fileMoved = true;}} catch (Exception e) {success = false;}if (!success) {operation = ""copy"";FileChannel in = null;FileChannel out = null;try {in = new FileInputStream(f).getChannel();File outFile = new File(targetFileName);out = new FileOutputStream(outFile).getChannel();in.transferTo(0, in.size(), out);in.close();in = null;out.close();out = null;f.delete();success = true;} catch (Exception e) {success = false;} finally {if (in != null) {try {in.close();} catch (Exception e) {}}if (out != null) {try {out.close();} catch (Exception e) {}}}}}if (success) {System.out.println(getTimeStamp() + operation + "" "" + f.getAbsolutePath() + "" to "" + targetDir);fileMoved = true;} else {System.out.println(getTimeStamp() + ""ERROR - "" + operation + "" "" + f.getName() + "" to "" + targetFileName + "" failed."");isFinished = true;}}if (fileMoved && !isFinished) {try {currentLastActivity = System.currentTimeMillis();updateLastActivity(currentLastActivity);} catch (NumberFormatException e) {System.out.println(getTimeStamp() + ""ERROR: NumberFormatException when trying to update lastActivity."");isFinished = true;} catch (IOException e) {System.out.println(getTimeStamp() + ""ERROR: IOException when trying to update lastActivity. "" + e.toString());isFinished = true;}}return isFinished;}protected Resolver queryResolver(String resolver, String command, String arg1, String arg2) {InputStream iStream = null;String RFC2483 = resolver + ""?command="" + command + ""&format=tr9401&uri="" + arg1 + ""&uri2="" + arg2;String line = null;try {URL url = new URL(RFC2483);URLConnection urlCon = url.openConnection();urlCon.setUseCaches(false);Resolver r = (Resolver) newCatalog();String cType = urlCon.getContentType();if (cType.indexOf("";"") > 0) {cType = cType.substring(0, cType.indexOf("";""));}r.parseCatalog(cType, urlCon.getInputStream());return r;} catch (CatalogException cex) {if (cex.getExceptionType() == CatalogException.UNPARSEABLE) {catalogManager.debug.message(1, ""Unparseable catalog: "" + RFC2483);} else if (cex.getExceptionType() == CatalogException.UNKNOWN_FORMAT) {catalogManager.debug.message(1, ""Unknown catalog format: "" + RFC2483);}return null;} catch (MalformedURLException mue) {catalogManager.debug.message(1, ""Malformed resolver URL: "" + RFC2483);return null;} catch (IOException ie) {catalogManager.debug.message(1, ""I/O Exception opening resolver: "" + RFC2483);return null;}}@Overrideprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {String requestPath = req.getRequestURI();String cdecUrl = ""http://cdec.water.ca.gov"" + requestPath + ""?"" + req.getQueryString();System.out.println(""CDEC URL: "" + cdecUrl);URL url = new URL(cdecUrl);BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));StringBuffer buffer = new StringBuffer();String line = null;int ncolumnInner = 0;while ((line = reader.readLine()) != null) {if (line.contains(""<div class=\""column_inner\"""")) {ncolumnInner++;}if (ncolumnInner == 2) {if (line.contains(""</div>"")) {break;}if (line.contains(""href"")) {line = line.replaceAll(""href"", ""  target=\""external_page\"" href"");}if (line.contains(""http://cdec.water.ca.gov:80"")) {line = line.replaceAll(""http://cdec.water.ca.gov:80/"", ""/"");}if (line.contains(""href="")) {line = line.replaceAll(""(href=\""|href=)"", ""$1http://cdec.water.ca.gov"");}buffer.append(line);} else {continue;}}resp.getWriter().write(buffer.toString());resp.getWriter().flush();reader.close();}"	5
"public String encodePassword(String rawPass, Object salt) {MessageDigest sha;try {sha = MessageDigest.getInstance(""SHA"");} catch (java.security.NoSuchAlgorithmException e) {throw new LdapDataAccessException(""No SHA implementation available!"");}sha.update(rawPass.getBytes());if (salt != null) {Assert.isInstanceOf(byte[].class, salt, ""Salt value must be a byte array"");sha.update((byte[]) salt);}byte[] hash = combineHashAndSalt(sha.digest(), (byte[]) salt);return (salt == null ? SHA_PREFIX : SSHA_PREFIX) + new String(Base64.encodeBase64(hash));}public static String crypt(String str) {if (str == null || str.length() == 0) {throw new IllegalArgumentException(""String to encript cannot be null or zero length"");}StringBuffer hexString = new StringBuffer();MessageDigest md = null;try {md = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {e.printStackTrace();}md.update(str.getBytes());byte[] hash = md.digest();for (int i = 0; i < hash.length; i++) {if ((0xff & hash[i]) < 0x10) {hexString.append(""0"" + Integer.toHexString((0xFF & hash[i])));} else {hexString.append(Integer.toHexString(0xFF & hash[i]));}}return hexString.toString();}public static void main(String[] args) {try {{byte[] bytes1 = { (byte) 2, (byte) 2, (byte) 3, (byte) 0, (byte) 9 };byte[] bytes2 = { (byte) 99, (byte) 2, (byte) 2, (byte) 3, (byte) 0, (byte) 9 };System.out.println(""Bytes 2,2,3,0,9 as Base64: "" + encodeBytes(bytes1));System.out.println(""Bytes 2,2,3,0,9 w/ offset: "" + encodeBytes(bytes2, 1, bytes2.length - 1));byte[] dbytes = decode(encodeBytes(bytes1));System.out.print(encodeBytes(bytes1) + "" decoded: "");for (int i = 0; i < dbytes.length; i++) System.out.print(dbytes[i] + (i < dbytes.length - 1 ? "","" : ""\n""));}{java.io.FileInputStream fis = new java.io.FileInputStream(""test.gif.b64"");Base64.InputStream b64is = new Base64.InputStream(fis, DECODE);byte[] bytes = new byte[0];int b = -1;while ((b = b64is.read()) >= 0) {byte[] temp = new byte[bytes.length + 1];System.arraycopy(bytes, 0, temp, 0, bytes.length);temp[bytes.length] = (byte) b;bytes = temp;}b64is.close();javax.swing.ImageIcon iicon = new javax.swing.ImageIcon(bytes);javax.swing.JLabel jlabel = new javax.swing.JLabel(""Read from test.gif.b64"", iicon, 0);javax.swing.JFrame jframe = new javax.swing.JFrame();jframe.getContentPane().add(jlabel);jframe.pack();jframe.setVisible(true);java.io.FileOutputStream fos = new java.io.FileOutputStream(""test.gif_out"");fos.write(bytes);fos.close();fis = new java.io.FileInputStream(""test.gif_out"");b64is = new Base64.InputStream(fis, ENCODE);byte[] ebytes = new byte[0];b = -1;while ((b = b64is.read()) >= 0) {byte[] temp = new byte[ebytes.length + 1];System.arraycopy(ebytes, 0, temp, 0, ebytes.length);temp[ebytes.length] = (byte) b;ebytes = temp;}b64is.close();String s = new String(ebytes);javax.swing.JTextArea jta = new javax.swing.JTextArea(s);javax.swing.JScrollPane jsp = new javax.swing.JScrollPane(jta);jframe = new javax.swing.JFrame();jframe.setTitle(""Read from test.gif_out"");jframe.getContentPane().add(jsp);jframe.pack();jframe.setVisible(true);fos = new java.io.FileOutputStream(""test.gif.b64_out"");fos.write(ebytes);fis = new java.io.FileInputStream(""test.gif.b64_out"");b64is = new Base64.InputStream(fis, DECODE);byte[] edbytes = new byte[0];b = -1;while ((b = b64is.read()) >= 0) {byte[] temp = new byte[edbytes.length + 1];System.arraycopy(edbytes, 0, temp, 0, edbytes.length);temp[edbytes.length] = (byte) b;edbytes = temp;}b64is.close();iicon = new javax.swing.ImageIcon(edbytes);jlabel = new javax.swing.JLabel(""Read from test.gif.b64_out"", iicon, 0);jframe = new javax.swing.JFrame();jframe.getContentPane().add(jlabel);jframe.pack();jframe.setVisible(true);}{java.io.FileInputStream fis = new java.io.FileInputStream(""test.gif_out"");byte[] rbytes = new byte[0];int b = -1;while ((b = fis.read()) >= 0) {byte[] temp = new byte[rbytes.length + 1];System.arraycopy(rbytes, 0, temp, 0, rbytes.length);temp[rbytes.length] = (byte) b;rbytes = temp;}fis.close();java.io.FileOutputStream fos = new java.io.FileOutputStream(""test.gif.b64_out2"");Base64.OutputStream b64os = new Base64.OutputStream(fos, ENCODE);b64os.write(rbytes);b64os.close();fis = new java.io.FileInputStream(""test.gif.b64_out2"");byte[] rebytes = new byte[0];b = -1;while ((b = fis.read()) >= 0) {byte[] temp = new byte[rebytes.length + 1];System.arraycopy(rebytes, 0, temp, 0, rebytes.length);temp[rebytes.length] = (byte) b;rebytes = temp;}fis.close();String s = new String(rebytes);javax.swing.JTextArea jta = new javax.swing.JTextArea(s);javax.swing.JScrollPane jsp = new javax.swing.JScrollPane(jta);javax.swing.JFrame jframe = new javax.swing.JFrame();jframe.setTitle(""Read from test.gif.b64_out2"");jframe.getContentPane().add(jsp);jframe.pack();jframe.setVisible(true);fos = new java.io.FileOutputStream(""test.gif_out2"");b64os = new Base64.OutputStream(fos, DECODE);b64os.write(rebytes);b64os.close();javax.swing.ImageIcon iicon = new javax.swing.ImageIcon(""test.gif_out2"");javax.swing.JLabel jlabel = new javax.swing.JLabel(""Read from test.gif_out2"", iicon, 0);jframe = new javax.swing.JFrame();jframe.getContentPane().add(jlabel);jframe.pack();jframe.setVisible(true);}{java.io.FileInputStream fis = new java.io.FileInputStream(""D:\\temp\\testencoding.txt"");Base64.InputStream b64is = new Base64.InputStream(fis, DECODE);java.io.FileOutputStream fos = new java.io.FileOutputStream(""D:\\temp\\file.zip"");int b;while ((b = b64is.read()) >= 0) fos.write(b);fos.close();b64is.close();}} catch (Exception e) {e.printStackTrace();}}private String encryptUserPassword(int userId, String password) {password = password.trim();if (password.length() == 0) {return """";} else {MessageDigest md;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException ex) {throw new BoardRuntimeException(ex);}md.update(String.valueOf(userId).getBytes());md.update(password.getBytes());byte b[] = md.digest();StringBuffer sb = new StringBuffer(1 + b.length * 2);for (int i = 0; i < b.length; i++) {int ii = b[i];if (ii < 0) {ii = 256 + ii;}sb.append(getHexadecimalValue2(ii));}return sb.toString();}}@Overridepublic void doIt() {try {Shared.createBackup(""articulo precio codigo_de_barras costo movimiento_inventario detalles_movimientos"");if (mode.equals(""FTP"")) {FTPClient client = new FTPClient();client.connect(Constants.ftpHost);client.login(Constants.ftpUser, Constants.ftpPass);client.changeDirectory(Constants.ftpDir);File ff = new File(Constants.tmpDir + Constants.tmpFtpFileName);client.download(""GT99_A09.rar"", ff);client.disconnect(false);Shared.prepareMovements(ff);} else if (mode.equals(""File"")) {JFileChooser jfc = new JFileChooser();FileFilter f = new ExtensionFileFilter(""Traslados de Total Pos"", ""rar"");jfc.setFileFilter(f);int selection = jfc.showOpenDialog(Shared.getMyMainWindows());if (selection == JFileChooser.APPROVE_OPTION) {Shared.prepareMovements(jfc.getSelectedFile());} else {return;}}Shared.updateMovements();if (Shared.isHadMovements()) {MessageBox msg = new MessageBox(MessageBox.SGN_SUCCESS, ""Fue cargado el nuevo inventario satisfactoriamente!"");msg.show(Shared.getMyMainWindows());} else {MessageBox msg = new MessageBox(MessageBox.SGN_WARNING, ""La tienda no tuvo ningun movimiento asociado."");msg.show(Shared.getMyMainWindows());}} catch (Exception ex) {MessageBox msg = new MessageBox(MessageBox.SGN_DANGER, ""Ha ocurrido un error."", ex);msg.show(Shared.getMyMainWindows());}}public static void main(String[] args) {FTPClient client = new FTPClient();FileInputStream fis = null;try {client.connect(""192.168.1.10"");client.login(""a"", ""123456"");String filename = ""D:\\DHTH5CLT\\HK3\\Ung dung phan tan\\FTP_JAVA\\FTP_DETAI\\FTP\\src\\DemoFTP\\filename\\5s.txt"";fis = new FileInputStream(filename);client.storeFile(filename, fis);client.logout();} catch (IOException e) {e.printStackTrace();} finally {try {if (fis != null) {fis.close();}client.disconnect();} catch (IOException e) {e.printStackTrace();}}}public static void _he3Decode(String in_file) {try {File out = new File(in_file + dec_extension);File in = new File(in_file);int file_size = (int) in.length();FileInputStream in_stream = new FileInputStream(in_file);out.createNewFile();FileOutputStream out_stream = new FileOutputStream(out.getName());InputStreamReader inputReader = new InputStreamReader(in_stream, ""ISO8859_1"");OutputStreamWriter outputWriter = new OutputStreamWriter(out_stream, ""ISO8859_1"");ByteArrayOutputStream os = new ByteArrayOutputStream(file_size);byte byte_arr[] = new byte[8];char char_arr[] = new char[8];int buff_size = char_arr.length;int _fetched = 0;int _chars_read = 0;System.out.println(appname + "".\n"" + dec_mode + "": "" + in_file + ""\n"" + dec_mode + "" to: "" + in_file + dec_extension + ""\n"" + ""\nreading: "");while (_fetched < file_size) {_chars_read = inputReader.read(char_arr, 0, buff_size);if (_chars_read == -1) break;for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i];os.write(byte_arr, 0, _chars_read);_fetched += _chars_read;System.out.print(""*"");}System.out.print(""\n"" + dec_mode + "": "");outputWriter.write(new String(_decode((ByteArrayOutputStream) os), ""ISO-8859-1""));System.out.print(""complete\n\n"");} catch (java.io.FileNotFoundException fnfEx) {System.err.println(""Exception: "" + fnfEx.getMessage());} catch (java.io.IOException ioEx) {System.err.println(""Exception: "" + ioEx.getMessage());}}protected HttpResponse doGet(String action, String[][] args) throws IOException {long startTime = System.currentTimeMillis();String getString = host + ""?"" + ACTION_PARAMETER + ""="" + action;if (args != null && args.length != 0) {for (int i = 0; i < args.length; i++) {if (args[i].length != 0) {getString = getString + ""&"" + args[i][0] + ""="" + encode(args[i][1]);}}}HttpGet httpGet = new HttpGet(getString);HttpResponse response = getHttpClient().execute(httpGet);if (timingsOn) {totalCalls++;long elapsedTime = (System.currentTimeMillis() - startTime);if (totalCalls != 1) {totalTime = totalTime + elapsedTime;minTime = Math.min(minTime, elapsedTime);maxTime = Math.max(maxTime, elapsedTime);} else {minTime = elapsedTime;maxTime = 0L;}System.out.println(""http get took "" + elapsedTime + "" ms., (calls, min, max, av) = ("" + totalCalls + "", "" + minTime + "", "" + maxTime + "", "" + (totalTime / totalCalls) + "")"");}return response;}private void detachFile(File file, Block b) throws IOException {File tmpFile = volume.createDetachFile(b, file.getName());try {IOUtils.copyBytes(new FileInputStream(file), new FileOutputStream(tmpFile), 16 * 1024, true);if (file.length() != tmpFile.length()) {throw new IOException(""Copy of file "" + file + "" size "" + file.length() + "" into file "" + tmpFile + "" resulted in a size of "" + tmpFile.length());}FileUtil.replaceFile(tmpFile, file);} catch (IOException e) {boolean done = tmpFile.delete();if (!done) {DataNode.LOG.info(""detachFile failed to delete temporary file "" + tmpFile);}throw e;}}public static void copy(String from, String to) throws Exception {File inputFile = new File(from);File outputFile = new File(to);FileInputStream in = new FileInputStream(inputFile);FileOutputStream out = new FileOutputStream(outputFile);byte[] buffer = new byte[1024];int len;while ((len = in.read(buffer)) != -1) out.write(buffer, 0, len);in.close();out.close();}"	5
"private Bitmap fetchImage(String urlstr) throws Exception {URL url;url = new URL(urlstr);HttpURLConnection c = (HttpURLConnection) url.openConnection();c.setDoInput(true);c.setRequestProperty(""User-Agent"", ""Agent"");c.connect();InputStream is = c.getInputStream();Bitmap img;img = BitmapFactory.decodeStream(is);return img;}protected void runTest(URL pBaseURL, String pName, String pHref) throws Exception {URL url = new URL(pBaseURL, pHref);XSParser parser = new XSParser();parser.setValidating(false);InputSource isource = new InputSource(url.openStream());isource.setSystemId(url.toString());String result;try {parser.parse(isource);++numOk;result = ""Ok"";} catch (Exception e) {++numFailed;result = e.getMessage();}log(""Running test "" + pName + "" with URL "" + url + "": "" + result);}protected void runTests(URL pBaseURL, String pName, String pHref) throws Exception {URL url = new URL(pBaseURL, pHref);InputSource isource = new InputSource(url.openStream());isource.setSystemId(url.toString());Document document = getDocumentBuilder().parse(isource);NodeList schemas = document.getElementsByTagNameNS(null, ""Schema"");for (int i = 0; i < schemas.getLength(); i++) {Element schema = (Element) schemas.item(i);runTest(url, schema.getAttribute(""name""), schema.getAttribute(""href""));}}private void transferFile(String fileName) throws SocketException, IOException, Exception {FTPClient client = new FTPClient();client.connect(server.getExternalName(), server.getPort());int reply = client.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {throw new Exception(""Failed connecting to server"");}client.login(server.getDefaultUserName(), server.getDefaultUserPassword());reply = client.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {throw new Exception(""Failed connecting to server"");}InputStream stream = getClass().getClassLoader().getResourceAsStream(""res/conf/ftpd.properties"");client.storeFile(fileName, stream);File transfferedFile = new File(server.getServerRootDirectory(), fileName);assertTrue(transfferedFile.exists());assertTrue(transfferedFile.delete());}private String fetchCompareContent() throws IOException {URL url = new URL(compareTo);StringWriter sw = new StringWriter();IOUtils.copy(url.openStream(), sw);return sw.getBuffer().toString();}public static void writeFromURL(String urlstr, String filename) throws Exception {URL url = new URL(urlstr);InputStream in = url.openStream();BufferedReader bf = null;StringBuffer sb = new StringBuffer();try {bf = new BufferedReader(new InputStreamReader(in, ""latin1""));String s;while (true) {s = bf.readLine();if (s != null) {sb.append(s);} else {break;}}} catch (Exception e) {throw e;} finally {bf.close();}writeRawBytes(sb.toString(), filename);}private void generate(String salt) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {logger.error(""No MD5"", e);}long time = System.currentTimeMillis();long rand = random.nextLong();sbValueBeforeMD5.append(systemId);sbValueBeforeMD5.append(salt);sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append(Long.toString(rand));md5.update(sbValueBeforeMD5.toString().getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();int position = 0;for (int j = 0; j < array.length; ++j) {if (position == 4 || position == 6 || position == 8 || position == 10) {sb.append('-');}position++;int b = array[j] & 0xFF;if (b < 0x10) {sb.append('0');}sb.append(Integer.toHexString(b).toUpperCase());}guidString = sb.toString().toUpperCase();}public URL getResource(String path) throws MalformedURLException {if (!path.startsWith(""/"")) throw new MalformedURLException(""Path '"" + path + ""' does not start with '/'"");URL url = new URL(myResourceBaseURL, path.substring(1));InputStream is = null;try {is = url.openStream();} catch (Throwable t) {url = null;} finally {if (is != null) {try {is.close();} catch (Throwable t2) {}}}return url;}@Overridepublic boolean checkLink(String link) {boolean result = false;URLConnection connection = null;URL url = null;try {url = new URL(link);connection = url.openConnection();connection.setRequestProperty(""Cookie"", cookie.getCookie(RAPIDSHARE_LOGIN_PAGE));connection.connect();if (connection.getContentLength() > 0) {if (connection.getContentType().equals(""application/octet-stream"")) {result = true;}Logger.getRootLogger().debug(connection.getContentType());}} catch (MalformedURLException e) {Logger.getRootLogger().error(link + "" cannot be url"", e);} catch (IOException e) {Logger.getRootLogger().error(""connection failed"", e);}if (!result) {Logger.getRootLogger().warn(link + "" doesn't exist"");}return result;}@Testpublic void testOther() throws Exception {filter.init(this.mockConfig);ByteArrayOutputStream jpg = new ByteArrayOutputStream();IOUtils.copy(this.getClass().getResourceAsStream(""Buffalo-Theory.jpg""), jpg);MockFilterChain mockChain = new MockFilterChain();mockChain.setContentType(""image/jpg"");mockChain.setOutputData(jpg.toByteArray());MockResponse mockResponse = new MockResponse();filter.doFilter(this.mockRequest, mockResponse, mockChain);Assert.assertTrue(""Time stamp content type"", ""image/jpg"".equals(mockResponse.getContentType()));Assert.assertTrue(""OutputStream as original"", ArrayUtils.isEquals(jpg.toByteArray(), mockResponse.getMockServletOutputStream().getBytes()));}"	5
"public static byte[] computeMD5(String s) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.reset();md.update(s.getBytes());return md.digest();} catch (NoSuchAlgorithmException ex) {throw new RuntimeException(ex);}}private void populateAPI(API api) {try {if (api.isPopulated()) {log.traceln(""Skipping API "" + api.getName() + "" (already populated)"");return;}api.setPopulated(true);String sql = ""update API set populated=1 where name=?"";PreparedStatement pstmt = conn.prepareStatement(sql);pstmt.setString(1, api.getName());pstmt.executeUpdate();pstmt.close();storePackagesAndClasses(api);conn.commit();} catch (SQLException ex) {log.error(""Store (api: "" + api.getName() + "") failed!"");DBUtils.logSQLException(ex);log.error(""Rolling back.."");try {conn.rollback();} catch (SQLException inner_ex) {log.error(""rollback failed!"");}}}public static void copy(File src, File dest) {try {FileChannel srcChannel = new FileInputStream(src).getChannel();FileChannel dstChannel = new FileOutputStream(dest).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (IOException e) {}}public java.io.Serializable getContent() throws org.osid.repository.RepositoryException {logger.logMethod();if (!this.cached) {logger.logTrace(""not cached.. getting content"");Object object = this.asset.getContent();if (object instanceof String) {String s = (String) object;if (s.startsWith(""http://"")) {try {java.net.URL url = new java.net.URL(s);java.io.InputStream is = url.openStream();java.io.File file = getCacheFile();java.io.FileOutputStream fos = new java.io.FileOutputStream(file);int len;byte[] b = new byte[10240];this.length = 0;while ((len = is.read(b)) >= 0) {fos.write(b, 0, len);this.length += len;}fos.close();is.close();java.net.URLConnection urlc = new java.net.URL(s).openConnection();this.lastModified = urlc.getLastModified();this.mimeType = urlc.getContentType();} catch (java.io.IOException ie) {logger.logError(""error writing file"", ie);}}}this.cached = true;} else {logger.logTrace(""cached.."");}try {return (new SerializableInputStream(new java.io.FileInputStream(getCacheFile())));} catch (java.io.IOException ie) {logger.logError(""cannot get content"", ie);throw new org.osid.repository.RepositoryException(org.osid.repository.RepositoryException.OPERATION_FAILED);}}@Overrideprotected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {try {String fileName = request.getParameter(""tegsoftFileName"");if (fileName.startsWith(""Tegsoft_BACKUP_"")) {fileName = fileName.substring(""Tegsoft_BACKUP_"".length());String targetFileName = ""/home/customer/"" + fileName;response.setContentType(""application/octet-stream"");response.setHeader(""Content-Disposition"", ""attachment;filename="" + fileName);FileInputStream is = new FileInputStream(targetFileName);IOUtils.copy(is, response.getOutputStream());is.close();return;}if (fileName.equals(""Tegsoft_ASTMODULES"")) {String targetFileName = tobeHome + ""/setup/Tegsoft_ASTMODULES.tgz"";response.setContentType(""application/octet-stream"");response.setHeader(""Content-Disposition"", ""attachment;filename="" + fileName);FileInputStream is = new FileInputStream(targetFileName);IOUtils.copy(is, response.getOutputStream());is.close();return;}if (fileName.equals(""Tegsoft_ASTSBIN"")) {String targetFileName = tobeHome + ""/setup/Tegsoft_ASTSBIN.tgz"";response.setContentType(""application/octet-stream"");response.setHeader(""Content-Disposition"", ""attachment;filename="" + fileName);FileInputStream is = new FileInputStream(targetFileName);IOUtils.copy(is, response.getOutputStream());is.close();return;}if (!fileName.startsWith(""Tegsoft_"")) {return;}if (!fileName.endsWith("".zip"")) {return;}if (fileName.indexOf(""_"") < 0) {return;}fileName = fileName.substring(fileName.indexOf(""_"") + 1);if (fileName.indexOf(""_"") < 0) {return;}String fileType = fileName.substring(0, fileName.indexOf(""_""));String destinationFileName = tobeHome + ""/setup/Tegsoft_"" + fileName;if (!new File(destinationFileName).exists()) {if (""FORMS"".equals(fileType)) {FileUtil.createZipPackage(tobeHome + ""/forms"", tobeHome + ""/setup/Tegsoft_"" + fileName);} else if (""IMAGES"".equals(fileType)) {FileUtil.createZipPackage(tobeHome + ""/image"", tobeHome + ""/setup/Tegsoft_"" + fileName);} else if (""VIDEOS"".equals(fileType)) {FileUtil.createZipPackage(tobeHome + ""/videos"", tobeHome + ""/setup/Tegsoft_"" + fileName);} else if (""TEGSOFTJARS"".equals(fileType)) {FileUtil.createZipPackage(tobeHome + ""/WEB-INF/lib/"", tobeHome + ""/setup/Tegsoft_"" + fileName, ""Tegsoft"", ""jar"");} else if (""TOBEJARS"".equals(fileType)) {FileUtil.createZipPackage(tobeHome + ""/WEB-INF/lib/"", tobeHome + ""/setup/Tegsoft_"" + fileName, ""Tobe"", ""jar"");} else if (""ALLJARS"".equals(fileType)) {FileUtil.createZipPackage(tobeHome + ""/WEB-INF/lib/"", tobeHome + ""/setup/Tegsoft_"" + fileName);} else if (""DB"".equals(fileType)) {FileUtil.createZipPackage(tobeHome + ""/sql"", tobeHome + ""/setup/Tegsoft_"" + fileName);} else if (""CONFIGSERVICE"".equals(fileType)) {FileUtil.createZipPackage(""/tegsoft/src/java/TegsoftTelecom/configFiles/init.d/"", tobeHome + ""/setup/Tegsoft_"" + fileName, ""tegsoft"", null);} else if (""CONFIGSCRIPTS"".equals(fileType)) {FileUtil.createZipPackage(""/tegsoft/src/java/TegsoftTelecom/configFiles/root/"", tobeHome + ""/setup/Tegsoft_"" + fileName, ""tegsoft"", null);} else if (""CONFIGFOP"".equals(fileType)) {FileUtil.createZipPackage(""/tegsoft/src/java/TegsoftTelecom/configFiles/fop/"", tobeHome + ""/setup/Tegsoft_"" + fileName);} else if (""CONFIGASTERISK"".equals(fileType)) {FileUtil.createZipPackage(""/tegsoft/src/java/TegsoftTelecom/configFiles/asterisk/"", tobeHome + ""/setup/Tegsoft_"" + fileName);}}response.setContentType(""application/octet-stream"");response.setHeader(""Content-Disposition"", ""attachment;filename="" + fileName);FileInputStream is = new FileInputStream(destinationFileName);IOUtils.copy(is, response.getOutputStream());is.close();} catch (Exception ex) {ex.printStackTrace();}}public long calculateResponseTime(Proxy proxy) {try {LOGGER.debug(""Test network response time for "" + RESPONSE_TEST_URL);URL urlForTest = new URL(REACH_TEST_URL);URLConnection testConnection = urlForTest.openConnection(proxy);long startTime = System.currentTimeMillis();testConnection.connect();testConnection.connect();testConnection.connect();testConnection.connect();testConnection.connect();long endTime = System.currentTimeMillis();long averageResponseTime = (endTime - startTime) / 5;LOGGER.debug(""Average access time in ms : "" + averageResponseTime);return averageResponseTime;} catch (Exception e) {LOGGER.error(e);}return -1;}private byte[] odszyfrujKlucz(byte[] kluczSesyjny, int rozmiarKlucza) {byte[] odszyfrowanyKlucz = null;byte[] kluczTymczasowy = null;try {MessageDigest skrot = MessageDigest.getInstance(""SHA-1"");skrot.update(haslo.getBytes());byte[] skrotHasla = skrot.digest();Object kluczDoKlucza = MARS_Algorithm.makeKey(skrotHasla);byte[] tekst = null;kluczTymczasowy = new byte[rozmiarKlucza];int liczbaBlokow = rozmiarKlucza / ROZMIAR_BLOKU;for (int i = 0; i < liczbaBlokow; i++) {tekst = MARS_Algorithm.blockDecrypt(kluczSesyjny, i * ROZMIAR_BLOKU, kluczDoKlucza);System.arraycopy(tekst, 0, kluczTymczasowy, i * ROZMIAR_BLOKU, tekst.length);}odszyfrowanyKlucz = new byte[dlugoscKlucza];System.arraycopy(kluczTymczasowy, 0, odszyfrowanyKlucz, 0, dlugoscKlucza);} catch (InvalidKeyException ex) {Logger.getLogger(SzyfrowaniePliku.class.getName()).log(Level.SEVERE, null, ex);} catch (NoSuchAlgorithmException ex) {ex.printStackTrace();}return odszyfrowanyKlucz;}public static String getMD5(String password) {try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");String salt = ""UseTheForce4"";password = salt + password;md5.update(password.getBytes(), 0, password.length());password = new BigInteger(1, md5.digest()).toString(16);} catch (Exception e) {}return password;}public void read() throws LogicException {try {File file = new File(filename);URL url = file.toURI().toURL();source = new Source(url.openConnection());} catch (Exception e) {throw new LogicException(""Failed to read "" + filename + "" !"", e);}ArrayList<Segment> segments = new ArrayList<Segment>();List<Element> elements = source.getChildElements();for (Element element : elements) {Segment segment = element.getContent();Iterator<Segment> iterator = segment.getNodeIterator();while (iterator.hasNext()) {Segment current = iterator.next();if (isPlainText(current)) {segments.add(current);}}}texts.clear();sentences.clear();for (int i = 0; i < segments.size(); i++) {ArrayList<Segment> group = new ArrayList<Segment>();group.add(segments.get(i));while (i < (segments.size() - 1) && segments.get(i).getEnd() == segments.get(i + 1).getBegin()) {group.add(segments.get(i + 1));i++;}texts.add(new Text(group, tokenizer));}ArrayList<Token> tokens = new ArrayList<Token>();for (Text text : texts) {tokens.addAll(text.getTokens());}sentences = tokenizer.toSentences(tokens);}public String loadURLString(java.net.URL url) {try {BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));StringBuffer buf = new StringBuffer();String s = """";while (br.ready() && s != null) {s = br.readLine();if (s != null) {buf.append(s);buf.append(""\n"");}}return buf.toString();} catch (IOException ex) {return """";} catch (NullPointerException npe) {return """";}}"	5
"public static String SHA1(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(text.getBytes(""iso-8859-1""), 0, text.length());sha1hash = md.digest();return convertToHex(sha1hash);}public String getRec(String attribute, String url) {String arr[] = new String[3];String[] subarr = new String[6];String mdPrefix = """";String mdPrefixValue = """";String iden = """";String idenValue = """";String s = """";String arguments = attribute.substring(attribute.indexOf(""?"") + 1);System.out.println(""attributes"" + arguments);java.util.StringTokenizer st = new java.util.StringTokenizer(arguments, ""&"");int i = 0;int j = 0;int count = 0;int argCount = 0;java.util.Vector v1 = new java.util.Vector(1, 1);java.util.Vector v901 = new java.util.Vector(1, 1);java.util.Vector v902 = new java.util.Vector(1, 1);java.util.Vector v903 = new java.util.Vector(1, 1);java.util.Vector v904 = new java.util.Vector(1, 1);java.util.Vector v905 = new java.util.Vector(1, 1);java.util.Vector v906 = new java.util.Vector(1, 1);java.util.Vector v907 = new java.util.Vector(1, 1);java.util.Vector v908 = new java.util.Vector(1, 1);java.util.Vector v3 = new java.util.Vector(1, 1);java.util.Vector vData = new java.util.Vector(1, 1);java.util.Vector vSet = new java.util.Vector(1, 1);java.util.Vector v856 = new java.util.Vector(1, 1);Resdate dt = new Resdate();try {while (st.hasMoreElements()) {arr[i] = st.nextElement().toString();java.util.StringTokenizer subSt = new java.util.StringTokenizer(arr[i], ""="");while (subSt.hasMoreElements()) {subarr[j] = subSt.nextElement().toString();System.out.println("" arga are... "" + subarr[j]);j++;}i++;count++;}} catch (Exception e) {e.printStackTrace();}Namespace oains = Namespace.getNamespace(""http://www.openarchives.org/OAI/2.0/"");Element root = new Element(""OAI-PMH"", oains);Namespace xsi = Namespace.getNamespace(""xsi"", ""http://www.w3.org/2001/XMLSchema-instance"");Attribute schemaLocation = new Attribute(""schemaLocation"", ""http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd"", xsi);root.setAttribute(schemaLocation);root.addNamespaceDeclaration(xsi);Document doc = new Document(root);Element responseDate = new Element(""responseDate"", oains);root.addContent(responseDate);responseDate.setText(dt.getDate());Element request = new Element(""request"", oains);request.setAttribute(""verb"", ""GetRecord"");int idenCount = 0, mdfCount = 0;for (int k = 2; k < j; k += 2) {System.out.println("" arg key "" + subarr[k]);if (subarr[k].equals(""metadataPrefix"")) {mdPrefix = ""metadataPrefix"";mdfCount++;mdPrefixValue = subarr[k + 1];request.setAttribute(mdPrefix, mdPrefixValue);System.out.println(subarr[k] + ""="");System.out.println(mdPrefixValue);argCount++;} else if (subarr[k].equals(""identifier"")) {iden = ""identifier"";idenCount++;idenValue = subarr[k + 1];request.setAttribute(iden, idenValue);System.out.println(subarr[k] + ""="");System.out.println(idenValue);argCount++;}}request.setText(url);root.addContent(request);System.out.println(""count"" + argCount);if (mdfCount == 1 && idenCount == 1 && (mdPrefixValue.equals(""marc21"") || mdPrefixValue.equals(""oai_dc"") || mdPrefixValue.equals(""mods""))) {try {v1 = ((ejb.bprocess.OAIPMH.ListGetRecordsHome) ejb.bprocess.util.HomeFactory.getInstance().getRemoteHome(""ListGetRecords"")).create().getRecord(idenValue, mdPrefixValue);} catch (Exception ex) {ex.printStackTrace();}if (v1.size() == 0) {System.out.println(""vector size is empty"");Errors e1 = new Errors();Element errorXML = e1.describeError(3, attribute, url, ""GetRecord"");root.addContent(errorXML);} else {Element GetRecord = new Element(""GetRecord"", oains);root.addContent(GetRecord);Element Record = new Element(""record"", oains);Element metadata = new Element(""metadata"", oains);Element head = new Element(""header"", oains);System.out.println(""size i  s "" + v1.size());for (int v = 0; v < v1.size(); v = v + 13) {vSet = (java.util.Vector) v1.elementAt(v + 1);Element ident = new Element(""identifier"", oains);ident.setText(idenValue);head.addContent(ident);Element dates = new Element(""datestamp"", oains);dates.setText(v1.elementAt(v).toString().substring(0, 10));head.addContent(dates);for (int t = 0; t < vSet.size(); t++) {Element setSpec = new Element(""setSpec"", oains);System.out.println(""set elem"" + vSet.elementAt(t).toString());setSpec.setText(vSet.elementAt(t).toString());head.addContent(setSpec);}Element marcroot = new Element(""record"", ""marc"", ""http://www.loc.gov/MARC21/slim"");Namespace xsimarc = Namespace.getNamespace(""xsi"", ""http://www.w3.org/2001/XMLSchema-instance"");marcroot.addNamespaceDeclaration(xsimarc);Attribute schemaLocationmarc = new Attribute(""schemaLocation"", ""http://www.loc.gov/MARC21/slim http://www.loc.gov/standards/marcxml/schema/MARC21slim.xsd"", xsimarc);marcroot.setAttribute(schemaLocationmarc);marcroot.setAttribute(""type"", ""Bibliographic"");v3 = (java.util.Vector) v1.elementAt(v + 10);java.util.Vector vL = (java.util.Vector) v3.elementAt(0);org.jdom.Element lead = new org.jdom.Element(""leader"", ""marc"", ""http://www.loc.gov/MARC21/slim"");lead.setText(vL.elementAt(0).toString());marcroot.addContent(lead);java.util.Vector vC = (java.util.Vector) v3.elementAt(1);for (int u = 0; u < vC.size(); u = u + 2) {org.jdom.Element ct = new org.jdom.Element(""controlfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");ct.setAttribute(""tag"", vC.elementAt(u).toString());ct.setText(vC.elementAt(u + 1).toString());marcroot.addContent(ct);}v901 = (java.util.Vector) v1.elementAt(v + 2);for (int k = 0; k < v901.size(); k++) {org.jdom.Element datafield = new org.jdom.Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield.setAttribute(""tag"", ""901"");datafield.setAttribute(""ind1"", ""0"");datafield.setAttribute(""ind2"", ""0"");java.util.Vector vecSub = new java.util.Vector(1, 1);vecSub = (java.util.Vector) v901.elementAt(k);System.out.println(""in getrec sub "");System.out.println(""sub 901 size"" + vecSub.size());for (int k1 = 0; k1 < vecSub.size(); k1 = k1 + 2) {org.jdom.Element subfield = new org.jdom.Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", vecSub.elementAt(k1).toString());subfield.setText(vecSub.elementAt(k1 + 1).toString());datafield.addContent(subfield);}marcroot.addContent(datafield);}v902 = (java.util.Vector) v1.elementAt(v + 3);for (int l = 0; l < v902.size(); l++) {Element datafield1 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield1.setAttribute(""tag"", ""902"");datafield1.setAttribute(""ind1"", ""0"");datafield1.setAttribute(""ind2"", ""0"");java.util.Vector vecSub1 = new java.util.Vector(1, 1);vecSub1 = (java.util.Vector) v902.elementAt(l);for (int b = 0; b < vecSub1.size(); b = b + 2) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", vecSub1.elementAt(b).toString());subfield.setText(vecSub1.elementAt(b + 1).toString());datafield1.addContent(subfield);}marcroot.addContent(datafield1);}v903 = (java.util.Vector) v1.elementAt(v + 4);Element datafield1 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield1.setAttribute(""tag"", ""903"");datafield1.setAttribute(""ind1"", ""0"");datafield1.setAttribute(""ind2"", ""0"");for (int l = 0; l < v903.size(); l++) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", ""a"");subfield.setText(v903.elementAt(l).toString());datafield1.addContent(subfield);}marcroot.addContent(datafield1);v904 = (java.util.Vector) v1.elementAt(v + 5);Element datafield21 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield21.setAttribute(""tag"", ""904"");datafield21.setAttribute(""ind1"", ""0"");datafield21.setAttribute(""ind2"", ""0"");for (int l = 0; l < v904.size(); l++) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", ""a"");subfield.setText(v904.elementAt(l).toString());datafield21.addContent(subfield);}marcroot.addContent(datafield21);v905 = (java.util.Vector) v1.elementAt(v + 6);Element datafield31 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield31.setAttribute(""tag"", ""905"");datafield31.setAttribute(""ind1"", ""0"");datafield31.setAttribute(""ind2"", ""0"");for (int l = 0; l < v905.size(); l++) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", ""a"");subfield.setText(v905.elementAt(l).toString());datafield31.addContent(subfield);}marcroot.addContent(datafield31);v906 = (java.util.Vector) v1.elementAt(v + 7);Element datafield4 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield4.setAttribute(""tag"", ""906"");datafield4.setAttribute(""ind1"", ""0"");datafield4.setAttribute(""ind2"", ""0"");for (int l = 0; l < v906.size(); l++) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", ""a"");subfield.setText(v906.elementAt(l).toString());datafield4.addContent(subfield);}marcroot.addContent(datafield4);v907 = (java.util.Vector) v1.elementAt(v + 8);for (int l = 0; l < v907.size(); l++) {Element datafield5 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield5.setAttribute(""tag"", ""907"");datafield5.setAttribute(""ind1"", ""0"");datafield5.setAttribute(""ind2"", ""0"");java.util.Vector vecSub1 = new java.util.Vector(1, 1);vecSub1 = (java.util.Vector) v907.elementAt(l);for (int b = 0; b < vecSub1.size(); b = b + 2) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", vecSub1.elementAt(b).toString());subfield.setText(vecSub1.elementAt(b + 1).toString());datafield5.addContent(subfield);}marcroot.addContent(datafield5);}v908 = (java.util.Vector) v1.elementAt(v + 9);for (int l = 0; l < v908.size(); l++) {Element datafield6 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield6.setAttribute(""tag"", ""908"");datafield6.setAttribute(""ind1"", ""0"");datafield6.setAttribute(""ind2"", ""0"");java.util.Vector vecSub1 = new java.util.Vector(1, 1);vecSub1 = (java.util.Vector) v908.elementAt(l);for (int b = 0; b < vecSub1.size(); b = b + 2) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", vecSub1.elementAt(b).toString());subfield.setText(vecSub1.elementAt(b + 1).toString());datafield6.addContent(subfield);}marcroot.addContent(datafield6);}vData = (java.util.Vector) v1.elementAt(v + 11);for (int m = 0; m < vData.size(); m = m + 2) {Element datafield2 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield2.setAttribute(""tag"", vData.elementAt(m).toString());datafield2.setAttribute(""ind1"", ""0"");datafield2.setAttribute(""ind2"", ""0"");java.util.Vector vSub = new java.util.Vector(1, 1);vSub = (java.util.Vector) vData.elementAt(m + 1);for (int n = 0; n < vSub.size(); n = n + 2) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", vSub.elementAt(n).toString());subfield.setText(vSub.elementAt(n + 1).toString());datafield2.addContent(subfield);}marcroot.addContent(datafield2);}v856 = (java.util.Vector) v1.elementAt(v + 12);for (int l = 0; l < v856.size(); l = l + 2) {Element datafield3 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield3.setAttribute(""tag"", ""856"");datafield3.setAttribute(""ind1"", ""0"");datafield3.setAttribute(""ind2"", ""0"");Element subfield1 = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield1.setAttribute(""code"", v856.elementAt(l).toString());subfield1.setText(v856.elementAt(l + 1).toString());datafield3.addContent(subfield1);marcroot.addContent(datafield3);}if (mdPrefixValue.equals(""oai_dc"")) {try {Transformer transformer = TransformerFactory.newInstance().newTransformer(new StreamSource(ejb.bprocess.util.NewGenLibRoot.getRoot() + java.io.File.separator + ""StyleSheets"" + java.io.File.separator + ""MARC21slim2OAIDC.xsl""));Document docmarc = new Document(marcroot);JDOMSource in = new JDOMSource(docmarc);JDOMResult out = new JDOMResult();transformer.transform(in, out);Document doc2 = out.getDocument();org.jdom.output.XMLOutputter out1 = new org.jdom.output.XMLOutputter();out1.setTextTrim(true);out1.setIndent(""  "");out1.setNewlines(true);String s1 = out1.outputString(doc2);System.out.println(""dublin core is"" + s1);Element dcroot1 = doc2.getRootElement();Namespace xsi1 = Namespace.getNamespace(""xsi"", ""http://www.w3.org/2001/XMLSchema-instance"");Namespace oainsdc = Namespace.getNamespace(""http://www.openarchives.org/OAI/2.0/oai_dc/"");Element dcroot = new Element(""dc"", ""oai_dc"", ""http://www.openarchives.org/OAI/2.0/oai_dc/"");Namespace dcns = Namespace.getNamespace(""dc"", ""http://purl.org/dc/elements/1.1/"");dcroot.addNamespaceDeclaration(dcns);dcroot.addNamespaceDeclaration(xsi1);Attribute schemaLocationdc = new Attribute(""schemaLocation"", ""http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"", xsi1);dcroot.setAttribute(schemaLocationdc);java.util.List dcList = doc2.getRootElement().getChildren();for (int g = 0; g < dcList.size(); g++) {Element dcElem1 = (org.jdom.Element) dcList.get(g);Element dcElem = new Element(dcElem1.getName(), ""dc"", ""http://purl.org/dc/elements/1.1/"");dcElem.setText(dcElem1.getText());dcroot.addContent(dcElem);}metadata.addContent(dcroot);} catch (TransformerException e) {e.printStackTrace();}} else if (mdPrefixValue.equals(""mods"")) {try {java.util.Properties systemSettings = System.getProperties();java.util.prefs.Preferences prefs = java.util.prefs.Preferences.systemRoot();if (prefs.getBoolean(""useproxy"", false)) {systemSettings.put(""proxySet"", ""true"");systemSettings.put(""proxyHost"", prefs.get(""proxyservername"", """"));systemSettings.put(""proxyPort"", prefs.get(""proxyport"", """"));systemSettings.put(""http.proxyHost"", prefs.get(""proxyservername"", """"));systemSettings.put(""http.proxyPort"", prefs.get(""proxyport"", """"));}String urltext = """";Transformer transformer = null;urltext = ""http://www.loc.gov/standards/mods/v3/MARC21slim2MODS3.xsl"";java.net.URL url1 = new java.net.URL(urltext);java.net.URLConnection urlconn = url1.openConnection();urlconn.setDoInput(true);transformer = TransformerFactory.newInstance().newTransformer(new StreamSource(urlconn.getInputStream()));Document docmarc = new Document(marcroot);JDOMSource in = new JDOMSource(docmarc);JDOMResult out = new JDOMResult();transformer.transform(in, out);Document doc2 = out.getDocument();org.jdom.output.XMLOutputter out1 = new org.jdom.output.XMLOutputter();out1.setTextTrim(true);out1.setIndent(""  "");out1.setNewlines(true);String s1 = out1.outputString(doc2);Namespace xsi1 = Namespace.getNamespace(""xlink"", ""http://www.w3.org/1999/xlink"");Namespace oainsdc = Namespace.getNamespace(""http://www.openarchives.org/OAI/2.0/oai_dc/"");Element mroot = new Element(""mods"", ""http://www.loc.gov/mods/v3"");Namespace dcns = Namespace.getNamespace(""http://www.loc.gov/mods/v3"");mroot.addNamespaceDeclaration(xsi1);Attribute schemaLocationdc = new Attribute(""schemaLocation"", ""http://www.loc.gov/mods/v3 http://www.loc.gov/standards/mods/v3/mods-3-0.xsd"", xsi1);mroot.setAttribute(schemaLocationdc);java.util.List dcList = doc2.getRootElement().getChildren();for (int g = 0; g < dcList.size(); g++) {Element mElem1 = (org.jdom.Element) dcList.get(g);Element mElem = new Element(mElem1.getName(), ""http://www.loc.gov/mods/v3"");if (mElem1.hasChildren()) {java.util.List mList1 = mElem1.getChildren();for (int f = 0; f < mList1.size(); f++) {Element mElem2 = (org.jdom.Element) mList1.get(f);Element mElem3 = new Element(mElem2.getName(), ""http://www.loc.gov/mods/v3"");if (mElem2.hasChildren()) {java.util.List mList2 = mElem2.getChildren();for (int h = 0; h < mList2.size(); h++) {Element mElem4 = (org.jdom.Element) mList1.get(h);Element mElem5 = new Element(mElem4.getName(), ""http://www.loc.gov/mods/v3"");mElem5.setText(mElem4.getText());mElem3.addContent(mElem5);}}if (mElem2.hasChildren() == false) {mElem3.setText(mElem2.getText());}mElem.addContent(mElem3);}}if (mElem1.hasChildren() == false) {mElem.setText(mElem1.getText());}mroot.addContent(mElem);}metadata.addContent(mroot);} catch (Exception e) {e.printStackTrace();}}if (mdPrefixValue.equals(""marc21"")) {metadata.addContent(marcroot);} else if (mdPrefixValue.equals(""oai_dc"")) {}}Record.addContent(head);Record.addContent(metadata);GetRecord.addContent(Record);}} else if (argCount <= 2) {if (idenCount < 1 && mdfCount < 1) {Errors e1 = new Errors();Element errorXML = e1.describeError(2, ""missing arguments: identifier,metadataprefix"", url, ""GetRecord"");root.addContent(errorXML);} else if (idenCount < 1) {Errors e1 = new Errors();Element errorXML = e1.describeError(2, ""missing argument: identifier"", url, ""GetRecord"");root.addContent(errorXML);} else if (mdfCount < 1) {Errors e1 = new Errors();Element errorXML = e1.describeError(2, ""missing argument: metadataprefix"", url, ""GetRecord"");root.addContent(errorXML);} else if (argCount > 2) {Errors e1 = new Errors();Element errorXML = e1.describeError(2, ""more number of arguments"", url, ""GetRecord"");root.addContent(errorXML);} else {System.out.println(""no format"");Errors e1 = new Errors();Element errorXML = e1.describeError(6, """", url, ""GetRecord"");root.addContent(errorXML);}}XMLOutputter out = new XMLOutputter();out.setIndent("" "");out.setNewlines(true);s = out.outputString(doc);return s;}protected void configure() {Enumeration<URL> resources = null;try {resources = classLoader.getResources(resourceName);} catch (IOException e) {binder().addError(e.getMessage(), e);return;}int resourceCount = 0;while (resources.hasMoreElements()) {URL url = resources.nextElement();log.debug(url + "" ..."");try {InputStream stream = url.openStream();Properties props = new Properties();props.load(stream);resourceCount++;addComponentsFromProperties(props, classLoader);} catch (IOException e) {binder().addError(e.getMessage(), e);}}log.info(""Added components from "" + resourceCount + "" resources."");}public String upload() {System.out.println(imgFile);String destDir = ""E:\\ganymede_workspace\\training01\\web\\user_imgs\\map_bg.jpg"";FileOutputStream fos;try {fos = new FileOutputStream(new File(destDir));IOUtils.copy(new FileInputStream(imgFile), fos);IOUtils.closeQuietly(fos);} catch (FileNotFoundException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return ""show"";}private static void copy(File in, File out) throws IOException {if (!out.getParentFile().isDirectory()) out.getParentFile().mkdirs();FileChannel ic = new FileInputStream(in).getChannel();FileChannel oc = new FileOutputStream(out).getChannel();ic.transferTo(0, ic.size(), oc);ic.close();oc.close();}public static String readFromUrl(String url) {URL url_ = null;URLConnection uc = null;BufferedReader in = null;StringBuilder str = new StringBuilder();try {url_ = new URL(url);uc = url_.openConnection();in = new BufferedReader(new InputStreamReader(uc.getInputStream()));String inputLine;while ((inputLine = in.readLine()) != null) str.append(inputLine);in.close();} catch (IOException e) {e.printStackTrace();}return str.toString();}private boolean handlePart(Part p) throws MessagingException, GetterException {String filename = p.getFileName();if (!p.isMimeType(""multipart/*"")) {String disp = p.getDisposition();if (disp == null || disp.equalsIgnoreCase(Part.ATTACHMENT)) {if (checkCriteria(p)) {if (filename == null) filename = ""Attachment"" + attnum++;if (result == null) {try {File f = File.createTempFile(""amorph_pop3-"", "".tmp"");f.deleteOnExit();OutputStream os = new BufferedOutputStream(new FileOutputStream(f));InputStream is = p.getInputStream();int c;while ((c = is.read()) != -1) os.write(c);os.close();result = new FileInputStream(f);System.out.println(""saved attachment to file: "" + f.getAbsolutePath());return true;} catch (IOException ex) {throw new GetterException(ex, ""Failed to save attachment: "" + ex);}}}}}return false;}public final Matrix3D<E> read(final URL url) throws IOException {if (url == null) {throw new IllegalArgumentException(""url must not be null"");}InputStream inputStream = null;try {inputStream = url.openStream();return read(inputStream);} catch (IOException e) {throw e;} finally {MatrixIOUtils.closeQuietly(inputStream);}}@Overridepublic void sendData(String serverUrl, String fileName, String type, InputStream is) throws IOException {ClientSession clientSession = null;try {if (logger.isDebugEnabled()) {logger.debug(""Connecting to "" + serverUrl);}clientSession = (ClientSession) Connector.open(serverUrl);HeaderSet hsConnectReply = clientSession.connect(clientSession.createHeaderSet());if (hsConnectReply.getResponseCode() != ResponseCodes.OBEX_HTTP_OK) {throw new IOException(""Connect Error "" + hsConnectReply.getResponseCode());}HeaderSet hsOperation = clientSession.createHeaderSet();hsOperation.setHeader(HeaderSet.NAME, fileName);if (type != null) {hsOperation.setHeader(HeaderSet.TYPE, type);}hsOperation.setHeader(HeaderSet.LENGTH, new Long(is.available()));Operation po = clientSession.put(hsOperation);OutputStream os = po.openOutputStream();IOUtils.copy(is, os);os.flush();os.close();if (logger.isDebugEnabled()) {logger.debug(""put responseCode "" + po.getResponseCode());}po.close();HeaderSet hsDisconnect = clientSession.disconnect(null);if (logger.isDebugEnabled()) {logger.debug(""disconnect responseCode "" + hsDisconnect.getResponseCode());}if (hsDisconnect.getResponseCode() != ResponseCodes.OBEX_HTTP_OK) {throw new IOException(""Send Error "" + hsConnectReply.getResponseCode());}} finally {if (clientSession != null) {try {clientSession.close();} catch (IOException ignore) {if (logger.isDebugEnabled()) {logger.debug(""IOException during clientSession.close()"", ignore);}}}clientSession = null;}}public static String md5(String input) throws NoSuchAlgorithmException, UnsupportedEncodingException {StringBuffer result = new StringBuffer();MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(input.getBytes(""utf-8""));byte[] digest = md.digest();for (byte b : digest) {result.append(String.format(""%02X "", b & 0xff));}return result.toString();}"	5
"public boolean backup() {try {File sd = Environment.getExternalStorageDirectory();File data = Environment.getDataDirectory();if (sd.canWrite()) {String currentDBPath = ""/data/android.bluebox/databases/bluebox.db"";String backupDBPath = ""/Android/bluebox.bak"";File currentDB = new File(data, currentDBPath);File backupDB = new File(sd, backupDBPath);if (currentDB.exists()) {FileChannel src = new FileInputStream(currentDB).getChannel();FileChannel dst = new FileOutputStream(backupDB).getChannel();dst.transferFrom(src, 0, src.size());src.close();dst.close();return true;}}} catch (FileNotFoundException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return false;}public boolean restore() {try {File sd = Environment.getExternalStorageDirectory();File data = Environment.getDataDirectory();if (sd.canWrite()) {String currentDBPath = ""/Android/bluebox.bak"";String backupDBPath = ""/data/android.bluebox/databases/bluebox.db"";File currentDB = new File(sd, currentDBPath);File backupDB = new File(data, backupDBPath);if (currentDB.exists()) {FileChannel src = new FileInputStream(currentDB).getChannel();FileChannel dst = new FileOutputStream(backupDB).getChannel();dst.transferFrom(src, 0, src.size());src.close();dst.close();return true;}}} catch (FileNotFoundException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return false;}@Overridepublic void run() {try {FTPClient ftp = new FTPClient();try {ftp.connect(""localhost"", 21);ftp.login(""ftpuser"", ""ftpuser123"");System.out.println(""Current: "" + ftp.printWorkingDirectory());System.out.println(""Dir status: "" + ftp.makeDirectory(DIR));ftp.changeWorkingDirectory(DIR);System.out.println(""File status: "" + ftp.storeFile(FILE_PREFIX + this.getName(), getByteInputStream()));} finally {ftp.disconnect();}} catch (Exception e) {throw new RuntimeException(e);}}public static void copyFile(File source, File dest) throws Exception {FileInputStream fis = new FileInputStream(source);try {FileOutputStream fos = new FileOutputStream(dest);try {int read = fis.read();while (read != -1) {fos.write(read);read = fis.read();}} finally {fos.close();}} finally {fis.close();}}public void init() {String filename = getParameter(""filename"");if (filename == null) {Error(""Illegal filename"");return;}Dimension dim = DEFAULT_SIZE;try {int w = Integer.parseInt(getParameter(""width""));int h = Integer.parseInt(getParameter(""height""));dim = new Dimension(w, h);} catch (Exception e) {}InputStream in;try {File ff = new File(filename);in = new FileInputStream(ff);} catch (Exception ignore) {try {URL url = new URL(filename);in = url.openStream();} catch (Exception e) {Error(""Graph viewer: Failed to open: "" + filename + ""\n"" + e);return;}}getContentPane().add(getWindow(in));resize(dim);repaint();}public void parseFile(String filespec, URL documentBase) {DataInputStream in = null;if (filespec == null || filespec.length() == 0) {in = new DataInputStream(System.in);} else {try {URL url = null;if (documentBase == null && _documentBase != null) {documentBase = _documentBase;}if (documentBase == null) {url = new URL(filespec);} else {try {url = new URL(documentBase, filespec);} catch (NullPointerException e) {url = new URL(filespec);}}in = new DataInputStream(url.openStream());} catch (MalformedURLException e) {try {in = new DataInputStream(new FileInputStream(filespec));} catch (FileNotFoundException me) {_errorMsg = new String[2];_errorMsg[0] = ""File not found: "" + filespec;_errorMsg[1] = me.getMessage();return;} catch (SecurityException me) {_errorMsg = new String[2];_errorMsg[0] = ""Security Exception: "" + filespec;_errorMsg[1] = me.getMessage();return;}} catch (IOException ioe) {_errorMsg = new String[3];_errorMsg[0] = ""Failure opening URL: "";_errorMsg[1] = "" "" + filespec;_errorMsg[2] = ioe.getMessage();return;}}try {BufferedReader din = new BufferedReader(new InputStreamReader(in));String line = din.readLine();while (line != null) {_parseLine(line);line = din.readLine();}} catch (MalformedURLException e) {_errorMsg = new String[2];_errorMsg[0] = ""Malformed URL: "" + filespec;_errorMsg[1] = e.getMessage();return;} catch (IOException e) {_errorMsg = new String[2];_errorMsg[0] = ""Failure reading data: "" + filespec;_errorMsg[1] = e.getMessage();_errorMsg[1] = e.getMessage();} finally {try {in.close();} catch (IOException me) {}}}public boolean parseResults(URL url, String analysis_type, CurationI curation, Date analysis_date, String regexp) throws OutputMalFormatException {boolean parsed = false;try {InputStream data_stream = url.openStream();parsed = parseResults(data_stream, analysis_type, curation, analysis_date, regexp);} catch (OutputMalFormatException ex) {throw new OutputMalFormatException(ex.getMessage(), ex);} catch (Exception ex) {System.out.println(ex.getMessage());}return parsed;}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0L;if (secure) rand = mySecureRand.nextLong(); else rand = myRand.nextLong();sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte array[] = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; j++) {int b = array[j] & 0xff;if (b < 16) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}private void loadServers() {try {URL url = new URL(VirtualDeckConfig.SERVERS_URL);cmbServer.addItem(""Local"");BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String str;if (in.readLine().equals(""[list]"")) {while ((str = in.readLine()) != null) {String[] host_line = str.split("";"");Host h = new Host();h.setIp(host_line[0]);h.setPort(Integer.parseInt(host_line[1]));h.setName(host_line[2]);getServers().add(h);cmbServer.addItem(h.getName());}}in.close();} catch (MalformedURLException e) {} catch (IOException e) {}}public static String encodePassword(String _originalPassword) {MessageDigest md = null;String encodedPassword = null;try {md = MessageDigest.getInstance(""SHA-1"");md.update(_originalPassword.getBytes(""UTF-8""));encodedPassword = (new BASE64Encoder()).encode(md.digest());} catch (NoSuchAlgorithmException _e) {_e.printStackTrace();} catch (UnsupportedEncodingException _e) {_e.printStackTrace();}return encodedPassword;}"	5
"public static void writeToFile(InputStream input, File file, ProgressListener listener, long length) {OutputStream output = null;try {output = new CountingOutputStream(new FileOutputStream(file), listener, length);IOUtils.copy(input, output);} catch (IOException e) {throw new RuntimeException(e);} finally {IOUtils.closeQuietly(input);IOUtils.closeQuietly(output);}}private IProject createCopyProject(IProject project, IWorkspace ws, IProgressMonitor pm) throws CoreException {pm.beginTask(""Creating temp project"", 1);final String pName = ""translation_"" + project.getName() + ""_"" + new Date().toString().replace("" "", ""_"").replace("":"", ""_"");final IProgressMonitor npm = new NullProgressMonitor();final IPath destination = new Path(pName);project.copy(destination, false, npm);final IJavaProject oldJavaproj = JavaCore.create(project);final IClasspathEntry[] classPath = oldJavaproj.getRawClasspath();final IProject newProject = ResourcesPlugin.getWorkspace().getRoot().getProject(""NewProjectName"");final IProjectDescription desc = project.getDescription();desc.setNatureIds(new String[] { JavaCore.NATURE_ID });project.setDescription(desc, null);final IJavaProject javaproj = JavaCore.create(newProject);javaproj.setOutputLocation(project.getFullPath(), null);final List<IClasspathEntry> newClassPath = new ArrayList<IClasspathEntry>();for (final IClasspathEntry cEntry : newClassPath) {switch(cEntry.getContentKind()) {case IClasspathEntry.CPE_SOURCE:System.out.println(""Source folder "" + cEntry.getPath());break;default:newClassPath.add(cEntry);}}javaproj.setRawClasspath(classPath, pm);final IProject newP = ws.getRoot().getProject(pName);return newP;}public static void copyFile(File source, File dest) throws IOException {log.debug(""Copy from {} to {}"", source.getAbsoluteFile(), dest.getAbsoluteFile());FileInputStream fi = new FileInputStream(source);FileChannel fic = fi.getChannel();MappedByteBuffer mbuf = fic.map(FileChannel.MapMode.READ_ONLY, 0, source.length());fic.close();fi.close();fi = null;if (!dest.exists()) {String destPath = dest.getPath();log.debug(""Destination path: {}"", destPath);String destDir = destPath.substring(0, destPath.lastIndexOf(File.separatorChar));log.debug(""Destination dir: {}"", destDir);File dir = new File(destDir);if (!dir.exists()) {if (dir.mkdirs()) {log.debug(""Directory created"");} else {log.warn(""Directory not created"");}}dir = null;}FileOutputStream fo = new FileOutputStream(dest);FileChannel foc = fo.getChannel();foc.write(mbuf);foc.close();fo.close();fo = null;mbuf.clear();mbuf = null;}private static FrameworkFactory getFrameworkFactory() throws Exception {URL url = Main.class.getClassLoader().getResource(""META-INF/services/org.osgi.framework.launch.FrameworkFactory"");if (url != null) {BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));try {for (String s = br.readLine(); s != null; s = br.readLine()) {s = s.trim();if ((s.length() > 0) && (s.charAt(0) != '#')) {return (FrameworkFactory) Class.forName(s).newInstance();}}} finally {if (br != null) br.close();}}throw new Exception(""Could not find framework factory."");}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static String encryptPass(String pass) {String passEncrypt;MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException ex) {}md5.update(pass.getBytes());BigInteger dis = new BigInteger(1, md5.digest());passEncrypt = dis.toString(16);return passEncrypt;}public static String encryptPass2(String pass) throws UnsupportedEncodingException {String passEncrypt;MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException ex) {}md5.update(pass.getBytes());String dis = new String(md5.digest(), 10);passEncrypt = dis.toString();return passEncrypt;}void sortclasses() {int i, j;boolean domore;vclassptr = new int[numc];for (i = 0; i < numc; i++) vclassptr[i] = i;domore = true;while (domore == true) {domore = false;for (i = 0; i < numc - 1; i++) {if (vclassctr[vclassptr[i]] < vclassctr[vclassptr[i + 1]]) {int temp = vclassptr[i];vclassptr[i] = vclassptr[i + 1];vclassptr[i + 1] = temp;domore = true;}}}}public static void main(String[] args) {try {Object o = Naming.lookup(""Server"");IServer serverStub = (IServer) o;File srcDir = new File(args[0]);File dstDir = new File(args[1]);File[] srcFiles = srcDir.listFiles();long position = 0;for (File f : srcFiles) {if (f.isDirectory()) continue;try {FileChannel srcChannel = new FileInputStream(f).getChannel();String fileName = dstDir.getAbsolutePath() + System.getProperty(""file.separator"") + f.getName();FileChannel dstChannel = new FileOutputStream(fileName).getChannel();System.out.println(""Coping "" + fileName);ByteBuffer buffer = ByteBuffer.allocate(65536);int nr = 0;srcChannel.position(nr);nr = srcChannel.read(buffer);while (nr > -1) {buffer.flip();byte[] bytes = new byte[buffer.limit()];buffer.get(bytes);position = serverStub.write(bytes, position);buffer.clear();nr = srcChannel.read(buffer);}System.out.println(""Done "");srcChannel.close();dstChannel.close();} catch (IOException e) {}}} catch (MalformedURLException e) {e.printStackTrace();} catch (RemoteException e) {e.printStackTrace();} catch (NotBoundException e) {e.printStackTrace();}}"	5
"public ICCColorSpaceExt createICCColorSpaceExt(BridgeContext ctx, Element paintedElement, String iccProfileName) {ICCColorSpaceExt cs = cache.request(iccProfileName.toLowerCase());if (cs != null) {return cs;}Document doc = paintedElement.getOwnerDocument();NodeList list = doc.getElementsByTagNameNS(SVG_NAMESPACE_URI, SVG_COLOR_PROFILE_TAG);int n = list.getLength();Element profile = null;for (int i = 0; i < n; i++) {Node node = list.item(i);if (node.getNodeType() == Node.ELEMENT_NODE) {Element profileNode = (Element) node;String nameAttr = profileNode.getAttributeNS(null, SVG_NAME_ATTRIBUTE);if (iccProfileName.equalsIgnoreCase(nameAttr)) {profile = profileNode;}}}if (profile == null) return null;String href = XLinkSupport.getXLinkHref(profile);ICC_Profile p = null;if (href != null) {String baseURI = ((SVGOMDocument) doc).getURL();ParsedURL purl = new ParsedURL(baseURI, href);if (!purl.complete()) throw new BridgeException(paintedElement, ERR_URI_MALFORMED, new Object[] { href });try {ParsedURL pDocURL = null;if (baseURI != null) {pDocURL = new ParsedURL(baseURI);}ctx.getUserAgent().checkLoadExternalResource(purl, pDocURL);p = ICC_Profile.getInstance(purl.openStream());} catch (IOException e) {throw new BridgeException(paintedElement, ERR_URI_IO, new Object[] { href });} catch (SecurityException e) {throw new BridgeException(paintedElement, ERR_URI_UNSECURE, new Object[] { href });}}if (p == null) {return null;}int intent = convertIntent(profile);cs = new ICCColorSpaceExt(p, intent);cache.put(iccProfileName.toLowerCase(), cs);return cs;}public static void main(String args[]) {String midletClass = null;;File appletInputFile = null;File deviceInputFile = null;File midletInputFile = null;File htmlOutputFile = null;File appletOutputFile = null;File deviceOutputFile = null;File midletOutputFile = null;List params = new ArrayList();for (int i = 0; i < args.length; i++) {params.add(args[i]);}Iterator argsIterator = params.iterator();while (argsIterator.hasNext()) {String arg = (String) argsIterator.next();argsIterator.remove();if ((arg.equals(""--help"")) || (arg.equals(""-help""))) {System.out.println(usage());System.exit(0);} else if (arg.equals(""--midletClass"")) {midletClass = (String) argsIterator.next();argsIterator.remove();} else if (arg.equals(""--appletInput"")) {appletInputFile = new File((String) argsIterator.next());argsIterator.remove();} else if (arg.equals(""--deviceInput"")) {deviceInputFile = new File((String) argsIterator.next());argsIterator.remove();} else if (arg.equals(""--midletInput"")) {midletInputFile = new File((String) argsIterator.next());argsIterator.remove();} else if (arg.equals(""--htmlOutput"")) {htmlOutputFile = new File((String) argsIterator.next());argsIterator.remove();} else if (arg.equals(""--appletOutput"")) {appletOutputFile = new File((String) argsIterator.next());argsIterator.remove();} else if (arg.equals(""--deviceOutput"")) {deviceOutputFile = new File((String) argsIterator.next());argsIterator.remove();} else if (arg.equals(""--midletOutput"")) {midletOutputFile = new File((String) argsIterator.next());argsIterator.remove();}}if (midletClass == null || appletInputFile == null || deviceInputFile == null || midletInputFile == null || htmlOutputFile == null || appletOutputFile == null || deviceOutputFile == null || midletOutputFile == null) {System.out.println(usage());System.exit(0);}try {DeviceImpl device = null;String descriptorLocation = null;JarFile jar = new JarFile(deviceInputFile);for (Enumeration en = jar.entries(); en.hasMoreElements(); ) {String entry = ((JarEntry) en.nextElement()).getName();if ((entry.toLowerCase().endsWith("".xml"") || entry.toLowerCase().endsWith(""device.txt"")) && !entry.toLowerCase().startsWith(""meta-inf"")) {descriptorLocation = entry;break;}}if (descriptorLocation != null) {EmulatorContext context = new EmulatorContext() {private DisplayComponent displayComponent = new NoUiDisplayComponent();private InputMethod inputMethod = new J2SEInputMethod();private DeviceDisplay deviceDisplay = new J2SEDeviceDisplay(this);private FontManager fontManager = new J2SEFontManager();private DeviceComponent deviceComponent = new SwingDeviceComponent(true);public DisplayComponent getDisplayComponent() {return displayComponent;}public InputMethod getDeviceInputMethod() {return inputMethod;}public DeviceDisplay getDeviceDisplay() {return deviceDisplay;}public FontManager getDeviceFontManager() {return fontManager;}public InputStream getResourceAsStream(String name) {return MIDletBridge.getCurrentMIDlet().getClass().getResourceAsStream(name);}public DeviceComponent getDeviceComponent() {return deviceComponent;}};URL[] urls = new URL[1];urls[0] = deviceInputFile.toURI().toURL();ClassLoader classLoader = new ExtensionsClassLoader(urls, urls.getClass().getClassLoader());device = DeviceImpl.create(context, classLoader, descriptorLocation, J2SEDevice.class);}if (device == null) {System.out.println(""Error parsing device package: "" + descriptorLocation);System.exit(0);}createHtml(htmlOutputFile, device, midletClass, midletOutputFile, appletOutputFile, deviceOutputFile);createMidlet(midletInputFile.toURI().toURL(), midletOutputFile);IOUtils.copyFile(appletInputFile, appletOutputFile);IOUtils.copyFile(deviceInputFile, deviceOutputFile);} catch (IOException ex) {ex.printStackTrace();}System.exit(0);}public void convert(File src, File dest) throws IOException {InputStream in = new BufferedInputStream(new FileInputStream(src));DcmParser p = pfact.newDcmParser(in);Dataset ds = fact.newDataset();p.setDcmHandler(ds.getDcmHandler());try {FileFormat format = p.detectFileFormat();if (format != FileFormat.ACRNEMA_STREAM) {System.out.println(""\n"" + src + "": not an ACRNEMA stream!"");return;}p.parseDcmFile(format, Tags.PixelData);if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {System.out.println(""\n"" + src + "": contains UIDs!"" + "" => probable already DICOM - do not convert"");return;}boolean hasPixelData = p.getReadTag() == Tags.PixelData;boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;int pxlen = p.getReadLength();if (hasPixelData) {if (inflate) {ds.putUS(Tags.BitsAllocated, 16);pxlen = pxlen * 4 / 3;}if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {System.out.println(""\n"" + src + "": mismatch pixel data length!"" + "" => do not convert"");return;}}ds.putUI(Tags.StudyInstanceUID, uid(studyUID));ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));ds.putUI(Tags.SOPInstanceUID, uid(instUID));ds.putUI(Tags.SOPClassUID, classUID);if (!ds.contains(Tags.NumberOfSamples)) {ds.putUS(Tags.NumberOfSamples, 1);}if (!ds.contains(Tags.PhotometricInterpretation)) {ds.putCS(Tags.PhotometricInterpretation, ""MONOCHROME2"");}if (fmi) {ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));}OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));try {} finally {ds.writeFile(out, encodeParam());if (hasPixelData) {if (!skipGroupLen) {out.write(PXDATA_GROUPLEN);int grlen = pxlen + 8;out.write((byte) grlen);out.write((byte) (grlen >> 8));out.write((byte) (grlen >> 16));out.write((byte) (grlen >> 24));}out.write(PXDATA_TAG);out.write((byte) pxlen);out.write((byte) (pxlen >> 8));out.write((byte) (pxlen >> 16));out.write((byte) (pxlen >> 24));}if (inflate) {int b2, b3;for (; pxlen > 0; pxlen -= 3) {out.write(in.read());b2 = in.read();b3 = in.read();out.write(b2 & 0x0f);out.write(b2 >> 4 | ((b3 & 0x0f) << 4));out.write(b3 >> 4);}} else {for (; pxlen > 0; --pxlen) {out.write(in.read());}}out.close();}System.out.print('.');} finally {in.close();}}private Properties loadPropertiesFromURL(String propertiesURL, Properties defaultProperties) {Properties properties = new Properties(defaultProperties);URL url;try {url = new URL(propertiesURL);URLConnection urlConnection = url.openConnection();properties.load(urlConnection.getInputStream());} catch (MalformedURLException e) {System.out.println(""Error while loading url "" + propertiesURL + "" ("" + e.getClass().getName() + "")"");e.printStackTrace();} catch (IOException e) {System.out.println(""Error while loading url "" + propertiesURL + "" ("" + e.getClass().getName() + "")"");e.printStackTrace();}return properties;}public void run() {XmlFilesFilter filter = new XmlFilesFilter();String pathTemp = Settings.get(""vo_store.databaseMetaCollection"");String sectionName = pathTemp.substring(1, pathTemp.indexOf(""/"", 2));String templateName = VOAccess.getElementByName(settingsDB, ""TEMPLATE"", sectionName);String schemaName = VOAccess.getElementByName(settingsDB, ""SCHEMA"", sectionName);byte[] buf = new byte[1024];Hashtable templateElements = null;try {URL xmlTemplateUrl = new URL(httpURI + settingsDB + ""/"" + templateName);URL getDocPathsAndValuesXslUrl = new URL(httpURI + settingsDB + ""/"" + ""getDocPathsValuesAndDisplays.xsl"");org.w3c.dom.Document curTemplateXml = VOAccess.readDocument(xmlTemplateUrl);DOMResult templateResult = new DOMResult();InputStream tempInput = getDocPathsAndValuesXslUrl.openStream();javax.xml.transform.sax.SAXSource tempXslSource = new javax.xml.transform.sax.SAXSource(new org.xml.sax.InputSource(tempInput));Transformer trans = TransformerFactory.newInstance().newTransformer(tempXslSource);trans.setParameter(""schemaUrl"", httpURI + settingsDB + ""/"" + schemaName);trans.transform(new javax.xml.transform.dom.DOMSource(curTemplateXml), templateResult);tempInput.close();templateElements = VOAccess.displaysToHashtable(templateResult);((CollectionManagementService) CollectionsManager.getService(xmldbURI + rootDB, false, ""CollectionManager"")).createCollection(rootDB + pathTemp);} catch (Exception ex) {logger.error(""Error parsing input document"", ex);ex.printStackTrace();}while (true) {File[] fileList = sourceMetaFilesDir.listFiles(filter);for (int i = 0; i < Math.min(fileList.length, 500); i++) {File newFile = fileList[i];try {Document metaDoc = build.build(newFile);Element metaElm = metaDoc.getRootElement();String dataFileName = metaElm.getChildText(""Content""), previewFileName = metaElm.getChildText(""Preview"");String objId = VOAccess.getUniqueId();metaElm.getChild(""Content"").setText(""videostore?type=doc&objId="" + objId);metaElm.getChild(""Preview"").setText(""videostore?type=preview&objId="" + objId);boolean found = false;for (Iterator it = sourceDataFilesDirs.iterator(); it.hasNext() && !found; ) {String sourceDataFilesDir = (String) it.next();File dataInput = new File(sourceDataFilesDir + ""/"" + dataFileName);if (dataInput.exists()) {found = true;BufferedInputStream inp = new BufferedInputStream(new FileInputStream(dataInput));FileOutputStream outp = new FileOutputStream(new File(targetDataFilesDirs.get(curDirWriteTo) + ""/"" + objId + "".dat""));int read = inp.read(buf, 0, buf.length);while (read > 0) {outp.write(buf, 0, read);read = inp.read(buf, 0, buf.length);}inp.close();outp.flush();outp.close();dataInput = new File(sourceDataFilesDir + ""/"" + previewFileName);inp = new BufferedInputStream(new FileInputStream(dataInput));outp = new FileOutputStream(new File(targetDataFilesDirs.get(curDirWriteTo) + ""/"" + objId + "".jpg""));read = inp.read(buf, 0, buf.length);while (read > 0) {outp.write(buf, 0, read);read = inp.read(buf, 0, buf.length);}inp.close();outp.flush();outp.close();curDirWriteTo++;if (curDirWriteTo >= targetDataFilesDirs.size()) {curDirWriteTo = 0;}}}if (!found) {newFile.renameTo(new File(newFile.getAbsolutePath() + "".not_found""));} else {String title = getValueByPath((String) templateElements.get(""title""), metaDoc.getRootElement());String description = getValueByPath((String) templateElements.get(""description""), metaDoc.getRootElement());String onlink = """";if (null != templateElements.get(""onlink"")) {onlink = getValueByPath((String) templateElements.get(""onlink""), metaDoc.getRootElement());}String ncover = """";if (null != templateElements.get(""ncover"")) {ncover = getValueByPath((String) templateElements.get(""ncover""), metaDoc.getRootElement());}String wcover = """";if (null != templateElements.get(""wcover"")) {wcover = getValueByPath((String) templateElements.get(""wcover""), metaDoc.getRootElement());}String ecover = """";if (null != templateElements.get(""ecover"")) {ecover = getValueByPath((String) templateElements.get(""ecover""), metaDoc.getRootElement());}String scover = """";if (null != templateElements.get(""scover"")) {scover = getValueByPath((String) templateElements.get(""scover""), metaDoc.getRootElement());}String datefrom = """";if (null != templateElements.get(""datefrom"")) {datefrom = getValueByPath((String) templateElements.get(""datefrom""), metaDoc.getRootElement());}String dateto = """";if (null != templateElements.get(""dateto"")) {dateto = getValueByPath((String) templateElements.get(""dateto""), metaDoc.getRootElement());}String previewimg = """";if (null != templateElements.get(""previewimg"")) {previewimg = getValueByPath((String) templateElements.get(""previewimg""), metaDoc.getRootElement());}String discRestr = ""false"";String votingRestr = ""false"";datefrom = VOAccess.parseDate(datefrom, ""yyyy-MM-dd'T'HH:mm:ss"", VO.defaultTimeFormat.toPattern());dateto = VOAccess.parseDate(datefrom, ""yyyy-MM-dd'T'HH:mm:ss"", VO.defaultTimeFormat.toPattern());Hashtable discussionFields = new Hashtable();discussionFields.put(""OBJECT_ID"", objId);discussionFields.put(""AUTHOR_ID"", ""auto"");discussionFields.put(""AUTHOR_NAME"", ""auto"");discussionFields.put(""OBJECT_SECTION"", sectionName);discussionFields.put(""OBJECT_PATH"", pathTemp);discussionFields.put(""FILE_PATH"", """");discussionFields.put(""TITLE"", title);discussionFields.put(""DESCRIPTION"", description);discussionFields.put(""ONLINK"", onlink);discussionFields.put(""NCOVER"", ncover);discussionFields.put(""ECOVER"", ecover);discussionFields.put(""SCOVER"", scover);discussionFields.put(""WCOVER"", wcover);discussionFields.put(""PERIOD_START"", datefrom);discussionFields.put(""PERIOD_END"", dateto);discussionFields.put(""PREVIEW_IMG"", previewimg);discussionFields.put(""DISCUSSRESTRICTION"", discRestr);discussionFields.put(""VOTINGRESTRICTION"", votingRestr);VOAccess.createDiscussionFile(discussionFields);VOAccess.updateLastItem(objId, sectionName);Collection col = CollectionsManager.getCollection(rootDB + pathTemp, true);XMLResource document = (XMLResource) col.createResource(objId + "".xml"", XMLResource.RESOURCE_TYPE);document.setContent(outXml.outputString(metaElm));col.storeResource(document);Indexer.index(objId);newFile.delete();}} catch (Exception ex) {logger.error(""Error parsing input document"", ex);ex.printStackTrace();newFile.renameTo(new File(newFile.getAbsolutePath() + "".bad""));}}try {this.sleep(600000);} catch (InterruptedException ex1) {ex1.printStackTrace();}}}public boolean finish() {IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText());try {project.create(null);project.open(null);IProjectDescription desc = project.getDescription();desc.setNatureIds(new String[] { JavaCore.NATURE_ID });project.setDescription(desc, null);IJavaProject javaProject = JavaCore.create(project);IPath fitLib = project.getFullPath().append(FIT_LIBRARY);javaProject.setRawClasspath(createClassPathEntries(project, fitLib), null);copyLibrary(project);javaProject.setOutputLocation(createOutputFolder(project, DEFAULT_OUTPUT_FOLDER).getFullPath(), null);createOutputFolder(project, fitTests.getText());createOutputFolder(project, fitResults.getText());if (!DEFAULT_OUTPUT_FOLDER.equals(fitResults.getText())) {DefaultFolderProperties.setDefinedOutputLocation(project, fitResults.getText());}if (!DEFAULT_SOURCE_FOLDER.equals(fitFixtures.getText())) {DefaultFolderProperties.setDefinedSourceLocation(project, fitFixtures.getText());}if (includeExamplesCheck.getSelection()) {copySamples(project);}} catch (CoreException e) {handleError(getContainer().getShell(), project, ""Could not create project:"" + e.getMessage());return false;} catch (IOException e) {handleError(getContainer().getShell(), project, ""Could not create project:"" + e.getMessage());return false;}return true;}protected File compress(File orig, IWrapCompression wrapper) throws IOException {File compressed = File.createTempFile(""test."", "".gz"");FileOutputStream fos = new FileOutputStream(compressed);OutputStream wos = wrapper.wrap(fos);FileInputStream fis = new FileInputStream(orig);IOUtils.copy(fis, wos);IOUtils.closeQuietly(fis);IOUtils.closeQuietly(wos);return compressed;}@Overrideprotected FTPClient ftpConnect() throws SocketException, IOException, NoSuchAlgorithmException {FilePathItem fpi = getFilePathItem();FTPClient f = new FTPSClient();f.connect(fpi.getHost());f.login(fpi.getUsername(), fpi.getPassword());return f;}public void concatFiles() throws IOException {Writer writer = null;try {final File targetFile = new File(getTargetDirectory(), getTargetFile());targetFile.getParentFile().mkdirs();if (null != getEncoding()) {getLog().info(""Writing aggregated file with encoding '"" + getEncoding() + ""'"");writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(targetFile), getEncoding()));} else {getLog().info(""WARNING: writing aggregated file with system encoding"");writer = new FileWriter(targetFile);}for (File file : getFiles()) {Reader reader = null;try {if (null != getEncoding()) {getLog().info(""Reading file "" + file.getCanonicalPath() + "" with encoding  '"" + getEncoding() + ""'"");reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), getEncoding()));} else {getLog().info(""WARNING: Reading file "" + file.getCanonicalPath() + "" with system encoding"");reader = new FileReader(file);}IOUtils.copy(reader, writer);final String delimiter = getDelimiter();if (delimiter != null) {writer.write(delimiter.toCharArray());}} finally {IOUtils.closeQuietly(reader);}}} finally {IOUtils.closeQuietly(writer);}}public List<T_new> executeGet(HttpTransport transport, String targetUrl) throws HttpResponseException, IOException {HttpRequest req = transport.buildGetRequest();req.setUrl(targetUrl);NotifyFeed feed = req.execute().parseAs(NotifyFeed.class);if (feed.entry == null) {return Collections.emptyList();}List<T_new> results = new ArrayList<T_new>();for (NotifyEntry e : feed.entry) {StringBuilder buffer = new StringBuilder();if (e.id != null) {buffer.append(e.id);}buffer.append(""@"");if (e.updated != null) {buffer.append(e.updated.toStringRfc3339().substring(0, 19) + ""Z"");}Key key = Datastore.createKey(T_new.class, buffer.toString());T_new news = new T_new();news.setTitle(e.title);if (e.content != null) {news.setNewText(e.content.substring(0, Math.min(e.content.length(), 500)));}if (e.status != null && e.content == null) {news.setNewText(e.status);}if (e.updated != null) {news.setCreatedAt(new Date(e.updated.value));}news.setContentUrl(e.getAlternate());if (e.author != null) {news.setAuthor(e.author.name);}news.setKey(key);results.add(news);}return results;}"	5
"public void testTransactions0010() throws Exception {Connection cx = getConnection();dropTable(""#t0010"");Statement stmt = cx.createStatement();stmt.executeUpdate(""create table #t0010 "" + ""  (i  integer  not null,  "" + ""s  char(10) not null)  "");cx.setAutoCommit(false);PreparedStatement pStmt = cx.prepareStatement(""insert into #t0010 values (?, ?)"");int rowsToAdd = 8;final String theString = ""abcdefghijklmnopqrstuvwxyz"";int count = 0;for (int i = 1; i <= rowsToAdd; i++) {pStmt.setInt(1, i);pStmt.setString(2, theString.substring(0, i));count += pStmt.executeUpdate();}assertTrue(count == rowsToAdd);cx.rollback();stmt = cx.createStatement();ResultSet rs = stmt.executeQuery(""select s, i from #t0010"");assertNotNull(rs);count = 0;while (rs.next()) {count++;assertTrue(rs.getString(1).trim().length() == rs.getInt(2));}assertTrue(count == 0);cx.commit();rowsToAdd = 6;for (int j = 1; j <= 2; j++) {count = 0;for (int i = 1; i <= rowsToAdd; i++) {pStmt.setInt(1, i + ((j - 1) * rowsToAdd));pStmt.setString(2, theString.substring(0, i));count += pStmt.executeUpdate();}assertTrue(count == rowsToAdd);cx.commit();}rs = stmt.executeQuery(""select s, i from #t0010"");count = 0;while (rs.next()) {count++;int i = rs.getInt(2);if (i > rowsToAdd) i -= rowsToAdd;assertTrue(rs.getString(1).trim().length() == i);}assertTrue(count == (2 * rowsToAdd));cx.commit();cx.setAutoCommit(true);}private void saveMessage(String server, Message message, byte[] bytes) throws Exception {ConnectionProvider cp = null;Connection conn = null;PreparedStatement ps = null;try {SessionFactoryImplementor impl = (SessionFactoryImplementor) getPortalDao().getSessionFactory();cp = impl.getConnectionProvider();conn = cp.getConnection();conn.setAutoCommit(false);long orgId = 0;String className = """";long classId = 0;if (message.getBody() instanceof Entity) {Entity entity = (Entity) message.getBody();orgId = entity.getOrgId();className = entity.getClass().getName();classId = entity.getId();}ps = conn.prepareStatement(""insert into light_replication_message (orgId,server,event,className,classId,message,createDate) values(?,?,?,?,?,?,?);"");ps.setLong(1, orgId);ps.setString(2, server);ps.setString(3, message.getEvent().toString());ps.setString(4, className);ps.setLong(5, classId);ps.setBytes(6, bytes);ps.setTimestamp(7, new Timestamp(System.currentTimeMillis()));ps.executeUpdate();conn.commit();ps.close();conn.close();} catch (Exception e) {conn.rollback();ps.close();conn.close();e.printStackTrace();throw new Exception(e);}}public static void main(String[] args) {try {if (args.length < 2) {System.err.println(""usage: test [src] [dest]"");return;}FileInputStream in = new FileInputStream(args[0]);FileOutputStream out = new FileOutputStream(args[1]);FileChannel src = in.getChannel();FileChannel channel = out.getChannel();long pos = 0, len = src.size(), ret;while (len > 0) {if ((ret = channel.transferFrom(src, pos, len)) < 0) break;len -= ret;pos += ret;}out.close();in.close();} catch (IOException e) {e.printStackTrace();}}public RandomGUID() {MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {throw new RuntimeException(e.getClass().getName() + "": "" + e.getMessage());}try {long time = System.currentTimeMillis();long rand = 0;rand = myRand.nextLong();StringBuffer sb = new StringBuffer();sb.append(s_id);sb.append("":"");sb.append(Long.toString(time));sb.append("":"");sb.append(Long.toString(rand));md5.update(sb.toString().getBytes());byte[] array = md5.digest();sb.setLength(0);for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {throw new RuntimeException(e.getClass().getName() + "": "" + e.getMessage());}}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) {sb.append('0');}sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}public void init() {try {UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());} catch (Throwable e) {}Container c = getContentPane();c.setLayout(new BoxLayout(c, BoxLayout.Y_AXIS));String[] lines = getAppletInfo().split(""\n"");for (int i = 0; i < lines.length; i++) {c.add(new JLabel(lines[i]));}new Worker() {public Object construct() {Object result;try {if (getParameter(""data"") != null && getParameter(""data"").length() > 0) {NanoXMLDOMInput domi = new NanoXMLDOMInput(new UMLFigureFactory(), new StringReader(getParameter(""data"")));result = domi.readObject(0);} else if (getParameter(""datafile"") != null) {InputStream in = null;try {URL url = new URL(getDocumentBase(), getParameter(""datafile""));in = url.openConnection().getInputStream();NanoXMLDOMInput domi = new NanoXMLDOMInput(new UMLFigureFactory(), in);result = domi.readObject(0);} finally {if (in != null) in.close();}} else {result = null;}} catch (Throwable t) {result = t;}return result;}public void finished(Object result) {Container c = getContentPane();c.setLayout(new BorderLayout());c.removeAll();initComponents();if (result != null) {if (result instanceof Drawing) {setDrawing((Drawing) result);} else if (result instanceof Throwable) {getDrawing().add(new TextFigure(result.toString()));((Throwable) result).printStackTrace();}}boolean isLiveConnect;try {Class.forName(""netscape.javascript.JSObject"");isLiveConnect = true;} catch (Throwable t) {isLiveConnect = false;}loadButton.setEnabled(isLiveConnect && getParameter(""dataread"") != null);saveButton.setEnabled(isLiveConnect && getParameter(""datawrite"") != null);if (isLiveConnect) {String methodName = getParameter(""dataread"");if (methodName.indexOf('(') > 0) {methodName = methodName.substring(0, methodName.indexOf('(') - 1);}JSObject win = JSObject.getWindow(UMLLiveConnectApplet.this);Object data = win.call(methodName, new Object[0]);if (data instanceof String) {setData((String) data);}}c.validate();}}.start();}public Object construct() {Object result;try {if (getParameter(""data"") != null && getParameter(""data"").length() > 0) {NanoXMLDOMInput domi = new NanoXMLDOMInput(new UMLFigureFactory(), new StringReader(getParameter(""data"")));result = domi.readObject(0);} else if (getParameter(""datafile"") != null) {InputStream in = null;try {URL url = new URL(getDocumentBase(), getParameter(""datafile""));in = url.openConnection().getInputStream();NanoXMLDOMInput domi = new NanoXMLDOMInput(new UMLFigureFactory(), in);result = domi.readObject(0);} finally {if (in != null) in.close();}} else {result = null;}} catch (Throwable t) {result = t;}return result;}public void bubbleSort(final int[] s) {source = s;if (source.length < 2) return;boolean go = true;while (go) {go = false;for (int i = 0; i < source.length - 1; i++) {int temp = source[i];if (temp > source[i + 1]) {source[i] = source[i + 1];source[i + 1] = temp;go = true;}}}}private void fileUpload() throws IOException {HttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(postURL);MultipartEntity mpEntity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE);mpEntity.addPart(""Filename"", new StringBody(file.getName()));mpEntity.addPart(""Filedata"", new MonitoredFileBody(file, uploadProgress));httppost.setEntity(mpEntity);NULogger.getLogger().log(Level.INFO, ""executing request {0}"", httppost.getRequestLine());NULogger.getLogger().info(""Now uploading your file into sharesend.com"");status = UploadStatus.UPLOADING;HttpResponse response = httpclient.execute(httppost);status = UploadStatus.GETTINGLINK;HttpEntity resEntity = response.getEntity();NULogger.getLogger().info(response.getStatusLine().toString());if (resEntity != null) {uploadresponse = EntityUtils.toString(resEntity);}NULogger.getLogger().log(Level.INFO, ""Upload Response : {0}"", uploadresponse);NULogger.getLogger().log(Level.INFO, ""Download Link : http://sharesend.com/{0}"", uploadresponse);downloadlink = ""http://sharesend.com/"" + uploadresponse;downURL = downloadlink;httpclient.getConnectionManager().shutdown();uploadFinished();}public static final String MD5(String value) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(value.getBytes());BigInteger hash = new BigInteger(1, md.digest());String newValue = hash.toString(16);return newValue;} catch (NoSuchAlgorithmException ns) {ns.printStackTrace();return null;}}"	5
"private void run(String[] args) throws Throwable {ArgParser parser = new ArgParser(""Run an experiment"");parser.addOptions(this, true);args = parser.matchAllArgs(args, 0, ArgParserOption.EXIT_ON_ERROR, ArgParserOption.STOP_FIRST_UNMATCHED);if (log4jFile != null) {logger.info(""Using another log4j configuration: %s"", log4jFile);PropertyConfigurator.configure(log4jFile.getAbsolutePath());}final TreeMap<TaskName, Class<Task>> tasks = GenericHelper.newTreeMap();final Enumeration<URL> e = About.class.getClassLoader().getResources(EXPERIMENT_PACKAGES);while (e.hasMoreElements()) {final URL url = e.nextElement();logger.debug(""Got URL %s"", url);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = in.readLine()) != null) {String packageName = line;getTasks(url, tasks, packageName);}}getTasks(null, tasks, getClass().getPackage().getName());if (tasks.isEmpty()) {logger.fatal(""I did not find any valid experiment (service bpiwowar.experiments.ExperimentListProvider)"");System.exit(1);}if (args.length == 0 || args[0].equals(""list"")) {System.out.format(""Available experiments:%n"");TreeMapArray<PackageName, String> map = TreeMapArray.newInstance();for (Entry<TaskName, Class<Task>> entry : tasks.entrySet()) {TaskName task = entry.getKey();if (showClassNames) map.add(task.packageName, String.format(""%s (%s)"", task.name, entry.getValue().toString())); else map.add(task.packageName, task.name);}Stack<PackageName> ancestors = new Stack<PackageName>();for (Entry<PackageName, ArrayList<String>> entry : map.entrySet()) {final PackageName key = entry.getKey();while (!ancestors.isEmpty() && key.commonPrefixLength(ancestors.peek()) != ancestors.peek().getLength()) ancestors.pop();int nbAncestors = ancestors.size();int c = nbAncestors > 0 ? ancestors.peek().getLength() : 0;StringBuilder s = new StringBuilder();for (int i = 0; i < c; i++) s.append(""|"");for (int i = c; i < key.getLength(); i++) {s.append(""|"");ancestors.add(new PackageName(key, i + 1));System.out.format(""%s%n"", s);System.out.format(""%s+ [%s]%n"", s, ancestors.peek());nbAncestors++;}String prefix = s.toString();for (String task : entry.getValue()) System.out.format(""%s|- %s%n"", prefix, task);ancestors.add(key);}return;} else if (args[0].equals(SEARCH_COMMAND)) {final class Options {@OrderedArgument(required = true)String search;}Options options = new Options();ArgParser ap = new ArgParser(SEARCH_COMMAND);ap.addOptions(options);ap.matchAllArgs(args, 1);logger.info(""Searching for %s"", options.search);for (Entry<TaskName, Class<Task>> entry : tasks.entrySet()) {TaskName taskname = entry.getKey();if (taskname.name.contains(options.search)) {System.err.format(""[*] %s - %s%n%s%n"", taskname, entry.getValue(), entry.getValue().getAnnotation(TaskDescription.class).description());}}return;}String taskName = args[0];args = Arrays.copyOfRange(args, 1, args.length);ArrayList<Class<Task>> matching = GenericHelper.newArrayList();for (Entry<TaskName, Class<Task>> entry : tasks.entrySet()) {if (entry.getKey().name.equals(taskName)) matching.add(entry.getValue());}if (matching.isEmpty()) {System.err.println(""No task match "" + taskName);System.exit(1);}if (matching.size() > 1) {System.err.println(""Too many tasks match "" + taskName);System.exit(1);}Class<Task> taskClass = matching.get(0);logger.info(""Running experiment "" + taskClass.getCanonicalName());Task task = taskClass.newInstance();int errorCode = 0;try {task.init(args);if (xstreamOutput != null) {OutputStream out;if (xstreamOutput.toString().equals(""-"")) out = System.out; else out = new FileOutputStream(xstreamOutput);logger.info(""Serializing the object into %s"", xstreamOutput);new XStream().toXML(task, out);out.close();} else {errorCode = task.run();}logger.info(""Finished task"");} catch (Throwable t) {if (t instanceof InvocationTargetException && t.getCause() != null) {t = t.getCause();}logger.error(""Exception thrown while executing the action:%n%s%n"", t);errorCode = 2;}System.exit(errorCode);}protected ExternalDecoder(InputStream source, Process process) {super(source);this.process = process;this.processStdOut = process.getInputStream();this.processStdIn = process.getOutputStream();new Thread() {@Overridepublic void run() {try {IOUtils.copy(getSource(), processStdIn);System.err.println(""Copy done."");close();} catch (IOException e) {e.printStackTrace();IOUtils.closeQuietly(ExternalDecoder.this);}}}.start();}@Overridepublic void run() {try {IOUtils.copy(getSource(), processStdIn);System.err.println(""Copy done."");close();} catch (IOException e) {e.printStackTrace();IOUtils.closeQuietly(ExternalDecoder.this);}}public int subclass(int objectId, String description) throws FidoDatabaseException, ObjectNotFoundException {try {Connection conn = null;Statement stmt = null;ResultSet rs = null;try {String sql = ""insert into Objects (Description) "" + ""values ('"" + description + ""')"";conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();if (contains(stmt, objectId) == false) throw new ObjectNotFoundException(objectId);stmt.executeUpdate(sql);int id;sql = ""select currval('objects_objectid_seq')"";rs = stmt.executeQuery(sql);if (rs.next() == false) throw new SQLException(""No rows returned from select currval() query""); else id = rs.getInt(1);ObjectLinkTable objectLinkList = new ObjectLinkTable();objectLinkList.linkObjects(stmt, id, ""isa"", objectId);conn.commit();return id;} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (rs != null) rs.close();if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public int instantiate(int objectId, String description) throws FidoDatabaseException, ObjectNotFoundException, ClassLinkTypeNotFoundException {try {Connection conn = null;Statement stmt = null;ResultSet rs = null;try {String sql = ""insert into Objects (Description) "" + ""values ('"" + description + ""')"";conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();if (contains(stmt, objectId) == false) throw new ObjectNotFoundException(objectId);stmt.executeUpdate(sql);int id;sql = ""select currval('objects_objectid_seq')"";rs = stmt.executeQuery(sql);if (rs.next() == false) throw new SQLException(""No rows returned from select currval() query""); else id = rs.getInt(1);ObjectLinkTable objectLinkList = new ObjectLinkTable();objectLinkList.linkObjects(stmt, id, ""instance"", objectId);conn.commit();return id;} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (rs != null) rs.close();if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public void deleteInstance(int instanceId) throws FidoDatabaseException, ObjectNotFoundException {try {Connection conn = null;Statement stmt = null;try {conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();if (contains(stmt, instanceId) == false) throw new ObjectNotFoundException(instanceId);ObjectLinkTable objectLinkList = new ObjectLinkTable();ObjectAttributeTable objectAttributeList = new ObjectAttributeTable();objectLinkList.deleteObject(stmt, instanceId);objectAttributeList.deleteObject(stmt, instanceId);stmt.executeUpdate(""delete from Objects where ObjectId = "" + instanceId);conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}private File downloadURL(URL url) {MerlotDebug.msg(""Downloading URL: "" + url);String filename = url.getFile();if (filename.indexOf('/') >= 0) {filename = filename.substring(filename.lastIndexOf('/') + 1);}File userPluginsDir = new File(XMLEditorSettings.USER_MERLOT_DIR, ""plugins"");File cache = new File(userPluginsDir, filename);try {if (!userPluginsDir.exists()) {userPluginsDir.mkdirs();}URLConnection connection = url.openConnection();if (cache.exists() && cache.canRead()) {connection.connect();long remoteTimestamp = connection.getLastModified();if (remoteTimestamp == 0 || remoteTimestamp > cache.lastModified()) {cache = downloadContent(connection, cache);} else {MerlotDebug.msg(""Using cached version for URL: "" + url);}} else {cache = downloadContent(connection, cache);}} catch (IOException ex) {MerlotDebug.exception(ex);}if (cache != null && cache.exists()) {return cache;} else {return null;}}public synchronized String encrypt(String plaintext) throws Exception {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {throw new Exception(e.getMessage());}try {md.update(plaintext.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {throw new Exception(e.getMessage());}byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}private static String fetchUrl(String url, boolean keepLineEnds) throws IOException, MalformedURLException {URLConnection destConnection = (new URL(url)).openConnection();BufferedReader br;String inputLine;StringBuffer doc = new StringBuffer();String contentEncoding;destConnection.setRequestProperty(""Accept-Encoding"", ""gzip"");if (proxyAuth != null) destConnection.setRequestProperty(""Proxy-Authorization"", proxyAuth);destConnection.connect();contentEncoding = destConnection.getContentEncoding();if ((contentEncoding != null) && contentEncoding.equals(""gzip"")) {br = new BufferedReader(new InputStreamReader(new GZIPInputStream(destConnection.getInputStream())));} else {br = new BufferedReader(new InputStreamReader(destConnection.getInputStream()));}while ((inputLine = br.readLine()) != null) {if (keepLineEnds) doc.append(inputLine + ""\n""); else doc.append(inputLine);}br.close();return doc.toString();}protected Document getRawResults(String urlString, Map args) throws Exception {int count = 0;Iterator keys = args.keySet().iterator();while (keys.hasNext()) {String sep = count++ == 0 ? ""?"" : ""&"";String name = (String) keys.next();if (args.get(name) != null) {urlString += sep + name + ""="" + args.get(name);}}URL url = new URL(urlString);URLConnection conn = url.openConnection();conn.connect();SAXBuilder builder = new SAXBuilder();return builder.build(conn.getInputStream());}"	5
"public void unlock(String oid, String key) throws PersisterException {String lock = getLock(oid);if (lock == null) {throw new PersisterException(""Object does not exist: OID = "" + oid);} else if (!NULL.equals(lock) && (!lock.equals(key))) {throw new PersisterException(""The object is currently locked with another key: OID = "" + oid + "", LOCK = "" + lock + "", KEY = "" + key);}Connection conn = null;PreparedStatement ps = null;try {conn = _ds.getConnection();conn.setAutoCommit(true);ps = conn.prepareStatement(""update "" + _table_name + "" set "" + _key_col + "" = NULL, "" + _ts_col + "" = ? where "" + _oid_col + "" = ?"");ps.setLong(1, System.currentTimeMillis());ps.setString(2, oid);ps.executeUpdate();} catch (Throwable th) {if (conn != null) {try {conn.rollback();} catch (Throwable th2) {}}throw new PersisterException(""Failed to unlock object: OID = "" + oid + "", KEY = "" + key, th);} finally {if (ps != null) {try {ps.close();} catch (Throwable th) {}}if (conn != null) {try {conn.close();} catch (Throwable th) {}}}}public void cleanup(long timeout) throws PersisterException {long threshold = System.currentTimeMillis() - timeout;Connection conn = null;PreparedStatement ps = null;try {conn = _ds.getConnection();conn.setAutoCommit(true);ps = conn.prepareStatement(""delete from "" + _table_name + "" where "" + _ts_col + "" < ?"");ps.setLong(1, threshold);ps.executeUpdate();} catch (Throwable th) {if (conn != null) {try {conn.rollback();} catch (Throwable th2) {}}throw new PersisterException(""Failed to cleanup timed out objects: "", th);} finally {if (ps != null) {try {ps.close();} catch (Throwable th) {}}if (conn != null) {try {conn.close();} catch (Throwable th) {}}}}private void readIntoList(URL url, Map<String, JMenuItem> list) {try {BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String inputLine;while ((inputLine = in.readLine()) != null) {int commandNameBegin = inputLine.indexOf("">"") + 1;int commandNameEnd = inputLine.indexOf(""</a>"");JMenuItem item = new JMenuItem(""<html>"" + inputLine + ""</html>"");if (list == allRooms) {item.setActionCommand(""/room "" + inputLine.substring(commandNameBegin, commandNameEnd));} else {item.setActionCommand(""/"" + inputLine.substring(commandNameBegin, commandNameEnd) + "" "");}item.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {jTextField1.setText(e.getActionCommand());popup.setVisible(false);}});list.put(inputLine.substring(commandNameBegin, commandNameEnd), item);}in.close();} catch (Exception e) {e.printStackTrace();}}public static void copyFile(File sourceFile, String toDir, boolean create, boolean overwrite) throws FileNotFoundException, IOException {FileInputStream source = null;FileOutputStream destination = null;byte[] buffer;int bytes_read;File toFile = new File(toDir);if (create && !toFile.exists()) toFile.mkdirs();if (toFile.exists()) {File destFile = new File(toDir + ""/"" + sourceFile.getName());try {if (!destFile.exists() || overwrite) {source = new FileInputStream(sourceFile);destination = new FileOutputStream(destFile);buffer = new byte[1024];while (true) {bytes_read = source.read(buffer);if (bytes_read == -1) break;destination.write(buffer, 0, bytes_read);}}} catch (Exception exx) {exx.printStackTrace();} finally {if (source != null) try {source.close();} catch (IOException e) {}if (destination != null) try {destination.close();} catch (IOException e) {}}}}protected void createValueListAnnotation(IProgressMonitor monitor, IPackageFragment pack, Map model) throws CoreException {IProject pj = pack.getJavaProject().getProject();QualifiedName qn = new QualifiedName(JstActivator.PLUGIN_ID, JstActivator.PACKAGE_INFO_LOCATION);String location = pj.getPersistentProperty(qn);if (location != null) {IFolder javaFolder = pj.getFolder(new Path(NexOpenFacetInstallDataModelProvider.WEB_SRC_MAIN_JAVA));IFolder packageInfo = javaFolder.getFolder(location);if (!packageInfo.exists()) {Logger.log(Logger.INFO, ""package-info package ["" + location + ""] does not exists."");Logger.log(Logger.INFO, ""ValueList annotation will not be added by this wizard. "" + ""You must add manually in your package-info class if exist "" + ""or create a new one at location "" + location);return;}IFile pkginfo = packageInfo.getFile(""package-info.java"");if (!pkginfo.exists()) {Logger.log(Logger.INFO, ""package-info class at location ["" + location + ""] does not exists."");return;}InputStream in = pkginfo.getContents();ByteArrayOutputStream baos = new ByteArrayOutputStream();try {IOUtils.copy(in, baos);String content = new String(baos.toByteArray());VelocityEngine engine = VelocityEngineHolder.getEngine();model.put(""adapterType"", getAdapterType());model.put(""packageInfo"", location.replace('/', '.'));model.put(""defaultNumberPerPage"", ""5"");model.put(""defaultSortDirection"", ""asc"");if (isFacadeAdapter()) {model.put(""facadeType"", ""true"");}if (content.indexOf(""@ValueLists({})"") > -1) {appendValueList(monitor, model, pkginfo, content, engine, true);return;} else if (content.indexOf(""@ValueLists"") > -1) {appendValueList(monitor, model, pkginfo, content, engine, false);return;}String vl = VelocityEngineUtils.mergeTemplateIntoString(engine, ""ValueList.vm"", model);ByteArrayInputStream bais = new ByteArrayInputStream(vl.getBytes());try {pkginfo.setContents(bais, true, false, monitor);} finally {bais.close();}return;} catch (IOException e) {IStatus status = new Status(IStatus.ERROR, JeeServiceComponentUIPlugin.PLUGIN_ID, IStatus.OK, ""I/O exception"", e);throw new CoreException(status);} catch (VelocityException e) {IStatus status = new Status(IStatus.ERROR, JeeServiceComponentUIPlugin.PLUGIN_ID, IStatus.OK, ""Velocity exception"", e);throw new CoreException(status);} finally {try {baos.close();in.close();} catch (IOException e) {}}}Logger.log(Logger.INFO, ""package-info location property does not exists."");}public int create(BusinessObject o) throws DAOException {int insert = 0;int id = 0;Currency curr = (Currency) o;try {PreparedStatement pst = connection.prepareStatement(XMLGetQuery.getQuery(""INSERT_CURRENCY""));pst.setString(1, curr.getName());pst.setInt(2, curr.getIdBase());pst.setDouble(3, curr.getValue());insert = pst.executeUpdate();if (insert <= 0) {connection.rollback();throw new DAOException(""Number of rows <= 0"");} else if (insert > 1) {connection.rollback();throw new DAOException(""Number of rows > 1"");}Statement st = connection.createStatement();ResultSet rs = st.executeQuery(""select max(id) from currency"");rs.next();id = rs.getInt(1);connection.commit();} catch (SQLException e) {Log.write(e.getMessage());throw new DAOException(""A SQLException has occured"");} catch (NullPointerException npe) {Log.write(npe.getMessage());throw new DAOException(""Connection null"");}return id;}public int delete(BusinessObject o) throws DAOException {int delete = 0;Currency curr = (Currency) o;try {PreparedStatement pst = connection.prepareStatement(XMLGetQuery.getQuery(""DELETE_CURRENCY""));pst.setInt(1, curr.getId());delete = pst.executeUpdate();if (delete <= 0) {connection.rollback();throw new DAOException(""Number of rows <= 0"");} else if (delete > 1) {connection.rollback();throw new DAOException(""Number of rows > 1"");}connection.commit();} catch (SQLException e) {Log.write(e.getMessage());throw new DAOException(""A SQLException has occured"");} catch (NullPointerException npe) {Log.write(npe.getMessage());throw new DAOException(""Connection null"");}return delete;}public int update(BusinessObject o) throws DAOException {int update = 0;Currency curr = (Currency) o;try {PreparedStatement pst = connection.prepareStatement(XMLGetQuery.getQuery(""UPDATE_CURRENCY""));pst.setString(1, curr.getName());pst.setInt(2, curr.getIdBase());pst.setDouble(3, curr.getValue());pst.setInt(4, curr.getId());update = pst.executeUpdate();if (update <= 0) {connection.rollback();throw new DAOException(""Number of rows <= 0"");} else if (update > 1) {connection.rollback();throw new DAOException(""Number of rows > 1"");}connection.commit();} catch (SQLException e) {Log.write(e.getMessage());throw new DAOException(""A SQLException has occured"");} catch (NullPointerException npe) {Log.write(npe.getMessage());throw new DAOException(""Connection null"");}return update;}public static String encryptPassword(String password) {try {MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(password.getBytes());byte[] hash = md.digest();StringBuilder hashStringBuf = new StringBuilder(""{SHA}"");String byteString;int byteLength;for (int index = 0; index < hash.length; index++) {byteString = String.valueOf(hash[index] + 128);byteLength = byteString.length();switch(byteLength) {case 1:byteString = ""00"" + byteString;break;case 2:byteString = ""0"" + byteString;break;}hashStringBuf.append(byteString);}return hashStringBuf.toString();} catch (NoSuchAlgorithmException nsae) {log.error(""Error getting password hash - "" + nsae.getMessage());return null;}}public static String encryptPassword(String username, String realm, String password) throws GeneralSecurityException {MessageDigest md = null;md = MessageDigest.getInstance(""MD5"");md.update(username.getBytes());md.update("":"".getBytes());md.update(realm.getBytes());md.update("":"".getBytes());md.update(password.getBytes());byte[] hash = md.digest();return toHex(hash, hash.length);}"	5
"public static Document getXHTMLDocument(URL _url) throws IOException {final Tidy tidy = new Tidy();tidy.setQuiet(true);tidy.setShowWarnings(false);tidy.setXmlOut(true);final BufferedInputStream input_stream = new BufferedInputStream(_url.openStream());return tidy.parseDOM(input_stream, null);}public void handleRequestInternal(final HttpServletRequest httpServletRequest, final HttpServletResponse httpServletResponse) throws ServletException, IOException {final String servetPath = httpServletRequest.getServletPath();final String previousToken = httpServletRequest.getHeader(IF_NONE_MATCH);final String currentToken = getETagValue(httpServletRequest);httpServletResponse.setHeader(ETAG, currentToken);final Date modifiedDate = new Date(httpServletRequest.getDateHeader(IF_MODIFIED_SINCE));final Calendar calendar = Calendar.getInstance();final Date now = calendar.getTime();calendar.setTime(modifiedDate);calendar.add(Calendar.MINUTE, getEtagExpiration());if (currentToken.equals(previousToken) && (now.getTime() < calendar.getTime().getTime())) {httpServletResponse.sendError(HttpServletResponse.SC_NOT_MODIFIED);httpServletResponse.setHeader(LAST_MODIFIED, httpServletRequest.getHeader(IF_MODIFIED_SINCE));if (LOG.isDebugEnabled()) {LOG.debug(""ETag the same, will return 304"");}} else {httpServletResponse.setDateHeader(LAST_MODIFIED, (new Date()).getTime());final String width = httpServletRequest.getParameter(Constants.WIDTH);final String height = httpServletRequest.getParameter(Constants.HEIGHT);final ImageNameStrategy imageNameStrategy = imageService.getImageNameStrategy(servetPath);String code = imageNameStrategy.getCode(servetPath);String fileName = imageNameStrategy.getFileName(servetPath);final String imageRealPathPrefix = getRealPathPrefix(httpServletRequest.getServerName().toLowerCase());String original = imageRealPathPrefix + imageNameStrategy.getFullFileNamePath(fileName, code);final File origFile = new File(original);if (!origFile.exists()) {code = Constants.NO_IMAGE;fileName = imageNameStrategy.getFileName(code);original = imageRealPathPrefix + imageNameStrategy.getFullFileNamePath(fileName, code);}String resizedImageFileName = null;if (width != null && height != null && imageService.isSizeAllowed(width, height)) {resizedImageFileName = imageRealPathPrefix + imageNameStrategy.getFullFileNamePath(fileName, code, width, height);}final File imageFile = getImageFile(original, resizedImageFileName, width, height);final FileInputStream fileInputStream = new FileInputStream(imageFile);IOUtils.copy(fileInputStream, httpServletResponse.getOutputStream());fileInputStream.close();}}public void copyFile(String oldPath, String newPath) {try {int bytesum = 0;int byteread = 0;File oldfile = new File(oldPath);if (oldfile.exists()) {InputStream inStream = new FileInputStream(oldPath);FileOutputStream fs = new FileOutputStream(newPath);byte[] buffer = new byte[1444];while ((byteread = inStream.read(buffer)) != -1) {bytesum += byteread;System.out.println(bytesum);fs.write(buffer, 0, byteread);}inStream.close();}} catch (Exception e) {System.out.println(""复制单个文件操作出错"");e.printStackTrace();}}public ValidationReport validate(OriginalDeployUnitDescription unit) throws UnitValidationException {ValidationReport vr = new DefaultValidationReport();errorHandler = new SimpleErrorHandler(vr);vr.setFileUri(unit.getAbsolutePath());SAXParser parser;SAXReader reader = null;try {parser = factory.newSAXParser();reader = new SAXReader(parser.getXMLReader());reader.setValidation(false);reader.setErrorHandler(this.errorHandler);} catch (ParserConfigurationException e) {throw new UnitValidationException(""The configuration of parser is illegal."", e);} catch (SAXException e) {String m = ""Something is wrong when register schema"";logger.error(m, e);throw new UnitValidationException(m, e);}ZipInputStream zipInputStream;InputStream tempInput = null;try {tempInput = new FileInputStream(unit.getAbsolutePath());} catch (FileNotFoundException e1) {String m = String.format(""The file [%s] don't exist."", unit.getAbsolutePath());logger.error(m, e1);throw new UnitValidationException(m, e1);}zipInputStream = new ZipInputStream(tempInput);ZipEntry zipEntry = null;try {zipEntry = zipInputStream.getNextEntry();if (zipEntry == null) {String m = String.format(""Error when get zipEntry. Maybe the [%s] is not zip file!"", unit.getAbsolutePath());logger.error(m);throw new UnitValidationException(m);}while (zipEntry != null) {if (configFiles.contains(zipEntry.getName())) {byte[] extra = new byte[(int) zipEntry.getSize()];zipInputStream.read(extra);File file = File.createTempFile(""temp"", ""extra"");file.deleteOnExit();logger.info(""[TempFile:]"" + file.getAbsoluteFile());ByteArrayInputStream byteInputStream = new ByteArrayInputStream(extra);FileOutputStream tempFileOutputStream = new FileOutputStream(file);IOUtils.copy(byteInputStream, tempFileOutputStream);tempFileOutputStream.flush();IOUtils.closeQuietly(tempFileOutputStream);InputStream inputStream = new FileInputStream(file);reader.read(inputStream, unit.getAbsolutePath() + "":"" + zipEntry.getName());IOUtils.closeQuietly(inputStream);}zipEntry = zipInputStream.getNextEntry();}} catch (IOException e) {ValidationMessage vm = new XMLValidationMessage(""IOError"", 0, 0, unit.getUrl() + "":"" + zipEntry.getName(), e);vr.addValidationMessage(vm);} catch (DocumentException e) {ValidationMessage vm = new XMLValidationMessage(""Document Error."", 0, 0, unit.getUrl() + "":"" + zipEntry.getName(), e);vr.addValidationMessage(vm);} finally {IOUtils.closeQuietly(tempInput);IOUtils.closeQuietly(zipInputStream);}return vr;}private void copyFile(File sourcefile, File targetfile) {BufferedInputStream in = null;BufferedOutputStream out = null;try {in = new BufferedInputStream(new FileInputStream(sourcefile));out = new BufferedOutputStream(new FileOutputStream(targetfile));byte[] buffer = new byte[4096];int bytesread = 0;while ((bytesread = in.read(buffer)) >= 0) {out.write(buffer, 0, bytesread);}} catch (IOException e) {e.printStackTrace();} finally {try {if (in != null) {in.close();}if (out != null) {out.close();}} catch (IOException e) {e.printStackTrace();}}}private void bubbleSort(int values[]) {PerfMonTimer timerOuter = PerfMonTimer.start(""SortingTest.bubbleSort"");try {int len = values.length - 1;for (int i = 0; i < len; i++) {for (int j = 0; j < len - i; j++) {if (values[j] > values[j + 1]) {int tmp = values[j];values[j] = values[j + 1];values[j + 1] = tmp;}}}} finally {PerfMonTimer.stop(timerOuter);}}public static SearchItem register(String... args) {SearchItem _return = new SearchItem();String line = null;try {DefaultHttpClient httpClient = new DefaultHttpClient();HttpPost httpPost = new HttpPost(URL_REGISTER);List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(6);nameValuePairs.add(new BasicNameValuePair(""format"", ""xml""));nameValuePairs.add(new BasicNameValuePair(""firtname"", args[0]));nameValuePairs.add(new BasicNameValuePair(""lastname"", args[1]));nameValuePairs.add(new BasicNameValuePair(""email"", args[2]));nameValuePairs.add(new BasicNameValuePair(""phone"", args[3]));nameValuePairs.add(new BasicNameValuePair(""password"", args[4]));nameValuePairs.add(new BasicNameValuePair(""confirmpassword"", args[5]));httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs));httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs));HttpResponse response = httpClient.execute(httpPost);line = EntityUtils.toString(response.getEntity());Document document = XMLfunctions.XMLfromString(line);NodeList nodes = document.getElementsByTagName(""response"");Element e = (Element) nodes.item(0);_return.set(0, XMLfunctions.getValue(e, ""success""));if (""false"".endsWith(_return.get(0))) {_return.set(1, XMLfunctions.getValue(e, ""error""));} else {_return.set(1, XMLfunctions.getValue(e, ""message""));}return _return;} catch (Exception e) {line = ""<results status=\""error\""><msg>Can't connect to server</msg></results>"";line = null;_return.set(0, ""false"");_return.set(1, """");}return _return;}public static SearchItem loadRecord(String id, boolean isContact) {String line = null;try {DefaultHttpClient httpClient = new DefaultHttpClient();HttpPost httpPost = new HttpPost(isContact ? URL_RECORD_CONTACT : URL_RECORD_COMPANY);List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(6);nameValuePairs.add(new BasicNameValuePair(""format"", ""xml""));nameValuePairs.add(new BasicNameValuePair(""token"", Common.token));nameValuePairs.add(new BasicNameValuePair(""id"", id));httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs));httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs));HttpResponse response = httpClient.execute(httpPost);line = EntityUtils.toString(response.getEntity());Document document = XMLfunctions.XMLfromString(line);NodeList nodes = document.getElementsByTagName(""response"");Element e = (Element) nodes.item(0);String Name__Last__First_ = XMLfunctions.getValue(e, isContact ? ""Name__Last__First_"" : ""Name"");String phone = """";if (!isContact) phone = XMLfunctions.getValue(e, ""Phone"");String Email1 = XMLfunctions.getValue(e, isContact ? ""Personal_Email"" : ""Email"");String Home_Fax = XMLfunctions.getValue(e, isContact ? ""Home_Fax"" : ""Fax1"");String Address1 = XMLfunctions.getValue(e, ""Address1"");String Address2 = XMLfunctions.getValue(e, ""Address2"");String City = XMLfunctions.getValue(e, ""City"");String State = XMLfunctions.getValue(e, ""State"");String Zip = XMLfunctions.getValue(e, ""Zip"");String Country = XMLfunctions.getValue(e, ""Country"");String Profile = XMLfunctions.getValue(e, ""Profile"");String success = XMLfunctions.getValue(e, ""success"");String error = XMLfunctions.getValue(e, ""error"");SearchItem item = new SearchItem();item.set(1, Name__Last__First_);item.set(2, phone);item.set(3, phone);item.set(4, Email1);item.set(5, Home_Fax);item.set(6, Address1);item.set(7, Address2);item.set(8, City);item.set(9, State);item.set(10, Zip);item.set(11, Profile);item.set(12, Country);item.set(13, success);item.set(14, error);return item;} catch (Exception e) {line = ""<results status=\""error\""><msg>Can't connect to server</msg></results>"";line = null;}return null;}public static RecordResponse loadRecord(RecordRequest recordRequest) {RecordResponse recordResponse = new RecordResponse();try {DefaultHttpClient httpClient = new DefaultHttpClient();HttpPost httpPost = new HttpPost(recordRequest.isContact() ? URL_RECORD_CONTACT : URL_RECORD_COMPANY);List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(6);nameValuePairs.add(new BasicNameValuePair(""format"", ""xml""));nameValuePairs.add(new BasicNameValuePair(""token"", recordRequest.getToken()));nameValuePairs.add(new BasicNameValuePair(""id"", recordRequest.getId()));httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs));httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs));HttpResponse response = httpClient.execute(httpPost);String line = EntityUtils.toString(response.getEntity());Document document = XMLfunctions.XMLfromString(line);NodeList nodes = document.getElementsByTagName(""response"");Element e = (Element) nodes.item(0);String Name__Last__First_ = XMLfunctions.getValue(e, recordRequest.isContact() ? ""Name__Last__First_"" : ""Name"");String phone = """";if (!recordRequest.isContact()) phone = XMLfunctions.getValue(e, ""Phone"");String Email1 = XMLfunctions.getValue(e, recordRequest.isContact() ? ""Personal_Email"" : ""Email"");String Home_Fax = XMLfunctions.getValue(e, recordRequest.isContact() ? ""Home_Fax"" : ""Fax1"");String Address1 = XMLfunctions.getValue(e, ""Address1"");String Address2 = XMLfunctions.getValue(e, ""Address2"");String City = XMLfunctions.getValue(e, ""City"");String State = XMLfunctions.getValue(e, ""State"");String Zip = XMLfunctions.getValue(e, ""Zip"");String Country = XMLfunctions.getValue(e, ""Country"");String Profile = XMLfunctions.getValue(e, ""Profile"");String success = XMLfunctions.getValue(e, ""success"");String error = XMLfunctions.getValue(e, ""error"");recordResponse.setName(Name__Last__First_);recordResponse.setPhone(phone);recordResponse.setEmail(Email1);recordResponse.setHomeFax(Home_Fax);recordResponse.setAddress1(Address1);recordResponse.setAddress2(Address2);recordResponse.setCity(City);recordResponse.setState(State);recordResponse.setZip(Zip);recordResponse.setProfile(Profile);recordResponse.setCountry(Country);recordResponse.setSuccess(success);recordResponse.setError(error);} catch (Exception e) {}return recordResponse;}public static void main(String[] args) throws IOException {System.out.println(""Start filtering zgps..."");final Config config = ConfigUtils.loadConfig(args[0]);final String CONFIG_MODULE = ""GPSFilterZGPS"";File sourceFileSelectedStages = new File(config.findParam(CONFIG_MODULE, ""sourceFileSelectedStages""));File sourceFileZGPS = new File(config.findParam(CONFIG_MODULE, ""sourceFileZGPS""));File targetFile = new File(config.findParam(CONFIG_MODULE, ""targetFile""));System.out.println(""Start reading selected stages..."");FilterZGPSSelectedStages selectedStages = new FilterZGPSSelectedStages();selectedStages.createSelectedStages(sourceFileSelectedStages);System.out.println(""Done. "" + selectedStages.getSelectedStages().size() + "" stages were stored"");System.out.println(""Start reading and writing zgps..."");try {BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(sourceFileZGPS)));BufferedWriter out = new BufferedWriter(new FileWriter(targetFile));out.write(in.readLine());out.newLine();String lineFromInputFile;while ((lineFromInputFile = in.readLine()) != null) {String[] entries = lineFromInputFile.split(""\t"");if (selectedStages.containsStage(Integer.parseInt(entries[0]), Integer.parseInt(entries[1]), Integer.parseInt(entries[2]))) {out.write(lineFromInputFile);out.newLine();out.flush();}}in.close();out.close();} catch (FileNotFoundException e) {System.out.println(""Could not find source file for selected stages."");e.printStackTrace();} catch (IOException e) {System.out.println(""IO Exception while reading or writing zgps."");e.printStackTrace();}System.out.println(""Done."");}"	5
"public int subclass(int objectId, String description) throws FidoDatabaseException, ObjectNotFoundException {try {Connection conn = null;Statement stmt = null;ResultSet rs = null;try {String sql = ""insert into Objects (Description) "" + ""values ('"" + description + ""')"";conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();if (contains(stmt, objectId) == false) throw new ObjectNotFoundException(objectId);stmt.executeUpdate(sql);int id;sql = ""select currval('objects_objectid_seq')"";rs = stmt.executeQuery(sql);if (rs.next() == false) throw new SQLException(""No rows returned from select currval() query""); else id = rs.getInt(1);ObjectLinkTable objectLinkList = new ObjectLinkTable();objectLinkList.linkObjects(stmt, id, ""isa"", objectId);conn.commit();return id;} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (rs != null) rs.close();if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public int instantiate(int objectId, String description) throws FidoDatabaseException, ObjectNotFoundException, ClassLinkTypeNotFoundException {try {Connection conn = null;Statement stmt = null;ResultSet rs = null;try {String sql = ""insert into Objects (Description) "" + ""values ('"" + description + ""')"";conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();if (contains(stmt, objectId) == false) throw new ObjectNotFoundException(objectId);stmt.executeUpdate(sql);int id;sql = ""select currval('objects_objectid_seq')"";rs = stmt.executeQuery(sql);if (rs.next() == false) throw new SQLException(""No rows returned from select currval() query""); else id = rs.getInt(1);ObjectLinkTable objectLinkList = new ObjectLinkTable();objectLinkList.linkObjects(stmt, id, ""instance"", objectId);conn.commit();return id;} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (rs != null) rs.close();if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public void deleteInstance(int instanceId) throws FidoDatabaseException, ObjectNotFoundException {try {Connection conn = null;Statement stmt = null;try {conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();if (contains(stmt, instanceId) == false) throw new ObjectNotFoundException(instanceId);ObjectLinkTable objectLinkList = new ObjectLinkTable();ObjectAttributeTable objectAttributeList = new ObjectAttributeTable();objectLinkList.deleteObject(stmt, instanceId);objectAttributeList.deleteObject(stmt, instanceId);stmt.executeUpdate(""delete from Objects where ObjectId = "" + instanceId);conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}private File downloadURL(URL url) {MerlotDebug.msg(""Downloading URL: "" + url);String filename = url.getFile();if (filename.indexOf('/') >= 0) {filename = filename.substring(filename.lastIndexOf('/') + 1);}File userPluginsDir = new File(XMLEditorSettings.USER_MERLOT_DIR, ""plugins"");File cache = new File(userPluginsDir, filename);try {if (!userPluginsDir.exists()) {userPluginsDir.mkdirs();}URLConnection connection = url.openConnection();if (cache.exists() && cache.canRead()) {connection.connect();long remoteTimestamp = connection.getLastModified();if (remoteTimestamp == 0 || remoteTimestamp > cache.lastModified()) {cache = downloadContent(connection, cache);} else {MerlotDebug.msg(""Using cached version for URL: "" + url);}} else {cache = downloadContent(connection, cache);}} catch (IOException ex) {MerlotDebug.exception(ex);}if (cache != null && cache.exists()) {return cache;} else {return null;}}public synchronized String encrypt(String plaintext) throws Exception {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {throw new Exception(e.getMessage());}try {md.update(plaintext.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {throw new Exception(e.getMessage());}byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}private static String fetchUrl(String url, boolean keepLineEnds) throws IOException, MalformedURLException {URLConnection destConnection = (new URL(url)).openConnection();BufferedReader br;String inputLine;StringBuffer doc = new StringBuffer();String contentEncoding;destConnection.setRequestProperty(""Accept-Encoding"", ""gzip"");if (proxyAuth != null) destConnection.setRequestProperty(""Proxy-Authorization"", proxyAuth);destConnection.connect();contentEncoding = destConnection.getContentEncoding();if ((contentEncoding != null) && contentEncoding.equals(""gzip"")) {br = new BufferedReader(new InputStreamReader(new GZIPInputStream(destConnection.getInputStream())));} else {br = new BufferedReader(new InputStreamReader(destConnection.getInputStream()));}while ((inputLine = br.readLine()) != null) {if (keepLineEnds) doc.append(inputLine + ""\n""); else doc.append(inputLine);}br.close();return doc.toString();}protected Document getRawResults(String urlString, Map args) throws Exception {int count = 0;Iterator keys = args.keySet().iterator();while (keys.hasNext()) {String sep = count++ == 0 ? ""?"" : ""&"";String name = (String) keys.next();if (args.get(name) != null) {urlString += sep + name + ""="" + args.get(name);}}URL url = new URL(urlString);URLConnection conn = url.openConnection();conn.connect();SAXBuilder builder = new SAXBuilder();return builder.build(conn.getInputStream());}public boolean renameTo(File dest) throws IOException {if (dest == null) {throw new NullPointerException(""dest"");}if (!file.renameTo(dest)) {FileInputStream inputStream = new FileInputStream(file);FileOutputStream outputStream = new FileOutputStream(dest);FileChannel in = inputStream.getChannel();FileChannel out = outputStream.getChannel();long destsize = in.transferTo(0, size, out);in.close();out.close();if (destsize == size) {file.delete();file = dest;isRenamed = true;return true;} else {dest.delete();return false;}}file = dest;isRenamed = true;return true;}private static void zipFolder(File folder, ZipOutputStream zipOutputStream, String relativePath) throws IOException {File[] children = folder.listFiles();for (int i = 0; i < children.length; i++) {File child = children[i];if (child.isFile()) {String zipEntryName = children[i].getCanonicalPath().replace(relativePath + File.separator, """");ZipEntry entry = new ZipEntry(zipEntryName);zipOutputStream.putNextEntry(entry);InputStream inputStream = new FileInputStream(child);IOUtils.copy(inputStream, zipOutputStream);inputStream.close();} else {ZipUtil.zipFolder(child, zipOutputStream, relativePath);}}}private static void addFolderToZip(File folder, ZipOutputStream zip, String baseName) throws IOException {File[] files = folder.listFiles();for (File file : files) {if (file.isDirectory()) {addFolderToZip(file, zip, baseName);} else {String name = file.getAbsolutePath().substring(baseName.length());ZipEntry zipEntry = new ZipEntry(name);zip.putNextEntry(zipEntry);IOUtils.copy(new FileInputStream(file), zip);zip.closeEntry();}}}"	5
"public List<SatelliteElementSet> parseTLE(String urlString) throws IOException {List<SatelliteElementSet> elementSets = new ArrayList<SatelliteElementSet>();BufferedReader reader = null;try {String line = null;int i = 0;URL url = new URL(urlString);String[] lines = new String[3];reader = new BufferedReader(new InputStreamReader(url.openStream()));while ((line = reader.readLine()) != null) {i++;switch(i) {case 1:{lines[0] = line;break;}case 2:{lines[1] = line;break;}case 3:{lines[2] = line;Long catnum = Long.parseLong(StringUtils.strip(lines[1].substring(2, 7)));long setnum = Long.parseLong(StringUtils.strip(lines[1].substring(64, 68)));elementSets.add(new SatelliteElementSet(catnum, lines, setnum, Calendar.getInstance(TZ).getTime()));i = 0;break;}default:{throw new IOException(""TLE string did not contain three elements"");}}}} finally {if (null != reader) {reader.close();}}return elementSets;}public FlickrObject perform(boolean chkResponse) throws FlickrException {validate();String data = getRequestData();OutputStream os = null;InputStream is = null;try {URL url = null;try {url = new URL(m_url);} catch (MalformedURLException mux) {IllegalStateException iax = new IllegalStateException();iax.initCause(mux);throw iax;}HttpURLConnection con = (HttpURLConnection) url.openConnection();con.setDoOutput(true);con.setRequestMethod(""POST"");os = con.getOutputStream();OutputStreamWriter osw = new OutputStreamWriter(os);osw.write(data);osw.flush();is = con.getInputStream();return processRespons(is, chkResponse);} catch (FlickrException fx) {throw fx;} catch (IOException iox) {throw new FlickrException(iox);} finally {if (os != null) try {os.close();} catch (IOException _) {}if (is != null) try {is.close();} catch (IOException _) {}}}private final void saveCopy(String source, String destination) {BufferedInputStream from = null;BufferedOutputStream to = null;try {from = new BufferedInputStream(new FileInputStream(source));to = new BufferedOutputStream(new FileOutputStream(destination));byte[] buffer = new byte[65535];int bytes_read;while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read);} catch (Exception e) {LogWriter.writeLog(""Exception "" + e + "" copying file"");}try {to.close();from.close();} catch (Exception e) {LogWriter.writeLog(""Exception "" + e + "" closing files"");}to = null;from = null;}public final void saveAsCopy(String current_image, String destination) {BufferedInputStream from = null;BufferedOutputStream to = null;String source = temp_dir + key + current_image;try {from = new BufferedInputStream(new FileInputStream(source));to = new BufferedOutputStream(new FileOutputStream(destination));byte[] buffer = new byte[65535];int bytes_read;while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read);} catch (Exception e) {LogWriter.writeLog(""Exception "" + e + "" copying file"");}try {to.close();from.close();} catch (Exception e) {LogWriter.writeLog(""Exception "" + e + "" closing files"");}}public static final void copy(String source, String destination) {BufferedInputStream from = null;BufferedOutputStream to = null;try {from = new BufferedInputStream(new FileInputStream(source));to = new BufferedOutputStream(new FileOutputStream(destination));byte[] buffer = new byte[65535];int bytes_read;while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read);} catch (Exception e) {LogWriter.writeLog(""Exception "" + e + "" copying file"");}try {to.close();from.close();} catch (Exception e) {LogWriter.writeLog(""Exception "" + e + "" closing files"");}}public static void doVersionCheck(View view) {view.showWaitCursor();try {URL url = new URL(jEdit.getProperty(""version-check.url""));InputStream in = url.openStream();BufferedReader bin = new BufferedReader(new InputStreamReader(in));String line;String develBuild = null;String stableBuild = null;while ((line = bin.readLine()) != null) {if (line.startsWith("".build"")) develBuild = line.substring(6).trim(); else if (line.startsWith("".stablebuild"")) stableBuild = line.substring(12).trim();}bin.close();if (develBuild != null && stableBuild != null) {doVersionCheck(view, stableBuild, develBuild);}} catch (IOException e) {String[] args = { jEdit.getProperty(""version-check.url""), e.toString() };GUIUtilities.error(view, ""read-error"", args);}view.hideWaitCursor();}public static void copyFile(File src, File dest) throws IOException {FileInputStream fis = new FileInputStream(src);FileOutputStream fos = new FileOutputStream(dest);java.nio.channels.FileChannel channelSrc = fis.getChannel();java.nio.channels.FileChannel channelDest = fos.getChannel();channelSrc.transferTo(0, channelSrc.size(), channelDest);fis.close();fos.close();}public DataRecord addRecord(InputStream input) throws DataStoreException {File temporary = null;try {temporary = newTemporaryFile();DataIdentifier tempId = new DataIdentifier(temporary.getName());usesIdentifier(tempId);long length = 0;MessageDigest digest = MessageDigest.getInstance(DIGEST);OutputStream output = new DigestOutputStream(new FileOutputStream(temporary), digest);try {length = IOUtils.copyLarge(input, output);} finally {output.close();}DataIdentifier identifier = new DataIdentifier(digest.digest());File file;synchronized (this) {usesIdentifier(identifier);file = getFile(identifier);System.out.println(""new file name: "" + file.getName());File parent = file.getParentFile();System.out.println(""parent file: "" + file.getParentFile().getName());if (!parent.isDirectory()) {parent.mkdirs();}if (!file.exists()) {temporary.renameTo(file);if (!file.exists()) {throw new IOException(""Can not rename "" + temporary.getAbsolutePath() + "" to "" + file.getAbsolutePath() + "" (media read only?)"");}} else {long now = System.currentTimeMillis();if (file.lastModified() < now) {file.setLastModified(now);}}if (!file.isFile()) {throw new IOException(""Not a file: "" + file);}if (file.length() != length) {throw new IOException(DIGEST + "" collision: "" + file);}}inUse.remove(tempId);return new FileDataRecord(identifier, file);} catch (NoSuchAlgorithmException e) {throw new DataStoreException(DIGEST + "" not available"", e);} catch (IOException e) {throw new DataStoreException(""Could not add record"", e);} finally {if (temporary != null) {temporary.delete();}}}public static String MD5Digest(String source) {MessageDigest digest;try {digest = java.security.MessageDigest.getInstance(""MD5"");digest.update(source.getBytes(""UTF8""));byte[] hash = digest.digest();String strHash = byteArrayToHexString(hash);return strHash;} catch (NoSuchAlgorithmException e) {String msg = ""%s: %s"";msg = String.format(msg, e.getClass().getName(), e.getMessage());logger.error(msg);return null;} catch (UnsupportedEncodingException e) {String msg = ""%s: %s"";msg = String.format(msg, e.getClass().getName(), e.getMessage());logger.error(msg);return null;}}public JobOfferPage(JobPageLink link) {this.link = link;try {URL url = new URL(link.getUrl());URLConnection urlConn = url.openConnection();urlConn.setRequestProperty(""User-Agent"", ""Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 4.0)"");urlConn.setRequestProperty(""Accept-Language"", ""en-us"");this.content = (String) url.getContent();} catch (IOException e) {e.printStackTrace();}this.jobOfferHtmlList = extractJobOfferHtmlList();}"	5
"private String signMethod() {String str = API.SHARED_SECRET;Vector<String> v = new Vector<String>(parameters.keySet());Collections.sort(v);for (String key : v) {str += key + parameters.get(key);}MessageDigest m = null;try {m = MessageDigest.getInstance(""MD5"");m.update(str.getBytes(), 0, str.length());return new BigInteger(1, m.digest()).toString(16);} catch (NoSuchAlgorithmException e) {return null;}}public void setImage(java.awt.Image img) {if (imageName != null && imageName.length() > 0) {try {InputStream url = currentProject.getUrl(imageName).openStream();image = new org.eclipse.swt.graphics.Image(getDisplay(), url);} catch (IOException e) {e.printStackTrace();}Display.getDefault().asyncExec(new Runnable() {public void run() {redraw();}});}}private void work(String[] args) throws Exception {String dictLocation = CONTENT_URL;String cpeContentDirName = CONTENT_DIR;String fn = dictLocation.substring(dictLocation.lastIndexOf(""/"") + 1);File destFile = new File(cpeContentDirName + File.separator + fn);URL url = new URL(dictLocation);URLConnection conn = url.openConnection();conn.connect();long lmodifiedRemote = conn.getLastModified();boolean needToDownload = false;if (destFile.exists()) {System.out.println(destFile.getAbsolutePath() + "" exists, check modification time"");long lmodifiedLocal = destFile.lastModified();if (lmodifiedRemote > lmodifiedLocal) {System.out.println(""Server file is newer, need to download"");needToDownload = true;} else {System.out.println(""Local version is newer, no need to download"");}} else {System.out.println(""Local version doesn't exist, need to download"");needToDownload = true;}if (needToDownload) {InputStream is = conn.getInputStream();FileOutputStream fos = new FileOutputStream(destFile);byte[] buff = new byte[8192];int read = 0;while ((read = is.read(buff)) > 0) {fos.write(buff, 0, read);}fos.flush();fos.close();is.close();}}protected void readLockssConfigFile(URL url, List<String> peers) {PrintWriter out = null;try {out = new PrintWriter(new OutputStreamWriter(System.out, ""utf8""), true);out.println(""unicode-output-ready"");} catch (UnsupportedEncodingException ex) {System.out.println(ex.toString());return;}XMLInputFactory xmlif = XMLInputFactory.newInstance();xmlif.setProperty(""javax.xml.stream.isCoalescing"", java.lang.Boolean.TRUE);xmlif.setProperty(""javax.xml.stream.isNamespaceAware"", java.lang.Boolean.TRUE);XMLStreamReader xmlr = null;BufferedInputStream stream = null;long starttime = System.currentTimeMillis();out.println(""Starting to parse the remote config xml["" + url + ""]"");int elementCount = 0;int topPropertyCounter = 0;int propertyTagLevel = 0;try {stream = new BufferedInputStream(url.openStream());xmlr = xmlif.createXMLStreamReader(stream, ""utf8"");int eventType = xmlr.getEventType();String curElement = """";String targetTagName = ""property"";String peerListAttrName = ""id.initialV3PeerList"";boolean sentinel = false;boolean valueline = false;while (xmlr.hasNext()) {eventType = xmlr.next();switch(eventType) {case XMLEvent.START_ELEMENT:curElement = xmlr.getLocalName();if (curElement.equals(""property"")) {topPropertyCounter++;propertyTagLevel++;int count = xmlr.getAttributeCount();if (count > 0) {for (int i = 0; i < count; i++) {if (xmlr.getAttributeValue(i).equals(peerListAttrName)) {sentinel = true;out.println(""!!!!!! hit the"" + peerListAttrName);out.println(""attr="" + xmlr.getAttributeName(i));out.println(""vl="" + xmlr.getAttributeValue(i));out.println("">>>>>>>>>>>>>> start :property tag ("" + topPropertyCounter + "") >>>>>>>>>>>>>>"");out.println("">>>>>>>>>>>>>> property tag level ("" + propertyTagLevel + "") >>>>>>>>>>>>>>"");out.print(xmlr.getAttributeName(i).toString());out.print(""="");out.print(""\"""");out.print(xmlr.getAttributeValue(i));out.println("""");}}}}if (sentinel && curElement.equals(""value"")) {valueline = true;String ipAd = xmlr.getElementText();peers.add(ipAd);}break;case XMLEvent.CHARACTERS:break;case XMLEvent.ATTRIBUTE:if (curElement.equals(targetTagName)) {}break;case XMLEvent.END_ELEMENT:if (xmlr.getLocalName().equals(""property"")) {if (sentinel) {out.println(""========= end of the target property element"");sentinel = false;valueline = false;}elementCount++;propertyTagLevel--;} else {}break;case XMLEvent.END_DOCUMENT:}}} catch (MalformedURLException ue) {} catch (IOException ex) {} catch (XMLStreamException ex) {} finally {if (xmlr != null) {try {xmlr.close();} catch (XMLStreamException ex) {}}if (stream != null) {try {stream.close();} catch (IOException ex) {}}}}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}public Resource get(URL serviceUrl, String resourceId) throws Exception {Resource resource = new Resource();String openurl = serviceUrl.toString() + ""?url_ver=Z39.88-2004"" + ""&rft_id="" + URLEncoder.encode(resourceId, ""UTF-8"") + ""&svc_id="" + SVCID_ADORE4;log.debug(""OpenURL Request: "" + openurl);URL url;try {url = new URL(openurl);HttpURLConnection huc = (HttpURLConnection) (url.openConnection());int code = huc.getResponseCode();if (code == 200) {InputStream is = huc.getInputStream();resource.setBytes(StreamUtil.getByteArray(is));resource.setContentType(huc.getContentType());} else {log.error(""An error of type "" + code + "" occurred for "" + url.toString());throw new Exception(""Cannot get "" + url.toString());}} catch (MalformedURLException e) {throw new Exception(""A MalformedURLException occurred for "" + openurl);} catch (IOException e) {throw new Exception(""An IOException occurred attempting to connect to "" + openurl);}return resource;}public static String md5Hash(String src) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(src.getBytes());return bytesArrayToHexString(md.digest());} catch (Exception e) {return null;}}public void sendMessageToServer(String msg, Map<String, String> args, StringCallback cb, URLConstructor ctor) {try {int tmpPort = port;for (; tmpPort < port + 10; tmpPort++) {Socket tmpSock;try {tmpSock = socketsManager.connect(new InetSocketAddress(host, port), 5000);tmpSock.close();break;} catch (IOException e) {}}Map<String, String> newArgs = new HashMap<String, String>(args);newArgs.put(""_f"", String.valueOf(System.currentTimeMillis()));String request = ctor.constructURL(msg, newArgs);HttpClient client = new SimpleLimeHttpClient();HttpGet get = new HttpGet(""http://"" + host + "":"" + port + ""/"" + request);HttpProtocolParams.setVersion(client.getParams(), HttpVersion.HTTP_1_1);HttpResponse response = client.execute(get);String res = """";if (response.getEntity() != null) {String result;if (response.getEntity() != null) {result = EntityUtils.toString(response.getEntity());} else {result = null;}res = result;}cb.process(res);} catch (IOException e) {fail(e);} catch (HttpException e) {fail(e);} catch (URISyntaxException e) {fail(e);} catch (InterruptedException e) {fail(e);}}private void getServiceReponse(String service, NameSpaceDefinition nsDefinition) throws Exception {Pattern pattern = Pattern.compile(""(?i)(?:.*(xmlns(?:\\:\\w+)?=\\\""http\\:\\/\\/www\\.ivoa\\.net\\/.*"" + service + ""[^\\\""]*\\\"").*)"");pattern = Pattern.compile("".*xmlns(?::\\w+)?=(\""[^\""]*(?i)(?:"" + service + "")[^\""]*\"").*"");logger.debug(""read "" + this.url + service);BufferedReader in = new BufferedReader(new InputStreamReader((new URL(this.url + service)).openStream()));String inputLine;BufferedWriter bfw = new BufferedWriter(new FileWriter(this.baseDirectory + service + "".xml""));boolean found = false;while ((inputLine = in.readLine()) != null) {if (!found) {Matcher m = pattern.matcher(inputLine);if (m.matches()) {nsDefinition.init(""xmlns:vosi="" + m.group(1));found = true;}}bfw.write(inputLine + ""\n"");}in.close();bfw.close();}private void setNodekeyInJsonResponse(String service) throws Exception {String filename = this.baseDirectory + service + "".json"";Scanner s = new Scanner(new File(filename));PrintWriter fw = new PrintWriter(new File(filename + "".new""));while (s.hasNextLine()) {fw.println(s.nextLine().replaceAll(""NODEKEY"", this.key));}s.close();fw.close();(new File(filename + "".new"")).renameTo(new File(filename));}"	5
"protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {if (request.getParameter(""edit"") != null) {try {User cu = (User) request.getSession().getAttribute(""currentuser"");UserDetails ud = cu.getUserDetails();String returnTo = ""editprofile.jsp"";if (!request.getParameter(""password"").equals("""")) {String password = request.getParameter(""password"");MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(new String(password).getBytes());byte[] hash = md.digest();String pass = new BigInteger(1, hash).toString(16);cu.setClientPassword(pass);}ud.setFirstName(request.getParameter(""fname""));ud.setLastName(request.getParameter(""lname""));ud.setEmailAddress(request.getParameter(""email""));ud.setAddress(request.getParameter(""address""));ud.setZipcode(request.getParameter(""zipcode""));ud.setTown(request.getParameter(""town""));ud.setCountry(request.getParameter(""country""));ud.setTrackingColor(request.getParameter(""input1""));String vis = request.getParameter(""visibility"");if (vis.equals(""self"")) {cu.setVisibility(0);} else if (vis.equals(""friends"")) {cu.setVisibility(1);} else if (vis.equals(""all"")) {cu.setVisibility(2);} else {response.sendRedirect(""error.jsp?id=8"");}em.getTransaction().begin();em.persist(cu);em.getTransaction().commit();response.sendRedirect(returnTo);} catch (Throwable e) {e.printStackTrace();response.sendRedirect(""error.jsp?id=5"");}return;}}public void loadProperties() {try {java.util.Properties props = new java.util.Properties();java.net.URL url = ClassLoader.getSystemResource(""env.properties"");props.load(url.openStream());this.proxyCertificatePath = props.getProperty(""proxy.certificate.path"");this.dummyFileDirName = props.getProperty(""delete.dummyFileDirName"");this.idleTimeTestDelay = new Integer(props.getProperty(""idleTimeTestDelaySeconds""));if (props.getProperty(""gridftp.timeoutMilliSecs"") != null) {this.gridftpTimeoutMilliSecs = new Integer(props.getProperty(""gridftp.timeoutMilliSecs"").trim());}this.assertContentInWriteTests = new Boolean(props.getProperty(""assertContentInWriteTests""));this.gridftpHost1 = props.getProperty(""gridftp.host1"");this.gridftpPort1 = new Integer(props.getProperty(""gridftp.port1""));this.gridftpHost2 = props.getProperty(""gridftp.host2"");this.gridftpPort2 = new Integer(props.getProperty(""gridftp.port2""));this.srbGsiHost = props.getProperty(""srb.gsi.host"");this.srbGsiPort = new Integer(props.getProperty(""srb.gsi.port""));this.srbGsiPortMin = new Integer(props.getProperty(""srb.gsi.port.min""));this.srbGsiPortMax = new Integer(props.getProperty(""srb.gsi.port.max""));this.srbGsiDefaultResource = props.getProperty(""srb.gsi.defaultResource"");this.srbEncryptHost = props.getProperty(""srb.encrypt.host"");this.srbEncryptPort = new Integer(props.getProperty(""srb.encrypt.port""));this.srbEncryptPortMin = new Integer(props.getProperty(""srb.encrypt.port.min""));this.srbEncryptPortMax = new Integer(props.getProperty(""srb.encrypt.port.max""));this.srbEncryptDefaultResource = props.getProperty(""srb.encrypt.defaultResource"");this.srbEncryptHomeDirectory = props.getProperty(""srb.encrypt.homeDirectory"");this.srbEncryptMcatZone = props.getProperty(""srb.encrypt.mcatZone"");this.srbEncryptMdasDomainName = props.getProperty(""srb.encrypt.mdasDomainName"");this.srbEncryptUsername = props.getProperty(""srb.encrypt.username"");this.srbEncryptPassword = props.getProperty(""srb.encrypt.password"");this.sftpHost = props.getProperty(""sftp.host"");this.sftpPort = new Integer(props.getProperty(""sftp.port""));this.sftpPath = props.getProperty(""sftp.path"");this.sftpUsername = props.getProperty(""sftp.username"");this.sftpPassword = props.getProperty(""sftp.password"");if (props.getProperty(""sftp.timeoutMilliSecs"") != null) {this.sftpTimeoutMilliSecs = new Integer(props.getProperty(""sftp.timeoutMilliSecs"").trim());}irodsEncryptHost = props.getProperty(""irods.encrypt.host"");irodsEncryptPort = new Integer(props.getProperty(""irods.encrypt.port""));irodsEncryptResource = props.getProperty(""irods.encrypt.defaultResource"");irodsEncryptHomeDirectory = props.getProperty(""irods.encrypt.homeDirectory"");irodsEncryptZone = props.getProperty(""irods.encrypt.zone"");irodsEncryptUsername = props.getProperty(""irods.encrypt.username"");irodsEncryptPassword = props.getProperty(""irods.encrypt.password"");irodsGsiHost = props.getProperty(""irods.gsi.host"");irodsGsiPort = new Integer(props.getProperty(""irods.gsi.port""));irodsGsiZone = props.getProperty(""irods.gsi.zone"");srbQueryTimeout = new Integer(props.getProperty(""srb.query.timeout""));this.ftpUri = props.getProperty(""ftp.uri"");this.httpUri = props.getProperty(""http.uri"");this.httpProxy = props.getProperty(""http.proxy"");this.httpPort = new Integer(props.getProperty(""http.port""));this.fileUri = props.getProperty(""file.uri"");java.net.URI tempUri = new java.net.URI(this.fileUri);File f = new File(tempUri);if (!f.exists()) {String temp = System.getProperty(""java.io.tmpdir"");System.out.println(""Cannot list ["" + fileUri + ""] listing java.io.tmpdir instead ["" + temp + ""]"");this.fileUri = temp;}useSrbGsiInFsCopyTest = new Boolean(props.getProperty(""srb.gsi.use.in.fs.copy.test""));useSrbEncryptInFsCopyTest = new Boolean(props.getProperty(""srb.encrypt.use.in.fs.copy.test""));useGridftpHost1InFsCopyTest = new Boolean(props.getProperty(""gridftp.host1.use.in.fs.copy.test""));useGridftpHost2InFsCopyTest = new Boolean(props.getProperty(""gridftp.host2.use.in.fs.copy.test""));useSftpInFsCopyTest = new Boolean(props.getProperty(""sftp.use.in.fs.copy.test""));useLocalFileInFsCopyTest = new Boolean(props.getProperty(""file.use.in.fs.copy.test""));useIrodsGsiCopyTest = new Boolean(props.getProperty(""irods.gsi.use.in.fs.copy.test""));useIrodsEncryptCopyTest = new Boolean(props.getProperty(""irods.encrypt.use.in.fs.copy.test""));assertNotNull(this.proxyCertificatePath);assertNotNull(this.dummyFileDirName);assertNotNull(this.idleTimeTestDelay);assertNotNull(this.ftpUri);assertNotNull(this.httpUri);} catch (Exception ex) {Logger.getLogger(AbstractTestClass.class.getName()).log(Level.SEVERE, null, ex);fail(""Unable to locate and load 'testsettings.properties' file in source "" + ex);}}public void register(URL codeBase, String filePath) throws Exception {Properties properties = new Properties();URL url = new URL(codeBase + filePath);properties.load(url.openStream());initializeContext(codeBase, properties);}private void renameTo(File from, File to) {if (!from.exists()) return;if (to.exists()) to.delete();boolean worked = false;try {worked = from.renameTo(to);} catch (Exception e) {database.logError(this, """" + e, null);}if (!worked) {database.logWarning(this, ""Could not rename GEDCOM to "" + to.getAbsolutePath(), null);try {to.delete();final FileReader in = new FileReader(from);final FileWriter out = new FileWriter(to);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();from.delete();} catch (Exception e) {database.logError(this, """" + e, null);}}}public static void copy(String a, String b) throws IOException {File inputFile = new File(a);File outputFile = new File(b);FileReader in = new FileReader(inputFile);FileWriter out = new FileWriter(outputFile);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();}public static String getStringFromURL(URL url) {try {if (url == null) {return null;}URLConnection conn = url.openConnection();conn.connect();if (conn instanceof HttpURLConnection) {int status = ((HttpURLConnection) conn).getResponseCode();if (status != HttpURLConnection.HTTP_OK) {return null;}}int available = conn.getContentLength();InputStream is = conn.getInputStream();byte buffer[] = new byte[available];int pos = 0;while (available > 0) {int amount = is.read(buffer, pos, available);available -= amount;pos += amount;}is.close();String tmp = new String(buffer);return tmp;} catch (Exception ex) {System.out.println(ex);return """";}}public static void copyZip() {InputStream is;OutputStream os;String javacZip = """";try {if (""windows"".equalsIgnoreCase(Compilador.getSo())) {javacZip = ""javacWin.zip"";is = UnZip.class.getResourceAsStream(""javacWin.zip"");} else if (""linux"".equalsIgnoreCase(Compilador.getSo())) {javacZip = ""javacLinux.zip"";is = UnZip.class.getResourceAsStream(""javacLinux.zip"");}is = UnZip.class.getResourceAsStream(javacZip);File tempZip = File.createTempFile(""tempJavacJTraductor"", "".zip"");tempZip.mkdir();tempZip.deleteOnExit();os = FileUtils.openOutputStream(tempZip);IOUtils.copy(is, os);is.close();os.close();extractZip(tempZip.getPath());} catch (Exception ex) {JOptionPane.showMessageDialog(PseutemView.mainPanel, ""Error al copiar los archivos temporales necesarios para ejecutar el programa:\n\n"" + ex, ""Error copiando."", JOptionPane.ERROR_MESSAGE);}}protected void download() {boolean connected = false;String outcome = """";try {InputStream is = null;try {SESecurityManager.setThreadPasswordHandler(this);synchronized (this) {if (destroyed) {return;}scratch_file = AETemporaryFileHandler.createTempFile();raf = new RandomAccessFile(scratch_file, ""rw"");}HttpURLConnection connection;int response;connection = (HttpURLConnection) original_url.openConnection();connection.setRequestProperty(""Connection"", ""Keep-Alive"");connection.setRequestProperty(""User-Agent"", user_agent);int time_remaining = listener.getPermittedTime();if (time_remaining > 0) {Java15Utils.setConnectTimeout(connection, time_remaining);}connection.connect();time_remaining = listener.getPermittedTime();if (time_remaining < 0) {throw (new IOException(""Timeout during connect""));}Java15Utils.setReadTimeout(connection, time_remaining);connected = true;response = connection.getResponseCode();last_response = response;last_response_retry_after_secs = -1;if (response == 503) {long retry_after_date = new Long(connection.getHeaderFieldDate(""Retry-After"", -1L)).longValue();if (retry_after_date <= -1) {last_response_retry_after_secs = connection.getHeaderFieldInt(""Retry-After"", -1);} else {last_response_retry_after_secs = (int) ((retry_after_date - System.currentTimeMillis()) / 1000);if (last_response_retry_after_secs < 0) {last_response_retry_after_secs = -1;}}}is = connection.getInputStream();if (response == HttpURLConnection.HTTP_ACCEPTED || response == HttpURLConnection.HTTP_OK || response == HttpURLConnection.HTTP_PARTIAL) {byte[] buffer = new byte[64 * 1024];int requests_outstanding = 1;while (!destroyed) {int permitted = listener.getPermittedBytes();if (requests_outstanding == 0 || permitted < 1) {permitted = 1;Thread.sleep(100);}int len = is.read(buffer, 0, Math.min(permitted, buffer.length));if (len <= 0) {break;}synchronized (this) {try {raf.write(buffer, 0, len);} catch (Throwable e) {outcome = ""Write failed: "" + e.getMessage();ExternalSeedException error = new ExternalSeedException(outcome, e);error.setPermanentFailure(true);throw (error);}}listener.reportBytesRead(len);requests_outstanding = checkRequests();}checkRequests();} else {outcome = ""Connection failed: "" + connection.getResponseMessage();ExternalSeedException error = new ExternalSeedException(outcome);error.setPermanentFailure(true);throw (error);}} catch (IOException e) {if (con_fail_is_perm_fail && !connected) {outcome = ""Connection failed: "" + e.getMessage();ExternalSeedException error = new ExternalSeedException(outcome);error.setPermanentFailure(true);throw (error);} else {outcome = ""Connection failed: "" + Debug.getNestedExceptionMessage(e);if (last_response_retry_after_secs >= 0) {outcome += "", Retry-After: "" + last_response_retry_after_secs + "" seconds"";}ExternalSeedException excep = new ExternalSeedException(outcome, e);if (e instanceof FileNotFoundException) {excep.setPermanentFailure(true);}throw (excep);}} catch (ExternalSeedException e) {throw (e);} catch (Throwable e) {if (e instanceof ExternalSeedException) {throw ((ExternalSeedException) e);}outcome = ""Connection failed: "" + Debug.getNestedExceptionMessage(e);throw (new ExternalSeedException(""Connection failed"", e));} finally {SESecurityManager.unsetThreadPasswordHandler();if (is != null) {try {is.close();} catch (Throwable e) {}}}} catch (ExternalSeedException e) {if (!connected && con_fail_is_perm_fail) {e.setPermanentFailure(true);}destroy(e);}}public static String genDigest(String info) {MessageDigest alga;byte[] digesta = null;try {alga = MessageDigest.getInstance(""SHA-1"");alga.update(info.getBytes());digesta = alga.digest();} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return byte2hex(digesta);}public Scene load(URL url) throws FileNotFoundException, IncorrectFormatException, ParsingErrorException {BufferedReader reader;if (baseUrl == null) setBaseUrlFromUrl(url);try {reader = new BufferedReader(new InputStreamReader(url.openStream()));} catch (IOException e) {throw new FileNotFoundException(e.getMessage());}fromUrl = true;return load(reader);}"	5
"public static void copy(FileInputStream in, File destination) throws IOException {FileChannel srcChannel = null;FileChannel dstChannel = null;try {srcChannel = in.getChannel();dstChannel = new FileOutputStream(destination).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());} finally {if (srcChannel != null) {srcChannel.close();}if (dstChannel != null) {dstChannel.close();}}}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}public static void copyFile(String fromFile, String toFile) {FileInputStream from = null;FileOutputStream to = null;try {from = new FileInputStream(fromFile);to = new FileOutputStream(toFile);byte[] buffer = new byte[4096];int bytesRead;while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead);} catch (FileNotFoundException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();} finally {if (from != null) try {from.close();} catch (IOException e) {;}if (to != null) try {to.close();} catch (IOException e) {;}}}public boolean executeUpdate(String strSql) throws SQLException {getConnection();boolean flag = false;stmt = con.createStatement();logger.info(""###############::执行SQL语句操作(更新数据 无参数):"" + strSql);try {if (0 < stmt.executeUpdate(strSql)) {close_DB_Object();flag = true;con.commit();}} catch (SQLException ex) {logger.info(""###############Error DBManager Line126::执行SQL语句操作(更新数据 无参数):"" + strSql + ""失败!"");flag = false;con.rollback();throw ex;}return flag;}public boolean executeUpdate(String strSql, HashMap<Integer, Object> prams) throws SQLException, ClassNotFoundException {getConnection();boolean flag = false;try {pstmt = con.prepareStatement(strSql);setParamet(pstmt, prams);logger.info(""###############::执行SQL语句操作(更新数据 有参数):"" + strSql);if (0 < pstmt.executeUpdate()) {close_DB_Object();flag = true;con.commit();}} catch (SQLException ex) {logger.info(""###############Error DBManager Line121::执行SQL语句操作(更新数据 无参数):"" + strSql + ""失败!"");flag = false;con.rollback();throw ex;} catch (ClassNotFoundException ex) {logger.info(""###############Error DBManager Line152::执行SQL语句操作(更新数据 无参数):"" + strSql + ""失败! 参数设置类型错误!"");con.rollback();throw ex;}return flag;}public void run() {FileInputStream src;FileOutputStream dest;try {dest = new FileOutputStream(srcName);} catch (FileNotFoundException e) {e.printStackTrace();return;}FileChannel destC = dest.getChannel();FileChannel srcC;ByteBuffer buf = ByteBuffer.allocateDirect(BUFFER_SIZE);try {int fileNo = 0;while (true) {int i = 1;String destName = srcName + ""_"" + fileNo;src = new FileInputStream(destName);srcC = src.getChannel();while ((i > 0)) {i = srcC.read(buf);buf.flip();destC.write(buf);buf.compact();}srcC.close();src.close();fileNo++;}} catch (IOException e1) {e1.printStackTrace();return;}}@Overridepublic List<SheetFullName> importSheets(INetxiliaSystem workbookProcessor, WorkbookId workbookName, URL url, IProcessingConsole console) throws ImportException {try {return importSheets(workbookProcessor, workbookName, url.openStream(), console);} catch (Exception e) {throw new ImportException(url, ""Cannot open workbook:"" + e, e);}}public void copy(File src, File dest) throws FileNotFoundException, IOException {FileInputStream srcStream = new FileInputStream(src);FileOutputStream destStream = new FileOutputStream(dest);FileChannel srcChannel = srcStream.getChannel();FileChannel destChannel = destStream.getChannel();srcChannel.transferTo(0, srcChannel.size(), destChannel);destChannel.close();srcChannel.close();destStream.close();srcStream.close();}public List<Class<?>> getImplementingClasses(Class<?> ancestor, boolean searchAllClasspath) throws MutableClassLoaderException {List<Class<?>> classes = new LinkedList<Class<?>>();for (URL url : (searchAllClasspath ? getURLs() : getAddedURLs())) {Log.verbose(""Checking classpath item "" + url);if (!url.getPath().toLowerCase().endsWith(""/"")) {try {JarInputStream jis = new JarInputStream(url.openStream());JarEntry je;while ((je = jis.getNextJarEntry()) != null) {Log.verbose(""Checking resource "" + je.getName());try {if (je.getName().endsWith("".class"")) {Class<?> c = this.loadClass(je.getName().replaceAll(""/"", ""."").replaceAll("".class$"", """"));if (!Modifier.isAbstract(c.getModifiers()) && !Modifier.isInterface(c.getModifiers()) && ancestor.isAssignableFrom(c)) {Log.verbose(""Found class "" + c.getCanonicalName() + "" which implements class "" + ancestor.getCanonicalName());classes.add(c);}}} catch (Error e) {} catch (RuntimeException re) {} catch (Exception e) {}}} catch (Exception e) {Log.error(e);}} else if (url.getPath().endsWith(""/"")) {File root = new File(url.getPath());for (File file : FileFunctions.getFileTree(root)) {try {if (file.getName().toLowerCase().endsWith("".class"")) {Class<?> c = this.loadClass(file.getAbsolutePath().replaceAll(""^"" + root.getAbsolutePath() + ""/"", """").replaceAll(""/"", ""."").replaceAll("".class$"", """"));if (!Modifier.isAbstract(c.getModifiers()) && !Modifier.isInterface(c.getModifiers()) && ancestor.isAssignableFrom(c)) {Log.verbose(""Found class "" + c.getCanonicalName() + "" which implements class "" + ancestor.getCanonicalName());classes.add(c);}}} catch (Exception e) {Log.error(e);}}}}return classes;}public String htmlContentSimple(String urlStr, String charset) {StringBuffer html = new StringBuffer();URL url = null;BufferedReader reader = null;try {url = new URL(urlStr);reader = new BufferedReader(new InputStreamReader(url.openStream(), charset));String line;while ((line = reader.readLine()) != null) {html.append(line).append(""\r\n"");}} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();} finally {if (reader != null) try {reader.close();} catch (IOException e) {e.printStackTrace();}}return html.toString();}"	5
"public String getContentAsString(String url) {StringBuffer sb = new StringBuffer("""");try {URL urlmy = new URL(url);HttpURLConnection con = (HttpURLConnection) urlmy.openConnection();HttpURLConnection.setFollowRedirects(true);con.setInstanceFollowRedirects(false);con.connect();BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream(), ""UTF-8""));String s = """";while ((s = br.readLine()) != null) {sb.append(s + ""\r\n"");}con.disconnect();} catch (Exception ex) {this.logException(ex);}return sb.toString();}public void actionPerformed(ActionEvent e) {try {URL url = new URL(""http://mailsomething.sf.net/helppages.xml"");try {File file = File.createTempFile(""temp"", ""xml"");InputStream in = new BufferedInputStream(url.openStream());OutputStream out = new FileOutputStream(file);byte[] buf = new byte[1024];int n;while ((n = in.read(buf)) > 0) out.write(buf, 0, n);out.flush();out.close();module.merge(file);} catch (IOException f) {}} catch (MalformedURLException f) {}}public static String encrypt(String message) {try {MessageDigest digest = MessageDigest.getInstance(""MD5"");digest.update(message.getBytes());BASE64Encoder encoder = new BASE64Encoder();return encoder.encode(digest.digest());} catch (NoSuchAlgorithmException ex) {ex.printStackTrace();return null;}}private Properties loadProperties(final String propertiesName) throws IOException {Properties bundle = null;final ClassLoader loader = Thread.currentThread().getContextClassLoader();final URL url = loader.getResource(propertiesName);if (url == null) {throw new IOException(""Properties file "" + propertiesName + "" not found"");}final InputStream is = url.openStream();if (is != null) {bundle = new Properties();bundle.load(is);} else {throw new IOException(""Properties file "" + propertiesName + "" not avilable"");}return bundle;}public void render(final HttpServletRequest request, final HttpServletResponse response, final byte[] bytes, final Throwable t, final String contentType, final String encoding) throws Exception {if (contentType != null) {response.setContentType(contentType);}if (encoding != null) {response.setCharacterEncoding(encoding);}response.setContentLength(bytes.length);IOUtils.copy(new ByteArrayInputStream(bytes), response.getOutputStream());}private File extractSiteFile() {final URL url = TestCrueCONF.class.getResource(CONFIG_SITE);final File confFile = new File(createTempDir(), ""FudaaCrue_Site.xml"");try {CtuluLibFile.copyStream(url.openStream(), new FileOutputStream(confFile), true, true);} catch (Exception e) {Logger.getLogger(TestCrueCONF.class.getName()).log(Level.SEVERE, ""erreur while extracting FudaaCrue_Site.xml"", e);fail(e.getMessage());}return confFile;}@Testpublic void testMark() throws IllegalArgumentException, IOException {Assert.assertNotNull(this.m_detector);File f = new File(""testdocuments/voiddocument/Voiderror.htm"");Assert.assertTrue(""Test file "" + f.getAbsolutePath() + "" does not exist. "", f.exists());URL url = f.toURL();this.m_detector.detectCodepage(url.openStream(), 200);}@SuppressWarnings(""unchecked"")public static void createInstance(ExternProtoDeclare externProtoDeclare) {ExternProtoDeclareImport epdi = new ExternProtoDeclareImport();HashMap<String, ProtoDeclareImport> protoMap = X3DImport.getTheImport().getCurrentParser().getProtoMap();boolean loadedFromWeb = false;File f = null;URL url = null;List<String> urls = externProtoDeclare.getUrl();String tmpUrls = urls.toString();urls = Util.splitStringToListOfStrings(tmpUrls);String protoName = null;int urlCount = urls.size();for (int urlIndex = 0; urlIndex < urlCount; urlIndex++) {try {String path = urls.get(urlIndex);if (path.startsWith(""\"""") && path.endsWith(""\"""")) path = path.substring(1, path.length() - 1);int hashMarkPos = path.indexOf(""#"");int urlLength = path.length();if (hashMarkPos == -1) path = path.substring(0, urlLength); else {protoName = path.substring(hashMarkPos + 1, urlLength);path = path.substring(0, hashMarkPos);}if (path.toLowerCase().startsWith(""http://"")) {String filename = path.substring(path.lastIndexOf(""/"") + 1, path.lastIndexOf("".""));String fileext = path.substring(path.lastIndexOf("".""), path.length());f = File.createTempFile(filename, fileext);url = new URL(path);InputStream is = url.openStream();FileOutputStream os = new FileOutputStream(f);byte[] buffer = new byte[0xFFFF];for (int len; (len = is.read(buffer)) != -1; ) os.write(buffer, 0, len);is.close();os.close();url = f.toURI().toURL();loadedFromWeb = true;} else {if (path.startsWith(""/"") || (path.charAt(1) == ':')) {} else {File x3dfile = X3DImport.getTheImport().getCurrentParser().getFile();path = Util.getRealPath(x3dfile) + path;}f = new File(path);url = f.toURI().toURL();Object testContent = url.getContent();if (testContent == null) continue;loadedFromWeb = false;}X3DDocument x3dDocument = null;try {x3dDocument = X3DDocument.Factory.parse(f);} catch (XmlException e) {e.printStackTrace();return;} catch (IOException e) {e.printStackTrace();return;}Scene scene = x3dDocument.getX3D().getScene();ProtoDeclare[] protos = scene.getProtoDeclareArray();ProtoDeclare protoDeclare = null;if (protoName == null) {protoDeclare = protos[0];} else {for (ProtoDeclare proto : protos) {if (proto.getName().equals(protoName)) {protoDeclare = proto;break;}}}if (protoDeclare == null) continue;ProtoBody protoBody = protoDeclare.getProtoBody();epdi.protoBody = protoBody;protoMap.put(externProtoDeclare.getName(), epdi);break;} catch (MalformedURLException e) {} catch (IOException e) {} finally {if (loadedFromWeb && f != null) {f.delete();}}}}public static String addWeibo(String weibo, File pic, String uid) throws Throwable {List<NameValuePair> qparams = new ArrayList<NameValuePair>();qparams.add(new BasicNameValuePair(""_surl"", """"));qparams.add(new BasicNameValuePair(""_t"", ""0""));qparams.add(new BasicNameValuePair(""location"", ""home""));qparams.add(new BasicNameValuePair(""module"", ""stissue""));if (pic != null) {String picId = upLoadImg(pic, uid);qparams.add(new BasicNameValuePair(""pic_id"", picId));}qparams.add(new BasicNameValuePair(""rank"", ""weibo""));qparams.add(new BasicNameValuePair(""text"", weibo));HttpPost post = getHttpPost(""http://weibo.com/aj/mblog/add?__rnd=1333611402611"", uid);UrlEncodedFormEntity params = new UrlEncodedFormEntity(qparams, HTTP.UTF_8);post.setEntity(params);HttpResponse response = client.execute(post);HttpEntity entity = response.getEntity();String content = EntityUtils.toString(entity, HTTP.UTF_8);post.abort();return content;}public static String upLoadImg(File pic, String uid) throws Throwable {System.out.println(""开始上传======================================================="");HttpPost post = getHttpPost(getUploadUrl(uid), uid);FileBody file = new FileBody(pic, ""image/jpg"");MultipartEntity reqEntity = new MultipartEntity();reqEntity.addPart(""pic1"", file);post.setEntity(reqEntity);HttpResponse response = client.execute(post);int status = response.getStatusLine().getStatusCode();post.abort();if (status == HttpStatus.SC_MOVED_TEMPORARILY || status == HttpStatus.SC_MOVED_PERMANENTLY) {String newuri = response.getHeaders(""location"")[0].getValue();System.out.println(newuri);return newuri.substring(newuri.indexOf(""pid="") + 4, newuri.indexOf(""&token=""));}return null;}"	5
"public void sendRequest(String method) {try {url = new URL(urlStr);httpURLConnection = (HttpURLConnection) url.openConnection();httpURLConnection.setRequestMethod(method);httpURLConnection.setDoOutput(true);httpURLConnection.getOutputStream().flush();httpURLConnection.getOutputStream().close();System.out.println(httpURLConnection.getResponseMessage());} catch (Exception e) {e.printStackTrace();} finally {if (httpURLConnection != null) {httpURLConnection.disconnect();}}}public static void readConfigFromResource(String resname) throws Exception {URL url = ConfigXMLReader.class.getClassLoader().getResource(resname);if (url == null) throw new FileNotFoundException(""Couldn't find the config resource:"" + resname);System.out.println(""Reading config from resource: "" + url.toString());readConfig(url.openStream());}private InputStream open(String url) throws IOException {debug(url);if (!useCache) {return new URL(url).openStream();}File f = new File(System.getProperty(""java.io.tmpdir"", "".""), Digest.SHA1.encrypt(url) + "".xml"");debug(""Cache : "" + f);if (f.exists()) {return new FileInputStream(f);}InputStream in = new URL(url).openStream();OutputStream out = new FileOutputStream(f);IOUtils.copyTo(in, out);out.flush();out.close();in.close();return new FileInputStream(f);}public static void copy(FileInputStream source, FileOutputStream target) throws IOException {FileChannel sourceChannel = source.getChannel();FileChannel targetChannel = target.getChannel();sourceChannel.transferTo(0, sourceChannel.size(), targetChannel);sourceChannel.close();targetChannel.close();}public final InputStream getStreamFromUrl(final URL url) {try {if (listener != null) {listener.openedStream(url);}return url.openStream();} catch (IOException e) {listener.exceptionThrown(e);return null;}}public static void copyFile(File fromFile, File toFile) throws OWFileCopyException {try {FileChannel src = new FileInputStream(fromFile).getChannel();FileChannel dest = new FileOutputStream(toFile).getChannel();dest.transferFrom(src, 0, src.size());src.close();dest.close();} catch (IOException e) {throw (new OWFileCopyException(""An error occurred while copying a file"", e));}}private static void readData() {StringTokenizer sTok;topSet = new HashSet();sTok = new StringTokenizer(tops, "","");while (sTok.hasMoreTokens()) topSet.add(sTok.nextToken());leftSet = new HashSet();sTok = new StringTokenizer(lefts, "","");while (sTok.hasMoreTokens()) leftSet.add(sTok.nextToken());rightSet = new HashSet();sTok = new StringTokenizer(rights, "","");while (sTok.hasMoreTokens()) rightSet.add(sTok.nextToken());farRightSet = new HashSet();sTok = new StringTokenizer(farrights, "","");while (sTok.hasMoreTokens()) farRightSet.add(sTok.nextToken());vowelSet = new HashSet();sTok = new StringTokenizer(vowels, "","");while (sTok.hasMoreTokens()) {String ntk;vowelSet.add(ntk = sTok.nextToken());if (maxEwtsVowelLength < ntk.length()) maxEwtsVowelLength = ntk.length();validInputSequences.put(ntk, anyOldObjectWillDo);}puncSet = new HashSet();sTok = new StringTokenizer(others, "","");while (sTok.hasMoreTokens()) {String ntk;puncSet.add(ntk = sTok.nextToken());validInputSequences.put(ntk, anyOldObjectWillDo);}charSet = new HashSet();tibSet = new HashSet();sTok = new StringTokenizer(tibetanConsonants, "","");while (sTok.hasMoreTokens()) {String ntk;charSet.add(ntk = sTok.nextToken());tibSet.add(ntk);validInputSequences.put(ntk, anyOldObjectWillDo);}sanskritStackSet = new HashSet();sTok = new StringTokenizer(otherConsonants, "","");while (sTok.hasMoreTokens()) {String ntk;charSet.add(ntk = sTok.nextToken());sanskritStackSet.add(ntk);validInputSequences.put(ntk, anyOldObjectWillDo);}numberSet = new HashSet();sTok = new StringTokenizer(numbers, "","");while (sTok.hasMoreTokens()) {String ntk;charSet.add(ntk = sTok.nextToken());numberSet.add(ntk);validInputSequences.put(ntk, anyOldObjectWillDo);}charSet.add(""Y"");charSet.add(""R"");charSet.add(""W"");validInputSequences.put(""Y"", anyOldObjectWillDo);validInputSequences.put(""R"", anyOldObjectWillDo);validInputSequences.put(""W"", anyOldObjectWillDo);sTok = null;top_vowels = new HashSet();top_vowels.add(i_VOWEL);top_vowels.add(e_VOWEL);top_vowels.add(o_VOWEL);top_vowels.add(ai_VOWEL);top_vowels.add(au_VOWEL);top_vowels.add(reverse_i_VOWEL);try {URL url = TibetanMachineWeb.class.getResource(fileName);if (url == null) {System.err.println(""Cannot find "" + fileName + ""; aborting."");System.exit(1);}InputStreamReader isr = new InputStreamReader(url.openStream());BufferedReader in = new BufferedReader(isr);System.out.println(""Reading Tibetan Machine Web code table "" + fileName);String line;boolean hashOn = false;boolean isTibetan = false;boolean isSanskrit = false;boolean ignore = false;while ((line = in.readLine()) != null) {if (line.startsWith(""<?"")) {if (line.equalsIgnoreCase(""<?Consonants?>"")) {isSanskrit = false;isTibetan = true;hashOn = false;ignore = false;do {line = in.readLine();} while (line.startsWith(""//"") || line.equals(""""));} else if (line.equalsIgnoreCase(""<?Numbers?>"")) {isSanskrit = false;isTibetan = false;hashOn = false;ignore = false;do {line = in.readLine();} while (line.startsWith(""//"") || line.equals(""""));} else if (line.equalsIgnoreCase(""<?Vowels?>"")) {isSanskrit = false;isTibetan = false;hashOn = false;ignore = false;do {line = in.readLine();} while (line.startsWith(""//"") || line.equals(""""));} else if (line.equalsIgnoreCase(""<?Other?>"")) {isSanskrit = false;isTibetan = false;hashOn = false;ignore = false;do {line = in.readLine();} while (line.startsWith(""//"") || line.equals(""""));} else if (line.equalsIgnoreCase(""<?Input:Punctuation?>"") || line.equalsIgnoreCase(""<?Input:Vowels?>"")) {isSanskrit = false;isTibetan = false;hashOn = true;ignore = false;} else if (line.equalsIgnoreCase(""<?Input:Tibetan?>"")) {isSanskrit = false;isTibetan = true;hashOn = true;ignore = false;} else if (line.equalsIgnoreCase(""<?Input:Numbers?>"")) {isSanskrit = false;isTibetan = false;hashOn = true;ignore = false;} else if (line.equalsIgnoreCase(""<?Input:Sanskrit?>"")) {isSanskrit = true;isTibetan = false;hashOn = true;ignore = false;} else if (line.equalsIgnoreCase(""<?ToWylie?>"")) {isSanskrit = false;isTibetan = false;hashOn = false;ignore = false;} else if (line.equalsIgnoreCase(""<?Ignore?>"")) {isSanskrit = false;ignore = true;}} else if (line.startsWith(""//"")) {;} else if (line.equals("""")) {;} else {StringTokenizer st = new StringTokenizer(line, DELIMITER, true);String wylie = null;DuffCode[] duffCodes;duffCodes = new DuffCode[11];int k = 0;StringBuffer escapedToken = new StringBuffer("""");ThdlDebug.verify(escapedToken.length() == 0);while (st.hasMoreTokens()) {String val = getEscapedToken(st, escapedToken);if (val.equals(DELIMITER) && escapedToken.length() == 0) {k++;} else if (!val.equals("""")) {if (escapedToken.length() != 0) {escapedToken = new StringBuffer("""");ThdlDebug.verify(escapedToken.length() == 0);}switch(k) {case 0:wylie = val;break;case 1:duffCodes[TM] = new DuffCode(val, false);break;case 2:if (!ignore) {duffCodes[REDUCED_C] = new DuffCode(val, true);}break;case 3:duffCodes[TMW] = new DuffCode(val, true);if (null != duffCodes[TM]) {TMtoTMW[duffCodes[TM].getFontNum() - 1][duffCodes[TM].getCharNum() - 32] = duffCodes[TMW];}if (null != TMWtoTM[duffCodes[TMW].getFontNum() - 1][duffCodes[TMW].getCharNum() - 32]) throw new Error(""tibwn.ini is supposed to use the TibetanMachineWeb glyph as the unique key, but "" + val + "" appears two or more times."");TMWtoTM[duffCodes[TMW].getFontNum() - 1][duffCodes[TMW].getCharNum() - 32] = duffCodes[TM];if (wylie.toLowerCase().startsWith(""\\uf0"")) {int x = Integer.parseInt(wylie.substring(""\\u"".length()), 16);ThdlDebug.verify((x >= 0xF000 && x <= 0xF0FF));NonUnicodeToTMW[x - ''] = new DuffCode[] { duffCodes[TMW] };}break;case 4:case 5:case 6:case 7:case 8:case 9:if (!ignore) {try {duffCodes[k - 1] = new DuffCode(val, true);} catch (Exception e) {System.err.println(""Couldn't make a DuffCode out of "" + val + ""; line is "" + line + ""; k is "" + k);}}break;case 10:if (!val.equals(""none"")) {StringBuffer unicodeBuffer = new StringBuffer();StringTokenizer uTok = new StringTokenizer(val, "","");while (uTok.hasMoreTokens()) {String subval = uTok.nextToken();ThdlDebug.verify(subval.length() == 4 || subval.length() == 3);try {int x = Integer.parseInt(subval, 16);ThdlDebug.verify((x >= 0x0F00 && x <= 0x0FFF) || x == 0x5350 || x == 0x534D || x == 0x0020 || x == 0x00A0 || x == 0x2003);unicodeBuffer.append((char) x);} catch (NumberFormatException e) {ThdlDebug.verify(false);}}TMWtoUnicode[duffCodes[TMW].getFontNum() - 1][duffCodes[TMW].getCharNum() - 32] = unicodeBuffer.toString();char ch;if (unicodeBuffer.length() == 1 && UnicodeUtils.isInTibetanRange(ch = unicodeBuffer.charAt(0))) {if (null != UnicodeToTMW[ch - 'ༀ'][0] && 'ༀ' != ch && '༂' != ch && '༃' != ch && '་' != ch && '༎' != ch && 'ཀ' != ch && 'ག' != ch && 'ཉ' != ch && 'ཏ' != ch && 'ད' != ch && 'ན' != ch && 'ཞ' != ch && 'ར' != ch && 'ཤ' != ch && 'ཧ' != ch && 'ཪ' != ch && 'ཱ' != ch && 'ི' != ch && 'ཱི' != ch && 'ུ' != ch && 'ཱུ' != ch && 'ྲྀ' != ch && 'ཷ' != ch && 'ླྀ' != ch && 'ཹ' != ch && 'ེ' != ch && 'ོ' != ch && 'ཾ' != ch && 'ཱྀ' != ch) {throw new Error(""tibwn.ini has more than one TMW fellow listed that has the Unicode "" + val + "", but it's not on the list of specially handled glyphs"");}UnicodeToTMW[ch - 'ༀ'][0] = duffCodes[TMW];}}break;case 11:if (!ignore) {duffCodes[HALF_C] = new DuffCode(val, true);}break;case 12:if (!ignore) {DuffCode binduCode = new DuffCode(val, true);binduMap.put(duffCodes[TMW], binduCode);}break;case 13:throw new Error(""tibwn.ini has only 13 columns, you tried to use a 14th column."");}} else {if (k == 10) {throw new Error(""needed none or some unicode; line is "" + line);}}}if (k < 10) {throw new Error(""needed none or some unicode; line is "" + line);}if (!ignore) {if (null == wylie) throw new Error(fileName + "" has a line ^"" + DELIMITER + "" which means that no Wylie is assigned.  That isn't supported."");if (hashOn) {tibHash.put(Manipulate.unescape(wylie), duffCodes);}if (isTibetan) {StringBuffer wylieWithoutDashes = new StringBuffer(wylie);for (int wl = 0; wl < wylieWithoutDashes.length(); wl++) {if (wylieWithoutDashes.charAt(wl) == '-') {wylieWithoutDashes.deleteCharAt(wl);--wl;}}tibSet.add(wylieWithoutDashes.toString());}if (isSanskrit) {sanskritStackSet.add(wylie);}if (null == duffCodes[TMW]) throw new Error(fileName + "" has a line with wylie "" + wylie + "" but no TMW; that's not allowed"");int font = duffCodes[TMW].getFontNum();int code = duffCodes[TMW].getCharNum() - 32;toHashKey[font][code] = Manipulate.unescape(wylie);}}}} catch (IOException e) {System.out.println(""file Disappeared"");ThdlDebug.noteIffyCode();}}private void addMaintainerScripts(TarOutputStream tar, PackageInfo info) throws IOException, ScriptDataTooLargeException {for (final MaintainerScript script : info.getMaintainerScripts().values()) {if (script.getSize() > Integer.MAX_VALUE) {throw new ScriptDataTooLargeException(""The script data is too large for the tar file. script=["" + script.getType().getFilename() + ""]."");}final TarEntry entry = standardEntry(script.getType().getFilename(), UnixStandardPermissions.EXECUTABLE_FILE_MODE, (int) script.getSize());tar.putNextEntry(entry);IOUtils.copy(script.getStream(), tar);tar.closeEntry();}}public boolean config(URL url, boolean throwsException) throws IllegalArgumentException {try {final MetaRoot conf = UjoManagerXML.getInstance().parseXML(new BufferedInputStream(url.openStream()), MetaRoot.class, this);config(conf);return true;} catch (Exception e) {if (throwsException) {throw new IllegalArgumentException(""Configuration file is not valid "", e);} else {return false;}}}private void getPage(final String path, final String dataToSend, final GetPageCallback callback) {runner.add(new Runnable() {@Overridepublic void run() {String url = ""http://"" + resources.getString(R.string.host) + path;HttpUriRequest req;if (dataToSend == null) {req = new HttpGet(url);} else {req = new HttpPost(url);try {((HttpPost) req).setEntity(new StringEntity(dataToSend));} catch (UnsupportedEncodingException e) {Logger.getLogger(JSBridge.class.getName()).log(Level.SEVERE, ""Unsupported encoding."", e);}}req.addHeader(""Cookie"", getAuthCookie(false));try {HttpResponse response = httpclient.execute(req);Logger.getLogger(JSBridge.class.getName()).log(Level.INFO, ""Response status is '"" + response.getStatusLine() + ""'."");HttpEntity entity = response.getEntity();if (entity != null) {InputStream instream = entity.getContent();try {BufferedReader in = new BufferedReader(new InputStreamReader(instream));StringBuilder b = new StringBuilder();String line;boolean first = true;while ((line = in.readLine()) != null) {b.append(line);if (first) {first = false;} else {b.append(""\r\n"");}}in.close();callback.success(b.toString());return;} catch (RuntimeException ex) {throw ex;} finally {instream.close();}}} catch (ClientProtocolException e) {Logger.getLogger(JSBridge.class.getName()).log(Level.SEVERE, ""HTTP protocol violated."", e);} catch (IOException e) {Logger.getLogger(JSBridge.class.getName()).log(Level.WARNING, ""Could not load '"" + path + ""'."", e);}Logger.getLogger(JSBridge.class.getName()).log(Level.INFO, ""Calling error from JSBridge.getPage because of previous errors."");callback.error();}});}"	5
"public static void downloadFile(String htmlUrl, String dirUrl) {try {URL url = new URL(htmlUrl);System.out.println(""Opening connection to "" + htmlUrl + ""..."");URLConnection urlC = url.openConnection();InputStream is = url.openStream();Date date = new Date(urlC.getLastModified());System.out.println("", modified on: "" + date.toLocaleString() + "")..."");System.out.flush();FileOutputStream fos = null;String localFile = null;StringTokenizer st = new StringTokenizer(url.getFile(), ""/"");while (st.hasMoreTokens()) localFile = st.nextToken();fos = new FileOutputStream(dirUrl + ""/"" + localFile);int oneChar, count = 0;while ((oneChar = is.read()) != -1) {fos.write(oneChar);count++;}is.close();fos.close();System.out.println(count + "" byte(s) copied"");} catch (MalformedURLException e) {System.err.println(e.toString());} catch (IOException e) {System.err.println(e.toString());}}public static Collection providers(Class service, ClassLoader loader) {List classList = new ArrayList();List nameSet = new ArrayList();String name = ""META-INF/services/"" + service.getName();Enumeration services;try {services = (loader == null) ? ClassLoader.getSystemResources(name) : loader.getResources(name);} catch (IOException ioe) {System.err.println(""Service: cannot load "" + name);return classList;}while (services.hasMoreElements()) {URL url = (URL) services.nextElement();InputStream input = null;BufferedReader reader = null;try {input = url.openStream();reader = new BufferedReader(new InputStreamReader(input, ""utf-8""));String line = reader.readLine();while (line != null) {int ci = line.indexOf('#');if (ci >= 0) line = line.substring(0, ci);line = line.trim();int si = line.indexOf(' ');if (si >= 0) line = line.substring(0, si);line = line.trim();if (line.length() > 0) {if (!nameSet.contains(line)) nameSet.add(line);}line = reader.readLine();}} catch (IOException ioe) {System.err.println(""Service: problem with: "" + url);} finally {try {if (input != null) input.close();if (reader != null) reader.close();} catch (IOException ioe2) {System.err.println(""Service: problem with: "" + url);}}}Iterator names = nameSet.iterator();while (names.hasNext()) {String className = (String) names.next();try {classList.add(Class.forName(className, true, loader).newInstance());} catch (ClassNotFoundException e) {System.err.println(""Service: cannot find class: "" + className);} catch (InstantiationException e) {System.err.println(""Service: cannot instantiate: "" + className);} catch (IllegalAccessException e) {System.err.println(""Service: illegal access to: "" + className);} catch (NoClassDefFoundError e) {System.err.println(""Service: "" + e + "" for "" + className);} catch (Exception e) {System.err.println(""Service: exception for: "" + className + "" "" + e);}}return classList;}public static EXISchema getEXISchema(String fileName, Class<?> cls, EXISchemaFactoryErrorHandler compilerErrorHandler) throws IOException, ClassNotFoundException, EXISchemaFactoryException {EXISchemaFactory schemaCompiler = new EXISchemaFactory();schemaCompiler.setCompilerErrorHandler(compilerErrorHandler);InputSource inputSource = null;if (fileName != null) {URL url;if ((url = cls.getResource(fileName)) != null) {inputSource = new InputSource(url.openStream());inputSource.setSystemId(url.toString());} else throw new RuntimeException(""File '"" + fileName + ""' not found."");}EXISchema compiled = schemaCompiler.compile(inputSource);InputStream serialized = serializeSchema(compiled);return loadSchema(serialized);}public void createZip(String baseDir, String objFileName) throws Exception {logger.info(""createZip: [ "" + baseDir + ""]["" + objFileName + ""]"");baseDir = baseDir + ""/"" + timesmpt;File folderObject = new File(baseDir);if (folderObject.exists()) {List<?> fileList = getSubFiles(new File(baseDir));ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(objFileName));ZipEntry ze = null;byte[] buf = new byte[1024];int readLen = 0;for (int i = 0; i < fileList.size(); i++) {File f = (File) fileList.get(i);ze = new ZipEntry(getAbsFileName(baseDir, f));ze.setSize(f.length());ze.setTime(f.lastModified());zos.putNextEntry(ze);InputStream is = new BufferedInputStream(new FileInputStream(f));while ((readLen = is.read(buf, 0, 1024)) != -1) {zos.write(buf, 0, readLen);}is.close();}zos.close();} else {throw new Exception(""this folder isnot exist!"");}}public static void main(String[] args) throws Exception {DES des = new DES();StreamBlockReader reader = new StreamBlockReader(new FileInputStream(""D:\\test1.txt""));StreamBlockWriter writer = new StreamBlockWriter(new FileOutputStream(""D:\\test2.txt""));SingleKey key = new SingleKey(new Block(64), """");key = new SingleKey(new Block(""1111111100000000111111110000000011111111000000001111111100000000""), """");Mode mode = new ECBDESMode(des);des.decrypt(reader, writer, key, mode);}private void streamBinaryData(String urlstr, String format, ServletOutputStream outstr, HttpServletResponse resp) {String ErrorStr = null;try {resp.setContentType(getMimeType(format));BufferedInputStream bis = null;BufferedOutputStream bos = null;try {URL url = new URL(urlstr);URLConnection urlc = url.openConnection();int length = urlc.getContentLength();resp.setContentLength(length);InputStream in = urlc.getInputStream();bis = new BufferedInputStream(in);bos = new BufferedOutputStream(outstr);byte[] buff = new byte[length];int bytesRead;while (-1 != (bytesRead = bis.read(buff, 0, buff.length))) {bos.write(buff, 0, bytesRead);}} catch (Exception e) {e.printStackTrace();ErrorStr = ""Error Streaming the Data"";outstr.print(ErrorStr);} finally {if (bis != null) {bis.close();}if (bos != null) {bos.close();}if (outstr != null) {outstr.flush();outstr.close();}}} catch (Exception e) {e.printStackTrace();}}public static boolean copyFile(final File src, final File dest, long extent, final boolean overwrite) throws FileNotFoundException, IOException {boolean result = false;if (LOGGER.isLoggable(Level.FINE)) {LOGGER.fine(""Copying file "" + src + "" to "" + dest + "" extent "" + extent + "" exists "" + dest.exists());}if (dest.exists()) {if (overwrite) {dest.delete();LOGGER.finer(dest.getAbsolutePath() + "" removed before copy."");} else {return result;}}FileInputStream fis = null;FileOutputStream fos = null;FileChannel fcin = null;FileChannel fcout = null;try {fis = new FileInputStream(src);fos = new FileOutputStream(dest);fcin = fis.getChannel();fcout = fos.getChannel();if (extent < 0) {extent = fcin.size();}long trans = fcin.transferTo(0, extent, fcout);if (trans < extent) {result = false;}result = true;} catch (IOException e) {String message = ""Copying "" + src.getAbsolutePath() + "" to "" + dest.getAbsolutePath() + "" with extent "" + extent + "" got IOE: "" + e.getMessage();if (e.getMessage().equals(""Invalid argument"")) {LOGGER.severe(""Failed copy, trying workaround: "" + message);workaroundCopyFile(src, dest);} else {IOException newE = new IOException(message);newE.setStackTrace(e.getStackTrace());throw newE;}} finally {if (fcin != null) {fcin.close();}if (fcout != null) {fcout.close();}if (fis != null) {fis.close();}if (fos != null) {fos.close();}}return result;}public String getContent() throws IOException {String result = new String();if (url == null) return null;conn = (HttpURLConnection) url.openConnection();conn.setRequestProperty(""User-Agent"", ""Internet Explorer"");conn.setReadTimeout(50000);conn.connect();httpReader = new BufferedReader(new InputStreamReader(conn.getInputStream()));String str = httpReader.readLine();while (str != null) {result += str;str = httpReader.readLine();}return result;}public void download(String target) {try {if (url == null) return;conn = (HttpURLConnection) url.openConnection();conn.setRequestProperty(""User-Agent"", ""Internet Explorer"");conn.setReadTimeout(10000);conn.connect();httpReader = new BufferedReader(new InputStreamReader(conn.getInputStream()));java.io.BufferedWriter out = new BufferedWriter(new FileWriter(target, false));String str = httpReader.readLine();while (str != null) {out.write(str);str = httpReader.readLine();}out.close();System.out.println(""file download successfully: "" + url.getHost() + url.getPath());System.out.println(""saved to: "" + target);} catch (Exception e) {System.out.println(""file download failed: "" + url.getHost() + url.getPath());e.printStackTrace();}}public static byte[] encrypt(String x) throws Exception {java.security.MessageDigest d = null;d = java.security.MessageDigest.getInstance(""SHA-1"");d.reset();d.update(x.getBytes());return d.digest();}"	5
"public void testGetResource_FileOutsideOfClasspath() throws Exception {File temp = File.createTempFile(""dozerfiletest"", "".txt"");temp.deleteOnExit();String resourceName = ""file:"" + temp.getAbsolutePath();URL url = loader.getResource(resourceName);assertNotNull(""URL should not be null"", url);InputStream is = url.openStream();assertNotNull(""input stream should not be null"", is);}public static final synchronized String hash(String data) {if (digest == null) {try {digest = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException nsae) {log.error(""Failed to load the MD5 MessageDigest. "" + ""Jive will be unable to function normally."", nsae);}}try {digest.update(data.getBytes(""utf-8""));} catch (UnsupportedEncodingException e) {log.error(e);}return encodeHex(digest.digest());}@Overrideprotected URLConnection openConnection(URL url) throws IOException {return new URLConnection(url) {@Overridepublic void connect() throws IOException {}@Overridepublic InputStream getInputStream() throws IOException {ThemeResource f = getFacelet(getURL().getFile());return new ByteArrayInputStream(f.getText().getBytes());}};}public static void loadPoFile(URL url) {states state = states.IDLE;String msgCtxt = """";String msgId = """";String msgStr = """";try {if (url == null) return;InputStream in = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(in, ""UTF8""));String strLine;while ((strLine = br.readLine()) != null) {if (strLine.startsWith(""msgctxt"")) {if (state != states.MSGCTXT) msgCtxt = """";state = states.MSGCTXT;strLine = strLine.substring(7).trim();}if (strLine.startsWith(""msgid"")) {if (state != states.MSGID) msgId = """";state = states.MSGID;strLine = strLine.substring(5).trim();}if (strLine.startsWith(""msgstr"")) {if (state != states.MSGSTR) msgStr = """";state = states.MSGSTR;strLine = strLine.substring(6).trim();}if (!strLine.startsWith(""\"""")) {state = states.IDLE;msgCtxt = """";msgId = """";msgStr = """";} else {if (state == states.MSGCTXT) {msgCtxt += format(strLine);}if (state == states.MSGID) {if (msgId.isEmpty()) {if (!msgCtxt.isEmpty()) {msgId = msgCtxt + ""|"";msgCtxt = """";}}msgId += format(strLine);}if (state == states.MSGSTR) {msgCtxt = """";msgStr += format(strLine);if (!msgId.isEmpty()) messages.setProperty(msgId, msgStr);}}}in.close();} catch (IOException e) {Logger.logError(e, ""Error loading message.po."");}}public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException {if (key == null || key.length == 0) {throw new IllegalArgumentException(""Argument 'key' cannot be null or an empty array."");}if (salt == null || salt.length == 0) {throw new IllegalArgumentException(""Argument 'salt' cannot be null or an empty array."");}final MessageDigest _md = MessageDigest.getInstance(""MD5"");_md.update(key);_md.update(MAGIC.getBytes());_md.update(salt);final MessageDigest md2 = MessageDigest.getInstance(""MD5"");md2.update(key);md2.update(salt);md2.update(key);byte[] abyFinal = md2.digest();for (int n = key.length; n > 0; n -= 16) {_md.update(abyFinal, 0, n > 16 ? 16 : n);}abyFinal = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };for (int j = 0, i = key.length; i != 0; i >>>= 1) {if ((i & 1) == 1) _md.update(abyFinal, j, 1); else _md.update(key, j, 1);}final StringBuilder sbPasswd = new StringBuilder();sbPasswd.append(MAGIC);sbPasswd.append(new String(salt));sbPasswd.append('$');abyFinal = _md.digest();for (int n = 0; n < 1000; n++) {final MessageDigest md3 = MessageDigest.getInstance(""MD5"");if ((n & 1) != 0) {md3.update(key);} else {md3.update(abyFinal);}if ((n % 3) != 0) {md3.update(salt);}if ((n % 7) != 0) {md3.update(key);}if ((n & 1) != 0) {md3.update(abyFinal);} else {md3.update(key);}abyFinal = md3.digest();}int[] anFinal = new int[] { (abyFinal[0] & 0x7f) | (abyFinal[0] & 0x80), (abyFinal[1] & 0x7f) | (abyFinal[1] & 0x80), (abyFinal[2] & 0x7f) | (abyFinal[2] & 0x80), (abyFinal[3] & 0x7f) | (abyFinal[3] & 0x80), (abyFinal[4] & 0x7f) | (abyFinal[4] & 0x80), (abyFinal[5] & 0x7f) | (abyFinal[5] & 0x80), (abyFinal[6] & 0x7f) | (abyFinal[6] & 0x80), (abyFinal[7] & 0x7f) | (abyFinal[7] & 0x80), (abyFinal[8] & 0x7f) | (abyFinal[8] & 0x80), (abyFinal[9] & 0x7f) | (abyFinal[9] & 0x80), (abyFinal[10] & 0x7f) | (abyFinal[10] & 0x80), (abyFinal[11] & 0x7f) | (abyFinal[11] & 0x80), (abyFinal[12] & 0x7f) | (abyFinal[12] & 0x80), (abyFinal[13] & 0x7f) | (abyFinal[13] & 0x80), (abyFinal[14] & 0x7f) | (abyFinal[14] & 0x80), (abyFinal[15] & 0x7f) | (abyFinal[15] & 0x80) };to64(sbPasswd, anFinal[0] << 16 | anFinal[6] << 8 | anFinal[12], 4);to64(sbPasswd, anFinal[1] << 16 | anFinal[7] << 8 | anFinal[13], 4);to64(sbPasswd, anFinal[2] << 16 | anFinal[8] << 8 | anFinal[14], 4);to64(sbPasswd, anFinal[3] << 16 | anFinal[9] << 8 | anFinal[15], 4);to64(sbPasswd, anFinal[4] << 16 | anFinal[10] << 8 | anFinal[5], 4);to64(sbPasswd, anFinal[11], 2);return sbPasswd.toString();}public static String computeMD5(InputStream input) {InputStream digestStream = null;try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");digestStream = new DigestInputStream(input, md5);IOUtils.copy(digestStream, new NullOutputStream());return new String(Base64.encodeBase64(md5.digest()), ""UTF-8"");} catch (NoSuchAlgorithmException e) {throw new RuntimeException(e);} catch (IOException e) {throw new RuntimeException(e);} finally {IOUtils.closeQuietly(digestStream);}}public static void writeToFile(InputStream input, File file, ProgressListener listener, long length) {OutputStream output = null;try {output = new CountingOutputStream(new FileOutputStream(file), listener, length);IOUtils.copy(input, output);} catch (IOException e) {throw new RuntimeException(e);} finally {IOUtils.closeQuietly(input);IOUtils.closeQuietly(output);}}private IProject createCopyProject(IProject project, IWorkspace ws, IProgressMonitor pm) throws CoreException {pm.beginTask(""Creating temp project"", 1);final String pName = ""translation_"" + project.getName() + ""_"" + new Date().toString().replace("" "", ""_"").replace("":"", ""_"");final IProgressMonitor npm = new NullProgressMonitor();final IPath destination = new Path(pName);project.copy(destination, false, npm);final IJavaProject oldJavaproj = JavaCore.create(project);final IClasspathEntry[] classPath = oldJavaproj.getRawClasspath();final IProject newProject = ResourcesPlugin.getWorkspace().getRoot().getProject(""NewProjectName"");final IProjectDescription desc = project.getDescription();desc.setNatureIds(new String[] { JavaCore.NATURE_ID });project.setDescription(desc, null);final IJavaProject javaproj = JavaCore.create(newProject);javaproj.setOutputLocation(project.getFullPath(), null);final List<IClasspathEntry> newClassPath = new ArrayList<IClasspathEntry>();for (final IClasspathEntry cEntry : newClassPath) {switch(cEntry.getContentKind()) {case IClasspathEntry.CPE_SOURCE:System.out.println(""Source folder "" + cEntry.getPath());break;default:newClassPath.add(cEntry);}}javaproj.setRawClasspath(classPath, pm);final IProject newP = ws.getRoot().getProject(pName);return newP;}public static void copyFile(File source, File dest) throws IOException {log.debug(""Copy from {} to {}"", source.getAbsoluteFile(), dest.getAbsoluteFile());FileInputStream fi = new FileInputStream(source);FileChannel fic = fi.getChannel();MappedByteBuffer mbuf = fic.map(FileChannel.MapMode.READ_ONLY, 0, source.length());fic.close();fi.close();fi = null;if (!dest.exists()) {String destPath = dest.getPath();log.debug(""Destination path: {}"", destPath);String destDir = destPath.substring(0, destPath.lastIndexOf(File.separatorChar));log.debug(""Destination dir: {}"", destDir);File dir = new File(destDir);if (!dir.exists()) {if (dir.mkdirs()) {log.debug(""Directory created"");} else {log.warn(""Directory not created"");}}dir = null;}FileOutputStream fo = new FileOutputStream(dest);FileChannel foc = fo.getChannel();foc.write(mbuf);foc.close();fo.close();fo = null;mbuf.clear();mbuf = null;}private static FrameworkFactory getFrameworkFactory() throws Exception {URL url = Main.class.getClassLoader().getResource(""META-INF/services/org.osgi.framework.launch.FrameworkFactory"");if (url != null) {BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));try {for (String s = br.readLine(); s != null; s = br.readLine()) {s = s.trim();if ((s.length() > 0) && (s.charAt(0) != '#')) {return (FrameworkFactory) Class.forName(s).newInstance();}}} finally {if (br != null) br.close();}}throw new Exception(""Could not find framework factory."");}"	5
"public MobileAgentProperties(Class declaringClass, String propertyFile) throws IOException {this.defaults = (MobileAgent) AnnotationElement.getAnyAnnotation(declaringClass, MobileAgent.class);URL url = getClass().getClassLoader().getResource(propertyFile);if (url != null) {props.load(url.openStream());log.info(""MobileAgent parameters loaded from file "" + url);}}private static boolean initLOG4JProperties(String homeDir) {String Log4jURL = homeDir + LOG4J_URL;try {URL log4jurl = getURL(Log4jURL);InputStream inStreamLog4j = log4jurl.openStream();Properties propertiesLog4j = new Properties();try {propertiesLog4j.load(inStreamLog4j);PropertyConfigurator.configure(propertiesLog4j);} catch (IOException e) {e.printStackTrace();}} catch (Exception e) {logger.info(""Failed to initialize LOG4J with properties file."");return false;}return true;}public static String getURLContent(String href) throws BuildException {URL url = null;String content;try {URL context = new URL(""file:"" + System.getProperty(""user.dir"") + ""/"");url = new URL(context, href);InputStream is = url.openStream();InputStreamReader isr = new InputStreamReader(is);StringBuffer stringBuffer = new StringBuffer();char[] buffer = new char[1024];int len;while ((len = isr.read(buffer, 0, 1024)) > 0) stringBuffer.append(buffer, 0, len);content = stringBuffer.toString();isr.close();} catch (Exception ex) {throw new BuildException(""Cannot get content of URL "" + href + "": "" + ex);}return content;}private void sendFile(File file, HttpServletResponse response) throws IOException {response.setContentLength((int) file.length());InputStream inputStream = null;try {inputStream = new FileInputStream(file);IOUtils.copy(inputStream, response.getOutputStream());} finally {IOUtils.closeQuietly(inputStream);}}@Overrideprotected Integer doInBackground() throws Exception {int numOfRows = 0;combinationMap = new HashMap<AnsweredQuestion, Integer>();combinationMapReverse = new HashMap<Integer, AnsweredQuestion>();LinkedHashSet<AnsweredQuestion> answeredQuestionSet = new LinkedHashSet<AnsweredQuestion>();LinkedHashSet<Integer> studentSet = new LinkedHashSet<Integer>();final String delimiter = "";"";final String typeToProcess = ""F"";String line;String[] chunks = new String[9];try {BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream(), ""ISO-8859-2""));in.readLine();while ((line = in.readLine()) != null) {chunks = line.split(delimiter);numOfRows++;if (chunks[2].equals(typeToProcess)) {answeredQuestionSet.add(new AnsweredQuestion(chunks[4], chunks[5]));studentSet.add(new Integer(chunks[0]));}}in.close();int i = 0;Integer I;for (AnsweredQuestion pair : answeredQuestionSet) {I = new Integer(i++);combinationMap.put(pair, I);combinationMapReverse.put(I, pair);}matrix = new SparseObjectMatrix2D(answeredQuestionSet.size(), studentSet.size());int lastStudentNumber = -1;AnsweredQuestion pair;in = new BufferedReader(new InputStreamReader(url.openStream(), ""ISO-8859-2""));in.readLine();while ((line = in.readLine()) != null) {chunks = line.split(delimiter);pair = null;if (chunks[2].equals(typeToProcess)) {if (Integer.parseInt(chunks[0]) != lastStudentNumber) {lastStudentNumber++;}pair = new AnsweredQuestion(chunks[4], chunks[5]);if (combinationMap.containsKey(pair)) {matrix.setQuick(combinationMap.get(pair), lastStudentNumber, Boolean.TRUE);}}}} catch (UnsupportedEncodingException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}supportVector = new int[combinationMap.size()];ObjectMatrix1D row = null;for (int i = 0; i < combinationMap.size(); i++) {row = matrix.viewRow(i);int sum = 0;for (int k = 0; k < row.size(); k++) {if (row.getQuick(k) != null && row.getQuick(k).equals(Boolean.TRUE)) {sum++;}}supportVector[i] = sum;}applet.combinationMap = this.combinationMap;applet.combinationMapReverse = this.combinationMapReverse;applet.matrix = this.matrix;applet.supportVector = supportVector;System.out.println(""data loaded."");return null;}private static String md5(String input) {String res = """";try {MessageDigest cript = MessageDigest.getInstance(""MD5"");cript.reset();cript.update(input.getBytes());byte[] md5 = cript.digest();String tmp = """";for (int i = 0; i < md5.length; i++) {tmp = (Integer.toHexString(0xFF & md5[i]));if (tmp.length() == 1) {res += ""0"" + tmp;} else {res += tmp;}}} catch (NoSuchAlgorithmException ex) {Log4k.error(pdfPrinter.class.getName(), ex.getMessage());}return res;}@Testpublic void test_validate_tag_getTopAlbums() {try {SchemaFactory factory = SchemaFactory.newInstance(""http://www.w3.org/2001/XMLSchema"");File schemaLocation = new File(""tes.xsd"");Schema schema = factory.newSchema(schemaLocation);Validator validator = schema.newValidator();URL url = new URL(""http://ws.audioscrobbler.com/2.0/?method=tag.gettopalbums&tag=disco&api_key=b25b959554ed76058ac220b7b2e0a026"");InputStream inputStream = url.openStream();Source source = new StreamSource(inputStream);validator.validate(source);} catch (IOException ex) {Logger.getLogger(GetTopAlbums_Test.class.getName()).log(Level.SEVERE, null, ex);assertFalse(""File not found"", true);} catch (SAXException ex) {Logger.getLogger(GetTopAlbums_Test.class.getName()).log(Level.SEVERE, null, ex);assertFalse(""Schema did not validate"", true);}assertTrue(true);}public String getMD5(String data) {try {MessageDigest md5Algorithm = MessageDigest.getInstance(""MD5"");md5Algorithm.update(data.getBytes(), 0, data.length());byte[] digest = md5Algorithm.digest();StringBuffer hexString = new StringBuffer();String hexDigit = null;for (int i = 0; i < digest.length; i++) {hexDigit = Integer.toHexString(0xFF & digest[i]);if (hexDigit.length() < 2) {hexDigit = ""0"" + hexDigit;}hexString.append(hexDigit);}return hexString.toString();} catch (NoSuchAlgorithmException ne) {return data;}}protected String getGraphPath(String name) throws ServletException {String hash;try {MessageDigest md = MessageDigest.getInstance(m_messagedigest_algorithm);md.update(name.getBytes());hash = bytesToHex(md.digest());} catch (NoSuchAlgorithmException e) {throw new ServletException(""NoSuchAlgorithmException while "" + ""attempting to hash file name: "" + e);}File tempDir = (File) getServletContext().getAttribute(""javax.servlet.context.tempdir"");return tempDir.getAbsolutePath() + File.separatorChar + hash;}protected String insertCommand(String command) throws ServletException {String digest;try {MessageDigest md = MessageDigest.getInstance(m_messagedigest_algorithm);md.update(command.getBytes());byte bytes[] = new byte[20];m_random.nextBytes(bytes);md.update(bytes);digest = bytesToHex(md.digest());} catch (NoSuchAlgorithmException e) {throw new ServletException(""NoSuchAlgorithmException while "" + ""attempting to generate graph ID: "" + e);}String id = System.currentTimeMillis() + ""-"" + digest;m_map.put(id, command);return id;}"	5
"public static void copyFile(File source, File dest) throws Exception {FileInputStream fis = new FileInputStream(source);try {FileOutputStream fos = new FileOutputStream(dest);try {int read = fis.read();while (read != -1) {fos.write(read);read = fis.read();}} finally {fos.close();}} finally {fis.close();}}public void init() {String filename = getParameter(""filename"");if (filename == null) {Error(""Illegal filename"");return;}Dimension dim = DEFAULT_SIZE;try {int w = Integer.parseInt(getParameter(""width""));int h = Integer.parseInt(getParameter(""height""));dim = new Dimension(w, h);} catch (Exception e) {}InputStream in;try {File ff = new File(filename);in = new FileInputStream(ff);} catch (Exception ignore) {try {URL url = new URL(filename);in = url.openStream();} catch (Exception e) {Error(""Graph viewer: Failed to open: "" + filename + ""\n"" + e);return;}}getContentPane().add(getWindow(in));resize(dim);repaint();}public void parseFile(String filespec, URL documentBase) {DataInputStream in = null;if (filespec == null || filespec.length() == 0) {in = new DataInputStream(System.in);} else {try {URL url = null;if (documentBase == null && _documentBase != null) {documentBase = _documentBase;}if (documentBase == null) {url = new URL(filespec);} else {try {url = new URL(documentBase, filespec);} catch (NullPointerException e) {url = new URL(filespec);}}in = new DataInputStream(url.openStream());} catch (MalformedURLException e) {try {in = new DataInputStream(new FileInputStream(filespec));} catch (FileNotFoundException me) {_errorMsg = new String[2];_errorMsg[0] = ""File not found: "" + filespec;_errorMsg[1] = me.getMessage();return;} catch (SecurityException me) {_errorMsg = new String[2];_errorMsg[0] = ""Security Exception: "" + filespec;_errorMsg[1] = me.getMessage();return;}} catch (IOException ioe) {_errorMsg = new String[3];_errorMsg[0] = ""Failure opening URL: "";_errorMsg[1] = "" "" + filespec;_errorMsg[2] = ioe.getMessage();return;}}try {BufferedReader din = new BufferedReader(new InputStreamReader(in));String line = din.readLine();while (line != null) {_parseLine(line);line = din.readLine();}} catch (MalformedURLException e) {_errorMsg = new String[2];_errorMsg[0] = ""Malformed URL: "" + filespec;_errorMsg[1] = e.getMessage();return;} catch (IOException e) {_errorMsg = new String[2];_errorMsg[0] = ""Failure reading data: "" + filespec;_errorMsg[1] = e.getMessage();_errorMsg[1] = e.getMessage();} finally {try {in.close();} catch (IOException me) {}}}public boolean parseResults(URL url, String analysis_type, CurationI curation, Date analysis_date, String regexp) throws OutputMalFormatException {boolean parsed = false;try {InputStream data_stream = url.openStream();parsed = parseResults(data_stream, analysis_type, curation, analysis_date, regexp);} catch (OutputMalFormatException ex) {throw new OutputMalFormatException(ex.getMessage(), ex);} catch (Exception ex) {System.out.println(ex.getMessage());}return parsed;}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0L;if (secure) rand = mySecureRand.nextLong(); else rand = myRand.nextLong();sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte array[] = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; j++) {int b = array[j] & 0xff;if (b < 16) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}private void loadServers() {try {URL url = new URL(VirtualDeckConfig.SERVERS_URL);cmbServer.addItem(""Local"");BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String str;if (in.readLine().equals(""[list]"")) {while ((str = in.readLine()) != null) {String[] host_line = str.split("";"");Host h = new Host();h.setIp(host_line[0]);h.setPort(Integer.parseInt(host_line[1]));h.setName(host_line[2]);getServers().add(h);cmbServer.addItem(h.getName());}}in.close();} catch (MalformedURLException e) {} catch (IOException e) {}}public static String encodePassword(String _originalPassword) {MessageDigest md = null;String encodedPassword = null;try {md = MessageDigest.getInstance(""SHA-1"");md.update(_originalPassword.getBytes(""UTF-8""));encodedPassword = (new BASE64Encoder()).encode(md.digest());} catch (NoSuchAlgorithmException _e) {_e.printStackTrace();} catch (UnsupportedEncodingException _e) {_e.printStackTrace();}return encodedPassword;}public String login(String nUsuario, String contrasena) {String responce = """";String request = conf.Conf.login;OutputStreamWriter wr = null;BufferedReader rd = null;try {URL url = new URL(request);URLConnection conn = url.openConnection();conn.setDoOutput(true);wr = new OutputStreamWriter(conn.getOutputStream());wr.write(""nUsuario="" + nUsuario + ""&contrasena="" + contrasena);wr.flush();rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));String line;while ((line = rd.readLine()) != null) {responce += line;}} catch (Exception e) {}return responce;}public String buscarArchivos(String nUsuario) {String responce = """";String request = conf.Conf.buscarArchivo;OutputStreamWriter wr = null;BufferedReader rd = null;try {URL url = new URL(request);URLConnection conn = url.openConnection();conn.setDoOutput(true);wr = new OutputStreamWriter(conn.getOutputStream());wr.write(""nUsuario="" + nUsuario);wr.flush();rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));String line;while ((line = rd.readLine()) != null) {responce += line;}} catch (Exception e) {}return responce;}public String descargarArchivo(String miArchivo, String nUsuario) {try {URL url = new URL(conf.Conf.descarga + nUsuario + ""/"" + miArchivo);URLConnection urlCon = url.openConnection();System.out.println(urlCon.getContentType());InputStream is = urlCon.getInputStream();FileOutputStream fos = new FileOutputStream(""D:/"" + miArchivo);byte[] array = new byte[1000];int leido = is.read(array);while (leido > 0) {fos.write(array, 0, leido);leido = is.read(array);}is.close();fos.close();} catch (Exception e) {e.printStackTrace();}return ""llego"";}"	5
"public static void testclass(String[] args) throws IOException, CodeCheckException {ClassWriter writer = new ClassWriter();writer.emptyClass(ClassWriter.ACC_PUBLIC, ""TestClass"", ""java/lang/Object"");MethodInfo newMethod = writer.addMethod(ClassWriter.ACC_PUBLIC | ClassWriter.ACC_STATIC, ""main"", ""([Ljava/lang/String;)V"");CodeAttribute attribute = newMethod.getCodeAttribute();int constantIndex = writer.getStringConstantIndex(""It's alive! It's alive!!"");int fieldRefIndex = writer.getReferenceIndex(ClassWriter.CONSTANT_Fieldref, ""java/lang/System"", ""out"", ""Ljava/io/PrintStream;"");int methodRefIndex = writer.getReferenceIndex(ClassWriter.CONSTANT_Methodref, ""java/io/PrintStream"", ""println"", ""(Ljava/lang/String;)V"");ArrayList instructions = new ArrayList();byte[] operands;operands = new byte[2];NetByte.intToPair(fieldRefIndex, operands, 0);instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""getstatic""), 0, operands, false));operands = new byte[1];operands[0] = (byte) constantIndex;instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""ldc""), 0, operands, false));operands = new byte[2];NetByte.intToPair(methodRefIndex, operands, 0);instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""invokevirtual""), 0, operands, false));instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""return""), 0, null, false));attribute.insertInstructions(0, 0, instructions);attribute.setMaxLocals(1);attribute.codeCheck();System.out.println(""constantIndex="" + constantIndex + "" fieldRef="" + fieldRefIndex + "" methodRef="" + methodRefIndex);writer.writeClass(new FileOutputStream(""c:/cygnus/home/javaodb/classes/TestClass.class""));writer.readClass(new FileInputStream(""c:/cygnus/home/javaodb/classes/TestClass.class""));}public static void entering(String[] args) throws IOException, CodeCheckException {ClassWriter writer = new ClassWriter();writer.readClass(new BufferedInputStream(new FileInputStream(args[0])));int constantIndex = writer.getStringConstantIndex(""Entering "");int fieldRefIndex = writer.getReferenceIndex(ClassWriter.CONSTANT_Fieldref, ""java/lang/System"", ""out"", ""Ljava/io/PrintStream;"");int printlnRefIndex = writer.getReferenceIndex(ClassWriter.CONSTANT_Methodref, ""java/io/PrintStream"", ""println"", ""(Ljava/lang/String;)V"");int printRefIndex = writer.getReferenceIndex(ClassWriter.CONSTANT_Methodref, ""java/io/PrintStream"", ""print"", ""(Ljava/lang/String;)V"");for (Iterator i = writer.getMethods().iterator(); i.hasNext(); ) {MethodInfo method = (MethodInfo) i.next();if (method.getName().equals(""readConstant"")) continue;CodeAttribute attribute = method.getCodeAttribute();ArrayList instructions = new ArrayList(10);byte[] operands;operands = new byte[2];NetByte.intToPair(fieldRefIndex, operands, 0);instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""getstatic""), 0, operands, false));instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""dup""), 0, null, false));instructions.add(Instruction.appropriateLdc(constantIndex, false));operands = new byte[2];NetByte.intToPair(printRefIndex, operands, 0);instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""invokevirtual""), 0, operands, false));instructions.add(Instruction.appropriateLdc(writer.getStringConstantIndex(method.getName()), false));operands = new byte[2];NetByte.intToPair(printlnRefIndex, operands, 0);instructions.add(new Instruction(OpCode.getOpCodeByMnemonic(""invokevirtual""), 0, operands, false));attribute.insertInstructions(0, 0, instructions);attribute.codeCheck();}BufferedOutputStream outStream = new BufferedOutputStream(new FileOutputStream(args[1]));writer.writeClass(outStream);outStream.close();}private void copyFile(File sourceFile, File destFile) throws IOException {if (!destFile.exists()) {destFile.createNewFile();}FileChannel source = null;FileChannel destination = null;try {source = new FileInputStream(sourceFile).getChannel();destination = new FileOutputStream(destFile).getChannel();destination.transferFrom(source, 0, source.size());} finally {if (source != null) {source.close();}if (destination != null) {destination.close();}}}public static void main(String[] args) throws Exception {final URL url = new URL(""http://www.ebi.ac.uk/Tools/webservices/psicquic/registry/registry?action=ACTIVE&format=txt"");BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String str;Map<String, String> psiqcuicServices = new HashMap<String, String>();while ((str = in.readLine()) != null) {final int idx = str.indexOf('=');psiqcuicServices.put(str.substring(0, idx), str.substring(idx + 1, str.length()));}in.close();System.out.println(""Found "" + psiqcuicServices.size() + "" active service(s)."");for (Object o : psiqcuicServices.keySet()) {String serviceName = (String) o;String serviceUrl = psiqcuicServices.get(serviceName);System.out.println(serviceName + "" -> "" + serviceUrl);UniversalPsicquicClient client = new UniversalPsicquicClient(serviceUrl);try {SearchResult<?> result = client.getByInteractor(""brca2"", 0, 50);System.out.println(""Interactions found: "" + result.getTotalCount());for (BinaryInteraction binaryInteraction : result.getData()) {String interactorIdA = binaryInteraction.getInteractorA().getIdentifiers().iterator().next().getIdentifier();String interactorIdB = binaryInteraction.getInteractorB().getIdentifiers().iterator().next().getIdentifier();String interactionAc = ""-"";if (!binaryInteraction.getInteractionAcs().isEmpty()) {CrossReference cr = (CrossReference) binaryInteraction.getInteractionAcs().iterator().next();interactionAc = cr.getIdentifier();}System.out.println(""\tInteraction ("" + interactionAc + ""): "" + interactorIdA + "" interacts with "" + interactorIdB);}} catch (Throwable e) {System.err.println(""Service is down! "" + serviceName + ""("" + serviceUrl + "")"");}}}@Overridepublic String getLatestApplicationVersion() {String latestVersion = null;String latestVersionInfoURL = ""http://movie-browser.googlecode.com/svn/site/latest"";LOGGER.info(""Checking latest version info from: "" + latestVersionInfoURL);BufferedReader in = null;try {LOGGER.info(""Fetcing latest version info from: "" + latestVersionInfoURL);URL url = new URL(latestVersionInfoURL);in = new BufferedReader(new InputStreamReader(url.openStream()));String str;while ((str = in.readLine()) != null) {latestVersion = str;}} catch (Exception ex) {LOGGER.error(""Error fetching latest version info from: "" + latestVersionInfoURL, ex);} finally {try {in.close();} catch (Exception ex) {LOGGER.error(""Could not close inputstream"", ex);}}return latestVersion;}protected void assignListeners() {groupsList.addListSelectionListener(new ListSelectionListener() {@Overridepublic void valueChanged(ListSelectionEvent event) {refreshInfo();}});saveButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {JFileChooser fileDialog = new JFileChooser(""."");fileDialog.setFileFilter(ReaderData.mkExtensionFileFilter("".grp"", ""Group Files""));int outcome = fileDialog.showSaveDialog((Frame) null);if (outcome == JFileChooser.APPROVE_OPTION) {assert (fileDialog.getCurrentDirectory() != null);assert (fileDialog.getSelectedFile() != null);String fileName = fileDialog.getCurrentDirectory().toString() + File.separator + fileDialog.getSelectedFile().getName();try {PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(fileName)));ReaderWriterGroup.write(out, writer);System.err.println(""Wrote groups informations to output '"" + fileName + ""'."");out.close();} catch (IOException e) {System.err.println(""error while writing (GroupManager.saveClt):"");e.printStackTrace();}} else if (outcome == JFileChooser.CANCEL_OPTION) {}}});loadButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent evt) {JFileChooser fileDialog = new JFileChooser(""."");fileDialog.setFileFilter(ReaderData.mkExtensionFileFilter("".grp"", ""Group Files""));int outcome = fileDialog.showOpenDialog((Frame) null);if (outcome == JFileChooser.APPROVE_OPTION) {assert (fileDialog.getCurrentDirectory() != null);assert (fileDialog.getSelectedFile() != null);String fileName = fileDialog.getCurrentDirectory().toString() + File.separator + fileDialog.getSelectedFile().getName();BufferedReader fileReader = null;try {fileReader = new BufferedReader(new FileReader(fileName));ReaderWriterGroup.read(fileReader, writer);fileReader.close();} catch (Exception e) {System.err.println(""Exception while reading from file '"" + fileName + ""'."");System.err.println(e);}} else if (outcome == JFileChooser.CANCEL_OPTION) {}}});ItemListener propItemListener = new ItemListener() {@Overridepublic void itemStateChanged(ItemEvent event) {int[] indices = groupsList.getSelectedIndices();for (int index : indices) {Group group = getGroupFromListIndex(index);if (group != null) {if (event.getSource() instanceof JComboBox) {JComboBox eventSource = (JComboBox) event.getSource();if (eventSource == colorComboBox) {Color color = colorComboBox.getSelectedColor();assert (color != null);group.setColor(color);shapeComboBox.setColor(color);} else if (eventSource == shapeComboBox) {Shape shape = shapeComboBox.getSelectedShape();assert (shape != null);group.setShape(shape);}} else if (event.getSource() instanceof JCheckBox) {JCheckBox eventSource = (JCheckBox) event.getSource();if (eventSource == showGroupCheckBox) {group.visible = showGroupCheckBox.isSelected();} else if (eventSource == showGraphicInfoCheckBox) {group.info = showGraphicInfoCheckBox.isSelected();}}}}graph.notifyAboutGroupsChange(null);}};colorComboBox.addItemListener(propItemListener);shapeComboBox.addItemListener(propItemListener);showGroupCheckBox.addItemListener(propItemListener);showGraphicInfoCheckBox.addItemListener(propItemListener);showGroupfreeNodesCheckBox.addItemListener(new ItemListener() {@Overridepublic void itemStateChanged(ItemEvent event) {graph.getGroup(0).visible = showGroupfreeNodesCheckBox.isSelected();graph.notifyAboutGroupsChange(null);}});ActionListener propActionListener = new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {JButton botton = (JButton) event.getSource();Group group = getGroupFromListIndex(groupsList.getSelectedIndex());if (group != null) {for (GraphVertex graphVertex : group) {if (botton == showLabelsButton) {graphVertex.setShowName(NameVisibility.Priority.GROUPS, true);} else if (botton == hideLabelsButton) {graphVertex.setShowName(NameVisibility.Priority.GROUPS, false);}}graph.notifyAboutGroupsChange(null);}}};showLabelsButton.addActionListener(propActionListener);hideLabelsButton.addActionListener(propActionListener);newButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {String newGroupName = JOptionPane.showInputDialog(null, ""Enter a name"", ""Name of the new group"", JOptionPane.QUESTION_MESSAGE);if (newGroupName != null) {if (graph.getGroup(newGroupName) == null) {graph.addGroup(new Group(newGroupName, graph));}}}});editButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {Group group = getGroupFromListIndex(groupsList.getSelectedIndex());if (group != null) {DialogEditGroup dialog = new DialogEditGroup(graph, group);dialog.setModal(true);dialog.setVisible(true);}}});deleteButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {int index = groupsList.getSelectedIndex();if (index > 0 && index < graph.getNumberOfGroups() - 1) {graph.removeGroup(index);}}});upButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {int index = groupsList.getSelectedIndex();if (index < graph.getNumberOfGroups() - 1) {graph.moveGroupUp(index);groupsList.setSelectedIndex(index - 1);}}});downButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {int index = groupsList.getSelectedIndex();if (index < graph.getNumberOfGroups() - 1) {graph.moveGroupDown(index);groupsList.setSelectedIndex(index + 1);}}});}private static boolean downloadFile(URL remote, File local) throws IllegalArgumentException, IOException {if (local == null) throw new IllegalArgumentException(""Must specify remote file"");if (local.exists() && !local.canWrite()) throw new IOException(""Cannot write to "" + local);long lengthCurrent = local.exists() ? local.length() : -1l;if (lengthCurrent == 0) throw new IOException(""Cannot get the length for "" + local);long lastModifiedCurrent = local.exists() ? local.lastModified() : -1l;if (remote == null) throw new IllegalArgumentException(""Must specify remote url"");URLConnection urlConnection = remote.openConnection();urlConnection.setDoInput(true);urlConnection.setDoOutput(false);long lengthRemote = urlConnection.getContentLength();long lastModifiedRemote = urlConnection.getLastModified();if (lengthRemote == lengthCurrent) {LOGGER.fine(""Not downloading "" + remote + "" of length "" + lengthRemote + "" and date "" + (lastModifiedRemote > 0 ? new Date(lastModifiedRemote).toString() : ""n/a"") + "" for "" + local + "" of length "" + lengthCurrent + "" and date "" + new Date(lastModifiedCurrent));return false;}BufferedInputStream inputStream = null;BufferedOutputStream bufferedOutputStream = null;try {inputStream = new BufferedInputStream(urlConnection.getInputStream(), BUFFER_SIZE);bufferedOutputStream = new BufferedOutputStream(new FileOutputStream(local));byte[] buffer = new byte[BUFFER_SIZE];do {int count = inputStream.read(buffer);if (count < 0) break;bufferedOutputStream.write(buffer, 0, count);} while (true);return true;} finally {try {if (inputStream != null) inputStream.close();} catch (Throwable throwable) {}try {if (bufferedOutputStream != null) bufferedOutputStream.close();} catch (Throwable throwable) {}}}void copyFile(File src, File dst) throws IOException {InputStream in = new FileInputStream(src);OutputStream out = new FileOutputStream(dst);byte[] buf = new byte[1024];int len;while ((len = in.read(buf)) > 0) out.write(buf, 0, len);in.close();out.close();}public byte[] loadResource(String location) throws IOException {if ((location == null) || (location.length() == 0)) {throw new IOException(""The given resource location must not be null and non empty."");}URL url = buildURL(location);URLConnection cxn = url.openConnection();InputStream is = null;try {byte[] byteBuffer = new byte[2048];ByteArrayOutputStream bos = new ByteArrayOutputStream(2048);is = cxn.getInputStream();int bytesRead = 0;while ((bytesRead = is.read(byteBuffer, 0, 2048)) >= 0) {bos.write(byteBuffer, 0, bytesRead);}return bos.toByteArray();} finally {if (is != null) {is.close();}}}public boolean resourceExists(String location) {if ((location == null) || (location.length() == 0)) {return false;}try {URL url = buildURL(location);URLConnection cxn = url.openConnection();InputStream is = null;try {byte[] byteBuffer = new byte[2048];is = cxn.getInputStream();while (is.read(byteBuffer, 0, 2048) >= 0) ;return true;} finally {if (is != null) {is.close();}}} catch (IOException ex) {return false;}}"	5
"public ViewProperties(String basePath, String baseFile) throws Exception {FileInputStream input = null;String file = basePath + ""/"" + baseFile + "".properties"";properties = new Properties();try {URL url = MapViewer.class.getResource(file);properties.load(url.openStream());viewName = (String) properties.get(""view.name"");viewShape = (String) properties.get(""view.shape"");path = basePath + ""/"" + (String) properties.get(""icon.path"");iconHeight = getIntProperty(""icon.height"", 96);iconWidth = getIntProperty(""icon.width"", 96);fontSizeSmall = getIntProperty(""font.small.size"", 10);fontSizeMedium = getIntProperty(""font.medium.size"", 12);fontSizeLarge = getIntProperty(""font.large.size"", 16);fontSizeHuge = getIntProperty(""font.huge.size"", 20);if (viewShape.equals(""Hexagonal"")) {tileHeight = (int) (Math.sqrt(3.0) / 2.0 * iconWidth);tileWidth = (int) (iconWidth * 3.0 / 4.0);tileOffset = (int) (tileHeight / 2.0);} else {tileHeight = iconHeight;tileWidth = iconWidth;tileOffset = 0;}} catch (Exception e) {error(""Cannot load properties from file ["" + file + ""]"");throw e;}}private void write(File src, File dst, byte id3v1Tag[], byte id3v2HeadTag[], byte id3v2TailTag[]) throws IOException {if (src == null || !src.exists()) throw new IOException(Debug.getDebug(""missing src"", src));if (!src.getName().toLowerCase().endsWith("".mp3"")) throw new IOException(Debug.getDebug(""src not mp3"", src));if (dst == null) throw new IOException(Debug.getDebug(""missing dst"", dst));if (dst.exists()) {dst.delete();if (dst.exists()) throw new IOException(Debug.getDebug(""could not delete dst"", dst));}boolean hasId3v1 = new MyID3v1().hasID3v1(src);long id3v1Length = hasId3v1 ? ID3_V1_TAG_LENGTH : 0;long id3v2HeadLength = new MyID3v2().findID3v2HeadLength(src);long id3v2TailLength = new MyID3v2().findID3v2TailLength(src, hasId3v1);OutputStream os = null;InputStream is = null;try {dst.getParentFile().mkdirs();os = new FileOutputStream(dst);os = new BufferedOutputStream(os);if (!skipId3v2Head && !skipId3v2 && id3v2HeadTag != null) os.write(id3v2HeadTag);is = new FileInputStream(src);is = new BufferedInputStream(is);is.skip(id3v2HeadLength);long total_to_read = src.length();total_to_read -= id3v1Length;total_to_read -= id3v2HeadLength;total_to_read -= id3v2TailLength;byte buffer[] = new byte[1024];long total_read = 0;while (total_read < total_to_read) {int remainder = (int) (total_to_read - total_read);int readSize = Math.min(buffer.length, remainder);int read = is.read(buffer, 0, readSize);if (read <= 0) throw new IOException(""unexpected EOF"");os.write(buffer, 0, read);total_read += read;}if (!skipId3v2Tail && !skipId3v2 && id3v2TailTag != null) os.write(id3v2TailTag);if (!skipId3v1 && id3v1Tag != null) os.write(id3v1Tag);} finally {try {if (is != null) is.close();} catch (Throwable e) {Debug.debug(e);}try {if (os != null) os.close();} catch (Throwable e) {Debug.debug(e);}}}public Program createNewProgram(int projectID, String name, String description) throws AdaptationException {Program program = null;Connection connection = null;Statement statement = null;ResultSet resultSet = null;try {connection = DriverManager.getConnection(CONN_STR);connection.setAutoCommit(false);statement = connection.createStatement();String query = ""INSERT INTO Programs(projectID, name, "" + ""description, sourcePath) VALUES ( "" + projectID + "", "" + ""'"" + name + ""', "" + ""'"" + description + ""', "" + ""'"" + ""[unknown]"" + ""')"";log.debug(""SQL Query:\n"" + query);statement.executeUpdate(query);query = ""SELECT * FROM Programs WHERE "" + "" projectID=  "" + projectID + ""  AND "" + "" name= '"" + name + ""' AND "" + "" description = '"" + description + ""'"";resultSet = statement.executeQuery(query);if (!resultSet.next()) {connection.rollback();String msg = ""Attempt to create program failed"";log.error(msg);throw new AdaptationException(msg);}program = getProgram(resultSet);connection.commit();} catch (SQLException ex) {try {connection.rollback();} catch (Exception e) {}String msg = ""SQLException in createNewProgram"";log.error(msg, ex);throw new AdaptationException(msg, ex);} finally {try {resultSet.close();} catch (Exception ex) {}try {statement.close();} catch (Exception ex) {}try {connection.close();} catch (Exception ex) {}}return program;}public Program updateProgramPath(int id, String sourcePath) throws AdaptationException {Program program = null;Connection connection = null;Statement statement = null;ResultSet resultSet = null;try {String query = ""UPDATE Programs SET "" + ""sourcePath = '"" + sourcePath + ""' "" + ""WHERE id = "" + id;connection = DriverManager.getConnection(CONN_STR);statement = connection.createStatement();statement.executeUpdate(query);query = ""SELECT * from Programs WHERE id = "" + id;resultSet = statement.executeQuery(query);if (!resultSet.next()) {connection.rollback();String msg = ""Attempt to update program failed."";log.error(msg);throw new AdaptationException(msg);}program = getProgram(resultSet);connection.commit();} catch (SQLException ex) {try {connection.rollback();} catch (Exception e) {}String msg = ""SQLException in updateProgramPath"";log.error(msg, ex);throw new AdaptationException(msg, ex);} finally {try {resultSet.close();} catch (Exception ex) {}try {statement.close();} catch (Exception ex) {}try {connection.close();} catch (Exception ex) {}}return program;}public Program deleteProgram(int id) throws AdaptationException {Program program = null;Connection connection = null;Statement statement = null;ResultSet resultSet = null;try {String query = ""SELECT * FROM Programs WHERE id = "" + id;connection = DriverManager.getConnection(CONN_STR);statement = connection.createStatement();resultSet = statement.executeQuery(query);if (!resultSet.next()) {connection.rollback();String msg = ""Attempt to delete program failed."";log.error(msg);throw new AdaptationException(msg);}program = getProgram(resultSet);query = ""DELETE FROM Programs WHERE id = "" + id;statement.executeUpdate(query);connection.commit();} catch (SQLException ex) {try {connection.rollback();} catch (Exception e) {}String msg = ""SQLException in deleteProgram"";log.error(msg, ex);throw new AdaptationException(msg, ex);} finally {try {resultSet.close();} catch (Exception ex) {}try {statement.close();} catch (Exception ex) {}try {connection.close();} catch (Exception ex) {}}return program;}private static void copyImage(String srcImg, String destImg) {try {FileChannel srcChannel = new FileInputStream(srcImg).getChannel();FileChannel dstChannel = new FileOutputStream(destImg).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (Exception e) {e.printStackTrace();}}public HttpResponse executeWithoutRewriting(HttpUriRequest request, HttpContext context) throws IOException {int code = -1;long start = SystemClock.elapsedRealtime();try {HttpResponse response;mConnectionAllocated.set(null);if (NetworkStatsEntity.shouldLogNetworkStats()) {int uid = android.os.Process.myUid();long startTx = NetStat.getUidTxBytes(uid);long startRx = NetStat.getUidRxBytes(uid);response = mClient.execute(request, context);HttpEntity origEntity = response == null ? null : response.getEntity();if (origEntity != null) {long now = SystemClock.elapsedRealtime();long elapsed = now - start;NetworkStatsEntity entity = new NetworkStatsEntity(origEntity, mAppName, uid, startTx, startRx, elapsed, now);response.setEntity(entity);}} else {response = mClient.execute(request, context);}code = response.getStatusLine().getStatusCode();return response;} finally {try {long elapsed = SystemClock.elapsedRealtime() - start;ContentValues values = new ContentValues();values.put(Checkin.Stats.COUNT, 1);values.put(Checkin.Stats.SUM, elapsed / 1000.0);values.put(Checkin.Stats.TAG, Checkin.Stats.Tag.HTTP_REQUEST + "":"" + mAppName);mResolver.insert(Checkin.Stats.CONTENT_URI, values);if (mConnectionAllocated.get() == null && code >= 0) {values.put(Checkin.Stats.TAG, Checkin.Stats.Tag.HTTP_REUSED + "":"" + mAppName);mResolver.insert(Checkin.Stats.CONTENT_URI, values);}String status = code < 0 ? ""IOException"" : Integer.toString(code);values.put(Checkin.Stats.TAG, Checkin.Stats.Tag.HTTP_STATUS + "":"" + mAppName + "":"" + status);mResolver.insert(Checkin.Stats.CONTENT_URI, values);} catch (Exception e) {Log.e(TAG, ""Error recording stats"", e);}}}public HttpResponse execute(HttpUriRequest request, HttpContext context) throws IOException {URI uri = request.getURI();String original = uri.toString();UrlRules rules = UrlRules.getRules(mResolver);UrlRules.Rule rule = rules.matchRule(original);String rewritten = rule.apply(original);if (rewritten == null) {Log.w(TAG, ""Blocked by "" + rule.mName + "": "" + original);throw new BlockedRequestException(rule);} else if (rewritten == original) {return executeWithoutRewriting(request, context);}try {uri = new URI(rewritten);} catch (URISyntaxException e) {throw new RuntimeException(""Bad URL from rule: "" + rule.mName, e);}RequestWrapper wrapper = wrapRequest(request);wrapper.setURI(uri);request = wrapper;if (LOCAL_LOGV) Log.v(TAG, ""Rule "" + rule.mName + "": "" + original + "" -> "" + rewritten);return executeWithoutRewriting(request, context);}public synchronized void connect() throws FTPConnectionException {checkLocked();try {int reply;this.disconnect();if (isSecured()) {this.client = new FTPSClient(protocol, protection, impliciteSec, null, null);} else {this.client = new FTPClient();}if (this.controlEncoding != null) {this.client.setControlEncoding(this.controlEncoding);debug(""control encoding : "", controlEncoding);}Logger.defaultLogger().info(""Trying to connect to server : "" + this.remoteServer + "" ..."");debug(""connect : connect"", remoteServer);client.connect(remoteServer, this.remotePort);Logger.defaultLogger().info(""Received FTP server response : "" + formatFTPReplyString(client.getReplyString()));this.connectionId = Util.getRndLong();reply = client.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {String msg = formatFTPReplyString(client.getReplyString());this.disconnect();throw new FTPConnectionException(""Unable to communicate with remote FTP server. Got message : "" + msg);} else {Logger.defaultLogger().info(""Trying to log in with user : "" + this.login + "" ..."");debug(""connect : login"", login + ""/"" + password);if (!client.login(this.login, this.password)) {String msg = formatFTPReplyString(client.getReplyString());this.disconnect();throw new FTPConnectionException(""Unable to login on FTP server ("" + login + ""/"" + password + ""). Received response : "" + msg);} else {Logger.defaultLogger().info(""Logged in with user : "" + this.login + "". Received response : "" + formatFTPReplyString(client.getReplyString()));if (this.passivMode) {Logger.defaultLogger().info(""Switching to passive mode ..."");debug(""connect : pasv"");client.enterLocalPassiveMode();reply = client.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {String msg = formatFTPReplyString(client.getReplyString());this.disconnect();throw new FTPConnectionException(""Unable to switch to passiv mode. Received response : "" + msg);} else {this.updateOpTime();}} else {this.updateOpTime();}debug(""connect : bin"");client.setFileType(FTP.BINARY_FILE_TYPE);Logger.defaultLogger().info(""Connected to server : "" + this.remoteServer);}}} catch (UnknownHostException e) {resetClient(e);throw new FTPConnectionException(""Unknown FTP server : "" + this.remoteServer);} catch (SocketException e) {resetClient(e);throw new FTPConnectionException(""Error during FTP connection : "" + e.getMessage());} catch (IOException e) {resetClient(e);throw new FTPConnectionException(""Error during FTP connection : "" + e.getMessage());} finally {clearCache();}}private void weightAndPlaceClasses() {int rows = getRows();for (int curRow = _maxPackageRank; curRow < rows; curRow++) {xPos = getHGap() / 2;BOTLObjectSourceDiagramNode[] rowObject = getObjectsInRow(curRow);for (int i = 0; i < rowObject.length; i++) {if (curRow == _maxPackageRank) {int nDownlinks = rowObject[i].getDownlinks().size();rowObject[i].setWeight((nDownlinks > 0) ? (1 / nDownlinks) : 2);} else {Vector uplinks = rowObject[i].getUplinks();int nUplinks = uplinks.size();if (nUplinks > 0) {float average_col = 0;for (int j = 0; j < uplinks.size(); j++) {average_col += ((BOTLObjectSourceDiagramNode) (uplinks.elementAt(j))).getColumn();}average_col /= nUplinks;rowObject[i].setWeight(average_col);} else {rowObject[i].setWeight(1000);}}}int[] pos = new int[rowObject.length];for (int i = 0; i < pos.length; i++) {pos[i] = i;}boolean swapped = true;while (swapped) {swapped = false;for (int i = 0; i < pos.length - 1; i++) {if (rowObject[pos[i]].getWeight() > rowObject[pos[i + 1]].getWeight()) {int temp = pos[i];pos[i] = pos[i + 1];pos[i + 1] = temp;swapped = true;}}}for (int i = 0; i < pos.length; i++) {rowObject[pos[i]].setColumn(i);if ((i > _vMax) && (rowObject[pos[i]].getUplinks().size() == 0) && (rowObject[pos[i]].getDownlinks().size() == 0)) {if (getColumns(rows - 1) > _vMax) {rows++;}rowObject[pos[i]].setRank(rows - 1);} else {rowObject[pos[i]].setLocation(new Point(xPos, yPos));xPos += rowObject[pos[i]].getSize().getWidth() + getHGap();}}yPos += getRowHeight(curRow) + getVGap();}}"	5
"@Overridepublic int updateStatus(UserInfo userInfo, String status) throws Exception {OAuthConsumer consumer = SnsConstant.getOAuthConsumer(SnsConstant.SOHU);consumer.setTokenWithSecret(userInfo.getAccessToken(), userInfo.getAccessSecret());try {URL url = new URL(SnsConstant.SOHU_UPDATE_STATUS_URL);HttpURLConnection request = (HttpURLConnection) url.openConnection();request.setDoOutput(true);request.setRequestMethod(""POST"");HttpParameters para = new HttpParameters();para.put(""status"", StringUtils.utf8Encode(status).replaceAll(""\\+"", ""%20""));consumer.setAdditionalParameters(para);consumer.sign(request);OutputStream ot = request.getOutputStream();ot.write((""status="" + URLEncoder.encode(status, ""utf-8"")).replaceAll(""\\+"", ""%20"").getBytes());ot.flush();ot.close();System.out.println(""Sending request..."");request.connect();System.out.println(""Response: "" + request.getResponseCode() + "" "" + request.getResponseMessage());BufferedReader reader = new BufferedReader(new InputStreamReader(request.getInputStream()));String b = null;while ((b = reader.readLine()) != null) {System.out.println(b);}return SnsConstant.SOHU_UPDATE_STATUS_SUCC_WHAT;} catch (Exception e) {SnsConstant.SOHU_OPERATOR_FAIL_REASON = processException(e.getMessage());return SnsConstant.SOHU_UPDATE_STATUS_FAIL_WHAT;}}@Overridepublic int updateStatus(UserInfo userInfo, String status, String picturePath) {HttpClient client = new DefaultHttpClient();HttpPost post = new HttpPost(SnsConstant.SOHU_UPDATE_STATUS_URL);List<NameValuePair> parameters = new ArrayList<NameValuePair>();parameters.add(new BasicNameValuePair(""parameter1"", ""parameterValue1""));parameters.add(new BasicNameValuePair(""parameter2"", ""parameterValue2""));try {post.setEntity(new UrlEncodedFormEntity(parameters));} catch (UnsupportedEncodingException e) {e.printStackTrace();}try {HttpResponse response = client.execute(post);} catch (ClientProtocolException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return 0;}public void save(File selectedFile) throws IOException {if (storeEntriesInFiles) {boolean moved = false;for (int i = 0; i < tempFiles.size(); i++) {File newFile = new File(selectedFile.getAbsolutePath() + ""_"" + Integer.toString(i) + "".zettmp"");moved = tempFiles.get(i).renameTo(newFile);if (!moved) {BufferedReader read = new BufferedReader(new FileReader(tempFiles.get(i)));PrintWriter write = new PrintWriter(newFile);String s;while ((s = read.readLine()) != null) write.print(s);read.close();write.flush();write.close();tempFiles.get(i).delete();}tempFiles.set(i, newFile);}}GZIPOutputStream output = new GZIPOutputStream(new BufferedOutputStream(new FileOutputStream(selectedFile)));XStream xml_convert = new XStream();xml_convert.setMode(XStream.ID_REFERENCES);xml_convert.toXML(this, output);output.flush();output.close();}public static String md5(final String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md = MessageDigest.getInstance(""MD5"");byte[] md5hash = new byte[FOUR_BYTES];md.update(text.getBytes(""iso-8859-1""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);}static byte[] getSystemEntropy() {byte[] ba;final MessageDigest md;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException nsae) {throw new InternalError(""internal error: SHA-1 not available."");}byte b = (byte) System.currentTimeMillis();md.update(b);java.security.AccessController.doPrivileged(new java.security.PrivilegedAction() {public Object run() {try {String s;Properties p = System.getProperties();Enumeration e = p.propertyNames();while (e.hasMoreElements()) {s = (String) e.nextElement();md.update(s.getBytes());md.update(p.getProperty(s).getBytes());}md.update(InetAddress.getLocalHost().toString().getBytes());File f = new File(p.getProperty(""java.io.tmpdir""));String[] sa = f.list();for (int i = 0; i < sa.length; i++) md.update(sa[i].getBytes());} catch (Exception ex) {md.update((byte) ex.hashCode());}Runtime rt = Runtime.getRuntime();byte[] memBytes = longToByteArray(rt.totalMemory());md.update(memBytes, 0, memBytes.length);memBytes = longToByteArray(rt.freeMemory());md.update(memBytes, 0, memBytes.length);return null;}});return md.digest();}private static void serveHTML() throws Exception {Bus bus = BusFactory.getDefaultBus();DestinationFactoryManager dfm = bus.getExtension(DestinationFactoryManager.class);DestinationFactory df = dfm.getDestinationFactory(""http://cxf.apache.org/transports/http/configuration"");EndpointInfo ei = new EndpointInfo();ei.setAddress(""http://localhost:8080/test.html"");Destination d = df.getDestination(ei);d.setMessageObserver(new MessageObserver() {public void onMessage(Message message) {try {ExchangeImpl ex = new ExchangeImpl();ex.setInMessage(message);Conduit backChannel = message.getDestination().getBackChannel(message, null, null);MessageImpl res = new MessageImpl();res.put(Message.CONTENT_TYPE, ""text/html"");backChannel.prepare(res);OutputStream out = res.getContent(OutputStream.class);FileInputStream is = new FileInputStream(""test.html"");IOUtils.copy(is, out, 2048);out.flush();out.close();is.close();backChannel.close(res);} catch (Exception e) {e.printStackTrace();}}});}public void onMessage(Message message) {try {ExchangeImpl ex = new ExchangeImpl();ex.setInMessage(message);Conduit backChannel = message.getDestination().getBackChannel(message, null, null);MessageImpl res = new MessageImpl();res.put(Message.CONTENT_TYPE, ""text/html"");backChannel.prepare(res);OutputStream out = res.getContent(OutputStream.class);FileInputStream is = new FileInputStream(""test.html"");IOUtils.copy(is, out, 2048);out.flush();out.close();is.close();backChannel.close(res);} catch (Exception e) {e.printStackTrace();}}public String readRemoteFile() throws IOException {String response = """";boolean eof = false;URL url = new URL(StaticData.remoteFile);InputStream is = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(is));String s;s = br.readLine();response = s;while (!eof) {try {s = br.readLine();if (s == null) {eof = true;br.close();} else response += s;} catch (EOFException eo) {eof = true;} catch (IOException e) {System.out.println(""IO Error : "" + e.getMessage());}}return response;}public void copy(String pathFileIn, String pathFileOut) {try {File inputFile = new File(pathFileIn);File outputFile = new File(pathFileOut);FileReader in = new FileReader(inputFile);File outDir = new File(DirOut);if (!outDir.exists()) outDir.mkdirs();FileWriter out = new FileWriter(outputFile);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();this.printColumn(inputFile.getName(), outputFile.getPath());} catch (Exception e) {e.printStackTrace();}}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer(128);try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer(32);for (int j = 0; j < array.length; ++j) {int b = array[j] & TWO_BYTES;if (b < PAD_BELOW) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {}}"	5
"public void viewFile(int file_nx) {FTPClient ftp = new FTPClient();boolean error = false;try {int reply;ftp.connect(""tgftp.nws.noaa.gov"");ftp.login(""anonymous"", """");Log.d(""WXDroid"", ""Connected to tgftp.nws.noaa.gov."");Log.d(""WXDroid"", ftp.getReplyString());reply = ftp.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {ftp.disconnect();System.err.println(""FTP server refused connection."");System.exit(1);}ftp.changeWorkingDirectory(""fax"");Log.d(""WXDroid"", ""working directory: "" + ftp.printWorkingDirectory());ftp.setFileType(FTPClient.BINARY_FILE_TYPE);InputStream img_file = ftp.retrieveFileStream(""PYAA10.gif"");Intent intent = new Intent();intent.setClass(WXdroid.this, showProgressFTP.class);startActivity(intent);String storage_state = Environment.getExternalStorageState();if (storage_state.contains(""mounted"")) {String filepath = Environment.getExternalStorageDirectory().getAbsolutePath() + ""/NOAAWX/"";File imageDirectory = new File(filepath);File local_file = new File(filepath + ""PYAA10.gif"");OutputStream out = new FileOutputStream(local_file);byte[] buffer = new byte[1024];int count;while ((count = img_file.read(buffer)) != -1) {if (Thread.interrupted() == true) {String functionName = Thread.currentThread().getStackTrace()[2].getMethodName() + ""()"";throw new InterruptedException(""The function "" + functionName + "" was interrupted."");}out.write(buffer, 0, count);}showImage();out.flush();out.close();img_file.close();Log.d(""WXDroid"", ""file saved: "" + filepath + "" "" + local_file);} else {Log.d(""WXDroid"", ""The SD card is not mounted"");}ftp.logout();ftp.disconnect();} catch (IOException e) {error = true;e.printStackTrace();} catch (InterruptedException e) {e.printStackTrace();} finally {if (ftp.isConnected()) {try {ftp.disconnect();} catch (IOException ioe) {}}}}public String getImageURL(String text) {String imgURL = """";try {URL url = new URL(""http://images.search.yahoo.com/search/images?p="" + URLEncoder.encode(text));URLConnection connection = url.openConnection();DataInputStream in = new DataInputStream(connection.getInputStream());String line;Pattern imgPattern = Pattern.compile(""isrc=\""([^\""]*)\"""");while ((line = in.readLine()) != null) {Matcher match = imgPattern.matcher(line);if (match.find()) {imgURL = match.group(1);break;}}in.close();} catch (Exception e) {}return imgURL;}@Overridepublic void vote(String urlString, Map<String, String> headData, Map<String, String> paramData) {HttpURLConnection httpConn = null;try {URL url = new URL(urlString);httpConn = (HttpURLConnection) url.openConnection();String cookies = getCookies(httpConn);System.out.println(cookies);BufferedReader post = new BufferedReader(new InputStreamReader(httpConn.getInputStream(), ""GB2312""));String text = null;while ((text = post.readLine()) != null) {System.out.println(text);}} catch (MalformedURLException e) {e.printStackTrace();throw new VoteBeanException(""网址不正确"", e);} catch (IOException e) {e.printStackTrace();throw new VoteBeanException(""不能打开网址"", e);}}public List<SatelliteElementSet> parseTLE(String urlString) throws IOException {List<SatelliteElementSet> elementSets = new ArrayList<SatelliteElementSet>();BufferedReader reader = null;try {String line = null;int i = 0;URL url = new URL(urlString);String[] lines = new String[3];reader = new BufferedReader(new InputStreamReader(url.openStream()));while ((line = reader.readLine()) != null) {i++;switch(i) {case 1:{lines[0] = line;break;}case 2:{lines[1] = line;break;}case 3:{lines[2] = line;Long catnum = Long.parseLong(StringUtils.strip(lines[1].substring(2, 7)));long setnum = Long.parseLong(StringUtils.strip(lines[1].substring(64, 68)));elementSets.add(new SatelliteElementSet(catnum, lines, setnum, Calendar.getInstance(TZ).getTime()));i = 0;break;}default:{throw new IOException(""TLE string did not contain three elements"");}}}} finally {if (null != reader) {reader.close();}}return elementSets;}public FlickrObject perform(boolean chkResponse) throws FlickrException {validate();String data = getRequestData();OutputStream os = null;InputStream is = null;try {URL url = null;try {url = new URL(m_url);} catch (MalformedURLException mux) {IllegalStateException iax = new IllegalStateException();iax.initCause(mux);throw iax;}HttpURLConnection con = (HttpURLConnection) url.openConnection();con.setDoOutput(true);con.setRequestMethod(""POST"");os = con.getOutputStream();OutputStreamWriter osw = new OutputStreamWriter(os);osw.write(data);osw.flush();is = con.getInputStream();return processRespons(is, chkResponse);} catch (FlickrException fx) {throw fx;} catch (IOException iox) {throw new FlickrException(iox);} finally {if (os != null) try {os.close();} catch (IOException _) {}if (is != null) try {is.close();} catch (IOException _) {}}}private final void saveCopy(String source, String destination) {BufferedInputStream from = null;BufferedOutputStream to = null;try {from = new BufferedInputStream(new FileInputStream(source));to = new BufferedOutputStream(new FileOutputStream(destination));byte[] buffer = new byte[65535];int bytes_read;while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read);} catch (Exception e) {LogWriter.writeLog(""Exception "" + e + "" copying file"");}try {to.close();from.close();} catch (Exception e) {LogWriter.writeLog(""Exception "" + e + "" closing files"");}to = null;from = null;}public final void saveAsCopy(String current_image, String destination) {BufferedInputStream from = null;BufferedOutputStream to = null;String source = temp_dir + key + current_image;try {from = new BufferedInputStream(new FileInputStream(source));to = new BufferedOutputStream(new FileOutputStream(destination));byte[] buffer = new byte[65535];int bytes_read;while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read);} catch (Exception e) {LogWriter.writeLog(""Exception "" + e + "" copying file"");}try {to.close();from.close();} catch (Exception e) {LogWriter.writeLog(""Exception "" + e + "" closing files"");}}public static final void copy(String source, String destination) {BufferedInputStream from = null;BufferedOutputStream to = null;try {from = new BufferedInputStream(new FileInputStream(source));to = new BufferedOutputStream(new FileOutputStream(destination));byte[] buffer = new byte[65535];int bytes_read;while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read);} catch (Exception e) {LogWriter.writeLog(""Exception "" + e + "" copying file"");}try {to.close();from.close();} catch (Exception e) {LogWriter.writeLog(""Exception "" + e + "" closing files"");}}public static void doVersionCheck(View view) {view.showWaitCursor();try {URL url = new URL(jEdit.getProperty(""version-check.url""));InputStream in = url.openStream();BufferedReader bin = new BufferedReader(new InputStreamReader(in));String line;String develBuild = null;String stableBuild = null;while ((line = bin.readLine()) != null) {if (line.startsWith("".build"")) develBuild = line.substring(6).trim(); else if (line.startsWith("".stablebuild"")) stableBuild = line.substring(12).trim();}bin.close();if (develBuild != null && stableBuild != null) {doVersionCheck(view, stableBuild, develBuild);}} catch (IOException e) {String[] args = { jEdit.getProperty(""version-check.url""), e.toString() };GUIUtilities.error(view, ""read-error"", args);}view.hideWaitCursor();}public static void copyFile(File src, File dest) throws IOException {FileInputStream fis = new FileInputStream(src);FileOutputStream fos = new FileOutputStream(dest);java.nio.channels.FileChannel channelSrc = fis.getChannel();java.nio.channels.FileChannel channelDest = fos.getChannel();channelSrc.transferTo(0, channelSrc.size(), channelDest);fis.close();fos.close();}"	5
"public Vector<Question> reload() throws IOException {Vector<Question> questions = new Vector<Question>();InputStream is = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(is));shortName = br.readLine();if (shortName != null && shortName.equals(""SHORTNAME"")) {shortName = br.readLine();author = br.readLine();if (author != null && author.equals(""AUTHOR"")) {author = br.readLine();description = br.readLine();if (description != null && description.equals(""DESCRIPTION"")) {description = br.readLine();try {questions = QuestionLoader.getQuestions(br);} catch (IOException ioe) {ioe.printStackTrace();throw ioe;} finally {br.close();is.close();}} else {throw new IllegalArgumentException();}} else {throw new IllegalArgumentException();}} else {throw new IllegalArgumentException();}return questions;}protected void configureGraphicalViewer() {super.configureGraphicalViewer();GraphicalViewer viewer = getGraphicalViewer();viewer.setEditPartFactory(createEditPartFactory());ScalableRootEditPart rootEditPart = new ScalableRootEditPart();viewer.setRootEditPart(rootEditPart);ZoomManager manager = rootEditPart.getZoomManager();double[] zoomLevels = new double[] { 0.25, 0.5, 0.75, 1.0, 1.5, 2.0, 2.5, 3.0, 4.0, 5.0, 10.0, 20.0 };manager.setZoomLevels(zoomLevels);ArrayList zoomContributions = new ArrayList();zoomContributions.add(ZoomManager.FIT_ALL);zoomContributions.add(ZoomManager.FIT_HEIGHT);zoomContributions.add(ZoomManager.FIT_WIDTH);manager.setZoomLevelContributions(zoomContributions);getActionRegistry().registerAction(new ZoomInAction(manager));getActionRegistry().registerAction(new ZoomOutAction(manager));getGraphicalViewer().setKeyHandler(new GraphicalViewerKeyHandler(getGraphicalViewer()));String menuId = this.getClass().getName() + "".EditorContext"";MenuManager menuMgr = new MenuManager(menuId, menuId);openPropertyAction = new OpenPropertyViewAction(viewer);openOutlineAction = new OpenOutlineViewAction(viewer);saveAsImageAction = new SaveAsImageAction(viewer);createDiagramAction(viewer);getSite().registerContextMenu(menuId, menuMgr, viewer);PrintAction printAction = new PrintAction(this);printAction.setImageDescriptor(UMLPlugin.getImageDescriptor(""icons/print.gif""));getActionRegistry().registerAction(printAction);final DeleteAction deleteAction = new DeleteAction((IWorkbenchPart) this);deleteAction.setSelectionProvider(getGraphicalViewer());getActionRegistry().registerAction(deleteAction);viewer.addSelectionChangedListener(new ISelectionChangedListener() {public void selectionChanged(SelectionChangedEvent event) {deleteAction.update();}});menuMgr.add(new Separator(""edit""));menuMgr.add(getActionRegistry().getAction(ActionFactory.DELETE.getId()));menuMgr.add(getActionRegistry().getAction(ActionFactory.UNDO.getId()));menuMgr.add(getActionRegistry().getAction(ActionFactory.REDO.getId()));menuMgr.add(new Separator(""zoom""));menuMgr.add(getActionRegistry().getAction(GEFActionConstants.ZOOM_IN));menuMgr.add(getActionRegistry().getAction(GEFActionConstants.ZOOM_OUT));fillDiagramPopupMenu(menuMgr);menuMgr.add(new Separator(""print""));menuMgr.add(saveAsImageAction);menuMgr.add(printAction);menuMgr.add(new Separator(""views""));menuMgr.add(openPropertyAction);menuMgr.add(openOutlineAction);menuMgr.add(new Separator(""generate""));menuMgr.add(new Separator(""additions""));viewer.setContextMenu(menuMgr);viewer.setKeyHandler(new GraphicalViewerKeyHandler(viewer).setParent(getCommonKeyHandler()));}public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException {if (!clazz.isPrimitive()) {ClassLoader cl = clazz.getClassLoader();if (cl == loader) {if (clazz.isArray()) return checkTypeChange(getArrayType(clazz), buildDir, refFile);String path = clazz.getName().replace('.', File.separatorChar) + "".class"";File file = new File(buildDir, path);long lastMod = Long.MAX_VALUE;if (!file.exists()) {URL url = cl.getResource(path);if (url == null) throw new MojoExecutionException(""Can't get URL for webservice class '"" + clazz.getName() + ""' from jar file.""); else {try {JarURLConnection con = (JarURLConnection) url.openConnection();lastMod = con.getJarEntry().getTime();} catch (IOException x) {throw new MojoExecutionException(""Can't get modification time for webservice class '"" + clazz.getName() + ""' from jar file."");}}} else {lastMod = file.lastModified();}if (refFile.lastModified() < lastMod) return true;if (clazz.isInterface()) {Class<?>[] itfs = clazz.getInterfaces();for (int i = 0; i < itfs.length; i++) {boolean changed = checkTypeChange(itfs[i], buildDir, refFile);if (changed) return true;}} else {Class<?> sup = clazz.getSuperclass();boolean changed = checkTypeChange(sup, buildDir, refFile);if (changed) return true;}}}return false;}private static List retrieveQuotes(Report report, Symbol symbol, String prefix, TradingDate startDate, TradingDate endDate) throws ImportExportException {List quotes = new ArrayList();String URLString = constructURL(symbol, prefix, startDate, endDate);EODQuoteFilter filter = new GoogleEODQuoteFilter(symbol);PreferencesManager.ProxyPreferences proxyPreferences = PreferencesManager.getProxySettings();try {URL url = new URL(URLString);InputStreamReader input = new InputStreamReader(url.openStream());BufferedReader bufferedInput = new BufferedReader(input);String line = bufferedInput.readLine();while (line != null) {line = bufferedInput.readLine();if (line != null) {try {EODQuote quote = filter.toEODQuote(line);quotes.add(quote);verify(report, quote);} catch (QuoteFormatException e) {report.addError(Locale.getString(""GOOGLE_DISPLAY_URL"") + "":"" + symbol + "":"" + Locale.getString(""ERROR"") + "": "" + e.getMessage());}}}bufferedInput.close();} catch (BindException e) {throw new ImportExportException(Locale.getString(""UNABLE_TO_CONNECT_ERROR"", e.getMessage()));} catch (ConnectException e) {throw new ImportExportException(Locale.getString(""UNABLE_TO_CONNECT_ERROR"", e.getMessage()));} catch (UnknownHostException e) {throw new ImportExportException(Locale.getString(""UNKNOWN_HOST_ERROR"", e.getMessage()));} catch (NoRouteToHostException e) {throw new ImportExportException(Locale.getString(""DESTINATION_UNREACHABLE_ERROR"", e.getMessage()));} catch (MalformedURLException e) {throw new ImportExportException(Locale.getString(""INVALID_PROXY_ERROR"", proxyPreferences.host, proxyPreferences.port));} catch (FileNotFoundException e) {} catch (IOException e) {throw new ImportExportException(Locale.getString(""ERROR_DOWNLOADING_QUOTES""));}return quotes;}private static File createFileFromURL(URL url) throws IOException {File tempFile = File.createTempFile(""oboFile"", "".obo"");PrintStream ps = new PrintStream(tempFile);BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = reader.readLine()) != null) {ps.println(line);}ps.close();return tempFile;}private final long test(final boolean applyFilter, final int executionCount) throws NoSuchAlgorithmException, NoSuchPaddingException, FileNotFoundException, IOException, RuleLoadingException {final boolean stripHtmlEnabled = true;final boolean injectSecretTokensEnabled = true;final boolean encryptQueryStringsEnabled = true;final boolean protectParamsAndFormsEnabled = true;final boolean applyExtraProtectionForDisabledFormFields = true;final boolean applyExtraProtectionForReadonlyFormFields = false;final boolean applyExtraProtectionForRequestParamValueCount = false;final ContentInjectionHelper helper = new ContentInjectionHelper();final RuleFileLoader ruleFileLoaderModificationExcludes = new ClasspathZipRuleFileLoader();ruleFileLoaderModificationExcludes.setPath(RuleParameter.MODIFICATION_EXCLUDES_DEFAULT.getValue());final ContentModificationExcludeDefinitionContainer containerModExcludes = new ContentModificationExcludeDefinitionContainer(ruleFileLoaderModificationExcludes);containerModExcludes.parseDefinitions();helper.setContentModificationExcludeDefinitions(containerModExcludes);final AttackHandler attackHandler = new AttackHandler(null, 123, 600000, 100000, 300000, 300000, null, ""MOCK"", false, false, 0, false, false, Pattern.compile(""sjghggfakgfjagfgajgfjasgfs""), Pattern.compile(""sjghggfakgfjagfgajgfjasgfs""), true, new AttackMailHandler());final SessionCreationTracker sessionCreationTracker = new SessionCreationTracker(attackHandler, 0, 600000, 300000, 0, """", """", """", """");final RequestWrapper request = new RequestWrapper(new RequestMock(), helper, sessionCreationTracker, ""123.456.789.000"", false, true, true);final RuleFileLoader ruleFileLoaderResponseModifications = new ClasspathZipRuleFileLoader();ruleFileLoaderResponseModifications.setPath(RuleParameter.RESPONSE_MODIFICATIONS_DEFAULT.getValue());final ResponseModificationDefinitionContainer container = new ResponseModificationDefinitionContainer(ruleFileLoaderResponseModifications);container.parseDefinitions();final ResponseModificationDefinition[] responseModificationDefinitions = downCast(container.getAllEnabledRequestDefinitions());final List<Pattern> tmpPatternsToExcludeCompleteTag = new ArrayList<Pattern>(responseModificationDefinitions.length);final List<Pattern> tmpPatternsToExcludeCompleteScript = new ArrayList<Pattern>(responseModificationDefinitions.length);final List<Pattern> tmpPatternsToExcludeLinksWithinScripts = new ArrayList<Pattern>(responseModificationDefinitions.length);final List<Pattern> tmpPatternsToExcludeLinksWithinTags = new ArrayList<Pattern>(responseModificationDefinitions.length);final List<Pattern> tmpPatternsToCaptureLinksWithinScripts = new ArrayList<Pattern>(responseModificationDefinitions.length);final List<Pattern> tmpPatternsToCaptureLinksWithinTags = new ArrayList<Pattern>(responseModificationDefinitions.length);final List<WordDictionary> tmpPrefiltersToExcludeCompleteTag = new ArrayList<WordDictionary>(responseModificationDefinitions.length);final List<WordDictionary> tmpPrefiltersToExcludeCompleteScript = new ArrayList<WordDictionary>(responseModificationDefinitions.length);final List<WordDictionary> tmpPrefiltersToExcludeLinksWithinScripts = new ArrayList<WordDictionary>(responseModificationDefinitions.length);final List<WordDictionary> tmpPrefiltersToExcludeLinksWithinTags = new ArrayList<WordDictionary>(responseModificationDefinitions.length);final List<WordDictionary> tmpPrefiltersToCaptureLinksWithinScripts = new ArrayList<WordDictionary>(responseModificationDefinitions.length);final List<WordDictionary> tmpPrefiltersToCaptureLinksWithinTags = new ArrayList<WordDictionary>(responseModificationDefinitions.length);final List<Integer[]> tmpGroupNumbersToCaptureLinksWithinScripts = new ArrayList<Integer[]>(responseModificationDefinitions.length);final List<Integer[]> tmpGroupNumbersToCaptureLinksWithinTags = new ArrayList<Integer[]>(responseModificationDefinitions.length);for (int i = 0; i < responseModificationDefinitions.length; i++) {final ResponseModificationDefinition responseModificationDefinition = responseModificationDefinitions[i];if (responseModificationDefinition.isMatchesScripts()) {tmpPatternsToExcludeCompleteScript.add(responseModificationDefinition.getScriptExclusionPattern());tmpPrefiltersToExcludeCompleteScript.add(responseModificationDefinition.getScriptExclusionPrefilter());tmpPatternsToExcludeLinksWithinScripts.add(responseModificationDefinition.getUrlExclusionPattern());tmpPrefiltersToExcludeLinksWithinScripts.add(responseModificationDefinition.getUrlExclusionPrefilter());tmpPatternsToCaptureLinksWithinScripts.add(responseModificationDefinition.getUrlCapturingPattern());tmpPrefiltersToCaptureLinksWithinScripts.add(responseModificationDefinition.getUrlCapturingPrefilter());tmpGroupNumbersToCaptureLinksWithinScripts.add(ServerUtils.convertSimpleToObjectArray(responseModificationDefinition.getCapturingGroupNumbers()));}if (responseModificationDefinition.isMatchesTags()) {tmpPatternsToExcludeCompleteTag.add(responseModificationDefinition.getTagExclusionPattern());tmpPrefiltersToExcludeCompleteTag.add(responseModificationDefinition.getTagExclusionPrefilter());tmpPatternsToExcludeLinksWithinTags.add(responseModificationDefinition.getUrlExclusionPattern());tmpPrefiltersToExcludeLinksWithinTags.add(responseModificationDefinition.getUrlExclusionPrefilter());tmpPatternsToCaptureLinksWithinTags.add(responseModificationDefinition.getUrlCapturingPattern());tmpPrefiltersToCaptureLinksWithinTags.add(responseModificationDefinition.getUrlCapturingPrefilter());tmpGroupNumbersToCaptureLinksWithinTags.add(ServerUtils.convertSimpleToObjectArray(responseModificationDefinition.getCapturingGroupNumbers()));}}final Matcher[] matchersToExcludeCompleteTag = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToExcludeCompleteTag);final Matcher[] matchersToExcludeCompleteScript = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToExcludeCompleteScript);final Matcher[] matchersToExcludeLinksWithinScripts = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToExcludeLinksWithinScripts);final Matcher[] matchersToExcludeLinksWithinTags = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToExcludeLinksWithinTags);final Matcher[] matchersToCaptureLinksWithinScripts = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToCaptureLinksWithinScripts);final Matcher[] matchersToCaptureLinksWithinTags = ServerUtils.convertListOfPatternToArrayOfMatcher(tmpPatternsToCaptureLinksWithinTags);final WordDictionary[] prefiltersToExcludeCompleteTag = (WordDictionary[]) tmpPrefiltersToExcludeCompleteTag.toArray(new WordDictionary[0]);final WordDictionary[] prefiltersToExcludeCompleteScript = (WordDictionary[]) tmpPrefiltersToExcludeCompleteScript.toArray(new WordDictionary[0]);final WordDictionary[] prefiltersToExcludeLinksWithinScripts = (WordDictionary[]) tmpPrefiltersToExcludeLinksWithinScripts.toArray(new WordDictionary[0]);final WordDictionary[] prefiltersToExcludeLinksWithinTags = (WordDictionary[]) tmpPrefiltersToExcludeLinksWithinTags.toArray(new WordDictionary[0]);final WordDictionary[] prefiltersToCaptureLinksWithinScripts = (WordDictionary[]) tmpPrefiltersToCaptureLinksWithinScripts.toArray(new WordDictionary[0]);final WordDictionary[] prefiltersToCaptureLinksWithinTags = (WordDictionary[]) tmpPrefiltersToCaptureLinksWithinTags.toArray(new WordDictionary[0]);final int[][] groupNumbersToCaptureLinksWithinScripts = ServerUtils.convertArrayIntegerListTo2DimIntArray(tmpGroupNumbersToCaptureLinksWithinScripts);final int[][] groupNumbersToCaptureLinksWithinTags = ServerUtils.convertArrayIntegerListTo2DimIntArray(tmpGroupNumbersToCaptureLinksWithinTags);final Cipher cipher = CryptoUtils.getCipher();final CryptoKeyAndSalt key = CryptoUtils.generateRandomCryptoKeyAndSalt(false);Cipher.getInstance(""AES"");MessageDigest.getInstance(""SHA-1"");final ResponseWrapper response = new ResponseWrapper(new ResponseMock(), request, attackHandler, helper, false, ""___ENCRYPTED___"", cipher, key, ""___SEC-KEY___"", ""___SEC-VALUE___"", ""___PROT-KEY___"", false, false, false, false, ""123.456.789.000"", new HashSet(), prefiltersToExcludeCompleteScript, matchersToExcludeCompleteScript, prefiltersToExcludeCompleteTag, matchersToExcludeCompleteTag, prefiltersToExcludeLinksWithinScripts, matchersToExcludeLinksWithinScripts, prefiltersToExcludeLinksWithinTags, matchersToExcludeLinksWithinTags, prefiltersToCaptureLinksWithinScripts, matchersToCaptureLinksWithinScripts, prefiltersToCaptureLinksWithinTags, matchersToCaptureLinksWithinTags, groupNumbersToCaptureLinksWithinScripts, groupNumbersToCaptureLinksWithinTags, true, false, true, true, true, true, true, true, true, true, true, false, false, true, """", """", (short) 3, true, false, false);final List durations = new ArrayList();for (int i = 0; i < executionCount; i++) {final long start = System.currentTimeMillis();Reader reader = null;Writer writer = null;try {reader = new BufferedReader(new FileReader(this.htmlFile));writer = new FileWriter(this.outputFile);if (applyFilter) {writer = new ResponseFilterWriter(writer, true, ""http://127.0.0.1/test/sample"", ""/test"", ""/test"", ""___SEC-KEY___"", ""___SEC-VALUE___"", ""___PROT-KEY___"", cipher, key, helper, ""___ENCRYPTED___"", request, response, stripHtmlEnabled, injectSecretTokensEnabled, protectParamsAndFormsEnabled, encryptQueryStringsEnabled, applyExtraProtectionForDisabledFormFields, applyExtraProtectionForReadonlyFormFields, applyExtraProtectionForRequestParamValueCount, prefiltersToExcludeCompleteScript, matchersToExcludeCompleteScript, prefiltersToExcludeCompleteTag, matchersToExcludeCompleteTag, prefiltersToExcludeLinksWithinScripts, matchersToExcludeLinksWithinScripts, prefiltersToExcludeLinksWithinTags, matchersToExcludeLinksWithinTags, prefiltersToCaptureLinksWithinScripts, matchersToCaptureLinksWithinScripts, prefiltersToCaptureLinksWithinTags, matchersToCaptureLinksWithinTags, groupNumbersToCaptureLinksWithinScripts, groupNumbersToCaptureLinksWithinTags, true, true, false, true, true, true, true, true, true, true, true, false, false, true, """", """", (short) 3, true, false);writer = new BufferedWriter(writer);}char[] chars = new char[16 * 1024];int read;while ((read = reader.read(chars)) != -1) {if (read > 0) {writer.write(chars, 0, read);}}durations.add(new Long(System.currentTimeMillis() - start));} finally {if (reader != null) {try {reader.close();} catch (IOException ignored) {}}if (writer != null) {try {writer.close();} catch (IOException ignored) {}}}}long sum = 0;for (final Iterator iter = durations.iterator(); iter.hasNext(); ) {Long value = (Long) iter.next();sum += value.longValue();}return sum / durations.size();}protected File getFile(NameCategory category) throws IOException {File home = new File(System.getProperty(""user.dir""));String fileName = String.format(""%s.txt"", category);File file = new File(home, fileName);if (file.exists()) {return file;} else {URL url = LocalNameGenerator.class.getResource(""/"" + fileName);if (url == null) {throw new IllegalStateException(String.format(""Cannot find resource at %s"", fileName));} else {InputStream in = url.openStream();try {BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(file));try {IOUtils.copy(in, out);} finally {out.close();}} finally {in.close();}return file;}}}public void updateSuccessStatus(ArrayList<THLEventStatus> succeededEvents, ArrayList<THLEventStatus> skippedEvents) throws THLException {Statement stmt = null;PreparedStatement pstmt = null;try {conn.setAutoCommit(false);if (succeededEvents != null && succeededEvents.size() > 0) {stmt = conn.createStatement();String seqnoList = buildCommaSeparatedList(succeededEvents);stmt.executeUpdate(""UPDATE "" + history + "" SET status = "" + THLEvent.COMPLETED + "", processed_tstamp = "" + conn.getNowFunction() + "" WHERE seqno in "" + seqnoList);}if (skippedEvents != null && skippedEvents.size() > 0) {pstmt = conn.prepareStatement(""UPDATE "" + history + "" SET status = ?, comments = ?,"" + "" processed_tstamp = ? WHERE seqno = ?"");Timestamp now = new Timestamp(System.currentTimeMillis());for (THLEventStatus event : skippedEvents) {pstmt.setShort(1, THLEvent.SKIPPED);pstmt.setString(2, truncate(event.getException() != null ? event.getException().getMessage() : ""Unknown event failure"", commentLength));pstmt.setTimestamp(3, now);pstmt.setLong(4, event.getSeqno());pstmt.addBatch();}pstmt.executeBatch();pstmt.close();}conn.commit();} catch (SQLException e) {THLException exception = new THLException(""Failed to update events status"");exception.initCause(e);try {conn.rollback();} catch (SQLException e1) {THLException exception2 = new THLException(""Failed to rollback after failure while updating events status"");e1.initCause(exception);exception2.initCause(e1);exception = exception2;}throw exception;} finally {if (stmt != null) {try {stmt.close();} catch (SQLException ignore) {}}if (pstmt != null) {try {pstmt.close();} catch (SQLException ignore) {}}try {conn.setAutoCommit(true);} catch (SQLException ignore) {}}}public void updateFailedStatus(THLEventStatus failedEvent, ArrayList<THLEventStatus> events) throws THLException {Timestamp now = new Timestamp(System.currentTimeMillis());Statement stmt = null;PreparedStatement pstmt = null;try {conn.setAutoCommit(false);if (events != null && events.size() > 0) {String seqnoList = buildCommaSeparatedList(events);stmt = conn.createStatement();stmt.executeUpdate(""UPDATE history SET status = "" + THLEvent.FAILED + "", comments = 'Event was rollbacked due to failure while processing event#"" + failedEvent.getSeqno() + ""'"" + "", processed_tstamp = "" + conn.getNowFunction() + "" WHERE seqno in "" + seqnoList);}pstmt = conn.prepareStatement(""UPDATE history SET status = ?"" + "", comments = ?"" + "", processed_tstamp = ?"" + "" WHERE seqno = ?"");pstmt.setShort(1, THLEvent.FAILED);pstmt.setString(2, truncate(failedEvent.getException() != null ? failedEvent.getException().getMessage() : ""Unknown failure"", commentLength));pstmt.setTimestamp(3, now);pstmt.setLong(4, failedEvent.getSeqno());pstmt.executeUpdate();conn.commit();} catch (SQLException e) {THLException exception = new THLException(""Failed to update events status"");exception.initCause(e);try {conn.rollback();} catch (SQLException e1) {THLException exception2 = new THLException(""Failed to rollback after failure while updating events status"");e1.initCause(exception);exception2.initCause(e1);exception = exception2;}throw exception;} finally {if (stmt != null) {try {stmt.close();} catch (SQLException ignore) {}}if (pstmt != null) {try {pstmt.close();} catch (SQLException ignore) {}}try {conn.setAutoCommit(true);} catch (SQLException ignore) {}}}InputStream openURL(URL url) throws IOException, WrongMIMETypeException {InputStream is = null;if (url.getProtocol().equals(""file"")) {if (debug) {System.out.println(""Using direct input stream on file url"");}URLConnection urlc = url.openConnection();try {urlc.connect();is = new DataInputStream(urlc.getInputStream());} catch (FileNotFoundException e) {}} else {double start = 0;if (timing) {start = Time.getNow();}ContentNegotiator cn = null;cn = new ContentNegotiator(url);Object obj = null;obj = cn.getContent();if (obj != null) {byte[] buf = (byte[]) obj;is = new ByteArrayInputStream(buf);} else {System.err.println(""Loader.openURL got null content"");throw new IOException(""Loader.openURL got null content"");}if (timing) {double elapsed = Time.getNow() - start;System.out.println(""Loader: open and buffer URL in: "" + numFormat.format(elapsed, 2) + "" seconds"");}}return is;}"	5
"private String md5(String... args) throws FlickrException {try {StringBuilder sb = new StringBuilder();for (String str : args) {sb.append(str);}MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(sb.toString().getBytes());byte[] bytes = md.digest();StringBuilder result = new StringBuilder();for (byte b : bytes) {String hx = Integer.toHexString(0xFF & b);if (hx.length() == 1) {hx = ""0"" + hx;}result.append(hx);}return result.toString();} catch (Exception ex) {throw new FlickrException(ex);}}public URLStream(URL url) throws IOException {this.url = url;this.conn = this.url.openConnection();contentType = conn.getContentType();name = url.toExternalForm();size = new Long(conn.getContentLength());sourceInfo = ""url"";}public void copyJarContent(File jarPath, File targetDir) throws IOException {log.info(""Copying natives from "" + jarPath.getName());JarFile jar = new JarFile(jarPath);Enumeration<JarEntry> entries = jar.entries();while (entries.hasMoreElements()) {JarEntry file = entries.nextElement();File f = new File(targetDir, file.getName());log.info(""Copying native - "" + file.getName());File parentFile = f.getParentFile();parentFile.mkdirs();if (file.isDirectory()) {f.mkdir();continue;}InputStream is = null;FileOutputStream fos = null;try {is = jar.getInputStream(file);fos = new FileOutputStream(f);IOUtils.copy(is, fos);} finally {if (fos != null) fos.close();if (is != null) is.close();}}}public static synchronized void loadConfig(String configFile) {if (properties != null) {return;}URL url = null;InputStream is = null;try {String configProperty = null;try {configProperty = System.getProperty(""dspace.configuration"");} catch (SecurityException se) {log.warn(""Unable to access system properties, ignoring."", se);}if (loadedFile != null) {log.info(""Reloading current config file: "" + loadedFile.getAbsolutePath());url = loadedFile.toURI().toURL();} else if (configFile != null) {log.info(""Loading provided config file: "" + configFile);loadedFile = new File(configFile);url = loadedFile.toURI().toURL();} else if (configProperty != null) {log.info(""Loading system provided config property (-Ddspace.configuration): "" + configProperty);loadedFile = new File(configProperty);url = loadedFile.toURI().toURL();} else {url = ConfigurationManager.class.getResource(""/dspace.cfg"");if (url != null) {log.info(""Loading from classloader: "" + url);loadedFile = new File(url.getPath());}}if (url == null) {log.fatal(""Cannot find dspace.cfg"");throw new IllegalStateException(""Cannot find dspace.cfg"");} else {properties = new Properties();moduleProps = new HashMap<String, Properties>();is = url.openStream();properties.load(is);for (Enumeration<?> pe = properties.propertyNames(); pe.hasMoreElements(); ) {String key = (String) pe.nextElement();String value = interpolate(key, properties.getProperty(key), 1);if (value != null) {properties.setProperty(key, value);}}}} catch (IOException e) {log.fatal(""Can't load configuration: "" + url, e);throw new IllegalStateException(""Cannot load configuration: "" + url, e);} finally {if (is != null) {try {is.close();} catch (IOException ioe) {}}}File licenseFile = new File(getProperty(""dspace.dir"") + File.separator + ""config"" + File.separator + ""default.license"");FileInputStream fir = null;InputStreamReader ir = null;BufferedReader br = null;try {fir = new FileInputStream(licenseFile);ir = new InputStreamReader(fir, ""UTF-8"");br = new BufferedReader(ir);String lineIn;license = """";while ((lineIn = br.readLine()) != null) {license = license + lineIn + '\n';}br.close();} catch (IOException e) {log.fatal(""Can't load license: "" + licenseFile.toString(), e);throw new IllegalStateException(""Cannot load license: "" + licenseFile.toString(), e);} finally {if (br != null) {try {br.close();} catch (IOException ioe) {}}if (ir != null) {try {ir.close();} catch (IOException ioe) {}}if (fir != null) {try {fir.close();} catch (IOException ioe) {}}}}public static int copy(File src, int amount, File dst) {final int BUFFER_SIZE = 1024;int amountToRead = amount;InputStream in = null;OutputStream out = null;try {in = new BufferedInputStream(new FileInputStream(src));out = new BufferedOutputStream(new FileOutputStream(dst));byte[] buf = new byte[BUFFER_SIZE];while (amountToRead > 0) {int read = in.read(buf, 0, Math.min(BUFFER_SIZE, amountToRead));if (read == -1) break;amountToRead -= read;out.write(buf, 0, read);}} catch (IOException e) {} finally {if (in != null) try {in.close();} catch (IOException e) {}if (out != null) {try {out.flush();} catch (IOException e) {}try {out.close();} catch (IOException e) {}}}return amount - amountToRead;}public String getHtml(String path) throws Exception {URL url = new URL(path);URLConnection conn = url.openConnection();conn.setDoOutput(true);InputStream inputStream = conn.getInputStream();InputStreamReader isr = new InputStreamReader(inputStream, ""UTF-8"");StringBuilder sb = new StringBuilder();BufferedReader in = new BufferedReader(isr);String inputLine;while ((inputLine = in.readLine()) != null) {sb.append(inputLine);}String result = sb.toString();return result;}private void checkServerAccess() throws IOException {URL url = new URL(""https://testnetbeans.org/bugzilla/index.cgi"");try {URLConnection conn = url.openConnection();conn.setConnectTimeout(5000);conn.setReadTimeout(5000);conn.connect();} catch (IOException exc) {disableMessage = ""Bugzilla is not accessible"";}url = new URL(BugzillaConnector.SERVER_URL);try {URLConnection conn = url.openConnection();conn.setConnectTimeout(5000);conn.setReadTimeout(5000);conn.connect();} catch (IOException exc) {disableMessage = ""Bugzilla Service is not accessible"";}}public static void copyFile(File source, File dest) throws IOException {if (!dest.exists()) {dest.createNewFile();}FileChannel from = null;FileChannel to = null;try {from = new FileInputStream(source).getChannel();to = new FileOutputStream(dest).getChannel();to.transferFrom(from, 0, from.size());} finally {if (from != null) {from.close();}if (to != null) {to.close();}}}public void doNew(Vector userId, String shareFlag, String folderId) throws AddrException {DBOperation dbo = null;Connection connection = null;PreparedStatement ps = null;ResultSet rset = null;String sql = ""insert into "" + SHARE_TABLE + "" values(?,?,?)"";try {dbo = createDBOperation();connection = dbo.getConnection();connection.setAutoCommit(false);for (int i = 0; i < userId.size(); i++) {String user = (String) userId.elementAt(i);ps = connection.prepareStatement(sql);ps.setInt(1, Integer.parseInt(folderId));ps.setInt(2, Integer.parseInt(user));ps.setString(3, shareFlag);int resultCount = ps.executeUpdate();if (resultCount != 1) {throw new Exception(""error"");}}connection.commit();} catch (Exception ex) {if (connection != null) {try {connection.rollback();} catch (SQLException e) {e.printStackTrace();}}logger.error(""���������ļ�����Ϣʧ��, "" + ex.getMessage());throw new AddrException(""���������ļ�����Ϣʧ��,һ�������ļ���ֻ�ܹ����ͬһ�û�һ��!"");} finally {close(rset, null, ps, connection, dbo);}}@Overridepublic void copyFile2File(final File src, final File dest, final boolean force) throws C4JException {if (dest.exists()) if (force && !dest.delete()) throw new C4JException(format(""Copying ‘%s’ to ‘%s’ failed; cannot overwrite existing file."", src.getPath(), dest.getPath()));FileChannel inChannel = null;FileChannel outChannel = null;try {inChannel = new FileInputStream(src).getChannel();outChannel = new FileOutputStream(dest).getChannel();inChannel.transferTo(0, inChannel.size(), outChannel);if (src.canExecute()) dest.setExecutable(true, false);} catch (final IOException e) {throw new C4JException(format(""Could not copy ‘%s’ to ‘%s’."", src.getPath(), dest.getPath()), e);} finally {if (inChannel != null) try {try {inChannel.close();} catch (final IOException e) {throw new C4JException(format(""Could not close input stream for ‘%s’."", src.getPath()), e);}} finally {if (outChannel != null) try {outChannel.close();} catch (final IOException e) {throw new C4JException(format(""Could not close output stream for ‘%s’."", dest.getPath()), e);}}}}"	5
"InputStream openURL(URL url) throws IOException, WrongMIMETypeException {InputStream is = null;if (url.getProtocol().equals(""file"")) {if (debug) {System.out.println(""Using direct input stream on file url"");}URLConnection urlc = url.openConnection();try {urlc.connect();is = new DataInputStream(urlc.getInputStream());} catch (FileNotFoundException e) {}} else {double start = 0;if (timing) {start = Time.getNow();}ContentNegotiator cn = null;cn = new ContentNegotiator(url);Object obj = null;obj = cn.getContent();if (obj != null) {byte[] buf = (byte[]) obj;is = new ByteArrayInputStream(buf);} else {System.err.println(""Loader.openURL got null content"");throw new IOException(""Loader.openURL got null content"");}if (timing) {double elapsed = Time.getNow() - start;System.out.println(""Loader: open and buffer URL in: "" + numFormat.format(elapsed, 2) + "" seconds"");}}return is;}public static Document tidyHTML(URL url) throws XMLHelperException {try {URLConnection inConnection = url.openConnection();if (inConnection.getContentType().startsWith(""text/xml"") || inConnection.getContentType().startsWith(""text/xhtml"")) {return parseXMLFromURL(url);} else if (inConnection.getContentType().startsWith(""text/html"")) {InputStream is = inConnection.getInputStream();ByteArrayOutputStream out = new ByteArrayOutputStream();int totalBytes = 0;byte[] buffer = new byte[65536];while (true) {int bytesRead = is.read(buffer, 0, buffer.length);if (bytesRead < 0) break;for (int i = 0; i < bytesRead; i++) {byte b = buffer[i];if (b < 32 && b != 10 && b != 13 && b != 9) b = 32;buffer[i] = b;}out.write(buffer, 0, bytesRead);totalBytes += bytesRead;}is.close();out.close();String outContent = out.toString();InputStream in = new ByteArrayInputStream(out.toByteArray());Tidy tidy = new Tidy();tidy.setShowWarnings(false);tidy.setXmlOut(true);tidy.setXmlPi(false);tidy.setDocType(""omit"");tidy.setXHTML(false);tidy.setRawOut(true);tidy.setNumEntities(true);tidy.setQuiet(true);tidy.setFixComments(true);tidy.setIndentContent(true);tidy.setCharEncoding(org.w3c.tidy.Configuration.ASCII);ByteArrayOutputStream baos = new ByteArrayOutputStream();org.w3c.dom.Document tNode = (org.w3c.dom.Document) tidy.parseDOM(in, baos);String result = ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>\n"" + baos.toString();int startIndex = 0;int endIndex = 0;if ((startIndex = result.indexOf(""<!DOCTYPE"")) >= 0) {endIndex = result.indexOf("">"", startIndex);result = result.substring(0, startIndex) + result.substring(endIndex + 1, result.length());}while ((startIndex = result.indexOf(""<script"")) >= 0) {endIndex = result.indexOf(""</script>"");result = result.substring(0, startIndex) + result.substring(endIndex + 9, result.length());}in.close();baos.close();return parseXMLFromString(result);} else {throw new XMLHelperException(""Unable to tidy content type: "" + inConnection.getContentType());}} catch (IOException ioe) {throw new XMLHelperException(""Unable to perform input/output"", ioe);}}public String buscaCDA() {Properties prop = new CargaProperties().Carga();URL url;BufferedReader in;String inputLine;String miLinea = null;try {url = new URL(prop.getProperty(""CDA""));in = new BufferedReader(new InputStreamReader(url.openStream()));while ((inputLine = in.readLine()) != null) {if (inputLine.contains(""cda-TRUNK-"")) {miLinea = inputLine;miLinea = miLinea.substring(miLinea.indexOf(""lastSuccessfulBuild/artifact/dist/cda-TRUNK""));miLinea = miLinea.substring(0, miLinea.indexOf(""\"">""));miLinea = url + miLinea;}}} catch (Throwable t) {}log.debug(""Detetectado last build CDA: "" + miLinea);return miLinea;}public String buscaCDE() {URL url;Properties prop = new CargaProperties().Carga();BufferedReader in;String inputLine;String miLinea = null;try {url = new URL(prop.getProperty(""CDE""));in = new BufferedReader(new InputStreamReader(url.openStream()));while ((inputLine = in.readLine()) != null) {if (inputLine.contains(""lastSuccessfulBuild/artifact/server/plugin/dist/pentaho-cdf-dd-TRUNK"")) {miLinea = inputLine;miLinea = miLinea.substring(miLinea.indexOf(""lastSuccessfulBuild/artifact/server/plugin/dist/pentaho-cdf-dd-TRUNK""));miLinea = miLinea.substring(0, miLinea.indexOf(""\"">""));miLinea = url + miLinea;}}} catch (Throwable t) {}log.debug(""Detetectado last build CDE: "" + miLinea);return miLinea;}public String buscaSAIKU() {URL url;Properties prop = new CargaProperties().Carga();BufferedReader in;String inputLine;String miLinea = null;try {url = new URL(prop.getProperty(""SAIKU""));in = new BufferedReader(new InputStreamReader(url.openStream()));while ((inputLine = in.readLine()) != null) {if (inputLine.contains(""lastSuccessfulBuild/artifact/saiku-bi-platform-plugin/target"")) {miLinea = inputLine;log.debug(miLinea);miLinea = miLinea.substring(miLinea.indexOf(""lastSuccessfulBuild/artifact/saiku-bi-platform-plugin/target""));miLinea = miLinea.substring(0, miLinea.indexOf(""\"">""));miLinea = url + miLinea;}}} catch (Throwable t) {}log.debug(""Detetectado last build SAIKU: "" + miLinea);return miLinea;}public DataSet(String name, String type, URL docBase, String plotDir) {sitename = name.toUpperCase();data = new Vector[3];data[0] = new Vector();data[1] = new Vector();data[2] = new Vector();if (type == null) return;plottype = type.toLowerCase();String filename;filename = plotDir + sitename + ""_"" + plottype + "".plt.gz"";try {double total = 0;URL dataurl = new URL(docBase, filename);BufferedReader readme = new BufferedReader(new InputStreamReader(new GZIPInputStream(dataurl.openStream())));while (true) {String myline = readme.readLine();if (myline == null) break;myline = myline.toLowerCase();if (myline.startsWith(""fit:"")) {if (haveFit) {continue;}StringTokenizer st = new StringTokenizer(myline.replace('\n', ' '));fit = new Double[5];String bye = (String) st.nextToken();fit[0] = new Double((String) st.nextToken());fit[1] = new Double((String) st.nextToken());fit[2] = new Double((String) st.nextToken());fit[3] = new Double((String) st.nextToken());fit[4] = new Double((String) st.nextToken());haveFit = true;continue;}if (myline.startsWith(""decyear:"")) {StringTokenizer st = new StringTokenizer(myline.replace('\n', ' '));String bye = (String) st.nextToken();decYear = new Double((String) st.nextToken());haveDate = true;continue;}StringTokenizer st = new StringTokenizer(myline.replace('\n', ' '));boolean ok = true;String tmp;Double[] mydbl = new Double[3];for (int i = 0; i < 3 && ok; i++) {if (st.hasMoreTokens()) {tmp = (String) st.nextToken();if (tmp.startsWith(""X"") || tmp.startsWith(""x"")) {ok = false;break;} else {mydbl[i] = new Double(tmp);}} else {mydbl[i] = new Double(0.0);}}if (ok) {if (mydbl[2].doubleValue() > 100) continue;total = mydbl[1].doubleValue() + total;for (int i = 0; i < 3; i++) {data[i].addElement(mydbl[i]);}}}average = total / length();} catch (FileNotFoundException e) {System.err.println(""PlotApplet: file not found: "" + e);} catch (IOException e) {System.err.println(""PlotApplet: error reading input file: "" + e);}}public static byte[] SHA1(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(text.getBytes(""iso-8859-1""), 0, text.length());sha1hash = md.digest();return sha1hash;}public synchronized String encrypt(String password) {try {MessageDigest md = null;md = MessageDigest.getInstance(""SHA-1"");md.update(password.getBytes(""UTF-8""));byte raw[] = md.digest();byte[] hash = (new Base64()).encode(raw);return new String(hash);} catch (NoSuchAlgorithmException e) {System.out.println(""Algorithm SHA-1 is not supported"");return null;} catch (UnsupportedEncodingException e) {System.out.println(""UTF-8 encoding is not supported"");return null;}}public void upload() throws UnknownHostException, SocketException, FTPConnectionClosedException, LoginFailedException, DirectoryChangeFailedException, CopyStreamException, RefusedConnectionException, IOException {final int NUM_XML_FILES = 2;final String META_XML_SUFFIX = ""_meta.xml"";final String FILES_XML_SUFFIX = ""_files.xml"";final String username = getUsername();final String password = getPassword();if (getFtpServer() == null) {throw new IllegalStateException(""ftp server not set"");}if (getFtpPath() == null) {throw new IllegalStateException(""ftp path not set"");}if (username == null) {throw new IllegalStateException(""username not set"");}if (password == null) {throw new IllegalStateException(""password not set"");}final String metaXmlString = serializeDocument(getMetaDocument());final String filesXmlString = serializeDocument(getFilesDocument());final byte[] metaXmlBytes = metaXmlString.getBytes();final byte[] filesXmlBytes = filesXmlString.getBytes();final int metaXmlLength = metaXmlBytes.length;final int filesXmlLength = filesXmlBytes.length;final Collection files = getFiles();final int totalFiles = NUM_XML_FILES + files.size();final String[] fileNames = new String[totalFiles];final long[] fileSizes = new long[totalFiles];final String metaXmlName = getIdentifier() + META_XML_SUFFIX;fileNames[0] = metaXmlName;fileSizes[0] = metaXmlLength;final String filesXmlName = getIdentifier() + FILES_XML_SUFFIX;fileNames[1] = filesXmlName;fileSizes[1] = filesXmlLength;int j = 2;for (Iterator i = files.iterator(); i.hasNext(); ) {final ArchiveFile f = (ArchiveFile) i.next();fileNames[j] = f.getRemoteFileName();fileSizes[j] = f.getFileSize();j++;}for (int i = 0; i < fileSizes.length; i++) {_fileNames2Progress.put(fileNames[i], new UploadFileProgress(fileSizes[i]));_totalUploadSize += fileSizes[i];}FTPClient ftp = new FTPClient();try {if (isCancelled()) {return;}ftp.enterLocalPassiveMode();if (isCancelled()) {return;}ftp.connect(getFtpServer());final int reply = ftp.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {throw new RefusedConnectionException(getFtpServer() + ""refused FTP connection"");}if (isCancelled()) {return;}if (!ftp.login(username, password)) {throw new LoginFailedException();}try {if (!ftp.changeWorkingDirectory(getFtpPath())) {if (!isFtpDirPreMade() && !ftp.makeDirectory(getFtpPath())) {throw new DirectoryChangeFailedException();}if (isCancelled()) {return;}if (!ftp.changeWorkingDirectory(getFtpPath())) {throw new DirectoryChangeFailedException();}}if (isCancelled()) {return;}connected();uploadFile(metaXmlName, new ByteArrayInputStream(metaXmlBytes), ftp);uploadFile(filesXmlName, new ByteArrayInputStream(filesXmlBytes), ftp);if (isCancelled()) {return;}ftp.setFileType(FTP.BINARY_FILE_TYPE);for (final Iterator i = files.iterator(); i.hasNext(); ) {final ArchiveFile f = (ArchiveFile) i.next();uploadFile(f.getRemoteFileName(), new FileInputStream(f.getIOFile()), ftp);}} catch (InterruptedIOException ioe) {return;} finally {ftp.logout();}} finally {try {ftp.disconnect();} catch (IOException e) {}}if (isCancelled()) {return;}checkinStarted();if (isCancelled()) {return;}checkin();if (isCancelled()) {return;}checkinCompleted();}@Overridepublic String encode(String password) {String hash = null;MessageDigest m;try {m = MessageDigest.getInstance(""MD5"");m.update(password.getBytes(), 0, password.length());hash = String.format(""%1$032X"", new BigInteger(1, m.digest()));} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return hash;}"	5
"public RandomGUID() {MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {throw new RuntimeException(e.getClass().getName() + "": "" + e.getMessage());}try {long time = System.currentTimeMillis();long rand = 0;rand = myRand.nextLong();StringBuffer sb = new StringBuffer();sb.append(s_id);sb.append("":"");sb.append(Long.toString(time));sb.append("":"");sb.append(Long.toString(rand));md5.update(sb.toString().getBytes());byte[] array = md5.digest();sb.setLength(0);for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {throw new RuntimeException(e.getClass().getName() + "": "" + e.getMessage());}}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) {sb.append('0');}sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}public void init() {try {UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());} catch (Throwable e) {}Container c = getContentPane();c.setLayout(new BoxLayout(c, BoxLayout.Y_AXIS));String[] lines = getAppletInfo().split(""\n"");for (int i = 0; i < lines.length; i++) {c.add(new JLabel(lines[i]));}new Worker() {public Object construct() {Object result;try {if (getParameter(""data"") != null && getParameter(""data"").length() > 0) {NanoXMLDOMInput domi = new NanoXMLDOMInput(new UMLFigureFactory(), new StringReader(getParameter(""data"")));result = domi.readObject(0);} else if (getParameter(""datafile"") != null) {InputStream in = null;try {URL url = new URL(getDocumentBase(), getParameter(""datafile""));in = url.openConnection().getInputStream();NanoXMLDOMInput domi = new NanoXMLDOMInput(new UMLFigureFactory(), in);result = domi.readObject(0);} finally {if (in != null) in.close();}} else {result = null;}} catch (Throwable t) {result = t;}return result;}public void finished(Object result) {Container c = getContentPane();c.setLayout(new BorderLayout());c.removeAll();initComponents();if (result != null) {if (result instanceof Drawing) {setDrawing((Drawing) result);} else if (result instanceof Throwable) {getDrawing().add(new TextFigure(result.toString()));((Throwable) result).printStackTrace();}}boolean isLiveConnect;try {Class.forName(""netscape.javascript.JSObject"");isLiveConnect = true;} catch (Throwable t) {isLiveConnect = false;}loadButton.setEnabled(isLiveConnect && getParameter(""dataread"") != null);saveButton.setEnabled(isLiveConnect && getParameter(""datawrite"") != null);if (isLiveConnect) {String methodName = getParameter(""dataread"");if (methodName.indexOf('(') > 0) {methodName = methodName.substring(0, methodName.indexOf('(') - 1);}JSObject win = JSObject.getWindow(UMLLiveConnectApplet.this);Object data = win.call(methodName, new Object[0]);if (data instanceof String) {setData((String) data);}}c.validate();}}.start();}public Object construct() {Object result;try {if (getParameter(""data"") != null && getParameter(""data"").length() > 0) {NanoXMLDOMInput domi = new NanoXMLDOMInput(new UMLFigureFactory(), new StringReader(getParameter(""data"")));result = domi.readObject(0);} else if (getParameter(""datafile"") != null) {InputStream in = null;try {URL url = new URL(getDocumentBase(), getParameter(""datafile""));in = url.openConnection().getInputStream();NanoXMLDOMInput domi = new NanoXMLDOMInput(new UMLFigureFactory(), in);result = domi.readObject(0);} finally {if (in != null) in.close();}} else {result = null;}} catch (Throwable t) {result = t;}return result;}public void bubbleSort(final int[] s) {source = s;if (source.length < 2) return;boolean go = true;while (go) {go = false;for (int i = 0; i < source.length - 1; i++) {int temp = source[i];if (temp > source[i + 1]) {source[i] = source[i + 1];source[i + 1] = temp;go = true;}}}}private void fileUpload() throws IOException {HttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(postURL);MultipartEntity mpEntity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE);mpEntity.addPart(""Filename"", new StringBody(file.getName()));mpEntity.addPart(""Filedata"", new MonitoredFileBody(file, uploadProgress));httppost.setEntity(mpEntity);NULogger.getLogger().log(Level.INFO, ""executing request {0}"", httppost.getRequestLine());NULogger.getLogger().info(""Now uploading your file into sharesend.com"");status = UploadStatus.UPLOADING;HttpResponse response = httpclient.execute(httppost);status = UploadStatus.GETTINGLINK;HttpEntity resEntity = response.getEntity();NULogger.getLogger().info(response.getStatusLine().toString());if (resEntity != null) {uploadresponse = EntityUtils.toString(resEntity);}NULogger.getLogger().log(Level.INFO, ""Upload Response : {0}"", uploadresponse);NULogger.getLogger().log(Level.INFO, ""Download Link : http://sharesend.com/{0}"", uploadresponse);downloadlink = ""http://sharesend.com/"" + uploadresponse;downURL = downloadlink;httpclient.getConnectionManager().shutdown();uploadFinished();}public static final String MD5(String value) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(value.getBytes());BigInteger hash = new BigInteger(1, md.digest());String newValue = hash.toString(16);return newValue;} catch (NoSuchAlgorithmException ns) {ns.printStackTrace();return null;}}@Overrideprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {resp.addHeader(""Cache-Control"", ""max-age="" + Constants.HTTP_CACHE_SECONDS);String uuid = req.getRequestURI().substring(req.getRequestURI().indexOf(Constants.SERVLET_THUMBNAIL_PREFIX) + Constants.SERVLET_THUMBNAIL_PREFIX.length() + 1);if (uuid != null && !"""".equals(uuid)) {resp.setContentType(""image/jpeg"");StringBuffer sb = new StringBuffer();sb.append(config.getFedoraHost()).append(""/objects/"").append(uuid).append(""/datastreams/IMG_THUMB/content"");InputStream is = null;if (!Constants.MISSING.equals(uuid)) {is = RESTHelper.get(sb.toString(), config.getFedoraLogin(), config.getFedoraPassword(), true);} else {is = new FileInputStream(new File(""images/other/file_not_found.png""));}if (is == null) {return;}ServletOutputStream os = resp.getOutputStream();try {IOUtils.copyStreams(is, os);} catch (IOException e) {} finally {os.flush();if (is != null) {try {is.close();} catch (IOException e) {} finally {is = null;}}}resp.setStatus(200);} else {resp.setStatus(404);}}final void importSelectedEntity() {TreePath path = projectsTree.getSelectionPath();DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent();Object userObject = selectedNode.getUserObject();if (userObject instanceof ProjectSet) {JFileChooser fileChooser = new JFileChooser();fileChooser.setMultiSelectionEnabled(false);fileChooser.setFileFilter(new FileNameExtensionFilter(""JFPSM Projects"", ""jfpsm.zip""));int result = fileChooser.showOpenDialog(mainWindow.getApplicativeFrame());if (result == JFileChooser.APPROVE_OPTION) {String fullname = fileChooser.getSelectedFile().getName();String projectName = fullname.substring(0, fullname.length() - Project.getFileExtension().length());ProjectSet workspace = (ProjectSet) userObject;boolean confirmLoad = true;if (Arrays.asList(workspace.getProjectNames()).contains(projectName)) {confirmLoad = JOptionPane.showConfirmDialog(mainWindow.getApplicativeFrame(), ""Overwrite project \"""" + projectName + ""\"""" + ""?"", ""Overwrite project"", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION;if (confirmLoad) {final int count = selectedNode.getChildCount();DefaultMutableTreeNode projectNode = null;for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) {projectNode = (DefaultMutableTreeNode) selectedNode.getChildAt(i);break;}Project project = (Project) projectNode.getUserObject();for (FloorSet floorSet : project.getLevelSet().getFloorSetsList()) for (Floor floor : floorSet.getFloorsList()) mainWindow.getEntityViewer().closeEntityView(floor);for (Tile tile : project.getTileSet().getTilesList()) mainWindow.getEntityViewer().closeEntityView(tile);workspace.removeProject(project);((DefaultTreeModel) projectsTree.getModel()).removeNodeFromParent(projectNode);}}if (confirmLoad) {File projectFile = new File(workspace.createProjectPath(projectName));boolean success = true;try {success = projectFile.createNewFile();if (success) {BufferedInputStream bis = new BufferedInputStream(new FileInputStream(fileChooser.getSelectedFile()));BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(projectFile));byte[] buf = new byte[1024];int len;while ((len = bis.read(buf)) > 0) bos.write(buf, 0, len);bis.close();bos.close();}} catch (Throwable throwable) {displayErrorMessage(throwable, false);success = false;}if (success) addProject(projectName);}}} else if (userObject instanceof Map) {Map map = (Map) userObject;Floor floor = (Floor) ((DefaultMutableTreeNode) selectedNode.getParent()).getUserObject();importImageForSelectedMap(floor, map);}}public void execute(File tsvFile, File xmlFile) {BufferedReader reader = null;Writer writer = null;Boolean isFileSuccessfullyConverted = Boolean.TRUE;TableConfiguration tableConfig = null;try {xmlFile.getParentFile().mkdirs();reader = new BufferedReader(new InputStreamReader(new FileInputStream(tsvFile), INPUT_ENCODING));writer = new OutputStreamWriter(new FileOutputStream(xmlFile), OUTPUT_ENCODING);tableConfig = Tsv2DocbookConverter.convert2(tableConfigManager, idScanner.extractIdentification(tsvFile), reader, writer, inputPolisher);isFileSuccessfullyConverted = (tableConfig != null);} catch (UnsupportedEncodingException e) {logger.error(""Failed to create reader with UTF-8 encoding: "" + e.getMessage(), e);} catch (FileNotFoundException fnfe) {logger.error(""Failed to open tsv input file '"" + tsvFile + ""'. "" + fnfe.getMessage());} catch (Throwable cause) {logger.error(""Failed to convert input tsv file '"" + tsvFile + ""'."", cause);} finally {if (reader != null) {try {reader.close();} catch (IOException ioe) {logger.warn(""Unable to close input file."", ioe);}}if (writer != null) {try {writer.close();} catch (IOException ioe) {logger.warn(""Unable to close output file."", ioe);}}}if (isFileSuccessfullyConverted) {String newOutputFileName = tableConfig.getFileName(idScanner.extractIdentification(tsvFile));if (newOutputFileName != null) {File newOutputFile = new File(xmlFile.getParentFile(), newOutputFileName);if (!xmlFile.renameTo(newOutputFile)) {logger.warn(""Unable to rename '"" + xmlFile + ""' to '"" + newOutputFile + ""'."");logger.info(""Created successfully '"" + xmlFile + ""'."");} else {logger.info(""Created successfully '"" + newOutputFileName + ""'."");}} else {logger.info(""Created successfully '"" + xmlFile + ""'."");}} else {logger.warn(""Unable to convert input tsv file '"" + Tsv2DocBookApplication.trimPath(sourceDir, tsvFile) + ""' to docbook."");if (xmlFile.exists() && !xmlFile.delete()) {logger.warn(""Unable to remove (empty) output file '"" + xmlFile + ""', which was created as target for the docbook table."");}}}"	5
"public long saveDB(Connection con, long id, boolean commit) throws SQLException {StringBuffer SQL = null;Statement statement = null;ResultSet result_set = null;try {statement = con.createStatement();if (id < 0) {id = QueryUtils.sequenceGetNextID(con, ""PATTERN_OUTLINE"");} else {deleteDB(con, id);}SQL = new StringBuffer(""insert into "");SQL.append(""PATTERN_OUTLINE values ("");SQL.append(id);SQL.append("","");SQL.append(XColor.toInt(pattern.getPatternColor()));SQL.append("","");SQL.append(pattern.getPatternStyle());SQL.append("","");SQL.append(pattern.getPatternDensity());SQL.append("","");SQL.append(XColor.toInt(pattern.getBackgroundColor()));SQL.append("","");SQL.append(XColor.toInt(outline.getColor()));SQL.append("","");SQL.append(outline.getStyle());SQL.append("","");SQL.append(outline.getWidth());SQL.append("")"");statement.executeUpdate(new String(SQL));SQL = null;if (commit) {con.commit();}} catch (SQLException e) {System.err.println(getClass().getName() + "":"" + e + "" SQL:="" + SQL);if (commit) {con.rollback();}throw e;} finally {if (statement != null) {try {statement.close();} 		catch (SQLException e) {				}}	}	return saveDB(con, id, false);}public BasicTraceImpl() {out = System.out;traceEnable = new HashMap();URL url = Hive.getURL(""trace.cfg"");if (url != null) try {InputStream input = url.openStream();BufferedReader in = new BufferedReader(new InputStreamReader(input));String line;for (line = line = in.readLine(); line != null; line = in.readLine()) {int i = line.indexOf(""="");if (i > 0) {String name = line.substring(0, i).trim();String value = line.substring(i + 1).trim();traceEnable.put(name, Boolean.valueOf(value).booleanValue() ? ((Object) (Boolean.TRUE)) : ((Object) (Boolean.FALSE)));}}input.close();} catch (IOException io) {System.out.println(io);}TRACE = getEnable(THIS);}void startzm() {URL myzzurl;InputStream myzstream;byte zmemimage[];boolean joined;zmemimage = null;try {System.err.println(zcodefile);myzzurl = new URL(zcodefile);myzstream = myzzurl.openStream();zmemimage = suckstream(myzstream);} catch (MalformedURLException booga) {try {myzstream = new FileInputStream(zcodefile);zmemimage = suckstream(myzstream);} catch (IOException booga2) {add(""North"", new Label(""Malformed URL""));failed = true;}} catch (IOException booga) {add(""North"", new Label(""I/O Error""));}if (zmemimage != null) {switch(zmemimage[0]) {case 3:zm = new ZMachine3(screen, status_line, zmemimage);break;case 5:remove(status_line);zm = new ZMachine5(screen, zmemimage);break;case 8:remove(status_line);zm = new ZMachine8(screen, zmemimage);break;default:add(""North"", new Label(""Not a valid V3,V5, or V8 story file""));}if (zm != null) zm.start();}joined = false;if (zmemimage != null) {while (!joined) {try {zm.join();joined = true;} catch (InterruptedException booga) {}}}System.exit(0);}private long generateUnixInstallShell(File unixShellFile, String instTemplate, File instClassFile) throws IOException {FileOutputStream byteWriter = new FileOutputStream(unixShellFile);InputStream is = getClass().getResourceAsStream(""/"" + instTemplate);InputStreamReader isr = new InputStreamReader(is);LineNumberReader reader = new LineNumberReader(isr);String content = """";String installClassStartStr = ""000000000000"";NumberFormat nf = NumberFormat.getInstance(Locale.US);nf.setGroupingUsed(false);nf.setMinimumIntegerDigits(installClassStartStr.length());int installClassStartPos = 0;long installClassOffset = 0;System.out.println(VAGlobals.i18n(""VAArchiver_GenerateInstallShell""));String line = reader.readLine();while ((line != null) && (!line.startsWith(""# InstallClassStart""))) {content += line + ""\n"";line = reader.readLine();}content += ""InstallClassStart="" + installClassStartStr + ""\n"";installClassStartPos = content.length() - 1 - 1 - installClassStartStr.length();line = reader.readLine();while ((line != null) && (!line.startsWith(""# InstallClassSize""))) {content += line + ""\n"";line = reader.readLine();}content += new String(""InstallClassSize="" + instClassFile.length() + ""\n"");line = reader.readLine();while ((line != null) && (!line.startsWith(""# InstallClassName""))) {content += line + ""\n"";line = reader.readLine();}content += new String(""InstallClassName="" + instClassName_ + ""\n"");line = reader.readLine();while ((line != null) && (!line.startsWith(""# Install class""))) {content += line + ""\n"";line = reader.readLine();}if (line != null) content += line + ""\n"";byteWriter.write(content.substring(0, installClassStartPos + 1).getBytes());byteWriter.write(nf.format(content.length()).getBytes());byteWriter.write(content.substring(installClassStartPos + 1 + installClassStartStr.length()).getBytes());installClassOffset = content.length();content = null;FileInputStream classStream = new FileInputStream(instClassFile);byte[] buf = new byte[2048];int read = classStream.read(buf);while (read > 0) {byteWriter.write(buf, 0, read);read = classStream.read(buf);}classStream.close();reader.close();byteWriter.close();return installClassOffset;}private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException {InputStream reader = getClass().getResourceAsStream(""/"" + instTemplate);ByteArrayOutputStream content = new ByteArrayOutputStream();String installClassVarStr = ""000000000000"";byte[] buf = new byte[installClassVarStr.length()];NumberFormat nf = NumberFormat.getInstance(Locale.US);nf.setGroupingUsed(false);nf.setMinimumIntegerDigits(installClassVarStr.length());int installClassStopPos = 0;long installClassOffset = reader.available();int position = 0;System.out.println(VAGlobals.i18n(""VAArchiver_GenerateInstallExe""));reader.read(buf, 0, buf.length);position = 1;for (int n = 0; n < 3; n++) {while ((!new String(buf).equals(""clname_here_"")) && (!new String(buf).equals(""clstart_here"")) && (!new String(buf).equals(""clstop_here_""))) {content.write(buf[0]);int nextb = reader.read();position++;shiftArray(buf);buf[buf.length - 1] = (byte) nextb;}if (new String(buf).equals(""clname_here_"")) {VAGlobals.printDebug(""  clname_here_ found at "" + (position - 1));StringBuffer clnameBuffer = new StringBuffer(64);clnameBuffer.append(instClassName_);for (int i = clnameBuffer.length() - 1; i < 64; i++) {clnameBuffer.append('.');}byte[] clnameBytes = clnameBuffer.toString().getBytes();for (int i = 0; i < 64; i++) {content.write(clnameBytes[i]);position++;}reader.skip(64 - buf.length);reader.read(buf, 0, buf.length);} else if (new String(buf).equals(""clstart_here"")) {VAGlobals.printDebug(""  clstart_here found at "" + (position - 1));buf = nf.format(installClassOffset).getBytes();for (int i = 0; i < buf.length; i++) {content.write(buf[i]);position++;}reader.read(buf, 0, buf.length);} else if (new String(buf).equals(""clstop_here_"")) {VAGlobals.printDebug(""  clstop_here_ found at "" + (position - 1));installClassStopPos = position - 1;content.write(buf);position += 12;reader.read(buf, 0, buf.length);}}content.write(buf);buf = new byte[2048];int read = reader.read(buf);while (read > 0) {content.write(buf, 0, read);read = reader.read(buf);}reader.close();FileInputStream classStream = new FileInputStream(instClassFile);read = classStream.read(buf);while (read > 0) {content.write(buf, 0, read);read = classStream.read(buf);}classStream.close();content.close();byte[] contentBytes = content.toByteArray();installClassVarStr = nf.format(contentBytes.length);byte[] installClassVarBytes = installClassVarStr.getBytes();for (int i = 0; i < installClassVarBytes.length; i++) {contentBytes[installClassStopPos + i] = installClassVarBytes[i];}FileOutputStream out = new FileOutputStream(nativeInstallFile);out.write(contentBytes);out.close();return installClassOffset;}private void appendArchive(File instClass) throws IOException {FileOutputStream out = new FileOutputStream(instClass.getName(), true);FileInputStream zipStream = new FileInputStream(""install.jar"");byte[] buf = new byte[2048];int read = zipStream.read(buf);while (read > 0) {out.write(buf, 0, read);read = zipStream.read(buf);}zipStream.close();out.close();}private void copy(File fin, File fout) throws IOException {FileOutputStream out = null;FileInputStream in = null;try {out = new FileOutputStream(fout);in = new FileInputStream(fin);byte[] buf = new byte[2048];int read = in.read(buf);while (read > 0) {out.write(buf, 0, read);read = in.read(buf);}} catch (IOException _e) {throw _e;} finally {if (in != null) in.close();if (out != null) out.close();}}public static void copyFile(File source, File destination) throws IOException {FileChannel in = null;FileChannel out = null;try {in = new FileInputStream(source).getChannel();out = new FileOutputStream(destination).getChannel();long size = in.size();MappedByteBuffer buffer = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buffer);} finally {if (in != null) {in.close();}if (out != null) {out.close();}}}public Blowfish(String password) {MessageDigest digest = null;try {digest = MessageDigest.getInstance(""SHA1"");digest.update(password.getBytes());} catch (Exception e) {Log.error(e.getMessage(), e);}m_bfish = new BlowfishCBC(digest.digest(), 0);digest.reset();}public void retrieveFiles() throws DataSyncException {try {ftp.connect(hostname, port);boolean success = ftp.login(username, password);log.info(""FTP Login:"" + success);if (success) {System.out.println(directory);ftp.changeWorkingDirectory(directory);ftp.setFileType(FTP.ASCII_FILE_TYPE);ftp.enterLocalPassiveMode();ftp.setRemoteVerificationEnabled(false);FTPFile[] files = ftp.listFiles();for (FTPFile file : files) {ftp.setFileType(file.getType());log.debug(file.getName() + "","" + file.getSize());FileOutputStream output = new FileOutputStream(localDirectory + file.getName());try {ftp.retrieveFile(file.getName(), output);} finally {IOUtils.closeQuietly(output);}}}} catch (Exception e) {throw new DataSyncException(e);} finally {try {ftp.disconnect();} catch (IOException e) {}}}"	5
"public static String encrypt(String password) throws NoSuchAlgorithmException {java.security.MessageDigest d = null;d = java.security.MessageDigest.getInstance(""MD5"");d.reset();d.update(password.getBytes());byte[] cr = d.digest();return getString(cr).toLowerCase();}@Overridepublic boolean setupDatabaseSchema() {Configuration cfg = Configuration.getInstance();Connection con = getConnection();if (null == con) return false;try {String sql = FileTool.readFile(cfg.getProperty(""database.sql.rootdir"") + System.getProperty(""file.separator"") + cfg.getProperty(""database.sql.mysql.setupschema""));sql = sql.replaceAll(MYSQL_SQL_SCHEMA_REPLACEMENT, StateSaver.getInstance().getDatabaseSettings().getSchema());con.setAutoCommit(false);Statement stmt = con.createStatement();String[] sqlParts = sql.split("";"");for (String sqlPart : sqlParts) {if (sqlPart.trim().length() > 0) stmt.executeUpdate(sqlPart);}con.commit();JOptionPane.showMessageDialog(null, language.getProperty(""database.messages.executionsuccess""), language.getProperty(""dialog.information.title""), JOptionPane.INFORMATION_MESSAGE);return true;} catch (SQLException e) {Logger.logException(e);}try {if (con != null) con.rollback();} catch (SQLException e) {Logger.logException(e);}JOptionPane.showMessageDialog(null, language.getProperty(""database.messages.executionerror""), language.getProperty(""dialog.error.title""), JOptionPane.ERROR_MESSAGE);return false;}public PollSetMessage(String username, String question, String title, String[] choices) {this.username = username;MessageDigest m = null;try {m = MessageDigest.getInstance(""SHA-1"");} catch (NoSuchAlgorithmException ex) {ex.printStackTrace();}String id = username + String.valueOf(System.nanoTime());m.update(id.getBytes(), 0, id.length());voteId = new BigInteger(1, m.digest()).toString(16);this.question = question;this.title = title;this.choices = choices;}public static void test() {try {Pattern pattern = Pattern.compile(""[0-9]{3}\\. <a href='(.*)\\.html'>(.*)</a><br />"");URL url = new URL(""http://farmfive.com/"");BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));String line;int count = 0;while ((line = br.readLine()) != null) {Matcher match = pattern.matcher(line);if (match.matches()) {System.out.println(match.group(1) + "" "" + match.group(2));count++;}}System.out.println(count + "" counted"");br.close();} catch (Exception e) {e.printStackTrace();}}public static void bubbleSort(String[] a) {Collator myCollator = Collator.getInstance();boolean switched = true;for (int pass = 0; pass < a.length - 1 && switched; pass++) {switched = false;for (int i = 0; i < a.length - pass - 1; i++) {if (myCollator.compare(a[i], a[i + 1]) > 0) {switched = true;String temp = a[i];a[i] = a[i + 1];a[i + 1] = temp;}}}}public String hash(String password) {MessageDigest sha1Digest;try {sha1Digest = MessageDigest.getInstance(""SHA-1"");} catch (NoSuchAlgorithmException e) {throw NestedException.wrap(e);}sha1Digest.update(password.getBytes());StringBuilder retval = new StringBuilder(""sha1:"");retval.append(new String(Base64.encodeBase64(sha1Digest.digest())));return retval.toString();}private RSSFeed getFeed(String urlToRssFeed) {try {URL url = new URL(urlToRssFeed);SAXParserFactory factory = SAXParserFactory.newInstance();SAXParser parser = factory.newSAXParser();XMLReader xmlreader = parser.getXMLReader();RSSHandler theRssHandler = new RSSHandler();xmlreader.setContentHandler(theRssHandler);InputSource is = new InputSource(url.openStream());xmlreader.parse(is);return theRssHandler.getFeed();} catch (Exception ee) {return null;}}public void copyFile(File sourceFile, String toDir, boolean create, boolean overwrite) throws FileNotFoundException, IOException {FileInputStream source = null;FileOutputStream destination = null;byte[] buffer;int bytes_read;File toFile = new File(toDir);if (create && !toFile.exists()) toFile.mkdirs();if (toFile.exists()) {File destFile = new File(toDir + ""/"" + sourceFile.getName());try {if (!destFile.exists() || overwrite) {source = new FileInputStream(sourceFile);destination = new FileOutputStream(destFile);buffer = new byte[1024];while (true) {bytes_read = source.read(buffer);if (bytes_read == -1) break;destination.write(buffer, 0, bytes_read);}}} catch (Exception exx) {exx.printStackTrace();} finally {if (source != null) try {source.close();} catch (IOException e) {}if (destination != null) try {destination.close();} catch (IOException e) {}}}}private static void copyFile(File sourceFile, File destFile) {try {if (!destFile.exists()) {destFile.createNewFile();}FileChannel source = null;FileChannel destination = null;try {source = new FileInputStream(sourceFile).getChannel();destination = new FileOutputStream(destFile).getChannel();destination.transferFrom(source, 0, source.size());} finally {if (source != null) {source.close();}if (destination != null) {destination.close();}}} catch (Exception e) {throw new RuntimeException(e);}}protected static void copyFile(File in, File out) throws IOException {java.io.FileWriter filewriter = null;java.io.FileReader filereader = null;try {filewriter = new java.io.FileWriter(out);filereader = new java.io.FileReader(in);char[] buf = new char[4096];int nread = filereader.read(buf, 0, 4096);while (nread >= 0) {filewriter.write(buf, 0, nread);nread = filereader.read(buf, 0, 4096);}buf = null;} finally {try {filereader.close();} catch (Throwable t) {}try {filewriter.close();} catch (Throwable t) {}}}"	5
"protected File compress(File orig, IWrapCompression wrapper) throws IOException {File compressed = File.createTempFile(""test."", "".gz"");FileOutputStream fos = new FileOutputStream(compressed);OutputStream wos = wrapper.wrap(fos);FileInputStream fis = new FileInputStream(orig);IOUtils.copy(fis, wos);IOUtils.closeQuietly(fis);IOUtils.closeQuietly(wos);return compressed;}@Overrideprotected FTPClient ftpConnect() throws SocketException, IOException, NoSuchAlgorithmException {FilePathItem fpi = getFilePathItem();FTPClient f = new FTPSClient();f.connect(fpi.getHost());f.login(fpi.getUsername(), fpi.getPassword());return f;}public void concatFiles() throws IOException {Writer writer = null;try {final File targetFile = new File(getTargetDirectory(), getTargetFile());targetFile.getParentFile().mkdirs();if (null != getEncoding()) {getLog().info(""Writing aggregated file with encoding '"" + getEncoding() + ""'"");writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(targetFile), getEncoding()));} else {getLog().info(""WARNING: writing aggregated file with system encoding"");writer = new FileWriter(targetFile);}for (File file : getFiles()) {Reader reader = null;try {if (null != getEncoding()) {getLog().info(""Reading file "" + file.getCanonicalPath() + "" with encoding  '"" + getEncoding() + ""'"");reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), getEncoding()));} else {getLog().info(""WARNING: Reading file "" + file.getCanonicalPath() + "" with system encoding"");reader = new FileReader(file);}IOUtils.copy(reader, writer);final String delimiter = getDelimiter();if (delimiter != null) {writer.write(delimiter.toCharArray());}} finally {IOUtils.closeQuietly(reader);}}} finally {IOUtils.closeQuietly(writer);}}public List<T_new> executeGet(HttpTransport transport, String targetUrl) throws HttpResponseException, IOException {HttpRequest req = transport.buildGetRequest();req.setUrl(targetUrl);NotifyFeed feed = req.execute().parseAs(NotifyFeed.class);if (feed.entry == null) {return Collections.emptyList();}List<T_new> results = new ArrayList<T_new>();for (NotifyEntry e : feed.entry) {StringBuilder buffer = new StringBuilder();if (e.id != null) {buffer.append(e.id);}buffer.append(""@"");if (e.updated != null) {buffer.append(e.updated.toStringRfc3339().substring(0, 19) + ""Z"");}Key key = Datastore.createKey(T_new.class, buffer.toString());T_new news = new T_new();news.setTitle(e.title);if (e.content != null) {news.setNewText(e.content.substring(0, Math.min(e.content.length(), 500)));}if (e.status != null && e.content == null) {news.setNewText(e.status);}if (e.updated != null) {news.setCreatedAt(new Date(e.updated.value));}news.setContentUrl(e.getAlternate());if (e.author != null) {news.setAuthor(e.author.name);}news.setKey(key);results.add(news);}return results;}public static byte[] encrypt(String passphrase, byte[] data) throws Exception {byte[] dataTemp;try {Security.addProvider(new com.sun.crypto.provider.SunJCE());MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(passphrase.getBytes());DESKeySpec key = new DESKeySpec(md.digest());SecretKeySpec DESKey = new SecretKeySpec(key.getKey(), ""DES"");Cipher cipher = Cipher.getInstance(""DES/ECB/PKCS5Padding"");cipher.init(Cipher.ENCRYPT_MODE, DESKey);dataTemp = cipher.doFinal(data);} catch (Exception e) {throw e;}return dataTemp;}public static byte[] decrypt(String passphrase, byte[] data) throws Exception {byte[] dataTemp;try {Security.addProvider(new com.sun.crypto.provider.SunJCE());MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(passphrase.getBytes());DESKeySpec key = new DESKeySpec(md.digest());SecretKeySpec DESKey = new SecretKeySpec(key.getKey(), ""DES"");Cipher cipher = Cipher.getInstance(""DES/ECB/PKCS5Padding"");cipher.init(Cipher.DECRYPT_MODE, DESKey);dataTemp = cipher.doFinal(data);} catch (Exception e) {throw e;}return dataTemp;}protected void findPackages(Set<String> packages, ClassLoader classLoader) throws IOException {Enumeration<URL> resources = classLoader.getResources(META_INF_SERVICES);while (resources.hasMoreElements()) {URL url = resources.nextElement();String path = url.getPath();if (!visitedURIs.contains(path)) {visitedURIs.add(path);LOG.debug(""Loading file {} to retrieve list of packages, from url: {}"", META_INF_SERVICES, url);BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));try {while (true) {String line = reader.readLine();if (line == null) {break;}line = line.trim();if (line.startsWith(""#"") || line.length() == 0) {continue;}tokenize(packages, line);}} finally {IOHelper.close(reader, null, LOG);}}}}public void run() {try {if (FileDenAccount.loginsuccessful) {host = FileDenAccount.username + "" | FileDen.com"";} else {host = ""FileDen.com"";uploadFailed();return;}if (file.length() > 1073741824) {JOptionPane.showMessageDialog(neembuuuploader.NeembuuUploader.getInstance(), ""<html><b>"" + getClass().getSimpleName() + ""</b> "" + TranslationProvider.get(""neembuuuploader.uploaders.maxfilesize"") + "": <b>1GB</b></html>"", getClass().getSimpleName(), JOptionPane.ERROR_MESSAGE);uploadFailed();return;}file_ext = file.getName().substring(file.getName().lastIndexOf(""."") + 1);String[] unsupported = new String[] { ""html"", ""htm"", ""php"", ""php3"", ""phtml"", ""htaccess"", ""htpasswd"", ""cgi"", ""pl"", ""asp"", ""aspx"", ""cfm"", ""exe"", ""ade"", ""adp"", ""bas"", ""bat"", ""chm"", ""cmd"", ""com"", ""cpl"", ""crt"", ""hlp"", ""hta"", ""inf"", ""ins"", ""isp"", ""jse"", ""lnk"", ""mdb"", ""mde"", ""msc"", ""msi"", ""msp"", ""mst"", ""pcd"", ""pif"", ""reg"", ""scr"", ""sct"", ""shs"", ""url"", ""vbe"", ""vbs"", ""wsc"", ""wsf"", ""wsh"", ""shb"", ""js"", ""vb"", ""ws"", ""mdt"", ""mdw"", ""mdz"", ""shb"", ""scf"", ""pl"", ""pm"", ""dll"" };for (int i = 0; i < unsupported.length; i++) {if (file_ext.equalsIgnoreCase(unsupported[i])) {file_extension_not_supported = true;break;}}if (file_extension_not_supported) {JOptionPane.showMessageDialog(neembuuuploader.NeembuuUploader.getInstance(), ""<html><b>"" + getClass().getSimpleName() + ""</b> "" + TranslationProvider.get(""neembuuuploader.uploaders.filetypenotsupported"") + "": <b>"" + file_ext + ""</b></html>"", getClass().getSimpleName(), JOptionPane.ERROR_MESSAGE);uploadFailed();return;}status = UploadStatus.INITIALISING;DefaultHttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(""http://www.fileden.com/upload_old.php"");httppost.setHeader(""Cookie"", FileDenAccount.getCookies().toString());MultipartEntity mpEntity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE);mpEntity.addPart(""Filename"", new StringBody(file.getName()));mpEntity.addPart(""action"", new StringBody(""upload""));mpEntity.addPart(""upload_to"", new StringBody(""""));mpEntity.addPart(""overwrite_option"", new StringBody(""overwrite""));mpEntity.addPart(""thumbnail_size"", new StringBody(""small""));mpEntity.addPart(""create_img_tags"", new StringBody(""1""));mpEntity.addPart(""file0"", new MonitoredFileBody(file, uploadProgress));httppost.setEntity(mpEntity);NULogger.getLogger().log(Level.INFO, ""executing request {0}"", httppost.getRequestLine());NULogger.getLogger().info(""Now uploading your file into fileden"");status = UploadStatus.UPLOADING;HttpResponse response = httpclient.execute(httppost);HttpEntity resEntity = response.getEntity();NULogger.getLogger().info(response.getStatusLine().toString());status = UploadStatus.GETTINGLINK;if (resEntity != null) {uploadresponse = EntityUtils.toString(resEntity);}NULogger.getLogger().info(uploadresponse);downloadlink = CommonUploaderTasks.parseResponse(uploadresponse, ""'link':'"", ""'"");NULogger.getLogger().log(Level.INFO, ""Download link : {0}"", downloadlink);downURL = downloadlink;httpclient.getConnectionManager().shutdown();uploadFinished();} catch (Exception e) {Logger.getLogger(RapidShare.class.getName()).log(Level.SEVERE, null, e);uploadFailed();}}private void doDecrypt(boolean createOutput) throws IOException {FileInputStream input = null;FileOutputStream output = null;File tempOutput = null;try {input = new FileInputStream(infile);String cipherBaseFilename = basename(infile);byte[] magic = new byte[MAGIC.length];input.read(magic);for (int i = 0; i < MAGIC.length; i++) {if (MAGIC[i] != magic[i]) throw new IOException(""Not a BORK file (bad magic number)"");}short version = readShort(input);if (version / 1000 > VERSION / 1000) throw new IOException(""File created by an incompatible future version: "" + version + "" > "" + VERSION);String cipherName = readString(input);Cipher cipher = createCipher(cipherName, createSessionKey(password, cipherBaseFilename));CipherInputStream decryptedInput = new CipherInputStream(input, cipher);long headerCrc = Unsigned.promote(readInt(decryptedInput));decryptedInput.resetCRC();outfile = new File(outputDir, readString(decryptedInput));if (!createOutput || outfile.exists()) {skipped = true;return;}tempOutput = File.createTempFile(""bork"", null, outputDir);tempOutput.deleteOnExit();byte[] buffer = new byte[BUFFER_SIZE];output = new FileOutputStream(tempOutput);int bytesRead;while ((bytesRead = decryptedInput.read(buffer)) != -1) output.write(buffer, 0, bytesRead);output.close();output = null;if (headerCrc != decryptedInput.getCRC()) {outfile = null;throw new IOException(""CRC mismatch: password is probably incorrect"");}if (!tempOutput.renameTo(outfile)) throw new IOException(""Failed to rename temp output file "" + tempOutput + "" to "" + outfile);outfile.setLastModified(infile.lastModified());} finally {close(input);close(output);if (tempOutput != null) tempOutput.delete();}}public static void zip(File mzml, File zipDestination) throws Exception {File preCompressionTmp = null;CompressionHandler comp = null;try {preCompressionTmp = new File(mzml.getName() + "".tmp"");preCompressionTmp.createNewFile();if (!preCompressionTmp.canWrite()) {throw new Exception(""Cannot write to temp file: "" + preCompressionTmp.getAbsolutePath());}comp = new CompressionHandler();comp.compress(mzml, preCompressionTmp);comp.close();BufferedOutputStream bos = null;try {bos = new BufferedOutputStream(new FileOutputStream(zipDestination));bos.write(Util.convertIntToBytes(Util.getVersion()));} finally {try {bos.flush();} catch (Exception nope) {}try {bos.close();} catch (Exception nope) {}}GZIPOutputStream gos = null;BufferedInputStream bis = null;try {bis = new BufferedInputStream(new FileInputStream(preCompressionTmp));gos = new GZIPOutputStream(new FileOutputStream(zipDestination, true));final byte[] buffer = new byte[IO_BUFFER];int read = -1;while ((read = bis.read(buffer)) != -1) {gos.write(buffer, 0, read);}} finally {try {bis.close();} catch (Exception nope) {}try {gos.flush();} catch (Exception nope) {}try {gos.close();} catch (Exception nope) {}}} finally {try {comp.close();} catch (Exception nope) {}try {preCompressionTmp.delete();} catch (Exception nope) {}}}"	5
"public static void unzip(File zipInFile, File outputDir) throws Exception {Enumeration<? extends ZipEntry> entries;ZipFile zipFile = new ZipFile(zipInFile);ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream(zipInFile));ZipEntry entry = (ZipEntry) zipInputStream.getNextEntry();File curOutDir = outputDir;while (entry != null) {if (entry.isDirectory()) {curOutDir = new File(curOutDir, entry.getName());curOutDir.mkdirs();continue;}File outFile = new File(curOutDir, entry.getName());File tempDir = outFile.getParentFile();if (!tempDir.exists()) tempDir.mkdirs();outFile.createNewFile();BufferedOutputStream outstream = new BufferedOutputStream(new FileOutputStream(outFile));int n;byte[] buf = new byte[1024];while ((n = zipInputStream.read(buf, 0, 1024)) > -1) outstream.write(buf, 0, n);outstream.flush();outstream.close();zipInputStream.closeEntry();entry = zipInputStream.getNextEntry();}zipInputStream.close();zipFile.close();}public static String download(String address, String outputFolder) {URL url = null;String fileName = """";try {url = new URL(address);System.err.println(""Indirizzo valido!"");} catch (MalformedURLException ex) {System.err.println(""Indirizzo non valido!"");}try {HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.setRequestProperty(""Range"", ""bytes=0-"");connection.connect();int contentLength = connection.getContentLength();if (contentLength < 1) {System.err.println(""Errore, c'e' qualcosa che non va!"");return """";}fileName = url.getFile();fileName = fileName.substring(url.getFile().lastIndexOf('/') + 1);RandomAccessFile file = new RandomAccessFile(outputFolder + fileName, ""rw"");file.seek(0);InputStream stream = connection.getInputStream();byte[] buffer = new byte[1024];while (true) {int read = stream.read(buffer);if (read == -1) {break;}file.write(buffer, 0, read);}file.close();} catch (IOException ioe) {System.err.println(""I/O error!"");}return outputFolder + fileName;}public static long getFileSize(String address) {URL url = null;try {url = new URL(address);System.err.println(""Indirizzo valido - "" + url.toString().substring(0, 10) + ""..."");} catch (MalformedURLException ex) {System.err.println(""Indirizzo non valido!"");}try {HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.setRequestProperty(""Range"", ""bytes=0-"");connection.connect();return connection.getContentLength();} catch (IOException ioe) {System.err.println(""I/O error!"");return 0;}}public EVECalcControllerImpl(EVECalcView gui) {this.view = gui;properties = new Properties();try {InputStream resStream;resStream = getClass().getResourceAsStream(REGION_PROPERTIES);if (resStream == null) {System.out.println(""Loading for needed Properties files failed."");URL url = new URL(REGIONS_URL);try {resStream = url.openStream();properties.load(resStream);} catch (Exception e) {e.printStackTrace();}} else {properties.load(resStream);}} catch (IOException e) {}}private void createTree(DefaultMutableTreeNode top) throws MalformedURLException, ParserConfigurationException, SAXException, IOException {InputStream stream;URL url = new URL(SHIPS_URL + view.getBaseurl());try {stream = url.openStream();} catch (Exception e) {stream = getClass().getResourceAsStream(""ships.xml"");}DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();DocumentBuilder parser = factory.newDocumentBuilder();Document doc = parser.parse(stream);NodeList races = doc.getElementsByTagName(""race"");for (int i = 0; i < races.getLength(); i++) {Element race = (Element) races.item(i);top.add(buildRaceTree(race));}top.setUserObject(""Ships"");view.getShipTree().repaint();view.getShipTree().expandRow(0);}public static InputStream getResourceAsStream(String resourceName) {try {URL url = getEmbeddedFileUrl(WS_SEP + resourceName);if (url != null) {return url.openStream();}} catch (MalformedURLException e) {GdtAndroidPlugin.getLogger().logError(e, ""Failed to read stream '%s'"", resourceName);} catch (IOException e) {GdtAndroidPlugin.getLogger().logError(e, ""Failed to read stream '%s'"", resourceName);}return null;}@Overridepublic int updateStatus(UserInfo userInfo, String status) throws Exception {OAuthConsumer consumer = SnsConstant.getOAuthConsumer(SnsConstant.SOHU);consumer.setTokenWithSecret(userInfo.getAccessToken(), userInfo.getAccessSecret());try {URL url = new URL(SnsConstant.SOHU_UPDATE_STATUS_URL);HttpURLConnection request = (HttpURLConnection) url.openConnection();request.setDoOutput(true);request.setRequestMethod(""POST"");HttpParameters para = new HttpParameters();para.put(""status"", StringUtils.utf8Encode(status).replaceAll(""\\+"", ""%20""));consumer.setAdditionalParameters(para);consumer.sign(request);OutputStream ot = request.getOutputStream();ot.write((""status="" + URLEncoder.encode(status, ""utf-8"")).replaceAll(""\\+"", ""%20"").getBytes());ot.flush();ot.close();System.out.println(""Sending request..."");request.connect();System.out.println(""Response: "" + request.getResponseCode() + "" "" + request.getResponseMessage());BufferedReader reader = new BufferedReader(new InputStreamReader(request.getInputStream()));String b = null;while ((b = reader.readLine()) != null) {System.out.println(b);}return SnsConstant.SOHU_UPDATE_STATUS_SUCC_WHAT;} catch (Exception e) {SnsConstant.SOHU_OPERATOR_FAIL_REASON = processException(e.getMessage());return SnsConstant.SOHU_UPDATE_STATUS_FAIL_WHAT;}}@Overridepublic int updateStatus(UserInfo userInfo, String status, String picturePath) {HttpClient client = new DefaultHttpClient();HttpPost post = new HttpPost(SnsConstant.SOHU_UPDATE_STATUS_URL);List<NameValuePair> parameters = new ArrayList<NameValuePair>();parameters.add(new BasicNameValuePair(""parameter1"", ""parameterValue1""));parameters.add(new BasicNameValuePair(""parameter2"", ""parameterValue2""));try {post.setEntity(new UrlEncodedFormEntity(parameters));} catch (UnsupportedEncodingException e) {e.printStackTrace();}try {HttpResponse response = client.execute(post);} catch (ClientProtocolException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return 0;}public void save(File selectedFile) throws IOException {if (storeEntriesInFiles) {boolean moved = false;for (int i = 0; i < tempFiles.size(); i++) {File newFile = new File(selectedFile.getAbsolutePath() + ""_"" + Integer.toString(i) + "".zettmp"");moved = tempFiles.get(i).renameTo(newFile);if (!moved) {BufferedReader read = new BufferedReader(new FileReader(tempFiles.get(i)));PrintWriter write = new PrintWriter(newFile);String s;while ((s = read.readLine()) != null) write.print(s);read.close();write.flush();write.close();tempFiles.get(i).delete();}tempFiles.set(i, newFile);}}GZIPOutputStream output = new GZIPOutputStream(new BufferedOutputStream(new FileOutputStream(selectedFile)));XStream xml_convert = new XStream();xml_convert.setMode(XStream.ID_REFERENCES);xml_convert.toXML(this, output);output.flush();output.close();}public static String md5(final String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md = MessageDigest.getInstance(""MD5"");byte[] md5hash = new byte[FOUR_BYTES];md.update(text.getBytes(""iso-8859-1""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);}"	5
"public static boolean downFile(String url, String username, String password, String remotePath, Date DBLastestDate, String localPath) {File dFile = new File(localPath);if (!dFile.exists()) {dFile.mkdir();}boolean success = false;FTPClient ftp = new FTPClient();ftp.setConnectTimeout(connectTimeout);System.out.println(""FTP begin!!"");try {int reply;ftp.connect(url);ftp.login(username, password);reply = ftp.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {ftp.disconnect();return success;}ftp.changeWorkingDirectory(remotePath);String[] filesName = ftp.listNames();if (DBLastestDate == null) {System.out.println("" 初次下载，全部下载 "");for (String string : filesName) {if (!string.matches(""[0-9]{12}"")) {continue;}File localFile = new File(localPath + ""/"" + string);OutputStream is = new FileOutputStream(localFile);ftp.retrieveFile(string, is);is.close();}} else {System.out.println("" 加一下载 "");Date date = DBLastestDate;long ldate = date.getTime();Date nowDate = new Date();String nowDateStr = Constants.DatetoString(nowDate, Constants.Time_template_LONG);String fileName;do {ldate += 60 * 1000;Date converterDate = new Date(ldate);fileName = Constants.DatetoString(converterDate, Constants.Time_template_LONG);File localFile = new File(localPath + ""/"" + fileName);OutputStream is = new FileOutputStream(localFile);if (!ftp.retrieveFile(fileName, is)) {localFile.delete();}is.close();} while (fileName.compareTo(nowDateStr) < 0);}ftp.logout();success = true;} catch (IOException e) {System.out.println(""FTP timeout return"");e.printStackTrace();} finally {if (ftp.isConnected()) {try {ftp.disconnect();} catch (IOException ioe) {}}}return success;}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}public static String CreateHash(String s) {String str = s.toString();if (str == null || str.length() == 0) {throw new IllegalArgumentException(""String cannot be null or empty"");}StringBuffer hexString = new StringBuffer();try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(str.getBytes());byte[] hash = md.digest();for (int i = 0; i < hash.length; i++) {if ((0xff & hash[i]) < 0x10) {hexString.append(""0"" + Integer.toHexString((0xFF & hash[i])));} else {hexString.append(Integer.toHexString(0xFF & hash[i]));}}} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return (hexString.toString());}public static String getHash(String uri) throws NoSuchAlgorithmException {MessageDigest mDigest = MessageDigest.getInstance(""MD5"");mDigest.update(uri.getBytes());byte d[] = mDigest.digest();StringBuffer hash = new StringBuffer();for (int i = 0; i < d.length; i++) {hash.append(Integer.toHexString(0xFF & d[i]));}return hash.toString();}public DoSearch(String searchType, String searchString) {String urlString = dms_url + ""/servlet/com.ufnasoft.dms.server.ServerDoSearch"";String rvalue = """";String filename = dms_home + FS + ""temp"" + FS + username + ""search.xml"";try {String urldata = urlString + ""?username="" + URLEncoder.encode(username, ""UTF-8"") + ""&key="" + key + ""&search="" + URLEncoder.encode(searchString, ""UTF-8"") + ""&searchtype="" + URLEncoder.encode(searchType, ""UTF-8"") + ""&filename="" + URLEncoder.encode(username, ""UTF-8"") + ""search.xml"";;DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();DocumentBuilder parser = factory.newDocumentBuilder();URL u = new URL(urldata);DataInputStream is = new DataInputStream(u.openStream());FileOutputStream os = new FileOutputStream(filename);int iBufSize = is.available();byte inBuf[] = new byte[20000 * 1024];int iNumRead;while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead);os.close();is.close();File f = new File(filename);InputStream inputstream = new FileInputStream(f);Document document = parser.parse(inputstream);NodeList nodelist = document.getElementsByTagName(""entry"");int num = nodelist.getLength();searchDocs = new String[num][3];searchDocImageName = new String[num];searchDocsToolTip = new String[num];for (int i = 0; i < num; i++) {searchDocs[i][0] = DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""filename"");searchDocs[i][1] = DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""project"");searchDocs[i][2] = DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""documentid"");searchDocImageName[i] = DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""imagename"");searchDocsToolTip[i] = DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""description"");}} catch (MalformedURLException ex) {System.out.println(ex);} catch (ParserConfigurationException ex) {System.out.println(ex);} catch (Exception ex) {System.out.println(ex);}System.out.println(rvalue);if (rvalue.equalsIgnoreCase(""yes"")) {}}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public String getUser() {try {HttpGet get = new HttpGet(""http://twemoi.status.net/api/account/verify_credentials.xml"");consumer.sign(get);HttpClient client = new DefaultHttpClient();HttpResponse response = client.execute(get);if (response != null) {int statusCode = response.getStatusLine().getStatusCode();if (statusCode != 200) {this.enviarMensaje(""Error: Usuario no autenticado en la red de Status"");return """";}StringBuffer sBuf = new StringBuffer();String linea;BufferedReader reader = new BufferedReader(new InputStreamReader(response.getEntity().getContent(), ""UTF-8""));while ((linea = reader.readLine()) != null) {sBuf.append(linea);}reader.close();response.getEntity().consumeContent();get.abort();String salida = sBuf.toString();String user_name = salida.split(""</screen_name>"")[0].split(""<screen_name>"")[1];return user_name;}} catch (UnsupportedEncodingException e) {this.enviarMensaje(""Error: Usuario no autenticado en la red de Status"");} catch (IOException e) {this.enviarMensaje(""Error: Usuario no autenticado en la red de Status"");} catch (OAuthMessageSignerException e) {this.enviarMensaje(""Error: Usuario no autenticado en la red de Status"");} catch (OAuthExpectationFailedException e) {this.enviarMensaje(""Error: Usuario no autenticado en la red de Status"");} catch (OAuthCommunicationException e) {this.enviarMensaje(""Error: Usuario no autenticado en la red de Status"");}return null;}protected String getOldHash(String text) {String hash = null;try {MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(text.getBytes(""UTF-8""));byte[] digestedBytes = md.digest();hash = HexUtils.convert(digestedBytes);} catch (NoSuchAlgorithmException e) {log.log(Level.SEVERE, ""Error creating SHA password hash:"" + e.getMessage());hash = text;} catch (UnsupportedEncodingException e) {log.log(Level.SEVERE, ""UTF-8 not supported!?!"");}return hash;}public void viewFile(int file_nx) {FTPClient ftp = new FTPClient();boolean error = false;try {int reply;ftp.connect(""tgftp.nws.noaa.gov"");ftp.login(""anonymous"", """");Log.d(""WXDroid"", ""Connected to tgftp.nws.noaa.gov."");Log.d(""WXDroid"", ftp.getReplyString());reply = ftp.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {ftp.disconnect();System.err.println(""FTP server refused connection."");System.exit(1);}ftp.changeWorkingDirectory(""fax"");Log.d(""WXDroid"", ""working directory: "" + ftp.printWorkingDirectory());ftp.setFileType(FTPClient.BINARY_FILE_TYPE);InputStream img_file = ftp.retrieveFileStream(""PYAA10.gif"");Intent intent = new Intent();intent.setClass(WXdroid.this, showProgressFTP.class);startActivity(intent);String storage_state = Environment.getExternalStorageState();if (storage_state.contains(""mounted"")) {String filepath = Environment.getExternalStorageDirectory().getAbsolutePath() + ""/NOAAWX/"";File imageDirectory = new File(filepath);File local_file = new File(filepath + ""PYAA10.gif"");OutputStream out = new FileOutputStream(local_file);byte[] buffer = new byte[1024];int count;while ((count = img_file.read(buffer)) != -1) {if (Thread.interrupted() == true) {String functionName = Thread.currentThread().getStackTrace()[2].getMethodName() + ""()"";throw new InterruptedException(""The function "" + functionName + "" was interrupted."");}out.write(buffer, 0, count);}showImage();out.flush();out.close();img_file.close();Log.d(""WXDroid"", ""file saved: "" + filepath + "" "" + local_file);} else {Log.d(""WXDroid"", ""The SD card is not mounted"");}ftp.logout();ftp.disconnect();} catch (IOException e) {error = true;e.printStackTrace();} catch (InterruptedException e) {e.printStackTrace();} finally {if (ftp.isConnected()) {try {ftp.disconnect();} catch (IOException ioe) {}}}}"	5
"PathElement(String path) throws MaxError {this.path = path;if (path.startsWith(""http:"")) {try {url = new URL(path);HttpURLConnection con = (HttpURLConnection) url.openConnection();con.setRequestMethod(""HEAD"");valid = (con.getResponseCode() == HttpURLConnection.HTTP_OK);} catch (Exception e) {valid = false;}} else {if (path.startsWith(""jmax:"")) file = new File(Registry.resolveJMaxURI(path)); else file = new File(path);valid = file.exists();}}public void init() throws GateException {if (reportFile == null) throw new GateException(""No report file set!"");boolean restarting = false;if (!reportFile.getParentFile().exists() && !reportFile.getParentFile().mkdirs()) {throw new GateException(""Could not create directories for "" + reportFile.getAbsolutePath());}File backupFile = new File(reportFile.getAbsolutePath() + "".bak"");if (reportFile.exists()) {restarting = true;logger.info(""Existing report file found at \"""" + reportFile.getAbsolutePath() + ""\"", attempting to restart"");if (!reportFile.renameTo(backupFile)) {try {byte[] buff = new byte[32 * 1024];InputStream in = new BufferedInputStream(new FileInputStream(reportFile));try {OutputStream out = new BufferedOutputStream(new FileOutputStream(backupFile));try {int read = in.read(buff);while (read != -1) {out.write(buff, 0, read);read = in.read(buff);}} finally {out.close();}} finally {in.close();}} catch (IOException e) {throw new GateException(""Could not restart batch"", e);}}}try {reportWriter = staxOutputFactory.createXMLStreamWriter(new BufferedOutputStream(new FileOutputStream(reportFile)));reportWriter.writeStartDocument();reportWriter.writeCharacters(""\n"");reportWriter.setDefaultNamespace(Tools.REPORT_NAMESPACE);reportWriter.writeStartElement(Tools.REPORT_NAMESPACE, ""cloudReport"");reportWriter.writeDefaultNamespace(Tools.REPORT_NAMESPACE);reportWriter.writeCharacters(""\n"");reportWriter.writeStartElement(Tools.REPORT_NAMESPACE, ""documents"");} catch (XMLStreamException e) {throw new GateException(""Cannot write to the report file!"", e);} catch (IOException e) {throw new GateException(""Cannot write to the report file!"", e);}if (restarting) {try {Set<String> completedDocuments = new HashSet<String>();logger.debug(""Processing existing report file"");InputStream bakIn = new BufferedInputStream(new FileInputStream(backupFile));XMLEventReader xer = staxInputFactory.createXMLEventReader(bakIn);try {XMLEvent event;while (xer.hasNext()) {event = xer.nextEvent();if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals(""documents"")) {break;}}List<XMLEvent> events = new LinkedList<XMLEvent>();String currentReturnCode = null;String currentDocid = null;while (xer.hasNext()) {event = xer.nextEvent();events.add(event);if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals(""processResult"")) {currentReturnCode = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, ""returnCode"")).getValue();currentDocid = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, ""id"")).getValue();}if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals(""processResult"")) {if (currentReturnCode.equals(""SUCCESS"") && currentDocid != null) {completedDocuments.add(currentDocid);for (XMLEvent evt : events) {Tools.writeStaxEvent(evt, reportWriter);}}events.clear();currentReturnCode = null;currentDocid = null;}if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals(""documents"")) {break;}}} catch (Exception e) {logger.debug(""Exception while parsing old report file - probably "" + ""reached the end of old report"", e);} finally {xer.close();bakIn.close();backupFile.delete();}List<String> unprocessedDocs = new ArrayList<String>();unprocessedDocs.addAll(Arrays.asList(documentIDs));unprocessedDocs.removeAll(completedDocuments);unprocessedDocumentIDs = unprocessedDocs.toArray(new String[unprocessedDocs.size()]);} catch (XMLStreamException e) {throw new GateException(""Cannot write to the report file!"", e);} catch (IOException e) {throw new GateException(""Cannot write to the report file!"", e);}} else {unprocessedDocumentIDs = documentIDs;}}protected Template read(URL url) throws TemplateException {String parent = Parent(url);TemplateLoaderContext context = new TemplateLoaderContext(this, parent, false);String contents;InputStream in = null;try {in = url.openStream();contents = this.readToString(new java.io.InputStreamReader(in));} catch (IOException exc) {throw new TemplateException(url.toString(), exc);} finally {try {in.close();} catch (IOException ignore) {}}TemplateParser parser = this.parser;if (null == parser) return (new Template(contents, context)); else return (new Template(parser, contents, context));}public static void copyFile(File srcFile, File destFile) throws IOException {logger.debug(""copyFile(srcFile={}, destFile={}) - start"", srcFile, destFile);FileChannel srcChannel = new FileInputStream(srcFile).getChannel();FileChannel dstChannel = new FileOutputStream(destFile).getChannel();try {dstChannel.transferFrom(srcChannel, 0, srcChannel.size());} finally {srcChannel.close();dstChannel.close();}}public static int executeNoQuery(String strStatement) throws SQLException {MyDBConnection myc = new MyDBConnection();myc.init();Statement statement = myc.getMyConnection().createStatement();try {int rows = statement.executeUpdate(strStatement);myc.myConnection.commit();return rows;} catch (SQLException e) {myc.myConnection.rollback();throw new SQLException(""rollback e close effettuato dopo "" + e.getMessage());} finally {myc.close();}}public static String generateGuid(boolean secure) {MessageDigest md5 = null;String valueBeforeMD5 = null;String valueAfterMD5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {log.error(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0L;if (secure) rand = mySecureRand.nextLong(); else rand = myRand.nextLong();sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte array[] = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; j++) {int b = array[j] & 0xff;if (b < 16) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {log.error(""Error:"" + e);}String raw = valueAfterMD5.toUpperCase();StringBuffer sb = new StringBuffer();sb.append(raw.substring(0, 8));sb.append(""-"");sb.append(raw.substring(8, 12));sb.append(""-"");sb.append(raw.substring(12, 16));sb.append(""-"");sb.append(raw.substring(16, 20));sb.append(""-"");sb.append(raw.substring(20));return sb.toString();}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public void run() {if (software == null) return;Jvm.hashtable(HKEY).put(software, this);try {software.setException(null);software.setDownloaded(false);software.setDownloadStartTime(System.currentTimeMillis());try {software.downloadStarted();} catch (Exception dsx) {}if (software.getDownloadDir() == null) {software.setException(new Exception(""The DownloadDir is null.""));software.setDownloadStartTime(0);software.setDownloaded(false);throw software.getException();}URL url = new URL(software.getURL());URLConnection con = url.openConnection();software.setDownloadLength(con.getContentLength());inputStream = con.getInputStream();File file = new File(software.getDownloadDir(), software.getURLFilename());outputStream = new FileOutputStream(file);int totalBytes = 0;byte[] buffer = new byte[8192];while (!cancelled) {int bytesRead = Jvm.copyPartialStream(inputStream, outputStream, buffer);if (bytesRead == -1) break;totalBytes += bytesRead;try {software.downloadProgress(totalBytes);} catch (Exception dx) {}}if (!cancelled) software.setDownloaded(true);} catch (Exception x) {software.setException(x);software.setDownloadStartTime(0);software.setDownloaded(false);}try {software.downloadComplete();} catch (Exception dcx) {}Jvm.hashtable(HKEY).remove(software);closeStreams();}public static void doVersionCheck(View view) {view.showWaitCursor();try {URL url = new URL(jEdit.getProperty(""version-check.url""));InputStream in = url.openStream();BufferedReader bin = new BufferedReader(new InputStreamReader(in));String line;String develBuild = null;String stableBuild = null;while ((line = bin.readLine()) != null) {if (line.startsWith("".build"")) develBuild = line.substring(6).trim(); else if (line.startsWith("".stablebuild"")) stableBuild = line.substring(12).trim();}bin.close();if (develBuild != null && stableBuild != null) {doVersionCheck(view, stableBuild, develBuild);}} catch (IOException e) {String[] args = { jEdit.getProperty(""version-check.url""), e.toString() };GUIUtilities.error(view, ""read-error"", args);}view.hideWaitCursor();}"	5
"private synchronized void awaitResponse() throws BOSHException {HttpEntity entity = null;try {HttpResponse httpResp = client.execute(post, context);entity = httpResp.getEntity();byte[] data = EntityUtils.toByteArray(entity);String encoding = entity.getContentEncoding() != null ? entity.getContentEncoding().getValue() : null;if (ZLIBCodec.getID().equalsIgnoreCase(encoding)) {data = ZLIBCodec.decode(data);} else if (GZIPCodec.getID().equalsIgnoreCase(encoding)) {data = GZIPCodec.decode(data);}body = StaticBody.fromString(new String(data, CHARSET));statusCode = httpResp.getStatusLine().getStatusCode();sent = true;} catch (IOException iox) {abort();toThrow = new BOSHException(""Could not obtain response"", iox);throw (toThrow);} catch (RuntimeException ex) {abort();throw (ex);}}protected int insertRecord(PutMetadataRequest request, PutMetadataInfo info) throws ImsServiceException, SQLException {Connection con = null;boolean autoCommit = true;PreparedStatement st = null;ResultSet rs = null;int nRows = 0;String sXml = info.getXml();String sUuid = info.getUuid();String sName = info.getName();String sThumbnailBinary = info.getThumbnailBinary();String sTable = this.getResourceTableName();String sDataTable = this.getResourceDataTableName();long id = doesRecordExist(sTable, sUuid);try {ManagedConnection mc = returnConnection();con = mc.getJdbcConnection();autoCommit = con.getAutoCommit();con.setAutoCommit(false);if (id < 0) {StringBuffer sql = new StringBuffer();sql.append(""INSERT INTO "").append(sTable);sql.append("" ("");sql.append(""DOCUUID,"");sql.append(""TITLE,"");sql.append(""OWNER"");sql.append("")"");sql.append("" VALUES(?,?,?)"");logExpression(sql.toString());st = con.prepareStatement(sql.toString());int n = 1;st.setString(n++, sUuid);st.setString(n++, sName);st.setInt(n++, this.publisher.getLocalID());nRows = st.executeUpdate();closeStatement(st);if (nRows > 0) {if (getIsDbCaseSensitive(this.getRequestContext())) {st = con.prepareStatement(""SELECT id FROM "" + sTable + "" WHERE UPPER(docuuid)=?"");} else {st = con.prepareStatement(""SELECT id FROM "" + sTable + "" WHERE docuuid=?"");}st.setString(1, sUuid.toUpperCase());rs = st.executeQuery();rs.next();id = rs.getLong(1);closeStatement(st);request.setActionStatus(ImsRequest.ACTION_STATUS_OK);sql = new StringBuffer();sql.append(""INSERT INTO "").append(sDataTable);sql.append("" (DOCUUID,ID,XML)"");sql.append("" VALUES(?,?,?)"");logExpression(sql.toString());st = con.prepareStatement(sql.toString());st.setString(1, sUuid);st.setLong(2, id);st.setString(3, sXml);st.executeUpdate();}} else {this.authorize(request, sUuid);StringBuffer sql = new StringBuffer();sql.append(""UPDATE "").append(sTable);sql.append("" SET "");if (!request.getLockTitle()) {sql.append(""TITLE=?, "");}sql.append(""OWNER=?, "");sql.append(""UPDATEDATE=?"");sql.append("" WHERE DOCUUID=?"");logExpression(sql.toString());st = con.prepareStatement(sql.toString());int n = 1;if (!request.getLockTitle()) {st.setString(n++, sName);}st.setInt(n++, this.publisher.getLocalID());st.setTimestamp(n++, new Timestamp(System.currentTimeMillis()));st.setString(n++, sUuid);nRows = st.executeUpdate();if (nRows > 0) {request.setActionStatus(ImsRequest.ACTION_STATUS_REPLACED);}closeStatement(st);sql = new StringBuffer();if (doesRecordExist(sDataTable, sUuid) >= 0) {sql.append(""UPDATE "").append(sDataTable);sql.append("" SET DOCUUID=?, XML=?, THUMBNAIL=?"");sql.append("" WHERE ID=?"");} else {sql.append(""INSERT INTO "").append(sDataTable);sql.append("" (DOCUUID, XML,THUMBNAIL,ID)"");sql.append("" VALUES(?,?,?,?)"");}logExpression(sql.toString());st = con.prepareStatement(sql.toString());st.setString(1, sUuid);st.setString(2, sXml);st.setBytes(3, null);st.setLong(4, id);st.executeUpdate();}con.commit();} catch (ImsServiceException ex) {if (con != null) {con.rollback();}throw ex;} catch (SQLException ex) {if (con != null) {con.rollback();}throw ex;} finally {closeResultSet(rs);closeStatement(st);if (con != null) {con.setAutoCommit(autoCommit);}}if ((sThumbnailBinary != null) && (sThumbnailBinary.length() > 0)) {this.updateThumbnail(sThumbnailBinary, sUuid);}return nRows;}public void deployDir(File srcDir, String destDir) {File[] dirFiles = srcDir.listFiles();for (int k = 0; dirFiles != null && k < dirFiles.length; k++) {if (!dirFiles[k].getName().startsWith(""."")) {if (dirFiles[k].isFile()) {File deployFile = new File(destDir + File.separator + dirFiles[k].getName());if (dirFiles[k].lastModified() != deployFile.lastModified() || dirFiles[k].length() != deployFile.length()) {IOUtils.copy(dirFiles[k], deployFile);}} else if (dirFiles[k].isDirectory()) {String newDestDir = destDir + File.separator + dirFiles[k].getName();deployDir(dirFiles[k], newDestDir);}}}}public void guardarRecordatorio() {try {if (espaciosLlenos()) {guardarCantidad();String dat = """";String filenametxt = String.valueOf(""recordatorio"" + cantidadArchivos + "".txt"");String filenamezip = String.valueOf(""recordatorio"" + cantidadArchivos + "".zip"");cantidadArchivos++;dat += identificarDato(datoSeleccionado) + ""\n"";dat += String.valueOf(mesTemporal) + ""\n"";dat += String.valueOf(anoTemporal) + ""\n"";dat += horaT.getText() + ""\n"";dat += lugarT.getText() + ""\n"";dat += actividadT.getText() + ""\n"";File archivo = new File(filenametxt);FileWriter fw = new FileWriter(archivo);BufferedWriter bw = new BufferedWriter(fw);PrintWriter salida = new PrintWriter(bw);salida.print(dat);salida.close();BufferedInputStream origin = null;FileOutputStream dest = new FileOutputStream(filenamezip);ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest));byte data[] = new byte[buffer];File f = new File(filenametxt);FileInputStream fi = new FileInputStream(f);origin = new BufferedInputStream(fi, buffer);ZipEntry entry = new ZipEntry(filenametxt);out.putNextEntry(entry);int count;while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count);out.close();JOptionPane.showMessageDialog(null, ""El recordatorio ha sido guardado con exito"", ""Recordatorio Guardado"", JOptionPane.INFORMATION_MESSAGE);marco.hide();marco.dispose();establecerMarca();table.clearSelection();} else JOptionPane.showMessageDialog(null, ""Debe llenar los espacios de Hora, Lugar y Actividad"", ""Error"", JOptionPane.ERROR_MESSAGE);} catch (Exception e) {JOptionPane.showMessageDialog(null, ""Error en: "" + e.toString(), ""Error"", JOptionPane.ERROR_MESSAGE);}}public void guardarCantidad() {try {String can = String.valueOf(cantidadArchivos);File archivo = new File(""cantidadArchivos.txt"");FileWriter fw = new FileWriter(archivo);BufferedWriter bw = new BufferedWriter(fw);PrintWriter salida = new PrintWriter(bw);salida.print(can);salida.close();BufferedInputStream origin = null;FileOutputStream dest = new FileOutputStream(""cantidadArchivos.zip"");ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest));byte data[] = new byte[buffer];File f = new File(""cantidadArchivos.txt"");FileInputStream fi = new FileInputStream(f);origin = new BufferedInputStream(fi, buffer);ZipEntry entry = new ZipEntry(""cantidadArchivos.txt"");out.putNextEntry(entry);int count;while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count);out.close();} catch (Exception e) {JOptionPane.showMessageDialog(null, ""Error en: "" + e.toString(), ""Error"", JOptionPane.ERROR_MESSAGE);}}public void verRecordatorio() {try {cantidadArchivos = obtenerCantidad() + 1;boolean existe = false;String filenametxt = """";String filenamezip = """";String hora = """";String lugar = """";String actividad = """";String linea = """";int dia = 0;int mes = 0;int ano = 0;for (int i = 1; i < cantidadArchivos; i++) {filenamezip = ""recordatorio"" + i + "".zip"";filenametxt = ""recordatorio"" + i + "".txt"";BufferedOutputStream dest = null;BufferedInputStream is = null;ZipEntry entry;ZipFile zipfile = new ZipFile(filenamezip);Enumeration e = zipfile.entries();while (e.hasMoreElements()) {entry = (ZipEntry) e.nextElement();is = new BufferedInputStream(zipfile.getInputStream(entry));int count;byte data[] = new byte[buffer];FileOutputStream fos = new FileOutputStream(entry.getName());dest = new BufferedOutputStream(fos, buffer);while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count);dest.flush();dest.close();is.close();}DataInputStream input = new DataInputStream(new FileInputStream(filenametxt));dia = Integer.parseInt(input.readLine());mes = Integer.parseInt(input.readLine());ano = Integer.parseInt(input.readLine());if (dia == Integer.parseInt(identificarDato(datoSeleccionado))) {existe = true;hora = input.readLine();lugar = input.readLine();while ((linea = input.readLine()) != null) actividad += linea + ""\n"";verRecordatorioInterfaz(hora, lugar, actividad);hora = """";lugar = """";actividad = """";}input.close();}if (!existe) JOptionPane.showMessageDialog(null, ""No existe un recordatorio guardado\n"" + ""para el "" + identificarDato(datoSeleccionado) + "" de "" + meses[mesTemporal].toLowerCase() + "" del a�o "" + anoTemporal, ""No existe"", JOptionPane.INFORMATION_MESSAGE);table.clearSelection();} catch (Exception e) {JOptionPane.showMessageDialog(null, ""Error en: "" + e.toString(), ""Error"", JOptionPane.ERROR_MESSAGE);}}public int obtenerCantidad() {try {BufferedOutputStream dest = null;BufferedInputStream is = null;ZipEntry entry;ZipFile zipfile = new ZipFile(""cantidadArchivos.zip"");Enumeration e = zipfile.entries();while (e.hasMoreElements()) {entry = (ZipEntry) e.nextElement();is = new BufferedInputStream(zipfile.getInputStream(entry));int count;byte data[] = new byte[buffer];FileOutputStream fos = new FileOutputStream(entry.getName());dest = new BufferedOutputStream(fos, buffer);while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count);dest.flush();dest.close();is.close();}DataInputStream input = new DataInputStream(new FileInputStream(""cantidadArchivos.txt""));int a = Integer.parseInt(input.readLine());input.close();return (a);} catch (Exception e) {return (0);}}public boolean chequearMarca(int a, int m, int d) {boolean existe = false;try {cantidadArchivos = obtenerCantidad() + 1;String filenametxt = """";String filenamezip = """";int dia = 0;int mes = 0;int ano = 0;for (int i = 1; i < cantidadArchivos; i++) {filenamezip = ""recordatorio"" + i + "".zip"";filenametxt = ""recordatorio"" + i + "".txt"";BufferedOutputStream dest = null;BufferedInputStream is = null;ZipEntry entry;ZipFile zipfile = new ZipFile(filenamezip);Enumeration e = zipfile.entries();while (e.hasMoreElements()) {entry = (ZipEntry) e.nextElement();is = new BufferedInputStream(zipfile.getInputStream(entry));int count;byte data[] = new byte[buffer];FileOutputStream fos = new FileOutputStream(entry.getName());dest = new BufferedOutputStream(fos, buffer);while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count);dest.flush();dest.close();is.close();}DataInputStream input = new DataInputStream(new FileInputStream(filenametxt));dia = Integer.parseInt(input.readLine());mes = Integer.parseInt(input.readLine());ano = Integer.parseInt(input.readLine());if (ano == a && mes == m && dia == d) existe = true;input.close();}} catch (Exception e) {JOptionPane.showMessageDialog(null, ""Error en: "" + e.toString(), ""Error"", JOptionPane.ERROR_MESSAGE);}return (existe);}public GetMyDocuments() {String urlString = dms_url + ""/servlet/com.ufnasoft.dms.server.ServerGetMyDocuments"";String rvalue = """";String filename = dms_home + FS + ""temp"" + FS + username + ""mydocuments.xml"";try {String urldata = urlString + ""?username="" + URLEncoder.encode(username, ""UTF-8"") + ""&key="" + URLEncoder.encode(key, ""UTF-8"") + ""&filename="" + URLEncoder.encode(username, ""UTF-8"") + ""mydocuments.xml"";;DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();DocumentBuilder parser = factory.newDocumentBuilder();URL u = new URL(urldata);DataInputStream is = new DataInputStream(u.openStream());FileOutputStream os = new FileOutputStream(filename);int iBufSize = is.available();byte inBuf[] = new byte[20000 * 1024];int iNumRead;while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead);os.close();is.close();File f = new File(filename);InputStream inputstream = new FileInputStream(f);Document document = parser.parse(inputstream);NodeList nodelist = document.getElementsByTagName(""document"");int num = nodelist.getLength();myDocsData = new String[num][4];myDocsToolTip = new String[num];myDocumentImageName = new String[num];myDocIds = new int[num];for (int i = 0; i < num; i++) {myDocsData[i][0] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""filename""));myDocsData[i][1] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""project""));myDocsData[i][2] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""deadline""));myDocsData[i][3] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""workingfolder""));myDocsToolTip[i] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""title""));myDocumentImageName[i] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""imagename""));myDocIds[i] = (new Integer(new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""documentid"")))).intValue();}} catch (MalformedURLException ex) {System.out.println(ex);} catch (ParserConfigurationException ex) {System.out.println(ex);} catch (NullPointerException ex) {} catch (Exception ex) {System.out.println(ex);}}public static boolean downloadRegPage() {String filename = ""register.php?csz="" + checkEmptyString(jDtr) + ""&&mac="" + MAC + ""&&uname="" + checkEmptyString(InstallName) + ""&&cname="" + checkEmptyString(InstallCompany) + ""&&winuname="" + checkEmptyString(WinName) + ""&&wincname="" + checkEmptyString(WinCompany) + ""&&age="" + checkEmptyString(jAge) + ""&&sal="" + checkEmptyString(jSal) + ""&&sta="" + checkEmptyString(jSta) + ""&&sex="" + checkEmptyString(jSex) + ""&&con="" + checkEmptyString(jCon) + ""&&occ="" + checkEmptyString(jOcc) + ""&&int="" + checkEmptyString(jInt) + ""&&ver="" + checkEmptyString(jVer) + ""&&mor="" + checkEmptyString(jTyp);URL url1 = null;try {url1 = new URL(url + filename);} catch (MalformedURLException e1) {}int status = 0;try {status = ((HttpURLConnection) url1.openConnection()).getResponseCode();} catch (IOException e1) {System.out.println(e1);}if (status == 200) {return true;} else {return false;}}"	5
"@Overridepublic void execute() throws BuildException {if (this.toFile == null && this.toDir == null) throw new BuildException(""Missing Destination File/Dir"");if (this.toFile != null && this.toDir != null) throw new BuildException(""Both Defined Destination File/Dir"");if (this.urlStr == null) throw new BuildException(""Missing URL"");URL base = null;try {if (baseStr != null) base = new URL(this.baseStr + (baseStr.endsWith(""/"") ? """" : ""/""));} catch (MalformedURLException e) {throw new BuildException(e);}String tokens[] = this.urlStr.split(""[ \t\n]+"");try {for (String nextURL : tokens) {nextURL = nextURL.trim();if (nextURL.length() == 0) continue;URL url = null;try {url = new URL(base, nextURL);} catch (MalformedURLException e) {throw new BuildException(e);}File dest = null;if (this.toDir != null) {String file = url.getFile();int i = file.lastIndexOf('/');if (i != -1 && i + 1 != file.length()) file = file.substring(i + 1);dest = new File(this.toDir, file);} else {dest = this.toFile;}if (dest.exists()) continue;byte buff[] = new byte[2048];FileOutputStream out = new FileOutputStream(dest);InputStream in = url.openStream();int n = 0;while ((n = in.read(buff)) != -1) {out.write(buff, 0, n);}in.close();out.flush();out.close();System.out.println(""Downloaded "" + url + "" to "" + dest);}} catch (IOException e) {throw new BuildException(e);}}public static byte[] resolveRef(String url) throws MalformedURLException, IOException {ByteArrayOutputStream out = new ByteArrayOutputStream();URL addressurl = new URL(url);InputStream in = addressurl.openStream();BufferedReader bin = new BufferedReader(new InputStreamReader(in));int bufferSize = 4096;byte[] buffer = new byte[bufferSize];int bytesRead;while ((bytesRead = in.read(buffer, 0, bufferSize)) != -1) {out.write(buffer, 0, bytesRead);out.flush();}return out.toByteArray();}private String encryptPassword(String password) throws NoSuchAlgorithmException {MessageDigest encript = MessageDigest.getInstance(""MD5"");encript.update(password.getBytes());byte[] b = encript.digest();int size = b.length;StringBuffer h = new StringBuffer(size);for (int i = 0; i < size; i++) {h.append(b[i]);}return h.toString();}public static void doVersionCheck(View view) {view.showWaitCursor();try {URL url = new URL(jEdit.getProperty(""version-check.url""));InputStream in = url.openStream();BufferedReader bin = new BufferedReader(new InputStreamReader(in));String line;String develBuild = null;String stableBuild = null;while ((line = bin.readLine()) != null) {if (line.startsWith("".build"")) develBuild = line.substring(6).trim(); else if (line.startsWith("".stablebuild"")) stableBuild = line.substring(12).trim();}bin.close();if (develBuild != null && stableBuild != null) {doVersionCheck(view, stableBuild, develBuild);}} catch (IOException e) {String[] args = { jEdit.getProperty(""version-check.url""), e.toString() };GUIUtilities.error(view, ""read-error"", args);}view.hideWaitCursor();}public void run() {try {ThreadGroup transfers = new ThreadGroup(""transfers"");URL url = new URL(""jar:http://jopenrpg.sourceforge.net/files/dev/pythonlib.jar!/"");JarURLConnection juc = (JarURLConnection) url.openConnection();File top = new File(System.getProperty(""user.home""), ""jopenrpg"");final JarFile jarfile = juc.getJarFile();Enumeration enumer = jarfile.entries();while (enumer.hasMoreElements()) {final JarEntry entry = (JarEntry) enumer.nextElement();final File f = new File(top, entry.getName());if (entry.isDirectory()) {f.mkdirs();} else {if (!entry.getName().startsWith(""META-INF"")) new Thread(transfers, new Runnable() {public void run() {try {BufferedReader br = new BufferedReader(new InputStreamReader(jarfile.getInputStream(entry)));BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(f)));StringBuffer buf = new StringBuffer();while (br.ready()) {buf.append(br.read());}bw.write(buf.toString(), 0, buf.length());bw.close();br.close();} catch (Exception ex) {System.out.println(ex);}}}).start();}}while (transfers.activeCount() > 0) yield();SwingUtilities.invokeLater(new Runnable() {public void run() {JOptionPane.showMessageDialog(ReferenceManager.getInstance().getMainFrame(), ""Jython libraries installed."");}});} catch (Exception ex) {ex.printStackTrace();}}public static void copyFile(File src, File dst) throws IOException {InputStream in = new FileInputStream(src);OutputStream out = new FileOutputStream(dst);byte[] buf = new byte[1024];int len;while ((len = in.read(buf)) > 0) out.write(buf, 0, len);in.close();out.close();}public void run() {try {URL url = new URL(""http://mydiversite.appspot.com/version.html"");BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = reader.readLine()) != null) {System.out.println(line);}reader.close();} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}}public int extractDocumentsInternal(DocumentHolder holder, DocumentFactory docFactory) {FTPClient client = new FTPClient();try {client.connect(site, port == 0 ? 21 : port);client.login(user, password);visitDirectory(client, """", path, holder, docFactory);client.disconnect();} catch (SocketException e) {e.printStackTrace();} catch (IOException e) {}return fileCount;}public synchronized void downloadTile(TileNumber tn) {try {Bitmap tile = getMapFromSdCache(tn);if (tile == null) {URL url = new URL(""http://tile.openstreetmap.org/"" + tn.getZoom() + ""/"" + tn.getX() + ""/"" + tn.getY() + "".png"");tile = BitmapFactory.decodeStream(url.openStream());File sdCardPath = Environment.getExternalStorageDirectory();Log.d(ctx.getResources().getString(open.gps.gopens.R.string.TEST), ""Path to SD :: "" + sdCardPath.getAbsolutePath());File dir = new File(sdCardPath + ctx.getResources().getString(open.gps.gopens.R.string.CACHE_PATH) + tn.getZoom() + ""/"" + tn.getX() + ""/"");dir.mkdirs();File imgFile = new File(dir.getAbsolutePath() + ""/"" + tn.getY() + "".png"");imgFile.createNewFile();FileOutputStream fOut = new FileOutputStream(imgFile);tile.compress(Bitmap.CompressFormat.PNG, 100, fOut);}cacheManager.put(tn.toString(), tile);setChanged();notifyObservers();Log.d(""OBS"", ""OBS : Notify"");} catch (MalformedURLException e) {Log.e(""Error"", e.getMessage());} catch (IOException e) {Log.e(""Error"", e.getMessage());}}public void runTask(HashMap pjobParms) throws Exception {FTPClient lftpClient = null;FileInputStream lfisSourceFile = null;JBJFPluginDefinition lpluginCipher = null;IJBJFPluginCipher theCipher = null;try {JBJFFTPDefinition lxmlFTP = null;if (getFTPDefinition() != null) {lxmlFTP = getFTPDefinition();this.mstrSourceDirectory = lxmlFTP.getSourceDirectory();this.mstrTargetDirectory = lxmlFTP.getTargetDirectory();this.mstrFilename = lxmlFTP.getFilename();this.mstrRemoteServer = lxmlFTP.getServer();if (getResources().containsKey(""plugin-cipher"")) {lpluginCipher = (JBJFPluginDefinition) getResources().get(""plugin-cipher"");}if (lpluginCipher != null) {theCipher = getTaskPlugins().getCipherPlugin(lpluginCipher.getPluginId());}if (theCipher != null) {this.mstrServerUsr = theCipher.decryptString(lxmlFTP.getUser());this.mstrServerPwd = theCipher.decryptString(lxmlFTP.getPass());} else {this.mstrServerUsr = lxmlFTP.getUser();this.mstrServerPwd = lxmlFTP.getPass();}} else {throw new Exception(""Work unit [ "" + SHORT_NAME + "" ] is missing an FTP Definition.  Please check"" + "" your JBJF Batch Definition file an make sure"" + "" this work unit has a <resource> element added"" + "" within the <task> element."");}lfisSourceFile = new FileInputStream(mstrSourceDirectory + File.separator + mstrFilename);lftpClient = new FTPClient();lftpClient.connect(mstrRemoteServer);lftpClient.setFileType(lxmlFTP.getFileTransferType());if (!FTPReply.isPositiveCompletion(lftpClient.getReplyCode())) {throw new Exception(""FTP server [ "" + mstrRemoteServer + "" ] refused connection."");}if (!lftpClient.login(mstrServerUsr, mstrServerPwd)) {throw new Exception(""Unable to login to server [ "" + mstrTargetDirectory + "" ]."");}if (!lftpClient.changeWorkingDirectory(mstrTargetDirectory)) {throw new Exception(""Unable to change to remote directory [ "" + mstrTargetDirectory + ""]"");}lftpClient.enterLocalPassiveMode();if (!lftpClient.storeFile(mstrFilename, lfisSourceFile)) {throw new Exception(""Unable to upload [ "" + mstrSourceDirectory + ""/"" + mstrFilename + "" ]"" + "" to "" + mstrTargetDirectory + File.separator + mstrFilename + "" to "" + mstrRemoteServer);}lfisSourceFile.close();lftpClient.logout();} catch (Exception e) {throw e;} finally {if (lftpClient != null && lftpClient.isConnected()) {try {lftpClient.disconnect();} catch (IOException ioe) {}}if (lfisSourceFile != null) {try {lfisSourceFile.close();} catch (Exception e) {}}}}"	5
"private static Long statusSWGCraftTime() {long current = System.currentTimeMillis() / 1000L;if (current < (previousStatusCheck + SWGCraft.STATUS_CHECK_DELAY)) return previousStatusTime;URL url = null;try {synchronized (previousStatusTime) {if (current >= previousStatusCheck + SWGCraft.STATUS_CHECK_DELAY) {url = SWGCraft.getStatusTextURL();String statusTime = ZReader.read(url.openStream());previousStatusTime = Long.valueOf(statusTime);previousStatusCheck = current;}return previousStatusTime;}} catch (UnknownHostException e) {SWGCraft.showUnknownHostDialog(url, e);} catch (Throwable e) {SWGAide.printDebug(""cmgr"", 1, ""SWGResourceManager:statusSWGCraftTime:"", e.toString());}return Long.valueOf(0);}public static String compressFile(String fileName) throws IOException {String newFileName = fileName + "".gz"";FileInputStream fis = new FileInputStream(fileName);FileOutputStream fos = new FileOutputStream(newFileName);GZIPOutputStream gzos = new GZIPOutputStream(fos);byte[] buf = new byte[10000];int bytesRead;while ((bytesRead = fis.read(buf)) > 0) gzos.write(buf, 0, bytesRead);fis.close();gzos.close();return newFileName;}public static void compressWithZip(Vector fileList, String zipFileName) throws IOException {if (fileList == null || fileList.size() == 0) return;FileOutputStream fos = new FileOutputStream(zipFileName);ZipOutputStream zos = new ZipOutputStream(fos);Iterator iter = fileList.iterator();while (iter.hasNext()) {String fileName = (String) iter.next();int ind = Math.max(fileName.lastIndexOf('/'), fileName.lastIndexOf('\\'));String shortName = ""unknown"";if (ind < fileName.length() - 1) shortName = fileName.substring(ind + 1);zos.putNextEntry(new ZipEntry(shortName));FileInputStream fis = new FileInputStream(fileName);byte[] buf = new byte[10000];int bytesRead;while ((bytesRead = fis.read(buf)) > 0) zos.write(buf, 0, bytesRead);fis.close();zos.closeEntry();}zos.close();}public static String sha1(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(text.getBytes(""iso-8859-1""), 0, text.length());sha1hash = md.digest();return convertToHex(sha1hash);}private void saveStateAsLast(URL url) {InputStream sourceStream = null;OutputStream destinationStream = null;File lastBundlesTxt = getLastBundleInfo();try {try {destinationStream = new FileOutputStream(lastBundlesTxt);sourceStream = url.openStream();SimpleConfiguratorUtils.transferStreams(sourceStream, destinationStream);} finally {if (destinationStream != null) destinationStream.close();if (sourceStream != null) sourceStream.close();}} catch (IOException e) {}}public static String stringToHash(String text) {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA-1"");md.update(text.getBytes(""iso-8859-1""), 0, text.length());} catch (NoSuchAlgorithmException e) {throw new IllegalStateException(""Should not happened: SHA-1 algorithm is missing."");} catch (UnsupportedEncodingException e) {throw new IllegalStateException(""Should not happened: Could not encode text bytes '"" + text + ""' to iso-8859-1."");}return new String(Base64.encodeBase64(md.digest()));}public boolean consolidateCrossrefGet(BiblioItem bib, ArrayList<BiblioItem> bib2) throws Exception {boolean result = false;String doi = bib.getDOI();String aut = bib.getFirstAuthorSurname();String title = bib.getTitle();String firstPage = null;String pageRange = bib.getPageRange();int beginPage = bib.getBeginPage();if (beginPage != -1) {firstPage = """" + beginPage;} else if (pageRange != null) {StringTokenizer st = new StringTokenizer(pageRange, ""--"");if (st.countTokens() == 2) {firstPage = st.nextToken();} else if (st.countTokens() == 1) firstPage = pageRange;}if (aut != null) {aut = TextUtilities.removeAccents(aut);}if (title != null) {title = TextUtilities.removeAccents(title);}if (doi != null) {if (doi.startsWith(""doi:"") | doi.startsWith(""DOI:"")) {doi.substring(4, doi.length());doi = doi.trim();}doi = doi.replace("" "", """");String xml = null;if (cCon != null) {PreparedStatement pstmt = null;try {pstmt = cCon.prepareStatement(QUERY_CROSSREF_SQL3);pstmt.setString(1, doi);ResultSet res = pstmt.executeQuery();if (res.next()) {xml = res.getString(1);}res.close();pstmt.close();} catch (SQLException se) {System.err.println(""EXCEPTION HANDLING CROSSREF CACHE"");throw new GROBIDServiceException(""EXCEPTION HANDLING CROSSREF CACHE."", se);} finally {try {if (pstmt != null) pstmt.close();} catch (SQLException se) {}}if (xml != null) {InputSource is = new InputSource();is.setCharacterStream(new StringReader(xml));DefaultHandler crossref = new crossrefUnixrefSaxParser(bib2);SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser parser = spf.newSAXParser();parser.parse(is, crossref);if (bib2.size() > 0) {if (!bib2.get(0).getError()) result = true;}}}if (xml == null) {String subpath = String.format(DOI_BASE_QUERY, crossref_id, crossref_pw, doi);URL url = new URL(""http://"" + crossref_host + ""/"" + subpath);System.out.println(""Sending: "" + url.toString());HttpURLConnection urlConn = null;try {urlConn = (HttpURLConnection) url.openConnection();} catch (Exception e) {this.setProxy();try {urlConn = (HttpURLConnection) url.openConnection();} catch (Exception e2) {urlConn = null;throw new GROBIDServiceException(""An exception occured while running Grobid."", e2);}}if (urlConn != null) {try {urlConn.setDoOutput(true);urlConn.setDoInput(true);urlConn.setRequestMethod(""GET"");urlConn.setRequestProperty(""Content-Type"", ""application/x-www-form-urlencoded"");InputStream in = urlConn.getInputStream();xml = TextUtilities.convertStreamToString(in);InputSource is = new InputSource();is.setCharacterStream(new StringReader(xml));DefaultHandler crossref = new crossrefUnixrefSaxParser(bib2);SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser parser = spf.newSAXParser();parser.parse(is, crossref);if (bib2.size() > 0) {if (!bib2.get(0).getError()) result = true;}urlConn.disconnect();} catch (Exception e) {System.err.println(""Warning: Consolidation set true, "" + ""but the online connection to Crossref fails."");}if (cCon != null) {PreparedStatement pstmt2 = null;try {pstmt2 = cCon.prepareStatement(INSERT_CROSSREF_SQL3);pstmt2.setString(1, doi);pstmt2.setString(2, xml);pstmt2.executeUpdate();pstmt2.close();} catch (SQLException se) {System.err.println(""EXCEPTION HANDLING CROSSREF UPDATE"");} finally {try {if (pstmt2 != null) pstmt2.close();} catch (SQLException se) {}}}}}} else if ((title != null) & (aut != null)) {String xml = null;if (cCon != null) {PreparedStatement pstmt = null;try {pstmt = cCon.prepareStatement(QUERY_CROSSREF_SQL);pstmt.setString(1, aut);pstmt.setString(2, title);ResultSet res = pstmt.executeQuery();if (res.next()) {xml = res.getString(1);}res.close();pstmt.close();} catch (SQLException se) {throw new GROBIDServiceException(""EXCEPTION HANDLING CROSSREF CACHE"", se);} finally {try {if (pstmt != null) pstmt.close();} catch (SQLException se) {}}if (xml != null) {InputSource is = new InputSource();is.setCharacterStream(new StringReader(xml));DefaultHandler crossref = new crossrefUnixrefSaxParser(bib2);SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser parser = spf.newSAXParser();parser.parse(is, crossref);if (bib2.size() > 0) {if (!bib2.get(0).getError()) result = true;}}}if (xml == null) {String subpath = String.format(TITLE_BASE_QUERY, crossref_id, crossref_pw, URLEncoder.encode(title), URLEncoder.encode(aut));URL url = new URL(""http://"" + crossref_host + ""/"" + subpath);System.out.println(""Sending: "" + url.toString());HttpURLConnection urlConn = null;try {urlConn = (HttpURLConnection) url.openConnection();} catch (Exception e) {this.setProxy();try {urlConn = (HttpURLConnection) url.openConnection();} catch (Exception e2) {urlConn = null;throw new GROBIDServiceException(""An exception occured while running Grobid."", e2);}}if (urlConn != null) {try {urlConn.setDoOutput(true);urlConn.setDoInput(true);urlConn.setRequestMethod(""GET"");urlConn.setRequestProperty(""Content-Type"", ""application/x-www-form-urlencoded"");InputStream in = urlConn.getInputStream();xml = TextUtilities.convertStreamToString(in);InputSource is = new InputSource();is.setCharacterStream(new StringReader(xml));DefaultHandler crossref = new crossrefUnixrefSaxParser(bib2);SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser parser = spf.newSAXParser();parser.parse(is, crossref);if (bib2.size() > 0) {if (!bib2.get(0).getError()) result = true;}urlConn.disconnect();} catch (Exception e) {System.err.println(""Warning: Consolidation set true, "" + ""but the online connection to Crossref fails."");}if (cCon != null) {PreparedStatement pstmt2 = null;try {pstmt2 = cCon.prepareStatement(INSERT_CROSSREF_SQL);pstmt2.setString(1, aut);pstmt2.setString(2, bib.getTitle());pstmt2.setString(3, xml);pstmt2.executeUpdate();pstmt2.close();} catch (SQLException se) {System.err.println(""EXCEPTION HANDLING CROSSREF UPDATE"");} finally {try {if (pstmt2 != null) pstmt2.close();} catch (SQLException se) {}}}}}} else if ((firstPage != null) & (bib.getJournal() != null) & (bib.getVolume() != null)) {String subpath = String.format(JOURNAL_BASE_QUERY, crossref_id, crossref_pw, URLEncoder.encode(bib.getJournal()), URLEncoder.encode(bib.getVolume()), firstPage);URL url = new URL(""http://"" + crossref_host + ""/"" + subpath);String urlmsg = url.toString();System.out.println(urlmsg);String xml = null;if (cCon != null) {PreparedStatement pstmt = null;try {pstmt = cCon.prepareStatement(QUERY_CROSSREF_SQL2);pstmt.setString(1, urlmsg);ResultSet res = pstmt.executeQuery();if (res.next()) {xml = res.getString(1);}res.close();pstmt.close();} catch (SQLException se) {System.err.println(""EXCEPTION HANDLING CROSSREF CACHE"");throw new GROBIDServiceException(""EXCEPTION HANDLING CROSSREF CACHE."", se);} finally {try {if (pstmt != null) pstmt.close();} catch (SQLException se) {}}if (xml != null) {InputSource is = new InputSource();is.setCharacterStream(new StringReader(xml));DefaultHandler crossref = new crossrefUnixrefSaxParser(bib2);SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser parser = spf.newSAXParser();parser.parse(is, crossref);if (bib2.size() > 0) {if (!bib2.get(0).getError()) result = true;}}}if (xml == null) {System.out.println(""Sending: "" + urlmsg);HttpURLConnection urlConn = null;try {urlConn = (HttpURLConnection) url.openConnection();} catch (Exception e) {this.setProxy();try {urlConn = (HttpURLConnection) url.openConnection();} catch (Exception e2) {urlConn = null;throw new GROBIDServiceException(""An exception occured while running Grobid."", e2);}}if (urlConn != null) {try {urlConn.setDoOutput(true);urlConn.setDoInput(true);urlConn.setRequestMethod(""GET"");urlConn.setRequestProperty(""Content-Type"", ""application/x-www-form-urlencoded"");InputStream in = urlConn.getInputStream();xml = TextUtilities.convertStreamToString(in);InputSource is = new InputSource();is.setCharacterStream(new StringReader(xml));DefaultHandler crossref = new crossrefUnixrefSaxParser(bib2);SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser p = spf.newSAXParser();p.parse(is, crossref);if (bib2.size() > 0) {if (!bib2.get(0).getError()) result = true;}in.close();urlConn.disconnect();} catch (Exception e) {System.err.println(""Warning: Consolidation set true, "" + ""but the online connection to Crossref fails."");}if (cCon != null) {PreparedStatement pstmt2 = null;try {pstmt2 = cCon.prepareStatement(INSERT_CROSSREF_SQL2);pstmt2.setString(1, urlmsg);pstmt2.setString(2, xml);pstmt2.executeUpdate();pstmt2.close();} catch (SQLException se) {System.err.println(""EXCEPTION HANDLING CROSSREF UPDATE"");} finally {try {if (pstmt2 != null) pstmt2.close();} catch (SQLException se) {}}}}}}return result;}private String encryptPassword(String password) throws NoSuchAlgorithmException {StringBuffer encryptedPassword = new StringBuffer();MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.reset();md5.update(password.getBytes());byte digest[] = md5.digest();for (int i = 0; i < digest.length; i++) {String hex = Integer.toHexString(0xFF & digest[i]);if (hex.length() == 1) {encryptedPassword.append('0');}encryptedPassword.append(hex);}return encryptedPassword.toString();}public FTPUtil(final String server) {log.debug(""~ftp.FTPUtil() : Creating object"");ftpClient = new FTPClient();try {ftpClient.connect(server);ftpClient.login(""anonymous"", """");ftpClient.setConnectTimeout(120000);ftpClient.setSoTimeout(120000);final int reply = ftpClient.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {final String errMsg = ""Non-positive completion connecting FTPClient"";log.warn(""~ftp.FTPUtil() : ["" + errMsg + ""]"");}} catch (IOException ioe) {final String errMsg = ""Cannot connect and login to ftpClient ["" + ioe.getMessage() + ""]"";log.warn(""~ftp.FTPUtil() : ["" + errMsg + ""]"");ioe.printStackTrace();}}protected Set<String> moduleNamesFromReader(URL url) throws IOException {BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));Set<String> names = new HashSet<String>();String line;while ((line = reader.readLine()) != null) {line = line.trim();Matcher m = nonCommentPattern.matcher(line);if (m.find()) {names.add(m.group().trim());}}return names;}"	5
"private static String lastModified(URL url) {try {URLConnection conn = url.openConnection();return long2date(conn.getLastModified());} catch (Exception e) {SWGAide.printDebug(""cach"", 1, ""SWGCraftCache:lastModified: "" + e.getMessage());}return ""0"";}public static void fileUpload() throws IOException {HttpClient httpclient = new DefaultHttpClient();httpclient.getParams().setParameter(CoreProtocolPNames.PROTOCOL_VERSION, HttpVersion.HTTP_1_1);file = new File(""H:\\FileServeUploader.java"");HttpPost httppost = new HttpPost(postURL);httppost.setHeader(""Cookie"", langcookie + "";"" + sessioncookie + "";"" + mailcookie + "";"" + namecookie + "";"" + rolecookie + "";"" + orderbycookie + "";"" + directioncookie + "";"");MultipartEntity mpEntity = new MultipartEntity();ContentBody cbFile = new FileBody(file);mpEntity.addPart(""files[]"", cbFile);httppost.setEntity(mpEntity);System.out.println(""Now uploading your file into wupload..........................."");HttpResponse response = httpclient.execute(httppost);HttpEntity resEntity = response.getEntity();System.out.println(response.getStatusLine());}public static void loginWuploader() throws IOException {HttpParams params = new BasicHttpParams();params.setParameter(""http.useragent"", ""Mozilla/5.0 (Windows; U; Windows NT 6.1; en-GB; rv:1.9.2) Gecko/20100115 Firefox/3.6"");DefaultHttpClient httpclient = new DefaultHttpClient(params);System.out.println(""Trying to log in to Wupload"");HttpPost httppost = new HttpPost(""http://www.wupload.in/account/login"");httppost.setHeader(""Referer"", ""http://www.wupload.in/"");httppost.setHeader(""Accept"", ""application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"");List<NameValuePair> formparams = new ArrayList<NameValuePair>();formparams.add(new BasicNameValuePair(""email"", uname));formparams.add(new BasicNameValuePair(""password"", pwd));formparams.add(new BasicNameValuePair(""redirect"", ""/""));UrlEncodedFormEntity entity = new UrlEncodedFormEntity(formparams, ""UTF-8"");httppost.setEntity(entity);HttpResponse httpresponse = httpclient.execute(httppost);System.out.println(""Getting cookies........"");Iterator<Cookie> it = httpclient.getCookieStore().getCookies().iterator();Cookie escookie = null;while (it.hasNext()) {escookie = it.next();if (escookie.getName().equalsIgnoreCase(""PHPSESSID"")) {sessioncookie = ""PHPSESSID="" + escookie.getValue();System.out.println(sessioncookie);}if (escookie.getName().equalsIgnoreCase(""email"")) {mailcookie = ""email="" + escookie.getValue();login = true;System.out.println(mailcookie);}if (escookie.getName().equalsIgnoreCase(""nickname"")) {namecookie = ""nickname="" + escookie.getValue();System.out.println(namecookie);}if (escookie.getName().equalsIgnoreCase(""isAffiliate"")) {affiliatecookie = ""isAffiliate="" + escookie.getValue();System.out.println(affiliatecookie);}if (escookie.getName().equalsIgnoreCase(""role"")) {rolecookie = ""role="" + escookie.getValue();System.out.println(rolecookie);}}if (login) {System.out.println(""Login Success"");getFolderCookies();} else {System.out.println(""Login failed"");}}public static String md5(final String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md = MessageDigest.getInstance(""MD5"");byte[] md5hash = new byte[FOUR_BYTES];md.update(text.getBytes(""iso-8859-1""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);}public void reademi(Vector<String> descriptions, Vector<String> links, String linkaddress, String idmap) {InputStream is = null;URL url;ArrayList<String> keys = new ArrayList<String>();ArrayList<String> names = new ArrayList<String>();try {url = new URL(idmap);is = url.openStream();Scanner scanner = new Scanner(is);scanner.nextLine();String line = """";String id = """";while (scanner.hasNextLine()) {line = scanner.nextLine();Scanner linescanner = new Scanner(line);linescanner.useDelimiter(""\t"");id = linescanner.next();id = id.substring(0, id.length() - 2);keys.add(id);linescanner.next();linescanner.next();linescanner.next();linescanner.useDelimiter(""\n"");names.add(linescanner.next());}BufferedReader reader = new BufferedReader(new InputStreamReader(new URL(linkaddress).openStream()));String link = """";String key = """";String name = """";int counter = 0;while ((line = reader.readLine()) != null) {if (line.indexOf(""style=raw"") != -1) {int linkstart = line.indexOf(""http://www.ebi.ac.uk/cgi-bin/dbfetch?db"");int idstart = line.indexOf(""id="") + 3;int linkend = line.substring(linkstart).indexOf(""\"""") + linkstart;link = line.substring(linkstart, linkend);key = line.substring(idstart, linkend);if (keys.indexOf(key) != -1) {name = names.get(keys.indexOf(key));counter++;descriptions.add(counter + "" "" + key + "" "" + name);links.add(link);}}}} catch (MalformedURLException e) {} catch (Exception e) {e.printStackTrace();}}public void readUNI(Vector<String> descriptions, String source) {InputStream is = null;try {URL url = new URL(source);is = url.openStream();Scanner scanner = new Scanner(is);scanner.nextLine();String line = """";String id = """";String desc = """";while (scanner.hasNextLine()) {line = scanner.nextLine();Scanner linescanner = new Scanner(line);linescanner.useDelimiter(""\t"");id = linescanner.next();linescanner.next();desc = linescanner.next();linescanner.useDelimiter(""\n"");linescanner.next();descriptions.add(id + "" "" + desc);}} catch (MalformedURLException e) {} catch (Exception e) {e.printStackTrace();} finally {if (is != null) try {is.close();} catch (IOException e) {}}}public void process(Group group, List resourcesName, List excludeResources, ServletContext servletContext, Writer out, String location) throws IOException {LOG.debug(""Merging content of group : "" + group.getName());for (Iterator iterator = group.getSubgroups().iterator(); iterator.hasNext(); ) {Group subGroup = (Group) iterator.next();String subLocation = subGroup.getBestLocation(location);ResourcesProcessor subGroupProcessor = null;if (subGroup.isMinimize() == null) subGroupProcessor = this; else subGroupProcessor = subGroup.getJSProcessor();subGroupProcessor.process(subGroup, subGroup.getJsNames(), excludeResources, servletContext, out, subLocation);}for (Iterator it = resourcesName.iterator(); it.hasNext(); ) {URL url = null;String path = (String) it.next();if (!excludeResources.contains(path)) {url = URLUtils.getLocalURL(path, servletContext);if (url == null) {String webPath = URLUtils.concatUrlWithSlaches(group.getBestLocation(location), path);url = URLUtils.getWebUrlResource(webPath);}if (url == null) {throw new IOException(""The resources '"" + path + ""' could not be found neither in the webapp folder nor in a jar"");}InputStream in = null;try {in = url.openStream();IOUtils.copy(in, out, URLUtils.DEFAULT_ENCODING);out.write(""\n\n"");} catch (Exception e) {LOG.error(""Merge failed for file "" + path, e);} finally {if (in != null) in.close();}excludeResources.add(path);}}}public Set<String> getAvailableRoles() {if (availableRoles == null) {availableRoles = new HashSet<String>();try {Enumeration<URL> resources = org.springframework.util.ClassUtils.getDefaultClassLoader().getResources(ROLE_FILE_LOCATION);while (resources.hasMoreElements()) {URL url = resources.nextElement();InputStream is = null;try {URLConnection con = url.openConnection();con.setUseCaches(false);is = con.getInputStream();List<String> lines = IOUtils.readLines(is, ""ISO-8859-1"");if (lines != null) {for (String line : lines) {availableRoles.add(line.trim());}}} finally {if (is != null) {is.close();}}}} catch (IOException e) {throw new RuntimeException(e);}}return availableRoles;}public static void copyFile(File in, File out) throws ObclipseException {try {FileChannel inChannel = null;FileChannel outChannel = null;try {inChannel = new FileInputStream(in).getChannel();outChannel = new FileOutputStream(out).getChannel();inChannel.transferTo(0, inChannel.size(), outChannel);} finally {if (inChannel != null) {inChannel.close();}if (outChannel != null) {outChannel.close();}}} catch (FileNotFoundException e) {Msg.error(""The file ''{0}'' to copy does not exist!"", e, in.getAbsolutePath());} catch (IOException e) {Msg.ioException(in, out, e);}}public static String convertToSha1(final String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(text.getBytes(""iso-8859-1""), 0, text.length());sha1hash = md.digest();return convertToHex(sha1hash);}"	5
"public static void copyFile(File src, File dst) throws IOException {InputStream in = new FileInputStream(src);OutputStream out = new FileOutputStream(dst);byte[] buf = new byte[1024];int len;while ((len = in.read(buf)) > 0) out.write(buf, 0, len);in.close();out.close();}public void bubble() {boolean test = false;int kars = 0, tas = 0;while (true) {for (int j = 0; j < dizi.length - 1; j++) {kars++;if (dizi[j] > dizi[j + 1]) {int temp = dizi[j];dizi[j] = dizi[j + 1];dizi[j + 1] = temp;test = true;tas++;}}if (!test) {break;} else {test = false;}}System.out.print(kars + "" "" + tas);}private void downloadTo(URL url, File out) throws IOException {URLConnection conn = url.openConnection();BufferedInputStream is = new BufferedInputStream(conn.getInputStream());BufferedOutputStream os = new BufferedOutputStream(new FileOutputStream(out));final int BLOCK_SIZE = 1024;byte[] buf = new byte[BLOCK_SIZE];int size;while ((size = is.read(buf, 0, BLOCK_SIZE)) > 0) os.write(buf, 0, size);is.close();os.close();}public static String getTextFromUrl(final String url) {InputStreamReader inputStreamReader = null;BufferedReader bufferedReader = null;try {final StringBuilder result = new StringBuilder();inputStreamReader = new InputStreamReader(new URL(url).openStream());bufferedReader = new BufferedReader(inputStreamReader);String line;while ((line = bufferedReader.readLine()) != null) {result.append(HtmlUtil.quoteHtml(line)).append(""\r"");}return result.toString();} catch (final IOException exception) {return exception.getMessage();} finally {InputOutputUtil.close(bufferedReader);InputOutputUtil.close(inputStreamReader);}}public File extractID3v2TagDataIntoFile(File outputFile) throws TagNotFoundException, IOException {int startByte = (int) ((MP3AudioHeader) audioHeader).getMp3StartByte();if (startByte >= 0) {FileInputStream fis = new FileInputStream(file);FileChannel fc = fis.getChannel();ByteBuffer bb = ByteBuffer.allocate(startByte);fc.read(bb);FileOutputStream out = new FileOutputStream(outputFile);out.write(bb.array());out.close();fc.close();fis.close();return outputFile;}throw new TagNotFoundException(""There is no ID3v2Tag data in this file"");}public static EXISchema getEXISchema(String fileName, Class<?> cls, EXISchemaFactoryErrorHandler compilerErrorHandler) throws IOException, ClassNotFoundException, EXISchemaFactoryException {EXISchemaFactory schemaCompiler = new EXISchemaFactory();schemaCompiler.setCompilerErrorHandler(compilerErrorHandler);InputSource inputSource = null;if (fileName != null) {URL url;if ((url = cls.getResource(fileName)) != null) {inputSource = new InputSource(url.openStream());inputSource.setSystemId(url.toString());} else throw new RuntimeException(""File '"" + fileName + ""' not found."");}EXISchema compiled = schemaCompiler.compile(inputSource);InputStream serialized = serializeSchema(compiled);return loadSchema(serialized);}public static String checkPublicIP() {String ipAddress = null;try {URL url;url = new URL(""http://checkip.dyndns.org/"");InputStreamReader in = new InputStreamReader(url.openStream());BufferedReader buffer = new BufferedReader(in);String line;Pattern p = Pattern.compile(""\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\b"");while ((line = buffer.readLine()) != null) {if (line.indexOf(""IP Address:"") != -1) {Matcher m = p.matcher(line);if (m.find()) {ipAddress = m.group();break;}}}buffer.close();in.close();} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return ipAddress;}protected Reader getText() throws IOException {BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));String readLine;do {readLine = br.readLine();} while (readLine != null && readLine.indexOf(""</table><br clear=all>"") < 0);return br;}private int streamConf() throws IOException {int avail = 0;switch(mode) {case FILE:if (!Helper.findInString(filename, "".jar"")) {is = new FileInputStream(filename);bisr = new BufferedReader(new InputStreamReader(is, INPUT_CHARSET));} else {is = Helper.getZipInput(filename.substring(0, filename.indexOf("".jar"") + 4), filename.substring(filename.indexOf("".jar"") + 5, filename.length()));bisr = new BufferedReader(new InputStreamReader(is, INPUT_CHARSET));}break;case STREAM:bisr = new BufferedReader(new InputStreamReader(is, INPUT_CHARSET));break;case NET:is = url.openStream();bisr = new BufferedReader(new InputStreamReader(is, INPUT_CHARSET));break;}switch(mode) {case FILE:case STREAM:avail = is.available();break;case NET:while (is.read() != -1) avail++;bisr.close();is.close();is = url.openStream();bisr = new BufferedReader(new InputStreamReader(is, INPUT_CHARSET));break;case STRING:avail = fileStr.length();break;}return avail;}@Overridepublic void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {String dataSetURL = request.getParameter(""datasetURL"");String contentType = request.getParameter(""contentType"");String studyUID = request.getParameter(""studyUID"");String seriesUID = request.getParameter(""seriesUID"");String objectUID = request.getParameter(""objectUID"");dataSetURL += ""&contentType="" + contentType + ""&studyUID="" + studyUID + ""&seriesUID="" + seriesUID + ""&objectUID="" + objectUID;dataSetURL = dataSetURL.replace(""+"", ""%2B"");InputStream resultInStream = null;OutputStream resultOutStream = response.getOutputStream();try {URL url = new URL(dataSetURL);resultInStream = url.openStream();byte[] buffer = new byte[4096];int bytes_read;while ((bytes_read = resultInStream.read(buffer)) != -1) {resultOutStream.write(buffer, 0, bytes_read);}resultOutStream.flush();resultOutStream.close();resultInStream.close();} catch (Exception e) {log.error(""Unable to read and send the DICOM dataset page"", e);}}"	5
"public void convert(File src, File dest) throws IOException {InputStream in = new BufferedInputStream(new FileInputStream(src));DcmParser p = pfact.newDcmParser(in);Dataset ds = fact.newDataset();p.setDcmHandler(ds.getDcmHandler());try {FileFormat format = p.detectFileFormat();if (format != FileFormat.ACRNEMA_STREAM) {System.out.println(""\n"" + src + "": not an ACRNEMA stream!"");return;}p.parseDcmFile(format, Tags.PixelData);if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {System.out.println(""\n"" + src + "": contains UIDs!"" + "" => probable already DICOM - do not convert"");return;}boolean hasPixelData = p.getReadTag() == Tags.PixelData;boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;int pxlen = p.getReadLength();if (hasPixelData) {if (inflate) {ds.putUS(Tags.BitsAllocated, 16);pxlen = pxlen * 4 / 3;}if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {System.out.println(""\n"" + src + "": mismatch pixel data length!"" + "" => do not convert"");return;}}ds.putUI(Tags.StudyInstanceUID, uid(studyUID));ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));ds.putUI(Tags.SOPInstanceUID, uid(instUID));ds.putUI(Tags.SOPClassUID, classUID);if (!ds.contains(Tags.NumberOfSamples)) {ds.putUS(Tags.NumberOfSamples, 1);}if (!ds.contains(Tags.PhotometricInterpretation)) {ds.putCS(Tags.PhotometricInterpretation, ""MONOCHROME2"");}if (fmi) {ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));}OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));try {} finally {ds.writeFile(out, encodeParam());if (hasPixelData) {if (!skipGroupLen) {out.write(PXDATA_GROUPLEN);int grlen = pxlen + 8;out.write((byte) grlen);out.write((byte) (grlen >> 8));out.write((byte) (grlen >> 16));out.write((byte) (grlen >> 24));}out.write(PXDATA_TAG);out.write((byte) pxlen);out.write((byte) (pxlen >> 8));out.write((byte) (pxlen >> 16));out.write((byte) (pxlen >> 24));}if (inflate) {int b2, b3;for (; pxlen > 0; pxlen -= 3) {out.write(in.read());b2 = in.read();b3 = in.read();out.write(b2 & 0x0f);out.write(b2 >> 4 | ((b3 & 0x0f) << 4));out.write(b3 >> 4);}} else {for (; pxlen > 0; --pxlen) {out.write(in.read());}}out.close();}System.out.print('.');} finally {in.close();}}@Overrideprotected DefaultHttpClient doInBackground(Account... params) {AccountManager accountManager = AccountManager.get(mainActivity);Account account = params[0];try {Bundle bundle = accountManager.getAuthToken(account, ""ah"", false, null, null).getResult();Intent intent = (Intent) bundle.get(AccountManager.KEY_INTENT);if (intent != null) {mainActivity.startActivity(intent);} else {String auth_token = bundle.getString(AccountManager.KEY_AUTHTOKEN);http_client.getParams().setBooleanParameter(ClientPNames.HANDLE_REDIRECTS, false);HttpGet http_get = new HttpGet(""http://3dforandroid.appspot.com/_ah"" + ""/login?continue=http://localhost/&auth="" + auth_token);HttpResponse response = http_client.execute(http_get);if (response.getStatusLine().getStatusCode() != 302) return null;for (Cookie cookie : http_client.getCookieStore().getCookies()) {if (cookie.getName().equals(""ACSID"")) {authClient = http_client;String json = createJsonFile(Kind);initializeSQLite();initializeServer(json);}}}} catch (OperationCanceledException e) {e.printStackTrace();} catch (AuthenticatorException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return http_client;}protected List<String[]> execute(String queryString, String sVar1, String sVar2, String filter) throws Exception {String query = URLEncoder.encode(queryString, ""UTF-8"");String urlString = ""http://sparql.bibleontology.com/sparql.jsp?sparql="" + query + ""&type1=xml"";URL url;BufferedReader br = null;ArrayList<String[]> values = new ArrayList<String[]>();try {url = new URL(urlString);URLConnection conn = url.openConnection();br = new BufferedReader(new InputStreamReader(conn.getInputStream()));StringBuffer sb = new StringBuffer();String line;String sURI1 = null;String sURI2 = null;boolean b1 = false;boolean b2 = false;while ((line = br.readLine()) != null) {if (line.indexOf(""</result>"") != -1) {if (sURI1 != null && sURI2 != null) {String pair[] = { sURI1, sURI2 };values.add(pair);}sURI1 = null;sURI2 = null;b1 = false;b2 = false;}if (line.indexOf(""binding name=\"""" + sVar1 + ""\"""") != -1) {b1 = true;continue;} else if (b1) {String s1 = getURI(line);if (s1 != null) {s1 = checkURISyntax(s1);if (filter == null || s1.startsWith(filter)) {sURI1 = s1;}}b1 = false;continue;}if (line.indexOf(""binding name=\"""" + sVar2 + ""\"""") != -1) {b2 = true;continue;} else if (b2) {String s2 = getURI(line);if (s2 != null) {s2 = checkURISyntax(s2);if (filter == null || s2.startsWith(filter)) {sURI2 = s2;}}b2 = false;continue;}}} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();} finally {br.close();}return values;}protected List<String> execute(String queryString, String sVar, String filter) throws UnsupportedEncodingException, IOException {String query = URLEncoder.encode(queryString, ""UTF-8"");String urlString = ""http://sparql.bibleontology.com/sparql.jsp?sparql="" + query + ""&type1=xml"";URL url;BufferedReader br = null;ArrayList<String> values = new ArrayList<String>();try {url = new URL(urlString);URLConnection conn = url.openConnection();br = new BufferedReader(new InputStreamReader(conn.getInputStream()));StringBuffer sb = new StringBuffer();String line;while ((line = br.readLine()) != null) {String sURI = getURI(line);if (sURI != null) {sURI = checkURISyntax(sURI);if (filter == null || sURI.startsWith(filter)) {values.add(sURI);}}}} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();} finally {br.close();}return values;}public void sendMessage(Message msg) {if (!blackList.contains(msg.getTo())) {Hashtable<String, String> content = msg.getContent();Enumeration<String> keys = content.keys();String key;String data = ""to="" + msg.getTo() + ""&from="" + msg.getFrom() + ""&"";while (keys.hasMoreElements()) {key = (String) keys.nextElement();data += key + ""="" + content.get(key) + ""&"";}URL url = null;try {logger.log(this, Level.FINER, ""sending "" + data + "" to "" + msg.getTo());url = new URL(""http://"" + msg.getTo() + "":8080/webmsgservice?"" + data);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));in.readLine();in.close();logger.log(this, Level.FINER, ""message sent to "" + msg.getTo());} catch (MalformedURLException e) {blackList.add(msg.getTo());logger.log(this, Level.WARNING, ""an error occured during message sending ("" + msg.getTo() + "") : "" + e.getMessage());e.printStackTrace();} catch (IOException e) {logger.log(this, Level.WARNING, ""an error occured during message sending ("" + msg.getTo() + "") : "" + e.getMessage());blackList.add(msg.getTo());}} else {logger.log(this, Level.FINE, ""will not send message to "" + msg.getTo() + "" because black listed IP"");}}public XMLResourceBundle() throws MissingResourceException {String systemId = getShortName() + "".xml"";URL url;if ((url = getClass().getResource(systemId)) != null) {InputStream is = null;try {is = url.openStream();SAXParserFactory factory = SAXParserFactory.newInstance();factory.setNamespaceAware(false);factory.setValidating(false);XMLReader xmlReader = factory.newSAXParser().getXMLReader();xmlReader.setContentHandler(new MessageContentHandler());xmlReader.parse(new InputSource(is));} catch (IOException ioe) {System.err.println(ioe.getMessage());ioe.printStackTrace();} catch (SAXException se) {System.err.println(se.getMessage());se.printStackTrace();} catch (ParserConfigurationException pce) {System.err.println(pce.getMessage());pce.printStackTrace();} finally {try {if (is != null) is.close();} catch (IOException ioe) {System.err.println(ioe.getMessage());ioe.printStackTrace();}}} else {throw new MissingResourceException(""Resource file '"" + systemId + ""' could not be found."", systemId, null);}}private File copyFile(String fileInClassPath, String systemPath) throws Exception {InputStream is = getClass().getResourceAsStream(fileInClassPath);OutputStream os = new FileOutputStream(systemPath);IOUtils.copy(is, os);is.close();os.close();return new File(systemPath);}private ProgramYek getYek(String keyFilename) {File f = new File(keyFilename);InputStream is = null;try {is = new FileInputStream(f);} catch (java.io.FileNotFoundException ee) {} catch (Exception e) {System.out.println(""** Exception reading key: "" + e);}if (is == null) {try {URL url = ChiselResources.getResourceByName(ProgramYek.getVidSys(), ChiselResources.LOADFROMCLASSPATH);if (url == null) {} else {is = url.openStream();}} catch (Exception e) {System.out.println(""** Exception reading key: "" + e);}}ProgramYek y = null;if (is != null) {try {y = ProgramYek.read(is);} catch (Exception e) {System.out.println(""** Exception reading key: "" + e);}} else {File chk = new File(checkFilename);if (chk.exists()) {System.out.println(""This is the evaluation version of "" + appname);y = new ProgramYek(appname, ""Evaluation"", """", 15);ProgramYek.serialize(y, keyFilename);}}return y;}public static String md5Encrypt(String valueToEncrypted) {String encryptedValue = """";try {MessageDigest digest = MessageDigest.getInstance(""MD5"");digest.update(valueToEncrypted.getBytes());BigInteger hash = new BigInteger(1, digest.digest());encryptedValue = hash.toString(16);} catch (NoSuchAlgorithmException nsae) {nsae.printStackTrace();}return encryptedValue;}public String sendRequest(java.lang.String servletName, java.lang.String request) {String reqxml = """";org.jdom.Document retdoc = null;String myurl = java.util.prefs.Preferences.systemRoot().get(""serverurl"", """");String myport = """";myport = java.util.prefs.Preferences.systemRoot().get(""portno"", ""8080"");if (myport == null || myport.trim().equals("""")) {myport = ""80"";}if (this.serverURL == null) {try {java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase();if (codebase != null) serverURL = codebase.getHost(); else serverURL = ""localhost"";} catch (Exception exp) {exp.printStackTrace();serverURL = ""localhost"";}newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport);ipdig.show();serverURL = myurl = ipdig.getIPAddress();myport = ipdig.getPortNo();java.util.prefs.Preferences.systemRoot().put(""serverurl"", serverURL);java.util.prefs.Preferences.systemRoot().put(""portno"", myport);System.out.println(serverURL);}try {System.out.println(""http://"" + serverURL + "":"" + myport + ""/newgenlibctxt/"" + servletName);java.net.URL url = new java.net.URL(""http://"" + serverURL + "":"" + myport + ""/newgenlibctxt/"" + servletName);java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection();urlconn.setDoOutput(true);urlconn.setRequestProperty(""Content-type"", ""text/xml; charset=UTF-8"");java.io.OutputStream os = urlconn.getOutputStream();String req1xml = request;java.util.zip.CheckedOutputStream cos = new java.util.zip.CheckedOutputStream(os, new java.util.zip.Adler32());java.util.zip.GZIPOutputStream gop = new java.util.zip.GZIPOutputStream(cos);java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, ""UTF-8"");System.out.println(""#########***********$$$$$$$$##########"" + req1xml);dos.write(req1xml);dos.flush();dos.close();System.out.println(""url conn: "" + urlconn.getContentEncoding() + ""  "" + urlconn.getContentType());java.io.InputStream ios = urlconn.getInputStream();java.util.zip.CheckedInputStream cis = new java.util.zip.CheckedInputStream(ios, new java.util.zip.Adler32());java.util.zip.GZIPInputStream gip = new java.util.zip.GZIPInputStream(cis);java.io.InputStreamReader br = new java.io.InputStreamReader(gip, ""UTF-8"");retdoc = (new org.jdom.input.SAXBuilder()).build(br);} catch (java.net.ConnectException conexp) {javax.swing.JOptionPane.showMessageDialog(null, newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString(""ConnectExceptionMessage""), ""Critical error"", javax.swing.JOptionPane.ERROR_MESSAGE);} catch (Exception exp) {exp.printStackTrace(System.out);TroubleShootConnectivity troubleShoot = new TroubleShootConnectivity();}System.out.println(reqxml);return (new org.jdom.output.XMLOutputter()).outputString(retdoc);}"	5
"public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException {if (type == null) {type = ""mol"";}ISimpleChemObjectReader cor = null;try {Reader input = new BufferedReader(getReader(url));FormatFactory formatFactory = new FormatFactory(8192);IChemFormat format = formatFactory.guessFormat(input);if (format != null) {if (format instanceof RGroupQueryFormat) {cor = new RGroupQueryReader();cor.setReader(input);} else if (format instanceof CMLFormat) {cor = new CMLReader(urlString);cor.setReader(url.openStream());} else if (format instanceof MDLV2000Format) {cor = new MDLV2000Reader(getReader(url));cor.setReader(input);}}} catch (Exception exc) {exc.printStackTrace();}if (cor == null) {if (type.equals(JCPFileFilter.cml) || type.equals(JCPFileFilter.xml)) {cor = new CMLReader(urlString);} else if (type.equals(JCPFileFilter.sdf)) {cor = new MDLV2000Reader(getReader(url));} else if (type.equals(JCPFileFilter.mol)) {cor = new MDLV2000Reader(getReader(url));} else if (type.equals(JCPFileFilter.inchi)) {try {cor = new INChIReader(new URL(urlString).openStream());} catch (Exception e) {e.printStackTrace();}} else if (type.equals(JCPFileFilter.rxn)) {cor = new MDLRXNV2000Reader(getReader(url));} else if (type.equals(JCPFileFilter.smi)) {cor = new SMILESReader(getReader(url));}}if (cor == null) {throw new CDKException(GT._(""Could not determine file format""));}if (cor instanceof MDLV2000Reader) {try {BufferedReader in = new BufferedReader(getReader(url));String line;while ((line = in.readLine()) != null) {if (line.equals(""$$$$"")) {String message = GT._(""It seems you opened a mol or sdf"" + "" file containing several molecules. "" + ""Only the first one will be shown"");JOptionPane.showMessageDialog(null, message, GT._(""sdf-like file""), JOptionPane.INFORMATION_MESSAGE);break;}}} catch (IOException ex) {ex.printStackTrace();}}return cor;}private Comic[] getAllComics() {try {URL comicURL = new URL(comicSite + ""list"");InputStream is = comicURL.openStream();BufferedReader buffread = new BufferedReader(new InputStreamReader(is));Vector tmplist = new Vector();while (buffread.ready()) {String comic = buffread.readLine();tmplist.add(comic);}Comic[] list = new Comic[tmplist.size()];activated = new boolean[tmplist.size()];titles = new String[tmplist.size()];for (int i = 0; i < tmplist.size(); i++) {try {URL curl = new URL(comicSite + (String) tmplist.get(i));BufferedInputStream bis = new BufferedInputStream(curl.openStream());Properties cprop = new Properties();cprop.load(bis);Comic c = new Comic(cprop, false);list[i] = c;titles[i] = c.getName();activated[i] = comicsmanager.isLoaded(c.getName());} catch (Exception e) {e.printStackTrace();}}for (int i = 0; i < list.length; i++) {System.out.println(list[i]);}return list;} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return null;}private static InputStream connect(final String url) throws IOException {InputStream in = null;try {final URLConnection conn = new URL(url).openConnection();conn.setConnectTimeout(YahooGeocoding.connectTimeOut);conn.setReadTimeout(YahooGeocoding.readTimeOut);conn.setRequestProperty(""User-Agent"", YahooGeocoding.USER_AGENT);in = conn.getInputStream();return in;} catch (final IOException e) {Util.d(""problems connecting to geonames url "" + url + ""Exception:"" + e);}return in;}public static String getSHA1Digest(String inputStr) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md = null;byte[] sha1hash = null;md = MessageDigest.getInstance(""SHA"");sha1hash = new byte[40];md.update(inputStr.getBytes(""iso-8859-1""), 0, inputStr.length());sha1hash = md.digest();return convertToHex(sha1hash);}private MediaWikiResult getFromUri(String url) throws OntologyServiceException {try {logger.info(""getting "" + url);HttpURLConnection connection = (java.net.HttpURLConnection) new URL(url).openConnection();connection.setRequestProperty(""User-Agent"", ""OntoCat-"" + Math.random());BufferedInputStream bin = new BufferedInputStream(connection.getInputStream());JAXBContext jaxbContext = JAXBContext.newInstance(""uk.ac.ebi.ontocat.mediawiki.jaxb"");Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();return (MediaWikiResult) unmarshaller.unmarshal(bin);} catch (Exception e) {e.printStackTrace();throw new OntologyServiceException(e);}}public final boolean login(String user, String pass) {if (user == null || pass == null) return false;connectionInfo.setData(""com.tensegrity.palojava.pass#"" + user, pass);try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(pass.getBytes());pass = asHexString(md.digest());} catch (NoSuchAlgorithmException ex) {throw new PaloException(""Failed to create encrypted password for "" + ""user '"" + user + ""'!"", ex);}connectionInfo.setUser(user);connectionInfo.setPassword(pass);return loginInternal(user, pass);}public RegionInfo(String name, int databaseID, int units, float xMin, float xMax, float yMin, float yMax, float zMin, float zMax, String imageURL) {this.name = name;this.databaseID = databaseID;this.units = units;this.xMin = xMin;this.xMax = xMax;this.yMin = yMin;this.yMax = yMax;this.zMin = zMin;this.zMax = zMax;try {MessageDigest digest = MessageDigest.getInstance(""SHA-1"");digest.update(this.name.getBytes());ByteArrayOutputStream baos = new ByteArrayOutputStream();DataOutputStream daos = new DataOutputStream(baos);daos.writeInt(this.databaseID);daos.writeInt(this.units);daos.writeDouble(this.xMin);daos.writeDouble(this.xMax);daos.writeDouble(this.yMin);daos.writeDouble(this.yMax);daos.writeDouble(this.zMin);daos.writeDouble(this.zMax);daos.flush();byte[] hashValue = digest.digest(baos.toByteArray());int hashCode = 0;for (int i = 0; i < hashValue.length; i++) {hashCode += (int) hashValue[i] << (i % 4);}this.hashcode = hashCode;} catch (Exception e) {throw new IllegalArgumentException(""Error occurred while generating hashcode for region "" + this.name);}if (imageURL != null) {URL url = null;try {url = new URL(imageURL);} catch (MalformedURLException murle) {}if (url != null) {BufferedImage tmpImage = null;try {tmpImage = ImageIO.read(url);} catch (Exception e) {e.printStackTrace();}mapImage = tmpImage;} else this.mapImage = null;} else this.mapImage = null;}public String md5(String phrase) {MessageDigest m;String coded = new String();try {m = MessageDigest.getInstance(""MD5"");m.update(phrase.getBytes(), 0, phrase.length());coded = (new BigInteger(1, m.digest()).toString(16)).toString();} catch (NoSuchAlgorithmException ex) {ex.printStackTrace();}if (coded.length() < 32) {coded = ""0"" + coded;}return coded;}public static void copyURLToFile(URL source, File destination) throws IOException {InputStream input = source.openStream();try {FileOutputStream output = openOutputStream(destination);try {IOUtils.copy(input, output);} finally {IOUtils.closeQuietly(output);}} finally {IOUtils.closeQuietly(input);}}public boolean open(String mode) {if (source instanceof String) return false; else if (mode == null) mode = """"; else mode = mode.toLowerCase();boolean toread = false, towrite = false;if (mode.indexOf(""r"") >= 0) toread = true;if (mode.indexOf(""w"") >= 0) towrite = true;if (!toread && !towrite) toread = towrite = true;try {if (toread && input == null) {if (isDirectory()) return true; else if (reader != null) return true; else if (source instanceof File) input = new FileInputStream((File) source); else if (source instanceof Socket) input = ((Socket) source).getInputStream(); else if (source instanceof URL) return getUrlInfo(toread, towrite); else return false;}if (towrite && output == null) {if (isDirectory()) return false; else if (writer != null) return true; else if (source instanceof File) output = new FileOutputStream((File) source); else if (source instanceof Socket) output = ((Socket) source).getOutputStream(); else if (source instanceof URL) return getUrlInfo(toread, towrite); else return false;}return true;} catch (Exception e) {return false;}}"	5
"private byte[] _generate() throws NoSuchAlgorithmException {if (host == null) {try {seed = InetAddress.getLocalHost().toString();} catch (UnknownHostException e) {seed = ""localhost/127.0.0.1"";} catch (SecurityException e) {seed = ""localhost/127.0.0.1"";}host = seed;} else {seed = host;}seed = seed + new Date().toString();seed = seed + Long.toString(rnd.nextLong());md = MessageDigest.getInstance(algorithm);md.update(seed.getBytes());return md.digest();}@Overridepublic synchronized File download_dictionary(Dictionary dict, String localfpath) {abort = false;try {URL dictionary_location = new URL(dict.getLocation());InputStream in = dictionary_location.openStream();FileOutputStream w = new FileOutputStream(local_cache, false);int b = 0;while ((b = in.read()) != -1) {w.write(b);if (abort) throw new Exception(""Download Aborted"");}in.close();w.close();File lf = new File(localfpath);FileInputStream r = new FileInputStream(local_cache);FileOutputStream fw = new FileOutputStream(lf);int c;while ((c = r.read()) != -1) fw.write(c);r.close();fw.close();clearCache();return lf;} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();} catch (InvalidTupleOperationException e) {e.printStackTrace();} catch (Exception e) {e.printStackTrace();}clearCache();return null;}private void sendLocal() throws Exception {if (validParameters()) {URL url = new URL(storageUrlString);HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();RequestUtils requestUtils = new RequestUtils();requestUtils.preRequestAddParameter(""senderObj"", ""QuotaSender"");requestUtils.preRequestAddParameter(""beanNumbers"", new String().valueOf(quotaBeans.size()));for (int vPos = 0; vPos < quotaBeans.size(); vPos++) {QuotaBean bean = (QuotaBean) quotaBeans.get(vPos);requestUtils.preRequestAddParameter("""" + vPos + ""#portalID"", bean.getPortalID());requestUtils.preRequestAddParameter("""" + vPos + ""#userID"", bean.getUserID());requestUtils.preRequestAddParameter("""" + vPos + ""#workflowID"", bean.getWorkflowID());requestUtils.preRequestAddParameter("""" + vPos + ""#runtimeID"", bean.getRuntimeID());requestUtils.preRequestAddParameter("""" + vPos + ""#plussQuotaSize"", bean.getPlussQuotaSize().toString());}requestUtils.preRequestAddFile(""zipFileName"", ""dummyZipFileName.zip"");requestUtils.createPostRequest();httpURLConnection.setRequestProperty(""Content-Type"", ""multipart/form-data; boundary="" + requestUtils.getBoundary());httpURLConnection.setRequestMethod(""POST"");httpURLConnection.setDoOutput(true);httpURLConnection.setDoInput(true);try {httpURLConnection.connect();OutputStream out = httpURLConnection.getOutputStream();byte[] preBytes = requestUtils.getPreRequestStringBytes();out.write(preBytes);out.flush();out.write(new String(""dummyFile"").getBytes());byte[] postBytes = requestUtils.getPostRequestStringBytes();out.write(postBytes);out.flush();out.close();BufferedReader in = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));in.readLine();in.close();if (HttpURLConnection.HTTP_OK != httpURLConnection.getResponseCode()) {throw new Exception(""response not HTTP_OK !"");}} catch (Exception e) {e.printStackTrace();throw new Exception(""Cannot connect to: "" + storageUrlString, e);}} else {throw new Exception(""Not valid parameters: quotaBeans !"");}}void copyFile(String sInput, String sOutput) throws IOException {File inputFile = new File(sInput);File outputFile = new File(sOutput);FileReader in = new FileReader(inputFile);FileWriter out = new FileWriter(outputFile);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();}@Overridepublic URLConnection openConnection(URL url, Proxy proxy) throws IOException {if (null == url) {throw new IllegalArgumentException(Messages.getString(""luni.1B""));}String host = url.getHost();if (host == null || host.length() == 0 || host.equalsIgnoreCase(""localhost"")) {return new FileURLConnection(url);}URL ftpURL = new URL(""ftp"", host, url.getFile());return (proxy == null) ? ftpURL.openConnection() : ftpURL.openConnection(proxy);}public void run() {BufferedInputStream bis = null;URLConnection url = null;String textType = null;StringBuffer sb = new StringBuffer();try {if (!location.startsWith(""http://"")) {location = ""http://"" + location;}url = (new URL(location)).openConnection();size = url.getContentLength();textType = url.getContentType();lastModified = url.getIfModifiedSince();InputStream is = url.getInputStream();bis = new BufferedInputStream(is);if (textType.startsWith(""text/plain"")) {int i;i = bis.read();++position;status = ""Reading From URL..."";this.setChanged();this.notifyObservers();while (i != END_OF_STREAM) {sb.append((char) i);i = bis.read();++position;if (position % (size / 25) == 0) {this.setChanged();this.notifyObservers();}if (abortLoading) {break;}}status = ""Finished reading URL..."";} else if (textType.startsWith(""text/html"")) {int i;i = bis.read();char c = (char) i;++position;status = ""Reading From URL..."";this.setChanged();this.notifyObservers();boolean enclosed = false;if (c == '<') {enclosed = true;}while (i != END_OF_STREAM) {if (enclosed) {if (c == '>') {enclosed = false;}} else {if (c == '<') {enclosed = true;} else {sb.append((char) i);}}i = bis.read();c = (char) i;++position;if (size == 0) {if (position % (size / 25) == 0) {this.setChanged();this.notifyObservers();}}if (abortLoading) {break;}}status = ""Finished reading URL..."";} else {status = ""Unable to read document type: "" + textType + ""..."";}bis.close();try {document.insertString(0, sb.toString(), SimpleAttributeSet.EMPTY);} catch (BadLocationException ble) {ble.printStackTrace();}finished = true;this.setChanged();this.notifyObservers();} catch (IOException ioe) {try {document.insertString(0, sb.toString(), SimpleAttributeSet.EMPTY);} catch (BadLocationException ble) {ble.printStackTrace();}status = ""IO Error Reading From URL..."";finished = true;this.setChanged();this.notifyObservers();}}public Web(String urlString, String charset) throws java.net.MalformedURLException, java.io.IOException {this.charset = charset;final java.net.URL url = new java.net.URL(urlString);final java.net.URLConnection uconn = url.openConnection();if (!(uconn instanceof java.net.HttpURLConnection)) throw new java.lang.IllegalArgumentException(""URL protocol must be HTTP."");final java.net.HttpURLConnection conn = (java.net.HttpURLConnection) uconn;conn.setConnectTimeout(600000);conn.setReadTimeout(600000);conn.setInstanceFollowRedirects(true);conn.setRequestProperty(""User-agent"", ""spider"");conn.connect();responseHeader = conn.getHeaderFields();responseCode = conn.getResponseCode();responseURL = conn.getURL();length = conn.getContentLength();final java.io.InputStream stream = conn.getErrorStream();if (stream != null) {content = readStream(length, stream);} else if ((inputStream = conn.getContent()) != null && inputStream instanceof java.io.InputStream) {content = readStream(length, (java.io.InputStream) inputStream);}conn.disconnect();}public Web(String urlString) throws java.net.MalformedURLException, java.io.IOException {final java.net.URL url = new java.net.URL(urlString);final java.net.URLConnection uconn = url.openConnection();if (!(uconn instanceof java.net.HttpURLConnection)) throw new java.lang.IllegalArgumentException(""URL protocol must be HTTP."");final java.net.HttpURLConnection conn = (java.net.HttpURLConnection) uconn;conn.setConnectTimeout(100000);conn.setReadTimeout(100000);conn.setInstanceFollowRedirects(true);conn.setRequestProperty(""User-agent"", ""spider"");conn.connect();responseHeader = conn.getHeaderFields();responseCode = conn.getResponseCode();responseURL = conn.getURL();length = conn.getContentLength();final String type = conn.getContentType();if (type != null) {final String[] parts = type.split("";"");MIMEtype = parts[0].trim();for (int i = 1; i < parts.length && charset == null; i++) {final String t = parts[i].trim();final int index = t.toLowerCase().indexOf(""charset="");if (index != -1) charset = t.substring(index + 8);}}final java.io.InputStream stream = conn.getErrorStream();if (stream != null) {content = readStream(length, stream);} else if ((inputStream = conn.getContent()) != null && inputStream instanceof java.io.InputStream) {content = readStream(length, (java.io.InputStream) inputStream);}conn.disconnect();}public RecordIterator get(URL url) {RecordIterator recordIter = null;if (!SUPPORTED_PROTOCOLS.contains(url.getProtocol().toLowerCase())) {return null;}try {URL robotsUrl = new URL(url, ROBOTS_TXT);recordIter = new RecordIterator(urlInputStreamFactory.openStream(robotsUrl));} catch (IOException e) {LOG.info(""Failed to fetch "" + url, e);}return recordIter;}public void testJDBCSavepoints() throws Exception {String sql;String msg;int i;PreparedStatement ps;ResultSet rs;Savepoint sp1;Savepoint sp2;Savepoint sp3;Savepoint sp4;Savepoint sp5;Savepoint sp6;Savepoint sp7;int rowcount = 0;sql = ""drop table t if exists"";stmt.executeUpdate(sql);sql = ""create table t(id int, fn varchar, ln varchar, zip int)"";stmt.executeUpdate(sql);conn1.setAutoCommit(true);conn1.setAutoCommit(false);sql = ""insert into t values(?,?,?,?)"";ps = conn1.prepareStatement(sql);ps.setString(2, ""Mary"");ps.setString(3, ""Peterson-Clancy"");i = 0;for (; i < 10; i++) {ps.setInt(1, i);ps.setInt(4, i);ps.executeUpdate();}sp1 = conn1.setSavepoint(""savepoint1"");for (; i < 20; i++) {ps.setInt(1, i);ps.setInt(4, i);ps.executeUpdate();}sp2 = conn1.setSavepoint(""savepoint2"");for (; i < 30; i++) {ps.setInt(1, i);ps.setInt(4, i);ps.executeUpdate();}sp3 = conn1.setSavepoint(""savepoint3"");for (; i < 40; i++) {ps.setInt(1, i);ps.setInt(4, i);ps.executeUpdate();}sp4 = conn1.setSavepoint(""savepoint4"");for (; i < 50; i++) {ps.setInt(1, i);ps.setInt(4, i);ps.executeUpdate();}sp5 = conn1.setSavepoint(""savepoint5"");sp6 = conn1.setSavepoint(""savepoint6"");sp7 = conn1.setSavepoint(""savepoint7"");rs = stmt.executeQuery(""select count(*) from t"");rs.next();rowcount = rs.getInt(1);rs.close();msg = ""select count(*) from t value"";try {assertEquals(msg, 50, rowcount);} catch (Exception e) {}conn2.setAutoCommit(false);conn2.setSavepoint(""savepoint1"");conn2.setSavepoint(""savepoint2"");msg = ""savepoint released succesfully on non-originating connection"";try {conn2.releaseSavepoint(sp2);assertTrue(msg, false);} catch (Exception e) {}try {conn2.rollback(sp1);msg = ""succesful rollback to savepoint on "" + ""non-originating connection"";assertTrue(msg, false);} catch (Exception e) {}msg = ""direct execution of <release savepoint> statement failed to "" + ""release JDBC-created SQL-savepoint with identical savepoint name"";try {conn2.createStatement().executeUpdate(""release savepoint \""savepoint2\"""");} catch (Exception e) {try {assertTrue(msg, false);} catch (Exception e2) {}}msg = ""direct execution of <rollback to savepoint> statement failed to "" + ""roll back to existing JDBC-created SQL-savepoint with identical "" + ""savepoint name"";try {conn2.createStatement().executeUpdate(""rollback to savepoint \""savepoint1\"""");} catch (Exception e) {e.printStackTrace();try {assertTrue(msg, false);} catch (Exception e2) {}}conn1.releaseSavepoint(sp6);msg = ""savepoint released succesfully > 1 times"";try {conn1.releaseSavepoint(sp6);assertTrue(msg, false);} catch (Exception e) {}msg = ""savepoint released successfully after preceding savepoint released"";try {conn1.releaseSavepoint(sp7);assertTrue(msg, false);} catch (Exception e) {}msg = ""preceding same-point savepoint destroyed by following savepoint release"";try {conn1.releaseSavepoint(sp5);} catch (Exception e) {try {assertTrue(msg, false);} catch (Exception e2) {}}conn1.rollback(sp4);rs = stmt.executeQuery(""select count(*) from t"");rs.next();rowcount = rs.getInt(1);rs.close();msg = ""select * rowcount after 50 inserts - 10 rolled back:"";try {assertEquals(msg, 40, rowcount);} catch (Exception e) {}msg = ""savepoint rolled back succesfully > 1 times"";try {conn1.rollback(sp4);assertTrue(msg, false);} catch (Exception e) {}conn1.rollback(sp3);rs = stmt.executeQuery(""select count(*) from t"");rs.next();rowcount = rs.getInt(1);rs.close();msg = ""select count(*) after 50 inserts - 20 rolled back:"";try {assertEquals(msg, 30, rowcount);} catch (Exception e) {}msg = ""savepoint released succesfully after use in rollback"";try {conn1.releaseSavepoint(sp3);assertTrue(msg, false);} catch (Exception e) {}conn1.rollback(sp1);msg = ""savepoint rolled back without raising an exception after "" + ""rollback to a preceeding savepoint"";try {conn1.rollback(sp2);assertTrue(msg, false);} catch (Exception e) {}conn1.rollback();msg = ""savepoint released succesfully when it should have been "" + ""destroyed by a full rollback"";try {conn1.releaseSavepoint(sp1);assertTrue(msg, false);} catch (Exception e) {}conn1.setAutoCommit(false);sp1 = conn1.setSavepoint(""savepoint1"");conn1.rollback();conn1.setAutoCommit(false);conn1.createStatement().executeUpdate(""savepoint \""savepoint1\"""");conn1.setAutoCommit(false);sp1 = conn1.setSavepoint(""savepoint1"");conn1.createStatement().executeUpdate(""savepoint \""savepoint1\"""");conn1.setAutoCommit(false);sp1 = conn1.setSavepoint(""savepoint1"");conn1.createStatement().executeUpdate(""savepoint \""savepoint1\"""");}"	5
"public static List<PluginInfo> getPluginInfos(String urlRepo) throws MalformedURLException, IOException {XStream xStream = new XStream();xStream.alias(""plugin"", PluginInfo.class);xStream.alias(""plugins"", List.class);List<PluginInfo> infos = null;URL url;BufferedReader in = null;StringBuilder buffer = new StringBuilder();try {url = new URL(urlRepo);in = new BufferedReader(new InputStreamReader(url.openStream()));String inputLine;while ((inputLine = in.readLine()) != null) {buffer.append(inputLine);}} finally {try {if (in != null) {in.close();}} catch (IOException ex) {Logger.getLogger(RemotePluginsManager.class.getName()).log(Level.SEVERE, null, ex);}}infos = (List<PluginInfo>) xStream.fromXML(buffer.toString());return infos;}public ClientDTO changePassword(String pMail, String pMdp) {Client vClientBean = null;ClientDTO vClientDTO = null;vClientBean = mClientDao.getClient(pMail);if (vClientBean != null) {MessageDigest vMd5Instance;try {vMd5Instance = MessageDigest.getInstance(""MD5"");vMd5Instance.reset();vMd5Instance.update(pMdp.getBytes());byte[] vDigest = vMd5Instance.digest();BigInteger vBigInt = new BigInteger(1, vDigest);String vHashPassword = vBigInt.toString(16);vClientBean.setMdp(vHashPassword);vClientDTO = BeanToDTO.getInstance().createClientDTO(vClientBean);} catch (NoSuchAlgorithmException e) {e.printStackTrace();}}return vClientDTO;}private static FileChannel getFileChannel(File file, boolean isOut, boolean append) throws OpenR66ProtocolSystemException {FileChannel fileChannel = null;try {if (isOut) {FileOutputStream fileOutputStream = new FileOutputStream(file.getPath(), append);fileChannel = fileOutputStream.getChannel();if (append) {try {fileChannel.position(file.length());} catch (IOException e) {}}} else {if (!file.exists()) {throw new OpenR66ProtocolSystemException(""File does not exist"");}FileInputStream fileInputStream = new FileInputStream(file.getPath());fileChannel = fileInputStream.getChannel();}} catch (FileNotFoundException e) {throw new OpenR66ProtocolSystemException(""File not found"", e);}return fileChannel;}public static void uploadAsync(final String username, final String password, final String description, final String tags, final boolean addDateTags, final ArrayList<RecordedGeoPoint> recordedGeoPoints, final String pseudoFileName) {if (username == null || username.length() == 0) return;if (password == null || password.length() == 0) return;if (description == null || description.length() == 0) return;if (tags == null || tags.length() == 0) return;if (pseudoFileName == null || pseudoFileName.endsWith("".gpx"")) return;new Thread(new Runnable() {public void run() {if (!Util.isSufficienDataForUpload(recordedGeoPoints)) return;final InputStream gpxInputStream = new ByteArrayInputStream(RecordedRouteGPXFormatter.create(recordedGeoPoints).getBytes());String tagsToUse = tags;if (addDateTags || tagsToUse == null) if (tagsToUse == null) tagsToUse = autoTagFormat.format(new GregorianCalendar().getTime()); else tagsToUse = tagsToUse + "" "" + autoTagFormat.format(new GregorianCalendar().getTime());try {final String urlDesc = (description == null) ? DEFAULT_DESCRIPTION : description.replaceAll(""\\.;&?,/"", ""_"");final String urlTags = (tagsToUse == null) ? DEFAULT_TAGS : tagsToUse.replaceAll(""\\\\.;&?,/"", ""_"");final URL url = new URL(""http://www.openstreetmap.org/api/"" + API_VERSION + ""/gpx/create"");final HttpURLConnection con = (HttpURLConnection) url.openConnection();con.setConnectTimeout(15000);con.setRequestMethod(""POST"");con.setDoOutput(true);con.addRequestProperty(""Authorization"", ""Basic "" + encodeBase64(username + "":"" + password));con.addRequestProperty(""Content-Type"", ""multipart/form-data; boundary="" + BOUNDARY);con.addRequestProperty(""Connection"", ""close"");con.addRequestProperty(""Expect"", """");con.connect();DataOutputStream out = new DataOutputStream(new BufferedOutputStream(con.getOutputStream()));writeContentDispositionFile(out, ""file"", gpxInputStream, pseudoFileName);writeContentDisposition(out, ""description"", urlDesc);writeContentDisposition(out, ""tags"", urlTags);writeContentDisposition(out, ""public"", ""1"");out.writeBytes(""--"" + BOUNDARY + ""--"" + LINE_END);out.flush();final int retCode = con.getResponseCode();String retMsg = con.getResponseMessage();if (retCode != 200) {if (con.getHeaderField(""Error"") != null) retMsg += ""\n"" + con.getHeaderField(""Error"");con.disconnect();throw new RuntimeException(retCode + "" "" + retMsg);}out.close();con.disconnect();} catch (Exception e) {}}}, ""OSMUpload-Thread"").start();}public static synchronized String getMD5_Base64(String input) {MessageDigest msgDigest = null;try {msgDigest = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {throw new IllegalStateException(""System doesn't support MD5 algorithm."");}try {msgDigest.update(input.getBytes(""UTF-8""));} catch (java.io.UnsupportedEncodingException ex) {throw new IllegalStateException(""System doesn't support your  EncodingException."");}byte[] rawData = msgDigest.digest();byte[] encoded = Base64.encodeBase64(rawData);String retValue = new String(encoded);return retValue;}public void run() {videoId = videoId.trim();System.out.println(""fetching video"");String requestUrl = ""http://www.youtube.com/get_video_info?&video_id="" + videoId;try {URL url = new URL(requestUrl);HttpURLConnection conn = (HttpURLConnection) url.openConnection();conn.setDoOutput(true);BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));String line = rd.readLine();int from = line.indexOf(""&token="") + 7;int to = line.indexOf(""&thumbnail_url="");String id = line.substring(from, to);String tmp = ""http://www.youtube.com/get_video?video_id="" + videoId + ""&t="" + id;url = new URL(tmp);conn = (HttpURLConnection) url.openConnection();rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));rd.readLine();tmp = conn.getURL().toString();url = new URL(tmp);conn = (HttpURLConnection) url.openConnection();InputStream is;OutputStream outStream;URLConnection uCon;byte[] buf;int ByteRead, ByteWritten = 0;url = new URL(tmp);outStream = new BufferedOutputStream(new FileOutputStream(videoId + "".flv""));uCon = url.openConnection();is = uCon.getInputStream();buf = new byte[1024];while ((ByteRead = is.read(buf)) != -1) {outStream.write(buf, 0, ByteRead);ByteWritten += ByteRead;}is.close();outStream.close();System.out.println(videoUrl + "" is ready"");} catch (Exception e) {System.out.println(""Could not find flv-url "" + videoId + ""! "" + e.getMessage());} finally {ready = true;}}public static String hashPassword(String password) {String hashStr = null;try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(password.getBytes(Charset.defaultCharset()));BigInteger hash = new BigInteger(1, md5.digest());hashStr = hash.toString(16);} catch (NoSuchAlgorithmException e) {return password;}StringBuilder buffer = new StringBuilder(hashStr);while (buffer.length() < 32) {buffer.insert(0, '0');}return buffer.toString();}public static String createStringFromHtml(MyUrl url) {try {BufferedReader reader = new BufferedReader(new InputStreamReader(url.getUrl().openStream(), ""UTF-8""));String line;String xmlAsString = """";while ((line = reader.readLine()) != null) {xmlAsString += line;}reader.close();return xmlAsString;} catch (Exception e) {return null;}}private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception {int n = 512 * 1024;AtomicInteger total = new AtomicInteger(0);ServerSocket ss = startSinkServer(total);URL url = new URL(""http://localhost:"" + ss.getLocalPort() + ""/test1"");HttpURLConnection conn = (HttpURLConnection) url.openConnection();conn.setDoOutput(true);conn.setRequestMethod(""POST"");if (uploadKind == UploadKind.CHUNKED) {conn.setChunkedStreamingMode(-1);} else {conn.setFixedLengthStreamingMode(n);}OutputStream out = conn.getOutputStream();if (writeKind == WriteKind.BYTE_BY_BYTE) {for (int i = 0; i < n; ++i) {out.write('x');}} else {byte[] buf = new byte[writeKind == WriteKind.SMALL_BUFFERS ? 256 : 64 * 1024];Arrays.fill(buf, (byte) 'x');for (int i = 0; i < n; i += buf.length) {out.write(buf, 0, Math.min(buf.length, n - i));}}out.close();assertTrue(conn.getResponseCode() > 0);assertEquals(uploadKind == UploadKind.CHUNKED ? -1 : n, total.get());}protected void channelConnected() throws IOException {MessageDigest md = null;String digest = """";try {String userid = nateon.getUserId();if (userid.endsWith(""@nate.com"")) userid = userid.substring(0, userid.lastIndexOf('@'));md = MessageDigest.getInstance(""MD5"");md.update(nateon.getPassword().getBytes());md.update(userid.getBytes());byte[] bData = md.digest();StringBuilder sb = new StringBuilder();for (byte b : bData) {int v = (int) b;v = v < 0 ? v + 0x100 : v;String s = Integer.toHexString(v);if (s.length() == 1) sb.append('0');sb.append(s);}digest = sb.toString();} catch (Exception e) {e.printStackTrace();}NateOnMessage out = new NateOnMessage(""LSIN"");out.add(nateon.getUserId()).add(digest).add(""MD5"").add(""3.615"");out.setCallback(""processAuth"");writeMessage(out);}"	5
"public static String getWebContent(String remoteUrl) {StringBuffer sb = new StringBuffer();try {java.net.URL url = new java.net.URL(remoteUrl);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = in.readLine()) != null) {sb.append(line);}in.close();} catch (Exception e) {logger.error(""获取远程网址内容失败 - "" + remoteUrl, e);}return sb.toString();}public static String getWebContent(String remoteUrl, String encoding) {StringBuffer sb = new StringBuffer();try {java.net.URL url = new java.net.URL(remoteUrl);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream(), encoding));String line;while ((line = in.readLine()) != null) {sb.append(line);}in.close();} catch (Exception e) {logger.error(""获取远程网址内容失败 - "" + remoteUrl, e);}return sb.toString();}public void copy(String sourcePath, String targetPath) throws IOException {File sourceFile = new File(sourcePath);File targetFile = new File(targetPath);FileInputStream fileInputStream = null;FileOutputStream fileOutputStream = null;try {fileInputStream = new FileInputStream(sourceFile);fileOutputStream = new FileOutputStream(targetFile);byte[] buffer = new byte[4096];int bytesRead;while ((bytesRead = fileInputStream.read(buffer)) != -1) fileOutputStream.write(buffer, 0, bytesRead);} finally {if (fileInputStream != null) try {fileInputStream.close();} catch (IOException exception) {JOptionPane.showMessageDialog(null, AcideLanguageManager.getInstance().getLabels().getString(""s265"") + sourcePath, AcideLanguageManager.getInstance().getLabels().getString(""s266""), JOptionPane.ERROR_MESSAGE);AcideLog.getLog().error(exception.getMessage());}if (fileOutputStream != null) try {fileOutputStream.close();} catch (IOException exception) {JOptionPane.showMessageDialog(null, AcideLanguageManager.getInstance().getLabels().getString(""s267"") + targetPath, AcideLanguageManager.getInstance().getLabels().getString(""268""), JOptionPane.ERROR_MESSAGE);AcideLog.getLog().error(exception.getMessage());}}}private DataFileType[] getDataFiles(Collection<ContentToSend> contentsToSend) {DataFileType[] files = new DataFileType[contentsToSend.size()];int fileIndex = 0;for (ContentToSend contentToSend : contentsToSend) {DataFileType dataFile = DataFileType.Factory.newInstance();dataFile.setFilename(contentToSend.getFileName());dataFile.setId(""D"" + fileIndex);dataFile.setMimeType(contentToSend.getMimeType());dataFile.setContentType(DataFileType.ContentType.EMBEDDED_BASE_64);final StringWriter stringWriter = new StringWriter();final OutputStream encodeStream = Base64.newEncoder(stringWriter, 0, null);final InputStream is = contentToSend.getInputStream();try {long sizeCopied = IOUtils.copyLarge(is, encodeStream);dataFile.setSize(BigDecimal.valueOf(sizeCopied));} catch (IOException e) {throw new RuntimeException(""Failed to get input to the file to be sent"", e);} finally {IOUtils.closeQuietly(encodeStream);IOUtils.closeQuietly(is);}dataFile.setStringValue(stringWriter.toString());files[fileIndex++] = dataFile;}return files;}private static <OS extends OutputStream> OS getUnzipAndDecodeOutputStream(InputStream inputStream, final OS outputStream) {final PipedOutputStream pipedOutputStream = new PipedOutputStream();final List<Throwable> ungzipThreadThrowableList = new LinkedList<Throwable>();Writer decoderWriter = null;Thread ungzipThread = null;try {final PipedInputStream pipedInputStream = new PipedInputStream(pipedOutputStream);ungzipThread = new Thread(new Runnable() {public void run() {GZIPInputStream gzipInputStream = null;try {gzipInputStream = new GZIPInputStream(pipedInputStream);IOUtils.copy(gzipInputStream, outputStream);} catch (Throwable t) {ungzipThreadThrowableList.add(t);} finally {IOUtils.closeQuietly(gzipInputStream);IOUtils.closeQuietly(pipedInputStream);}}});decoderWriter = Base64.newDecoder(pipedOutputStream);ungzipThread.start();IOUtils.copy(inputStream, decoderWriter, DVK_MESSAGE_CHARSET);decoderWriter.flush();pipedOutputStream.flush();} catch (IOException e) {throw new RuntimeException(""failed to unzip and decode input"", e);} finally {IOUtils.closeQuietly(decoderWriter);IOUtils.closeQuietly(pipedOutputStream);if (ungzipThread != null) {try {ungzipThread.join();} catch (InterruptedException ie) {throw new RuntimeException(""thread interrupted while for ungzip thread to finish"", ie);}}}if (!ungzipThreadThrowableList.isEmpty()) {throw new RuntimeException(""ungzip failed"", ungzipThreadThrowableList.get(0));}return outputStream;}public void run() {GZIPInputStream gzipInputStream = null;try {gzipInputStream = new GZIPInputStream(pipedInputStream);IOUtils.copy(gzipInputStream, outputStream);} catch (Throwable t) {ungzipThreadThrowableList.add(t);} finally {IOUtils.closeQuietly(gzipInputStream);IOUtils.closeQuietly(pipedInputStream);}}private static void main(String mp3Path) throws IOException {String convPath = ""http://android.adinterest.biz/wav2mp3.php?k="";String uri = convPath + mp3Path;URL rssurl = new URL(uri);InputStream is = rssurl.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(is, ""UTF-8""));String buf = """";while ((buf = br.readLine()) != null) {}is.close();br.close();}private static void readAndRewrite(File inFile, File outFile) throws IOException {ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);Dataset ds = DcmObjectFactory.getInstance().newDataset();dcmParser.setDcmHandler(ds.getDcmHandler());dcmParser.parseDcmFile(null, Tags.PixelData);PixelDataReader pdReader = pdFact.newReader(ds, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());System.out.println(""reading "" + inFile + ""..."");pdReader.readPixelData(false);ImageOutputStream out = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;ds.writeDataset(out, dcmEncParam);ds.writeHeader(out, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());System.out.println(""writing "" + outFile + ""..."");PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, ds, out, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());pdWriter.writePixelData();out.flush();out.close();System.out.println(""done!"");}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;final StringBuilder sbValueBeforeMD5 = new StringBuilder();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {logger.fatal("""", e);return;}try {final long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(sId);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());final byte[] array = md5.digest();final StringBuilder sb = new StringBuilder();for (int j = 0; j < array.length; ++j) {final int b = array[j] & 0xFF;if (b < 0x10) {sb.append('0');}sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {logger.fatal("""", e);}}public static final String getUniqueId() {String digest = """";try {MessageDigest md = MessageDigest.getInstance(""MD5"");String timeVal = """" + (System.currentTimeMillis() + 1);String localHost = """";try {localHost = InetAddress.getLocalHost().toString();} catch (UnknownHostException e) {throw new RuntimeException(""Error trying to get localhost"" + e.getMessage());}String randVal = """" + new Random().nextInt();String val = timeVal + localHost + randVal;md.reset();md.update(val.getBytes());digest = toHexString(md.digest());} catch (NoSuchAlgorithmException e) {throw new RuntimeException(""NoSuchAlgorithmException : "" + e.getMessage());}return digest;}"	5
"private static void processFile(String file) throws IOException {FileInputStream in = new FileInputStream(file);int read = 0;byte[] buf = new byte[2048];ByteArrayOutputStream bout = new ByteArrayOutputStream();while ((read = in.read(buf)) > 0) bout.write(buf, 0, read);in.close();String converted = bout.toString().replaceAll(""@project.name@"", projectNameS).replaceAll(""@base.package@"", basePackageS).replaceAll(""@base.dir@"", baseDir).replaceAll(""@webapp.dir@"", webAppDir).replaceAll(""path=\""target/classes\"""", ""path=\""src/main/webapp/WEB-INF/classes\"""");FileOutputStream out = new FileOutputStream(file);out.write(converted.getBytes());out.close();}private static void copyFile(String from, String to) throws IOException {FileReader in = new FileReader(from);FileWriter out = new FileWriter(to);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();}public void load(boolean isOrdered) throws ResourceInstantiationException {try {if (null == url) {throw new ResourceInstantiationException(""URL not specified (null)."");}BufferedReader listReader;listReader = new BomStrippingInputStreamReader((url).openStream(), encoding);String line;int linenr = 0;while (null != (line = listReader.readLine())) {linenr++;GazetteerNode node = null;try {node = new GazetteerNode(line, separator, isOrdered);} catch (Exception ex) {throw new GateRuntimeException(""Could not read gazetteer entry "" + linenr + "" from URL "" + getURL() + "": "" + ex.getMessage(), ex);}entries.add(new GazetteerNode(line, separator, isOrdered));}listReader.close();} catch (Exception x) {throw new ResourceInstantiationException(x.getClass() + "":"" + x.getMessage());}isModified = false;}public int executeBatch(String[] commands, String applicationid) throws Exception {Statement statement = null;int errors = 0;int commandCount = 0;Connection conn = null;try {conn = getConnection(applicationid);conn.setAutoCommit(false);statement = conn.createStatement();for (int i = 0; i < commands.length; i++) {String command = commands[i];if (command.trim().length() == 0) {continue;}commandCount++;try {log.info(""executing SQL: "" + command);int results = statement.executeUpdate(command);log.info(""After execution, "" + results + "" row(s) have been changed"");} catch (SQLException ex) {throw ex;}}conn.commit();log.info(""Executed "" + commandCount + "" SQL command(s) with "" + errors + "" error(s)"");} catch (SQLException ex) {if (conn != null) {conn.rollback();}throw ex;} catch (Exception e) {if (conn != null) {conn.rollback();}throw e;} finally {statement.close();}return errors;}public static String encripty(String toEncripty) {if (toEncripty != null) {try {synchronized (toEncripty) {java.security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");md.update(toEncripty.getBytes());byte[] hash = md.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < hash.length; i++) {if ((0xff & hash[i]) < 0x10) hexString.append(""0"" + Integer.toHexString((0xFF & hash[i]))); else hexString.append(Integer.toHexString(0xFF & hash[i]));}toEncripty = hexString.toString();}} catch (Exception e) {e.getMessage();}}return toEncripty;}private void getXMLData() {String result = null;URL url = null;URLConnection conn = null;BufferedReader rd = null;StringBuffer sb = new StringBuffer();String line;try {url = new URL(this.url);conn = url.openConnection();rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));while ((line = rd.readLine()) != null) {sb.append(line + ""\n"");}rd.close();result = sb.toString();} catch (MalformedURLException e) {log.error(""URL was malformed: {}"", url, e);} catch (IOException e) {log.error(""IOException thrown: {}"", url, e);}this.xmlString = result;}public String getRandomGUID() {MessageDigest md5 = null;String valueBeforeMD5 = """";String retValue = """";try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}StringBuffer sbValueBeforeMD5 = new StringBuffer();try {InetAddress id = InetAddress.getLocalHost();long time = System.currentTimeMillis();long rand = 0;rand = random.nextLong();sbValueBeforeMD5.append(id.toString());sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) {sb.append('0');}sb.append(Integer.toHexString(b));}retValue = sb.toString();} catch (UnknownHostException e) {System.out.println(""Error:"" + e);}return retValue;}public static String encrypt(String password) {String sign = password;try {java.security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");md.update(sign.getBytes());byte[] hash = md.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < hash.length; i++) {if ((0xff & hash[i]) < 0x10) hexString.append(""0"" + Integer.toHexString((0xFF & hash[i]))); else hexString.append(Integer.toHexString(0xFF & hash[i]));}sign = hexString.toString();} catch (Exception nsae) {nsae.printStackTrace();}return sign;}public static String encode(String username, String password) {try {MessageDigest digest = MessageDigest.getInstance(""SHA-1"");digest.update(username.getBytes());digest.update(password.getBytes());return new String(digest.digest());} catch (Exception e) {Log.error(""Error encrypting credentials"", e);}return null;}public String process(URL url) throws IOException {String line, results = """";InputStream is = url.openStream();BufferedReader dis = new BufferedReader(new InputStreamReader(is));while ((line = dis.readLine()) != null) {results += line + ""\n"";}System.out.println(results);return results;}"	5
"public NodeId generateTopicId(String topicName) {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {System.err.println(""No SHA support!"");}md.update(topicName.getBytes());byte[] digest = md.digest();NodeId newId = new NodeId(digest);return newId;}public static String md5(String text) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(text.getBytes());return ForumUtil.bufferToHex(md.digest());} catch (NoSuchAlgorithmException e) {e.printStackTrace();return null;}}private static boolean initLOG4JProperties(String homeDir) {String Log4jURL = homeDir + LOG4J_URL;try {URL log4jurl = getURL(Log4jURL);InputStream inStreamLog4j = log4jurl.openStream();Properties propertiesLog4j = new Properties();try {propertiesLog4j.load(inStreamLog4j);PropertyConfigurator.configure(propertiesLog4j);} catch (IOException e) {e.printStackTrace();}} catch (Exception e) {logger.info(""Failed to initialize LOG4J with properties file."");return false;}return true;}private void createProject(IProgressMonitor monitor, boolean launchNewTestWizard) {try {IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();IProject project = root.getProject(namePage.getProjectName());IProjectDescription description = ResourcesPlugin.getWorkspace().newProjectDescription(project.getName());if (!Platform.getLocation().equals(namePage.getLocationPath())) description.setLocation(namePage.getLocationPath());description.setNatureIds(new String[] { JavaCore.NATURE_ID });ICommand buildCommand = description.newCommand();buildCommand.setBuilderName(JavaCore.BUILDER_ID);description.setBuildSpec(new ICommand[] { buildCommand });project.create(description, monitor);project.open(monitor);IJavaProject javaProject = JavaCore.create(project);IFolder testFolder = project.getFolder(""tests"");testFolder.create(false, true, monitor);IFolder srcFolder = project.getFolder(""src"");srcFolder.create(false, true, monitor);IFolder binFolder = project.getFolder(""bin"");binFolder.create(false, true, monitor);IFolder libFolder = project.getFolder(""lib"");libFolder.create(false, true, monitor);try {FileUtils.copyFile(new Path(Platform.asLocalURL(CubicTestPlugin.getDefault().find(new Path(""lib/CubicTestElementAPI.jar""))).getPath()).toFile(), libFolder.getFile(""CubicTestElementAPI.jar"").getLocation().toFile());FileUtils.copyFile(new Path(Platform.asLocalURL(CubicTestPlugin.getDefault().find(new Path(""lib/CubicUnit.jar""))).getPath()).toFile(), libFolder.getFile(""CubicUnit.jar"").getLocation().toFile());} catch (IOException e1) {e1.printStackTrace();}javaProject.setOutputLocation(binFolder.getFullPath(), monitor);IClasspathEntry[] classpath;classpath = new IClasspathEntry[] { JavaCore.newSourceEntry(srcFolder.getFullPath()), JavaCore.newContainerEntry(new Path(""org.eclipse.jdt.launching.JRE_CONTAINER"")), JavaCore.newLibraryEntry(libFolder.getFile(""CubicTestElementAPI.jar"").getFullPath(), null, null), JavaCore.newLibraryEntry(libFolder.getFile(""CubicUnit.jar"").getFullPath(), null, null) };javaProject.setRawClasspath(classpath, binFolder.getFullPath(), monitor);ResourceNavigator navigator = null;IViewPart viewPart = workbench.getActiveWorkbenchWindow().getActivePage().getViewReferences()[0].getView(false);if (viewPart instanceof ResourceNavigator) {navigator = (ResourceNavigator) viewPart;}if (launchNewTestWizard) {launchNewTestWizard(testFolder);if (navigator != null && testFolder.members().length > 0) {navigator.selectReveal(new StructuredSelection(testFolder.members()[0]));}}project.refreshLocal(IResource.DEPTH_INFINITE, null);} catch (CoreException e) {e.printStackTrace();}}public void generate(String rootDir, RootModel root) throws Exception {IOUtils.copyStream(HTMLGenerator.class.getResourceAsStream(""stylesheet.css""), new FileOutputStream(new File(rootDir, ""stylesheet.css"")));Velocity.init();VelocityContext context = new VelocityContext();context.put(""model"", root);context.put(""util"", new VelocityUtils());context.put(""msg"", messages);processTemplate(""index.html"", new File(rootDir, ""index.html""), context);processTemplate(""list.html"", new File(rootDir, ""list.html""), context);processTemplate(""summary.html"", new File(rootDir, ""summary.html""), context);File imageDir = new File(rootDir, ""images"");imageDir.mkdir();IOUtils.copyStream(HTMLGenerator.class.getResourceAsStream(""primarykey.gif""), new FileOutputStream(new File(imageDir, ""primarykey.gif"")));File tableDir = new File(rootDir, ""tables"");tableDir.mkdir();for (TableModel table : root.getTables()) {context.put(""table"", table);processTemplate(""table.html"", new File(tableDir, table.getTableName() + "".html""), context);}}public static String md5hash(String text) {java.security.MessageDigest md;try {md = java.security.MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {throw new RuntimeException(e);}md.update(text.getBytes());byte[] md5bytes = md.digest();return new String(org.apache.commons.codec.binary.Hex.encodeHex(md5bytes));}public boolean authenticate(String plaintext) throws NoSuchAlgorithmException {String[] passwordParts = this.password.split(""\\$"");md = MessageDigest.getInstance(""SHA-1"");md.update(passwordParts[1].getBytes());isAuthenticated = toHex(md.digest(plaintext.getBytes())).equalsIgnoreCase(passwordParts[2]);return isAuthenticated;}@Overridepublic String getHash(String text) throws NoSuchAlgorithmException {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(text.getBytes());BigInteger hash = new BigInteger(1, md5.digest());return hash.toString(16);}public static SVNConfiguracion load(URL urlConfiguracion) {SVNConfiguracion configuracion = null;try {XMLDecoder xenc = new XMLDecoder(urlConfiguracion.openStream());configuracion = (SVNConfiguracion) xenc.readObject();configuracion.setFicheroConfiguracion(urlConfiguracion);xenc.close();} catch (Exception exception) {exception.printStackTrace();}return configuracion;}public static void downloadFile(String htmlUrl, String dirUrl) {try {URL url = new URL(htmlUrl);System.out.println(""Opening connection to "" + htmlUrl + ""..."");URLConnection urlC = url.openConnection();InputStream is = url.openStream();Date date = new Date(urlC.getLastModified());System.out.println("", modified on: "" + date.toLocaleString() + "")..."");System.out.flush();FileOutputStream fos = null;String localFile = null;StringTokenizer st = new StringTokenizer(url.getFile(), ""/"");while (st.hasMoreTokens()) localFile = st.nextToken();fos = new FileOutputStream(dirUrl + ""/"" + localFile);int oneChar, count = 0;while ((oneChar = is.read()) != -1) {fos.write(oneChar);count++;}is.close();fos.close();System.out.println(count + "" byte(s) copied"");} catch (MalformedURLException e) {System.err.println(e.toString());} catch (IOException e) {System.err.println(e.toString());}}"	5
"public void testJob() {try {URL url = new URL(""http://rickysql.gotoip3.com/mapp/admin/admin.do"");url.openConnection();url.getContent();System.out.print(""00"");} catch (Exception e) {System.out.print(""Daily data update exception:"" + e);}}public List<String> generate(String geronimoVersion, String geronimoHome, String instanceNumber) {geronimoRepository = geronimoHome + ""/repository"";Debug.logInfo(""The WASCE or Geronimo Repository is "" + geronimoRepository, module);Classpath classPath = new Classpath(System.getProperty(""java.class.path""));List<File> elements = classPath.getElements();List<String> jar_version = new ArrayList<String>();String jarPath = null;String jarName = null;String newJarName = null;String jarNameSimple = null;String jarVersion = ""1.0"";int lastDash = -1;for (File f : elements) {if (f.exists()) {if (f.isFile()) {jarPath = f.getAbsolutePath();jarName = f.getName();String jarNameWithoutExt = (String) jarName.subSequence(0, jarName.length() - 4);lastDash = jarNameWithoutExt.lastIndexOf(""-"");if (lastDash > -1) {jarVersion = jarNameWithoutExt.substring(lastDash + 1, jarNameWithoutExt.length());jarNameSimple = jarNameWithoutExt.substring(0, lastDash);boolean alreadyVersioned = 0 < StringUtil.removeRegex(jarVersion, ""[^.0123456789]"").length();if (!alreadyVersioned) {jarVersion = ""1.0"";jarNameSimple = jarNameWithoutExt;newJarName = jarNameWithoutExt + ""-"" + jarVersion + "".jar"";} else {newJarName = jarName;}} else {jarVersion = ""1.0"";jarNameSimple = jarNameWithoutExt;newJarName = jarNameWithoutExt + ""-"" + jarVersion + "".jar"";}jar_version.add(jarNameSimple + ""#"" + jarVersion);String targetDirectory = geronimoRepository + ""/org/ofbiz/"" + jarNameSimple + ""/"" + jarVersion;File targetDir = new File(targetDirectory);if (!targetDir.exists()) {boolean created = targetDir.mkdirs();if (!created) {Debug.logFatal(""Unable to create target directory - "" + targetDirectory, module);return null;}}if (!targetDirectory.endsWith(""/"")) {targetDirectory = targetDirectory + ""/"";}String newCompleteJarName = targetDirectory + newJarName;File newJarFile = new File(newCompleteJarName);try {FileChannel srcChannel = new FileInputStream(jarPath).getChannel();FileChannel dstChannel = new FileOutputStream(newCompleteJarName).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());Debug.log(""Created jar file : "" + newJarName + "" in WASCE or Geronimo repository"", module);srcChannel.close();dstChannel.close();} catch (IOException e) {Debug.logFatal(""Unable to create jar file - "" + newJarName + "" in WASCE or Geronimo repository (certainly already exists)"", module);return null;}}}}List<ComponentConfig.WebappInfo> webApps = ComponentConfig.getAllWebappResourceInfos();File geronimoWebXml = new File(System.getProperty(""ofbiz.home"") + ""/framework/appserver/templates/"" + geronimoVersion + ""/geronimo-web.xml"");for (ComponentConfig.WebappInfo webApp : webApps) {if (null != webApp) {parseTemplate(geronimoWebXml, webApp);}}return jar_version;}protected void ensureProjectExists(String projectName) {List<IClasspathEntry> classpathEntries = new UniqueEList<IClasspathEntry>();IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName);try {boolean isEmptyProject = true;IProjectDescription projectDescription = null;IJavaProject javaProject = JavaCore.create(project);if (!project.exists()) {projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectName);project.create(new NullProgressMonitor());} else {isEmptyProject = false;projectDescription = project.getDescription();classpathEntries.addAll(Arrays.asList(javaProject.getRawClasspath()));}String[] natureIds = projectDescription.getNatureIds();if (natureIds == null) {natureIds = new String[] { JavaCore.NATURE_ID };} else {boolean hasJavaNature = false;boolean hasPDENature = false;for (int i = 0; i < natureIds.length; ++i) {if (JavaCore.NATURE_ID.equals(natureIds[i])) {hasJavaNature = true;}if (""org.eclipse.pde.PluginNature"".equals(natureIds[i])) {hasPDENature = true;}}if (!hasJavaNature) {String[] oldNatureIds = natureIds;natureIds = new String[oldNatureIds.length + 1];System.arraycopy(oldNatureIds, 0, natureIds, 0, oldNatureIds.length);natureIds[oldNatureIds.length] = JavaCore.NATURE_ID;}if (!hasPDENature) {String[] oldNatureIds = natureIds;natureIds = new String[oldNatureIds.length + 1];System.arraycopy(oldNatureIds, 0, natureIds, 0, oldNatureIds.length);natureIds[oldNatureIds.length] = ""org.eclipse.pde.PluginNature"";}}projectDescription.setNatureIds(natureIds);ICommand[] builders = projectDescription.getBuildSpec();if (builders == null) {builders = new ICommand[0];}boolean hasManifestBuilder = false;boolean hasSchemaBuilder = false;for (int i = 0; i < builders.length; ++i) {if (""org.eclipse.pde.ManifestBuilder"".equals(builders[i].getBuilderName())) {hasManifestBuilder = true;}if (""org.eclipse.pde.SchemaBuilder"".equals(builders[i].getBuilderName())) {hasSchemaBuilder = true;}}if (!hasManifestBuilder) {ICommand[] oldBuilders = builders;builders = new ICommand[oldBuilders.length + 1];System.arraycopy(oldBuilders, 0, builders, 0, oldBuilders.length);builders[oldBuilders.length] = projectDescription.newCommand();builders[oldBuilders.length].setBuilderName(""org.eclipse.pde.ManifestBuilder"");}if (!hasSchemaBuilder) {ICommand[] oldBuilders = builders;builders = new ICommand[oldBuilders.length + 1];System.arraycopy(oldBuilders, 0, builders, 0, oldBuilders.length);builders[oldBuilders.length] = projectDescription.newCommand();builders[oldBuilders.length].setBuilderName(""org.eclipse.pde.SchemaBuilder"");}projectDescription.setBuildSpec(builders);project.open(new NullProgressMonitor());project.setDescription(projectDescription, new NullProgressMonitor());if (isEmptyProject) {IFolder sourceContainer = project.getFolder(""src"");sourceContainer.create(false, true, new NullProgressMonitor());IClasspathEntry sourceClasspathEntry = JavaCore.newSourceEntry(new Path(""/"" + projectName + ""/src""));classpathEntries.add(0, sourceClasspathEntry);String jreContainer = JavaRuntime.JRE_CONTAINER;String complianceLevel = CodeGenUtil.EclipseUtil.getJavaComplianceLevel(project);if (""1.5"".equals(complianceLevel)) {jreContainer += ""/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"";} else if (""1.6"".equals(complianceLevel)) {jreContainer += ""/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"";}classpathEntries.add(JavaCore.newContainerEntry(new Path(jreContainer)));classpathEntries.add(JavaCore.newContainerEntry(new Path(""org.eclipse.pde.core.requiredPlugins"")));javaProject.setOutputLocation(new Path(""/"" + projectName + ""/bin""), new NullProgressMonitor());}javaProject.setRawClasspath(classpathEntries.toArray(new IClasspathEntry[classpathEntries.size()]), new NullProgressMonitor());} catch (CoreException e) {e.printStackTrace();CodeGenEcorePlugin.INSTANCE.log(e);}}private static void readAndRewrite(File inFile, File outFile) throws IOException {ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);Dataset ds = DcmObjectFactory.getInstance().newDataset();dcmParser.setDcmHandler(ds.getDcmHandler());dcmParser.parseDcmFile(null, Tags.PixelData);PixelDataReader pdReader = pdFact.newReader(ds, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());System.out.println(""reading "" + inFile + ""..."");pdReader.readPixelData(false);ImageOutputStream out = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;ds.writeDataset(out, dcmEncParam);ds.writeHeader(out, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());System.out.println(""writing "" + outFile + ""..."");PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, ds, out, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());pdWriter.writePixelData();out.flush();out.close();System.out.println(""done!"");}@Overridepublic String getMessageDigest() throws SarasvatiLoadException {if (messageDigest == null) {Collections.sort(nodes);Collections.sort(externals);try {MessageDigest digest = MessageDigest.getInstance(""SHA1"");digest.update(name.getBytes());for (XmlNode node : nodes) {node.addToDigest(digest);}for (XmlExternal external : externals) {external.addToDigest(digest);}messageDigest = SvUtil.getHexString(digest.digest());} catch (NoSuchAlgorithmException nsae) {throw new SarasvatiException(""Unable to load SHA1 algorithm"", nsae);}}return messageDigest;}public static byte[] hash(final byte[] saltBefore, final String content, final byte[] saltAfter, final int repeatedHashingCount) throws NoSuchAlgorithmException, UnsupportedEncodingException {if (content == null) return null;final MessageDigest digest = MessageDigest.getInstance(DIGEST);if (digestLength == -1) digestLength = digest.getDigestLength();for (int i = 0; i < repeatedHashingCount; i++) {if (i > 0) digest.update(digest.digest());digest.update(saltBefore);digest.update(content.getBytes(WebCastellumParameter.DEFAULT_CHARACTER_ENCODING.getValue()));digest.update(saltAfter);}return digest.digest();}private void connect(byte[] bData) {System.out.println(""Connecting to: "" + url.toString());String SOAPAction = """";URLConnection connection = null;try {connection = url.openConnection();httpConn = (HttpURLConnection) connection;httpConn.setRequestProperty(""Content-Length"", String.valueOf(bData.length));httpConn.setRequestProperty(""Content-Type"", ""text/xml; charset=utf-8"");httpConn.setRequestProperty(""SOAPAction"", SOAPAction);httpConn.setRequestMethod(""POST"");httpConn.setDoOutput(true);httpConn.setDoInput(true);} catch (IOException ioExp) {CommonLogger.error(this, ""Error while connecting to  SOAP server !"", ioExp);}}public String elementsSearch() {int index = 0;for (int i1 = 0; i1 < 6; i1++) {for (int i2 = 0; i2 < 5; i2++) {if (index < 5) {if (initialMatrix[i1][i2] > 0) {finalMatrix[index] = initialMatrix[i1][i2];index++;}} else break;}}int temp;for (int i = 0; i < finalMatrix.length; i++) {for (int j = 0; j < finalMatrix.length - 1; j++) {if (finalMatrix[j] < finalMatrix[j + 1]) {temp = finalMatrix[j];finalMatrix[j] = finalMatrix[j + 1];finalMatrix[j + 1] = temp;}}}String result = """";for (int k : finalMatrix) result += k + "" "";return result;}protected void createFile(File sourceActionDirectory, File destinationActionDirectory, LinkedList<String> segments) throws DuplicateActionFileException {File currentSrcDir = sourceActionDirectory;File currentDestDir = destinationActionDirectory;String segment = """";for (int i = 0; i < segments.size() - 1; i++) {segment = segments.get(i);currentSrcDir = new File(currentSrcDir, segment);currentDestDir = new File(currentDestDir, segment);}if (currentSrcDir != null && currentDestDir != null) {File srcFile = new File(currentSrcDir, segments.getLast());if (srcFile.exists()) {File destFile = new File(currentDestDir, segments.getLast());if (destFile.exists()) {throw new DuplicateActionFileException(srcFile.toURI().toASCIIString());}try {FileChannel srcChannel = new FileInputStream(srcFile).getChannel();FileChannel destChannel = new FileOutputStream(destFile).getChannel();ByteBuffer buffer = ByteBuffer.allocate((int) srcChannel.size());while (srcChannel.position() < srcChannel.size()) {srcChannel.read(buffer);}srcChannel.close();buffer.rewind();destChannel.write(buffer);destChannel.close();} catch (Exception ex) {ex.printStackTrace();}}}}@Overridepublic JSONObject getJsonObj(Trip trip, List<Waypoint> stops) throws IOException {JSONObject jsonObject = null;try {List<String> filtered = new LinkedList<String>();filtered.add(trip.getWaypoint().getFromLocation().getCity().replaceAll(""\\W+"", ""+""));filtered.add(trip.getWaypoint().getToLocation().getCity().replaceAll(""\\W+"", ""+""));for (Waypoint w : stops) {String from = w.getFromLocation().getCity().replaceAll(""\\W+"", ""+"");if (!filtered.contains(from)) filtered.add(from);String to = w.getToLocation().getCity().replaceAll(""\\W+"", ""+"");if (!filtered.contains(to)) filtered.add(to);}StringBuilder urlBuilder = new StringBuilder();urlBuilder.append(""http://maps.google.com/maps/api/directions/json"");urlBuilder.append(""?origin="").append(filtered.get(0));urlBuilder.append(""&destination="").append(filtered.get(1));if (filtered.size() > 2) {urlBuilder.append(""&waypoints="");for (int i = 2; i < filtered.size() - 1; i++) urlBuilder.append(filtered.get(i)).append(""|"");urlBuilder.append(filtered.get(filtered.size() - 1));}urlBuilder.append(""&sensor=false"");BufferedReader in = new BufferedReader(new InputStreamReader(new URL(urlBuilder.toString()).openStream()));StringBuilder answerBuilder = new StringBuilder();String inputLine;while ((inputLine = in.readLine()) != null) answerBuilder.append(inputLine);in.close();jsonObject = new JSONObject(answerBuilder.toString());} catch (JSONException e) {logger.error(""Problem with initializing JSONObject"", e);}return jsonObject;}"	5
"public void process(@NotNull Template tpl, @NotNull Document model, @NotNull String packageName, @NotNull String outFileName, Map<String, String> xsltParam, String artifact) throws ModelGenerationException {System.out.print(""Processing with "" + tpl);String destinationPath;switch(tpl.destination) {case target:if (tpl.path == null) {destinationPath = where.buildDir + separatorChar + ""generated-sources"" + separatorChar + GENERATION_TARGET;} else {destinationPath = where.buildDir;}break;case source:if (tpl.path == null) {destinationPath = where.sourceDir;} else {destinationPath = ""src"";}break;case redora:destinationPath = where.redoraDir;break;default:throw new IllegalArgumentException(""Unused destination "" + tpl.destination);}if (tpl.path == null) {if (tpl.destination == Destination.redora) destinationPath += separator + artifact; else destinationPath += separator + packageName.replace('.', separatorChar);} else {destinationPath += separator + tpl.path.replace('/', separatorChar).replace('\\', separatorChar);}System.out.println("" to "" + destinationPath + ""..."" + outFileName);if (tpl.destination == Destination.source) {if (new File(destinationPath, outFileName).exists()) {System.out.println(""Stub "" + outFileName + "" already exists."");return;}}new File(destinationPath).mkdirs();InputStream in = null;Writer out;try {out = new FileWriter(new File(destinationPath, outFileName));} catch (IOException e) {throw new ModelGenerationException(""Can't find: "" + destinationPath + separatorChar + outFileName, e);}switch(tpl.type) {case freemarker:Map<String, NodeModel> root = new HashMap<String, NodeModel>();root.put(""doc"", NodeModel.wrap(model));try {freemarker.template.Template template = freemarkerConf.getTemplate(tpl.getTemplateFileName());template.process(root, out);} catch (ParseException e) {throw new ModelGenerationException(""There is an error in template: "" + tpl + "". I found it when generating "" + outFileName, e);} catch (IOException e) {throw new ModelGenerationException(""Can't find '"" + tpl + ""' when generating "" + outFileName, e);} catch (TemplateException e) {throw new ModelGenerationException(""There is an error in template: "" + tpl + "". I found it when generating "" + outFileName, e);} catch (RuntimeException e) {throw new ModelGenerationException(""There is another error while trying this template: "" + tpl + "". I found it when generating "" + outFileName, e);}break;case xslt:try {in = new FileInputStream(tpl.getAbsolutePath());xsltTransform(model.getFirstChild(), in, out, xsltParam);} catch (FileNotFoundException e) {throw new ModelGenerationException(""Can't find "" + tpl, e);} catch (TransformerException e) {throw new ModelGenerationException(""Sorry, i failed to use this template: "" + tpl + "". It broke when generating "" + outFileName, e);} finally {IOUtils.closeQuietly(in);}break;case copy:try {in = new FileInputStream(tpl.getAbsolutePath());IOUtils.copy(in, out);} catch (IOException e) {throw new ModelGenerationException(""File copy failed "" + tpl.getTemplateFileName(), e);} finally {IOUtils.closeQuietly(in);}}IOUtils.closeQuietly(out);}public void convert(File src, File dest) throws IOException {InputStream in = new BufferedInputStream(new FileInputStream(src));DcmParser p = pfact.newDcmParser(in);Dataset ds = fact.newDataset();p.setDcmHandler(ds.getDcmHandler());try {FileFormat format = p.detectFileFormat();if (format != FileFormat.ACRNEMA_STREAM) {System.out.println(""\n"" + src + "": not an ACRNEMA stream!"");return;}p.parseDcmFile(format, Tags.PixelData);if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {System.out.println(""\n"" + src + "": contains UIDs!"" + "" => probable already DICOM - do not convert"");return;}boolean hasPixelData = p.getReadTag() == Tags.PixelData;boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;int pxlen = p.getReadLength();if (hasPixelData) {if (inflate) {ds.putUS(Tags.BitsAllocated, 16);pxlen = pxlen * 4 / 3;}if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {System.out.println(""\n"" + src + "": mismatch pixel data length!"" + "" => do not convert"");return;}}ds.putUI(Tags.StudyInstanceUID, uid(studyUID));ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));ds.putUI(Tags.SOPInstanceUID, uid(instUID));ds.putUI(Tags.SOPClassUID, classUID);if (!ds.contains(Tags.NumberOfSamples)) {ds.putUS(Tags.NumberOfSamples, 1);}if (!ds.contains(Tags.PhotometricInterpretation)) {ds.putCS(Tags.PhotometricInterpretation, ""MONOCHROME2"");}if (fmi) {ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));}OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));try {} finally {ds.writeFile(out, encodeParam());if (hasPixelData) {if (!skipGroupLen) {out.write(PXDATA_GROUPLEN);int grlen = pxlen + 8;out.write((byte) grlen);out.write((byte) (grlen >> 8));out.write((byte) (grlen >> 16));out.write((byte) (grlen >> 24));}out.write(PXDATA_TAG);out.write((byte) pxlen);out.write((byte) (pxlen >> 8));out.write((byte) (pxlen >> 16));out.write((byte) (pxlen >> 24));}if (inflate) {int b2, b3;for (; pxlen > 0; pxlen -= 3) {out.write(in.read());b2 = in.read();b3 = in.read();out.write(b2 & 0x0f);out.write(b2 >> 4 | ((b3 & 0x0f) << 4));out.write(b3 >> 4);}} else {for (; pxlen > 0; --pxlen) {out.write(in.read());}}out.close();}System.out.print('.');} finally {in.close();}}private void pack() {String szImageDir = m_szBasePath + ""Images"";File fImageDir = new File(szImageDir);fImageDir.mkdirs();String ljIcon = System.getProperty(""user.home"");ljIcon += System.getProperty(""file.separator"") + ""MochaJournal"" + System.getProperty(""file.separator"") + m_szUsername + System.getProperty(""file.separator"") + ""Cache"";File fUserDir = new File(ljIcon);File[] fIcons = fUserDir.listFiles();int iSize = fIcons.length;for (int i = 0; i < iSize; i++) {try {File fOutput = new File(fImageDir, fIcons[i].getName());if (!fOutput.exists()) {fOutput.createNewFile();FileOutputStream fOut = new FileOutputStream(fOutput);FileInputStream fIn = new FileInputStream(fIcons[i]);while (fIn.available() > 0) fOut.write(fIn.read());}} catch (IOException e) {System.err.println(e);}}try {FileOutputStream fOut;InputStream fLJIcon = getClass().getResourceAsStream(""/org/homedns/krolain/MochaJournal/Images/userinfo.gif"");File fLJOut = new File(fImageDir, ""user.gif"");if (!fLJOut.exists()) {fOut = new FileOutputStream(fLJOut);while (fLJIcon.available() > 0) fOut.write(fLJIcon.read());}fLJIcon = getClass().getResourceAsStream(""/org/homedns/krolain/MochaJournal/Images/communitynfo.gif"");fLJOut = new File(fImageDir, ""comm.gif"");if (!fLJOut.exists()) {fOut = new FileOutputStream(fLJOut);while (fLJIcon.available() > 0) fOut.write(fLJIcon.read());}fLJIcon = getClass().getResourceAsStream(""/org/homedns/krolain/MochaJournal/Images/icon_private.gif"");fLJOut = new File(fImageDir, ""icon_private.gif"");if (!fLJOut.exists()) {fOut = new FileOutputStream(fLJOut);while (fLJIcon.available() > 0) fOut.write(fLJIcon.read());}fLJIcon = getClass().getResourceAsStream(""/org/homedns/krolain/MochaJournal/Images/icon_protected.gif"");fLJOut = new File(fImageDir, ""icon_protected.gif"");if (!fLJOut.exists()) {fOut = new FileOutputStream(fLJOut);while (fLJIcon.available() > 0) fOut.write(fLJIcon.read());}} catch (IOException e) {System.err.println(e);}}public static File downloadFile(Proxy proxy, URL url, File path) throws IOException {URLConnection conn = null;if (null == proxy) {conn = url.openConnection();} else {conn = url.openConnection(proxy);}conn.connect();File destFile = null;if (conn instanceof HttpURLConnection) {HttpURLConnection hc = (HttpURLConnection) conn;String filename = null;String hv = hc.getHeaderField(""Content-Disposition"");if (null == hv) {String str = url.toString();int index = str.lastIndexOf(""/"");filename = str.substring(index + 1);} else {int index = hv.indexOf(""filename="");filename = hv.substring(index).replace(""\"""", """").trim();}destFile = new File(path, filename);} else {destFile = new File(path, ""downloadfile"" + url.toString().hashCode());}if (destFile.exists()) {return destFile;}FileOutputStream fos = new FileOutputStream(destFile);byte[] buffer = new byte[2048];try {while (true) {int len = conn.getInputStream().read(buffer);if (len < 0) {break;} else {fos.write(buffer, 0, len);}}fos.close();} catch (IOException e) {destFile.delete();throw e;}return destFile;}@SuppressWarnings(""unused"")private GraphicalViewer createGraphicalViewer(Composite parent) {GraphicalViewer viewer = new ScrollingGraphicalViewer();viewer.createControl(parent);viewer.getControl().setBackground(parent.getBackground());viewer.setRootEditPart(new ScalableFreeformRootEditPart());viewer.setKeyHandler(new GraphicalViewerKeyHandler(viewer));getEditDomain().addViewer(viewer);getSite().setSelectionProvider(viewer);viewer.setEditPartFactory(getEditPartFactory());viewer.setContents(getContent());return viewer;}public static String generate(String username, String password) throws PersistenceException {String output = null;try {MessageDigest md = MessageDigest.getInstance(""SHA-256"");md.reset();md.update(username.getBytes());md.update(password.getBytes());byte[] rawhash = md.digest();output = byteToBase64(rawhash);} catch (Exception e) {throw new PersistenceException(""error, could not generate password"");}return output;}private static String getData(String myurl) throws Exception {URL url = new URL(myurl);uc = (HttpURLConnection) url.openConnection();if (login) {uc.setRequestProperty(""Cookie"", logincookie + "";"" + xfsscookie);}br = new BufferedReader(new InputStreamReader(uc.getInputStream()));String temp = """", k = """";while ((temp = br.readLine()) != null) {k += temp;}br.close();return k;}private static void fileUpload() throws IOException {HttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(postURL);file = new File(""h:/UploadingdotcomUploaderPlugin.java"");MultipartEntity mpEntity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE);ContentBody cbFile = new FileBody(file);mpEntity.addPart(""upload_type"", new StringBody(""file""));mpEntity.addPart(""sess_id"", new StringBody(sessid));mpEntity.addPart(""srv_tmp_url"", new StringBody(servertmpurl));mpEntity.addPart(""file_0"", cbFile);mpEntity.addPart(""submit_btn"", new StringBody("" Upload!""));httppost.setEntity(mpEntity);System.out.println(""executing request "" + httppost.getRequestLine());System.out.println(""Now uploading your file into enterupload.com"");HttpResponse response = httpclient.execute(httppost);HttpEntity resEntity = response.getEntity();System.out.println(response.getStatusLine());if (resEntity != null) {uploadresponse = EntityUtils.toString(resEntity);}downloadid = parseResponse(uploadresponse, ""<textarea name='fn'>"", ""<"");httpclient.getConnectionManager().shutdown();}private GmailContact convertContactToGmailContact(Contact contact) throws GmailManagerException {boolean homePhone = false, homePhone2 = false, homeFax = false, homeMobile = false, homePager = false;boolean businessPhone = false, businessPhone2 = false, businessFax = false, businessMobile = false, businessPager = false;boolean otherPhone = false, otherFax = false;if (log.isTraceEnabled()) log.trace(""Converting Foundation contact to Gmail contact: Name:"" + contact.getName().getFirstName().getPropertyValueAsString());try {GmailContact gmailContact = new GmailContact();gmailContact.setId(contact.getUid());Name name = contact.getName();if (name != null) if (name.getFirstName() != null && name.getFirstName().getPropertyValueAsString() != null) {StringBuffer buffer = new StringBuffer();buffer.append(name.getFirstName().getPropertyValueAsString()).append("" "");if (name.getMiddleName() != null && name.getMiddleName().getPropertyValueAsString() != null) buffer.append(name.getMiddleName().getPropertyValueAsString()).append("" "");if (name.getLastName() != null && name.getLastName().getPropertyValueAsString() != null) buffer.append(name.getLastName().getPropertyValueAsString()).append("" "");if (log.isDebugEnabled()) log.debug(""NAME: "" + buffer.toString().trim());gmailContact.setName(buffer.toString().trim());}if (contact.getPersonalDetail() != null) {if (contact.getPersonalDetail().getEmails() != null && contact.getPersonalDetail().getEmails().size() > 0) {if (contact.getPersonalDetail().getEmails().get(0) != null) {Email email1 = (Email) contact.getPersonalDetail().getEmails().get(0);if (email1.getPropertyValueAsString() != null && email1.getPropertyValueAsString().equals("""") == false) {if (log.isDebugEnabled()) log.debug(""EMAIL1: "" + email1.getPropertyValueAsString());gmailContact.setEmail(email1.getPropertyValueAsString());}}if (contact.getPersonalDetail().getEmails().size() > 1 && contact.getPersonalDetail().getEmails().get(1) != null) {Email email2 = (Email) contact.getPersonalDetail().getEmails().get(1);if (email2.getPropertyValueAsString() != null && email2.getPropertyValueAsString().equals("""") == false) {if (log.isDebugEnabled()) log.debug(""EMAIL2: "" + email2.getPropertyValueAsString());gmailContact.setEmail2(email2.getPropertyValueAsString());}}}Address address = contact.getPersonalDetail().getAddress();if (address != null) if (address.getStreet() != null) if (address.getStreet().getPropertyValueAsString() != null) {StringBuffer addressBuffer = new StringBuffer();addressBuffer.append(address.getStreet().getPropertyValueAsString()).append("" "");addressBuffer.append(address.getPostalCode().getPropertyValueAsString()).append("" "");addressBuffer.append(address.getCity().getPropertyValueAsString()).append("" "");addressBuffer.append(address.getState().getPropertyValueAsString()).append("" "");addressBuffer.append(address.getCountry().getPropertyValueAsString());if (log.isDebugEnabled()) log.debug(""HOME_ADDRESS: "" + addressBuffer.toString());gmailContact.setHomeAddress(addressBuffer.toString());}Address addressOther = contact.getPersonalDetail().getOtherAddress();if (addressOther != null) if (addressOther.getStreet() != null) if (addressOther.getStreet().getPropertyValueAsString() != null) {StringBuffer addressBuffer = new StringBuffer();addressBuffer.append(addressOther.getStreet().getPropertyValueAsString()).append("" "");addressBuffer.append(addressOther.getPostalCode().getPropertyValueAsString()).append("" "");addressBuffer.append(addressOther.getCity().getPropertyValueAsString()).append("" "");addressBuffer.append(addressOther.getState().getPropertyValueAsString()).append("" "");addressBuffer.append(addressOther.getCountry().getPropertyValueAsString());if (log.isDebugEnabled()) log.debug(""OTHER_ADDRESS: "" + addressBuffer.toString());gmailContact.setOtherAddress(addressBuffer.toString());}if (contact.getPersonalDetail().getPhones() != null && contact.getPersonalDetail().getPhones().size() > 0) {for (int i = 0; i < contact.getPersonalDetail().getPhones().size(); i++) {Phone phone = (Phone) contact.getPersonalDetail().getPhones().get(i);if (log.isDebugEnabled()) log.debug(""PERSONAL_PHONE: "" + phone.getPropertyValueAsString() + "" type:"" + phone.getPhoneType());if (phone.getPhoneType().equals(SIFC.HOME_TELEPHONE_NUMBER) && homePhone == false) {gmailContact.setHomePhone(phone.getPropertyValueAsString());homePhone = true;} else if (phone.getPhoneType().equals(SIFC.HOME2_TELEPHONE_NUMBER) && homePhone2 == false) {gmailContact.setHomePhone2(phone.getPropertyValueAsString());homePhone2 = true;} else if (phone.getPhoneType().equals(SIFC.HOME_FAX_NUMBER) && homeFax == false) {gmailContact.setHomeFax(phone.getPropertyValueAsString());homeFax = true;} else if ((phone.getPhoneType().equals(SIFC.MOBILE_TELEPHONE_NUMBER) || phone.getPhoneType().equals(SIFC.MOBILE_HOME_TELEPHONE_NUMBER)) && homeMobile == false) {gmailContact.setMobilePhone(phone.getPropertyValueAsString());homeMobile = true;} else if (phone.getPhoneType().equals(SIFC.PAGER_NUMBER) && homePager == false) {gmailContact.setPager(phone.getPropertyValueAsString());homePager = true;} else if (phone.getPhoneType().equals(SIFC.OTHER_TELEPHONE_NUMBER) && otherPhone == false) {gmailContact.setOtherPhone(phone.getPropertyValueAsString());otherPhone = true;} else if (phone.getPhoneType().equals(SIFC.OTHER_FAX_NUMBER) && otherFax == false) {gmailContact.setOtherFax(phone.getPropertyValueAsString());otherFax = true;} else {if (log.isDebugEnabled()) log.debug(""GOOGLE - Whoops - Personal Phones UNKNOWN TYPE:"" + phone.getPhoneType() + "" VALUE:"" + phone.getPropertyValueAsString());}}}}if (contact.getBusinessDetail() != null) {if (contact.getBusinessDetail().getEmails() != null && contact.getBusinessDetail().getEmails().size() > 0) {if (contact.getBusinessDetail().getEmails().get(0) != null) {Email email3 = (Email) contact.getBusinessDetail().getEmails().get(0);if (email3.getPropertyValueAsString() != null && email3.getPropertyValueAsString().equals("""") == false) {if (log.isDebugEnabled()) log.debug(""EMAIL3: "" + email3.getPropertyValueAsString());gmailContact.setEmail3(email3.getPropertyValueAsString());}}}Address address = contact.getBusinessDetail().getAddress();if (address != null) if (address.getStreet() != null) if (address.getStreet().getPropertyValueAsString() != null) {StringBuffer addressBuffer = new StringBuffer();addressBuffer.append(address.getStreet().getPropertyValueAsString()).append("" "");addressBuffer.append(address.getPostalCode().getPropertyValueAsString()).append("" "");addressBuffer.append(address.getCity().getPropertyValueAsString()).append("" "");addressBuffer.append(address.getState().getPropertyValueAsString()).append("" "");addressBuffer.append(address.getCountry().getPropertyValueAsString());if (log.isDebugEnabled()) log.debug(""BUSINESS_ADDRESS: "" + addressBuffer.toString());gmailContact.setBusinessAddress(addressBuffer.toString());}if (contact.getBusinessDetail().getPhones() != null && contact.getBusinessDetail().getPhones().size() > 0) {for (int i = 0; i < contact.getBusinessDetail().getPhones().size(); i++) {Phone phone = (Phone) contact.getBusinessDetail().getPhones().get(i);if (log.isDebugEnabled()) log.debug(""BUSINESS_PHONE: "" + phone.getPropertyValueAsString() + "" type:"" + phone.getPhoneType());if (phone.getPhoneType().equals(SIFC.BUSINESS_TELEPHONE_NUMBER) && businessPhone == false) {gmailContact.setBusinessPhone(phone.getPropertyValueAsString());businessPhone = true;} else if (phone.getPhoneType().equals(SIFC.BUSINESS2_TELEPHONE_NUMBER) && businessPhone2 == false) {gmailContact.setBusinessPhone2(phone.getPropertyValueAsString());businessPhone2 = true;} else if (phone.getPhoneType().equals(SIFC.BUSINESS_FAX_NUMBER) && businessFax == false) {gmailContact.setBusinessFax(phone.getPropertyValueAsString());businessFax = true;} else if (phone.getPhoneType().equals(SIFC.MOBILE_BUSINESS_TELEPHONE_NUMBER) && homeMobile == false && businessMobile == false) {gmailContact.setMobilePhone(phone.getPropertyValueAsString());businessMobile = true;} else if (phone.getPhoneType().equals(SIFC.PAGER_NUMBER) && homePager == false && businessPager == false) {gmailContact.setPager(phone.getPropertyValueAsString());businessPager = true;} else {if (log.isDebugEnabled()) log.debug(""GOOGLE - Whoops - Business Phones UNKNOWN TYPE:"" + phone.getPhoneType() + "" VALUE:"" + phone.getPropertyValueAsString());}}}if (contact.getBusinessDetail().getCompany() != null) if (contact.getBusinessDetail().getCompany().getPropertyValueAsString() != null) {if (log.isDebugEnabled()) log.debug(""COMPANY: "" + contact.getBusinessDetail().getCompany().getPropertyValueAsString());gmailContact.setCompany(contact.getBusinessDetail().getCompany().getPropertyValueAsString());}if (contact.getBusinessDetail().getTitles() != null && contact.getBusinessDetail().getTitles().size() > 0) {if (contact.getBusinessDetail().getTitles().get(0) != null) {Title title = (Title) contact.getBusinessDetail().getTitles().get(0);if (log.isDebugEnabled()) log.debug(""TITLE: "" + title.getPropertyValueAsString());gmailContact.setJobTitle(title.getPropertyValueAsString());}}}if (contact.getNotes() != null && contact.getNotes().size() > 0) {if (contact.getNotes().get(0) != null) {Note notes = (Note) contact.getNotes().get(0);if (notes.getPropertyValueAsString() != null && notes.getPropertyValueAsString().equals("""") == false) {if (log.isDebugEnabled()) log.debug(""NOTES: "" + notes.getPropertyValueAsString());gmailContact.setNotes(notes.getPropertyValueAsString());}}}MessageDigest m = MessageDigest.getInstance(""MD5"");m.update(contact.toString().getBytes());gmailContact.setMd5Hash(new BigInteger(m.digest()).toString());return gmailContact;} catch (Exception e) {throw new GmailManagerException(""GOOGLE Gmail - convertContactToGmailContact error: "" + e.getMessage());}}private static void readAndRewrite(File inFile, File outFile) throws IOException {ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);Dataset ds = DcmObjectFactory.getInstance().newDataset();dcmParser.setDcmHandler(ds.getDcmHandler());dcmParser.parseDcmFile(null, Tags.PixelData);PixelDataReader pdReader = pdFact.newReader(ds, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());System.out.println(""reading "" + inFile + ""..."");pdReader.readPixelData(false);ImageOutputStream out = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;ds.writeDataset(out, dcmEncParam);ds.writeHeader(out, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());System.out.println(""writing "" + outFile + ""..."");PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, ds, out, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());pdWriter.writePixelData();out.flush();out.close();System.out.println(""done!"");}"	5
"private InputStream getInputStream(String item) {InputStream is = null;URLConnection urlc = null;try {URL url = new URL(item);urlc = url.openConnection();is = urlc.getInputStream();current_source = url.getProtocol() + ""://"" + url.getHost() + "":"" + url.getPort() + url.getFile();} catch (Exception ee) {System.err.println(ee);}int i = 0;udp_port = -1;udp_baddress = null;while (urlc != null) {String s = urlc.getHeaderField(i);String t = urlc.getHeaderFieldKey(i);if (s == null) {break;}i++;if (""udp-port"".equals(t)) {try {udp_port = Integer.parseInt(s);} catch (Exception e) {}} else if (""udp-broadcast-address"".equals(t)) {udp_baddress = s;}}return is;}@Overridepublic void aggregate() {Connection connection = null;PreparedStatement prestm = null;try {if (logger.isInfoEnabled()) logger.info(""aggregate table <"" + origin + ""> start..."");Class.forName(driver);connection = DriverManager.getConnection(url, username, password);String tableExistsResult = """";prestm = connection.prepareStatement(""show tables from "" + schema + "" like '"" + getDestination() + ""';"");ResultSet rs = prestm.executeQuery();if (rs.next()) tableExistsResult = rs.getString(1);rs.close();prestm.close();if (StringUtils.isBlank(tableExistsResult)) {String createTableSql = """";prestm = connection.prepareStatement(""show create table "" + getOrigin() + "";"");rs = prestm.executeQuery();if (rs.next()) createTableSql = rs.getString(2);rs.close();prestm.close();createTableSql = createTableSql.replaceAll(""`"" + getOrigin() + ""`"", ""`"" + getDestination() + ""`"");createTableSql = createTableSql.replaceAll(""auto_increment"", """");createTableSql = createTableSql.replaceAll(""AUTO_INCREMENT"", """");Matcher matcher = stripRelationTablePattern.matcher(createTableSql);if (matcher.find()) createTableSql = matcher.replaceAll("""");matcher = normalizePattern.matcher(createTableSql);if (matcher.find()) createTableSql = matcher.replaceAll(""\n )"");Statement stm = connection.createStatement();stm.execute(createTableSql);if (logger.isDebugEnabled()) logger.debug(""table '"" + getDestination() + ""' created!"");} else if (logger.isDebugEnabled()) logger.debug(""table '"" + getDestination() + ""' already exists"");long currentRows = 0L;prestm = connection.prepareStatement(""select count(*) from "" + origin);rs = prestm.executeQuery();if (rs.next()) currentRows = rs.getLong(1);rs.close();prestm.close();if (logger.isInfoEnabled()) logger.info(""found "" + currentRows + "" record"");prestm = connection.prepareStatement(""select max(d_insDate) from "" + destination);rs = prestm.executeQuery();Date from = null;if (rs.next()) from = rs.getTimestamp(1);rs.close();prestm.close();SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");String fromStr = null;if (from != null) fromStr = sdf.format(from);if (logger.isInfoEnabled()) logger.info(""last record date:"" + fromStr);if (currentRows > 0) {connection.setAutoCommit(false);if (from != null && fromStr != null) {prestm = connection.prepareStatement(""INSERT INTO "" + destination + "" SELECT * FROM "" + origin + "" WHERE d_insDate > '"" + fromStr + ""'"");if (logger.isDebugEnabled()) logger.debug(""Query: INSERT INTO "" + destination + "" SELECT * FROM "" + origin + "" WHERE d_insDate > '"" + fromStr + ""'"");} else {prestm = connection.prepareStatement(""INSERT INTO "" + destination + "" SELECT * FROM "" + origin);if (logger.isDebugEnabled()) logger.debug(""Query: INSERT INTO "" + destination + "" SELECT * FROM "" + origin);}int rows = prestm.executeUpdate();prestm.close();if (logger.isInfoEnabled()) logger.info("" > "" + rows + "" rows aggregated"");connection.commit();} else if (logger.isInfoEnabled()) logger.info(""no aggregation need"");if (logger.isInfoEnabled()) logger.info(""aggregate table "" + origin + "" end"");} catch (SQLException e) {logger.error(e, e);if (applicationContext != null) applicationContext.publishEvent(new TrapEvent(this, ""dbcon"", ""Errore SQL durante l'aggregazione dei dati della tabella "" + origin, e));try {connection.rollback();} catch (SQLException e1) {}} catch (Throwable e) {logger.error(e, e);if (applicationContext != null) applicationContext.publishEvent(new TrapEvent(this, ""generic"", ""Errore generico durante l'aggregazione dei dati della tabella "" + origin, e));try {connection.rollback();} catch (SQLException e1) {}} finally {try {if (prestm != null) prestm.close();} catch (SQLException e) {}try {if (connection != null) connection.close();} catch (SQLException e) {}}}private ImageReader findImageReader(URL url) {ImageInputStream input = null;try {input = ImageIO.createImageInputStream(url.openStream());} catch (IOException e) {logger.log(Level.WARNING, ""zly adres URL obrazka "" + url, e);}ImageReader reader = null;if (input != null) {Iterator readers = ImageIO.getImageReaders(input);while ((reader == null) && (readers != null) && readers.hasNext()) {reader = (ImageReader) readers.next();}reader.setInput(input);}return reader;}public static void TestDBStore() throws PDException, Exception {StoreDDBB StDB = new StoreDDBB(""jdbc:derby://localhost:1527/Prodoc"", ""Prodoc"", ""Prodoc"", ""org.apache.derby.jdbc.ClientDriver;STBLOB"");System.out.println(""Driver["" + StDB.getDriver() + ""] Tabla  ["" + StDB.getTable() + ""]"");StDB.Connect();FileInputStream in = new FileInputStream(""/tmp/readme.htm"");StDB.Insert(""12345678-1"", ""1.0"", in);int TAMBUFF = 1024 * 64;byte Buffer[] = new byte[TAMBUFF];InputStream Bytes;Bytes = StDB.Retrieve(""12345678-1"", ""1.0"");FileOutputStream fo = new FileOutputStream(""/tmp/12345679.htm"");int readed = Bytes.read(Buffer);while (readed != -1) {fo.write(Buffer, 0, readed);readed = Bytes.read(Buffer);}Bytes.close();fo.close();StDB.Delete(""12345678-1"", ""1.0"");StDB.Disconnect();}public Object send(URL url, Object params) throws Exception {params = processRequest(params);String response = """";BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));response += in.readLine();while (response != null) response += in.readLine();in.close();return processResponse(response);}public int batchTransactionUpdate(List<String> queryStrLisyt, Connection con) throws Exception {int ret = 0;Statement stmt;if (con != null) {con.setAutoCommit(false);stmt = con.createStatement();try {stmt.executeUpdate(""START TRANSACTION;"");for (int i = 0; i < queryStrLisyt.size(); i++) {stmt.addBatch(queryStrLisyt.get(i));}int[] updateCounts = stmt.executeBatch();for (int i = 0; i < updateCounts.length; i++) {FileLogger.debug(""batch update result:"" + updateCounts[i] + "", Statement.SUCCESS_NO_INFO"" + Statement.SUCCESS_NO_INFO);if (updateCounts[i] == Statement.SUCCESS_NO_INFO || updateCounts[i] > 0) {ret++;} else if (updateCounts[i] == Statement.EXECUTE_FAILED) ;{throw new Exception(""query failed, while process batch update"");}}con.commit();} catch (Exception e) {ret = 0;FileLogger.debug(e.getMessage());con.rollback();} finally {con.setAutoCommit(true);stmt.close();}}return ret;}public static String generateSig(Map<String, String> params, String secret) {SortedSet<String> keys = new TreeSet<String>(params.keySet());keys.remove(FacebookParam.SIGNATURE.toString());String str = """";for (String key : keys) {str += key + ""="" + params.get(key);}str += secret;try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(str.getBytes(""UTF-8""));StringBuilder result = new StringBuilder();for (byte b : md.digest()) {result.append(Integer.toHexString((b & 0xf0) >>> 4));result.append(Integer.toHexString(b & 0x0f));}return result.toString();} catch (Exception e) {throw new RuntimeException(e);}}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}private ArrayList execAtParentServer(ArrayList paramList) throws Exception {ArrayList outputList = null;String message = """";try {HashMap serverUrlMap = InitXml.getInstance().getServerMap();Iterator it = serverUrlMap.keySet().iterator();while (it.hasNext()) {String server = (String) it.next();String serverUrl = (String) serverUrlMap.get(server);serverUrl = serverUrl + Primer3Manager.servletName;URL url = new URL(serverUrl);URLConnection uc = url.openConnection();uc.setDoOutput(true);OutputStream os = uc.getOutputStream();StringBuffer buf = new StringBuffer();buf.append(""actionType=designparent"");for (int i = 0; i < paramList.size(); i++) {Primer3Param param = (Primer3Param) paramList.get(i);if (i == 0) {buf.append(""&sequence="" + param.getSequence());buf.append(""&upstream_size"" + upstreamSize);buf.append(""&downstreamSize"" + downstreamSize);buf.append(""&MARGIN_LENGTH="" + marginLength);buf.append(""&OVERLAP_LENGTH="" + overlapLength);buf.append(""&MUST_XLATE_PRODUCT_MIN_SIZE="" + param.getPrimerProductMinSize());buf.append(""&MUST_XLATE_PRODUCT_MAX_SIZE="" + param.getPrimerProductMaxSize());buf.append(""&PRIMER_PRODUCT_OPT_SIZE="" + param.getPrimerProductOptSize());buf.append(""&PRIMER_MAX_END_STABILITY="" + param.getPrimerMaxEndStability());buf.append(""&PRIMER_MAX_MISPRIMING="" + param.getPrimerMaxMispriming());buf.append(""&PRIMER_PAIR_MAX_MISPRIMING="" + param.getPrimerPairMaxMispriming());buf.append(""&PRIMER_MIN_SIZE="" + param.getPrimerMinSize());buf.append(""&PRIMER_OPT_SIZE="" + param.getPrimerOptSize());buf.append(""&PRIMER_MAX_SIZE="" + param.getPrimerMaxSize());buf.append(""&PRIMER_MIN_TM="" + param.getPrimerMinTm());buf.append(""&PRIMER_OPT_TM="" + param.getPrimerOptTm());buf.append(""&PRIMER_MAX_TM="" + param.getPrimerMaxTm());buf.append(""&PRIMER_MAX_DIFF_TM="" + param.getPrimerMaxDiffTm());buf.append(""&PRIMER_MIN_GC="" + param.getPrimerMinGc());buf.append(""&PRIMER_OPT_GC_PERCENT="" + param.getPrimerOptGcPercent());buf.append(""&PRIMER_MAX_GC="" + param.getPrimerMaxGc());buf.append(""&PRIMER_SELF_ANY="" + param.getPrimerSelfAny());buf.append(""&PRIMER_SELF_END="" + param.getPrimerSelfEnd());buf.append(""&PRIMER_NUM_NS_ACCEPTED="" + param.getPrimerNumNsAccepted());buf.append(""&PRIMER_MAX_POLY_X="" + param.getPrimerMaxPolyX());buf.append(""&PRIMER_GC_CLAMP="" + param.getPrimerGcClamp());}buf.append(""&target="" + param.getPrimerSequenceId() + "","" + (param.getTarget())[0] + "","" + (param.getTarget())[1]);}PrintStream ps = new PrintStream(os);ps.print(buf.toString());ps.close();ObjectInputStream ois = new ObjectInputStream(uc.getInputStream());outputList = (ArrayList) ois.readObject();ois.close();}} catch (IOException e1) {e1.printStackTrace();}if ((outputList == null || outputList.size() == 0) && message != null && message.length() > 0) {throw new Exception(message);}return outputList;}public DownloadThread call() throws UpdateModException {try {Thread.currentThread().setName(""Download - "" + modName);if (url != null) {URL urls = new URL(this.url);URLConnection connection = urls.openConnection();connection.setConnectTimeout(7500);InputStream is = urls.openStream();String filename = null;if (path == null || path.isEmpty()) {String pattern = ""[^a-z,A-Z,0-9, ,.]"";filename = this.url.substring(this.url.lastIndexOf(""/"") + 1).replace(""%20"", "" "");filename = filename.replaceAll(pattern, """");} else {filename = path;}FileOutputStream fos = null;file = new File(System.getProperty(""java.io.tmpdir"") + File.separator + filename);fos = new FileOutputStream(file, false);FileUtils.copyInputStream(is, fos);is.close();fos.flush();fos.close();}} catch (MalformedURLException ex) {System.out.println(ex);file = null;throw new UpdateModException(null, ex);} catch (ConnectException ex) {System.out.println(ex);file = null;throw new UpdateModException(null, ex);} catch (NullPointerException ex) {System.out.println(ex);file = null;throw new UpdateModException(null, ex);} catch (InvalidParameterException ex) {System.out.println(ex);file = null;throw new UpdateModException(null, ex);} catch (FileNotFoundException ex) {System.out.println(ex);file = null;throw new UpdateModException(null, ex);} catch (IOException ex) {System.out.println(ex);file = null;throw new UpdateModException(null, ex);}return this;}"	5
"private static String scramble(String text) {try {MessageDigest md = MessageDigest.getInstance(""SHA-1"");md.update(text.getBytes(""UTF-8""));StringBuffer sb = new StringBuffer();for (byte b : md.digest()) sb.append(Integer.toString(b & 0xFF, 16));return sb.toString();} catch (UnsupportedEncodingException e) {return null;} catch (NoSuchAlgorithmException e) {return null;}}public void makeRead(String user, long databaseID, long time) throws SQLException {String query = ""replace into fs.read_post (post, user, read_date) values (?, ?, ?)"";ensureConnection();PreparedStatement statement = m_connection.prepareStatement(query);try {statement.setLong(1, databaseID);statement.setString(2, user);statement.setTimestamp(3, new Timestamp(time));int count = statement.executeUpdate();if (0 == count) throw new SQLException(""Nothing updated."");m_connection.commit();} catch (SQLException e) {m_connection.rollback();throw e;} finally {statement.close();}}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public String getMarketInfo() {try {URL url = new URL(""http://api.eve-central.com/api/evemon"");BufferedReader s = new BufferedReader(new InputStreamReader(url.openStream()));String line = """";String xml = """";while ((line = s.readLine()) != null) {xml += line;}return xml;} catch (IOException ex) {ex.printStackTrace();}return null;}public static String encrypt(String x) throws Exception {MessageDigest mdEnc = MessageDigest.getInstance(""SHA-1"");mdEnc.update(x.getBytes(), 0, x.length());String md5 = new BigInteger(1, mdEnc.digest()).toString(16);return md5;}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = random.nextLong();}sbValueBeforeMD5.append(sid);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {}}public static boolean downloadFile(String srcUri, String srcDest) {try {URL url = new URL(srcUri);InputStream is = url.openStream();BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(srcDest));byte[] buff = new byte[10000];int b;while ((b = is.read(buff)) > 0) bos.write(buff, 0, b);is.close();bos.close();} catch (Exception e) {e.printStackTrace();return false;}return true;}public static String getByUrl(String urlStr, String para) {URL url;StringBuffer html = new StringBuffer("""");try {url = new URL(urlStr);HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.setRequestMethod(""POST"");connection.setDoOutput(true);OutputStreamWriter out = new OutputStreamWriter(connection.getOutputStream(), ""8859_1"");out.write(para);out.flush();out.close();System.out.println(""para:"" + para);InputStream is = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(is));String line = """";line = br.readLine();while (line != null) {html.append(line + ""\n"");line = br.readLine();}} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return html.toString();}private String encode(String arg) {try {final MessageDigest digest = MessageDigest.getInstance(""MD5"");digest.update(arg.getBytes());byte[] md5sum = digest.digest();final BigInteger bigInt = new BigInteger(1, md5sum);final String output = bigInt.toString(16);return output;} catch (NoSuchAlgorithmException e) {throw new IllegalStateException(""MD5 required: "" + e.getMessage(), e);}}"	5
"public void init() {System.out.println(""Init applet..."");int port = Integer.parseInt(getParameter(""port""));int useUDP = Integer.parseInt(getParameter(""udp""));boolean bUseUDP = false;if (useUDP > 0) bUseUDP = true;m_strWorld = getParameter(""world"");m_strHost = this.getCodeBase().getHost();try {new EnvironmentMap(getParameter(""vrwmap""));} catch (Throwable t) {System.out.println(t.getMessage());}URL urlExperiment = null;InputStream expStream = null;try {String strPathExperiment = getParameter(""experiment"");if (strPathExperiment.length() > 0) {urlExperiment = new URL(getCodeBase(), strPathExperiment);expStream = urlExperiment.openStream();}} catch (java.net.MalformedURLException e) {System.out.println(""Couldn't open url experiment: badly specified URL "" + e.getMessage());} catch (Throwable t) {System.out.println(""Couldn't open url experiment: "" + t.getMessage());}try {System.out.println(""Creating client, logging to "" + m_strWorld);m_VRWClient = new VRWClient(m_strHost, port, true, bUseUDP);m_VRWClient.setInApplet(true);m_VRWClient.login(m_strWorld);} catch (java.io.IOException e) {System.out.println(""IOException creating the VRWClient"");}try {jsobj = JSObject.getWindow(this);} catch (Throwable t) {System.out.println(""Exception getting Java Script Interface: "" + t.getMessage());}refApplet = this;m_frmVRWConsole = new VRWConsoleFrame();m_frmVRWConsole.setTitle(""VRW Client Console"");m_frmVRWConsole.pack();m_frmVRWConsole.setSize(Math.max(300, m_frmVRWConsole.getSize().width), Math.max(200, m_frmVRWConsole.getSize().height));if (expStream != null) {System.out.println(""Passing experiment stream to VRWConsoleFrame"");m_frmVRWConsole.loadExperiment(expStream);}m_frmVRWConsole.setVisible(true);}public static void main(final String[] args) throws RecognitionException, TokenStreamException, IOException, IllegalOptionValueException, UnknownOptionException {try {CmdLineParser cmdLineParser = new CmdLineParser();Option formatOption = cmdLineParser.addStringOption('f', ""format"");Option encodingOption = cmdLineParser.addStringOption('c', ""charset"");cmdLineParser.parse(args);String format = (String) cmdLineParser.getOptionValue(formatOption);String encoding = (String) cmdLineParser.getOptionValue(encodingOption);if (encoding == null || encoding.trim().equals("""")) {encoding = ""utf-8"";System.out.println(""Defaulting to output charset utf-8 as argument -c is missing or not valid."");}String[] remainingArgs = cmdLineParser.getRemainingArgs();if (remainingArgs.length != 2) {printUsage(""Input and output file are not specified correctly. "");}File inputFile = new File(remainingArgs[0]);if (!inputFile.exists()) {printUsage(""Input file "" + remainingArgs[0] + "" does not exist. "");}File outputFile = new File(remainingArgs[1]);if (!outputFile.exists()) {outputFile.createNewFile();}if (format == null || format.trim().equals("""")) {format = (String) FileUtil.cutExtension(outputFile.getName()).getValue();}if (""tex"".equals(format)) {Reader reader = new LatexEncoderReader(new FileReader(inputFile));OutputStreamWriter out = new OutputStreamWriter(new FileOutputStream(outputFile), encoding);char[] buffer = new char[1024];int read;do {read = reader.read(buffer);if (read > 0) {out.write(buffer, 0, read);}} while (read != -1);out.flush();out.close();} else {printUsage(""Format not specified via argument -f. Also guessing for the extension of output file "" + outputFile.getName() + "" failed"");}} catch (Exception ex) {ex.printStackTrace();printUsage(ex.getMessage());}}private SystemProperties() {Properties p = new Properties();ClassLoader classLoader = getClass().getClassLoader();try {URL url = classLoader.getResource(""system.properties"");if (url != null) {InputStream is = url.openStream();p.load(is);is.close();System.out.println(""Loading "" + url);}} catch (Exception e) {e.printStackTrace();}try {URL url = classLoader.getResource(""system-ext.properties"");if (url != null) {InputStream is = url.openStream();p.load(is);is.close();System.out.println(""Loading "" + url);}} catch (Exception e) {e.printStackTrace();}boolean systemPropertiesLoad = GetterUtil.get(System.getProperty(SYSTEM_PROPERTIES_LOAD), true);boolean systemPropertiesFinal = GetterUtil.get(System.getProperty(SYSTEM_PROPERTIES_FINAL), true);if (systemPropertiesLoad) {Enumeration enu = p.propertyNames();while (enu.hasMoreElements()) {String key = (String) enu.nextElement();if (systemPropertiesFinal || Validator.isNull(System.getProperty(key))) {System.setProperty(key, (String) p.get(key));}}}PropertiesUtil.fromProperties(p, _props);}public static void uploadFile(File in, String out, String host, int port, String path, String login, String password, boolean renameIfExist) throws IOException {FTPClient ftp = null;try {m_logCat.info(""Uploading "" + in + "" to "" + host + "":"" + port + "" at "" + path);ftp = new FTPClient();int reply;ftp.connect(host, port);m_logCat.info(""Connected to "" + host + ""... Trying to authenticate"");reply = ftp.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {ftp.disconnect();m_logCat.error(""FTP server "" + host + "" refused connection."");throw new IOException(""Cannot connect to the FTP Server: connection refused."");}if (!ftp.login(login, password)) {ftp.logout();throw new IOException(""Cannot connect to the FTP Server: login / password is invalid!"");}ftp.setFileType(FTP.BINARY_FILE_TYPE);if (!ftp.changeWorkingDirectory(path)) {m_logCat.warn(""Remote working directory: "" + path + ""does not exist on the FTP Server ..."");m_logCat.info(""Trying to create remote directory: "" + path);if (!ftp.makeDirectory(path)) {m_logCat.error(""Failed to create remote directory: "" + path);throw new IOException(""Failed to store "" + in + "" in the remote directory: "" + path);}if (!ftp.changeWorkingDirectory(path)) {m_logCat.error(""Failed to change directory. Unexpected error"");throw new IOException(""Failed to change to remote directory : "" + path);}}if (out == null) {out = in.getName();if (out.startsWith(""/"")) {out = out.substring(1);}}if (renameIfExist) {String[] files = ftp.listNames();String f = in + out;for (int i = 0; i < files.length; i++) {if (files[i].equals(out)) {m_logCat.debug(""Found existing file on the server: "" + out);boolean rename_ok = false;String bak = ""_bak"";int j = 0;String newExt = null;while (!rename_ok) {if (j == 0) newExt = bak; else newExt = bak + j;if (ftp.rename(out, out + newExt)) {m_logCat.info(out + "" renamed to "" + out + newExt);rename_ok = true;} else {m_logCat.warn(""Renaming to "" + out + newExt + "" has failed!, trying again ..."");j++;}}break;}}}InputStream input = new FileInputStream(in);m_logCat.info(""Starting transfert of "" + in);ftp.storeFile(out, input);m_logCat.info(in + "" uploaded successfully"");input.close();ftp.logout();} catch (FTPConnectionClosedException e) {m_logCat.error(""Server closed connection."", e);} finally {if (ftp.isConnected()) {try {ftp.disconnect();} catch (IOException f) {}}}}public void convert(File src, File dest) throws IOException {InputStream in = new BufferedInputStream(new FileInputStream(src));DcmParser p = pfact.newDcmParser(in);Dataset ds = fact.newDataset();p.setDcmHandler(ds.getDcmHandler());try {FileFormat format = p.detectFileFormat();if (format != FileFormat.ACRNEMA_STREAM) {System.out.println(""\n"" + src + "": not an ACRNEMA stream!"");return;}p.parseDcmFile(format, Tags.PixelData);if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {System.out.println(""\n"" + src + "": contains UIDs!"" + "" => probable already DICOM - do not convert"");return;}boolean hasPixelData = p.getReadTag() == Tags.PixelData;boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;int pxlen = p.getReadLength();if (hasPixelData) {if (inflate) {ds.putUS(Tags.BitsAllocated, 16);pxlen = pxlen * 4 / 3;}if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {System.out.println(""\n"" + src + "": mismatch pixel data length!"" + "" => do not convert"");return;}}ds.putUI(Tags.StudyInstanceUID, uid(studyUID));ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));ds.putUI(Tags.SOPInstanceUID, uid(instUID));ds.putUI(Tags.SOPClassUID, classUID);if (!ds.contains(Tags.NumberOfSamples)) {ds.putUS(Tags.NumberOfSamples, 1);}if (!ds.contains(Tags.PhotometricInterpretation)) {ds.putCS(Tags.PhotometricInterpretation, ""MONOCHROME2"");}if (fmi) {ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));}OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));try {} finally {ds.writeFile(out, encodeParam());if (hasPixelData) {if (!skipGroupLen) {out.write(PXDATA_GROUPLEN);int grlen = pxlen + 8;out.write((byte) grlen);out.write((byte) (grlen >> 8));out.write((byte) (grlen >> 16));out.write((byte) (grlen >> 24));}out.write(PXDATA_TAG);out.write((byte) pxlen);out.write((byte) (pxlen >> 8));out.write((byte) (pxlen >> 16));out.write((byte) (pxlen >> 24));}if (inflate) {int b2, b3;for (; pxlen > 0; pxlen -= 3) {out.write(in.read());b2 = in.read();b3 = in.read();out.write(b2 & 0x0f);out.write(b2 >> 4 | ((b3 & 0x0f) << 4));out.write(b3 >> 4);}} else {for (; pxlen > 0; --pxlen) {out.write(in.read());}}out.close();}System.out.print('.');} finally {in.close();}}public static String encryptPassword(String password) throws NoSuchAlgorithmException, UnsupportedEncodingException {final MessageDigest digester = MessageDigest.getInstance(""sha-256"");digester.reset();digester.update(""Carmen Sandiago"".getBytes());return asHex(digester.digest(password.getBytes(""UTF-8"")));}private static String func(String sf) {int total = 0, temp;String fnctn[] = { ""sin"", ""cos"", ""tan"", ""log"", ""ln"", ""sqrt"", ""!"" }, temp2 = """";int pos[] = new int[7];for (int n = 0; n < fnctn.length; n++) {pos[n] = sf.lastIndexOf(fnctn[n]);}for (int m = 0; m < fnctn.length; m++) {total += pos[m];}if (total == -7) {return sf;}for (int i = pos.length; i > 1; i--) {for (int j = 0; j < i - 1; j++) {if (pos[j] < pos[j + 1]) {temp = pos[j];pos[j] = pos[j + 1];pos[j + 1] = temp;temp2 = fnctn[j];fnctn[j] = fnctn[j + 1];fnctn[j + 1] = temp2;}}}if (fnctn[0].equals(""sin"")) {if ((pos[0] == 0 || sf.charAt(pos[0] - 1) != 'a')) {return func(Functions.sine(sf, pos[0], false));} else {return func(Functions.asin(sf, pos[0], false));}} else if (fnctn[0].equals(""cos"")) {if ((pos[0] == 0 || sf.charAt(pos[0] - 1) != 'a')) {return func(Functions.cosine(sf, pos[0], false));} else {return func(Functions.acos(sf, pos[0], false));}} else if (fnctn[0].equals(""tan"")) {if ((pos[0] == 0 || sf.charAt(pos[0] - 1) != 'a')) {return func(Functions.tangent(sf, pos[0], false));} else {return func(Functions.atan(sf, pos[0], false));}} else if (fnctn[0].equals(""log"")) {return func(Functions.logarithm(sf, pos[0]));} else if (fnctn[0].equals(""ln"")) {return func(Functions.lnat(sf, pos[0]));} else if (fnctn[0].equals(""sqrt"")) {return func(Functions.sqroot(sf, pos[0]));} else {return func(Functions.factorial(sf, pos[0]));}}@SuppressWarnings(""null"")public static void copyFile(File src, File dst) throws IOException {if (!dst.getParentFile().exists()) {dst.getParentFile().mkdirs();}dst.createNewFile();FileChannel srcC = null;FileChannel dstC = null;try {srcC = new FileInputStream(src).getChannel();dstC = new FileOutputStream(dst).getChannel();dstC.transferFrom(srcC, 0, srcC.size());} finally {try {if (dst != null) {dstC.close();}} catch (Exception e) {e.printStackTrace();}try {if (src != null) {srcC.close();}} catch (Exception e) {e.printStackTrace();}}}public static void unzip(File sourceZipFile, File unzipDestinationDirectory, FileFilter filter) throws IOException {unzipDestinationDirectory.mkdirs();if (!unzipDestinationDirectory.exists()) {throw new IOException(""Unable to create destination directory: "" + unzipDestinationDirectory);}ZipFile zipFile;zipFile = new ZipFile(sourceZipFile, ZipFile.OPEN_READ);Enumeration<? extends ZipEntry> zipFileEntries = zipFile.entries();while (zipFileEntries.hasMoreElements()) {ZipEntry entry = (ZipEntry) zipFileEntries.nextElement();if (!entry.isDirectory()) {String currentEntry = entry.getName();File destFile = new File(unzipDestinationDirectory, currentEntry);if (filter == null || filter.accept(destFile)) {File destinationParent = destFile.getParentFile();destinationParent.mkdirs();BufferedInputStream is = new BufferedInputStream(zipFile.getInputStream(entry));FileOutputStream fos = new FileOutputStream(destFile);IOUtils.copyLarge(is, fos);fos.flush();IOUtils.closeQuietly(fos);}}}zipFile.close();}public static void zip(File srcDir, File destFile, FileFilter filter) throws IOException {ZipOutputStream out = null;try {out = new ZipOutputStream(new FileOutputStream(destFile));Collection<File> files = FileUtils.listFiles(srcDir, TrueFileFilter.TRUE, TrueFileFilter.TRUE);for (File f : files) {if (filter == null || filter.accept(f)) {FileInputStream in = FileUtils.openInputStream(f);out.putNextEntry(new ZipEntry(Util.relativePath(srcDir, f).replace('\\', '/')));IOUtils.copyLarge(in, out);out.closeEntry();IOUtils.closeQuietly(in);}}IOUtils.closeQuietly(out);} catch (Throwable t) {throw new IOException(""Failed to create zip file"", t);} finally {if (out != null) {out.flush();IOUtils.closeQuietly(out);}}}"	5
"public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}private void loadDefaultDrivers() {final URL url = _app.getResources().getDefaultDriversUrl();try {InputStreamReader isr = new InputStreamReader(url.openStream());try {_cache.load(isr);} finally {isr.close();}} catch (Exception ex) {final Logger logger = _app.getLogger();logger.showMessage(Logger.ILogTypes.ERROR, ""Error loading default driver file: "" + url != null ? url.toExternalForm() : """");logger.showMessage(Logger.ILogTypes.ERROR, ex);}}public void run() {Thread.currentThread().setName(""zhongwen.com watcher"");String url = getURL();try {while (m_shouldBeRunning) {try {BufferedReader reader = new BufferedReader(new InputStreamReader(new URL(url).openStream(), ""ISO8859_1""));String line;Vector chatLines = new Vector();boolean startGrabbing = false;while ((line = reader.readLine()) != null) {if (line.indexOf(""</style>"") >= 0) {startGrabbing = true;} else if (startGrabbing) {if (line.equals(m_mostRecentKnownLine)) {break;}chatLines.addElement(line);}}reader.close();for (int i = chatLines.size() - 1; i >= 0; --i) {String chatLine = (String) chatLines.elementAt(i);m_mostRecentKnownLine = chatLine;if (chatLine.indexOf("":"") >= 0) {String from = chatLine.substring(0, chatLine.indexOf("":""));String message = stripTags(chatLine.substring(chatLine.indexOf("":"")));m_source.pushMessage(new ZhongWenMessage(m_source, from, message));} else {m_source.pushMessage(new ZhongWenMessage(m_source, null, stripTags(chatLine)));}}Thread.sleep(SLEEP_TIME);} catch (InterruptedIOException e) {} catch (InterruptedException e) {}}} catch (UnsupportedEncodingException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();} catch (RuntimeException e) {m_source.disconnect();throw e;} catch (Error e) {m_source.disconnect();throw e;}}public static Document ByURL(String urlstr) throws IOException {String uri = urlstr;URL url = new URL(uri);URLConnection connection = url.openConnection();InputStream in = connection.getInputStream();Reader reader = new InputStreamReader(in);InputSource is = new InputSourceImpl(reader, uri);System.out.println(is.toString());Document document = new Document() {@Overridepublic Node adoptNode(Node source) throws DOMException {return null;}@Overridepublic Attr createAttribute(String name) throws DOMException {return null;}@Overridepublic Attr createAttributeNS(String namespaceURI, String qualifiedName) throws DOMException {return null;}@Overridepublic CDATASection createCDATASection(String data) throws DOMException {return null;}@Overridepublic Comment createComment(String data) {return null;}@Overridepublic DocumentFragment createDocumentFragment() {return null;}@Overridepublic Element createElement(String tagName) throws DOMException {return null;}@Overridepublic Element createElementNS(String namespaceURI, String qualifiedName) throws DOMException {return null;}@Overridepublic EntityReference createEntityReference(String name) throws DOMException {return null;}@Overridepublic ProcessingInstruction createProcessingInstruction(String target, String data) throws DOMException {return null;}@Overridepublic Text createTextNode(String data) {return null;}@Overridepublic DocumentType getDoctype() {return null;}@Overridepublic Element getDocumentElement() {return null;}@Overridepublic String getDocumentURI() {return null;}@Overridepublic DOMConfiguration getDomConfig() {return null;}@Overridepublic Element getElementById(String elementId) {return null;}@Overridepublic NodeList getElementsByTagName(String tagname) {return null;}@Overridepublic NodeList getElementsByTagNameNS(String namespaceURI, String localName) {return null;}@Overridepublic DOMImplementation getImplementation() {return null;}@Overridepublic String getInputEncoding() {return null;}@Overridepublic boolean getStrictErrorChecking() {return false;}@Overridepublic String getXmlEncoding() {return null;}@Overridepublic boolean getXmlStandalone() {return false;}@Overridepublic String getXmlVersion() {return null;}@Overridepublic Node importNode(Node importedNode, boolean deep) throws DOMException {return null;}@Overridepublic void normalizeDocument() {}@Overridepublic Node renameNode(Node n, String namespaceURI, String qualifiedName) throws DOMException {return null;}@Overridepublic void setDocumentURI(String documentURI) {}@Overridepublic void setStrictErrorChecking(boolean strictErrorChecking) {}@Overridepublic void setXmlStandalone(boolean xmlStandalone) throws DOMException {}@Overridepublic void setXmlVersion(String xmlVersion) throws DOMException {}public Node appendChild(Node arg0) throws DOMException {return null;}public Node cloneNode(boolean arg0) {return null;}public short compareDocumentPosition(Node arg0) throws DOMException {return 0;}public NamedNodeMap getAttributes() {return null;}public String getBaseURI() {return null;}public NodeList getChildNodes() {return null;}public Object getFeature(String arg0, String arg1) {return null;}public Node getFirstChild() {return null;}public Node getLastChild() {return null;}public String getLocalName() {return null;}public String getNamespaceURI() {return null;}public Node getNextSibling() {return null;}public String getNodeName() {return null;}public short getNodeType() {return 0;}public String getNodeValue() throws DOMException {return null;}public Document getOwnerDocument() {return null;}public Node getParentNode() {return null;}public String getPrefix() {return null;}public Node getPreviousSibling() {return null;}public String getTextContent() throws DOMException {return null;}public Object getUserData(String arg0) {return null;}public boolean hasAttributes() {return false;}public boolean hasChildNodes() {return false;}public Node insertBefore(Node arg0, Node arg1) throws DOMException {return null;}public boolean isDefaultNamespace(String arg0) {return false;}public boolean isEqualNode(Node arg0) {return false;}public boolean isSameNode(Node arg0) {return false;}public boolean isSupported(String arg0, String arg1) {return false;}public String lookupNamespaceURI(String arg0) {return null;}public String lookupPrefix(String arg0) {return null;}public void normalize() {}public Node removeChild(Node arg0) throws DOMException {return null;}public Node replaceChild(Node arg0, Node arg1) throws DOMException {return null;}public void setNodeValue(String arg0) throws DOMException {}public void setPrefix(String arg0) throws DOMException {}public void setTextContent(String arg0) throws DOMException {}public Object setUserData(String arg0, Object arg1, UserDataHandler arg2) {return null;}};return document;}private static void extract(ZipFile zipFile) throws Exception {FileUtils.deleteQuietly(WEBKIT_DIR);WEBKIT_DIR.mkdirs();Enumeration<? extends ZipEntry> entries = zipFile.entries();while (entries.hasMoreElements()) {ZipEntry entry = entries.nextElement();if (entry.isDirectory()) {new File(WEBKIT_DIR, entry.getName()).mkdirs();continue;}InputStream inputStream = zipFile.getInputStream(entry);File outputFile = new File(WEBKIT_DIR, entry.getName());FileOutputStream outputStream = new FileOutputStream(outputFile);IOUtils.copy(inputStream, outputStream);IOUtils.closeQuietly(inputStream);IOUtils.closeQuietly(outputStream);}}private File writeResourceToFile(String resource) throws IOException {File tmp = File.createTempFile(""zfppt"" + resource, null);InputStream res = Thread.currentThread().getContextClassLoader().getResourceAsStream(resource);OutputStream out = new FileOutputStream(tmp);IOUtils.copy(res, out);out.close();return tmp;}private void streamContains(String in, InputStream stream) throws IOException {ByteArrayOutputStream baos = new ByteArrayOutputStream();IOUtils.copy(stream, baos);byte[] bytes = baos.toByteArray();String cmp = new String(bytes, ""UTF-8"");assertTrue(cmp.contains(in));baos.close();}private void checkInputStream(InputStream in, byte[] cmp, boolean all) throws IOException {ByteArrayOutputStream stream = new ByteArrayOutputStream();IOUtils.copy(in, stream);byte[] out = stream.toByteArray();if (all) assertEquals(cmp.length, out.length);for (int i = 0; i < cmp.length; i++) assertEquals(cmp[i], out[i]);}public void write(File file) throws Exception {if (getGEDCOMFile() != null) {size = getGEDCOMFile().length();if (!getGEDCOMFile().renameTo(file)) {BufferedInputStream in = null;BufferedOutputStream out = null;try {in = new BufferedInputStream(new FileInputStream(getGEDCOMFile()));out = new BufferedOutputStream(new FileOutputStream(file));IOUtils.copy(in, out);} finally {if (in != null) {try {in.close();} catch (IOException e) {}}if (out != null) {try {out.close();} catch (IOException e) {}}}}} else {throw new FileUploadException(""Cannot write uploaded file to disk!"");}}"	5
"public void run() {try {if (sync == SyncType.SyncSpaced || sync == SyncType.Spaced) {Thread.sleep(spaceMillis);}URL url = new URL(surl + ""&requestId="" + runnumber);long t0 = System.currentTimeMillis();InputStream in = url.openStream();transfer(in, new FileOutputStream(new File(outputFolder, """" + runnumber + "".png"")));BufferedImage image = ImageIO.read(new File(outputFolder, """" + runnumber + "".png""));status.score(runnumber, System.currentTimeMillis() - t0);ImageIO.write(image, ""png"", new FileOutputStream(new File(outputFolder, """" + runnumber + "".png"")));if (false) {int whiteCount = 0;for (int i = 0; i < image.getWidth(); i++) {for (int j = 0; j < image.getHeight(); j++) {whiteCount += image.getRGB(i, j) == -1 ? 1 : 0;}}System.err.println(""##"" + runnumber + ""#: "" + whiteCount);if (whiteCount < 227564) {System.err.println(""whiteCount fails!!!!"");System.err.println(""whiteCount fails!!!!"");System.exit(0);}}} catch (Exception ex) {System.err.println(""##"" + runnumber + ""#: Exception!!! ###"");ex.printStackTrace();status.score(runnumber, -999);}}@SuppressWarnings(""unused"")private String getMD5(String value) {MessageDigest md5;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {return """";}md5.reset();md5.update(value.getBytes());byte[] messageDigest = md5.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < messageDigest.length; i++) {hexString.append(Integer.toHexString(0xFF & messageDigest[i]));}String hashedPassword = hexString.toString();return hashedPassword;}public static void main(String[] args) {if (args.length == 0) {System.out.println(""Specify name of the file, just one entry per line"");System.exit(0);}File inFile = new File(args[0]);BufferedReader myBR = null;File outFile = new File(args[0] + "".xml"");BufferedWriter myBW = null;try {myBR = new BufferedReader(new FileReader(inFile));myBW = new BufferedWriter(new FileWriter(outFile));} catch (Exception ex) {System.out.println(""IN: "" + inFile.getAbsolutePath());System.out.println(""OUT: "" + outFile.getAbsolutePath());ex.printStackTrace();System.exit(0);}try {String readLine;while ((readLine = myBR.readLine()) != null) {myBW.write(""<dbColumn name=\"""" + readLine + ""\"" display=\"""" + readLine + ""\"" panel=\""CENTER\""  >"");myBW.write(""\n"");myBW.write(""<dbType name=\""text\"" maxVal=\""10\"" defaultVal=\""\"" sizeX=\""5\""/>"");myBW.write(""\n"");myBW.write(""</dbColumn>"");myBW.write(""\n"");}myBW.close();myBR.close();} catch (Exception ex) {ex.printStackTrace();System.exit(0);}System.out.println(""OUT: "" + outFile.getAbsolutePath());System.out.println(""erzeugt"");}protected URLConnection getConnection(String uri, String data) throws MalformedURLException, IOException {URL url = new URL(uri);URLConnection conn = url.openConnection();conn.setConnectTimeout((int) MINUTE / 2);conn.setReadTimeout((int) MINUTE / 2);return conn;}void acessResource(ClassLoader cl, String resource) throws IOException {URL url = cl.getResource(resource);if (url == null) {println(""Ups can't find resource "" + resource);} else {println(""URL OK "" + resource + "" ->"" + url);InputStream is = url.openStream();try {is.read();} finally {is.close();}println(""Read OK "" + resource + "" ->"" + url);}}void createAgentProgram(PrintStream ps, String agentName, String agentID) throws IOException, ConfigException {Agent agent = service.getAgent(agentName);File instanceDir = getInstanceDir();double agent_timeout_seconds = engine.getTimeout();String ii = ""\"""";String agentScript = ""agent-"" + agentName + "".py"";String serviceScript = ""service.py"";Set<String> taskNames = agent.getTasks().keySet();File scriptDir = getService().getScriptDir();final boolean embedScripts = true;{ps.println(""#!/bin/sh"");ps.println(""umask 0077"");}for (String taskName : taskNames) {Task task = getService().getTask(taskName);String script = task.getScriptContent();if (embedScripts) {ps.println();ps.println(""cat > "" + task.getFile() + "" << "" + ii + ""EOF_"" + task.getFile() + ii);ps.println(script);ps.println(""EOF_"" + task.getFile());} else {File taskScriptFile = new File(instanceDir, task.getFile());PrintStream xs = new PrintStream(taskScriptFile);xs.print(script);xs.close();}}{PrintStream ss = null;if (embedScripts) {ps.println();ps.println(""cat > "" + serviceScript + "" << "" + ii + ""EOF_"" + serviceScript + ii);ss = ps;} else {File serviceScriptFile = new File(instanceDir, serviceScript);ss = new PrintStream(serviceScriptFile);}service.createServiceScript(ss);if (embedScripts) ps.println(""EOF_"" + serviceScript); else ss.close();}{URL url = new URL(engine.getAgentContextURL() + ""/"" + engine.getAgentURLPath());log.debug(""url for agent = "" + url.toExternalForm());PrintStream as = null;if (embedScripts) {ps.println();ps.println(""cat > "" + agentScript + "" << "" + ii + ""EOF_"" + agentScript + ii);as = ps;} else {File agentScriptFile = new File(instanceDir, agentScript);as = new PrintStream(agentScriptFile);}String tab[] = { """", """", """", """", """", """" };int i = 0;as.println(tab[i] + ""from wrapper import ZSIWrapper"");as.println(tab[i] + ""from service import Service"");as.println(tab[i] + ""import threading"");as.println(tab[i] + ""from sys import exit"");as.println();as.println(tab[i] + ""URL="" + ii + url.toString() + ii);as.println(tab[i] + ""agentID="" + ii + agentID + ii);as.println(tab[i] + ""instanceID="" + instanceID);as.println(tab[i] + ""instanceKey="" + ii + key + ii);as.println(tab[i] + ""timeout="" + ii + agent_timeout_seconds + ii);as.println(tab[i] + ""stop_flag=0"");as.println(tab[i] + ""kill_flag=0"");as.println();as.println(tab[i] + ""# Need extra port for each thread, "" + ""ZSIWrapper (actually ZSI) not thread save"");as.println(tab[i] + ""port0=ZSIWrapper(URL, agentID, instanceID, instanceKey, timeout)"");as.println(tab[i] + ""port0.setAgentStatus("" + Status.RUNNING.ordinal() + "")"");as.println();as.println(tab[i] + ""def create_namespace(service) :"");as.println(tab[i] + """" + ii + ""create a namespace for injection "" + ""into a task script and returns it."" + ii);as.println(tab[i] + ""# first get most (not all) variables"");as.print(tab[i] + ""arglist = [ "");int counter = 0;for (VarAttributes va : attributesMap.values()) {counter++;String varname = va.getName();if (Constants.VAR_STDOUT.equals(varname)) continue;VarTypeEnum vartype = va.getType();switch(vartype) {case DOUBLE:case STRING:case LONG:case BOOLEAN:case CHOICE:as.print(tab[i] + ""'"" + varname + ""'"");if (counter != attributesMap.size()) as.println("",\\"");break;case FILES:break;default:throw new RuntimeException(""unkown data type in switch"");}}as.println(""]"");as.println(tab[i] + ""vars=port0.getManyVars(arglist)"");as.println(tab[i] + ""namesp = vars "");as.println(tab[i] + ""namesp[ 'service' ] = service "");as.println(tab[i] + ""return namesp"");as.println();for (String taskName : taskNames) {Task task = getService().getTask(taskName);boolean background = task.isBackground();as.println(tab[i] + ""def task_"" + taskName + ""():"");{i++;as.println(tab[i] + ""try :"");if (background) {as.println(tab[i] + ""# as ZSIWrapper is not task save,"" + "" create a new one"");as.println(tab[i] + ""port_task=ZSIWrapper(URL, agentID, "" + ""instanceID, instanceKey, timeout)"");as.println(tab[i] + ""service = Service(port_task)"");} else {as.println(tab[i] + ""# this is foreground, "" + ""use port0 from current task"");as.println(tab[i] + ""service = Service(port0)"");}as.println(tab[i] + ""globals = create_namespace(service)"");as.println(tab[i] + ""locals = { }"");as.println(tab[i] + ""execfile('"" + task.getFile() + ""', globals, locals )"");as.println(tab[i] + ""except :"");as.println(tab[i] + ""port0.setTaskStatus('"" + taskName + ""', "" + Status.FAILED.ordinal() + "" )"");as.println(tab[i] + ""else :"");as.println(tab[i] + ""if kill_flag :"");as.println(tab[i] + ""task_exit_status = "" + Status.FAILED.ordinal());as.println(tab[i] + ""elif stop_flag :"");as.println(tab[i] + ""task_exit_status = "" + Status.TERMINATED.ordinal());as.println(tab[i] + ""else :"");as.println(tab[i] + ""task_exit_status = "" + Status.FINISHED.ordinal());as.println(tab[i] + ""port0.setTaskStatus('"" + taskName + ""', task_exit_status )"");as.println();i--;}}as.println(tab[i] + ""try:"");i++;as.println(tab[i] + ""tasklist = []"");as.println(tab[i] + ""action=None"");as.println(tab[i] + ""while action != '"" + Agent.STOP + ""' and action != '"" + Agent.KILL + ""' and action != '"" + Agent.FINISH + ""' :"");{i++;as.println(tab[i] + ""# print 'ACTION=', action"");as.println(tab[i] + ""action = port0.getAction()"");as.println(tab[i] + """");as.println(tab[i] + ""# cleanup tasklist (only to save memory)"");as.println(tab[i] + ""# In two cycles, don't change list during iter."");as.println(tab[i] + ""to_be_removed = []"");as.println(tab[i] + ""for tr2 in tasklist:"");as.println(tab[i] + ""if (not tr2.isAlive()):"");as.println(tab[i] + ""to_be_removed.append(tr2)"");as.println(tab[i] + ""for tr3 in to_be_removed:"");as.println(tab[i] + ""# print 'old task removed: ',tr3.getName()"");as.println(tab[i] + ""tasklist.remove(tr3)"");as.println(tab[i] + """");as.println(tab[i] + ""if action == None :"");as.println(tab[i] + ""# print 'processing None'"");as.println(tab[i] + ""None"");as.println(tab[i] + ""if action == '"" + Agent.FINISH + ""' :"");as.println(tab[i] + ""# print 'processing FINISH'"");as.println(tab[i] + ""None"");as.println(tab[i] + ""elif action == '"" + Agent.STOP + ""' :"");as.println(tab[i] + ""stop_flag=1"");as.println(tab[i] + ""# print 'processing STOP'"");String onStop = agent.onStop;if (onStop != null) {String function = ""task_"" + onStop;as.println(tab[i] + """" + function + ""()"");}as.println(tab[i] + """");as.println(tab[i] + ""elif action == '"" + Agent.KILL + ""' :"");as.println(tab[i] + ""kill_flag=1"");as.println(tab[i] + ""# print 'processing KILL'"");String onKill = agent.onKill;if (onKill != null) {String function = ""task_"" + onKill;as.println(tab[i] + """" + function + ""()"");}as.println(tab[i] + ""# This would be the place "" + ""to kill external programs"");as.println(tab[i] + ""port0.setAgentStatus("" + Status.FAILED.ordinal() + "")"");as.println(tab[i] + ""# exit without waiting for bg threads"");as.println(tab[i] + ""exit(13)"");as.println(tab[i] + """");for (String taskName : taskNames) {Task task = getService().getTask(taskName);boolean background = task.isBackground();as.println(tab[i] + ""elif action == '"" + Agent.TASK + taskName + ""':"");String function = ""task_"" + taskName;if (background) {as.println(tab[i] + ""# create, register and start task"");as.println(tab[i] + ""t = threading.Thread(target="" + function + "", name='"" + function + ""')"");as.println(tab[i] + ""tasklist.append(t)"");as.println(tab[i] + ""t.start()"");} else {as.println(tab[i] + """" + function + ""()"");}}as.println(tab[i] + ""else :"");as.println(tab[i] + ""print 'undefined case in agent script iov0j23fds, "" + ""action=', action"");i--;}as.println();as.println(tab[i] + ""# wait for running background tasks"");as.println(tab[i] + ""# print 'remaining threads (inclides demonic ones!):'"" + "", threading.activeCount()"");as.println(tab[i] + ""# for tr in threading.enumerate():"");as.println(tab[i] + ""#print 'remaining thread: ',"" + "" tr.getName()"");as.println(tab[i] + ""for tr2 in tasklist:"");as.println(tab[i] + ""# print 'joining with ',tr2.getName()"");as.println(tab[i] + ""tr2.join()"");i--;as.println(tab[i] + ""# Set agent status"");as.println(tab[i] + ""except :"");as.println(tab[i] + ""port0.setAgentStatus("" + Status.FAILED.ordinal() + "")"");as.println(tab[i] + ""else :"");as.println(tab[i] + ""if kill_flag :"");as.println(tab[i] + ""agent_exit_status = "" + Status.FAILED.ordinal());as.println(tab[i] + ""elif stop_flag :"");as.println(tab[i] + ""agent_exit_status = "" + Status.TERMINATED.ordinal());as.println(tab[i] + ""else :"");as.println(tab[i] + ""agent_exit_status = "" + Status.FINISHED.ordinal());as.println(tab[i] + ""port0.setAgentStatus( agent_exit_status )"");if (embedScripts) ps.println(""EOF_"" + agentScript); else as.close();}for (String agentFileName : agent.getFilesSet()) {ps.println();File agentRelFile = new File(agentFileName);File directory = agentRelFile.getParentFile();if (directory != null) {ps.println(""mkdir -p "" + directory.getPath());}ps.println(""cat > "" + agentFileName + "" << "" + ii + ""EOF_"" + agentFileName + ii);File file = new File(scriptDir, agentFileName);byte bytes[] = FileUtils.readFileToByteArray(file);ps.write(bytes);ps.println();ps.println(""EOF_"" + agentFileName);}if (embedScripts) {ps.println(""SKIP=`awk '/^__ARCHIVE_FOLLOWS__/ { print NR + 1; exit 0; }' $0`"");ps.println(""tail -n +$SKIP $0 | gzip -dc | tar x "");ps.println(""python -u "" + agentScript);ps.println(""exit 0"");ps.println(""__ARCHIVE_FOLLOWS__"");java.io.InputStream istream = this.getClass().getClassLoader().getResourceAsStream(""sc/fgrid/agent.tar.gz"");IOUtils.copy(istream, ps);} else {String pypath = engine.getAgentPythonPath();ps.println(""export PYTHONPATH="" + ii + pypath + ii);ps.println(""python -u "" + agentScript);ps.println(""exit 0"");}}private List<String[]> retrieveData(String query) {List<String[]> data = new Vector<String[]>();query = query.replaceAll(""\\s"", ""+"");String q = ""http://www.uniprot.org/uniprot/?query="" + query + ""&format=tab&columns=id,protein%20names,organism"";try {URL url = new URL(q);BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String line = """";reader.readLine();while ((line = reader.readLine()) != null) {String[] st = line.split(""\t"");String[] d = new String[] { st[0], st[1], st[2] };data.add(d);}reader.close();if (data.size() == 0) {JOptionPane.showMessageDialog(this, ""No data found for query"");}} catch (MalformedURLException e) {System.err.println(""Query "" + q + "" caused exception: "");e.printStackTrace();} catch (Exception e) {System.err.println(""Query "" + q + "" caused exception: "");e.printStackTrace();}return data;}public void add(Site site) throws Exception {DBOperation dbo = null;Connection connection = null;PreparedStatement preparedStatement = null;ResultSet resultSet = null;try {String sqlStr = ""insert into t_ip_site (id,name,description,ascii_name,site_path,remark_number,increment_index,use_status,appserver_id) VALUES(?,?,?,?,?,?,?,?,?)"";dbo = createDBOperation();connection = dbo.getConnection();connection.setAutoCommit(false);preparedStatement = connection.prepareStatement(sqlStr);preparedStatement.setInt(1, site.getSiteID());preparedStatement.setString(2, site.getName());preparedStatement.setString(3, site.getDescription());preparedStatement.setString(4, site.getAsciiName());preparedStatement.setString(5, site.getPath());preparedStatement.setInt(6, site.getRemarkNumber());preparedStatement.setString(7, site.getIncrementIndex().trim());preparedStatement.setString(8, String.valueOf(site.getUseStatus()));preparedStatement.setString(9, String.valueOf(site.getAppserverID()));preparedStatement.executeUpdate();String[] path = new String[1];path[0] = site.getPath();selfDefineAdd(path, site, connection, preparedStatement);connection.commit();int resID = site.getSiteID() + Const.SITE_TYPE_RES;String resName = site.getName();int resTypeID = Const.RES_TYPE_ID;int operateTypeID = Const.OPERATE_TYPE_ID;String remark = """";AuthorityManager am = new AuthorityManager();am.createExtResource(Integer.toString(resID), resName, resTypeID, operateTypeID, remark);site.wirteFile();} catch (SQLException ex) {connection.rollback();log.error(""����վ��ʧ��!"", ex);throw ex;} finally {close(resultSet, null, preparedStatement, connection, dbo);}}public void delete(Site site) throws Exception {DBOperation dbo = null;Connection connection = null;PreparedStatement preparedStatement = null;ResultSet resultSet = null;try {String chkSql = ""select id from t_ip_doc where channel_path=?"";dbo = createDBOperation();connection = dbo.getConnection();connection.setAutoCommit(false);String[] selfDefinePath = getSelfDefinePath(site.getPath(), ""1"", connection, preparedStatement, resultSet);selfDefineDelete(selfDefinePath, connection, preparedStatement);preparedStatement = connection.prepareStatement(chkSql);preparedStatement.setString(1, site.getPath());resultSet = preparedStatement.executeQuery();if (resultSet.next()) {throw new Exception(""ɾ��ʧ�ܣ�"" + site.getName() + ""���Ѿ����ĵ����ڣ�"");} else {String sqlStr = ""delete from t_ip_site where site_path=?"";dbo = createDBOperation();connection = dbo.getConnection();preparedStatement = connection.prepareStatement(sqlStr);preparedStatement.setString(1, site.getPath());preparedStatement.executeUpdate();}connection.commit();} catch (SQLException ex) {connection.rollback();throw ex;} finally {close(resultSet, null, preparedStatement, connection, dbo);}}public void update(Site site) throws Exception {DBOperation dbo = null;Connection connection = null;PreparedStatement preparedStatement = null;ResultSet resultSet = null;String exp = site.getExtendParent();String path = site.getPath();try {String sqlStr = ""update t_ip_site set id=?,name=?,description=?,ascii_name=?,remark_number=?,increment_index=?,use_status=?,appserver_id=? where id=?"";dbo = createDBOperation();connection = dbo.getConnection();connection.setAutoCommit(false);String[] selfDefinePath = getSelfDefinePath(path, exp, connection, preparedStatement, resultSet);selfDefineDelete(selfDefinePath, connection, preparedStatement);selfDefineAdd(selfDefinePath, site, connection, preparedStatement);preparedStatement = connection.prepareStatement(sqlStr);preparedStatement.setInt(1, site.getSiteID());preparedStatement.setString(2, site.getName());preparedStatement.setString(3, site.getDescription());preparedStatement.setString(4, site.getAsciiName());preparedStatement.setInt(5, site.getRemarkNumber());preparedStatement.setString(6, site.getIncrementIndex().trim());preparedStatement.setString(7, String.valueOf(site.getUseStatus()));preparedStatement.setString(8, String.valueOf(site.getAppserverID()));preparedStatement.setInt(9, site.getSiteID());preparedStatement.executeUpdate();connection.commit();int resID = site.getSiteID() + Const.SITE_TYPE_RES;StructResource sr = new StructResource();sr.setResourceID(Integer.toString(resID));sr.setOperateID(Integer.toString(1));sr.setOperateTypeID(Const.OPERATE_TYPE_ID);sr.setTypeID(Const.RES_TYPE_ID);StructAuth sa = new AuthorityManager().getExternalAuthority(sr);int authID = sa.getAuthID();if (authID == 0) {String resName = site.getName();int resTypeID = Const.RES_TYPE_ID;int operateTypeID = Const.OPERATE_TYPE_ID;String remark = """";AuthorityManager am = new AuthorityManager();am.createExtResource(Integer.toString(resID), resName, resTypeID, operateTypeID, remark);}site.wirteFile();} catch (SQLException ex) {connection.rollback();log.error(""����վ������ʧ��!"", ex);throw ex;} finally {close(resultSet, null, preparedStatement, connection, dbo);}}"	5
"private static void readAndRewrite(File inFile, File outFile) throws IOException {ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);Dataset ds = DcmObjectFactory.getInstance().newDataset();dcmParser.setDcmHandler(ds.getDcmHandler());dcmParser.parseDcmFile(null, Tags.PixelData);PixelDataReader pdReader = pdFact.newReader(ds, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());System.out.println(""reading "" + inFile + ""..."");pdReader.readPixelData(false);ImageOutputStream out = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;ds.writeDataset(out, dcmEncParam);ds.writeHeader(out, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());System.out.println(""writing "" + outFile + ""..."");PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, ds, out, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());pdWriter.writePixelData();out.flush();out.close();System.out.println(""done!"");}private static void copy(String sourceName, String destName) throws IOException {File source = new File(sourceName);File dest = new File(destName);FileChannel in = null, out = null;try {in = new FileInputStream(source).getChannel();out = new FileOutputStream(dest).getChannel();long size = in.size();MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buf);} finally {if (in != null) in.close();if (out != null) out.close();}}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public NodeId generateTopicId(String topicName) {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {System.err.println(""No SHA support!"");}md.update(topicName.getBytes());byte[] digest = md.digest();NodeId newId = new NodeId(digest);return newId;}public Source get_source(String pageURL, Boolean checkInBase) {URL url;URLConnection conn;Reader inReader;Source source = null;String LastModified = """";Boolean updateData = false;try {url = new URL(pageURL);conn = url.openConnection();conn.setRequestProperty(""Accept-Charset"", ""windows-1251"");if (checkInBase) {for (int i = 0; ; i++) {String name = conn.getHeaderFieldKey(i);String value = conn.getHeaderField(i);if (name == null && value == null) {break;}if (""Last-Modified"".equals(name)) {LastModified = value;}}Ini.rs = Ini.stmt.executeQuery(""select count(1) as qwe from "" + "" PUBLIC.PAGES "" + ""where url = '"" + pageURL + ""';"");Ini.rs.next();if (Ini.rs.getInt(""qwe"") == 0) {Ini.stmt.executeUpdate(""insert into PUBLIC.PAGES(url, lastUpdateDate) "" + "" values('"" + pageURL + ""', "" + ""'"" + LastModified + ""'"" + "");"");} else {Ini.rs = Ini.stmt.executeQuery(""select lastUpdateDate from "" + "" PUBLIC.PAGES "" + ""where url = '"" + pageURL + ""';"");Ini.rs.next();if (!Ini.rs.getString(""lastUpdateDate"").equals(LastModified)) {updateData = true;} else {return null;}}}inReader = new InputStreamReader(conn.getInputStream(), ""windows-1251"");source = new Source(inReader);source.setLogger(null);source.fullSequentialParse();if (updateData) {Ini.stmt.executeUpdate(""delete from PUBLIC.LINKDATA "" + ""where id in ("" + ""select id from PUBLIC.PAGES "" + ""where url = '"" + pageURL + ""'"" + "")"");Ini.stmt.executeUpdate(""delete from PUBLIC.PAGES "" + ""where url = '"" + pageURL + ""';"");Ini.stmt.executeUpdate(""insert into PUBLIC.PAGES "" + "" values('"" + pageURL + ""', "" + ""'"" + LastModified + ""'"" + "");"");}} catch (Exception ex) {Ini.logger.fatal(""Error: "", ex);}return source;}void bubbleSort(int ids[]) {boolean flag = true;int temp;while (flag) {flag = false;for (int i = 0; i < ids.length - 1; i++) if (ids[i] < ids[i + 1]) {temp = ids[i];ids[i] = ids[i + 1];ids[i + 1] = temp;flag = true;}}}private void makeQuery(String query) {System.out.println("" Querying for "" + query);try {query = URLEncoder.encode(query, ""UTF-8"");for (int k = 0; k < 100; k++) {System.out.println(query);URL url = new URL(""http://ajax.googleapis.com/ajax/services/search/web?start="" + k * 8 + ""&rsz=large&v=1.0&q="" + query);URLConnection connection = url.openConnection();connection.addRequestProperty(""Referer"", HTTP_REFERER);String line;StringBuilder builder = new StringBuilder();BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));while ((line = reader.readLine()) != null) {builder.append(line);}String response = builder.toString();JSONObject json = new JSONObject(response);if (k == 0) {result = ""Total results = "" + json.getJSONObject(""responseData"").getJSONObject(""cursor"").getString(""estimatedResultCount"") + ""\n"";}JSONArray ja = json.getJSONObject(""responseData"").getJSONArray(""results"");jsonres = ja;for (int i = 0; i < ja.length(); i++) {System.out.print((i + 1) + "". "");JSONObject j = ja.getJSONObject(i);result = result + j.getString(""titleNoFormatting"") + "" "";result = result + j.getString(""url"") + ""\n"";result = result + j.getString(""content"") + ""\n\n"";}}} catch (Exception e) {System.err.println(""Something went wrong..."");e.printStackTrace();}}public static void copyFile(IPath fromFileName, IPath toFileName) throws IOException {File fromFile = fromFileName.toFile();File toFile = toFileName.toFile();if (!fromFile.exists()) throw new IOException(""FileCopy: "" + ""no such source file: "" + fromFileName);if (!fromFile.isFile()) throw new IOException(""FileCopy: "" + ""can't copy directory: "" + fromFileName);if (!fromFile.canRead()) throw new IOException(""FileCopy: "" + ""source file is unreadable: "" + fromFileName);if (toFile.isDirectory()) toFile = new File(toFile, fromFile.getName());if (toFile.exists()) {if (!toFile.canWrite()) throw new IOException(""FileCopy: "" + ""destination file is unwriteable: "" + toFileName);} else {String parent = toFile.getParent();if (parent == null) parent = System.getProperty(""user.dir"");File dir = new File(parent);if (!dir.exists()) throw new IOException(""FileCopy: "" + ""destination directory doesn't exist: "" + parent);if (dir.isFile()) throw new IOException(""FileCopy: "" + ""destination is not a directory: "" + parent);if (!dir.canWrite()) throw new IOException(""FileCopy: "" + ""destination directory is unwriteable: "" + parent);}InputStream from = null;OutputStream to = null;try {from = new BufferedInputStream(new FileInputStream(fromFile));to = new BufferedOutputStream(new FileOutputStream(toFile));byte[] buffer = new byte[4096];int bytesRead;while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead);} finally {if (from != null) try {from.close();} catch (IOException e) {}if (to != null) try {to.close();} catch (IOException e) {}}}private void getRdfResponse(StringBuilder sb, String url) {try {String inputLine = null;BufferedReader reader = new BufferedReader(new InputStreamReader(new URL(url).openStream()));while ((inputLine = reader.readLine()) != null) {sb.append(inputLine);}reader.close();} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}}"	5
"protected static String getInitialUUID() {if (myRand == null) {myRand = new Random();}long rand = myRand.nextLong();String sid;try {sid = InetAddress.getLocalHost().toString();} catch (UnknownHostException e) {sid = Thread.currentThread().getName();}StringBuffer sb = new StringBuffer();sb.append(sid);sb.append("":"");sb.append(Long.toString(rand));MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {}md5.update(sb.toString().getBytes());byte[] array = md5.digest();StringBuffer sb2 = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;sb2.append(Integer.toHexString(b));}int begin = myRand.nextInt();if (begin < 0) begin = begin * -1;begin = begin % 8;return sb2.toString().substring(begin, begin + 18).toUpperCase();}@SuppressWarnings(""unchecked"")public static <T> List<T> getServices(String service) {String serviceUri = ""META-INF/services/"" + service;ClassLoader loader = Thread.currentThread().getContextClassLoader();try {Enumeration<URL> urls = loader.getResources(serviceUri);if (urls.hasMoreElements()) {List<T> services = new ArrayList<T>(1);do {URL url = urls.nextElement();_LOG.finest(""Processing:{0}"", url);try {BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));try {while (true) {String line = in.readLine();if (line == null) break;T instance = (T) _parseLine(loader, line);if (instance != null) services.add(instance);}} finally {in.close();}} catch (Exception e) {_LOG.warning(""ERR_PARSING_URL"", url);_LOG.warning(e);}} while (urls.hasMoreElements());if (services.size() == 1) return Collections.singletonList(services.get(0));return Collections.unmodifiableList(services);}} catch (IOException e) {_LOG.severe(""ERR_LOADING_RESROUCE"", serviceUri);_LOG.severe(e);}return Collections.emptyList();}private static String format(String check) throws NoSuchAlgorithmException, UnsupportedEncodingException {check = check.replaceAll("" "", """");MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(check.getBytes(""ISO-8859-1""));byte[] end = md5.digest();String digest = """";for (int i = 0; i < end.length; i++) {digest += ((end[i] & 0xff) < 16 ? ""0"" : """") + Integer.toHexString(end[i] & 0xff);}return digest;}public static void copy(FileInputStream source, FileOutputStream dest) throws IOException {FileChannel in = null, out = null;try {in = source.getChannel();out = dest.getChannel();long size = in.size();MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buf);} finally {if (in != null) in.close();if (out != null) out.close();}}private static synchronized void find(String name) throws SAXException, IOException {if (c_cache.containsKey(name)) return;CustomHandler handler = null;URL url = null;String validatorFiles = (String) Config.getProperty(Config.PROP_RULES_ENGINE_VALIDATORS_URL_LIST, XML_FILE);for (StringTokenizer strtknzr = new StringTokenizer(validatorFiles, "",""); strtknzr.hasMoreTokens(); ) {String validatorFile = strtknzr.nextToken();try {url = URLHelper.newExtendedURL(validatorFile);} catch (MalformedURLException e) {url = null;}if (url == null) throw new FileNotFoundException(""File not found - "" + validatorFile);try {handler = new CustomHandler(name);XMLReader reader = XMLReaderFactory.createXMLReader(PARSER_NAME);reader.setContentHandler(handler);reader.setEntityResolver(new DefaultEntityResolver());reader.setErrorHandler(new DefaultErrorHandler());reader.parse(new InputSource(url.openStream()));} catch (SAXException e) {if (SUCCESS_MESSAGE.equals(e.getMessage()) && handler != null) break; else throw e;} catch (IOException e) {throw e;}if (handler.getFieldValidatorMetaData() != null) break;}c_cache.put(name, handler != null ? handler.getFieldValidatorMetaData() : null);}@Testpublic void shouldDownloadFileUsingPublicLink() throws Exception {String bucketName = ""test-"" + UUID.randomUUID();Service service = new WebClientService(credentials);service.createBucket(bucketName);File file = folder.newFile(""foo.txt"");FileUtils.writeStringToFile(file, UUID.randomUUID().toString());service.createObject(bucketName, file.getName(), file, new NullProgressListener());String publicUrl = service.getPublicUrl(bucketName, file.getName(), new DateTime().plusDays(5));File saved = folder.newFile(""saved.txt"");InputStream input = new URL(publicUrl).openConnection().getInputStream();FileOutputStream output = new FileOutputStream(saved);IOUtils.copy(input, output);output.close();assertThat(""Corrupted download"", Files.computeMD5(saved), equalTo(Files.computeMD5(file)));service.deleteObject(bucketName, file.getName());service.deleteBucket(bucketName);}public static String encryptSHA(String pwd) throws NoSuchAlgorithmException {MessageDigest d = java.security.MessageDigest.getInstance(""SHA-1"");d.reset();d.update(pwd.getBytes());BASE64Encoder encoder = new BASE64Encoder();return encoder.encode(d.digest());}public synchronized void run() {String s;URL url = null;try {String localVersionS = globals.getProperty(""jmathlib.version"").replaceAll(""/"", ""."");url = new URL(updateSiteS + ""?jmathlib_version="" + localVersionS + ""&command=check"");} catch (Exception e) {throwMathLibException(""checkForUpdates: malformed url"");}Properties props = new Properties();try {props.load(url.openStream());} catch (Exception e) {ErrorLogger.debugLine(""checkForUpdates: Properties error"");}String localVersionS = globals.getProperty(""jmathlib.version"");String updateVersionS = props.getProperty(""update.toversion"");String updateActionS = props.getProperty(""update.action"");if (updateActionS.equals(""INCREMENTAL_DOWNLOAD"")) {if (!silentB) {globals.getInterpreter().displayText(""A full download ist required"");globals.getInterpreter().displayText(""A new version "" + updateVersionS + "" is available"");globals.getInterpreter().displayText(""\n Just typeupdateat the prompt."");}} else if (updateActionS.equals(""FULL_DOWNLOAD_REQUIRED"")) {if (!silentB) {globals.getInterpreter().displayText(""A full download ist required"");globals.getInterpreter().displayText(""A new version "" + updateVersionS + "" is available"");globals.getInterpreter().displayText(""Go to www.jmathlib.de and download the latest version"");}} else if (updateActionS.equals(""NO_ACTION"")) {if (!silentB) globals.getInterpreter().displayText(""The local version of JMathLib is up to date"");} else if (updateActionS.equals(""VERSION_UNKNOWN"")) {if (!silentB) globals.getInterpreter().displayText(""The local version of JMathLib ist not recognized by the server"");} else {globals.getInterpreter().displayText(""check for updates encountered an error."");}debugLine(""checkForUpdates: web:"" + updateVersionS + "" local:"" + localVersionS);Calendar cal = Calendar.getInstance();String checkedDate = Integer.toString(cal.get(Calendar.YEAR)) + ""/"" + Integer.toString(cal.get(Calendar.MONTH) + 1) + ""/"" + Integer.toString(cal.get(Calendar.DAY_OF_MONTH));globals.setProperty(""update.date.last"", checkedDate);Enumeration propnames = props.propertyNames();while (propnames.hasMoreElements()) {String propName = (String) propnames.nextElement();String propValue = (String) props.getProperty(propName);ErrorLogger.debugLine(""Property: "" + propName + "" = "" + propValue);globals.setProperty(propName, propValue);}}protected static void copyFile(File from, File to) throws IOException {if (!from.isFile() || !to.isFile()) {throw new IOException(""Both parameters must be files. from is "" + from.isFile() + "", to is "" + to.isFile());}FileChannel in = (new FileInputStream(from)).getChannel();FileChannel out = (new FileOutputStream(to)).getChannel();in.transferTo(0, from.length(), out);in.close();out.close();}public synchronized String encrypt(String plaintext) throws PasswordException {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {throw new PasswordException(e.getMessage());}try {md.update(plaintext.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {throw new PasswordException(e.getMessage());}byte raw[] = md.digest();String hash = (new Base64Encoder()).encode(raw);return hash;}"	5
"public void actionPerformed(ActionEvent evt) {try {File tempFile = new File(""/tmp/controler.xml"");File f = new File(""/tmp/controler-temp.xml"");BufferedInputStream copySource = new BufferedInputStream(new FileInputStream(tempFile));BufferedOutputStream copyDestination = new BufferedOutputStream(new FileOutputStream(f));int read = 0;while (read != -1) {read = copySource.read(buffer, 0, BUFFER_SIZE);if (read != -1) {copyDestination.write(buffer, 0, read);}}copyDestination.write(new String(""</log>\n"").getBytes());copySource.close();copyDestination.close();XMLParser parser = new XMLParser(""Controler"");parser.parse(f);f.delete();} catch (IOException ex) {System.out.println(""An error occured during the file copy!"");}}public static void main(String[] args) throws Exception {File inputFile = new File(args[0]);BufferedReader reader = new BufferedReader(new FileReader(inputFile));StringBuffer stringBuffer = new StringBuffer();String readed;while ((readed = reader.readLine()) != null) stringBuffer.append(readed + ""\r\n"");readed = stringBuffer.toString();reader.close();File outputFile = new File(args[0] + "".output"");BufferedWriter writer = new BufferedWriter(new FileWriter(outputFile));readed = readed.replaceAll(""\\t+"", ""#"");readed = readed.replaceAll(""\\s*#\\s*"", ""#"");readed = readed.replaceAll(""Latitude,.*"", """");readed = readed.replaceAll(""Flag of"", """");readed = readed.replaceAll(""^\\s+$"", """");writer.write(readed);writer.close();}public String drive() {logger.info(""\n"");logger.info(""==========================================================="");logger.info(""========== Start drive method ============================="");logger.info(""==========================================================="");logger.entering(cl, ""drive"");xstream = new XStream(new JsonHierarchicalStreamDriver());xstream.setMode(XStream.NO_REFERENCES);xstream.alias(""AuditDiffFacade"", AuditDiffFacade.class);File auditSchemaFile = null;File auditSchemaXsdFile = null;try {if (configFile == null) {logger.severe(""Request Failed: configFile is null"");return null;} else {if (configFile.getAuditSchemaFile() != null) {logger.info(""auditSchemaFile="" + configFile.getAuditSchemaFile());logger.info(""auditSchemaXsdFile="" + configFile.getAuditSchemaXsdFile());logger.info(""plnXpathFile="" + configFile.getPlnXpathFile());logger.info(""auditSchemaFileDir="" + configFile.getAuditSchemaFileDir());logger.info(""auditReportFile="" + configFile.getAuditReportFile());logger.info(""auditReportXsdFile="" + configFile.getAuditReportXsdFile());} else {logger.severe(""Request Failed: auditSchemaFile is null"");return null;}}File test = new File(configFile.getAuditSchemaFileDir() + File.separator + ""temp.xml"");auditSchemaFile = new File(configFile.getAuditSchemaFile());if (!auditSchemaFile.exists() || auditSchemaFile.length() == 0L) {logger.severe(""Request Failed: the audit schema file does not exist or empty"");return null;}auditSchemaXsdFile = null;if (configFile.getAuditSchemaXsdFile() != null) {auditSchemaXsdFile = new File(configFile.getAuditSchemaXsdFile());} else {logger.severe(""Request Failed: the audit schema xsd file is null"");return null;}if (!auditSchemaXsdFile.exists() || auditSchemaXsdFile.length() == 0L) {logger.severe(""Request Failed: the audit schema xsd file does not exist or empty"");return null;}SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);Schema schema = factory.newSchema(auditSchemaXsdFile);Validator validator = schema.newValidator();Source source = new StreamSource(auditSchemaFile);validator.validate(source);} catch (SAXException e) {logger.warning(""SAXException caught trying to validate input Schema Files: "");e.printStackTrace();} catch (IOException e) {logger.warning(""IOException caught trying to read input Schema File: "");e.printStackTrace();}String xPathFile = null;if (configFile.getPlnXpathFile() != null) {xPathFile = configFile.getPlnXpathFile();logger.info(""Attempting to retrieve xpaths from file: '"" + xPathFile + ""'"");XpathUtility.readFile(xPathFile);} else {logger.severe(""Configuration file does not have a value for the Xpath Filename"");return null;}Properties xpathProps = XpathUtility.getXpathsProps();if (xpathProps == null) {logger.severe(""No Xpaths could be extracted from file: '"" + xPathFile + ""' - xpath properties object is null"");return null;}if (xpathProps.isEmpty()) {logger.severe(""No Xpaths could be extracted from file: '"" + xPathFile + ""' - xpath properties object is empty"");return null;}logger.info(xpathProps.size() + "" xpaths retrieved."");for (String key : xpathProps.stringPropertyNames()) {logger.info(""Key="" + key + ""Value="" + xpathProps.getProperty(key));}logger.info(""\n"");logger.info(""==========================================================="");logger.info(""========== Process XML Schema File BEGIN =================="");logger.info(""==========================================================="");SchemaSAXReader sax = new SchemaSAXReader();ArrayList<String> key_matches = new ArrayList<String>(sax.parseDocument(auditSchemaFile, xpathProps));logger.info(""Check Input xpath hash against xpaths found in Schema."");Comparison comp_keys = new Comparison();ArrayList<String> in_xpath_not_in_schema = new ArrayList<String>(comp_keys.keys_not_in_both_hashes(xpathProps, Utility.arraylist_to_map(key_matches, ""key_matches""), ""xpath Properties"", ""hm_key_matches""));if (in_xpath_not_in_schema.size() > 0) {logger.severe(""All XPaths in Input xpath Properties list were not found in Schema."");logger.severe(""Xpaths in xpath Properties list missing from schema file:"" + xstream.toXML(in_xpath_not_in_schema));logger.severe(""Quitting."");return null;}Map<String, Map> schema_audit_hashbox = sax.get_audit_hashbox();logger.info(""schema_audit_hashbox\n"" + xstream.toXML(schema_audit_hashbox));Map<String, Map> schema_network_hashbox = sax.get_net_hashbox();logger.info(""schema_network_hashbox\n"" + xstream.toXML(schema_network_hashbox));Map<String, Map> schema_host_hashbox = sax.get_host_hashbox();Map<String, Map> schema_au_hashbox = sax.get_au_hashbox();logger.info(""schema_au_hashbox\n"" + xstream.toXML(schema_au_hashbox));Hasherator hr = new Hasherator();Set<String> s_host_hb_additions = new HashSet<String>();s_host_hb_additions.add(""/SSP/network/@network_id"");schema_host_hashbox = hr.copy_hashbox_entries(schema_network_hashbox, schema_host_hashbox, s_host_hb_additions);logger.info(""schema_host_hashbox(after adding network name)\n"" + xstream.toXML(schema_host_hashbox));Map<String, String> transforms_s_au_hb = new HashMap<String, String>();transforms_s_au_hb.put(""/SSP/archivalUnits/au/auCapabilities/storageRequired/@max_size"", ""s_gigabytes_to_string_bytes_unformatted()"");schema_au_hashbox = hr.convert_hashbox_vals(schema_au_hashbox, transforms_s_au_hb);Map<String, String> transforms_s_host_hb = new HashMap<String, String>();transforms_s_host_hb.put(""/SSP/hosts/host/hostCapabilities/storageAvailable/@max_size"", ""s_gigabytes_to_string_bytes_unformatted()"");schema_host_hashbox = hr.convert_hashbox_vals(schema_host_hashbox, transforms_s_host_hb);logger.info(""schema_host_hashbox(after transformations)\n"" + xstream.toXML(schema_host_hashbox));logger.info(""\n"");logger.info(""========== Process Schema  END ============================"");logger.info(""\n"");logger.info(""========== Database Operations ============================"");MYSQLWorkPlnHostSummaryDAO daowphs = new MYSQLWorkPlnHostSummaryDAO();daowphs.drop();daowphs.create();daowphs.updateTimestamp();CachedRowSet rs_q0_N = daowphs.query_0_N();double d_space_total = DBUtil.get_single_db_double_value(rs_q0_N, ""net_sum_repo_size"");double d_space_used = DBUtil.get_single_db_double_value(rs_q0_N, ""net_sum_used_space"");double d_space_free = d_space_total - d_space_used;double d_avg_uptime = DBUtil.get_single_db_double_value(rs_q0_N, ""net_avg_uptime"");long space_total = (long) d_space_total;long space_used = (long) d_space_used;long space_free = space_total - space_used;String f_space_total = Utility.l_bytes_to_other_units_formatted(space_total, 3, ""T"");String f_space_used = Utility.l_bytes_to_other_units_formatted(space_used, 3, ""G"");String f_space_free = Utility.l_bytes_to_other_units_formatted(space_free, 3, ""T"");String f_space_free2 = Utility.l_bytes_to_other_units_formatted(space_free, 3, null);logger.info(""d_space_total: "" + d_space_total + ""\n"" + ""d_space_used: "" + d_space_used + ""\n"" + ""space_total: "" + space_total + ""\n"" + ""space_used: "" + space_used + ""\n"" + ""space_free: "" + space_free + ""\n\n"" + ""Double.toString( d_space_total ): "" + Double.toString(d_space_total) + ""\n\n"" + ""f_space_total: "" + f_space_total + ""\n"" + ""f_space_used: "" + f_space_used + ""\n"" + ""f_space_free: "" + f_space_free + ""\n"" + ""f_space_free2: "" + f_space_free2);rprtCnst = new ReportData();logger.info(""\n"");logger.info(""========== Load Report Constants from Calculations ==========="");rprtCnst.addKV(""REPORT_HOSTS_TOTAL_DISKSPACE"", f_space_total);rprtCnst.addKV(""REPORT_HOSTS_TOTAL_DISKSPACE_USED"", f_space_used);rprtCnst.addKV(""REPORT_HOSTS_TOTAL_DISKSPACE_FREE"", f_space_free);rprtCnst.addKV(""REPORT_HOSTS_MEAN_UPTIME"", Utility.ms_to_dd_hh_mm_ss_formatted((long) d_avg_uptime));logger.info(""r=\n"" + rprtCnst.toString());logger.info(""\n"");logger.info(""========== Load Report Constants from ConfigFile ============="");rprtCnst.addKV(""REPORT_FILENAME_SCHEMA_FILENAME"", configFile.getAuditSchemaFile());rprtCnst.addKV(""REPORT_FILENAME_SCHEMA_FILE_XSD_FILENAME"", configFile.getAuditSchemaXsdFile());rprtCnst.addKV(""REPORT_FILENAME_XML_DIFF_FILENAME"", configFile.getAuditReportFile());rprtCnst.addKV(""REPORT_FILENAME_XML_DIFF_FILE_XSD_FILENAME"", configFile.getAuditReportXsdFile());logger.info(""\n"");logger.info(""========== Load Report Constants from Hashboxes =============="");Set auditHBKeySet = hr.getMapKeyset(schema_audit_hashbox, ""schema_audit_hashbox"");String audit_id = hr.singleKeysetEntryToString(auditHBKeySet);logger.info(""audit_id: "" + audit_id);Set networkHBKeySet = hr.getMapKeyset(schema_network_hashbox, ""schema_network_hashbox"");String network_id = hr.singleKeysetEntryToString(networkHBKeySet);logger.info(""network_id: "" + network_id);rprtCnst.addKV(""REPORT_AUDIT_ID"", audit_id);rprtCnst.addKV(""REPORT_AUDIT_REPORT_EMAIL"", hr.extractSingleValueFromHashbox(schema_audit_hashbox, ""schema_audit_hashbox"", audit_id, ""/SSP/audit/auditReportEmail""));rprtCnst.addKV(""REPORT_AUDIT_INTERVAL"", hr.extractSingleValueFromHashbox(schema_audit_hashbox, ""schema_audit_hashbox"", audit_id, ""/SSP/audit/auditReportInterval/@maxDays""));rprtCnst.addKV(""REPORT_SCHEMA_VERSION"", hr.extractSingleValueFromHashbox(schema_audit_hashbox, ""schema_audit_hashbox"", audit_id, ""/SSP/audit/schemaVersion""));rprtCnst.addKV(""REPORT_CLASSIFICATION_GEOGRAPHIC_SUMMARY_SCHEME"", hr.extractSingleValueFromHashbox(schema_audit_hashbox, ""schema_audit_hashbox"", audit_id, ""/SSP/audit/geographicSummaryScheme""));rprtCnst.addKV(""REPORT_CLASSIFICATION_SUBJECT_SUMMARY_SCHEME"", hr.extractSingleValueFromHashbox(schema_audit_hashbox, ""schema_audit_hashbox"", audit_id, ""/SSP/audit/subjectSummaryScheme""));rprtCnst.addKV(""REPORT_CLASSIFICATION_OWNER_INSTITUTION_SUMMARY_SCHEME"", hr.extractSingleValueFromHashbox(schema_audit_hashbox, ""schema_audit_hashbox"", audit_id, ""/SSP/audit/ownerInstSummaryScheme""));rprtCnst.addKV(""REPORT_NETWORK_ID"", network_id);rprtCnst.addKV(""REPORT_NETWORK_ADMIN_EMAIL"", hr.extractSingleValueFromHashbox(schema_network_hashbox, ""schema_network_hashbox"", network_id, ""/SSP/network/networkIdentity/accessBase/@adminEmail""));rprtCnst.addKV(""REPORT_GEOGRAPHIC_CODING"", hr.extractSingleValueFromHashbox(schema_network_hashbox, ""schema_network_hashbox"", network_id, ""/SSP/network/networkIdentity/geographicCoding""));logger.info(""\n"");logger.info(""==========================================================="");logger.info(""========== Process Network Data BEGIN======================"");logger.info(""==========================================================="");Set<String> tableSet0 = reportAuOverviewFacade.findAllTables();String reportAuOverviewTable = ""report_au_overview"";int n_tabs = 0;if (tableSet0 != null && !tableSet0.isEmpty()) {logger.fine(""Table List N="" + tableSet0.size());for (String tableName : tableSet0) {n_tabs++;if (tableName.equalsIgnoreCase(reportAuOverviewTable)) {logger.fine(n_tabs + "" "" + tableName + "" <--"");} else {logger.fine(n_tabs + "" "" + tableName);}}} else {logger.fine(""No tables found in DB."");}if (!tableSet0.contains(reportAuOverviewTable)) {logger.info(""Database does not contain table '"" + reportAuOverviewTable + ""'"");}List<ReportAuOverview> repAuOvTabAllData = null;repAuOvTabAllData = reportAuOverviewFacade.findAll();if (repAuOvTabAllData != null && !(repAuOvTabAllData.isEmpty())) {logger.fine(""\n"" + reportAuOverviewTable + "" table has "" + repAuOvTabAllData.size() + "" rows."");int n_rows = 0;for (ReportAuOverview row : repAuOvTabAllData) {n_rows++;logger.fine(n_rows + "" "" + row.toString());}} else {logger.fine(reportAuOverviewTable + "" is null, empty, or nonexistent."");}logger.fine(""report_au_overview Table xstream Dump:\n"" + xstream.toXML(repAuOvTabAllData));logger.fine(""\n"");logger.fine(""Iterate over repAuOvTabAllData 2"");Iterator it = repAuOvTabAllData.iterator();int n_el = 0;while (it.hasNext()) {++n_el;String el = it.next().toString();logger.fine(n_el + "". "" + el);}Class aClass = edu.harvard.iq.safe.saasystem.entities.ReportAuOverview.class;String reportAuOverviewTableName = reportAuOverviewFacade.getTableName();logger.fine(""\n"");logger.fine(""EntityManager Tests"");logger.fine(""Table: "" + reportAuOverviewTableName);logger.fine(""\n"");logger.fine(""Schema: "" + reportAuOverviewFacade.getSchema());logger.fine(""\n"");Set columnList = reportAuOverviewFacade.getColumnList(reportAuOverviewFacade.getTableName());logger.fine(""Columns (fields) in table '"" + reportAuOverviewTableName + ""' (N="" + columnList.size() + "")"");Set<String> colList = new HashSet();Iterator colNames = columnList.iterator();int n_el2 = 0;while (colNames.hasNext()) {++n_el2;String el = colNames.next().toString();logger.fine(n_el2 + "". "" + el);colList.add(el);}logger.fine(colList.size() + "" entries in Set 'colList' "");logger.info(""========== Query 'au_overview_table'============="");MySQLAuOverviewDAO daoao = new MySQLAuOverviewDAO();CachedRowSet rs_q1_A = daoao.query_q1_A();int[] au_table_rc = DBUtil.get_rs_dims(rs_q1_A);logger.info(""Au Table Query ResultSet has "" + au_table_rc[0] + "" rows and "" + au_table_rc[1] + "" columns."");rprtCnst.addKV(""REPORT_N_AUS_IN_NETWORK"", Integer.toString(au_table_rc[0]));logger.info(""========== Create 'network_au_hashbox' =========="");Map<String, Map> network_au_hashbox = new TreeMap<String, Map>(DBUtil.rs_to_hashbox(rs_q1_A, null, ""au_id""));logger.info(""network_au_hashbox before transformations\n"" + xstream.toXML(network_au_hashbox));Map<String, String> transforms_n_au_hb = new HashMap<String, String>();transforms_n_au_hb.put(""last_s_crawl_end"", ""ms_to_decimal_days_elapsed()"");transforms_n_au_hb.put(""last_s_poll_end"", ""ms_to_decimal_days_elapsed()"");transforms_n_au_hb.put(""crawl_duration"", ""ms_to_decimal_days()"");network_au_hashbox = hr.convert_hashbox_vals(network_au_hashbox, transforms_n_au_hb);Map<String, String> auNVerifiedRegions = reportAuOverviewFacade.getAuNVerifiedRegions();logger.fine(""auNVerifiedRegions\n"" + xstream.toXML(auNVerifiedRegions));network_au_hashbox = hr.addNewInnerHashEntriesToHashbox(network_au_hashbox, auNVerifiedRegions, ""au_n_verified_regions"");logger.info(""network_au_hashbox after Transformations and Addition of 'au_n_verified_regions'"" + xstream.toXML(network_au_hashbox));logger.info(""========== Compare AUs BEGIN =============================="");ArrayList<String> al_aus_in_schema_not_in_network = new ArrayList<String>(comp_keys.keys_not_in_both_hashes(schema_au_hashbox, network_au_hashbox, ""schema_aus"", ""network_aus""));Map<String, String> h_aus_in_schema_not_in_network = hr.get_names_from_id_list(schema_au_hashbox, al_aus_in_schema_not_in_network, ""/SSP/archivalUnits/au/auIdentity/name"");rprtCnst.addKV(""REPORT_N_AUS_IN_SCHEMA_NOT_IN_NETWORK"", Integer.toString(al_aus_in_schema_not_in_network.size()));rprtCnst.set_h_aus_in_schema_not_in_network(h_aus_in_schema_not_in_network);MYSQLReportAusInSchemaNotInNetworkDAO daoraisnin = new MYSQLReportAusInSchemaNotInNetworkDAO();daoraisnin.create();daoraisnin.update(h_aus_in_schema_not_in_network);ArrayList<String> al_aus_in_network_not_in_schema = new ArrayList<String>(comp_keys.keys_not_in_both_hashes(network_au_hashbox, schema_au_hashbox, ""network_aus"", ""schema_aus""));Utility.print_arraylist(al_aus_in_network_not_in_schema, ""aus in_network_not_in_schema"");Map<String, String> h_aus_in_network_not_in_schema = hr.get_names_from_id_list(network_au_hashbox, al_aus_in_network_not_in_schema, ""au_name"");rprtCnst.addKV(""REPORT_N_AUS_IN_NETWORK_NOT_IN_SCHEMA"", Integer.toString(al_aus_in_network_not_in_schema.size()));rprtCnst.set_h_aus_in_network_not_in_schema(h_aus_in_network_not_in_schema);MYSQLReportAusInNetworkNotInSchemaDAO daorainnis = new MYSQLReportAusInNetworkNotInSchemaDAO();daorainnis.create();daorainnis.update(h_aus_in_network_not_in_schema);Comparison comp_au = new Comparison(schema_au_hashbox, ""Schema_AU"", network_au_hashbox, ""Network_AU"", XpathUtility.getXpathToDbColumnMap(), XpathUtility.getXpathToCompOpMap());comp_au.init();logger.info(""Attempting to create DB table 'lockss_audit.audit_results_au'"");MYSQLAuditResultsAuDAO daoara = new MYSQLAuditResultsAuDAO();daoara.create();String results_table_au = ""audit_results_au"";String sql_vals_au_schema = comp_au.iterate_hbs_au(daoara, results_table_au, ""au"", h_aus_in_network_not_in_schema);CachedRowSet rs_RA2 = daoara.query_q1_RA();String n_aus_not_verified = DBUtil.get_single_count_from_rs(rs_RA2);rprtCnst.addKV(""REPORT_N_AUS_NOT_VERIFIED"", DBUtil.get_single_count_from_rs(rs_RA2));logger.info(""\nInstantiating Result Class from main()"");DiffResult result = new DiffResult();Map au_comp_host = result.get_result_hash(""au"");logger.info(""========== Compare AUs END ================================"");logger.info(""========== Process Network Host Table ====================="");logger.info(""========== Query 'lockss_box_table' and ========="");logger.info(""================ 'repository_space_table' =======\n"");MySQLLockssBoxRepositorySpaceDAO daolbrs = new MySQLLockssBoxRepositorySpaceDAO();CachedRowSet rs_q1_H = daolbrs.query_q1_H();int[] host_table_rc = DBUtil.get_rs_dims(rs_q1_H);logger.info(""Host Table Query ResultSet has "" + host_table_rc[0] + "" rows and "" + host_table_rc[1] + "" columns."");rprtCnst.addKV(""REPORT_N_HOSTS_IN_NETWORK"", Integer.toString(host_table_rc[0]));Long numberOfMemberHosts;if (StringUtils.isNotBlank(saasConfigurationRegistry.getSaasConfigProperties().getProperty(""saas.ip.fromlockssxml""))) {numberOfMemberHosts = Long.parseLong(Integer.toString(saasConfigurationRegistry.getSaasConfigProperties().getProperty(""saas.ip.fromlockssxml"").split("","").length));} else {if (StringUtils.isNotBlank(saasConfigurationRegistry.getSaasAuditConfigProperties().getProperty(""saas.targetIp""))) {numberOfMemberHosts = Long.parseLong(Integer.toString(saasConfigurationRegistry.getSaasAuditConfigProperties().getProperty(""saas.targetIp"").split("","").length));} else {numberOfMemberHosts = 0L;}}rprtCnst.addKV(""REPORT_N_HOSTS_IN_NETWORK_2"", Long.toString(numberOfMemberHosts));Long numberOfReachableHosts;numberOfReachableHosts = lockssBoxFacade.getTotalHosts();rprtCnst.addKV(""REPORT_N_HOSTS_IN_NETWORK_REACHABLE"", Long.toString(numberOfReachableHosts));Map<String, Map> network_host_hashbox = new TreeMap<String, Map>(DBUtil.rs_to_hashbox(rs_q1_H, null, ""ip_address""));logger.info(""network_host_hashbox before transformations\n"" + xstream.toXML(network_host_hashbox));Map<String, String> transforms_n_host_hb = new HashMap<String, String>();transforms_n_host_hb.put(""repo_size"", ""SciToStr2()"");transforms_n_host_hb.put(""used_space"", ""SciToStr2()"");network_host_hashbox = hr.convert_hashbox_vals(network_host_hashbox, transforms_n_host_hb);logger.info(""network_host_hashbox(after transformations)\n"" + xstream.toXML(network_host_hashbox));Map<String, String> network_host_hb_sel_used_space = hr.join_hash_pk_to_inner_hash_value(network_host_hashbox, ""used_space"");Map<String, String> schema_host_hb_sel_size = hr.join_hash_pk_to_inner_hash_value(schema_host_hashbox, ""/SSP/hosts/host/hostCapabilities/storageAvailable/@max_size"");logger.info(""\n========== Process Network  END ==========================="");logger.info(""========== Compare Key Sets (IDs)=========================="");Set<String> sa_hb_keys = hr.gen_hash_keyset(schema_au_hashbox, ""schema_au_hashbox"");hr.set_hash_keyset(sa_hb_keys, ""s_au_hb"");Set<String> sh_hb_keys = hr.gen_hash_keyset(schema_host_hashbox, ""schema_host_hashbox"");hr.set_hash_keyset(sh_hb_keys, ""s_h_hb"");Set<String> na_hb_keys = hr.gen_hash_keyset(network_au_hashbox, ""network_au_hashbox"");hr.set_hash_keyset(na_hb_keys, ""n_au_hb"");Set<String> nh_hb_keys = hr.gen_hash_keyset(network_host_hashbox, ""network_host_hashbox"");hr.set_hash_keyset(nh_hb_keys, ""n_h_hb"");Set<String> aus_in_schema_not_in_network = new TreeSet<String>(hr.get_hash_keyset(""s_au_hb""));aus_in_schema_not_in_network.removeAll(hr.get_hash_keyset(""n_au_hb""));Set<String> aus_in_network_not_in_schema = new TreeSet<String>(hr.get_hash_keyset(""n_au_hb""));aus_in_network_not_in_schema.removeAll(hr.get_hash_keyset(""s_au_hb""));Set<String> symmetricDiff = new HashSet<String>(hr.get_hash_keyset(""s_au_hb""));symmetricDiff.addAll(hr.get_hash_keyset(""n_au_hb""));Set<String> tmp = new HashSet<String>(hr.get_hash_keyset(""s_au_hb""));tmp.retainAll(hr.get_hash_keyset(""n_au_hb""));symmetricDiff.removeAll(tmp);Set<String> hosts_in_network_not_in_schema = new TreeSet<String>(hr.get_hash_keyset(""n_h_hb""));hosts_in_network_not_in_schema.removeAll(hr.get_hash_keyset(""s_h_hb""));Set<String> hosts_in_schema_not_in_network = new TreeSet<String>(hr.get_hash_keyset(""s_h_hb""));hosts_in_schema_not_in_network.removeAll(hr.get_hash_keyset(""n_h_hb""));ArrayList<String> al_hosts_in_schema_not_in_network = new ArrayList<String>(comp_keys.keys_not_in_both_hashes(schema_host_hashbox, network_host_hashbox, ""schema_hosts"", ""network_hosts""));Map<String, String> h_hosts_in_schema_not_in_network = hr.get_names_from_id_list(schema_host_hashbox, al_hosts_in_schema_not_in_network, ""/SSP/hosts/host/hostIdentity/name"");rprtCnst.addKV(""REPORT_N_HOSTS_IN_SCHEMA_NOT_IN_NETWORK"", Integer.toString(al_hosts_in_schema_not_in_network.size()));rprtCnst.set_h_hosts_in_schema_not_in_network(h_hosts_in_schema_not_in_network);MYSQLReportHostsInSchemaNotInNetworkDAO daorhisnin = new MYSQLReportHostsInSchemaNotInNetworkDAO();daorhisnin.create();daorhisnin.update(h_hosts_in_schema_not_in_network);ArrayList<String> al_hosts_in_network_not_in_schema = new ArrayList<String>(comp_keys.keys_not_in_both_hashes(network_host_hashbox, schema_host_hashbox, ""network_hosts"", ""schema_hosts""));Map<String, String> h_hosts_in_network_not_in_schema = hr.get_names_from_id_list(network_host_hashbox, al_hosts_in_network_not_in_schema, ""host_name"");rprtCnst.addKV(""REPORT_N_HOSTS_IN_NETWORK_NOT_IN_SCHEMA"", Integer.toString(al_hosts_in_network_not_in_schema.size()));rprtCnst.set_h_hosts_in_network_not_in_schema(h_hosts_in_network_not_in_schema);MYSQLReportHostsInNetworkNotInSchemaDAO rhinnis = new MYSQLReportHostsInNetworkNotInSchemaDAO();rhinnis.create();rhinnis.update(h_hosts_in_network_not_in_schema);logger.info(""========== Compare Hosts BEGIN ============================"");Comparison comp_host = new Comparison(schema_host_hashbox, ""Schema_Host"", network_host_hashbox, ""Network_Host"", XpathUtility.getXpathToDbColumnMap(), XpathUtility.getXpathToCompOpMap());comp_host.init();MYSQLAuditResultsHostDAO daoarh = new MYSQLAuditResultsHostDAO();daoarh.create();String sql_vals_host_schema = comp_host.iterate_hbs_host(daoarh, ""audit_results_host"", ""host"", h_hosts_in_network_not_in_schema);CachedRowSet rs_RH = daoarh.query_q1_RH();String n_hosts_not_meeting_storage = DBUtil.get_single_count_from_rs(rs_RH);rprtCnst.addKV(""REPORT_N_HOSTS_NOT_MEETING_STORAGE"", n_hosts_not_meeting_storage);logger.info(""Calling result.get_result_hash( \""host\"" ) from main()"");Map host_comp_hash = result.get_result_hash(""host"");Map au_comp_hash2 = result.get_result_hash(""au"");logger.info(""========== Compare Hosts END =============================="");Map<String, String> map_host_ip_to_host_name = hr.make_id_hash(schema_host_hashbox, ""/SSP/hosts/host/hostIdentity/name"");rprtCnst.addKV(""REPORT_N_HOSTS_IN_SCHEMA"", Integer.toString(map_host_ip_to_host_name.size()));String[] host_ip_list = hr.hash_keys_to_array(schema_host_hashbox);String[][] col2 = Utility.add_column_to_array1(map_host_ip_to_host_name.values().toArray(new String[0]), host_ip_list, null);Map<String, String> map_au_key_string_to_au_name = hr.make_id_hash(schema_au_hashbox, ""/SSP/archivalUnits/au/auIdentity/name"");logger.info(""Length map_au_key_string_to_au_name.values().toArray(new String[0]: "" + map_au_key_string_to_au_name.values().toArray(new String[0]).length);rprtCnst.addKV(""REPORT_N_AUS_IN_SCHEMA"", Integer.toString(map_au_key_string_to_au_name.size()));MySQLLockssBoxArchivalUnitStatusDAO daolbaus = new MySQLLockssBoxArchivalUnitStatusDAO();int[] rc = daolbaus.getResultSetDimensions();int n_rs_rows = rc[0];int n_rs_cols = rc[1];logger.info(""\n"" + n_rs_rows + "" rows (Host-AU's). "" + n_rs_cols + "" columns."");rprtCnst.addKV(""REPORT_N_HOST_AUS_IN_NETWORK"", Integer.toString(n_rs_rows));logger.info(""================== Query 'audit_results_host' Table =========="");CachedRowSet NNonCompliantAUsCRS = daoara.getNNonCompliantAUs();String NNonCompliantAUs = DBUtil.get_single_count_from_rs(NNonCompliantAUsCRS);rprtCnst.addKV(""REPORT_N_AUS_NONCOMPLIANT"", NNonCompliantAUs);logger.info(""================== Query 'audit_results_host' Table END ======"");logger.info(""========== Output Report =================================="");MYSQLReportConstantsDAO daorc = new MYSQLReportConstantsDAO();daorc.create();daorc.update(rprtCnst.getBox());MYSQLReportHostSummaryDAO daorhs = new MYSQLReportHostSummaryDAO();daorhs.create();CachedRowSet crsarh = daoarh.queryAll();daorhs.update(crsarh);daorhs.update_new_column(""space_offered"", schema_host_hb_sel_size);daorhs.update_new_column(""space_used"", network_host_hb_sel_used_space);Map<String, String> computation_cols_in_net_host_summary = new HashMap<String, String>();computation_cols_in_net_host_summary.put(""space_total"", ""1"");computation_cols_in_net_host_summary.put(""space_used"", ""2"");daorhs.update_compute_column(""space_free"", computation_cols_in_net_host_summary);logger.info(""========== Audit Report Writer ======================================"");AuditReportXMLWriter arxw = new AuditReportXMLWriter(rprtCnst, configFile.getAuditReportFile());Set<String> tableSet = tracAuditChecklistDataFacade.findAllTables();String tracResultTable = ""trac_audit_checklist_data"";List<TracAuditChecklistData> evidenceList = null;if (tableSet.contains(tracResultTable)) {evidenceList = tracAuditChecklistDataFacade.findAll();logger.info(""TRAC evidence list is size:"" + evidenceList.size());} else {logger.info(""Database does not contain table 'trac_audit_checklist_data'"");}Map<String, String> tracDataMap = new LinkedHashMap<String, String>();for (TracAuditChecklistData tracdata : evidenceList) {tracDataMap.put(tracdata.getAspectId(), tracdata.getEvidence());}String writeTimestamp = arxw.write(daoarh, daoara, daorc, tracDataMap);File target = new File(configFile.getAuditReportFileDir() + File.separator + configFile.getAuditSchemaFileName() + ""."" + writeTimestamp);FileChannel sourceChannel = null;FileChannel targetChannel = null;try {sourceChannel = new FileInputStream(auditSchemaFile).getChannel();targetChannel = new FileOutputStream(target).getChannel();targetChannel.transferFrom(sourceChannel, 0, sourceChannel.size());} catch (IOException e) {logger.log(Level.SEVERE, ""IO exception occurred while copying file"", e);} finally {try {if (sourceChannel != null) {sourceChannel.close();}if (targetChannel != null) {targetChannel.close();}} catch (IOException e) {logger.info(""closing channels failed"");}}logger.info(""\n========== EXIT drive() ==========================================="");return writeTimestamp;}private void getRandomGUID(boolean secure) {MessageDigest md5;StringBuilder sbValueBeforeHash = new StringBuilder();try {md5 = MessageDigest.getInstance(""SHA-1"");} catch (NoSuchAlgorithmException e) {throw new ApplicationIllegalArgumentException(e);}long time = System.nanoTime();long rand = 0;if (secure) {rand = MySecureRand.nextLong();} else {rand = MyRand.nextLong();}sbValueBeforeHash.append(SId);sbValueBeforeHash.append("":"");sbValueBeforeHash.append(Long.toString(time));sbValueBeforeHash.append("":"");sbValueBeforeHash.append(Long.toString(rand));valueBeforeHash = sbValueBeforeHash.toString();md5.update(valueBeforeHash.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) {sb.append('0');}sb.append(Integer.toHexString(b));}valueAfterHash = sb.toString();}private Vector _sort(Pair[] ps, String id, int num) {Vector ret = new Vector();boolean swapped = true;int j = 0;Pair tmp;while (swapped) {swapped = false;j++;for (int i = 0; i < ps.length - j; i++) {if (ps[i].c > ps[i + 1].c) {tmp = ps[i];ps[i] = ps[i + 1];ps[i + 1] = tmp;swapped = true;}}}int m = Math.min(num, ps.length);for (int i = m - 1; i >= 0; i--) {if (id == null) ret.addElement(ps[i].n); else if (ps[i].n.startsWith(id) && !ps[i].n.equals(id)) ret.addElement(ps[i].n);}return ret;}private void readVersion() {URL url = ClassLoader.getSystemResource(""version"");if (url == null) {return;}BufferedReader reader = null;String line = null;try {reader = new BufferedReader(new InputStreamReader(url.openStream()));while ((line = reader.readLine()) != null) {if (line.startsWith(""Version="")) {version = (line.split(""=""))[1];}if (line.startsWith(""Revision="")) {revision = (line.split(""=""))[1];}if (line.startsWith(""Date="")) {String sSec = (line.split(""=""))[1];Long lSec = Long.valueOf(sSec);compileDate = new Date(lSec);}}} catch (IOException e) {e.printStackTrace();} finally {if (reader != null) {try {reader.close();} catch (IOException e) {e.printStackTrace();}}}return;}public void testGetResource_FileOutsideOfClasspath() throws Exception {File temp = File.createTempFile(""dozerfiletest"", "".txt"");temp.deleteOnExit();String resourceName = ""file:"" + temp.getAbsolutePath();URL url = loader.getResource(resourceName);assertNotNull(""URL should not be null"", url);InputStream is = url.openStream();assertNotNull(""input stream should not be null"", is);}public static final synchronized String hash(String data) {if (digest == null) {try {digest = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException nsae) {log.error(""Failed to load the MD5 MessageDigest. "" + ""Jive will be unable to function normally."", nsae);}}try {digest.update(data.getBytes(""utf-8""));} catch (UnsupportedEncodingException e) {log.error(e);}return encodeHex(digest.digest());}@Overrideprotected URLConnection openConnection(URL url) throws IOException {return new URLConnection(url) {@Overridepublic void connect() throws IOException {}@Overridepublic InputStream getInputStream() throws IOException {ThemeResource f = getFacelet(getURL().getFile());return new ByteArrayInputStream(f.getText().getBytes());}};}public static void loadPoFile(URL url) {states state = states.IDLE;String msgCtxt = """";String msgId = """";String msgStr = """";try {if (url == null) return;InputStream in = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(in, ""UTF8""));String strLine;while ((strLine = br.readLine()) != null) {if (strLine.startsWith(""msgctxt"")) {if (state != states.MSGCTXT) msgCtxt = """";state = states.MSGCTXT;strLine = strLine.substring(7).trim();}if (strLine.startsWith(""msgid"")) {if (state != states.MSGID) msgId = """";state = states.MSGID;strLine = strLine.substring(5).trim();}if (strLine.startsWith(""msgstr"")) {if (state != states.MSGSTR) msgStr = """";state = states.MSGSTR;strLine = strLine.substring(6).trim();}if (!strLine.startsWith(""\"""")) {state = states.IDLE;msgCtxt = """";msgId = """";msgStr = """";} else {if (state == states.MSGCTXT) {msgCtxt += format(strLine);}if (state == states.MSGID) {if (msgId.isEmpty()) {if (!msgCtxt.isEmpty()) {msgId = msgCtxt + ""|"";msgCtxt = """";}}msgId += format(strLine);}if (state == states.MSGSTR) {msgCtxt = """";msgStr += format(strLine);if (!msgId.isEmpty()) messages.setProperty(msgId, msgStr);}}}in.close();} catch (IOException e) {Logger.logError(e, ""Error loading message.po."");}}"	5
"public static void copy(FileInputStream source, FileOutputStream target) throws IOException {FileChannel sourceChannel = source.getChannel();FileChannel targetChannel = target.getChannel();sourceChannel.transferTo(0, sourceChannel.size(), targetChannel);sourceChannel.close();targetChannel.close();}public final InputStream getStreamFromUrl(final URL url) {try {if (listener != null) {listener.openedStream(url);}return url.openStream();} catch (IOException e) {listener.exceptionThrown(e);return null;}}public static void copyFile(File fromFile, File toFile) throws OWFileCopyException {try {FileChannel src = new FileInputStream(fromFile).getChannel();FileChannel dest = new FileOutputStream(toFile).getChannel();dest.transferFrom(src, 0, src.size());src.close();dest.close();} catch (IOException e) {throw (new OWFileCopyException(""An error occurred while copying a file"", e));}}private static void readData() {StringTokenizer sTok;topSet = new HashSet();sTok = new StringTokenizer(tops, "","");while (sTok.hasMoreTokens()) topSet.add(sTok.nextToken());leftSet = new HashSet();sTok = new StringTokenizer(lefts, "","");while (sTok.hasMoreTokens()) leftSet.add(sTok.nextToken());rightSet = new HashSet();sTok = new StringTokenizer(rights, "","");while (sTok.hasMoreTokens()) rightSet.add(sTok.nextToken());farRightSet = new HashSet();sTok = new StringTokenizer(farrights, "","");while (sTok.hasMoreTokens()) farRightSet.add(sTok.nextToken());vowelSet = new HashSet();sTok = new StringTokenizer(vowels, "","");while (sTok.hasMoreTokens()) {String ntk;vowelSet.add(ntk = sTok.nextToken());if (maxEwtsVowelLength < ntk.length()) maxEwtsVowelLength = ntk.length();validInputSequences.put(ntk, anyOldObjectWillDo);}puncSet = new HashSet();sTok = new StringTokenizer(others, "","");while (sTok.hasMoreTokens()) {String ntk;puncSet.add(ntk = sTok.nextToken());validInputSequences.put(ntk, anyOldObjectWillDo);}charSet = new HashSet();tibSet = new HashSet();sTok = new StringTokenizer(tibetanConsonants, "","");while (sTok.hasMoreTokens()) {String ntk;charSet.add(ntk = sTok.nextToken());tibSet.add(ntk);validInputSequences.put(ntk, anyOldObjectWillDo);}sanskritStackSet = new HashSet();sTok = new StringTokenizer(otherConsonants, "","");while (sTok.hasMoreTokens()) {String ntk;charSet.add(ntk = sTok.nextToken());sanskritStackSet.add(ntk);validInputSequences.put(ntk, anyOldObjectWillDo);}numberSet = new HashSet();sTok = new StringTokenizer(numbers, "","");while (sTok.hasMoreTokens()) {String ntk;charSet.add(ntk = sTok.nextToken());numberSet.add(ntk);validInputSequences.put(ntk, anyOldObjectWillDo);}charSet.add(""Y"");charSet.add(""R"");charSet.add(""W"");validInputSequences.put(""Y"", anyOldObjectWillDo);validInputSequences.put(""R"", anyOldObjectWillDo);validInputSequences.put(""W"", anyOldObjectWillDo);sTok = null;top_vowels = new HashSet();top_vowels.add(i_VOWEL);top_vowels.add(e_VOWEL);top_vowels.add(o_VOWEL);top_vowels.add(ai_VOWEL);top_vowels.add(au_VOWEL);top_vowels.add(reverse_i_VOWEL);try {URL url = TibetanMachineWeb.class.getResource(fileName);if (url == null) {System.err.println(""Cannot find "" + fileName + ""; aborting."");System.exit(1);}InputStreamReader isr = new InputStreamReader(url.openStream());BufferedReader in = new BufferedReader(isr);System.out.println(""Reading Tibetan Machine Web code table "" + fileName);String line;boolean hashOn = false;boolean isTibetan = false;boolean isSanskrit = false;boolean ignore = false;while ((line = in.readLine()) != null) {if (line.startsWith(""<?"")) {if (line.equalsIgnoreCase(""<?Consonants?>"")) {isSanskrit = false;isTibetan = true;hashOn = false;ignore = false;do {line = in.readLine();} while (line.startsWith(""//"") || line.equals(""""));} else if (line.equalsIgnoreCase(""<?Numbers?>"")) {isSanskrit = false;isTibetan = false;hashOn = false;ignore = false;do {line = in.readLine();} while (line.startsWith(""//"") || line.equals(""""));} else if (line.equalsIgnoreCase(""<?Vowels?>"")) {isSanskrit = false;isTibetan = false;hashOn = false;ignore = false;do {line = in.readLine();} while (line.startsWith(""//"") || line.equals(""""));} else if (line.equalsIgnoreCase(""<?Other?>"")) {isSanskrit = false;isTibetan = false;hashOn = false;ignore = false;do {line = in.readLine();} while (line.startsWith(""//"") || line.equals(""""));} else if (line.equalsIgnoreCase(""<?Input:Punctuation?>"") || line.equalsIgnoreCase(""<?Input:Vowels?>"")) {isSanskrit = false;isTibetan = false;hashOn = true;ignore = false;} else if (line.equalsIgnoreCase(""<?Input:Tibetan?>"")) {isSanskrit = false;isTibetan = true;hashOn = true;ignore = false;} else if (line.equalsIgnoreCase(""<?Input:Numbers?>"")) {isSanskrit = false;isTibetan = false;hashOn = true;ignore = false;} else if (line.equalsIgnoreCase(""<?Input:Sanskrit?>"")) {isSanskrit = true;isTibetan = false;hashOn = true;ignore = false;} else if (line.equalsIgnoreCase(""<?ToWylie?>"")) {isSanskrit = false;isTibetan = false;hashOn = false;ignore = false;} else if (line.equalsIgnoreCase(""<?Ignore?>"")) {isSanskrit = false;ignore = true;}} else if (line.startsWith(""//"")) {;} else if (line.equals("""")) {;} else {StringTokenizer st = new StringTokenizer(line, DELIMITER, true);String wylie = null;DuffCode[] duffCodes;duffCodes = new DuffCode[11];int k = 0;StringBuffer escapedToken = new StringBuffer("""");ThdlDebug.verify(escapedToken.length() == 0);while (st.hasMoreTokens()) {String val = getEscapedToken(st, escapedToken);if (val.equals(DELIMITER) && escapedToken.length() == 0) {k++;} else if (!val.equals("""")) {if (escapedToken.length() != 0) {escapedToken = new StringBuffer("""");ThdlDebug.verify(escapedToken.length() == 0);}switch(k) {case 0:wylie = val;break;case 1:duffCodes[TM] = new DuffCode(val, false);break;case 2:if (!ignore) {duffCodes[REDUCED_C] = new DuffCode(val, true);}break;case 3:duffCodes[TMW] = new DuffCode(val, true);if (null != duffCodes[TM]) {TMtoTMW[duffCodes[TM].getFontNum() - 1][duffCodes[TM].getCharNum() - 32] = duffCodes[TMW];}if (null != TMWtoTM[duffCodes[TMW].getFontNum() - 1][duffCodes[TMW].getCharNum() - 32]) throw new Error(""tibwn.ini is supposed to use the TibetanMachineWeb glyph as the unique key, but "" + val + "" appears two or more times."");TMWtoTM[duffCodes[TMW].getFontNum() - 1][duffCodes[TMW].getCharNum() - 32] = duffCodes[TM];if (wylie.toLowerCase().startsWith(""\\uf0"")) {int x = Integer.parseInt(wylie.substring(""\\u"".length()), 16);ThdlDebug.verify((x >= 0xF000 && x <= 0xF0FF));NonUnicodeToTMW[x - ''] = new DuffCode[] { duffCodes[TMW] };}break;case 4:case 5:case 6:case 7:case 8:case 9:if (!ignore) {try {duffCodes[k - 1] = new DuffCode(val, true);} catch (Exception e) {System.err.println(""Couldn't make a DuffCode out of "" + val + ""; line is "" + line + ""; k is "" + k);}}break;case 10:if (!val.equals(""none"")) {StringBuffer unicodeBuffer = new StringBuffer();StringTokenizer uTok = new StringTokenizer(val, "","");while (uTok.hasMoreTokens()) {String subval = uTok.nextToken();ThdlDebug.verify(subval.length() == 4 || subval.length() == 3);try {int x = Integer.parseInt(subval, 16);ThdlDebug.verify((x >= 0x0F00 && x <= 0x0FFF) || x == 0x5350 || x == 0x534D || x == 0x0020 || x == 0x00A0 || x == 0x2003);unicodeBuffer.append((char) x);} catch (NumberFormatException e) {ThdlDebug.verify(false);}}TMWtoUnicode[duffCodes[TMW].getFontNum() - 1][duffCodes[TMW].getCharNum() - 32] = unicodeBuffer.toString();char ch;if (unicodeBuffer.length() == 1 && UnicodeUtils.isInTibetanRange(ch = unicodeBuffer.charAt(0))) {if (null != UnicodeToTMW[ch - 'ༀ'][0] && 'ༀ' != ch && '༂' != ch && '༃' != ch && '་' != ch && '༎' != ch && 'ཀ' != ch && 'ག' != ch && 'ཉ' != ch && 'ཏ' != ch && 'ད' != ch && 'ན' != ch && 'ཞ' != ch && 'ར' != ch && 'ཤ' != ch && 'ཧ' != ch && 'ཪ' != ch && 'ཱ' != ch && 'ི' != ch && 'ཱི' != ch && 'ུ' != ch && 'ཱུ' != ch && 'ྲྀ' != ch && 'ཷ' != ch && 'ླྀ' != ch && 'ཹ' != ch && 'ེ' != ch && 'ོ' != ch && 'ཾ' != ch && 'ཱྀ' != ch) {throw new Error(""tibwn.ini has more than one TMW fellow listed that has the Unicode "" + val + "", but it's not on the list of specially handled glyphs"");}UnicodeToTMW[ch - 'ༀ'][0] = duffCodes[TMW];}}break;case 11:if (!ignore) {duffCodes[HALF_C] = new DuffCode(val, true);}break;case 12:if (!ignore) {DuffCode binduCode = new DuffCode(val, true);binduMap.put(duffCodes[TMW], binduCode);}break;case 13:throw new Error(""tibwn.ini has only 13 columns, you tried to use a 14th column."");}} else {if (k == 10) {throw new Error(""needed none or some unicode; line is "" + line);}}}if (k < 10) {throw new Error(""needed none or some unicode; line is "" + line);}if (!ignore) {if (null == wylie) throw new Error(fileName + "" has a line ^"" + DELIMITER + "" which means that no Wylie is assigned.  That isn't supported."");if (hashOn) {tibHash.put(Manipulate.unescape(wylie), duffCodes);}if (isTibetan) {StringBuffer wylieWithoutDashes = new StringBuffer(wylie);for (int wl = 0; wl < wylieWithoutDashes.length(); wl++) {if (wylieWithoutDashes.charAt(wl) == '-') {wylieWithoutDashes.deleteCharAt(wl);--wl;}}tibSet.add(wylieWithoutDashes.toString());}if (isSanskrit) {sanskritStackSet.add(wylie);}if (null == duffCodes[TMW]) throw new Error(fileName + "" has a line with wylie "" + wylie + "" but no TMW; that's not allowed"");int font = duffCodes[TMW].getFontNum();int code = duffCodes[TMW].getCharNum() - 32;toHashKey[font][code] = Manipulate.unescape(wylie);}}}} catch (IOException e) {System.out.println(""file Disappeared"");ThdlDebug.noteIffyCode();}}private void addMaintainerScripts(TarOutputStream tar, PackageInfo info) throws IOException, ScriptDataTooLargeException {for (final MaintainerScript script : info.getMaintainerScripts().values()) {if (script.getSize() > Integer.MAX_VALUE) {throw new ScriptDataTooLargeException(""The script data is too large for the tar file. script=["" + script.getType().getFilename() + ""]."");}final TarEntry entry = standardEntry(script.getType().getFilename(), UnixStandardPermissions.EXECUTABLE_FILE_MODE, (int) script.getSize());tar.putNextEntry(entry);IOUtils.copy(script.getStream(), tar);tar.closeEntry();}}public boolean config(URL url, boolean throwsException) throws IllegalArgumentException {try {final MetaRoot conf = UjoManagerXML.getInstance().parseXML(new BufferedInputStream(url.openStream()), MetaRoot.class, this);config(conf);return true;} catch (Exception e) {if (throwsException) {throw new IllegalArgumentException(""Configuration file is not valid "", e);} else {return false;}}}private void getPage(final String path, final String dataToSend, final GetPageCallback callback) {runner.add(new Runnable() {@Overridepublic void run() {String url = ""http://"" + resources.getString(R.string.host) + path;HttpUriRequest req;if (dataToSend == null) {req = new HttpGet(url);} else {req = new HttpPost(url);try {((HttpPost) req).setEntity(new StringEntity(dataToSend));} catch (UnsupportedEncodingException e) {Logger.getLogger(JSBridge.class.getName()).log(Level.SEVERE, ""Unsupported encoding."", e);}}req.addHeader(""Cookie"", getAuthCookie(false));try {HttpResponse response = httpclient.execute(req);Logger.getLogger(JSBridge.class.getName()).log(Level.INFO, ""Response status is '"" + response.getStatusLine() + ""'."");HttpEntity entity = response.getEntity();if (entity != null) {InputStream instream = entity.getContent();try {BufferedReader in = new BufferedReader(new InputStreamReader(instream));StringBuilder b = new StringBuilder();String line;boolean first = true;while ((line = in.readLine()) != null) {b.append(line);if (first) {first = false;} else {b.append(""\r\n"");}}in.close();callback.success(b.toString());return;} catch (RuntimeException ex) {throw ex;} finally {instream.close();}}} catch (ClientProtocolException e) {Logger.getLogger(JSBridge.class.getName()).log(Level.SEVERE, ""HTTP protocol violated."", e);} catch (IOException e) {Logger.getLogger(JSBridge.class.getName()).log(Level.WARNING, ""Could not load '"" + path + ""'."", e);}Logger.getLogger(JSBridge.class.getName()).log(Level.INFO, ""Calling error from JSBridge.getPage because of previous errors."");callback.error();}});}@Overridepublic void run() {String url = ""http://"" + resources.getString(R.string.host) + path;HttpUriRequest req;if (dataToSend == null) {req = new HttpGet(url);} else {req = new HttpPost(url);try {((HttpPost) req).setEntity(new StringEntity(dataToSend));} catch (UnsupportedEncodingException e) {Logger.getLogger(JSBridge.class.getName()).log(Level.SEVERE, ""Unsupported encoding."", e);}}req.addHeader(""Cookie"", getAuthCookie(false));try {HttpResponse response = httpclient.execute(req);Logger.getLogger(JSBridge.class.getName()).log(Level.INFO, ""Response status is '"" + response.getStatusLine() + ""'."");HttpEntity entity = response.getEntity();if (entity != null) {InputStream instream = entity.getContent();try {BufferedReader in = new BufferedReader(new InputStreamReader(instream));StringBuilder b = new StringBuilder();String line;boolean first = true;while ((line = in.readLine()) != null) {b.append(line);if (first) {first = false;} else {b.append(""\r\n"");}}in.close();callback.success(b.toString());return;} catch (RuntimeException ex) {throw ex;} finally {instream.close();}}} catch (ClientProtocolException e) {Logger.getLogger(JSBridge.class.getName()).log(Level.SEVERE, ""HTTP protocol violated."", e);} catch (IOException e) {Logger.getLogger(JSBridge.class.getName()).log(Level.WARNING, ""Could not load '"" + path + ""'."", e);}Logger.getLogger(JSBridge.class.getName()).log(Level.INFO, ""Calling error from JSBridge.getPage because of previous errors."");callback.error();}private String getAuthCookie(boolean invalidate) {if (resources.getBoolean(R.bool.dev)) {return ""dev_appserver_login=get_view@localhost.devel:false:18580476422013912411"";} else {try {Account[] accounts = accountsManager.getAccountsByType(""com.google"");Account account = null;while (!(accounts.length > 0)) {accountsManager.addAccount(""com.google"", ""ah"", null, null, act, null, null).getResult();accounts = accountsManager.getAccountsByType(""com.google"");}if (account == null) {account = accounts[0];}String authToken = accountsManager.getAuthToken(account, ""ah"", null, act, null, null).getResult().get(AccountManager.KEY_AUTHTOKEN).toString();if (invalidate || authToken == null) {Logger.getLogger(JSBridge.class.getName()).log(Level.INFO, ""Invalidating auth token."");accountsManager.invalidateAuthToken(""com.google"", authToken);return getAuthCookie(false);}HttpGet httpget = new HttpGet(""http://"" + resources.getString(R.string.host) + ""/_ah/login?auth="" + authToken);HttpResponse response = httpclient.execute(httpget);for (Header c : response.getHeaders(""Set-Cookie"")) {if (c.getValue().startsWith(""ACSID="")) {return c.getValue();}}return getAuthCookie(false);} catch (ClientProtocolException e) {Logger.getLogger(JSBridge.class.getName()).log(Level.SEVERE, ""HTTP protocol violated."", e);} catch (OperationCanceledException e) {Logger.getLogger(JSBridge.class.getName()).log(Level.WARNING, ""Login canceled."", e);} catch (AuthenticatorException e) {Logger.getLogger(JSBridge.class.getName()).log(Level.WARNING, ""Authentication failed."", e);} catch (IOException e) {Logger.getLogger(JSBridge.class.getName()).log(Level.SEVERE, ""Login failed."", e);}return getAuthCookie(true);}}public static void copyFileNIO(File in, File out) throws IOException {FileInputStream fis = null;FileOutputStream fos = null;try {fis = new FileInputStream(in);fos = new FileOutputStream(out);FileChannel sourceChannel = fis.getChannel();FileChannel targetChannel = fos.getChannel();sourceChannel.transferTo(0, sourceChannel.size(), targetChannel);sourceChannel.close();targetChannel.close();} catch (IOException e) {throw e;} finally {try {if (fos != null) {fos.close();}} catch (Exception e) {e.printStackTrace(System.out);}try {if (fis != null) {fis.close();}} catch (Exception e) {e.printStackTrace(System.out);}}}"	5
"public void testReleaseOnAbort() throws Exception {HttpParams params = defaultParams.copy();ConnManagerParams.setMaxTotalConnections(params, 1);ConnManagerParams.setMaxConnectionsPerRoute(params, new ConnPerRouteBean(1));ThreadSafeClientConnManager mgr = createTSCCM(params, null);assertEquals(0, mgr.getConnectionsInPool());DefaultHttpClient client = new DefaultHttpClient(mgr, params);HttpGet httpget = new HttpGet(""/random/20000"");HttpHost target = getServerHttp();HttpResponse response = client.execute(target, httpget);ClientConnectionRequest connreq = mgr.requestConnection(new HttpRoute(target), null);try {connreq.getConnection(250, TimeUnit.MILLISECONDS);fail(""ConnectionPoolTimeoutException should have been thrown"");} catch (ConnectionPoolTimeoutException expected) {}HttpEntity e = response.getEntity();assertNotNull(e);httpget.abort();assertEquals(0, mgr.getConnectionsInPool());connreq = mgr.requestConnection(new HttpRoute(target), null);ManagedClientConnection conn = connreq.getConnection(250, TimeUnit.MILLISECONDS);mgr.releaseConnection(conn, -1, null);mgr.shutdown();}public void testReleaseOnIOException() throws Exception {localServer.register(""/dropdead"", new HttpRequestHandler() {public void handle(final HttpRequest request, final HttpResponse response, final HttpContext context) throws HttpException, IOException {BasicHttpEntity entity = new BasicHttpEntity() {@Overridepublic void writeTo(final OutputStream outstream) throws IOException {byte[] tmp = new byte[5];outstream.write(tmp);outstream.flush();DefaultHttpServerConnection conn = (DefaultHttpServerConnection) context.getAttribute(ExecutionContext.HTTP_CONNECTION);try {conn.sendResponseHeader(response);} catch (HttpException ignore) {}}};entity.setChunked(true);response.setEntity(entity);}});HttpParams params = defaultParams.copy();ConnManagerParams.setMaxTotalConnections(params, 1);ConnManagerParams.setMaxConnectionsPerRoute(params, new ConnPerRouteBean(1));ThreadSafeClientConnManager mgr = createTSCCM(params, null);assertEquals(0, mgr.getConnectionsInPool());DefaultHttpClient client = new DefaultHttpClient(mgr, params);HttpGet httpget = new HttpGet(""/dropdead"");HttpHost target = getServerHttp();HttpResponse response = client.execute(target, httpget);ClientConnectionRequest connreq = mgr.requestConnection(new HttpRoute(target), null);try {connreq.getConnection(250, TimeUnit.MILLISECONDS);fail(""ConnectionPoolTimeoutException should have been thrown"");} catch (ConnectionPoolTimeoutException expected) {}HttpEntity e = response.getEntity();assertNotNull(e);try {EntityUtils.toByteArray(e);fail(""MalformedChunkCodingException should have been thrown"");} catch (MalformedChunkCodingException expected) {}assertEquals(0, mgr.getConnectionsInPool());connreq = mgr.requestConnection(new HttpRoute(target), null);ManagedClientConnection conn = connreq.getConnection(250, TimeUnit.MILLISECONDS);mgr.releaseConnection(conn, -1, null);mgr.shutdown();}boolean getHTML(URL url) {html = """";int r;BufferedInputStream in = null;BufferedInputStream imgIn = null;boolean retry;Vector imageRd = new Vector(0);do {retry = false;try {in = new BufferedInputStream(url.openStream(), 4096);} catch (IOException ioe) {rbe.stats.error(""Unable to open URL."", url.toExternalForm());ioe.printStackTrace();retry = true;continue;}try {while ((r = in.read(buffer, 0, buffer.length)) != -1) {if (r > 0) {html = html + new String(buffer, 0, r);}}} catch (IOException ioe) {rbe.stats.error(""Unable to read HTML from URL."", url.toExternalForm());retry = true;continue;}if (retry) {try {if (waitKey) {rbe.getKey();} else {sleep(1000L);}} catch (InterruptedException inte) {System.out.println(""In getHTML, caught interrupted exception!"");return true;}}} while (retry);try {in.close();} catch (IOException ioe) {rbe.stats.error(""Unable to close URL."", url.toExternalForm());}if (DEBUG > 0) {}if (DEBUG > 10) {System.out.println(html);}int cur = 0;if (!RBE.getImage) return true;findImg(html, url, imgPat, srcPat, quotePat, imageRd);findImg(html, url, inputPat, srcPat, quotePat, imageRd);if (DEBUG > 2) {System.out.println(""Found "" + imageRd.size() + "" images."");}while (imageRd.size() > 0) {int max = imageRd.size();int min = Math.max(max - rbe.maxImageRd, 0);int i;try {for (i = min; i < max; i++) {ImageReader rd = (ImageReader) imageRd.elementAt(i);if (!rd.readImage()) {if (DEBUG > 2) {System.out.println(""Read "" + rd.tot + "" bytes from "" + rd.imgURLStr);}imageRd.removeElementAt(i);i--;max--;}}} catch (InterruptedException inte) {System.out.println(""In getHTML, caught interrupted exception!"");return true;}}return true;}public static boolean copyFile(String sourceFileName, String destFileName) {if (sourceFileName == null || destFileName == null) return false;if (sourceFileName.equals(destFileName)) return false;try {java.io.FileInputStream in = new java.io.FileInputStream(sourceFileName);java.io.FileOutputStream out = new java.io.FileOutputStream(destFileName);try {byte[] buf = new byte[31000];int read = in.read(buf);while (read > -1) {out.write(buf, 0, read);read = in.read(buf);}} finally {in.close();out.close();}} catch (Exception e) {System.out.println(e.toString());return false;}return true;}public static boolean copyFile(final String src, final String dest) {if (fileExists(src)) {try {FileChannel srcChannel = new FileInputStream(src).getChannel();FileChannel dstChannel = new FileOutputStream(dest).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();return true;} catch (IOException e) {Logger.getAnonymousLogger().severe(e.getLocalizedMessage());}}return false;}public String encrypt(String plaintext) {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {System.err.println(e.getMessage());}try {md.update(plaintext.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {System.err.println(e.getMessage());}byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}@Testpublic void testConfigurartion() {try {Enumeration<URL> assemblersToRegister = this.getClass().getClassLoader().getResources(""META-INF/PrintAssemblerFactory.properties"");log.debug(""PrintAssemblerFactory "" + SimplePrintJobTest.class.getClassLoader().getResource(""META-INF/PrintAssemblerFactory.properties""));log.debug(""ehcache "" + SimplePrintJobTest.class.getClassLoader().getResource(""ehcache.xml""));log.debug(""log4j "" + this.getClass().getClassLoader().getResource(""/log4j.xml""));if (log.isDebugEnabled()) {while (assemblersToRegister.hasMoreElements()) {URL url = (URL) assemblersToRegister.nextElement();InputStream in = url.openStream();BufferedReader buff = new BufferedReader(new InputStreamReader(in));String line = buff.readLine();while (line != null) {log.debug(line);line = buff.readLine();}buff.close();in.close();}}} catch (IOException e) {e.printStackTrace();}}public String MD5(String text) {try {MessageDigest md;md = MessageDigest.getInstance(""MD5"");byte[] md5hash = new byte[32];md.update(text.getBytes(""iso-8859-1""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);} catch (Exception e) {System.out.println(e.toString());}return null;}private List<JarFile> webArchives(ServletContext servletContext) throws IOException {List<JarFile> list = new ArrayList<JarFile>();Set<Object> paths = servletContext.getResourcePaths(WEB_LIB_PREFIX);for (Object pathObject : paths) {String path = (String) pathObject;if (!path.endsWith("".jar"")) {continue;}URL url = servletContext.getResource(path);String jarURLString = ""jar:"" + url.toString() + ""!/"";url = new URL(jarURLString);JarFile jarFile = ((JarURLConnection) url.openConnection()).getJarFile();JarEntry signal = jarFile.getJarEntry(FACES_CONFIG_IMPLICIT);if (signal == null) {if (log().isTraceEnabled()) {log().trace(""Skip JAR file "" + path + "" because it has no META-INF/faces-config.xml resource"");}continue;}list.add(jarFile);}return list;}private void onCheckConnection() {BusyIndicator.showWhile(Display.getCurrent(), new Runnable() {public void run() {String baseUrl;if (_rdoSRTM3FtpUrl.getSelection()) {} else {baseUrl = _txtSRTM3HttpUrl.getText().trim();try {final URL url = new URL(baseUrl);final HttpURLConnection urlConn = (HttpURLConnection) url.openConnection();urlConn.connect();final int response = urlConn.getResponseCode();final String responseMessage = urlConn.getResponseMessage();final String message = response == HttpURLConnection.HTTP_OK ? NLS.bind(Messages.prefPage_srtm_checkHTTPConnectionOK_message, baseUrl) : NLS.bind(Messages.prefPage_srtm_checkHTTPConnectionFAILED_message, new Object[] { baseUrl, Integer.toString(response), responseMessage == null ? UI.EMPTY_STRING : responseMessage });MessageDialog.openInformation(Display.getCurrent().getActiveShell(), Messages.prefPage_srtm_checkHTTPConnection_title, message);} catch (final IOException e) {MessageDialog.openInformation(Display.getCurrent().getActiveShell(), Messages.prefPage_srtm_checkHTTPConnection_title, NLS.bind(Messages.prefPage_srtm_checkHTTPConnection_message, baseUrl));e.printStackTrace();}}}});}"	5
"public void readData(int choice) throws IOException {for (i = 0; i < max; i++) for (j = 0; j < max; j++) {phase_x[i][j] = 0.0;phase_y[i][j] = 0.0;}URL url;InputStream is;InputStreamReader isr;if (choice == 0) {url = getClass().getResource(""resources/Phase_623_620_Achromat.dat"");is = url.openStream();isr = new InputStreamReader(is);} else {url = getClass().getResource(""resources/Phase_623_620_NoAchromat.dat"");is = url.openStream();isr = new InputStreamReader(is);}BufferedReader br = new BufferedReader(isr);s = br.readLine();StringTokenizer st = new StringTokenizer(s);i = 0;j = 0;phase_x[i][j] = 4 * Double.parseDouble(st.nextToken());phase_y[i][j] = 4 * Double.parseDouble(st.nextToken());xgridmin = phase_x[i][j];ygridmin = phase_y[i][j];temp_prev = phase_x[i][j];kd[i][j] = Double.parseDouble(st.nextToken());kfs[i][j] = Double.parseDouble(st.nextToken());kfl[i][j] = Double.parseDouble(st.nextToken());kdee[i][j] = Double.parseDouble(st.nextToken());kdc[i][j] = Double.parseDouble(st.nextToken());kfc[i][j] = Double.parseDouble(st.nextToken());j++;int k = 0;while ((s = br.readLine()) != null) {st = new StringTokenizer(s);temp_new = 4 * Double.parseDouble(st.nextToken());if (temp_new != temp_prev) {temp_prev = temp_new;i++;j = 0;}phase_x[i][j] = temp_new;phase_y[i][j] = 4 * Double.parseDouble(st.nextToken());kd[i][j] = Double.parseDouble(st.nextToken());kfs[i][j] = Double.parseDouble(st.nextToken());kfl[i][j] = Double.parseDouble(st.nextToken());kdee[i][j] = Double.parseDouble(st.nextToken());kdc[i][j] = Double.parseDouble(st.nextToken());kfc[i][j] = Double.parseDouble(st.nextToken());imax = i;jmax = j;j++;k++;}xgridmax = phase_x[i][j - 1];ygridmax = phase_y[i][j - 1];}@TestTargets({ @TestTargetNew(level = TestLevel.PARTIAL_COMPLETE, notes = ""Verifies that the ObjectInputStream constructor calls checkPermission on security manager."", method = ""ObjectInputStream"", args = { InputStream.class }) })public void test_ObjectInputStream2() throws IOException {class TestSecurityManager extends SecurityManager {boolean called;Permission permission;void reset() {called = false;permission = null;}@Overridepublic void checkPermission(Permission permission) {if (permission instanceof SerializablePermission) {called = true;this.permission = permission;}}}class TestObjectInputStream extends ObjectInputStream {TestObjectInputStream(InputStream s) throws StreamCorruptedException, IOException {super(s);}}class TestObjectInputStream_readFields extends ObjectInputStream {TestObjectInputStream_readFields(InputStream s) throws StreamCorruptedException, IOException {super(s);}@Overridepublic GetField readFields() throws IOException, ClassNotFoundException, NotActiveException {return super.readFields();}}class TestObjectInputStream_readUnshared extends ObjectInputStream {TestObjectInputStream_readUnshared(InputStream s) throws StreamCorruptedException, IOException {super(s);}@Overridepublic Object readUnshared() throws IOException, ClassNotFoundException {return super.readUnshared();}}long id = new java.util.Date().getTime();String filename = ""SecurityPermissionsTest_"" + id;File f = File.createTempFile(filename, null);ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(f));oos.writeObject(new Node());oos.flush();oos.close();f.deleteOnExit();TestSecurityManager s = new TestSecurityManager();System.setSecurityManager(s);s.reset();new ObjectInputStream(new FileInputStream(f));assertTrue(""ObjectInputStream(InputStream) ctor must not call checkPermission on security manager on a class which neither overwrites methods readFields nor readUnshared"", !s.called);s.reset();new TestObjectInputStream(new FileInputStream(f));assertTrue(""ObjectInputStream(InputStream) ctor must not call checkPermission on security manager on a class which neither overwrites methods readFields nor readUnshared"", !s.called);s.reset();new TestObjectInputStream_readFields(new FileInputStream(f));assertTrue(""ObjectInputStream(InputStream) ctor must call checkPermission on security manager on a class which overwrites method readFields"", s.called);assertEquals(""Name of SerializablePermission is not correct"", ""enableSubclassImplementation"", s.permission.getName());s.reset();new TestObjectInputStream_readUnshared(new FileInputStream(f));assertTrue(""ObjectInputStream(InputStream) ctor must call checkPermission on security manager on a class which overwrites method readUnshared"", s.called);assertEquals(""Name of SerializablePermission is not correct"", ""enableSubclassImplementation"", s.permission.getName());}public static JuneClass loadClass(Map<String, Entity> globals, String packageName, String baseClassName) {try {JuneClass $class = null;String resourceName = (packageName.length() > 0 ? packageName.replace('.', '/') + ""/"" : """") + baseClassName.replace('.', '$') + "".class"";URL url = Resolver.class.getClassLoader().getResource(resourceName);if (url != null) {ClassBuilder builder = new ClassBuilder(globals);InputStream stream = url.openStream();try {new ClassReader(new BufferedInputStream(stream)).accept(builder, ClassReader.SKIP_CODE);} finally {stream.close();}$class = builder.$class;$class.loaded = true;}return $class;} catch (Exception e) {throw Helper.throwAny(e);}}public static void copyFileNIO(String src, String dst) {try {FileChannel srcChannel = new FileInputStream(src).getChannel();FileChannel dstChannel = new FileOutputStream(dst).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (IOException e) {e.printStackTrace();}}@Testpublic void config() throws IOException {Reader reader = new FileReader(new File(""src/test/resources/test.yml""));Writer writer = new FileWriter(new File(""src/site/apt/config.apt""));writer.write(""------\n"");writer.write(FileUtils.readFully(reader));writer.flush();writer.close();}public static String scramble(String text) {try {MessageDigest md = MessageDigest.getInstance(""SHA-1"");md.update(text.getBytes(""UTF-8""));StringBuffer sb = new StringBuffer();for (byte b : md.digest()) sb.append(Integer.toString(b & 0xFF, 16));return sb.toString();} catch (UnsupportedEncodingException e) {return null;} catch (NoSuchAlgorithmException e) {return null;}}private static FTPClient getFtpClient(String ftpHost, String ftpUsername, String ftpPassword) throws SocketException, IOException {FTPClient ftp = new FTPClient();ftp.addProtocolCommandListener(new PrintCommandListener(new PrintWriter(System.out)));ftp.connect(ftpHost);int reply = ftp.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {ftp.disconnect();return null;}if (!ftp.login(ftpUsername, ftpPassword)) {return null;}ftp.setFileType(FTP.BINARY_FILE_TYPE);ftp.enterLocalPassiveMode();return ftp;}private synchronized void renewToken() {if (!(System.currentTimeMillis() > (lastTokenRenewal + 10000))) return;lastTokenRenewal = System.currentTimeMillis();String token = null;System.out.println(""loading error - refresh token"");byte[] buff = null;try {BufferedInputStream bis = null;System.out.println(""Calling timeout : "" + getServingURL() + ""?token_timeout=true"");URL remoteurl = new URL(getServingURL() + ""?token_timeout=true"");URLConnection connection = remoteurl.openConnection();connection.setRequestProperty(""Referer"", getServingURL());int length = connection.getContentLength();InputStream in = connection.getInputStream();buff = new byte[length];int bytesRead = 0;while (bytesRead < length) {bytesRead += in.read(buff, bytesRead, in.available());}token = new String(buff);} catch (Exception e) {}if (token != null && !token.equals("""")) {token = token.trim();this.info.setToken(token);} else {System.out.println(""Token returned was null"");}}private void getRandomGUID(boolean secure, Object o) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(o.getClass().getName());sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}public static long copy(File src, long amount, File dst) {final int BUFFER_SIZE = 1024;long amountToRead = amount;InputStream in = null;OutputStream out = null;try {in = new BufferedInputStream(new FileInputStream(src));out = new BufferedOutputStream(new FileOutputStream(dst));byte[] buf = new byte[BUFFER_SIZE];while (amountToRead > 0) {int read = in.read(buf, 0, (int) Math.min(BUFFER_SIZE, amountToRead));if (read == -1) break;amountToRead -= read;out.write(buf, 0, read);}} catch (IOException e) {} finally {close(in);flush(out);close(out);}return amount - amountToRead;}"	5
"public static void replaceEntry(File file, String entryName, InputStream stream) throws PersistenceException {try {File temporaryFile = File.createTempFile(""pmMDA_zargo"", "".zargo"");temporaryFile.deleteOnExit();FileInputStream inputStream = new FileInputStream(file);ZipInputStream input = new ZipInputStream(inputStream);ZipOutputStream output = new ZipOutputStream(new FileOutputStream(temporaryFile));ZipEntry entry = input.getNextEntry();while (entry != null) {ZipEntry zipEntry = new ZipEntry(entry);zipEntry.setCompressedSize(-1);output.putNextEntry(zipEntry);if (!entry.getName().equals(entryName)) {IOUtils.copy(input, output);} else {IOUtils.copy(stream, output);}input.closeEntry();output.closeEntry();entry = input.getNextEntry();}input.close();inputStream.close();output.close();System.gc();boolean isSuccess = file.delete();if (!isSuccess) {throw new PersistenceException();}isSuccess = temporaryFile.renameTo(file);if (!isSuccess) {throw new PersistenceException();}} catch (IOException e) {throw new PersistenceException(e);}}public static void copy(File src, File dst) throws IOException {FileChannel inChannel;FileChannel outChannel;inChannel = new FileInputStream(src).getChannel();outChannel = new FileOutputStream(dst).getChannel();outChannel.transferFrom(inChannel, 0, inChannel.size());inChannel.close();outChannel.close();}public static String getMd5Digest(String pInput) {try {MessageDigest lDigest = MessageDigest.getInstance(""MD5"");lDigest.update(pInput.getBytes());BigInteger lHashInt = new BigInteger(1, lDigest.digest());return String.format(""%1$032x"", lHashInt).toLowerCase();} catch (NoSuchAlgorithmException lException) {throw new RuntimeException(lException);}}private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException {this.qualifiersOnTarget = qualifiersOnTarget;model = new Model(description);if (roughMode) model.setRoughMode(true);DOMParser parser = new DOMParser();parser.setFeature(""http://xml.org/sax/features/validation"", false);parser.setFeature(""http://apache.org/xml/features/nonvalidating/load-external-dtd"", false);parser.parse(new InputSource(url.openStream()));Document doc = parser.getDocument();Element documentEl = doc.getDocumentElement();Element contentEl = demandChildElement(documentEl, ""XMI.content"");adapter = Adapter.getAdapter(documentEl);parsePackage(contentEl);if (!packagePath.isEmpty()) throw new IllegalArgumentException();packagePath = null;for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next());generalizations = null;for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) {Element assoel = (Element) i.next();parseAssociation(assoel, (ModelClass) (associations.get(assoel)));}associations = null;for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()));classElements = null;if (roughMode) model.determineAllSupertypes(); else model.flatten();url = null;}private void onOKAction() {if (url == null) {optionPane.setValue(JOptionPane.UNINITIALIZED_VALUE);JOptionPane.showMessageDialog(this, ""URL field cannot be empty"", ""Empty URL"", JOptionPane.ERROR_MESSAGE);} else {try {URLConnection sourceConnection = url.openConnection();sourceConnection.setConnectTimeout(10);if (sourceConnection.getContentLength() == -1) {throw new IOException(""Can't connect to "" + url.toString());}exit_status = OK;setVisible(false);dispose();} catch (IOException e) {optionPane.setValue(JOptionPane.UNINITIALIZED_VALUE);JOptionPane.showMessageDialog(this, ""Please enter valid, resolvable source and target URLs...\n "" + e.getMessage(), ""Invalid URL"", JOptionPane.ERROR_MESSAGE);}}}public static void main(String[] args) throws IOException {String uri = ""hdfs://localhost:8020/user/leeing/maxtemp/sample.txt"";Configuration conf = new Configuration();FileSystem fs = FileSystem.get(URI.create(uri), conf);FSDataInputStream in = null;try {in = fs.open(new Path(uri));IOUtils.copyBytes(in, System.out, 8192, false);System.out.println(""\n"");in.seek(0);IOUtils.copyBytes(in, System.out, 8192, false);} finally {IOUtils.closeStream(in);}}public boolean update(String dbName, Query[] queries) throws ServiceException {Connection con = null;PreparedStatement pstmt = null;int rows = 0;try {con = getDbConnection().getConnection(dbName);con.setAutoCommit(false);for (int i = 0; i < queries.length; i++) {Query query = queries[i];System.out.println(query.getSql());pstmt = con.prepareStatement(query.getSql());addParametersToQuery(query, pstmt);rows += pstmt.executeUpdate();}con.commit();return rows > 0;} catch (DbException e) {log.error(""[DAOService::update]  "" + e.getMessage(), e);log.error(""[DAOService::update] Execute rollback "" + e.getMessage(), e);try {con.rollback();} catch (SQLException e1) {log.error(""[DAOService::update] Errore durante il rollback "" + e.getMessage(), e);throw new ServiceException(e.getMessage());}throw new ServiceException(e.getMessage());} catch (SQLException e) {log.error(""[DAOService::update]  "" + e.getMessage(), e);try {con.rollback();} catch (SQLException e1) {log.error(""[DAOService::update] Errore durante il rollback "" + e.getMessage(), e);throw new ServiceException(e.getMessage());}throw new ServiceException(e.getMessage());} finally {closeConnection(con, pstmt, null);}}public static String gerarDigest(String mensagem) {String mensagemCriptografada = null;try {MessageDigest md = MessageDigest.getInstance(""SHA"");System.out.println(""Mensagem original: "" + mensagem);md.update(mensagem.getBytes());byte[] digest = md.digest();mensagemCriptografada = converterBytesEmHexa(digest);} catch (Exception e) {e.printStackTrace();}return mensagemCriptografada;}public static void copyFiles(File source, File dest) throws IOException {FileChannel in = null, out = null;try {in = new FileInputStream(source).getChannel();out = new FileOutputStream(dest).getChannel();long size = in.size();MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buf);} finally {if (in != null) in.close();if (out != null) out.close();}}protected InputStream transform(URL url) throws IOException {TransformerFactory tf = TransformerFactory.newInstance();InputStream xsl_is = null;InputStream url_is = null;ByteArrayOutputStream os = null;byte[] output;try {xsl_is = Classes.getThreadClassLoader().getResourceAsStream(getStylesheet());url_is = new BufferedInputStream(url.openStream());os = new ByteArrayOutputStream();Transformer tr = tf.newTransformer(new StreamSource(xsl_is));tr.transform(new StreamSource(url_is), new StreamResult(os));output = os.toByteArray();} catch (TransformerConfigurationException tce) {throw new IOException(tce.getLocalizedMessage());} catch (TransformerException te) {throw new IOException(te.getLocalizedMessage());} finally {try {if (os != null) os.close();} catch (Throwable t) {}try {if (url_is != null) url_is.close();} catch (Throwable t) {}try {if (xsl_is != null) xsl_is.close();} catch (Throwable t) {}}if (logService.isEnabledFor(LogLevel.TRACE)) logService.log(LogLevel.TRACE, new String(output));return new ByteArrayInputStream(output);}"	5
"@Overrideprotected Properties loadFile(String fileName) {Properties prop = new Properties();try {URL url = new File(fileName).toURI().toURL();final InputStream input = url.openStream();prop.load(input);} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return prop;}private void downloadFile(File file, String url) {String state = Environment.getExternalStorageState();if (Environment.MEDIA_MOUNTED.equals(state)) {InputStream in = null;BufferedOutputStream out = null;try {in = new BufferedInputStream(new URL(url).openStream(), IO_BUFFER_SIZE);final FileOutputStream outStream = new FileOutputStream(file);out = new BufferedOutputStream(outStream, IO_BUFFER_SIZE);byte[] bytes = new byte[IO_BUFFER_SIZE];while (in.read(bytes) > 0) {out.write(bytes);}} catch (IOException e) {e.printStackTrace();} finally {if (in != null) {try {in.close();} catch (IOException e) {e.printStackTrace();}}if (out != null) {try {out.close();} catch (IOException e) {e.printStackTrace();}}}}}public synchronized boolean copyTmpDataFile(String fpath) throws IOException {if (tmpDataOutput != null) tmpDataOutput.close();tmpDataOutput = null;if (tmpDataFile == null) return false;File nfp = new File(fpath);if (nfp.exists()) nfp.delete();FileInputStream src = new FileInputStream(tmpDataFile);FileOutputStream dst = new FileOutputStream(nfp);byte[] buffer = new byte[4096];int bytesRead;while ((bytesRead = src.read(buffer)) != -1) dst.write(buffer, 0, bytesRead);src.close();dst.close();return true;}public static byte[] generatePasswordHash(String s) {byte[] password = { 00 };try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(s.getBytes());password = md5.digest();return password;} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return password;}public void execute() {try {if (methods == null) {return;}List<Resource> resources = new ArrayList<Resource>();for (Iterator<Resource> i = classFiles.iterator(); i.hasNext(); ) {final Resource classFile = i.next();if (!classFile.getName().equals(CALLSTACK_FILE)) {try {InputStream inputStream = classFile.getInputStream();ClassReader reader = new ClassReader(inputStream);reader.accept(new MethodAnalyzer(), 0);resources.add(classFile);oldSize += classFile.getSize();} catch (IllegalStateException e) {}}}for (Iterator<Resource> i = resources.iterator(); i.hasNext(); ) {final Resource classFile = i.next();try {InputStream inputStream = classFile.getInputStream();ClassReader reader = new ClassReader(inputStream);ClassWriter writer = new ClassWriter(reader, ClassWriter.COMPUTE_MAXS);if (!classFile.getName().startsWith(CALLSTACK_FILE.substring(0, CALLSTACK_FILE.indexOf('.')))) {reader.accept(new MethodInjector(writer), 0);byte[] b = writer.toByteArray();inputStream.close();OutputStream outputStream = classFile.getOutputStream();outputStream.write(b);outputStream.close();injectedClasses++;}} catch (IllegalStateException e) {}newSize += classFile.getSize();}File classFile = new File(classFiles.getDir(), CALLSTACK_FILE);if (!classFile.exists()) {throw new BuildException(""Missing net.yura.mobile.logging.CallStack class"");}InputStream inputStream = new FileInputStream(classFile);ClassReader reader = new ClassReader(inputStream);ClassWriter writer = new ClassWriter(reader, ClassWriter.COMPUTE_MAXS);try {reader.accept(new PushMethodGenerator(writer), 0);} finally {inputStream.close();}byte[] b = writer.toByteArray();inputStream.close();OutputStream outputStream = new FileOutputStream(classFile);outputStream.write(b);outputStream.close();log(injectedClasses + "" classes injected"");log((injectedMethods * 100) / Math.max(1, totalMethods) + ""% of methods injected"");log((100 - ((oldSize * 100) / newSize)) + ""% code size increase"");} catch (IOException e) {log(e, 0);}}@LargeTestpublic void testHttpPostsWithExpectationVerification() throws Exception {int reqNo = 3;this.server.registerHandler(""*"", new HttpRequestHandler() {public void handle(final HttpRequest request, final HttpResponse response, final HttpContext context) throws HttpException, IOException {StringEntity outgoing = new StringEntity(""No content"");response.setEntity(outgoing);}});this.server.setExpectationVerifier(new HttpExpectationVerifier() {public void verify(final HttpRequest request, final HttpResponse response, final HttpContext context) throws HttpException {Header someheader = request.getFirstHeader(""Secret"");if (someheader != null) {int secretNumber;try {secretNumber = Integer.parseInt(someheader.getValue());} catch (NumberFormatException ex) {response.setStatusCode(HttpStatus.SC_BAD_REQUEST);return;}if (secretNumber < 2) {response.setStatusCode(HttpStatus.SC_EXPECTATION_FAILED);ByteArrayEntity outgoing = new ByteArrayEntity(EncodingUtils.getAsciiBytes(""Wrong secret number""));response.setEntity(outgoing);}}}});this.server.start();this.client.getParams().setBooleanParameter(CoreProtocolPNames.USE_EXPECT_CONTINUE, true);DefaultHttpClientConnection conn = new DefaultHttpClientConnection();HttpHost host = new HttpHost(""localhost"", this.server.getPort());try {for (int r = 0; r < reqNo; r++) {if (!conn.isOpen()) {Socket socket = new Socket(host.getHostName(), host.getPort());conn.bind(socket, this.client.getParams());}BasicHttpEntityEnclosingRequest post = new BasicHttpEntityEnclosingRequest(""POST"", ""/"");post.addHeader(""Secret"", Integer.toString(r));ByteArrayEntity outgoing = new ByteArrayEntity(EncodingUtils.getAsciiBytes(""No content""));post.setEntity(outgoing);HttpResponse response = this.client.execute(post, host, conn);HttpEntity entity = response.getEntity();assertNotNull(entity);entity.consumeContent();if (r < 2) {assertEquals(HttpStatus.SC_EXPECTATION_FAILED, response.getStatusLine().getStatusCode());} else {assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode());}if (!this.client.keepAlive(response)) {conn.close();}}HttpConnectionMetrics cm = conn.getMetrics();assertEquals(reqNo, cm.getRequestCount());assertEquals(reqNo, cm.getResponseCount());} finally {conn.close();this.server.shutdown();}}public static void main(String[] args) {try {String completePath = null;String predictionFileName = null;if (args.length == 2) {completePath = args[0];predictionFileName = args[1];} else {System.out.println(""Please provide complete path to training_set parent folder as an argument. EXITING"");System.exit(0);}File inputFile = new File(completePath + fSep + ""SmartGRAPE"" + fSep + MovieIndexFileName);FileChannel inC = new FileInputStream(inputFile).getChannel();int filesize = (int) inC.size();ByteBuffer mappedfile = inC.map(FileChannel.MapMode.READ_ONLY, 0, filesize);MovieLimitsTHash = new TShortObjectHashMap(17770, 1);int i = 0, totalcount = 0;short movie;int startIndex, endIndex;TIntArrayList a;while (mappedfile.hasRemaining()) {movie = mappedfile.getShort();startIndex = mappedfile.getInt();endIndex = mappedfile.getInt();a = new TIntArrayList(2);a.add(startIndex);a.add(endIndex);MovieLimitsTHash.put(movie, a);}inC.close();mappedfile = null;System.out.println(""Loaded movie index hash"");inputFile = new File(completePath + fSep + ""SmartGRAPE"" + fSep + CustIndexFileName);inC = new FileInputStream(inputFile).getChannel();filesize = (int) inC.size();mappedfile = inC.map(FileChannel.MapMode.READ_ONLY, 0, filesize);CustomerLimitsTHash = new TIntObjectHashMap(480189, 1);int custid;while (mappedfile.hasRemaining()) {custid = mappedfile.getInt();startIndex = mappedfile.getInt();endIndex = mappedfile.getInt();a = new TIntArrayList(2);a.add(startIndex);a.add(endIndex);CustomerLimitsTHash.put(custid, a);}inC.close();mappedfile = null;System.out.println(""Loaded customer index hash"");MoviesAndRatingsPerCustomer = InitializeMovieRatingsForCustomerHashMap(completePath, CustomerLimitsTHash);System.out.println(""Populated MoviesAndRatingsPerCustomer hashmap"");File outfile = new File(completePath + fSep + ""SmartGRAPE"" + fSep + predictionFileName);FileChannel out = new FileOutputStream(outfile, true).getChannel();inputFile = new File(completePath + fSep + ""SmartGRAPE"" + fSep + ""formattedProbeData.txt"");inC = new FileInputStream(inputFile).getChannel();filesize = (int) inC.size();ByteBuffer probemappedfile = inC.map(FileChannel.MapMode.READ_ONLY, 0, filesize);int custAndRatingSize = 0;TIntByteHashMap custsandratings = new TIntByteHashMap();int ignoreProcessedRows = 0;int movieViewershipSize = 0;while (probemappedfile.hasRemaining()) {short testmovie = probemappedfile.getShort();int testCustomer = probemappedfile.getInt();if ((CustomersAndRatingsPerMovie != null) && (CustomersAndRatingsPerMovie.containsKey(testmovie))) {} else {CustomersAndRatingsPerMovie = InitializeCustomerRatingsForMovieHashMap(completePath, testmovie);custsandratings = (TIntByteHashMap) CustomersAndRatingsPerMovie.get(testmovie);custAndRatingSize = custsandratings.size();}TShortByteHashMap testCustMovieAndRatingsMap = (TShortByteHashMap) MoviesAndRatingsPerCustomer.get(testCustomer);short[] testCustMovies = testCustMovieAndRatingsMap.keys();float finalPrediction = 0;finalPrediction = predictRating(testCustomer, testmovie, custsandratings, custAndRatingSize, testCustMovies, testCustMovieAndRatingsMap);System.out.println(""prediction for movie: "" + testmovie + "" for customer "" + testCustomer + "" is "" + finalPrediction);ByteBuffer buf = ByteBuffer.allocate(11);buf.putShort(testmovie);buf.putInt(testCustomer);buf.putFloat(finalPrediction);buf.flip();out.write(buf);buf = null;testCustMovieAndRatingsMap = null;testCustMovies = null;}} catch (Exception e) {e.printStackTrace();}}private String getShaderIncludeSource(String path) throws Exception {URL url = this.getClass().getResource(path);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));boolean run = true;String str;String ret = new String();while (run) {str = in.readLine();if (str != null) ret += str + ""\n""; else run = false;}in.close();return ret;}protected String getLibJSCode() throws IOException {if (cachedLibJSCode == null) {InputStream is = getClass().getResourceAsStream(JS_LIB_FILE);StringWriter output = new StringWriter();IOUtils.copy(is, output);cachedLibJSCode = output.toString();}return cachedLibJSCode;}public static void addClasses(URL url) {BufferedReader reader = null;String line;ClassLoader cl = Thread.currentThread().getContextClassLoader();try {reader = new BufferedReader(new InputStreamReader(url.openStream()));while ((line = reader.readLine()) != null) {line = line.trim();if ((line.length() == 0) || line.startsWith("";"")) {continue;}try {classes.add(Class.forName(line, true, cl));} catch (Throwable t) {}}} catch (Throwable t) {} finally {if (reader != null) {try {reader.close();} catch (Throwable t) {}}}}"	5
"public static void loadPoFile(URL url) {states state = states.IDLE;String msgCtxt = """";String msgId = """";String msgStr = """";try {if (url == null) return;InputStream in = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(in, ""UTF8""));String strLine;while ((strLine = br.readLine()) != null) {if (strLine.startsWith(""msgctxt"")) {if (state != states.MSGCTXT) msgCtxt = """";state = states.MSGCTXT;strLine = strLine.substring(7).trim();}if (strLine.startsWith(""msgid"")) {if (state != states.MSGID) msgId = """";state = states.MSGID;strLine = strLine.substring(5).trim();}if (strLine.startsWith(""msgstr"")) {if (state != states.MSGSTR) msgStr = """";state = states.MSGSTR;strLine = strLine.substring(6).trim();}if (!strLine.startsWith(""\"""")) {state = states.IDLE;msgCtxt = """";msgId = """";msgStr = """";} else {if (state == states.MSGCTXT) {msgCtxt += format(strLine);}if (state == states.MSGID) {if (msgId.isEmpty()) {if (!msgCtxt.isEmpty()) {msgId = msgCtxt + ""|"";msgCtxt = """";}}msgId += format(strLine);}if (state == states.MSGSTR) {msgCtxt = """";msgStr += format(strLine);if (!msgId.isEmpty()) messages.setProperty(msgId, msgStr);}}}in.close();} catch (IOException e) {Logger.logError(e, ""Error loading message.po."");}}public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException {if (key == null || key.length == 0) {throw new IllegalArgumentException(""Argument 'key' cannot be null or an empty array."");}if (salt == null || salt.length == 0) {throw new IllegalArgumentException(""Argument 'salt' cannot be null or an empty array."");}final MessageDigest _md = MessageDigest.getInstance(""MD5"");_md.update(key);_md.update(MAGIC.getBytes());_md.update(salt);final MessageDigest md2 = MessageDigest.getInstance(""MD5"");md2.update(key);md2.update(salt);md2.update(key);byte[] abyFinal = md2.digest();for (int n = key.length; n > 0; n -= 16) {_md.update(abyFinal, 0, n > 16 ? 16 : n);}abyFinal = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };for (int j = 0, i = key.length; i != 0; i >>>= 1) {if ((i & 1) == 1) _md.update(abyFinal, j, 1); else _md.update(key, j, 1);}final StringBuilder sbPasswd = new StringBuilder();sbPasswd.append(MAGIC);sbPasswd.append(new String(salt));sbPasswd.append('$');abyFinal = _md.digest();for (int n = 0; n < 1000; n++) {final MessageDigest md3 = MessageDigest.getInstance(""MD5"");if ((n & 1) != 0) {md3.update(key);} else {md3.update(abyFinal);}if ((n % 3) != 0) {md3.update(salt);}if ((n % 7) != 0) {md3.update(key);}if ((n & 1) != 0) {md3.update(abyFinal);} else {md3.update(key);}abyFinal = md3.digest();}int[] anFinal = new int[] { (abyFinal[0] & 0x7f) | (abyFinal[0] & 0x80), (abyFinal[1] & 0x7f) | (abyFinal[1] & 0x80), (abyFinal[2] & 0x7f) | (abyFinal[2] & 0x80), (abyFinal[3] & 0x7f) | (abyFinal[3] & 0x80), (abyFinal[4] & 0x7f) | (abyFinal[4] & 0x80), (abyFinal[5] & 0x7f) | (abyFinal[5] & 0x80), (abyFinal[6] & 0x7f) | (abyFinal[6] & 0x80), (abyFinal[7] & 0x7f) | (abyFinal[7] & 0x80), (abyFinal[8] & 0x7f) | (abyFinal[8] & 0x80), (abyFinal[9] & 0x7f) | (abyFinal[9] & 0x80), (abyFinal[10] & 0x7f) | (abyFinal[10] & 0x80), (abyFinal[11] & 0x7f) | (abyFinal[11] & 0x80), (abyFinal[12] & 0x7f) | (abyFinal[12] & 0x80), (abyFinal[13] & 0x7f) | (abyFinal[13] & 0x80), (abyFinal[14] & 0x7f) | (abyFinal[14] & 0x80), (abyFinal[15] & 0x7f) | (abyFinal[15] & 0x80) };to64(sbPasswd, anFinal[0] << 16 | anFinal[6] << 8 | anFinal[12], 4);to64(sbPasswd, anFinal[1] << 16 | anFinal[7] << 8 | anFinal[13], 4);to64(sbPasswd, anFinal[2] << 16 | anFinal[8] << 8 | anFinal[14], 4);to64(sbPasswd, anFinal[3] << 16 | anFinal[9] << 8 | anFinal[15], 4);to64(sbPasswd, anFinal[4] << 16 | anFinal[10] << 8 | anFinal[5], 4);to64(sbPasswd, anFinal[11], 2);return sbPasswd.toString();}public static String computeMD5(InputStream input) {InputStream digestStream = null;try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");digestStream = new DigestInputStream(input, md5);IOUtils.copy(digestStream, new NullOutputStream());return new String(Base64.encodeBase64(md5.digest()), ""UTF-8"");} catch (NoSuchAlgorithmException e) {throw new RuntimeException(e);} catch (IOException e) {throw new RuntimeException(e);} finally {IOUtils.closeQuietly(digestStream);}}public static void writeToFile(InputStream input, File file, ProgressListener listener, long length) {OutputStream output = null;try {output = new CountingOutputStream(new FileOutputStream(file), listener, length);IOUtils.copy(input, output);} catch (IOException e) {throw new RuntimeException(e);} finally {IOUtils.closeQuietly(input);IOUtils.closeQuietly(output);}}private IProject createCopyProject(IProject project, IWorkspace ws, IProgressMonitor pm) throws CoreException {pm.beginTask(""Creating temp project"", 1);final String pName = ""translation_"" + project.getName() + ""_"" + new Date().toString().replace("" "", ""_"").replace("":"", ""_"");final IProgressMonitor npm = new NullProgressMonitor();final IPath destination = new Path(pName);project.copy(destination, false, npm);final IJavaProject oldJavaproj = JavaCore.create(project);final IClasspathEntry[] classPath = oldJavaproj.getRawClasspath();final IProject newProject = ResourcesPlugin.getWorkspace().getRoot().getProject(""NewProjectName"");final IProjectDescription desc = project.getDescription();desc.setNatureIds(new String[] { JavaCore.NATURE_ID });project.setDescription(desc, null);final IJavaProject javaproj = JavaCore.create(newProject);javaproj.setOutputLocation(project.getFullPath(), null);final List<IClasspathEntry> newClassPath = new ArrayList<IClasspathEntry>();for (final IClasspathEntry cEntry : newClassPath) {switch(cEntry.getContentKind()) {case IClasspathEntry.CPE_SOURCE:System.out.println(""Source folder "" + cEntry.getPath());break;default:newClassPath.add(cEntry);}}javaproj.setRawClasspath(classPath, pm);final IProject newP = ws.getRoot().getProject(pName);return newP;}public static void copyFile(File source, File dest) throws IOException {log.debug(""Copy from {} to {}"", source.getAbsoluteFile(), dest.getAbsoluteFile());FileInputStream fi = new FileInputStream(source);FileChannel fic = fi.getChannel();MappedByteBuffer mbuf = fic.map(FileChannel.MapMode.READ_ONLY, 0, source.length());fic.close();fi.close();fi = null;if (!dest.exists()) {String destPath = dest.getPath();log.debug(""Destination path: {}"", destPath);String destDir = destPath.substring(0, destPath.lastIndexOf(File.separatorChar));log.debug(""Destination dir: {}"", destDir);File dir = new File(destDir);if (!dir.exists()) {if (dir.mkdirs()) {log.debug(""Directory created"");} else {log.warn(""Directory not created"");}}dir = null;}FileOutputStream fo = new FileOutputStream(dest);FileChannel foc = fo.getChannel();foc.write(mbuf);foc.close();fo.close();fo = null;mbuf.clear();mbuf = null;}private static FrameworkFactory getFrameworkFactory() throws Exception {URL url = Main.class.getClassLoader().getResource(""META-INF/services/org.osgi.framework.launch.FrameworkFactory"");if (url != null) {BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));try {for (String s = br.readLine(); s != null; s = br.readLine()) {s = s.trim();if ((s.length() > 0) && (s.charAt(0) != '#')) {return (FrameworkFactory) Class.forName(s).newInstance();}}} finally {if (br != null) br.close();}}throw new Exception(""Could not find framework factory."");}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static String encryptPass(String pass) {String passEncrypt;MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException ex) {}md5.update(pass.getBytes());BigInteger dis = new BigInteger(1, md5.digest());passEncrypt = dis.toString(16);return passEncrypt;}"	5
"public void test() throws Exception {StorageStringWriter s = new StorageStringWriter(2048, ""UTF-8"");s.addText(""Test"");try {s.getOutputStream();fail(""Should throw IOException as method not supported."");} catch (IOException e) {}s.getWriter().write(""ing is important"");s.close(ResponseStateOk.getInstance());assertEquals(""Testing is important"", s.getText());InputStream input = s.getInputStream();StringWriter writer = new StringWriter();IOUtils.copy(input, writer, ""UTF-8"");assertEquals(""Testing is important"", writer.toString());try {s.getWriter();fail(""Should throw IOException as storage is closed."");} catch (IOException e) {}}public static String urlContentToString(URL url, String encoding) throws IOException {String out = """";BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream(), Constants.ENCODING));String line;while ((line = in.readLine()) != null) {out += line;}in.close();return out;}private static byte[] getHashValue(INewEntryDescriptor descriptor) {String timeStamp = Calendar.getInstance().getTime().toString();MessageDigest sha1;byte[] digest = { 0 };try {sha1 = MessageDigest.getInstance(""SHA-1"");sha1.update(descriptor.getContactName().getBytes());sha1.update(descriptor.getAlgorithmName().getBytes());sha1.update(descriptor.getProvider().getBytes());return digest = sha1.digest(timeStamp.getBytes());} catch (NoSuchAlgorithmException e) {logger.error(""NoSuchAlgorithmException while digesting"", e);}return digest;}protected void handleUrl(URL url) throws Exception {BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String s;boolean moreResults = false;while ((s = in.readLine()) != null) {if (s.indexOf(""<h1>Search Results</h1>"") > -1) {System.err.println(""found severals result"");moreResults = true;} else if (s.indexOf(""Download <a href="") > -1) {if (s.indexOf(""in JCAMP-DX format."") > -1) {System.err.println(""download masspec"");super.handleUrl(new URL((url.getProtocol() + ""://"" + url.getHost() + s.substring(s.indexOf(""\"""") + 1, s.lastIndexOf(""\""""))).replaceAll(""amp;"", """")));}moreResults = false;}if (moreResults == true) {if (s.indexOf(""<li><a href=\""/cgi/cbook.cgi?ID"") > -1) {System.err.println(""\tdownloading new url "" + new URL((url.getProtocol() + ""://"" + url.getHost() + s.substring(s.indexOf(""\"""") + 1, s.lastIndexOf(""\""""))).replaceAll(""amp;"", """")));this.handleUrl(new URL((url.getProtocol() + ""://"" + url.getHost() + s.substring(s.indexOf(""\"""") + 1, s.lastIndexOf(""\""""))).replaceAll(""amp;"", """")));}}}}private int[] Tri(int[] pertinence, int taille) {boolean change = true;int tmp;while (change) {change = false;for (int i = 0; i < taille - 2; i++) {if (pertinence[i] < pertinence[i + 1]) {tmp = pertinence[i];pertinence[i] = pertinence[i + 1];pertinence[i + 1] = tmp;change = true;}}}return pertinence;}private String digestPassword(String password) {StringBuffer hexString = new StringBuffer();try {MessageDigest algorithm = MessageDigest.getInstance(""MD5"");algorithm.reset();algorithm.update(password.getBytes());byte[] messageDigest = algorithm.digest();for (byte b : messageDigest) {hexString.append(Integer.toHexString(0xFF & b));}} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return hexString.toString();}public void testRoundTrip_1(String resource) throws Exception {long start1 = System.currentTimeMillis();File originalFile = File.createTempFile(""RoundTripTest"", ""testRoundTrip_1"");FileOutputStream fos = new FileOutputStream(originalFile);IOUtils.copy(getClass().getResourceAsStream(resource), fos);fos.close();long start2 = System.currentTimeMillis();IsoFile isoFile = new IsoFile(new FileInputStream(originalFile).getChannel());long start3 = System.currentTimeMillis();ByteArrayOutputStream baos = new ByteArrayOutputStream();WritableByteChannel wbc = Channels.newChannel(baos);long start4 = System.currentTimeMillis();Walk.through(isoFile);long start5 = System.currentTimeMillis();isoFile.getBox(wbc);wbc.close();long start6 = System.currentTimeMillis();System.err.println(""Preparing tmp copy took: "" + (start2 - start1) + ""ms"");System.err.println(""Parsing took: "" + (start3 - start2) + ""ms"");System.err.println(""Writing took: "" + (start6 - start3) + ""ms"");System.err.println(""Walking took: "" + (start5 - start4) + ""ms"");byte[] a = IOUtils.toByteArray(getClass().getResourceAsStream(resource));byte[] b = baos.toByteArray();Assert.assertArrayEquals(a, b);}protected InputStream createIconType(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {JavaliController.debug(JavaliController.LG_VERBOSE, ""Creating iconType"");String cHash = PRM_TYPE + ""="" + TP_ICON;String iconName = req.getParameter(""iconName"");if (iconName == null) {res.sendError(res.SC_NOT_FOUND);return null;}Locale loc = null;HttpSession sess = req.getSession(false);JavaliSession jsess = null;int menuType = -1;String menuTypeString = req.getParameter(PRM_MENU_TYPE);try {menuType = new Integer(menuTypeString).intValue();} catch (Exception e) {}if (sess != null) jsess = (JavaliSession) sess.getAttribute(FormConstants.SESSION_BINDING);if (jsess != null && jsess.getUser() != null) loc = jsess.getUser().getLocale(); else if (sess != null) loc = (Locale) sess.getAttribute(FormConstants.LOCALE_BINDING);if (loc == null) loc = Locale.getDefault();if (menuType == -1) menuType = MENU_TYPE_TEXTICON;String iconText = JavaliResource.getString(""icon."" + iconName, loc);if (iconText == null) {iconText = req.getParameter(PRM_MENU_NAME);if (iconText == null) iconText = """";}cHash += "", "" + PRM_ICON_NAME + ""="" + iconName + "", text="" + iconText + "", menuType="" + menuType;String iconFileName = null;String fontName = req.getParameter(PRM_FONT_NAME);if (fontName == null) {fontName = ""Helvetica"";}cHash += "","" + PRM_FONT_NAME + ""="" + fontName;String fontSizeString = req.getParameter(PRM_FONT_SIZE);int fontSize;try {fontSize = Integer.parseInt(fontSizeString);} catch (NumberFormatException nfe) {fontSize = 12;}cHash += "","" + PRM_FONT_SIZE + ""="" + fontSize;String fontTypeString = req.getParameter(PRM_FONT_TYPE);int fontType = Font.BOLD;if (""PLAIN"".equalsIgnoreCase(fontTypeString)) fontType = Font.PLAIN;if (""BOLD"".equalsIgnoreCase(fontTypeString)) fontType = Font.BOLD;if (""ITALIC"".equalsIgnoreCase(fontTypeString)) fontType = Font.ITALIC;if (""ITALICBOLD"".equalsIgnoreCase(fontTypeString) || ""BOLDITALIC"".equalsIgnoreCase(fontTypeString) || ""BOLD_ITALIC"".equalsIgnoreCase(fontTypeString) || ""ITALIC_BOLD"".equalsIgnoreCase(fontTypeString)) {fontType = Font.ITALIC | Font.BOLD;}cHash += "","" + PRM_FONT_TYPE + ""="" + fontType;String fontColor = req.getParameter(PRM_FONT_COLOR);if (fontColor == null || fontColor.equals("""")) fontColor = ""0x000000"";cHash += "","" + PRM_FONT_COLOR + ""="" + fontColor;String fName = cacheInfo.file(cHash);JavaliController.debug(JavaliController.LG_VERBOSE, ""Called for: "" + fName);if (fName == null) {JavaliController.debug(JavaliController.LG_VERBOSE, ""No cache found for: "" + cHash);if (getServletConfig() != null && getServletConfig().getServletContext() != null) {if (iconName != null && iconName.startsWith(""/"")) iconFileName = getServletConfig().getServletContext().getRealPath(iconName + "".gif""); else iconFileName = getServletConfig().getServletContext().getRealPath(""/icons/"" + iconName + "".gif"");File iconFile = new File(iconFileName);if (!iconFile.exists()) {JavaliController.debug(JavaliController.LG_VERBOSE, ""Could not find: "" + iconFileName);res.sendError(res.SC_NOT_FOUND);return null;}iconFileName = iconFile.getAbsolutePath();JavaliController.debug(JavaliController.LG_VERBOSE, ""file: "" + iconFileName + "" and cHash="" + cHash);} else {JavaliController.debug(JavaliController.LG_VERBOSE, ""No ServletConfig="" + getServletConfig() + "" or servletContext"");res.sendError(res.SC_NOT_FOUND);return null;}File tmp = File.createTempFile(PREFIX, SUFIX, cacheDir);OutputStream out = new FileOutputStream(tmp);if (menuType == MENU_TYPE_ICON) {FileInputStream in = new FileInputStream(iconFileName);byte buf[] = new byte[2048];int read = -1;while ((read = in.read(buf)) != -1) out.write(buf, 0, read);} else if (menuType == MENU_TYPE_TEXT) MessageImage.sendAsGIF(MessageImage.makeMessageImage(iconText, fontName, fontSize, fontType, fontColor, false, ""0x000000"", true), out); else MessageImage.sendAsGIF(MessageImage.makeIconImage(iconFileName, iconText, fontName, fontColor, fontSize, fontType), out);out.close();cacheInfo.putFile(cHash, tmp);fName = cacheInfo.file(cHash);}return new FileInputStream(new File(cacheDir, fName));}public static void main(String[] args) {System.out.println(""Start filtering zgps..."");final Config config = Gbl.createConfig(args);final String CONFIG_MODULE = ""GPSFilterZGPS"";File sourceFileSelectedStages = new File(config.findParam(CONFIG_MODULE, ""sourceFileSelectedStages""));File sourceFileZGPS = new File(config.findParam(CONFIG_MODULE, ""sourceFileZGPS""));File targetFile = new File(config.findParam(CONFIG_MODULE, ""targetFile""));System.out.println(""Start reading selected stages..."");FilterZGPSSelectedStages selectedStages = new FilterZGPSSelectedStages();selectedStages.createSelectedStages(sourceFileSelectedStages);System.out.println(""Done. "" + selectedStages.getSelectedStages().size() + "" stages were stored"");System.out.println(""Start reading and writing zgps..."");try {BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(sourceFileZGPS)));BufferedWriter out = new BufferedWriter(new FileWriter(targetFile));out.write(in.readLine());out.newLine();String lineFromInputFile;while ((lineFromInputFile = in.readLine()) != null) {String[] entries = lineFromInputFile.split(""\t"");if (selectedStages.containsStage(Integer.parseInt(entries[0]), Integer.parseInt(entries[1]), Integer.parseInt(entries[2]))) {out.write(lineFromInputFile);out.newLine();out.flush();}}in.close();out.close();} catch (FileNotFoundException e) {System.out.println(""Could not find source file for selected stages."");e.printStackTrace();} catch (IOException e) {System.out.println(""IO Exception while reading or writing zgps."");e.printStackTrace();}System.out.println(""Done."");}private ShaderProgram loadShaderProgram() {ShaderProgram sp = null;String vertexProgram = null;String fragmentProgram = null;Shader[] shaders = new Shader[2];try {ClassLoader cl = this.getClass().getClassLoader();URL url = cl.getResource(""Shaders/simple.vert"");System.out.println(""url "" + url);InputStream inputSteam = cl.getResourceAsStream(""Shaders/simple.vert"");Reader reader = null;if (inputSteam != null) {reader = new InputStreamReader(inputSteam);} else {File file = new File(""lib"");URL url2 = new URL(""jar:file:"" + file.getAbsolutePath() + ""/j3d-vrml97-i3mainz.jar!/Shaders/simple.vert"");InputStream inputSteam2 = url2.openStream();reader = new InputStreamReader(inputSteam2);}char[] buffer = new char[10000];int len = reader.read(buffer);vertexProgram = new String(buffer);vertexProgram = vertexProgram.substring(0, len);} catch (Exception e) {System.err.println(""could'nt load simple.vert"");e.printStackTrace();}try {ClassLoader cl = this.getClass().getClassLoader();URL url = cl.getResource(""Shaders/simple.frag"");System.out.println(""url "" + url);InputStream inputSteam = cl.getResourceAsStream(""Shaders/simple.frag"");Reader reader = null;if (inputSteam != null) {reader = new InputStreamReader(inputSteam);} else {File file = new File(""lib"");URL url2 = new URL(""jar:file:"" + file.getAbsolutePath() + ""/j3d-vrml97-i3mainz.jar!/Shaders/simple.frag"");InputStream inputSteam2 = url2.openStream();reader = new InputStreamReader(inputSteam2);}char[] buffer = new char[10000];int len = reader.read(buffer);fragmentProgram = new String(buffer);fragmentProgram = fragmentProgram.substring(0, len);} catch (Exception e) {System.err.println(""could'nt load simple.frag"");e.printStackTrace();}if (vertexProgram != null && fragmentProgram != null) {shaders[0] = new SourceCodeShader(Shader.SHADING_LANGUAGE_GLSL, Shader.SHADER_TYPE_VERTEX, vertexProgram);shaders[1] = new SourceCodeShader(Shader.SHADING_LANGUAGE_GLSL, Shader.SHADER_TYPE_FRAGMENT, fragmentProgram);sp = new GLSLShaderProgram();sp.setShaders(shaders);}return sp;}"	5
"public static String getStringResponse(String urlString) throws Exception {URL url = new URL(urlString);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String inputLine;StringBuilder buffer = new StringBuilder();while ((inputLine = in.readLine()) != null) {buffer.append(inputLine);}in.close();return buffer.toString();}public String hasheMotDePasse(String mdp) {MessageDigest sha = null;try {sha = MessageDigest.getInstance(""SHA-1"");} catch (NoSuchAlgorithmException ex) {}sha.reset();sha.update(mdp.getBytes());byte[] digest = sha.digest();String pass = new String(Base64.encode(digest));pass = ""{SHA}"" + pass;return pass;}public Document parse(InputSource is) throws SAXException, IOException {LSInput input = ls.createLSInput();String systemId = is.getSystemId();InputStream in = is.getByteStream();if (in != null) {input.setByteStream(in);} else {Reader reader = is.getCharacterStream();if (reader != null) {input.setCharacterStream(reader);} else {URL url = new URL(systemId);input.setByteStream(url.openStream());}}input.setPublicId(is.getPublicId());input.setSystemId(systemId);input.setEncoding(is.getEncoding());return parser.parse(input);}public void write(File file) throws Exception {if (isInMemory()) {FileOutputStream fout = null;try {fout = new FileOutputStream(file);fout.write(get());} finally {if (fout != null) {fout.close();}}} else {File outputFile = getStoreLocation();if (outputFile != null) {size = outputFile.length();if (!outputFile.renameTo(file)) {BufferedInputStream in = null;BufferedOutputStream out = null;try {in = new BufferedInputStream(new FileInputStream(outputFile));out = new BufferedOutputStream(new FileOutputStream(file));IOUtils.copy(in, out);} finally {if (in != null) {try {in.close();} catch (IOException e) {}}if (out != null) {try {out.close();} catch (IOException e) {}}}}} else {throw new FileUploadException(""Cannot write uploaded file to disk!"");}}}private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {in.defaultReadObject();OutputStream output = getOutputStream();if (cachedContent != null) {output.write(cachedContent);} else {FileInputStream input = new FileInputStream(dfosFile);IOUtils.copy(input, output);dfosFile.delete();dfosFile = null;}output.close();cachedContent = null;}@Overrideprotected ResourceHandler doGet(final URI resourceUri) throws ResourceException {if (resourceUri.getHost() == null) {throw new IllegalStateException(InternalBundleHelper.StoreMessageBundle.getMessage(""store.uri.ftp.illegal"", resourceUri.toString()));}try {final URL configUrl = resourceUri.toURL();final URLConnection urlConnection;Proxy httpProxy = null;if (!StringHelper.isEmpty(context.getString(FileStoreContextBuilder.ProxySet))) {if (context.getBoolean(FileStoreContextBuilder.ProxySet)) {final String proxyHost = context.getString(FileStoreContextBuilder.ProxyHost);final String proxyPort = context.getString(FileStoreContextBuilder.ProxyPort);if (!StringHelper.isEmpty(proxyHost)) {httpProxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyHost, !StringHelper.isEmpty(proxyPort) ? Integer.parseInt(proxyPort) : 80));if (!StringHelper.isEmpty(context.getString(FileStoreContextBuilder.NonProxyHosts))) {System.getProperties().put(""ftp.nonProxyHosts"", context.getProperty(FileStoreContextBuilder.NonProxyHosts));}if (!StringHelper.isEmpty(context.getString(FileStoreContextBuilder.ProxyUser)) && !StringHelper.isEmpty(context.getString(FileStoreContextBuilder.ProxyPassword))) {Authenticator.setDefault(new Authenticator() {@Overrideprotected PasswordAuthentication getPasswordAuthentication() {return new PasswordAuthentication(context.getString(FileStoreContextBuilder.ProxyUser), context.getString(FileStoreContextBuilder.ProxyPassword).toCharArray());}});}}}}if (httpProxy == null) {urlConnection = configUrl.openConnection();} else {urlConnection = configUrl.openConnection(httpProxy);}setUrlConnectionSettings(urlConnection);urlConnection.connect();try {return createResourceHandler(resourceUri.toString(), urlConnection.getInputStream());} catch (final FileNotFoundException fnfe) {throw new ResourceNotFoundException(resourceUri.toString());}} catch (final MalformedURLException mure) {throw new IllegalStateException(InternalBundleHelper.StoreMessageBundle.getMessage(""store.uri.malformed"", resourceUri.toString()));} catch (final ConnectException ce) {throw new ResourceException(""store.connection.error"", ce, resourceUri.toString());} catch (final IOException ioe) {if (ioe instanceof ResourceException) {throw (ResourceException) ioe;} else {throw new ResourceException(ioe, resourceUri.toString());}}}public boolean validateLogin(String username, String password) {boolean user_exists = false;try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(password.getBytes());BigInteger hash = new BigInteger(1, md5.digest());String password_hash = hash.toString(16);statement = connect.prepareStatement(""SELECT id from toepen.users WHERE username = ? AND password = ?"");statement.setString(1, username);statement.setString(2, password_hash);resultSet = statement.executeQuery();while (resultSet.next()) {user_exists = true;}} catch (Exception ex) {System.out.println(ex);} finally {close();return user_exists;}}public boolean createUser(String username, String password, String name) throws Exception {boolean user_created = false;try {statement = connect.prepareStatement(""SELECT COUNT(*) from toepen.users WHERE username = ? LIMIT 1"");statement.setString(1, username);resultSet = statement.executeQuery();resultSet.next();if (resultSet.getInt(1) == 0) {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(password.getBytes());BigInteger hash = new BigInteger(1, md5.digest());String password_hash = hash.toString(16);long ctime = System.currentTimeMillis() / 1000;statement = connect.prepareStatement(""INSERT INTO toepen.users "" + ""(username, password, name, ctime) "" + ""VALUES (?, ?, ?, ?)"");statement.setString(1, username);statement.setString(2, password_hash);statement.setString(3, name);statement.setLong(4, ctime);if (statement.executeUpdate() > 0) {user_created = true;}}} catch (Exception ex) {System.out.println(ex);} finally {close();return user_created;}}public String getClass(EmeraldjbBean eb) throws EmeraldjbException {Entity entity = (Entity) eb;StringBuffer sb = new StringBuffer();String myPackage = getPackageName(eb);sb.append(""package "" + myPackage + "";\n"");sb.append(""\n"");DaoValuesGenerator valgen = new DaoValuesGenerator();String values_class_name = valgen.getClassName(entity);sb.append(""\n"");List importList = new Vector();importList.add(""java.io.*;"");importList.add(""java.sql.Date;"");importList.add(""com.emeraldjb.runtime.patternXmlObj.*;"");importList.add(""javax.xml.parsers.*;"");importList.add(""java.text.ParseException;"");importList.add(""org.xml.sax.*;"");importList.add(""org.xml.sax.helpers.*;"");importList.add(valgen.getPackageName(eb) + ""."" + values_class_name + "";"");Iterator it = importList.iterator();while (it.hasNext()) {String importName = (String) it.next();sb.append(""import "" + importName + ""\n"");}sb.append(""\n"");String proto_version = entity.getPatternValue(GeneratorConst.PATTERN_STREAM_PROTO_VERSION, ""1"");boolean short_version = entity.getPatternBooleanValue(GeneratorConst.PATTERN_STREAM_XML_SHORT, false);StringBuffer preface = new StringBuffer();StringBuffer consts = new StringBuffer();StringBuffer f_writer = new StringBuffer();StringBuffer f_writer_short = new StringBuffer();StringBuffer f_reader = new StringBuffer();StringBuffer end_elems = new StringBuffer();boolean end_elem_needs_catch = false;consts.append(""\n  public static final String EL_CLASS_TAG=\"""" + values_class_name + ""\"";"");preface.append(""\nxos.print(\""<!-- This format is optimised for space, below are the column mappings\"");"");boolean has_times = false;boolean has_strings = false;it = entity.getMembers().iterator();int col_num = 0;while (it.hasNext()) {col_num++;Member member = (Member) it.next();String nm = member.getName();preface.append(""\nxos.print(\""c"" + col_num + "" = "" + nm + ""\"");"");String elem_name = nm;String elem_name_short = ""c"" + col_num;String el_name = nm.toUpperCase();if (member.getColLen() > 0 || !member.isNullAllowed()) {end_elem_needs_catch = true;}String element_const = ""EL_"" + el_name;String element_const_short = ""EL_"" + el_name + ""_SHORT"";consts.append(""\n  public static final String "" + element_const + ""=\"""" + elem_name + ""\"";"" + ""\n  public static final String "" + element_const_short + ""=\"""" + elem_name_short + ""\"";"");String getter = ""obj."" + methodGenerator.getMethodName(DaoGeneratorUtils.METHOD_GET, member);String setter = ""values_."" + methodGenerator.getMethodName(DaoGeneratorUtils.METHOD_SET, member);String pad = """";JTypeBase gen_type = EmdFactory.getJTypeFactory().getJavaType(member.getType());f_writer.append(gen_type.getToXmlCode(pad, element_const, getter + ""()""));f_writer_short.append(gen_type.getToXmlCode(pad, element_const_short, getter + ""()""));end_elems.append(gen_type.getFromXmlCode(pad, element_const, setter));end_elems.append(""\n//and also the short version"");end_elems.append(gen_type.getFromXmlCode(pad, element_const_short, setter));}preface.append(""\nxos.print(\""-->\"");"");String body_part = f_writer.toString();String body_part_short = preface.toString() + f_writer_short.toString();String reader_vars = """";String streamer_class_name = getClassName(entity);sb.append(""public class "" + streamer_class_name + ""  extends DefaultHandler implements TSParser\n"");sb.append(""{"" + consts + ""\n  public static final int PROTO_VERSION="" + proto_version + "";"" + ""\n  private transient StringBuffer cdata_=new StringBuffer();"" + ""\n  private transient String endElement_;"" + ""\n  private transient TSParser parentParser_;"" + ""\n  private transient XMLReader theReader_;\n"" + ""\n  private "" + values_class_name + "" values_;"");sb.append(""\n\n"");sb.append(""\n  /**"" + ""\n* This is really only here as an example.  It is very rare to write a single"" + ""\n* object to a file - far more likely to have a collection or object graph.  "" + ""\n* in which case you can write something similar - maybe using the writeXmlShort"" + ""\n* version instread."" + ""\n*/"" + ""\n  public static void writeToFile(String file_nm, "" + values_class_name + "" obj) throws IOException"" + ""\n  {"" + ""\nif (file_nm==null || file_nm.length()==0) throw new IOException(\""Bad file name (null or zero length)\"");"" + ""\nif (obj==null) throw new IOException(\""Bad value object parameter, cannot write null object to file\"");"" + ""\nFileOutputStream fos = new FileOutputStream(file_nm);"" + ""\nXmlOutputFilter xos = new XmlOutputFilter(fos);"" + ""\nxos.openElement(\""FILE_\""+EL_CLASS_TAG);"" + ""\nwriteXml(xos, obj);"" + ""\nxos.closeElement();"" + ""\nfos.close();"" + ""\n  } // end of writeToFile"" + ""\n"" + ""\n  public static void readFromFile(String file_nm, "" + values_class_name + "" obj) throws IOException, SAXException"" + ""\n  {"" + ""\nif (file_nm==null || file_nm.length()==0) throw new IOException(\""Bad file name (null or zero length)\"");"" + ""\nif (obj==null) throw new IOException(\""Bad value object parameter, cannot write null object to file\"");"" + ""\nFileInputStream fis = new FileInputStream(file_nm);"" + ""\nDataInputStream dis = new DataInputStream(fis);"" + ""\nmarshalFromXml(dis, obj);"" + ""\nfis.close();"" + ""\n  } // end of readFromFile"" + ""\n"" + ""\n  public static void writeXml(XmlOutputFilter xos, "" + values_class_name + "" obj) throws IOException"" + ""\n  {"" + ""\nxos.openElement(EL_CLASS_TAG);"" + body_part + ""\nxos.closeElement();"" + ""\n  } // end of writeXml"" + ""\n"" + ""\n  public static void writeXmlShort(XmlOutputFilter xos, "" + values_class_name + "" obj) throws IOException"" + ""\n  {"" + ""\nxos.openElement(EL_CLASS_TAG);"" + body_part_short + ""\nxos.closeElement();"" + ""\n  } // end of writeXml"" + ""\n"" + ""\n  public "" + streamer_class_name + ""("" + values_class_name + "" obj) {"" + ""\nvalues_ = obj;"" + ""\n  } // end of ctor"" + ""\n"");String xml_bit = addXmlFunctions(streamer_class_name, values_class_name, end_elem_needs_catch, end_elems, f_reader);String close = ""\n"" + ""\n} // end of classs"" + ""\n\n"" + ""\n//**************"" + ""\n// End of file"" + ""\n//**************"";return sb.toString() + xml_bit + close;}public static byte[] read(URL url) throws IOException {byte[] bytes;InputStream is = null;try {is = url.openStream();bytes = readAllBytes(is);} finally {if (is != null) {is.close();}}return bytes;}"	5
"@Testpublic void behaveTest() {InputStream is = this.getClass().getResourceAsStream(""safetyCaseTest.mdf"");ByteArrayOutputStream out = new ByteArrayOutputStream();try {IOUtils.copy(is, out);} catch (IOException e) {throw new RuntimeException(""Unable to read mdf"", e);}TrafficSimulationEngine engine = new TrafficSimulationEngine();TrafficModelDefinition def = MDFReader.read(out.toByteArray());engine.init(def);Map<Integer, Set<Integer>> linkSegments = new HashMap<Integer, Set<Integer>>();Set<Integer> segments = new HashSet<Integer>();segments.add(0);linkSegments.put(0, segments);FrameProperties frameProperties = new FrameProperties(linkSegments, new HashSet<Integer>());engine.setFrameProperties(frameProperties);RegularVehicle vehicle = (RegularVehicle) engine.getDynamicObjects().iterator().next();CompositeDriver driver = (CompositeDriver) vehicle.getDriver();driver.drive(0.1f);SafetyCase safety = new SafetyCase(driver);RectangleCCRange ccRange = (RectangleCCRange) safety.behave(0.1f);HandRange turnRange = ccRange.getTurnRange();HandRange probeRange = new HandRange();probeRange.remove(Hand.Left);assertTrue(turnRange.equals(probeRange));assertTrue(ccRange.getPriority() == Priority.SafetyCase);}private static boolean moveFiles(String sourceDir, String targetDir) {boolean isFinished = false;boolean fileMoved = false;File stagingDir = new File(sourceDir);if (!stagingDir.exists()) {System.out.println(getTimeStamp() + ""ERROR - source directory does not exist."");return true;}if (stagingDir.listFiles() == null) {System.out.println(getTimeStamp() + ""ERROR - Empty file list. Possible permission error on source directory "" + sourceDir);return true;}File[] fileList = stagingDir.listFiles();for (int x = 0; x < fileList.length; x++) {File f = fileList[x];if (f.getName().startsWith(""."")) {continue;}String targetFileName = targetDir + File.separator + f.getName();String operation = ""move"";boolean success = f.renameTo(new File(targetFileName));if (success) {fileMoved = true;} else {operation = ""mv"";try {Process process = Runtime.getRuntime().exec(new String[] { ""mv"", f.getCanonicalPath(), targetFileName });process.waitFor();process.destroy();if (!new File(targetFileName).exists()) {success = false;} else {success = true;fileMoved = true;}} catch (Exception e) {success = false;}if (!success) {operation = ""copy"";FileChannel in = null;FileChannel out = null;try {in = new FileInputStream(f).getChannel();File outFile = new File(targetFileName);out = new FileOutputStream(outFile).getChannel();in.transferTo(0, in.size(), out);in.close();in = null;out.close();out = null;f.delete();success = true;} catch (Exception e) {success = false;} finally {if (in != null) {try {in.close();} catch (Exception e) {}}if (out != null) {try {out.close();} catch (Exception e) {}}}}}if (success) {System.out.println(getTimeStamp() + operation + "" "" + f.getAbsolutePath() + "" to "" + targetDir);fileMoved = true;} else {System.out.println(getTimeStamp() + ""ERROR - "" + operation + "" "" + f.getName() + "" to "" + targetFileName + "" failed."");isFinished = true;}}if (fileMoved && !isFinished) {try {currentLastActivity = System.currentTimeMillis();updateLastActivity(currentLastActivity);} catch (NumberFormatException e) {System.out.println(getTimeStamp() + ""ERROR: NumberFormatException when trying to update lastActivity."");isFinished = true;} catch (IOException e) {System.out.println(getTimeStamp() + ""ERROR: IOException when trying to update lastActivity. "" + e.toString());isFinished = true;}}return isFinished;}protected Resolver queryResolver(String resolver, String command, String arg1, String arg2) {InputStream iStream = null;String RFC2483 = resolver + ""?command="" + command + ""&format=tr9401&uri="" + arg1 + ""&uri2="" + arg2;String line = null;try {URL url = new URL(RFC2483);URLConnection urlCon = url.openConnection();urlCon.setUseCaches(false);Resolver r = (Resolver) newCatalog();String cType = urlCon.getContentType();if (cType.indexOf("";"") > 0) {cType = cType.substring(0, cType.indexOf("";""));}r.parseCatalog(cType, urlCon.getInputStream());return r;} catch (CatalogException cex) {if (cex.getExceptionType() == CatalogException.UNPARSEABLE) {catalogManager.debug.message(1, ""Unparseable catalog: "" + RFC2483);} else if (cex.getExceptionType() == CatalogException.UNKNOWN_FORMAT) {catalogManager.debug.message(1, ""Unknown catalog format: "" + RFC2483);}return null;} catch (MalformedURLException mue) {catalogManager.debug.message(1, ""Malformed resolver URL: "" + RFC2483);return null;} catch (IOException ie) {catalogManager.debug.message(1, ""I/O Exception opening resolver: "" + RFC2483);return null;}}@Overrideprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {String requestPath = req.getRequestURI();String cdecUrl = ""http://cdec.water.ca.gov"" + requestPath + ""?"" + req.getQueryString();System.out.println(""CDEC URL: "" + cdecUrl);URL url = new URL(cdecUrl);BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));StringBuffer buffer = new StringBuffer();String line = null;int ncolumnInner = 0;while ((line = reader.readLine()) != null) {if (line.contains(""<div class=\""column_inner\"""")) {ncolumnInner++;}if (ncolumnInner == 2) {if (line.contains(""</div>"")) {break;}if (line.contains(""href"")) {line = line.replaceAll(""href"", ""  target=\""external_page\"" href"");}if (line.contains(""http://cdec.water.ca.gov:80"")) {line = line.replaceAll(""http://cdec.water.ca.gov:80/"", ""/"");}if (line.contains(""href="")) {line = line.replaceAll(""(href=\""|href=)"", ""$1http://cdec.water.ca.gov"");}buffer.append(line);} else {continue;}}resp.getWriter().write(buffer.toString());resp.getWriter().flush();reader.close();}public static void reset() throws Exception {Session session = DataStaticService.getHibernateSessionFactory().openSession();try {Connection connection = session.connection();try {Statement statement = connection.createStatement();try {statement.executeUpdate(""delete from Bundle"");connection.commit();} finally {statement.close();}} catch (HibernateException e) {connection.rollback();throw new Exception(e);} catch (SQLException e) {connection.rollback();throw new Exception(e);}} catch (SQLException e) {throw new Exception(e);} finally {session.close();}}@Overridepublic void run() {String key = getKey();synchronized (this.lauchedHTTPRequests) {if (this.lauchedHTTPRequests.contains(key)) return;this.lauchedHTTPRequests.add(key);}String st = this.dataSource.getTileURL(this.x, this.y, this.z);URL url;try {url = new URL(st);} catch (MalformedURLException e1) {logger.warning(""Error in URL: "" + st);return;}String geoJSON = """";try {InputStream is;if (""file"".equals(url.getProtocol())) is = new FileInputStream(url.getFile()); else if (""http"".equals(url.getProtocol())) is = url.openStream(); else {logger.warning(""Impossible to load settings from "" + url + "". Unsupported protocol "" + url.getProtocol());return;}BufferedReader in = new BufferedReader(new InputStreamReader(is));String line;while ((line = in.readLine()) != null) geoJSON += line;in.close();} catch (FileNotFoundException e) {return;} catch (IOException e) {e.printStackTrace();return;}VectorTile tile = new VectorTile(geoJSON, x, y, z);Geometry[] geoms = new Geometry[tile.getPieces().size()];int i = 0;for (MfGeo geo : tile.getPieces()) {if (geo.getGeoType() == GeoType.GEOMETRY) {geoms[i++] = ((MfGeometry) geo).getInternalGeometry();} else if (geo.getGeoType() == GeoType.FEATURE) {MfFeature mf = (MfFeature) geo;geoms[i++] = mf.getMfGeometry().getInternalGeometry();}}GeometryCollection gc = new GeometryFactory().createGeometryCollection(geoms);this.dataSource.getDataLoader().add(new OpenCartoFeature(this.dataSource.getLayer(), new Rep(gc), this.z));this.dataSource.getLayer().getDisplayCacheLoader().coin();synchronized (this.lauchedHTTPRequests) {this.lauchedHTTPRequests.remove(key);}}private void listAndInstantiateServiceProviders() {final Enumeration<URL> resources = ClassLoaderHelper.getResources(SERVICES_FILE, ServiceManager.class);String name;try {while (resources.hasMoreElements()) {URL url = resources.nextElement();InputStream stream = url.openStream();try {BufferedReader reader = new BufferedReader(new InputStreamReader(stream), 100);name = reader.readLine();while (name != null) {name = name.trim();if (!name.startsWith(""#"")) {final ServiceProvider<?> serviceProvider = ClassLoaderHelper.instanceFromName(ServiceProvider.class, name, ServiceManager.class, ""service provider"");@SuppressWarnings(""unchecked"") final Class<ServiceProvider<?>> serviceProviderClass = (Class<ServiceProvider<?>>) serviceProvider.getClass();managedProviders.put(serviceProviderClass, new ServiceProviderWrapper(serviceProvider));}name = reader.readLine();}} finally {stream.close();}}} catch (IOException e) {throw new SearchException(""Unable to read "" + SERVICES_FILE, e);}}private static void copyFile(File source, File destination) throws IOException, SecurityException {if (!destination.exists()) destination.createNewFile();FileChannel sourceChannel = null;FileChannel destinationChannel = null;try {sourceChannel = new FileInputStream(source).getChannel();destinationChannel = new FileOutputStream(destination).getChannel();long count = 0;long size = sourceChannel.size();while ((count += destinationChannel.transferFrom(sourceChannel, 0, size - count)) < size) ;} finally {if (sourceChannel != null) sourceChannel.close();if (destinationChannel != null) destinationChannel.close();}}public void run() {RandomAccessFile file = null;InputStream stream = null;try {HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.setRequestProperty(""Range"", ""bytes="" + downloaded + ""-"");connection.connect();if (connection.getResponseCode() / 100 != 2) {error();}int contentLength = connection.getContentLength();if (contentLength < 1) {error();}if (size == -1) {size = contentLength;stateChanged();}file = new RandomAccessFile(destination, ""rw"");file.seek(downloaded);stream = connection.getInputStream();while (status == DOWNLOADING) {byte buffer[];if (size - downloaded > MAX_BUFFER_SIZE) {buffer = new byte[MAX_BUFFER_SIZE];} else {buffer = new byte[size - downloaded];}int read = stream.read(buffer);if (read == -1) break;file.write(buffer, 0, read);downloaded += read;stateChanged();}if (status == DOWNLOADING) {status = COMPLETE;stateChanged();}} catch (Exception e) {error();} finally {if (file != null) {try {file.close();} catch (Exception e) {}}if (stream != null) {try {stream.close();} catch (Exception e) {}}}}public static void main(String[] args) {try {URL url = new URL(""http://www.lineadecodigo.com"");BufferedReader in = null;try {in = new BufferedReader(new InputStreamReader(url.openStream()));} catch (Throwable t) {}String inputLine;String inputText = """";while ((inputLine = in.readLine()) != null) {inputText = inputText + inputLine;}System.out.println(""El contenido de la URL es: "" + inputText);in.close();} catch (MalformedURLException me) {System.out.println(""URL erronea"");} catch (IOException ioe) {System.out.println(""Error IO"");}}"	5
"private Reader getReader() throws IOException {if (data != null) {if (url != null) throw new IllegalArgumentException(""URL for source data and the data itself must never be specified together."");if (charset != null) throw new IllegalArgumentException(""Charset has sense only for URL-based data"");return new StringReader(data);} else if (url != null) {InputStream stream = url.openStream();if (charset == null) return new InputStreamReader(stream); else return new InputStreamReader(stream, charset);}return null;}public void open(String server, String user, String pass, int port, String option) throws Exception {log.info(""Login to FTP: "" + server);this.port = port;ftp = new FTPClient();ftp.connect(server, port);ftp.login(user, pass);checkReply(""FTP server refused connection."" + server);modeBINARY();this.me = this;}public void chmod(String remoteFile, String mode) {String remotePath = connector.getRemoteDirectory();remotePath += PATH_SEPARATOR + remoteFile;FTPClient ftp = new FTPClient();try {String hostname = connector.getUrl().getHost();ftp.connect(hostname);log.info(""Connected to "" + hostname);log.info(ftp.getReplyString());boolean loggedIn = ftp.login(connector.getUsername(), connector.getPassword());if (loggedIn) {String parameters = ""chmod "" + mode + "" "" + remotePath;ftp.site(parameters);ftp.logout();}ftp.disconnect();} catch (SocketException e) {log.error(""File chmod failed with message: "" + e.getMessage());} catch (IOException e) {log.error(""File chmod failed with message: "" + e.getMessage());} finally {if (ftp.isConnected()) {try {ftp.disconnect();} catch (IOException ioe) {}}}}public void delete(String remoteFile) {String remotePath = connector.getRemoteDirectory();remotePath += PATH_SEPARATOR + remoteFile;FTPClient ftp = new FTPClient();try {String hostname = connector.getUrl().getHost();ftp.connect(hostname);log.info(""Connected to "" + hostname);log.info(ftp.getReplyString());boolean loggedIn = ftp.login(connector.getUsername(), connector.getPassword());if (loggedIn) {ftp.deleteFile(remotePath);ftp.logout();}ftp.disconnect();} catch (SocketException e) {log.error(""File chmod failed with message: "" + e.getMessage());} catch (IOException e) {log.error(""File chmod failed with message: "" + e.getMessage());} finally {if (ftp.isConnected()) {try {ftp.disconnect();} catch (IOException ioe) {}}}}public Map<String, String> getMetadata(WebFileObject fo) throws IOException {if (!fo.wfs.getRootURL().getProtocol().equals(""ftp"")) {String realName = fo.pathname;boolean exists;URL ur = new URL(fo.wfs.getRootURL(), realName);HttpURLConnection connect = (HttpURLConnection) ur.openConnection();connect.setRequestMethod(""HEAD"");HttpURLConnection.setFollowRedirects(false);connect.connect();HttpURLConnection.setFollowRedirects(true);if (connect.getResponseCode() == 303) {String surl = connect.getHeaderField(""Location"");if (surl.startsWith(fo.wfs.root.toString())) {realName = surl.substring(fo.wfs.root.toString().length());}connect.disconnect();ur = new URL(fo.wfs.getRootURL(), realName);connect = (HttpURLConnection) ur.openConnection();connect.setRequestMethod(""HEAD"");connect.connect();}exists = connect.getResponseCode() != 404;Map<String, String> result = new HashMap<String, String>();Map<String, List<String>> fields = connect.getHeaderFields();for (Entry<String, List<String>> e : fields.entrySet()) {String key = e.getKey();List<String> value = e.getValue();result.put(key, value.get(0));}result.put(META_EXIST, String.valueOf(exists));connect.disconnect();return result;} else {Map<String, String> result = new HashMap<String, String>();URL url = new URL(fo.wfs.getRootURL(), fo.pathname);URLConnection urlc = url.openConnection();try {urlc.connect();urlc.getInputStream().close();result.put(META_EXIST, ""true"");} catch (IOException ex) {result.put(META_EXIST, ""false"");}return result;}}private void copy(File source, File destinationDirectory) throws IOException {if (source.isDirectory()) {File newDir = new File(destinationDirectory, source.getName());newDir.mkdir();File[] children = source.listFiles();for (int i = 0; i < children.length; i++) {if (children[i].getName().equals("".svn"")) {continue;}copy(children[i], newDir);}} else {File newFile = new File(destinationDirectory, source.getName());if (newFile.exists() && source.lastModified() == newFile.lastModified()) {return;}FileOutputStream output = new FileOutputStream(newFile);FileInputStream input = new FileInputStream(source);byte[] buff = new byte[2048];int read = 0;while ((read = input.read(buff)) > 0) {output.write(buff, 0, read);}output.flush();output.close();input.close();}}public synchronized String encrypt(String plaintext) {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");md.update(plaintext.getBytes(""UTF-8""));} catch (NoSuchAlgorithmException e) {log().error(""failed to encrypt the password."", e);throw new RuntimeException(""failed to encrypt the password."", e);} catch (UnsupportedEncodingException e) {log().error(""failed to encrypt the password."", e);throw new RuntimeException(""failed to encrypt the password."", e);}byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}@Overridepublic void handlePeerEvent(PeerEvent event) {if (event.geteventInfo() instanceof EventServiceInfo) {EventServiceInfo info = (EventServiceInfo) event.geteventInfo();if (info.getServiceState() != ServiceState.Deployed) return;long bid = info.getBundleId();Bundle bundle = context.getBundle(bid);Enumeration entries = bundle.findEntries(""OSGI-INF/PrivacyPolicy/"", ""*.xml"", true);if (entries != null) {if (entries.hasMoreElements()) {try {URL url = (URL) entries.nextElement();BufferedInputStream in = new BufferedInputStream(url.openStream());XMLPolicyReader reader = new XMLPolicyReader(this.context);RequestPolicy policy = reader.readPolicyFromFile(in);if (policy != null) {this.policyMgr.addPrivacyPolicyForService(info.getServiceID(), policy);}} catch (IOException ioe) {}}}}}public void parse() {InputSource urlInputStream = null;SAXParserFactory spf = null;SAXParser sp = null;HttpURLConnection conn = null;try {URL url = new URL(this.urlString);_setProxy();conn = (HttpURLConnection) url.openConnection();urlInputStream = new InputSource(StreamUtils.inputStreamToReader(conn.getInputStream()));spf = SAXParserFactory.newInstance();if (spf != null) {sp = spf.newSAXParser();sp.parse(urlInputStream, this);}} catch (Exception e) {if (conn != null) {if (conn.getHeaderField(""X-RateLimit-Limit"") != null) {String rateLimit = conn.getHeaderField(""X-RateLimit-Limit"");String rateRemaining = conn.getHeaderField(""X-RateLimit-Remaining"");long rateReset = Long.valueOf(conn.getHeaderField(""X-RateLimit-Reset"")) * 1000;LOG.warn(""Possible rate limits?  LIMIT:"" + rateLimit + ""  REMAINING:"" + rateRemaining + ""  RESET:"" + new Date(rateReset));}}e.printStackTrace();LOG.warn(""error parsing rss feed"", e);} finally {}}public static Document getXHTMLDocument(URL _url) throws IOException {final Tidy tidy = new Tidy();tidy.setQuiet(true);tidy.setShowWarnings(false);tidy.setXmlOut(true);final BufferedInputStream input_stream = new BufferedInputStream(_url.openStream());return tidy.parseDOM(input_stream, null);}"	5
"public static String getSHA1Digest(String inputStr) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md = null;byte[] sha1hash = null;md = MessageDigest.getInstance(""SHA"");sha1hash = new byte[40];md.update(inputStr.getBytes(""iso-8859-1""), 0, inputStr.length());sha1hash = md.digest();return convertToHex(sha1hash);}private MediaWikiResult getFromUri(String url) throws OntologyServiceException {try {logger.info(""getting "" + url);HttpURLConnection connection = (java.net.HttpURLConnection) new URL(url).openConnection();connection.setRequestProperty(""User-Agent"", ""OntoCat-"" + Math.random());BufferedInputStream bin = new BufferedInputStream(connection.getInputStream());JAXBContext jaxbContext = JAXBContext.newInstance(""uk.ac.ebi.ontocat.mediawiki.jaxb"");Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();return (MediaWikiResult) unmarshaller.unmarshal(bin);} catch (Exception e) {e.printStackTrace();throw new OntologyServiceException(e);}}public final boolean login(String user, String pass) {if (user == null || pass == null) return false;connectionInfo.setData(""com.tensegrity.palojava.pass#"" + user, pass);try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(pass.getBytes());pass = asHexString(md.digest());} catch (NoSuchAlgorithmException ex) {throw new PaloException(""Failed to create encrypted password for "" + ""user '"" + user + ""'!"", ex);}connectionInfo.setUser(user);connectionInfo.setPassword(pass);return loginInternal(user, pass);}public RegionInfo(String name, int databaseID, int units, float xMin, float xMax, float yMin, float yMax, float zMin, float zMax, String imageURL) {this.name = name;this.databaseID = databaseID;this.units = units;this.xMin = xMin;this.xMax = xMax;this.yMin = yMin;this.yMax = yMax;this.zMin = zMin;this.zMax = zMax;try {MessageDigest digest = MessageDigest.getInstance(""SHA-1"");digest.update(this.name.getBytes());ByteArrayOutputStream baos = new ByteArrayOutputStream();DataOutputStream daos = new DataOutputStream(baos);daos.writeInt(this.databaseID);daos.writeInt(this.units);daos.writeDouble(this.xMin);daos.writeDouble(this.xMax);daos.writeDouble(this.yMin);daos.writeDouble(this.yMax);daos.writeDouble(this.zMin);daos.writeDouble(this.zMax);daos.flush();byte[] hashValue = digest.digest(baos.toByteArray());int hashCode = 0;for (int i = 0; i < hashValue.length; i++) {hashCode += (int) hashValue[i] << (i % 4);}this.hashcode = hashCode;} catch (Exception e) {throw new IllegalArgumentException(""Error occurred while generating hashcode for region "" + this.name);}if (imageURL != null) {URL url = null;try {url = new URL(imageURL);} catch (MalformedURLException murle) {}if (url != null) {BufferedImage tmpImage = null;try {tmpImage = ImageIO.read(url);} catch (Exception e) {e.printStackTrace();}mapImage = tmpImage;} else this.mapImage = null;} else this.mapImage = null;}public String md5(String phrase) {MessageDigest m;String coded = new String();try {m = MessageDigest.getInstance(""MD5"");m.update(phrase.getBytes(), 0, phrase.length());coded = (new BigInteger(1, m.digest()).toString(16)).toString();} catch (NoSuchAlgorithmException ex) {ex.printStackTrace();}if (coded.length() < 32) {coded = ""0"" + coded;}return coded;}public static void copyURLToFile(URL source, File destination) throws IOException {InputStream input = source.openStream();try {FileOutputStream output = openOutputStream(destination);try {IOUtils.copy(input, output);} finally {IOUtils.closeQuietly(output);}} finally {IOUtils.closeQuietly(input);}}public boolean open(String mode) {if (source instanceof String) return false; else if (mode == null) mode = """"; else mode = mode.toLowerCase();boolean toread = false, towrite = false;if (mode.indexOf(""r"") >= 0) toread = true;if (mode.indexOf(""w"") >= 0) towrite = true;if (!toread && !towrite) toread = towrite = true;try {if (toread && input == null) {if (isDirectory()) return true; else if (reader != null) return true; else if (source instanceof File) input = new FileInputStream((File) source); else if (source instanceof Socket) input = ((Socket) source).getInputStream(); else if (source instanceof URL) return getUrlInfo(toread, towrite); else return false;}if (towrite && output == null) {if (isDirectory()) return false; else if (writer != null) return true; else if (source instanceof File) output = new FileOutputStream((File) source); else if (source instanceof Socket) output = ((Socket) source).getOutputStream(); else if (source instanceof URL) return getUrlInfo(toread, towrite); else return false;}return true;} catch (Exception e) {return false;}}private String MD5Sum(String input) {String hashtext = null;try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.reset();md.update(input.getBytes());byte[] digest = md.digest();BigInteger bigInt = new BigInteger(1, digest);hashtext = bigInt.toString(16);while (hashtext.length() < 32) {hashtext = ""0"" + hashtext;}} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return hashtext;}private static Collection<String> createTopLevelFiles(Configuration configuration, Collections collections, Sets sets) throws FlickrException, SAXException, IOException, JDOMException, TransformerException {Collection<String> createdFiles = new HashSet<String>();File toplevelXmlFilename = getToplevelXmlFilename(configuration.photosBaseDirectory);Logger.getLogger(FlickrDownload.class).info(""Creating XML file "" + toplevelXmlFilename.getAbsolutePath());MediaIndexer indexer = new XmlMediaIndexer(configuration);Element toplevel = new Element(""flickr"").addContent(XmlUtils.createApplicationXml()).addContent(XmlUtils.createUserXml(configuration)).addContent(collections.createTopLevelXml()).addContent(sets.createTopLevelXml()).addContent(new Stats(sets).createStatsXml(indexer));createdFiles.addAll(indexer.writeIndex());XmlUtils.outputXmlFile(toplevelXmlFilename, toplevel);createdFiles.add(toplevelXmlFilename.getName());Logger.getLogger(FlickrDownload.class).info(""Copying support files and performing XSLT transformations"");IOUtils.copyToFileAndCloseStreams(XmlUtils.class.getResourceAsStream(""xslt/"" + PHOTOS_CSS_FILENAME), new File(configuration.photosBaseDirectory, PHOTOS_CSS_FILENAME));createdFiles.add(PHOTOS_CSS_FILENAME);IOUtils.copyToFileAndCloseStreams(XmlUtils.class.getResourceAsStream(""xslt/"" + PLAY_ICON_FILENAME), new File(configuration.photosBaseDirectory, PLAY_ICON_FILENAME));createdFiles.add(PLAY_ICON_FILENAME);XmlUtils.performXsltTransformation(configuration, ""all_sets.xsl"", toplevelXmlFilename, new File(configuration.photosBaseDirectory, ALL_SETS_HTML_FILENAME));createdFiles.add(ALL_SETS_HTML_FILENAME);XmlUtils.performXsltTransformation(configuration, ""all_collections.xsl"", toplevelXmlFilename, new File(configuration.photosBaseDirectory, ALL_COLLECTIONS_HTML_FILENAME));createdFiles.add(ALL_COLLECTIONS_HTML_FILENAME);createdFiles.add(Collections.COLLECTIONS_ICON_DIRECTORY);XmlUtils.performXsltTransformation(configuration, ""stats.xsl"", toplevelXmlFilename, new File(configuration.photosBaseDirectory, STATS_HTML_FILENAME));createdFiles.add(STATS_HTML_FILENAME);sets.performXsltTransformation();for (AbstractSet set : sets.getSets()) {createdFiles.add(set.getSetId());}return createdFiles;}public static void copyFile(File source, File destination) throws IOException {BufferedInputStream in = new BufferedInputStream(new FileInputStream(source));BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(destination));byte[] buffer = new byte[4096];int read = -1;while ((read = in.read(buffer)) != -1) {out.write(buffer, 0, read);}out.flush();out.close();in.close();}"	5
"public static byte[] gerarHash(String frase) {try {MessageDigest md = MessageDigest.getInstance(""SHA-1"");md.update(frase.getBytes());return md.digest();} catch (NoSuchAlgorithmException e) {return null;}}public void render(Map map, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse) throws Exception {ByteArrayOutputStream baos = new ByteArrayOutputStream(OUTPUT_BYTE_ARRAY_INITIAL_SIZE);File file = (File) map.get(""targetFile"");IOUtils.copy(new FileInputStream(file), baos);httpServletResponse.setContentType(getContentType());httpServletResponse.setContentLength(baos.size());httpServletResponse.addHeader(""Content-disposition"", ""attachment; filename="" + file.getName());ServletOutputStream out = httpServletResponse.getOutputStream();baos.writeTo(out);out.flush();}public static void copy(final File src, final File dest) throws IOException {OutputStream stream = new FileOutputStream(dest);FileInputStream fis = new FileInputStream(src);byte[] buffer = new byte[16384];while (fis.available() != 0) {int read = fis.read(buffer);stream.write(buffer, 0, read);}stream.flush();}public static File downloadFromUrl(String urlString, String ext) throws Exception {URL url = new URL(urlString);InputStream is = url.openStream();byte bytes[] = new byte[20480];File result = File.createTempFile(""temp_"", ext);FileOutputStream fos = new FileOutputStream(result);BufferedOutputStream bos = new BufferedOutputStream(fos);int nbread = 0;int loops = 0;while ((nbread = is.read(bytes)) > -1) {bos.write(bytes, 0, nbread);loops++;System.out.println(loops);}bos.close();return result;}public boolean moveFileSafely(final File in, final File out) throws IOException {FileInputStream fis = null;FileOutputStream fos = null;FileChannel inChannel = null;FileChannel outChannel = null;final File tempOut = File.createTempFile(""move"", "".tmp"");try {fis = new FileInputStream(in);fos = new FileOutputStream(tempOut);inChannel = fis.getChannel();outChannel = fos.getChannel();inChannel.transferTo(0, inChannel.size(), outChannel);} finally {try {if (inChannel != null) inChannel.close();} catch (IOException e) {LogUtils.debugf(JRobinConverter.class, ""failed to close channel %s"", inChannel);}try {if (outChannel != null) outChannel.close();} catch (IOException e) {LogUtils.debugf(JRobinConverter.class, ""failed to close channel %s"", outChannel);}try {if (fis != null) fis.close();} catch (IOException e) {LogUtils.debugf(JRobinConverter.class, ""failed to close stream %s"", fis);}try {if (fos != null) fos.close();} catch (IOException e) {LogUtils.debugf(JRobinConverter.class, ""failed to close stream %s"", fos);}}out.delete();if (!out.exists()) {tempOut.renameTo(out);return in.delete();}return false;}public static void main(String[] args) {String u = ""http://portal.acm.org/results.cfm?query=%28Author%3A%22"" + ""Boehm%2C+Barry"" + ""%22%29&srt=score%20dsc&short=0&source_disp=&since_month=&since_year=&before_month=&before_year=&coll=ACM&dl=ACM&termshow=matchboolean&range_query=&CFID=22704101&CFTOKEN=37827144&start=1"";URL url = null;AcmSearchresultPageParser_2011Jan cb = new AcmSearchresultPageParser_2011Jan();try {url = new URL(u);HttpURLConnection uc = (HttpURLConnection) url.openConnection();uc.setUseCaches(false);InputStream is = uc.getInputStream();BufferedReader br = new BufferedReader(new InputStreamReader(is));ParserDelegator pd = new ParserDelegator();pd.parse(br, cb, true);br.close();} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}System.out.println(""all doc num= "" + cb.getAllDocNum());for (int i = 0; i < cb.getEachResultStartPositions().size(); i++) {HashMap<String, Integer> m = cb.getEachResultStartPositions().get(i);System.out.println(i + ""pos= "" + m);}}@Overridepublic void makeRead(final String user, final long databaseID, final long time) throws SQLException {final String query = ""insert into fs.read_post (post, user, read_date) values (?, ?, ?)"";ensureConnection();final PreparedStatement statement = m_connection.prepareStatement(query);try {statement.setLong(1, databaseID);statement.setString(2, user);statement.setTimestamp(3, new Timestamp(time));final int count = statement.executeUpdate();if (0 == count) {throw new SQLException(""Nothing updated."");}m_connection.commit();} catch (final SQLException e) {m_connection.rollback();throw e;} finally {statement.close();}}private String buildShaHashOf(String source) {try {MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(source.getBytes());return new BigInteger(1, md.digest()).toString(16);} catch (NoSuchAlgorithmException e) {e.printStackTrace();return """";}}public static boolean ejecutarDMLTransaccion(List<String> tirasSQL) throws Exception {boolean ok = true;try {getConexion();conexion.setAutoCommit(false);Statement st = conexion.createStatement();for (String cadenaSQL : tirasSQL) {if (st.executeUpdate(cadenaSQL) < 1) {ok = false;break;}}if (ok) conexion.commit(); else conexion.rollback();conexion.setAutoCommit(true);conexion.close();} catch (SQLException e) {if (conexion != null && !conexion.isClosed()) {conexion.rollback();}throw new Exception(""Error en Transaccion"");} catch (Exception e) {throw new Exception(""Error en Transaccion"");}return ok;}public static JSGFRuleGrammar newGrammarFromJSGF(URL url, JSGFRuleGrammarFactory factory) throws JSGFGrammarParseException, IOException {Reader reader;BufferedInputStream stream = new BufferedInputStream(url.openStream(), 256);JSGFEncoding encoding = getJSGFEncoding(stream);if ((encoding != null) && (encoding.encoding != null)) {System.out.println(""Grammar Character Encoding \"""" + encoding.encoding + ""\"""");reader = new InputStreamReader(stream, encoding.encoding);} else {if (encoding == null) System.out.println(""WARNING: Grammar missing self identifying header"");reader = new InputStreamReader(stream);}return newGrammarFromJSGF(reader, factory);}"	5
"public boolean setDeleteCliente(int IDcliente) {boolean delete = false;try {stm = conexion.prepareStatement(""delete clientes where IDcliente='"" + IDcliente + ""'"");stm.executeUpdate();conexion.commit();delete = true;} catch (SQLException e) {System.out.println(""Error en la eliminacion del registro en tabla clientes "" + e.getMessage());try {conexion.rollback();} catch (SQLException ee) {System.out.println(ee.getMessage());}return delete = false;}return delete;}public static String sendGetRequest(String endpoint, String requestParameters) {String result = null;if (endpoint.startsWith(""http://"")) {try {System.setProperty(""java.net.useSystemProxies"", ""true"");String urlStr = endpoint;if (requestParameters != null && requestParameters.length() > 0) {urlStr += ""?"" + requestParameters;}URL url = new URL(urlStr);URLConnection conn = url.openConnection();BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));StringBuffer sb = new StringBuffer();String line;while ((line = rd.readLine()) != null) {sb.append(line + ""\n"");}rd.close();result = sb.toString();} catch (Exception e) {DebuggerQueue.addDebug(HTTPClient.class.getName(), Level.ERROR, ""Error during download url %s error: %s"", endpoint, e.getMessage());}}return result;}public static void postData(Reader data, URL endpoint, Writer output) throws Exception {HttpURLConnection urlc = null;try {urlc = (HttpURLConnection) endpoint.openConnection();try {urlc.setRequestMethod(""POST"");} catch (ProtocolException e) {throw new Exception(""Shouldn't happen: HttpURLConnection doesn't support POST??"", e);}urlc.setDoOutput(true);urlc.setDoInput(true);urlc.setUseCaches(false);urlc.setAllowUserInteraction(false);urlc.setRequestProperty(""Content-type"", ""text/xml; charset="" + ""UTF-8"");OutputStream out = urlc.getOutputStream();try {Writer writer = new OutputStreamWriter(out, ""UTF-8"");pipe(data, writer);writer.close();} catch (IOException e) {throw new Exception(""IOException while posting data"", e);} finally {if (out != null) out.close();}InputStream in = urlc.getInputStream();try {Reader reader = new InputStreamReader(in);pipe(reader, output);reader.close();} catch (IOException e) {throw new Exception(""IOException while reading response"", e);} finally {if (in != null) in.close();}} catch (IOException e) {throw new Exception(""Connection error (is server running at "" + endpoint + "" ?): "" + e);} finally {if (urlc != null) urlc.disconnect();}}public static void downloadFromUrl(URL url, String localFilename, String userAgent) throws IOException {InputStream is = null;FileOutputStream fos = null;System.setProperty(""java.net.useSystemProxies"", ""true"");try {URLConnection urlConn = url.openConnection();if (userAgent != null) {urlConn.setRequestProperty(""User-Agent"", userAgent);}is = urlConn.getInputStream();fos = new FileOutputStream(localFilename);byte[] buffer = new byte[4096];int len;while ((len = is.read(buffer)) > 0) {fos.write(buffer, 0, len);}} finally {try {if (is != null) {is.close();}} finally {if (fos != null) {fos.close();}}}}public static String getFileText(URL _url) {try {InputStream input = _url.openStream();String content = IOUtils.toString(input);IOUtils.closeQuietly(input);return content;} catch (Exception err) {LOG.error(_url.toString(), err);return """";}}public static java.io.ByteArrayOutputStream getFileByteStream(URL _url) {java.io.ByteArrayOutputStream buffer = new java.io.ByteArrayOutputStream();try {InputStream input = _url.openStream();IOUtils.copy(input, buffer);IOUtils.closeQuietly(input);} catch (Exception err) {throw new RuntimeException(err);}return buffer;}public static void copyFile(File source, File destination) {if (!source.exists()) {return;}if ((destination.getParentFile() != null) && (!destination.getParentFile().exists())) {destination.getParentFile().mkdirs();}try {FileChannel srcChannel = new FileInputStream(source).getChannel();FileChannel dstChannel = new FileOutputStream(destination).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (IOException ioe) {ioe.printStackTrace();}}public static int best(int r, int n, int s) {if ((n <= 0) || (r < 0) || (r > n) || (s < 0)) return 0;int[] rolls = new int[n];for (int i = 0; i < n; i++) rolls[i] = d(s);boolean found;do {found = false;for (int x = 0; x < n - 1; x++) {if (rolls[x] < rolls[x + 1]) {int t = rolls[x];rolls[x] = rolls[x + 1];rolls[x + 1] = t;found = true;}}} while (found);int sum = 0;for (int i = 0; i < r; i++) sum += rolls[i];return sum;}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}"	5
"@Overridepublic void onCreate(Bundle savedInstanceState) {super.onCreate(savedInstanceState);setContentView(R.layout.main);final EditText eText = (EditText) findViewById(R.id.address);final Button button = (Button) findViewById(R.id.ButtonGo);button.setOnClickListener(new Button.OnClickListener() {public void onClick(View v) {try {HttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(""https://mt0-app.cloud.cm/rpc/json"");List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);nameValuePairs.add(new BasicNameValuePair(""m"", ""login""));nameValuePairs.add(new BasicNameValuePair(""c"", ""User""));nameValuePairs.add(new BasicNameValuePair(""password"", ""cloudisgreat""));nameValuePairs.add(new BasicNameValuePair(""alias"", ""cs588""));httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));String result = """";try {HttpResponse response = httpclient.execute(httppost);result = EntityUtils.toString(response.getEntity());} catch (Exception e) {result = e.getMessage();}LayoutInflater inflater = (LayoutInflater) WebTest.this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);final View layout = inflater.inflate(R.layout.window1, null);final PopupWindow popup = new PopupWindowTest(layout, 100, 100);Button b = (Button) layout.findViewById(R.id.test_button);b.setOnTouchListener(new OnTouchListener() {@Overridepublic boolean onTouch(View v, MotionEvent event) {Log.d(""Debug"", ""Button activate"");popup.dismiss();return false;}});popup.showAtLocation(layout, Gravity.CENTER, 0, 0);View layout2 = inflater.inflate(R.layout.window1, null);final PopupWindow popup2 = new PopupWindowTest(layout2, 100, 100);TextView tview = (TextView) layout2.findViewById(R.id.pagetext);tview.setText(result);popup2.showAtLocation(layout, Gravity.CENTER, 50, -90);} catch (Exception e) {Log.d(""Debug"", e.toString());}}});}public void onClick(View v) {try {HttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(""https://mt0-app.cloud.cm/rpc/json"");List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);nameValuePairs.add(new BasicNameValuePair(""m"", ""login""));nameValuePairs.add(new BasicNameValuePair(""c"", ""User""));nameValuePairs.add(new BasicNameValuePair(""password"", ""cloudisgreat""));nameValuePairs.add(new BasicNameValuePair(""alias"", ""cs588""));httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));String result = """";try {HttpResponse response = httpclient.execute(httppost);result = EntityUtils.toString(response.getEntity());} catch (Exception e) {result = e.getMessage();}LayoutInflater inflater = (LayoutInflater) WebTest.this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);final View layout = inflater.inflate(R.layout.window1, null);final PopupWindow popup = new PopupWindowTest(layout, 100, 100);Button b = (Button) layout.findViewById(R.id.test_button);b.setOnTouchListener(new OnTouchListener() {@Overridepublic boolean onTouch(View v, MotionEvent event) {Log.d(""Debug"", ""Button activate"");popup.dismiss();return false;}});popup.showAtLocation(layout, Gravity.CENTER, 0, 0);View layout2 = inflater.inflate(R.layout.window1, null);final PopupWindow popup2 = new PopupWindowTest(layout2, 100, 100);TextView tview = (TextView) layout2.findViewById(R.id.pagetext);tview.setText(result);popup2.showAtLocation(layout, Gravity.CENTER, 50, -90);} catch (Exception e) {Log.d(""Debug"", e.toString());}}private static void getClasses(Collection<Class<?>> classes, String... packageNames) throws ClassNotFoundException {boolean recursive = true;for (String packageName : packageNames) {if (StringUtil.isEmpty(packageName)) continue;String packageDirName = packageName.replace('.', '/');Enumeration<URL> dirs = null;try {dirs = Thread.currentThread().getContextClassLoader().getResources(packageDirName);while (dirs.hasMoreElements()) {URL url = dirs.nextElement();String protocol = url.getProtocol();if (""file"".equals(protocol)) {String filePath = URLDecoder.decode(url.getFile(), DECODING);getClassesByPackageFile(packageName, filePath, recursive, classes);} else if (""jar"".equals(protocol)) {JarFile jar = null;try {jar = ((JarURLConnection) url.openConnection()).getJarFile();Enumeration<JarEntry> entries = jar.entries();while (entries.hasMoreElements()) {JarEntry entry = entries.nextElement();String name = entry.getName();if (name.charAt(0) == '/') {name = name.substring(1);}if (name.startsWith(packageDirName)) {int idx = name.lastIndexOf('/');if (idx != -1) {packageName = name.substring(0, idx).replace('/', '.');}if ((idx != -1) || recursive) {if (name.endsWith(JAVA_CLASS_SUFFIX) && !entry.isDirectory()) {String className = name.substring(packageName.length() + 1, name.length() - 6);classes.add(loadClass(packageName + '.' + className));}}}}} catch (IOException e) {LOG.error(""IOException when loading files from : "" + url, e);}}}} catch (IOException e) {LOG.error(""IOException when get classes from : "" + packageName, e);}}}public static KUID createRandomID() {MessageDigestInput randomNumbers = new MessageDigestInput() {public void update(MessageDigest md) {byte[] random = new byte[LENGTH * 2];GENERATOR.nextBytes(random);md.update(random);}};MessageDigestInput properties = new MessageDigestInput() {public void update(MessageDigest md) {Properties props = System.getProperties();try {for (Entry entry : props.entrySet()) {String key = (String) entry.getKey();String value = (String) entry.getValue();md.update(key.getBytes(""UTF-8""));md.update(value.getBytes(""UTF-8""));}} catch (UnsupportedEncodingException e) {throw new RuntimeException(e);}}};MessageDigestInput millis = new MessageDigestInput() {public void update(MessageDigest md) {long millis = System.currentTimeMillis();md.update((byte) ((millis >> 56L) & 0xFFL));md.update((byte) ((millis >> 48L) & 0xFFL));md.update((byte) ((millis >> 40L) & 0xFFL));md.update((byte) ((millis >> 32L) & 0xFFL));md.update((byte) ((millis >> 24L) & 0xFFL));md.update((byte) ((millis >> 16L) & 0xFFL));md.update((byte) ((millis >> 8L) & 0xFFL));md.update((byte) ((millis) & 0xFFL));}};MessageDigestInput nanos = new MessageDigestInput() {public void update(MessageDigest md) {long nanos = System.nanoTime();md.update((byte) ((nanos >> 56L) & 0xFFL));md.update((byte) ((nanos >> 48L) & 0xFFL));md.update((byte) ((nanos >> 40L) & 0xFFL));md.update((byte) ((nanos >> 32L) & 0xFFL));md.update((byte) ((nanos >> 24L) & 0xFFL));md.update((byte) ((nanos >> 16L) & 0xFFL));md.update((byte) ((nanos >> 8L) & 0xFFL));md.update((byte) ((nanos) & 0xFFL));}};MessageDigestInput[] input = { properties, randomNumbers, millis, nanos };Arrays.sort(input);try {MessageDigest md = MessageDigest.getInstance(""SHA1"");for (MessageDigestInput mdi : input) {mdi.update(md);int hashCode = System.identityHashCode(mdi);md.update((byte) ((hashCode >> 24) & 0xFF));md.update((byte) ((hashCode >> 16) & 0xFF));md.update((byte) ((hashCode >> 8) & 0xFF));md.update((byte) ((hashCode) & 0xFF));md.update((byte) ((mdi.rnd >> 24) & 0xFF));md.update((byte) ((mdi.rnd >> 16) & 0xFF));md.update((byte) ((mdi.rnd >> 8) & 0xFF));md.update((byte) ((mdi.rnd) & 0xFF));}return new KUID(md.digest());} catch (NoSuchAlgorithmException e) {throw new RuntimeException(e);}}public static byte[] expandPasswordToKey(String password, int keyLen, byte[] salt) {try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");int digLen = md5.getDigestLength();byte[] mdBuf = new byte[digLen];byte[] key = new byte[keyLen];int cnt = 0;while (cnt < keyLen) {if (cnt > 0) {md5.update(mdBuf);}md5.update(password.getBytes());md5.update(salt);md5.digest(mdBuf, 0, digLen);int n = ((digLen > (keyLen - cnt)) ? keyLen - cnt : digLen);System.arraycopy(mdBuf, 0, key, cnt, n);cnt += n;}return key;} catch (Exception e) {throw new Error(""Error in SSH2KeyPairFile.expandPasswordToKey: "" + e);}}public static byte[] expandPasswordToKeySSHCom(String password, int keyLen) {try {if (password == null) {password = """";}MessageDigest md5 = MessageDigest.getInstance(""MD5"");int digLen = md5.getDigestLength();byte[] buf = new byte[((keyLen + digLen) / digLen) * digLen];int cnt = 0;while (cnt < keyLen) {md5.update(password.getBytes());if (cnt > 0) {md5.update(buf, 0, cnt);}md5.digest(buf, cnt, digLen);cnt += digLen;}byte[] key = new byte[keyLen];System.arraycopy(buf, 0, key, 0, keyLen);return key;} catch (Exception e) {throw new Error(""Error in SSH2KeyPairFile.expandPasswordToKeySSHCom: "" + e);}}private void copyFileNFS(String sSource, String sTarget) throws Exception {FileInputStream fis = new FileInputStream(sSource);FileOutputStream fos = new FileOutputStream(sTarget);BufferedInputStream bis = new BufferedInputStream(fis);BufferedOutputStream bos = new BufferedOutputStream(fos);byte[] buf = new byte[2048];int i = 0;while ((i = bis.read(buf)) != -1) bos.write(buf, 0, i);bis.close();bos.close();fis.close();fos.close();}public static String loadURLToString(String url, String EOL) throws FileNotFoundException, IOException {BufferedReader in = new BufferedReader(new InputStreamReader((new URL(url)).openStream()));String result = """";String str;while ((str = in.readLine()) != null) {result += str + EOL;}in.close();return result;}private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException {ResourceBundle messages = ResourceBundle.getBundle(""ApplicationResources"", locale);String tpl;int count = 0;int numberOfSpecialPages = 7;progress = Math.min(progressStart + (int) ((double) count * (double) progressLength / numberOfSpecialPages), 99);count++;String cssContent = wb.readRaw(virtualWiki, ""StyleSheet"");addZipEntry(zipout, ""css/vqwiki.css"", cssContent);progress = Math.min(progressStart + (int) ((double) count * (double) progressLength / numberOfSpecialPages), 99);count++;tpl = getTemplateFilledWithContent(""search"");addTopicEntry(zipout, tpl, ""WikiSearch"", ""WikiSearch.html"");progress = Math.min(progressStart + (int) ((double) count * (double) progressLength / numberOfSpecialPages), 99);count++;zipout.putNextEntry(new ZipEntry(""applets/export2html-applet.jar""));IOUtils.copy(new FileInputStream(ctx.getRealPath(""/WEB-INF/classes/export2html/export2html-applet.jar"")), zipout);zipout.closeEntry();zipout.flush();try {ByteArrayOutputStream bos = new ByteArrayOutputStream();JarOutputStream indexjar = new JarOutputStream(bos);JarEntry jarEntry;File searchDir = new File(wb.getSearchEngine().getSearchIndexPath(virtualWiki));String files[] = searchDir.list();StringBuffer listOfAllFiles = new StringBuffer();for (int i = 0; i < files.length; i++) {if (listOfAllFiles.length() > 0) {listOfAllFiles.append("","");}listOfAllFiles.append(files[i]);jarEntry = new JarEntry(""lucene/index/"" + files[i]);indexjar.putNextEntry(jarEntry);IOUtils.copy(new FileInputStream(new File(searchDir, files[i])), indexjar);indexjar.closeEntry();}indexjar.flush();indexjar.putNextEntry(new JarEntry(""lucene/index.dir""));IOUtils.copy(new StringReader(listOfAllFiles.toString()), indexjar);indexjar.closeEntry();indexjar.flush();indexjar.close();zipout.putNextEntry(new ZipEntry(""applets/index.jar""));zipout.write(bos.toByteArray());zipout.closeEntry();zipout.flush();bos.reset();} catch (Exception e) {logger.log(Level.FINE, ""Exception while adding lucene index: "", e);}progress = Math.min(progressStart + (int) ((double) count * (double) progressLength / numberOfSpecialPages), 99);count++;StringBuffer content = new StringBuffer();content.append(""<table><tr><th>"" + messages.getString(""common.date"") + ""</th><th>"" + messages.getString(""common.topic"") + ""</th><th>"" + messages.getString(""common.user"") + ""</th></tr>"" + IOUtils.LINE_SEPARATOR);Collection all = null;try {Calendar cal = Calendar.getInstance();ChangeLog cl = wb.getChangeLog();int n = env.getIntSetting(Environment.PROPERTY_RECENT_CHANGES_DAYS);if (n == 0) {n = 5;}all = new ArrayList();for (int i = 0; i < n; i++) {Collection col = cl.getChanges(virtualWiki, cal.getTime());if (col != null) {all.addAll(col);}cal.add(Calendar.DATE, -1);}} catch (Exception e) {}DateFormat df = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, locale);for (Iterator iter = all.iterator(); iter.hasNext(); ) {Change change = (Change) iter.next();content.append(""<tr><td class=\""recent\"">"" + df.format(change.getTime()) + ""</td><td class=\""recent\""><a href=\"""" + safename(change.getTopic()) + "".html\"">"" + change.getTopic() + ""</a></td><td class=\""recent\"">"" + change.getUser() + ""</td></tr>"");}content.append(""</table>"" + IOUtils.LINE_SEPARATOR);tpl = getTemplateFilledWithContent(null);tpl = tpl.replaceAll(""@@CONTENTS@@"", content.toString());addTopicEntry(zipout, tpl, ""RecentChanges"", ""RecentChanges.html"");logger.fine(""Done adding all special topics."");}private void convertClasses(File source, File destination) throws PostProcessingException, CodeCheckException, IOException {Stack sourceStack = new Stack();Stack destinationStack = new Stack();sourceStack.push(source);destinationStack.push(destination);while (!sourceStack.isEmpty()) {source = (File) sourceStack.pop();destination = (File) destinationStack.pop();if (!destination.exists()) destination.mkdirs();File[] files = source.listFiles();for (int i = 0; i < files.length; i++) {File current = (File) files[i];if (current.isDirectory()) {sourceStack.push(current);destinationStack.push(new File(destination, current.getName()));} else if (current.getName().endsWith("".class"")) {ClassWriter writer = new ClassWriter();InputStream is = new BufferedInputStream(new FileInputStream(current));writer.readClass(is);is.close();if ((getStatusFlags(writer.getClassName(writer.getCurrentClassIndex())) & PP_PROCESSED) != 0) {ClassWriter[] auxWriter = new ClassWriter[1];transformClass(writer, auxWriter);File output = new File(destination, current.getName());OutputStream os = new BufferedOutputStream(new FileOutputStream(output));writer.writeClass(os);os.close();if (auxWriter[0] != null) {String className = auxWriter[0].getClassName(auxWriter[0].getCurrentClassIndex());className = className.substring(className.lastIndexOf('.') + 1, className.length());output = new File(destination, className + "".class"");os = new BufferedOutputStream(new FileOutputStream(output));auxWriter[0].writeClass(os);os.close();}}}}}}"	5
"public static void parseString(String str, String name) {BufferedReader reader;String zeile = null;boolean firstL = true;int lambda;float intens;int l_b = 0;int l_e = 0;HashMap<Integer, Float> curve = new HashMap<Integer, Float>();String[] temp;try {File f = File.createTempFile(""tempFile"", null);URL url = new URL(str);InputStream is = url.openStream();FileOutputStream os = new FileOutputStream(f);byte[] buffer = new byte[0xFFFF];for (int len; (len = is.read(buffer)) != -1; ) os.write(buffer, 0, len);is.close();os.close();reader = new BufferedReader(new FileReader(f));zeile = reader.readLine();lambda = 0;while (zeile != null) {if (!(zeile.length() > 0 && zeile.charAt(0) == '#')) {zeile = reader.readLine();break;}zeile = reader.readLine();}while (zeile != null) {if (zeile.length() > 0) {temp = zeile.split("" "");lambda = Integer.parseInt(temp[0]);intens = Float.parseFloat(temp[1]);if (firstL) {firstL = false;l_b = lambda;}curve.put(lambda, intens);}zeile = reader.readLine();}l_e = lambda;} catch (IOException e) {System.err.println(""Error2 :"" + e);}try {String tempV;File file = new File(""C:/spectralColors/"" + name + "".sd"");FileWriter fw = new FileWriter(file);BufferedWriter bw = new BufferedWriter(fw);bw.write(""# COLOR: "" + name + "" Auto generated File: 02/09/2009; From "" + l_b + "" to "" + l_e);bw.newLine();bw.write(l_b + """");bw.newLine();for (int i = l_b; i <= l_e; i++) {if (curve.containsKey(i)) {tempV = i + "" "" + curve.get(i);bw.write(tempV);bw.newLine();}}bw.close();} catch (IOException e) {e.printStackTrace();}}public I18N(JApplet applet) {if (prop != null) {return;}String lang = ""de"";try {Properties userProperties = new Properties();if (applet != null) {URL url = new URL(applet.getCodeBase() + xConfigPath + ""ElementDesigner.cfg"");userProperties.load(url.openStream());} else {userProperties.load(new FileInputStream(xConfigPath + ""ElementDesigner.cfg""));}if (userProperties.containsKey(""language"")) {lang = userProperties.getProperty(""language"");}} catch (Exception ex) {ex.printStackTrace();}prop = new Properties();try {if (applet != null) {URL url = new URL(applet.getCodeBase() + xLanguagePath + lang + "".ini"");prop.load(url.openStream());} else {prop.load(new FileInputStream(xLanguagePath + lang + "".ini""));}} catch (Exception ex) {ex.printStackTrace();try {if (applet != null) {URL url = new URL(applet.getCodeBase() + xLanguagePath + ""de.ini"");prop.load(url.openStream());} else {prop.load(new FileInputStream(xLanguagePath + ""de.ini""));}} catch (Exception ex2) {JOptionPane.showMessageDialog(null, ""Language file languages/de.ini not found.\nPlease run the program from its directory."");System.exit(5);}}}private Dataset(File f, Properties p, boolean ro) throws DatabaseException {folder = f;logger.debug(""Opening dataset ["" + ((ro) ? ""readOnly"" : ""read/write"") + "" mode]"");readOnly = ro;logger = Logger.getLogger(Dataset.class);logger.debug(""Opening environment: "" + f);EnvironmentConfig envConfig = new EnvironmentConfig();envConfig.setTransactional(false);envConfig.setAllowCreate(!readOnly);envConfig.setReadOnly(readOnly);env = new Environment(f, envConfig);File props = new File(folder, ""dataset.properties"");if (!ro && p != null) {this.properties = p;try {FileOutputStream fos = new FileOutputStream(props);p.store(fos, null);fos.close();} catch (IOException e) {logger.warn(""Error saving dataset properties"", e);}} else {if (props.exists()) {try {Properties pr = new Properties();FileInputStream fis = new FileInputStream(props);pr.load(fis);fis.close();this.properties = pr;} catch (IOException e) {logger.warn(""Error reading dataset properties"", e);}}}getPaths();getNamespaces();getTree();pathDatabases = new HashMap();frequencyDatabases = new HashMap();lengthDatabases = new HashMap();clustersDatabases = new HashMap();pathMaps = new HashMap();frequencyMaps = new HashMap();lengthMaps = new HashMap();clustersMaps = new HashMap();}private static byte[] baseHash(String name, String password) {try {MessageDigest digest = MessageDigest.getInstance(""MD5"");digest.reset();digest.update(name.toLowerCase().getBytes());digest.update(password.getBytes());return digest.digest();} catch (NoSuchAlgorithmException ex) {d(""MD5 algorithm not found!"");throw new RuntimeException(""MD5 algorithm not found! Unable to authenticate"");}}public void createFeed(Context ctx, URL url) {try {targetFlag = TARGET_FEED;droidDB = NewsDroidDB.getInstance(ctx);currentFeed.Url = url;SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser sp = spf.newSAXParser();XMLReader xr = sp.getXMLReader();xr.setContentHandler(this);xr.parse(new InputSource(url.openStream()));} catch (IOException e) {Log.e(e.getMessage());} catch (SAXException e) {Log.e(e.getMessage());} catch (ParserConfigurationException e) {Log.e(e.getMessage());}}private File download(String filename, URL url) {int size = -1;int received = 0;try {fireDownloadStarted(filename);File file = createFile(filename);BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(file));System.out.println(""������Դ��"" + filename + "", url="" + url);InputStream bis = url.openStream();byte[] buf = new byte[1024];int count = 0;long lastUpdate = 0;size = bis.available();while ((count = bis.read(buf)) != -1) {bos.write(buf, 0, count);received += count;long now = System.currentTimeMillis();if (now - lastUpdate > 500) {fireDownloadUpdate(filename, size, received);lastUpdate = now;}}bos.close();System.out.println(""��Դ������ϣ�"" + filename);fireDownloadCompleted(filename);return file;} catch (IOException e) {System.out.println(""������Դʧ�ܣ�"" + filename + "", error="" + e.getMessage());fireDownloadInterrupted(filename);if (!(e instanceof FileNotFoundException)) {e.printStackTrace();}}return null;}private void delay(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException, ServletException {String url = request.getRequestURL().toString();if (delayed.contains(url)) {delayed.remove(url);LOGGER.info(MessageFormat.format(""Loading delayed resource at url = [{0}]"", url));chain.doFilter(request, response);} else {LOGGER.info(""Returning resource = [LoaderApplication.swf]"");InputStream input = null;OutputStream output = null;try {input = getClass().getResourceAsStream(""LoaderApplication.swf"");output = response.getOutputStream();delayed.add(url);response.setHeader(""Cache-Control"", ""no-cache"");IOUtils.copy(input, output);} finally {IOUtils.closeQuietly(output);IOUtils.closeQuietly(input);}}}public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException {String encoded = """";if (vars != null) {for (String key : vars.keySet()) {try {encoded += ""&"" + key + ""="" + URLEncoder.encode(vars.get(key), ""UTF-8"");} catch (UnsupportedEncodingException e) {e.printStackTrace();}}if (encoded.length() > 0) {encoded = encoded.substring(1);}}String url = this.endpoint + path;if (method.toUpperCase().equals(""GET"")) url += ((path.indexOf('?') == -1) ? ""?"" : ""&"") + encoded;try {URL resturl = new URL(url);HttpURLConnection con = (HttpURLConnection) resturl.openConnection();String userpass = this.accountSid + "":"" + this.authToken;String encodeuserpass = new String(Base64.encodeToByte(userpass.getBytes(), false));con.setRequestProperty(""Authorization"", ""Basic "" + encodeuserpass);con.setDoOutput(true);if (method.toUpperCase().equals(""GET"")) {con.setRequestMethod(""GET"");} else if (method.toUpperCase().equals(""POST"")) {con.setRequestMethod(""POST"");OutputStreamWriter out = new OutputStreamWriter(con.getOutputStream());out.write(encoded);out.close();} else if (method.toUpperCase().equals(""PUT"")) {con.setRequestMethod(""PUT"");OutputStreamWriter out = new OutputStreamWriter(con.getOutputStream());out.write(encoded);out.close();} else if (method.toUpperCase().equals(""DELETE"")) {con.setRequestMethod(""DELETE"");} else {throw new TwilioRestException(""Unknown method "" + method);}BufferedReader in = null;try {if (con.getInputStream() != null) {in = new BufferedReader(new InputStreamReader(con.getInputStream()));}} catch (IOException e) {if (con.getErrorStream() != null) {in = new BufferedReader(new InputStreamReader(con.getErrorStream()));}}if (in == null) {throw new TwilioRestException(""Unable to read response from server"");}StringBuffer decodedString = new StringBuffer();String line;while ((line = in.readLine()) != null) {decodedString.append(line);}in.close();int responseCode = con.getResponseCode();return new TwilioRestResponse(url, decodedString.toString(), responseCode);} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return null;}public static void fileCopy(File source, File dest) throws IOException {FileChannel in = null, out = null;try {in = new FileInputStream(source).getChannel();out = new FileOutputStream(dest).getChannel();long size = in.size();MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buf);} finally {if (in != null) in.close();if (out != null) out.close();}}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}"	5
"public boolean validateLogin(String username, String password) {boolean user_exists = false;try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(password.getBytes());BigInteger hash = new BigInteger(1, md5.digest());String password_hash = hash.toString(16);statement = connect.prepareStatement(""SELECT id from toepen.users WHERE username = ? AND password = ?"");statement.setString(1, username);statement.setString(2, password_hash);resultSet = statement.executeQuery();while (resultSet.next()) {user_exists = true;}} catch (Exception ex) {System.out.println(ex);} finally {close();return user_exists;}}public boolean createUser(String username, String password, String name) throws Exception {boolean user_created = false;try {statement = connect.prepareStatement(""SELECT COUNT(*) from toepen.users WHERE username = ? LIMIT 1"");statement.setString(1, username);resultSet = statement.executeQuery();resultSet.next();if (resultSet.getInt(1) == 0) {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(password.getBytes());BigInteger hash = new BigInteger(1, md5.digest());String password_hash = hash.toString(16);long ctime = System.currentTimeMillis() / 1000;statement = connect.prepareStatement(""INSERT INTO toepen.users "" + ""(username, password, name, ctime) "" + ""VALUES (?, ?, ?, ?)"");statement.setString(1, username);statement.setString(2, password_hash);statement.setString(3, name);statement.setLong(4, ctime);if (statement.executeUpdate() > 0) {user_created = true;}}} catch (Exception ex) {System.out.println(ex);} finally {close();return user_created;}}public String getClass(EmeraldjbBean eb) throws EmeraldjbException {Entity entity = (Entity) eb;StringBuffer sb = new StringBuffer();String myPackage = getPackageName(eb);sb.append(""package "" + myPackage + "";\n"");sb.append(""\n"");DaoValuesGenerator valgen = new DaoValuesGenerator();String values_class_name = valgen.getClassName(entity);sb.append(""\n"");List importList = new Vector();importList.add(""java.io.*;"");importList.add(""java.sql.Date;"");importList.add(""com.emeraldjb.runtime.patternXmlObj.*;"");importList.add(""javax.xml.parsers.*;"");importList.add(""java.text.ParseException;"");importList.add(""org.xml.sax.*;"");importList.add(""org.xml.sax.helpers.*;"");importList.add(valgen.getPackageName(eb) + ""."" + values_class_name + "";"");Iterator it = importList.iterator();while (it.hasNext()) {String importName = (String) it.next();sb.append(""import "" + importName + ""\n"");}sb.append(""\n"");String proto_version = entity.getPatternValue(GeneratorConst.PATTERN_STREAM_PROTO_VERSION, ""1"");boolean short_version = entity.getPatternBooleanValue(GeneratorConst.PATTERN_STREAM_XML_SHORT, false);StringBuffer preface = new StringBuffer();StringBuffer consts = new StringBuffer();StringBuffer f_writer = new StringBuffer();StringBuffer f_writer_short = new StringBuffer();StringBuffer f_reader = new StringBuffer();StringBuffer end_elems = new StringBuffer();boolean end_elem_needs_catch = false;consts.append(""\n  public static final String EL_CLASS_TAG=\"""" + values_class_name + ""\"";"");preface.append(""\nxos.print(\""<!-- This format is optimised for space, below are the column mappings\"");"");boolean has_times = false;boolean has_strings = false;it = entity.getMembers().iterator();int col_num = 0;while (it.hasNext()) {col_num++;Member member = (Member) it.next();String nm = member.getName();preface.append(""\nxos.print(\""c"" + col_num + "" = "" + nm + ""\"");"");String elem_name = nm;String elem_name_short = ""c"" + col_num;String el_name = nm.toUpperCase();if (member.getColLen() > 0 || !member.isNullAllowed()) {end_elem_needs_catch = true;}String element_const = ""EL_"" + el_name;String element_const_short = ""EL_"" + el_name + ""_SHORT"";consts.append(""\n  public static final String "" + element_const + ""=\"""" + elem_name + ""\"";"" + ""\n  public static final String "" + element_const_short + ""=\"""" + elem_name_short + ""\"";"");String getter = ""obj."" + methodGenerator.getMethodName(DaoGeneratorUtils.METHOD_GET, member);String setter = ""values_."" + methodGenerator.getMethodName(DaoGeneratorUtils.METHOD_SET, member);String pad = """";JTypeBase gen_type = EmdFactory.getJTypeFactory().getJavaType(member.getType());f_writer.append(gen_type.getToXmlCode(pad, element_const, getter + ""()""));f_writer_short.append(gen_type.getToXmlCode(pad, element_const_short, getter + ""()""));end_elems.append(gen_type.getFromXmlCode(pad, element_const, setter));end_elems.append(""\n//and also the short version"");end_elems.append(gen_type.getFromXmlCode(pad, element_const_short, setter));}preface.append(""\nxos.print(\""-->\"");"");String body_part = f_writer.toString();String body_part_short = preface.toString() + f_writer_short.toString();String reader_vars = """";String streamer_class_name = getClassName(entity);sb.append(""public class "" + streamer_class_name + ""  extends DefaultHandler implements TSParser\n"");sb.append(""{"" + consts + ""\n  public static final int PROTO_VERSION="" + proto_version + "";"" + ""\n  private transient StringBuffer cdata_=new StringBuffer();"" + ""\n  private transient String endElement_;"" + ""\n  private transient TSParser parentParser_;"" + ""\n  private transient XMLReader theReader_;\n"" + ""\n  private "" + values_class_name + "" values_;"");sb.append(""\n\n"");sb.append(""\n  /**"" + ""\n* This is really only here as an example.  It is very rare to write a single"" + ""\n* object to a file - far more likely to have a collection or object graph.  "" + ""\n* in which case you can write something similar - maybe using the writeXmlShort"" + ""\n* version instread."" + ""\n*/"" + ""\n  public static void writeToFile(String file_nm, "" + values_class_name + "" obj) throws IOException"" + ""\n  {"" + ""\nif (file_nm==null || file_nm.length()==0) throw new IOException(\""Bad file name (null or zero length)\"");"" + ""\nif (obj==null) throw new IOException(\""Bad value object parameter, cannot write null object to file\"");"" + ""\nFileOutputStream fos = new FileOutputStream(file_nm);"" + ""\nXmlOutputFilter xos = new XmlOutputFilter(fos);"" + ""\nxos.openElement(\""FILE_\""+EL_CLASS_TAG);"" + ""\nwriteXml(xos, obj);"" + ""\nxos.closeElement();"" + ""\nfos.close();"" + ""\n  } // end of writeToFile"" + ""\n"" + ""\n  public static void readFromFile(String file_nm, "" + values_class_name + "" obj) throws IOException, SAXException"" + ""\n  {"" + ""\nif (file_nm==null || file_nm.length()==0) throw new IOException(\""Bad file name (null or zero length)\"");"" + ""\nif (obj==null) throw new IOException(\""Bad value object parameter, cannot write null object to file\"");"" + ""\nFileInputStream fis = new FileInputStream(file_nm);"" + ""\nDataInputStream dis = new DataInputStream(fis);"" + ""\nmarshalFromXml(dis, obj);"" + ""\nfis.close();"" + ""\n  } // end of readFromFile"" + ""\n"" + ""\n  public static void writeXml(XmlOutputFilter xos, "" + values_class_name + "" obj) throws IOException"" + ""\n  {"" + ""\nxos.openElement(EL_CLASS_TAG);"" + body_part + ""\nxos.closeElement();"" + ""\n  } // end of writeXml"" + ""\n"" + ""\n  public static void writeXmlShort(XmlOutputFilter xos, "" + values_class_name + "" obj) throws IOException"" + ""\n  {"" + ""\nxos.openElement(EL_CLASS_TAG);"" + body_part_short + ""\nxos.closeElement();"" + ""\n  } // end of writeXml"" + ""\n"" + ""\n  public "" + streamer_class_name + ""("" + values_class_name + "" obj) {"" + ""\nvalues_ = obj;"" + ""\n  } // end of ctor"" + ""\n"");String xml_bit = addXmlFunctions(streamer_class_name, values_class_name, end_elem_needs_catch, end_elems, f_reader);String close = ""\n"" + ""\n} // end of classs"" + ""\n\n"" + ""\n//**************"" + ""\n// End of file"" + ""\n//**************"";return sb.toString() + xml_bit + close;}public static byte[] read(URL url) throws IOException {byte[] bytes;InputStream is = null;try {is = url.openStream();bytes = readAllBytes(is);} finally {if (is != null) {is.close();}}return bytes;}public static String CopyFile(String sourcefile, String destfile) throws FileNotFoundException, IOException {int last = destfile.lastIndexOf('/');if (last < 0) {DrxWriteError(""CopyFile"", ""Destination filepath "" + destfile + "" doesn't contain /"");throw new java.io.FileNotFoundException(destfile);}String parent = destfile.substring(0, last);if (parent.length() > 0) {File f = new File(parent);if (!f.isDirectory()) {if (!f.mkdirs()) {DrxWriteError(""CopyFile"", ""Folder "" + parent + "" doesn't exist, cannot create"");}}}FileChannel srcChannel = new FileInputStream(sourcefile).getChannel();FileChannel dstChannel = new FileOutputStream(destfile).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();return destfile;}public static String gerarDigest(String mensagem) {String mensagemCriptografada = null;try {MessageDigest md = MessageDigest.getInstance(""SHA"");System.out.println(""Mensagem original: "" + mensagem);md.update(mensagem.getBytes());byte[] digest = md.digest();mensagemCriptografada = converterBytesEmHexa(digest);} catch (Exception e) {e.printStackTrace();}return mensagemCriptografada;}private String readCreditsHtml(IApplication app) {final URL url = app.getResources().getCreditsURL();StringBuffer buf = new StringBuffer(2048);if (url != null) {try {BufferedReader rdr = new BufferedReader(new InputStreamReader(url.openStream()));try {String line = null;while ((line = rdr.readLine()) != null) {String internationalizedLine = Utilities.replaceI18NSpanLine(line, s_stringMgr);buf.append(internationalizedLine);}} finally {rdr.close();}} catch (IOException ex) {String errorMsg = s_stringMgr.getString(""AboutBoxDialog.error.creditsfile"");s_log.error(errorMsg, ex);buf.append(errorMsg + "": "" + ex.toString());}} else {String errorMsg = s_stringMgr.getString(""AboutBoxDialog.error.creditsfileurl"");s_log.error(errorMsg);buf.append(errorMsg);}return buf.toString();}public void load(String filename) throws VisbardException {String defaultFilename = VisbardMain.getSettingsDir() + File.separator + DEFAULT_SETTINGS_FILE;File defaultFile = new File(defaultFilename);InputStream settingsInStreamFromFile = null;try {sLogger.info(""Loading settings from : "" + defaultFilename);settingsInStreamFromFile = new FileInputStream(defaultFile);} catch (FileNotFoundException fnf) {sLogger.info(""Unable to load custom settings from user's settings directory ("" + fnf.getMessage() + ""); reverting to default settings"");try {InputStream settingsInStreamFromJar = VisbardMain.class.getClassLoader().getResourceAsStream(filename);FileOutputStream settingsOutStream = new FileOutputStream(defaultFile);int c;while ((c = settingsInStreamFromJar.read()) != -1) settingsOutStream.write(c);settingsInStreamFromJar.close();settingsOutStream.close();settingsInStreamFromFile = new FileInputStream(defaultFile);} catch (IOException ioe) {sLogger.warn(""Unable to copy default settings to user's settings directory ("" + ioe.getMessage() + ""); using default settings from ViSBARD distribution package"");settingsInStreamFromFile = VisbardMain.class.getClassLoader().getResourceAsStream(filename);}}this.processSettingsFile(settingsInStreamFromFile, filename);}void run(PseudolocalizerArguments arguments) throws IOException {List<String> fileNames = arguments.getFileNames();PseudolocalizationPipeline pipeline = arguments.getPipeline();if (arguments.isInteractive()) {runStdin(pipeline);return;}if (fileNames.size() == 0) {MessageCatalog msgCat = FormatRegistry.getMessageCatalog(arguments.getType());writeMessages(msgCat, readAndProcessMessages(pipeline, msgCat, System.in), System.out);return;}String suffix = arguments.getVariant();if (suffix == null) {suffix = ""_pseudo"";} else {suffix = ""_"" + suffix;}for (String fileName : fileNames) {File file = new File(fileName);if (!file.exists()) {System.err.println(""File "" + fileName + "" not found"");continue;}int lastDot = fileName.lastIndexOf('.');String extension;String outFileName;if (lastDot >= 0) {extension = fileName.substring(lastDot + 1);outFileName = fileName.substring(0, lastDot) + suffix + ""."" + extension;} else {extension = """";outFileName = fileName + suffix;}System.out.println(""Processing "" + fileName + "" into "" + outFileName);String fileType = arguments.getType();if (fileType == null) {fileType = extension;}MessageCatalog msgCat = FormatRegistry.getMessageCatalog(fileType);InputStream inputStream = new FileInputStream(file);List<Message> processedMessages = readAndProcessMessages(pipeline, msgCat, inputStream);OutputStream outputStream = new FileOutputStream(new File(outFileName));writeMessages(msgCat, processedMessages, outputStream);}}public JspBaseTestCase(String name) {super(name);String propertyFile = ""bugbase.properties"";Properties properties = new Properties();setProperties(properties);try {URL url = this.getClass().getResource(""/"" + propertyFile);if (url != null) {InputStream is = url.openStream();properties.load(is);is.close();getLog().debug(""Cactus LogService successfully instantiated."");getLog().debug(""Log4J successfully instantiated."");}} catch (IOException e) {System.err.println(""ERROR: cannot load "" + propertyFile + ""!"");}setDefault(""openfuture.bugbase.test.host"", ""localhost:8080"");setDefault(""openfuture.bugbase.test.context"", ""bugbase"");setDefault(""openfuture.bugbase.test.userid"", ""admin"");setDefault(""openfuture.bugbase.test.password"", ""bugbase"");setDefault(""openfuture.bugbase.test.project"", ""BugBase Test"");}"	5
"public void transferOutputFiles() throws IOException {HashSet<GridNode> nodes = (HashSet) batchTask.returnNodeCollection();Iterator<GridNode> ic = nodes.iterator();InetAddress addLocal = InetAddress.getLocalHost();String hostnameLocal = addLocal.getHostName();while (ic.hasNext()) {GridNode node = ic.next();String address = node.getPhysicalAddress();InetAddress addr = InetAddress.getByName(address);byte[] rawAddr = addr.getAddress();Map<String, String> attributes = node.getAttributes();InetAddress hostname = InetAddress.getByAddress(rawAddr);if (hostname.getHostName().equals(hostnameLocal)) continue;String[] usernamePass = inputNodes.get(hostname.getHostName());String gridPath = attributes.get(""GRIDGAIN_HOME"");FTPClient ftp = new FTPClient();ftp.connect(hostname);ftp.login(usernamePass[0], usernamePass[1]);int reply = ftp.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {ftp.disconnect();System.err.println(""FTP server refused connection."");continue;}ftp.changeWorkingDirectory(gridPath + ""/bin"");ftp.setFileType(FTPClient.COMPRESSED_TRANSFER_MODE);ftp.setRemoteVerificationEnabled(false);ftp.setFileType(FTPClient.ASCII_FILE_TYPE);FTPFile[] fs = ftp.listFiles();for (FTPFile f : fs) {if (f.isDirectory()) continue;String fileName = f.getName();if (!fileName.endsWith("".txt"")) continue;System.out.println(f.getName());FileOutputStream out = new FileOutputStream(""../repast.simphony.distributedBatch/"" + ""remoteOutput/"" + f.getName());try {ftp.retrieveFile(fileName, out);} catch (Exception e) {continue;} finally {if (out != null) out.close();}}ftp.logout();ftp.disconnect();}}private boolean processar(int iCodProd) {String sSQL = null;String sSQLCompra = null;String sSQLInventario = null;String sSQLVenda = null;String sSQLRMA = null;String sSQLOP = null;String sSQLOP_SP = null;String sWhere = null;String sProd = null;String sWhereCompra = null;String sWhereInventario = null;String sWhereVenda = null;String sWhereRMA = null;String sWhereOP = null;String sWhereOP_SP = null;PreparedStatement ps = null;ResultSet rs = null;boolean bOK = false;try {try {sWhere = """";sProd = """";if (cbTudo.getVlrString().equals(""S"")) sProd = ""["" + iCodProd + ""] "";if (!(txtDataini.getVlrString().equals(""""))) {sWhere = "" AND DTMOVPROD >= '"" + Funcoes.dateToStrDB(txtDataini.getVlrDate()) + ""'"";}sSQL = ""DELETE FROM EQMOVPROD WHERE "" + ""CODEMP=? AND CODPROD=?"" + sWhere;state(sProd + ""Limpando movimenta��es desatualizadas..."");ps = con.prepareStatement(sSQL);ps.setInt(1, Aplicativo.iCodEmp);ps.setInt(2, iCodProd);ps.executeUpdate();ps.close();if ((txtDataini.getVlrString().equals(""""))) {sSQL = ""UPDATE EQPRODUTO SET SLDPROD=0 WHERE "" + ""CODEMP=? AND CODPROD=?"";ps = con.prepareStatement(sSQL);ps.setInt(1, Aplicativo.iCodEmp);ps.setInt(2, iCodProd);ps.executeUpdate();ps.close();state(sProd + ""Limpando saldos..."");sSQL = ""UPDATE EQSALDOPROD SET SLDPROD=0 WHERE CODEMP=? AND CODPROD=?"";ps = con.prepareStatement(sSQL);ps.setInt(1, Aplicativo.iCodEmp);ps.setInt(2, iCodProd);ps.executeUpdate();ps.close();state(sProd + ""Limpando saldos..."");}bOK = true;} catch (SQLException err) {Funcoes.mensagemErro(null, ""Erro ao limpar estoques!\n"" + err.getMessage(), true, con, err);}if (bOK) {bOK = false;if (!txtDataini.getVlrString().equals("""")) {sWhereCompra = "" AND C.DTENTCOMPRA >= '"" + Funcoes.dateToStrDB(txtDataini.getVlrDate()) + ""'"";sWhereInventario = "" AND I.DATAINVP >= '"" + Funcoes.dateToStrDB(txtDataini.getVlrDate()) + ""'"";sWhereVenda = "" AND V.DTEMITVENDA >= '"" + Funcoes.dateToStrDB(txtDataini.getVlrDate()) + ""'"";sWhereRMA = "" AND RMA.DTAEXPRMA >= '"" + Funcoes.dateToStrDB(txtDataini.getVlrDate()) + ""'"";sWhereOP = "" AND O.DTFABROP >= '"" + Funcoes.dateToStrDB(txtDataini.getVlrDate()) + ""'"";sWhereOP_SP = "" AND O.DTSUBPROD >= '"" + Funcoes.dateToStrDB(txtDataini.getVlrDate()) + ""'"";} else {sWhereCompra = """";sWhereInventario = """";sWhereVenda = """";sWhereRMA = """";sWhereOP = """";sWhereOP_SP = """";}sSQLInventario = ""SELECT 'A' TIPOPROC, I.CODEMPPD, I.CODFILIALPD, I.CODPROD,"" + ""I.CODEMPLE, I.CODFILIALLE, I.CODLOTE,"" + ""I.CODEMPTM, I.CODFILIALTM, I.CODTIPOMOV,"" + ""I.CODEMP, I.CODFILIAL, CAST(NULL AS CHAR(1)) TIPOVENDA, "" + ""I.CODINVPROD CODMASTER, I.CODINVPROD CODITEM, "" + ""CAST(NULL AS INTEGER) CODEMPNT, CAST(NULL AS SMALLINT) CODFILIALNT ,CAST(NULL AS CHAR(4)) CODNAT,"" + ""I.DATAINVP DTPROC, I.CODINVPROD DOCPROC,'N' FLAG,"" + ""I.QTDINVP QTDPROC, I.PRECOINVP CUSTOPROC, "" + ""I.CODEMPAX, I.CODFILIALAX, I.CODALMOX, CAST(NULL AS SMALLINT) as seqent, CAST(NULL AS SMALLINT) as seqsubprod  "" + ""FROM EQINVPROD I "" + ""WHERE I.CODEMP=? AND I.CODPROD = ?"" + sWhereInventario;sSQLCompra = ""SELECT 'C' TIPOPROC, IC.CODEMPPD, IC.CODFILIALPD, IC.CODPROD,"" + ""IC.CODEMPLE, IC.CODFILIALLE, IC.CODLOTE,"" + ""C.CODEMPTM, C.CODFILIALTM, C.CODTIPOMOV,"" + ""C.CODEMP, C.CODFILIAL, CAST(NULL AS CHAR(1)) TIPOVENDA, "" + ""C.CODCOMPRA CODMASTER, IC.CODITCOMPRA CODITEM,"" + ""IC.CODEMPNT, IC.CODFILIALNT, IC.CODNAT, "" + ""C.DTENTCOMPRA DTPROC, C.DOCCOMPRA DOCPROC, C.FLAG,"" + ""IC.QTDITCOMPRA QTDPROC, IC.CUSTOITCOMPRA CUSTOPROC, "" + ""IC.CODEMPAX, IC.CODFILIALAX, IC.CODALMOX, CAST(NULL AS SMALLINT) as seqent, CAST(NULL AS SMALLINT) as seqsubprod "" + ""FROM CPCOMPRA C,CPITCOMPRA IC "" + ""WHERE IC.CODCOMPRA=C.CODCOMPRA AND "" + ""IC.CODEMP=C.CODEMP AND IC.CODFILIAL=C.CODFILIAL AND IC.QTDITCOMPRA > 0 AND "" + ""C.CODEMP=? AND IC.CODPROD = ?"" + sWhereCompra;sSQLOP = ""SELECT 'O' TIPOPROC, O.CODEMPPD, O.CODFILIALPD, O.CODPROD,"" + ""O.CODEMPLE, O.CODFILIALLE, O.CODLOTE,"" + ""O.CODEMPTM, O.CODFILIALTM, O.CODTIPOMOV,"" + ""O.CODEMP, O.CODFILIAL, CAST(NULL AS CHAR(1)) TIPOVENDA ,"" + ""O.CODOP CODMASTER, CAST(O.SEQOP AS INTEGER) CODITEM,"" + ""CAST(NULL AS INTEGER) CODEMPNT, CAST(NULL AS SMALLINT) CODFILIALNT, "" + ""CAST(NULL AS CHAR(4)) CODNAT, "" + ""coalesce(oe.dtent,O.DTFABROP) DTPROC, "" + ""O.CODOP DOCPROC, 'N' FLAG, "" + ""coalesce(oe.qtdent,O.QTDFINALPRODOP) QTDPROC, "" + ""( SELECT SUM(PD.CUSTOMPMPROD) FROM PPITOP IT, EQPRODUTO PD "" + ""WHERE IT.CODEMP=O.CODEMP AND IT.CODFILIAL=O.CODFILIAL AND "" + ""IT.CODOP=O.CODOP AND IT.SEQOP=O.SEQOP AND "" + ""PD.CODEMP=IT.CODEMPPD AND PD.CODFILIAL=IT.CODFILIALPD AND "" + ""PD.CODPROD=IT.CODPROD) CUSTOPROC, "" + ""O.CODEMPAX, O.CODFILIALAX, O.CODALMOX, oe.seqent, CAST(NULL AS SMALLINT) as seqsubprod "" + ""FROM PPOP O "" + "" left outer join ppopentrada oe on oe.codemp=o.codemp and oe.codfilial=o.codfilial and oe.codop=o.codop and oe.seqop=o.seqop "" + ""WHERE O.QTDFINALPRODOP > 0 AND "" + ""O.CODEMP=? AND O.CODPROD = ? "" + sWhereOP;sSQLOP_SP = ""SELECT 'S' TIPOPROC, O.CODEMPPD, O.CODFILIALPD, O.CODPROD,"" + ""O.CODEMPLE, O.CODFILIALLE, O.CODLOTE,"" + ""O.CODEMPTM, O.CODFILIALTM, O.CODTIPOMOV,"" + ""O.CODEMP, O.CODFILIAL, CAST(NULL AS CHAR(1)) TIPOVENDA ,"" + ""O.CODOP CODMASTER, CAST(O.SEQOP AS INTEGER) CODITEM,"" + ""CAST(NULL AS INTEGER) CODEMPNT, CAST(NULL AS SMALLINT) CODFILIALNT, "" + ""CAST(NULL AS CHAR(4)) CODNAT, "" + ""coalesce(o.dtsubprod,Op.DTFABROP) DTPROC, "" + ""O.CODOP DOCPROC, 'N' FLAG, "" + ""O.QTDITSP QTDPROC, "" + ""( SELECT PD.CUSTOMPMPROD FROM EQPRODUTO PD "" + ""WHERE PD.CODEMP=O.CODEMPPD AND PD.CODFILIAL=O.CODFILIALPD AND "" + ""PD.CODPROD=O.CODPROD) CUSTOPROC, "" + ""OP.CODEMPAX, OP.CODFILIALAX, OP.CODALMOX, CAST(NULL AS SMALLINT) as seqent, O.SEQSUBPROD "" + ""FROM PPOPSUBPROD O, PPOP OP "" + ""WHERE O.QTDITSP > 0 AND "" + ""O.CODEMP=OP.CODEMP and O.CODFILIAL=OP.CODFILIAL and O.CODOP=OP.CODOP and O.SEQOP=OP.SEQOP AND "" + ""O.CODEMP=? AND O.CODPROD = ?"" + sWhereOP_SP;sSQLRMA = ""SELECT 'R' TIPOPROC, IT.CODEMPPD, IT.CODFILIALPD, IT.CODPROD, "" + ""IT.CODEMPLE, IT.CODFILIALLE, IT.CODLOTE, "" + ""RMA.CODEMPTM, RMA.CODFILIALTM, RMA.CODTIPOMOV, "" + ""RMA.CODEMP, RMA.CODFILIAL, CAST(NULL AS CHAR(1)) TIPOVENDA, "" + ""IT.CODRMA CODMASTER, CAST(IT.CODITRMA AS INTEGER) CODITEM, "" + ""CAST(NULL AS INTEGER) CODEMPNT, CAST(NULL AS SMALLINT) CODFILIALNT, "" + ""CAST(NULL AS CHAR(4)) CODNAT, "" + ""COALESCE(IT.DTAEXPITRMA,RMA.DTAREQRMA) DTPROC, "" + ""RMA.CODRMA DOCPROC, 'N' FLAG, "" + ""IT.QTDEXPITRMA QTDPROC, IT.PRECOITRMA CUSTOPROC,"" + ""IT.CODEMPAX, IT.CODFILIALAX, IT.CODALMOX, CAST(NULL AS SMALLINT) as seqent, CAST(NULL AS SMALLINT) as seqsubprod"" + ""FROM EQRMA RMA ,EQITRMA IT "" + ""WHERE IT.CODRMA=RMA.CODRMA AND "" + ""IT.CODEMP=RMA.CODEMP AND IT.CODFILIAL=RMA.CODFILIAL AND "" + ""IT.QTDITRMA > 0 AND "" + ""RMA.CODEMP=? AND IT.CODPROD = ?"" + sWhereRMA;sSQLVenda = ""SELECT 'V' TIPOPROC, IV.CODEMPPD, IV.CODFILIALPD, IV.CODPROD,"" + ""IV.CODEMPLE, IV.CODFILIALLE, IV.CODLOTE,"" + ""V.CODEMPTM, V.CODFILIALTM, V.CODTIPOMOV,"" + ""V.CODEMP, V.CODFILIAL, V.TIPOVENDA, "" + ""V.CODVENDA CODMASTER, IV.CODITVENDA CODITEM, "" + ""IV.CODEMPNT, IV.CODFILIALNT, IV.CODNAT, "" + ""V.DTEMITVENDA DTPROC, V.DOCVENDA DOCPROC, V.FLAG, "" + ""IV.QTDITVENDA QTDPROC, IV.VLRLIQITVENDA CUSTOPROC, "" + ""IV.CODEMPAX, IV.CODFILIALAX, IV.CODALMOX, CAST(NULL AS SMALLINT) as seqent, CAST(NULL AS SMALLINT) as seqsubprod"" + ""FROM VDVENDA V ,VDITVENDA IV "" + ""WHERE IV.CODVENDA=V.CODVENDA AND IV.TIPOVENDA = V.TIPOVENDA AND "" + ""IV.CODEMP=V.CODEMP AND IV.CODFILIAL=V.CODFILIAL AND "" + ""IV.QTDITVENDA > 0 AND "" + ""V.CODEMP=? AND IV.CODPROD = ?"" + sWhereVenda;try {state(sProd + ""Iniciando reconstru��o..."");sSQL = sSQLInventario + "" UNION ALL "" + sSQLCompra + "" UNION ALL "" + sSQLOP + "" UNION ALL "" + sSQLOP_SP + "" UNION ALL "" + sSQLRMA + "" UNION ALL "" + sSQLVenda + "" ORDER BY 19,1,20"";System.out.println(sSQL);ps = con.prepareStatement(sSQL);ps.setInt(paramCons.CODEMPIV.ordinal(), Aplicativo.iCodEmp);ps.setInt(paramCons.CODPRODIV.ordinal(), iCodProd);ps.setInt(paramCons.CODEMPCP.ordinal(), Aplicativo.iCodEmp);ps.setInt(paramCons.CODPRODCP.ordinal(), iCodProd);ps.setInt(paramCons.CODEMPOP.ordinal(), Aplicativo.iCodEmp);ps.setInt(paramCons.CODPRODOP.ordinal(), iCodProd);ps.setInt(paramCons.CODEMPOPSP.ordinal(), Aplicativo.iCodEmp);ps.setInt(paramCons.CODPRODOPSP.ordinal(), iCodProd);ps.setInt(paramCons.CODEMPRM.ordinal(), Aplicativo.iCodEmp);ps.setInt(paramCons.CODPRODRM.ordinal(), iCodProd);ps.setInt(paramCons.CODEMPVD.ordinal(), Aplicativo.iCodEmp);ps.setInt(paramCons.CODPRODVD.ordinal(), iCodProd);rs = ps.executeQuery();bOK = true;while (rs.next() && bOK) {bOK = insereMov(rs, sProd);}rs.close();ps.close();state(sProd + ""Aguardando grava��o final..."");} catch (SQLException err) {bOK = false;err.printStackTrace();Funcoes.mensagemErro(null, ""Erro ao reconstruir base!\n"" + err.getMessage(), true, con, err);}}try {if (bOK) {con.commit();state(sProd + ""Registros processados com sucesso!"");} else {state(sProd + ""Registros antigos restaurados!"");con.rollback();}} catch (SQLException err) {err.printStackTrace();Funcoes.mensagemErro(null, ""Erro ao relizar procedimento!\n"" + err.getMessage(), true, con, err);}} finally {sSQL = null;sSQLCompra = null;sSQLInventario = null;sSQLVenda = null;sSQLRMA = null;sWhere = null;sProd = null;sWhereCompra = null;sWhereInventario = null;sWhereVenda = null;sWhereRMA = null;rs = null;ps = null;bRunProcesso = false;btProcessar.setEnabled(true);}return bOK;}private LoadReturnCode loadChild(Map<Key, ValueItem> map, String fileOrUrl, LoadReturnCode defaultResult) throws IOException {try {URL childurl = getAsUrl(fileOrUrl);if (childurl == null) return defaultResult;InputStream childStream = childurl.openStream();fileOrUrl = childurl.toString();LinkedProperties child = new LinkedProperties();child.initFromParent(this);child.setFilename(fileOrUrl);int p = fileOrUrl.lastIndexOf('/');setLoadPath((p < 0) ? null : fileOrUrl.substring(0, p));Map<Key, ValueItem> childMap = new HashMap<Key, ValueItem>(map);removeLocalKeys(childMap);@SuppressWarnings(""unused"") LoadReturnCode childresult = child.onLoad(childMap, childStream);try {if (childStream != null) childStream.close();} catch (IOException ioex) {}childStream = null;map.putAll(childMap);return resolveMap(map);} catch (IOException ioe) {System.out.println(getFilename() + "": error loading childfile "" + fileOrUrl);throw ioe;}}public static GoogleResponse getElevation(String lat, String lon) throws IOException {String url = ""http://maps.google.com/maps/api/elevation/xml?locations="";url = url + String.valueOf(lat);url = url + "","";url = url + String.valueOf(lon);url = url + ""&sensor=false"";BufferedReader in = new BufferedReader(new InputStreamReader(new URL(url).openStream()));String line;GoogleResponse googleResponse = new GoogleResponse();googleResponse.lat = Double.valueOf(lat);googleResponse.lon = Double.valueOf(lon);while ((line = in.readLine()) != null) {line = line.trim();if (line.startsWith(""<status>"")) {line = line.replace(""<status>"", """");line = line.replace(""</status>"", """");googleResponse.status = line;if (!line.toLowerCase().equals(""ok"")) return googleResponse;} else if (line.startsWith(""<elevation>"")) {line = line.replace(""<elevation>"", """");line = line.replace(""</elevation>"", """");googleResponse.elevation = Double.valueOf(line);return googleResponse;}}return googleResponse;}@PostConstructpublic void initialize() {logger.info(""+++++ DashboardFManagedBean: postConstruct step: start ++++++++"");if (auSummaryList == null || auSummaryList.isEmpty()) {auSummaryList = auOverviewTableFacade.getNewerVerifiedAus(N_AUS_FOR_CHART);if (auSummaryList == null) {MySQLDAOFactory daof = (MySQLDAOFactory) DAOFactory.getDAOFactory(DAOFactory.DBvendor.MySQL);MySQLAuOverviewDAO maodao = (MySQLAuOverviewDAO) daof.getAuOverviewDAO();maodao.createTable();if (auOverviewTableFacade.isTableExistent(""au_overview_table"")) {auSummaryList = auOverviewTableFacade.getNewerVerifiedAus(N_AUS_FOR_CHART);}}}geounitcodeToRegionCodeTable = geographicDataServiceBean.getGeounitcodeToRegionCodeTable();regionCodeToLabeTable = geographicDataServiceBean.getRegionCodeToLabeTable();auNameToAuShortNameTable = auAttributesFacade.getAuNameToAuShortNameTable();ipAddressToRegionCodeTable = hostAttributesFacade.getIpAddressToRegionCodeTable();lockssBoxList = lockssBoxTableFacade.findAll();Map<String, String> regionCodeToLabeTableNew = new TreeMap<String, String>();for (Map.Entry<String, String> entry : regionCodeToLabeTable.entrySet()) {if (Integer.parseInt(entry.getKey()) < 90) {regionCodeToLabeTableNew.put(entry.getKey(), entry.getValue());}}Set<String> regionCodeSet = new TreeSet<String>(regionCodeToLabeTableNew.values());logger.fine(""RegionCodelabelSet="" + regionCodeSet);if (auSummaryList != null) {for (AuOverviewTable auSummary : auSummaryList) {logger.fine(""working on au name="" + auSummary.getAuName() + "":pollId="" + auSummary.getPollId());Integer verifiedReplicas = auSummary.getAuNVerifiedReplicas();if (auSummary.getAuNVerifiedReplicas() > 0) {verifiedReplicas++;}auSummaryDataList.add(new AUSummaryDataForChart(auSummary.getAuName(), auSummary.getAuNReplicas(), verifiedReplicas, auNameToAuShortNameTable.get(auSummary.getAuName())));if (auSummary.getPollId() == null) {logger.fine(""pollId is null"");replicaData.add(new AUReplicaData(0, 0, 0, 0, 0, auSummary.getAuName(), auNameToAuShortNameTable.get(auSummary.getAuName())));continue;}pollList = successfulPollReplicaIpFacade.findPollByPollId(auSummary.getPollId());logger.fine(""pollList="" + pollList);if (pollList == null || pollList.isEmpty()) {logger.fine(""pollList is null"");replicaData.add(new AUReplicaData(0, 0, 0, 0, 0, auSummary.getAuName(), auNameToAuShortNameTable.get(auSummary.getAuName())));continue;}List<String> ipList = new ArrayList<String>();for (SuccessfulPollReplicaIp row : pollList) {logger.fine(""current Ip="" + row.getIpAddress());String regionCode = ipAddressToRegionCodeTable.get(row.getIpAddress());logger.fine(""regionCode="" + regionCode);String regionLabel = regionCodeToLabeTable.get(regionCode);logger.fine(""regionLabel="" + regionLabel);if (StringUtils.isBlank(regionLabel)) {regionLabel = ""Others"";}ipList.add(regionLabel);}logger.fine(""ipList"" + ipList + "" for au="" + auSummary.getAuName());if (ipList == null || ipList.isEmpty()) {logger.fine(""ipList is null"");replicaData.add(new AUReplicaData(0, 0, 0, 0, 0, auSummary.getAuName(), auNameToAuShortNameTable.get(auSummary.getAuName())));continue;}int nonUS = 0;for (String label : regionCodeSet) {int count = Collections.frequency(ipList, label);if (label.equals(""Others"")) {count += nonUS;freqTable.put(label, count);} else {freqTable.put(label, count);}}logger.fine(""freqTable="" + freqTable);auNameToLocationListTable.put(auSummary.getAuName(), ipList);auList.add(auSummary.getAuName());Integer northeast = 0;if (freqTable.get(""NORTHEAST"") != null) {northeast = freqTable.get(""NORTHEAST"");}Integer midwest = 0;if (freqTable.get(""MIDWEST"") != null) {midwest = freqTable.get(""MIDWEST"");}Integer south = 0;if (freqTable.get(""SOUTH"") != null) {south = freqTable.get(""SOUTH"");}Integer west = 0;if (freqTable.get(""WEST"") != null) {west = freqTable.get(""WEST"");}Integer others = 0;if (freqTable.get(""Others"") != null) {others = freqTable.get(""Others"");}replicaData.add(new AUReplicaData(northeast, midwest, south, west, others, auSummary.getAuName(), auNameToAuShortNameTable.get(auSummary.getAuName())));logger.info(""replicaData="" + replicaData);}}URL url = DashboardManagedBean.class.getResource(""us_map_template.svg"");try {safePLNMemberMap = new DefaultStreamedContent(url.openStream(), ""image/svg+xml"");} catch (IOException ex) {logger.log(Level.SEVERE, ""failed to read the svg file"", ex);}}public static void main(String[] args) throws IOException {FileOutputStream f = new FileOutputStream(""test.zip"");CheckedOutputStream csum = new CheckedOutputStream(f, new Adler32());ZipOutputStream zos = new ZipOutputStream(csum);BufferedOutputStream out = new BufferedOutputStream(zos);zos.setComment(""A test of Java Zipping"");for (String arg : args) {print(""Writing file "" + arg);BufferedReader in = new BufferedReader(new FileReader(arg));zos.putNextEntry(new ZipEntry(arg));int c;while ((c = in.read()) != -1) out.write(c);in.close();out.flush();}out.close();print(""Checksum: "" + csum.getChecksum().getValue());print(""Reading file"");FileInputStream fi = new FileInputStream(""test.zip"");CheckedInputStream csumi = new CheckedInputStream(fi, new Adler32());ZipInputStream in2 = new ZipInputStream(csumi);BufferedInputStream bis = new BufferedInputStream(in2);ZipEntry ze;while ((ze = in2.getNextEntry()) != null) {print(""Reading file "" + ze);int x;while ((x = bis.read()) != -1) System.out.write(x);}if (args.length == 1) print(""Checksum: "" + csumi.getChecksum().getValue());bis.close();ZipFile zf = new ZipFile(""test.zip"");Enumeration e = zf.entries();while (e.hasMoreElements()) {ZipEntry ze2 = (ZipEntry) e.nextElement();print(""File: "" + ze2);}}public static String getStringResponse(String urlString) throws Exception {URL url = new URL(urlString);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String inputLine;StringBuilder buffer = new StringBuilder();while ((inputLine = in.readLine()) != null) {buffer.append(inputLine);}in.close();return buffer.toString();}public String hasheMotDePasse(String mdp) {MessageDigest sha = null;try {sha = MessageDigest.getInstance(""SHA-1"");} catch (NoSuchAlgorithmException ex) {}sha.reset();sha.update(mdp.getBytes());byte[] digest = sha.digest();String pass = new String(Base64.encode(digest));pass = ""{SHA}"" + pass;return pass;}public Document parse(InputSource is) throws SAXException, IOException {LSInput input = ls.createLSInput();String systemId = is.getSystemId();InputStream in = is.getByteStream();if (in != null) {input.setByteStream(in);} else {Reader reader = is.getCharacterStream();if (reader != null) {input.setCharacterStream(reader);} else {URL url = new URL(systemId);input.setByteStream(url.openStream());}}input.setPublicId(is.getPublicId());input.setSystemId(systemId);input.setEncoding(is.getEncoding());return parser.parse(input);}public void write(File file) throws Exception {if (isInMemory()) {FileOutputStream fout = null;try {fout = new FileOutputStream(file);fout.write(get());} finally {if (fout != null) {fout.close();}}} else {File outputFile = getStoreLocation();if (outputFile != null) {size = outputFile.length();if (!outputFile.renameTo(file)) {BufferedInputStream in = null;BufferedOutputStream out = null;try {in = new BufferedInputStream(new FileInputStream(outputFile));out = new BufferedOutputStream(new FileOutputStream(file));IOUtils.copy(in, out);} finally {if (in != null) {try {in.close();} catch (IOException e) {}}if (out != null) {try {out.close();} catch (IOException e) {}}}}} else {throw new FileUploadException(""Cannot write uploaded file to disk!"");}}}"	5
"private synchronized jdbcResultSet executeHTTP(String s) throws SQLException {byte result[];try {URL url = new URL(sConnect);String p = StringConverter.unicodeToHexString(sUser);p += ""+"" + StringConverter.unicodeToHexString(sPassword);p += ""+"" + StringConverter.unicodeToHexString(s);URLConnection c = url.openConnection();c.setDoOutput(true);OutputStream os = c.getOutputStream();os.write(p.getBytes(ENCODING));os.close();c.connect();InputStream is = (InputStream) c.getContent();BufferedInputStream in = new BufferedInputStream(is);int len = c.getContentLength();result = new byte[len];for (int i = 0; i < len; i++) {int r = in.read();result[i] = (byte) r;}} catch (Exception e) {throw Trace.error(Trace.CONNECTION_IS_BROKEN, e.getMessage());}return new jdbcResultSet(new Result(result));}protected File getFile(NameCategory category) throws IOException {File home = new File(System.getProperty(""user.dir""));String fileName = String.format(""%s.txt"", category);File file = new File(home, fileName);if (file.exists()) {return file;} else {URL url = DefaultNameGenerator.class.getResource(""/sc/common/"" + fileName);if (url == null) {throw new IllegalStateException(String.format(""Cannot find resource at %s"", fileName));} else {InputStream in = url.openStream();try {BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(file));try {IOUtils.copy(in, out);} finally {out.close();}} finally {in.close();}return file;}}}@SuppressWarnings(""unchecked"")public static void zip(String input, OutputStream out) {File file = new File(input);ZipOutputStream zip = null;FileInputStream in = null;try {if (file.exists()) {Collection<File> items = new ArrayList();if (file.isDirectory()) {items = FileUtils.listFiles(file, TrueFileFilter.INSTANCE, TrueFileFilter.INSTANCE);zip = new ZipOutputStream(out);zip.putNextEntry(new ZipEntry(file.getName() + ""/""));Iterator iter = items.iterator();while (iter.hasNext()) {File item = (File) iter.next();in = new FileInputStream(item);zip.putNextEntry(new ZipEntry(file.getName() + ""/"" + item.getName()));IOUtils.copy(in, zip);IOUtils.closeQuietly(in);zip.closeEntry();}IOUtils.closeQuietly(zip);}} else {log.info(""-->>���ļ���û���ļ�"");}} catch (Exception e) {log.error(""����ѹ��"" + input + ""�������"", e);throw new RuntimeException(""����ѹ��"" + input + ""�������"", e);} finally {try {if (null != zip) {zip.close();zip = null;}if (null != in) {in.close();in = null;}} catch (Exception e) {log.error(""�ر��ļ�������"");}}}@SuppressWarnings(""unchecked"")public static void unzip(String input, String output) {try {if (!output.endsWith(""/"")) output = output + ""/"";ZipFile zip = new ZipFile(input);Enumeration entries = zip.entries();while (entries.hasMoreElements()) {ZipEntry entry = (ZipEntry) entries.nextElement();if (entry.isDirectory()) {FileUtils.forceMkdir(new File(output + entry.getName()));} else {FileOutputStream out = new FileOutputStream(output + entry.getName());IOUtils.copy(zip.getInputStream(entry), out);IOUtils.closeQuietly(out);}}} catch (Exception e) {log.error(""�����ҵ��ļ�:"" + output, e);throw new RuntimeException(""�����ҵ��ļ�:"" + output, e);}}protected int authenticate(long companyId, String login, String password, String authType, Map headerMap, Map parameterMap) throws PortalException, SystemException {login = login.trim().toLowerCase();long userId = GetterUtil.getLong(login);if (authType.equals(CompanyImpl.AUTH_TYPE_EA)) {if (!Validator.isEmailAddress(login)) {throw new UserEmailAddressException();}} else if (authType.equals(CompanyImpl.AUTH_TYPE_SN)) {if (Validator.isNull(login)) {throw new UserScreenNameException();}} else if (authType.equals(CompanyImpl.AUTH_TYPE_ID)) {if (Validator.isNull(login)) {throw new UserIdException();}}if (Validator.isNull(password)) {throw new UserPasswordException(UserPasswordException.PASSWORD_INVALID);}int authResult = Authenticator.FAILURE;String[] authPipelinePre = PropsUtil.getArray(PropsUtil.AUTH_PIPELINE_PRE);if (authType.equals(CompanyImpl.AUTH_TYPE_EA)) {authResult = AuthPipeline.authenticateByEmailAddress(authPipelinePre, companyId, login, password, headerMap, parameterMap);} else if (authType.equals(CompanyImpl.AUTH_TYPE_SN)) {authResult = AuthPipeline.authenticateByScreenName(authPipelinePre, companyId, login, password, headerMap, parameterMap);} else if (authType.equals(CompanyImpl.AUTH_TYPE_ID)) {authResult = AuthPipeline.authenticateByUserId(authPipelinePre, companyId, userId, password, headerMap, parameterMap);}User user = null;try {if (authType.equals(CompanyImpl.AUTH_TYPE_EA)) {user = UserUtil.findByC_EA(companyId, login);} else if (authType.equals(CompanyImpl.AUTH_TYPE_SN)) {user = UserUtil.findByC_SN(companyId, login);} else if (authType.equals(CompanyImpl.AUTH_TYPE_ID)) {user = UserUtil.findByC_U(companyId, GetterUtil.getLong(login));}} catch (NoSuchUserException nsue) {return Authenticator.DNE;}if (user.isDefaultUser()) {_log.error(""The default user should never be allowed to authenticate"");return Authenticator.DNE;}if (!user.isPasswordEncrypted()) {user.setPassword(PwdEncryptor.encrypt(user.getPassword()));user.setPasswordEncrypted(true);UserUtil.update(user);}checkLockout(user);checkPasswordExpired(user);if (authResult == Authenticator.SUCCESS) {if (GetterUtil.getBoolean(PropsUtil.get(PropsUtil.AUTH_PIPELINE_ENABLE_LIFERAY_CHECK))) {String encPwd = PwdEncryptor.encrypt(password, user.getPassword());if (user.getPassword().equals(encPwd)) {authResult = Authenticator.SUCCESS;} else if (GetterUtil.getBoolean(PropsUtil.get(PropsUtil.AUTH_MAC_ALLOW))) {try {MessageDigest digester = MessageDigest.getInstance(PropsUtil.get(PropsUtil.AUTH_MAC_ALGORITHM));digester.update(login.getBytes(""UTF8""));String shardKey = PropsUtil.get(PropsUtil.AUTH_MAC_SHARED_KEY);encPwd = Base64.encode(digester.digest(shardKey.getBytes(""UTF8"")));if (password.equals(encPwd)) {authResult = Authenticator.SUCCESS;} else {authResult = Authenticator.FAILURE;}} catch (NoSuchAlgorithmException nsae) {throw new SystemException(nsae);} catch (UnsupportedEncodingException uee) {throw new SystemException(uee);}} else {authResult = Authenticator.FAILURE;}}}if (authResult == Authenticator.SUCCESS) {String[] authPipelinePost = PropsUtil.getArray(PropsUtil.AUTH_PIPELINE_POST);if (authType.equals(CompanyImpl.AUTH_TYPE_EA)) {authResult = AuthPipeline.authenticateByEmailAddress(authPipelinePost, companyId, login, password, headerMap, parameterMap);} else if (authType.equals(CompanyImpl.AUTH_TYPE_SN)) {authResult = AuthPipeline.authenticateByScreenName(authPipelinePost, companyId, login, password, headerMap, parameterMap);} else if (authType.equals(CompanyImpl.AUTH_TYPE_ID)) {authResult = AuthPipeline.authenticateByUserId(authPipelinePost, companyId, userId, password, headerMap, parameterMap);}}if (authResult == Authenticator.FAILURE) {try {String[] authFailure = PropsUtil.getArray(PropsUtil.AUTH_FAILURE);if (authType.equals(CompanyImpl.AUTH_TYPE_EA)) {AuthPipeline.onFailureByEmailAddress(authFailure, companyId, login, headerMap, parameterMap);} else if (authType.equals(CompanyImpl.AUTH_TYPE_SN)) {AuthPipeline.onFailureByScreenName(authFailure, companyId, login, headerMap, parameterMap);} else if (authType.equals(CompanyImpl.AUTH_TYPE_ID)) {AuthPipeline.onFailureByUserId(authFailure, companyId, userId, headerMap, parameterMap);}if (!PortalLDAPUtil.isPasswordPolicyEnabled(user.getCompanyId())) {PasswordPolicy passwordPolicy = user.getPasswordPolicy();int failedLoginAttempts = user.getFailedLoginAttempts();int maxFailures = passwordPolicy.getMaxFailure();if ((failedLoginAttempts >= maxFailures) && (maxFailures != 0)) {String[] authMaxFailures = PropsUtil.getArray(PropsUtil.AUTH_MAX_FAILURES);if (authType.equals(CompanyImpl.AUTH_TYPE_EA)) {AuthPipeline.onMaxFailuresByEmailAddress(authMaxFailures, companyId, login, headerMap, parameterMap);} else if (authType.equals(CompanyImpl.AUTH_TYPE_SN)) {AuthPipeline.onMaxFailuresByScreenName(authMaxFailures, companyId, login, headerMap, parameterMap);} else if (authType.equals(CompanyImpl.AUTH_TYPE_ID)) {AuthPipeline.onMaxFailuresByUserId(authMaxFailures, companyId, userId, headerMap, parameterMap);}}}} catch (Exception e) {_log.error(e, e);}}return authResult;}public void createNewFile(String filePath, InputStream in) throws IOException {FileOutputStream out = null;try {File file = newFileRef(filePath);FileHelper.createNewFile(file, true);out = new FileOutputStream(file);IOUtils.copy(in, out);} finally {IOUtils.closeQuietly(in);IOUtils.closeQuietly(out);}}public static void addProviders(URL url) {Reader reader = null;Properties prop = new Properties();try {reader = new InputStreamReader(url.openStream());prop.load(reader);} catch (Throwable t) {} finally {if (reader != null) {try {reader.close();} catch (Throwable t) {}}}for (Map.Entry<Object, Object> entry : prop.entrySet()) {try {Class<?> cla = Class.forName((String) entry.getValue(), true, Thread.currentThread().getContextClassLoader());providers.put(((String) entry.getKey()).toUpperCase(), (CharsetProvider) cla.newInstance());} catch (Throwable t) {}}}private String fetchHTML(String s) {String str;StringBuffer sb = new StringBuffer();try {URL url = new URL(s);InputStream is = url.openStream();InputStreamReader isr = new InputStreamReader(is);BufferedReader br = new BufferedReader(isr);while ((str = br.readLine()) != null) {sb.append(str);}} catch (MalformedURLException e) {} catch (IOException e) {}return sb.toString();}public boolean check(Object credentials) {String password = (credentials instanceof String) ? (String) credentials : credentials.toString();try {MessageDigest md = MessageDigest.getInstance(""MD5"");byte[] ha1;if (credentials instanceof Credential.MD5) {ha1 = ((Credential.MD5) credentials).getDigest();} else {md.update(username.getBytes(StringUtil.__ISO_8859_1));md.update((byte) ':');md.update(realm.getBytes(StringUtil.__ISO_8859_1));md.update((byte) ':');md.update(password.getBytes(StringUtil.__ISO_8859_1));ha1 = md.digest();}md.reset();md.update(method.getBytes(StringUtil.__ISO_8859_1));md.update((byte) ':');md.update(uri.getBytes(StringUtil.__ISO_8859_1));byte[] ha2 = md.digest();md.update(TypeUtil.toString(ha1, 16).getBytes(StringUtil.__ISO_8859_1));md.update((byte) ':');md.update(nonce.getBytes(StringUtil.__ISO_8859_1));md.update((byte) ':');md.update(nc.getBytes(StringUtil.__ISO_8859_1));md.update((byte) ':');md.update(cnonce.getBytes(StringUtil.__ISO_8859_1));md.update((byte) ':');md.update(qop.getBytes(StringUtil.__ISO_8859_1));md.update((byte) ':');md.update(TypeUtil.toString(ha2, 16).getBytes(StringUtil.__ISO_8859_1));byte[] digest = md.digest();return (TypeUtil.toString(digest, 16).equalsIgnoreCase(response));} catch (Exception e) {Log.warn(e);}return false;}private synchronized Document executeHttpMethod(final HttpUriRequest httpRequest) throws UnauthorizedException, ThrottledException, ApiException {if (!isNextRequestAllowed()) {try {if (LOGGER.isDebugEnabled()) {LOGGER.debug(""Wait "" + WAITING_TIME + ""ms for request."");}wait(WAITING_TIME);} catch (InterruptedException ie) {throw new ApiException(""Waiting for request interrupted."", ie);}}try {if (LOGGER.isDebugEnabled()) {LOGGER.debug(""Perform request."");}HttpResponse httpResponse = httpClient.execute(httpRequest);switch(httpResponse.getStatusLine().getStatusCode()) {case HTTP_OK:HttpEntity httpEntity = httpResponse.getEntity();if (httpEntity != null) {InputStream responseStream = httpEntity.getContent();if (responseStream == null) {throw new ApiException(""TODO"");} else {String response = null;try {response = IOUtils.toString(responseStream, RESPONSE_ENCODING);} catch (IOException ioe) {throw new ApiException(""Problem reading response"", ioe);} catch (RuntimeException re) {httpRequest.abort();throw new ApiException(""Problem reading response"", re);} finally {responseStream.close();}StringReader responseReader = new StringReader(response);Document document = documentBuilder.parse(new InputSource(responseReader));return document;}}case HTTP_UNAVAILABLE:throw new ThrottledException(""TODO"");case HTTP_UNAUTHORIZED:throw new UnauthorizedException(""TODO"");default:throw new ApiException(""Unexpected HTTP status code: "" + httpResponse.getStatusLine().getStatusCode());}} catch (SAXException se) {throw new ApiException(""TODO"", se);} catch (IOException ioe) {throw new ApiException(""TODO"", ioe);} finally {updateLastRequestTimestamp();}}"	5
"void copyFile(String sInput, String sOutput) throws IOException {File inputFile = new File(sInput);File outputFile = new File(sOutput);FileReader in = new FileReader(inputFile);FileWriter out = new FileWriter(outputFile);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();}@Overridepublic URLConnection openConnection(URL url, Proxy proxy) throws IOException {if (null == url) {throw new IllegalArgumentException(Messages.getString(""luni.1B""));}String host = url.getHost();if (host == null || host.length() == 0 || host.equalsIgnoreCase(""localhost"")) {return new FileURLConnection(url);}URL ftpURL = new URL(""ftp"", host, url.getFile());return (proxy == null) ? ftpURL.openConnection() : ftpURL.openConnection(proxy);}public void run() {BufferedInputStream bis = null;URLConnection url = null;String textType = null;StringBuffer sb = new StringBuffer();try {if (!location.startsWith(""http://"")) {location = ""http://"" + location;}url = (new URL(location)).openConnection();size = url.getContentLength();textType = url.getContentType();lastModified = url.getIfModifiedSince();InputStream is = url.getInputStream();bis = new BufferedInputStream(is);if (textType.startsWith(""text/plain"")) {int i;i = bis.read();++position;status = ""Reading From URL..."";this.setChanged();this.notifyObservers();while (i != END_OF_STREAM) {sb.append((char) i);i = bis.read();++position;if (position % (size / 25) == 0) {this.setChanged();this.notifyObservers();}if (abortLoading) {break;}}status = ""Finished reading URL..."";} else if (textType.startsWith(""text/html"")) {int i;i = bis.read();char c = (char) i;++position;status = ""Reading From URL..."";this.setChanged();this.notifyObservers();boolean enclosed = false;if (c == '<') {enclosed = true;}while (i != END_OF_STREAM) {if (enclosed) {if (c == '>') {enclosed = false;}} else {if (c == '<') {enclosed = true;} else {sb.append((char) i);}}i = bis.read();c = (char) i;++position;if (size == 0) {if (position % (size / 25) == 0) {this.setChanged();this.notifyObservers();}}if (abortLoading) {break;}}status = ""Finished reading URL..."";} else {status = ""Unable to read document type: "" + textType + ""..."";}bis.close();try {document.insertString(0, sb.toString(), SimpleAttributeSet.EMPTY);} catch (BadLocationException ble) {ble.printStackTrace();}finished = true;this.setChanged();this.notifyObservers();} catch (IOException ioe) {try {document.insertString(0, sb.toString(), SimpleAttributeSet.EMPTY);} catch (BadLocationException ble) {ble.printStackTrace();}status = ""IO Error Reading From URL..."";finished = true;this.setChanged();this.notifyObservers();}}public Web(String urlString, String charset) throws java.net.MalformedURLException, java.io.IOException {this.charset = charset;final java.net.URL url = new java.net.URL(urlString);final java.net.URLConnection uconn = url.openConnection();if (!(uconn instanceof java.net.HttpURLConnection)) throw new java.lang.IllegalArgumentException(""URL protocol must be HTTP."");final java.net.HttpURLConnection conn = (java.net.HttpURLConnection) uconn;conn.setConnectTimeout(600000);conn.setReadTimeout(600000);conn.setInstanceFollowRedirects(true);conn.setRequestProperty(""User-agent"", ""spider"");conn.connect();responseHeader = conn.getHeaderFields();responseCode = conn.getResponseCode();responseURL = conn.getURL();length = conn.getContentLength();final java.io.InputStream stream = conn.getErrorStream();if (stream != null) {content = readStream(length, stream);} else if ((inputStream = conn.getContent()) != null && inputStream instanceof java.io.InputStream) {content = readStream(length, (java.io.InputStream) inputStream);}conn.disconnect();}public Web(String urlString) throws java.net.MalformedURLException, java.io.IOException {final java.net.URL url = new java.net.URL(urlString);final java.net.URLConnection uconn = url.openConnection();if (!(uconn instanceof java.net.HttpURLConnection)) throw new java.lang.IllegalArgumentException(""URL protocol must be HTTP."");final java.net.HttpURLConnection conn = (java.net.HttpURLConnection) uconn;conn.setConnectTimeout(100000);conn.setReadTimeout(100000);conn.setInstanceFollowRedirects(true);conn.setRequestProperty(""User-agent"", ""spider"");conn.connect();responseHeader = conn.getHeaderFields();responseCode = conn.getResponseCode();responseURL = conn.getURL();length = conn.getContentLength();final String type = conn.getContentType();if (type != null) {final String[] parts = type.split("";"");MIMEtype = parts[0].trim();for (int i = 1; i < parts.length && charset == null; i++) {final String t = parts[i].trim();final int index = t.toLowerCase().indexOf(""charset="");if (index != -1) charset = t.substring(index + 8);}}final java.io.InputStream stream = conn.getErrorStream();if (stream != null) {content = readStream(length, stream);} else if ((inputStream = conn.getContent()) != null && inputStream instanceof java.io.InputStream) {content = readStream(length, (java.io.InputStream) inputStream);}conn.disconnect();}public RecordIterator get(URL url) {RecordIterator recordIter = null;if (!SUPPORTED_PROTOCOLS.contains(url.getProtocol().toLowerCase())) {return null;}try {URL robotsUrl = new URL(url, ROBOTS_TXT);recordIter = new RecordIterator(urlInputStreamFactory.openStream(robotsUrl));} catch (IOException e) {LOG.info(""Failed to fetch "" + url, e);}return recordIter;}public void testJDBCSavepoints() throws Exception {String sql;String msg;int i;PreparedStatement ps;ResultSet rs;Savepoint sp1;Savepoint sp2;Savepoint sp3;Savepoint sp4;Savepoint sp5;Savepoint sp6;Savepoint sp7;int rowcount = 0;sql = ""drop table t if exists"";stmt.executeUpdate(sql);sql = ""create table t(id int, fn varchar, ln varchar, zip int)"";stmt.executeUpdate(sql);conn1.setAutoCommit(true);conn1.setAutoCommit(false);sql = ""insert into t values(?,?,?,?)"";ps = conn1.prepareStatement(sql);ps.setString(2, ""Mary"");ps.setString(3, ""Peterson-Clancy"");i = 0;for (; i < 10; i++) {ps.setInt(1, i);ps.setInt(4, i);ps.executeUpdate();}sp1 = conn1.setSavepoint(""savepoint1"");for (; i < 20; i++) {ps.setInt(1, i);ps.setInt(4, i);ps.executeUpdate();}sp2 = conn1.setSavepoint(""savepoint2"");for (; i < 30; i++) {ps.setInt(1, i);ps.setInt(4, i);ps.executeUpdate();}sp3 = conn1.setSavepoint(""savepoint3"");for (; i < 40; i++) {ps.setInt(1, i);ps.setInt(4, i);ps.executeUpdate();}sp4 = conn1.setSavepoint(""savepoint4"");for (; i < 50; i++) {ps.setInt(1, i);ps.setInt(4, i);ps.executeUpdate();}sp5 = conn1.setSavepoint(""savepoint5"");sp6 = conn1.setSavepoint(""savepoint6"");sp7 = conn1.setSavepoint(""savepoint7"");rs = stmt.executeQuery(""select count(*) from t"");rs.next();rowcount = rs.getInt(1);rs.close();msg = ""select count(*) from t value"";try {assertEquals(msg, 50, rowcount);} catch (Exception e) {}conn2.setAutoCommit(false);conn2.setSavepoint(""savepoint1"");conn2.setSavepoint(""savepoint2"");msg = ""savepoint released succesfully on non-originating connection"";try {conn2.releaseSavepoint(sp2);assertTrue(msg, false);} catch (Exception e) {}try {conn2.rollback(sp1);msg = ""succesful rollback to savepoint on "" + ""non-originating connection"";assertTrue(msg, false);} catch (Exception e) {}msg = ""direct execution of <release savepoint> statement failed to "" + ""release JDBC-created SQL-savepoint with identical savepoint name"";try {conn2.createStatement().executeUpdate(""release savepoint \""savepoint2\"""");} catch (Exception e) {try {assertTrue(msg, false);} catch (Exception e2) {}}msg = ""direct execution of <rollback to savepoint> statement failed to "" + ""roll back to existing JDBC-created SQL-savepoint with identical "" + ""savepoint name"";try {conn2.createStatement().executeUpdate(""rollback to savepoint \""savepoint1\"""");} catch (Exception e) {e.printStackTrace();try {assertTrue(msg, false);} catch (Exception e2) {}}conn1.releaseSavepoint(sp6);msg = ""savepoint released succesfully > 1 times"";try {conn1.releaseSavepoint(sp6);assertTrue(msg, false);} catch (Exception e) {}msg = ""savepoint released successfully after preceding savepoint released"";try {conn1.releaseSavepoint(sp7);assertTrue(msg, false);} catch (Exception e) {}msg = ""preceding same-point savepoint destroyed by following savepoint release"";try {conn1.releaseSavepoint(sp5);} catch (Exception e) {try {assertTrue(msg, false);} catch (Exception e2) {}}conn1.rollback(sp4);rs = stmt.executeQuery(""select count(*) from t"");rs.next();rowcount = rs.getInt(1);rs.close();msg = ""select * rowcount after 50 inserts - 10 rolled back:"";try {assertEquals(msg, 40, rowcount);} catch (Exception e) {}msg = ""savepoint rolled back succesfully > 1 times"";try {conn1.rollback(sp4);assertTrue(msg, false);} catch (Exception e) {}conn1.rollback(sp3);rs = stmt.executeQuery(""select count(*) from t"");rs.next();rowcount = rs.getInt(1);rs.close();msg = ""select count(*) after 50 inserts - 20 rolled back:"";try {assertEquals(msg, 30, rowcount);} catch (Exception e) {}msg = ""savepoint released succesfully after use in rollback"";try {conn1.releaseSavepoint(sp3);assertTrue(msg, false);} catch (Exception e) {}conn1.rollback(sp1);msg = ""savepoint rolled back without raising an exception after "" + ""rollback to a preceeding savepoint"";try {conn1.rollback(sp2);assertTrue(msg, false);} catch (Exception e) {}conn1.rollback();msg = ""savepoint released succesfully when it should have been "" + ""destroyed by a full rollback"";try {conn1.releaseSavepoint(sp1);assertTrue(msg, false);} catch (Exception e) {}conn1.setAutoCommit(false);sp1 = conn1.setSavepoint(""savepoint1"");conn1.rollback();conn1.setAutoCommit(false);conn1.createStatement().executeUpdate(""savepoint \""savepoint1\"""");conn1.setAutoCommit(false);sp1 = conn1.setSavepoint(""savepoint1"");conn1.createStatement().executeUpdate(""savepoint \""savepoint1\"""");conn1.setAutoCommit(false);sp1 = conn1.setSavepoint(""savepoint1"");conn1.createStatement().executeUpdate(""savepoint \""savepoint1\"""");}private void initSerializerFiles(String fileName, HashSet<String> fileList, HashMap<Class, Class> classMap, Class type) {try {ClassLoader classLoader = getClassLoader();if (classLoader == null) return;Enumeration iter;iter = classLoader.getResources(fileName);while (iter.hasMoreElements()) {URL url = (URL) iter.nextElement();if (fileList.contains(url.toString())) continue;fileList.add(url.toString());InputStream is = null;try {is = url.openStream();Properties props = new Properties();props.load(is);for (Map.Entry entry : props.entrySet()) {String apiName = (String) entry.getKey();String serializerName = (String) entry.getValue();Class apiClass = null;Class serializerClass = null;try {apiClass = Class.forName(apiName, false, classLoader);} catch (ClassNotFoundException e) {log.fine(url + "": "" + apiName + "" is not available in this context: "" + getClassLoader());continue;}try {serializerClass = Class.forName(serializerName, false, classLoader);} catch (ClassNotFoundException e) {log.fine(url + "": "" + serializerName + "" is not available in this context: "" + getClassLoader());continue;}if (!type.isAssignableFrom(serializerClass)) throw new HessianException(url + "": "" + serializerClass.getName() + "" is invalid because it does not implement "" + type.getName());classMap.put(apiClass, serializerClass);}} finally {if (is != null) is.close();}}} catch (RuntimeException e) {throw e;} catch (Exception e) {throw new HessianException(e);}}private static void ensureJavaScriptHostBytes(TreeLogger logger) throws UnableToCompleteException {if (javaScriptHostBytes != null) {return;}String className = JavaScriptHost.class.getName();try {String path = className.replace('.', '/') + "".class"";ClassLoader cl = Thread.currentThread().getContextClassLoader();URL url = cl.getResource(path);if (url != null) {javaScriptHostBytes = getClassBytesFromStream(url.openStream());} else {logger.log(TreeLogger.ERROR, ""Could not find required bootstrap class '"" + className + ""' in the classpath"", null);throw new UnableToCompleteException();}} catch (IOException e) {logger.log(TreeLogger.ERROR, ""Error reading class bytes for "" + className, e);throw new UnableToCompleteException();}}public void initializeWebInfo() throws MalformedURLException, IOException, DOMException {Tidy tidy = new Tidy();URL url = new URL(YOUTUBE_URL + videoId);InputStream in = url.openConnection().getInputStream();Document doc = tidy.parseDOM(in, null);Element e = doc.getDocumentElement();String title = null;if (e != null && e.hasChildNodes()) {NodeList children = e.getElementsByTagName(""title"");if (children != null) {for (int i = 0; i < children.getLength(); i++) {try {Element childE = (Element) children.item(i);if (childE.getTagName().equals(""title"")) {NodeList titleChildren = childE.getChildNodes();for (int n = 0; n < titleChildren.getLength(); n++) {if (titleChildren.item(n).getNodeType() == childE.TEXT_NODE) {title = titleChildren.item(n).getNodeValue();}}}} catch (Exception exp) {exp.printStackTrace();}}}}if (title == null || title.equals("""")) {throw new DOMException(DOMException.NOT_FOUND_ERR, ""no title found"");} else {setTitle(title);}}"	5
"public String[] getElements() throws IOException {Vector v = new Vector();PushbackInputStream in = null;try {URLConnection urlConn = dtdURL.openConnection();in = new PushbackInputStream(new BufferedInputStream(urlConn.getInputStream()));while (scanForLTBang(in)) {String elementType = getString(in);if (elementType.equals(""ELEMENT"")) {skipWhiteSpace(in);String elementName = getString(in);v.addElement(elementName);}}in.close();String[] elements = new String[v.size()];v.copyInto(elements);return elements;} catch (Exception exc) {if (in != null) {try {in.close();} catch (Exception ignore) {}}throw new IOException(""Error reading DTD: "" + exc.toString());}}private void executeScript(SQLiteDatabase sqlDatabase, InputStream input) {StringWriter writer = new StringWriter();try {IOUtils.copy(input, writer);} catch (IOException e) {throw new ComixException(""Could not read the database script"", e);}String multipleSql = writer.toString();String[] split = multipleSql.split(""-- SCRIPT_SPLIT --"");for (String sql : split) {if (!sql.trim().equals("""")) {sqlDatabase.execSQL(sql);}}}protected void loadXmlFromUri(URI uri) {URLConnection urlc;try {urlc = uri.toURL().openConnection();InputStream is = urlc.getInputStream();Reader rd = new InputStreamReader(is);xmlSource = new StreamSource(rd);} catch (IOException ioe) {ioe.printStackTrace();}}protected void loadXslFromUri(URI uri) {URLConnection urlc;try {urlc = uri.toURL().openConnection();InputStream is = urlc.getInputStream();Reader rd = new InputStreamReader(is);Source xslSource = new StreamSource(rd);try {xslTemplate = factory.newTemplates(xslSource);} catch (TransformerConfigurationException tce) {tce.printStackTrace();}} catch (IOException ioe) {ioe.printStackTrace();}}@Overridepublic IMedium createMedium(String urlString, IMetadata optionalMetadata) throws MM4UCannotCreateMediumElementsException {Debug.println(""createMedium(): URL: "" + urlString);IAudio tempAudio = null;try {String cachedFileUri = null;try {URL url = new URL(urlString);InputStream is = url.openStream();ByteArrayOutputStream out = new ByteArrayOutputStream();byte[] buf = new byte[1024];int len;while ((len = is.read(buf)) > 0) out.write(buf, 0, len);MediaCache cache = new MediaCache();cachedFileUri = cache.addAudio(urlString, out).getURI().substring(5);} catch (MalformedURLException e) {cachedFileUri = urlString;}TAudioFileFormat fFormat = null;try {fFormat = (TAudioFileFormat) new MpegAudioFileReader().getAudioFileFormat(new File(cachedFileUri));} catch (Exception e) {System.err.println(""getAudioFileFormat() failed: "" + e);}int length = Constants.UNDEFINED_INTEGER;if (fFormat != null) {length = Math.round(Integer.valueOf(fFormat.properties().get(""duration"").toString()).intValue() / 1000);}String mimeType = Utilities.getMimetype(Utilities.getURISuffix(urlString));optionalMetadata.addIfNotNull(IMedium.MEDIUM_METADATA_MIMETYPE, mimeType);if (length != Constants.UNDEFINED_INTEGER) {tempAudio = new Audio(this, length, urlString, optionalMetadata);}} catch (Exception exc) {exc.printStackTrace();return null;}return tempAudio;}public void writeTo(OutputStream out) throws IOException {if (!closed) {throw new IOException(""Stream not closed"");}if (isInMemory()) {memoryOutputStream.writeTo(out);} else {FileInputStream fis = new FileInputStream(outputFile);try {IOUtils.copy(fis, out);} finally {IOUtils.close(fis);}}}public static void copy(File fromFile, File toFile) throws IOException {if (!fromFile.exists()) throw new IOException(""FileCopy: "" + ""no such source file: "" + fromFile.getCanonicalPath());if (!fromFile.isFile()) throw new IOException(""FileCopy: "" + ""can't copy directory: "" + fromFile.getCanonicalPath());if (!fromFile.canRead()) throw new IOException(""FileCopy: "" + ""source file is unreadable: "" + fromFile.getCanonicalPath());if (toFile.isDirectory()) toFile = new File(toFile, fromFile.getName());if (toFile.exists()) {if (!toFile.canWrite()) throw new IOException(""FileCopy: "" + ""destination file is unwriteable: "" + toFile.getCanonicalPath());throw new IOException(""FileCopy: "" + ""existing file was not overwritten."");} else {String parent = toFile.getParent();if (parent == null) parent = System.getProperty(""user.dir"");File dir = new File(parent);if (!dir.exists()) throw new IOException(""FileCopy: "" + ""destination directory doesn't exist: "" + parent);if (dir.isFile()) throw new IOException(""FileCopy: "" + ""destination is not a directory: "" + parent);if (!dir.canWrite()) throw new IOException(""FileCopy: "" + ""destination directory is unwriteable: "" + parent);}FileInputStream from = null;FileOutputStream to = null;try {from = new FileInputStream(fromFile);to = new FileOutputStream(toFile);byte[] buffer = new byte[1024 * 1024];int bytesRead;while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead);if (fromFile.isHidden()) {}toFile.setLastModified(fromFile.lastModified());toFile.setExecutable(fromFile.canExecute());toFile.setReadable(fromFile.canRead());toFile.setWritable(toFile.canWrite());} finally {if (from != null) try {from.close();} catch (IOException e) {;}if (to != null) try {to.close();} catch (IOException e) {;}}}@Deprecatedpublic void test() {try {String query = ""* <http://xmlns.com/foaf/0.1/workplaceHomepage> <http://www.deri.ie/>"" + ""* <http://xmlns.com/foaf/0.1/knows> *"";String url = ""http://sindice.com/api/v2/search?qt=advanced&q="" + URLEncoder.encode(query, ""utf-8"") + ""&qt=advanced"";URL urlObj = new URL(url);URLConnection con = urlObj.openConnection();if (con != null) {Model model = ModelFactory.createDefaultModel();model.read(con.getInputStream(), null);}System.out.println(url);} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}}private void run(Reader xmlIn, OutputStream out) throws IOException, SAXException {Document dom = null;try {DocumentBuilderFactory f = DocumentBuilderFactory.newInstance();f.setNamespaceAware(false);f.setCoalescing(true);f.setIgnoringComments(true);f.setValidating(false);DocumentBuilder b = f.newDocumentBuilder();dom = b.parse(new InputSource(xmlIn));} catch (ParserConfigurationException err) {throw new IOException(err);}Element root = dom.getDocumentElement();if (root == null) throw new SAXException(""Not root in document"");Attr att = root.getAttributeNode(""label"");if (att == null) root.setAttribute(""label"", ""Wikipedia"");Menu menu = parseMenu(root);menu.id = ""menuWikipedia"";ZipOutputStream zout = new ZipOutputStream(out);String content = ResourceUtils.getContent(XUL4Wikipedia.class, ""chrome.manifest"");addEntry(zout, ""chrome.manifest"", content);content = ResourceUtils.getContent(XUL4Wikipedia.class, ""install.rdf"");addEntry(zout, ""install.rdf"", content);content = ResourceUtils.getContent(XUL4Wikipedia.class, ""library.js"");addDir(zout, ""chrome/"");addDir(zout, ""chrome/content/"");addDir(zout, ""chrome/skin/"");String signal = ""/*INSERT_CMD_HERE*/"";int n = content.indexOf(signal);if (n == -1) throw new RuntimeException(""where is "" + signal + "" ??"");ZipEntry entry = new ZipEntry(""chrome/content/library.js"");zout.putNextEntry(entry);PrintWriter pout = new PrintWriter(zout);pout.write(content.substring(0, n));menu.toJS(pout);pout.write(content.substring(n + signal.length()));pout.flush();zout.closeEntry();entry = new ZipEntry(""chrome/content/menu.xul"");zout.putNextEntry(entry);pout = new PrintWriter(zout);pout.println(""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>"");pout.println(""<overlay id=\""xul4wikipedia\"" xmlns=\"""" + XUL.NS + ""\"">"");pout.println(""<script src=\""library.js\""/>"");pout.println(""<popup id=\""contentAreaContextMenu\"">"");pout.println(""<menuseparator/>"");menu.toXUL(pout);pout.println(""</popup>"");pout.println(""</overlay>"");pout.flush();zout.closeEntry();InputStream png = XUL4Wikipedia.class.getResourceAsStream(""32px-Wikipedia-logo.png"");if (png == null) throw new IOException(""Cannot get icon"");entry = new ZipEntry(""chrome/skin/wikipedia.png"");zout.putNextEntry(entry);IOUtils.copyTo(png, zout);zout.closeEntry();zout.finish();zout.flush();}public static boolean copy(File source, File dest) {FileChannel in = null, out = null;try {in = new FileInputStream(source).getChannel();out = new FileOutputStream(dest).getChannel();long size = in.size();MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buf);if (in != null) in.close();if (out != null) out.close();} catch (IOException e) {e.printStackTrace();return false;}return true;}"	5
"protected RemoteInputStream getUrlResource(URL url) throws IOException {URLConnection conn = url.openConnection();conn.setConnectTimeout(url_loading_time_out);conn.setReadTimeout(url_loading_time_out);conn.setRequestProperty(""connection"", ""Keep-Alive"");conn.connect();long last_modify_time = conn.getLastModified();IOCacheService cache_service = CIO.getAppBridge().getIO().getCache();if (cache_service != null) {RemoteInputStream cache = cache_service.findCache(url, last_modify_time);if (cache != null) {return cache;}}return new URLConnectionInputStream(url, conn);}public static boolean copyFile(String sourceName, String destName) {FileChannel sourceChannel = null;FileChannel destChannel = null;boolean wasOk = false;try {sourceChannel = new FileInputStream(sourceName).getChannel();destChannel = new FileOutputStream(destName).getChannel();destChannel.transferFrom(sourceChannel, 0, sourceChannel.size());wasOk = true;} catch (Throwable exception) {logger.log(Level.SEVERE, ""Exception in copyFile"", exception);} finally {try {if (sourceChannel != null) sourceChannel.close();} catch (Throwable tt) {}try {if (destChannel != null) destChannel.close();} catch (Throwable tt) {}}return wasOk;}private static String hashPass(String p) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(p.getBytes(""iso-8859-1""), 0, p.length());sha1hash = md.digest();return convertToHex(sha1hash);}@Overridepublic void send() {BufferedReader in = null;StringBuffer result = new StringBuffer();try {URL url = new URL(getUrl());in = new BufferedReader(new InputStreamReader(url.openStream()));String str;while ((str = in.readLine()) != null) {result.append(str);}} catch (ConnectException ce) {logger.error(""MockupExecutableCommand excute fail: "" + ce.getMessage());} catch (Exception e) {logger.error(""MockupExecutableCommand excute fail: "" + e.getMessage());} finally {if (in != null) {try {in.close();} catch (IOException e) {logger.error(""BufferedReader could not be closed"", e);}}}}public static void makeLPKFile(String[] srcFilePath, String makeFilePath, LPKHeader header) {FileOutputStream os = null;DataOutputStream dos = null;try {LPKTable[] fileTable = new LPKTable[srcFilePath.length];long fileOffset = outputOffset(header);for (int i = 0; i < srcFilePath.length; i++) {String sourceFileName = FileUtils.getFileName(srcFilePath[i]);long sourceFileSize = FileUtils.getFileSize(srcFilePath[i]);LPKTable ft = makeLPKTable(sourceFileName, sourceFileSize, fileOffset);fileOffset = outputNextOffset(sourceFileSize, fileOffset);fileTable[i] = ft;}File file = new File(makeFilePath);if (!file.exists()) {FileUtils.makedirs(file);}os = new FileOutputStream(file);dos = new DataOutputStream(os);dos.writeInt(header.getPAKIdentity());writeByteArray(header.getPassword(), dos);dos.writeFloat(header.getVersion());dos.writeLong(header.getTables());for (int i = 0; i < fileTable.length; i++) {writeByteArray(fileTable[i].getFileName(), dos);dos.writeLong(fileTable[i].getFileSize());dos.writeLong(fileTable[i].getOffSet());}for (int i = 0; i < fileTable.length; i++) {File ftFile = new File(srcFilePath[i]);FileInputStream ftFis = new FileInputStream(ftFile);DataInputStream ftDis = new DataInputStream(ftFis);byte[] buff = new byte[256];int readLength = 0;while ((readLength = ftDis.read(buff)) != -1) {makeBuffer(buff, readLength);dos.write(buff, 0, readLength);}ftDis.close();ftFis.close();}} catch (Exception e) {throw new RuntimeException(e);} finally {if (dos != null) {try {dos.close();dos = null;} catch (IOException e) {}}}}private String download(MacroManagerProgress progress, String fileName, String url) throws Exception {URLConnection conn = new URL(url).openConnection();progress.setMaximum(Math.max(0, conn.getContentLength()));String path = MiscUtilities.constructPath(installDirectory, fileName);if (!copy(progress, conn.getInputStream(), new FileOutputStream(path), true, true)) return null;if (archive_zip) {Enumeration entries;ZipFile zipFile;try {File tempFile = new File(path);zipFile = new ZipFile(tempFile);entries = zipFile.entries();while (entries.hasMoreElements()) {ZipEntry entry = (ZipEntry) entries.nextElement();if (entry.isDirectory()) {String dpath = MiscUtilities.constructPath(installDirectory, entry.getName());(new File(dpath)).mkdir();continue;}progress.setMaximum((int) entry.getSize());String ePath = MiscUtilities.constructPath(installDirectory, entry.getName());copy(progress, zipFile.getInputStream(entry), new BufferedOutputStream(new FileOutputStream(ePath)), true, true);}zipFile.close();tempFile.delete();} catch (IOException ioe) {ioe.printStackTrace();}} else if (archive_gzip) {File srce = new File(path);GZIPInputStream gzis = new GZIPInputStream(new FileInputStream(srce));File temp = File.createTempFile(""macro"", ""mgr"");progress.setMaximum((int) srce.length());copy(progress, gzis, new BufferedOutputStream(new FileOutputStream(temp)), true, true);TarArchive tarc = new TarArchive(new FileInputStream(temp));tarc.extractContents(new File(installDirectory));tarc.closeArchive();(new File(path)).delete();}return path;}public static Builder fromURL(URL url) {try {InputStream in = null;try {in = url.openStream();ByteArrayOutputStream baos = new ByteArrayOutputStream();int read = -1;byte[] buf = new byte[4096];while ((read = in.read(buf)) >= 0) {if (read > 0) {baos.write(buf, 0, read);}}StreamBuilder b = (StreamBuilder) fromMemory(baos.toByteArray());try {b.setSystemId(url.toURI().toString());} catch (URISyntaxException use) {b.setSystemId(url.toString());}return b;} finally {if (in != null) {in.close();}}} catch (IOException ex) {throw new XMLUnitException(ex);}}public void read(String skeletonFilename) throws Exception {ClassLoader loader = UnicodePropertiesSkeleton.class.getClassLoader();URL url = loader.getResource(skeletonFilename);if (null == url) {throw new Exception(""Cannot locate '"" + skeletonFilename + ""' - aborting."");}String line;StringBuilder section = new StringBuilder();BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream(), ""UTF-8""));while (null != (line = reader.readLine())) {if (line.startsWith(""---"")) {sections.add(section.toString());section.setLength(0);} else {section.append(line);section.append(NL);}}if (section.length() > 0) {sections.add(section.toString());}if (sections.size() != size) {throw new Exception(""Skeleton file '"" + skeletonFilename + ""' has "" + sections.size() + "" static sections, but "" + size + "" were expected."");}}private void checkRoundtrip(byte[] content) throws Exception {InputStream in = new ByteArrayInputStream(content);ByteArrayOutputStream out = new ByteArrayOutputStream();CodecUtil.encodeQuotedPrintable(in, out);in = new QuotedPrintableInputStream(new ByteArrayInputStream(out.toByteArray()));out = new ByteArrayOutputStream();IOUtils.copy(in, out);assertEquals(content, out.toByteArray());}public static String getMD5(String _pwd) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(_pwd.getBytes());return toHexadecimal(new String(md.digest()).getBytes());} catch (NoSuchAlgorithmException x) {x.printStackTrace();return """";}}"	5
"public RandomAccessFileOrArray(URL url) throws IOException {InputStream is = url.openStream();try {this.arrayIn = InputStreamToArray(is);} finally {try {is.close();} catch (IOException ioe) {}}}public void uploadFile(ActionEvent event) throws IOException {InputFile inputFile = (InputFile) event.getSource();synchronized (inputFile) {ServletContext context = (ServletContext) FacesContext.getCurrentInstance().getExternalContext().getContext();String fileNewPath = arrangeUplodedFilePath(context.getRealPath(""""), inputFile.getFile().getName());File file = new File(fileNewPath);System.out.println(fileNewPath);DataInputStream inStream = new DataInputStream(new FileInputStream(inputFile.getFile()));DataOutputStream outStream = new DataOutputStream(new FileOutputStream(file));int i = 0;byte[] buffer = new byte[512];while ((i = inStream.read(buffer, 0, 512)) != -1) outStream.write(buffer, 0, i);}}public static String MD5(String text) throws ProducteevSignatureException {try {MessageDigest md;md = MessageDigest.getInstance(ALGORITHM);byte[] md5hash;md.update(text.getBytes(""utf-8""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);} catch (NoSuchAlgorithmException nsae) {throw new ProducteevSignatureException(""No such algorithm : "" + ALGORITHM, nsae);} catch (UnsupportedEncodingException e) {throw new ProducteevSignatureException(""No such algorithm : "" + ALGORITHM, e);}}public static void copyFile(File from, File to) throws IOException {if (from.isDirectory()) {if (!to.exists()) {to.mkdir();}File[] children = from.listFiles();for (int i = 0; i < children.length; i++) {if (children[i].getName().equals(""."") || children[i].getName().equals("".."")) {continue;}if (children[i].isDirectory()) {File f = new File(to, children[i].getName());copyFile(children[i], f);} else {copyFile(children[i], to);}}} else if (from.isFile() && (to.isDirectory() || to.isFile())) {if (to.isDirectory()) {to = new File(to, from.getName());}FileInputStream in = new FileInputStream(from);FileOutputStream out = new FileOutputStream(to);byte[] buf = new byte[32678];int read;while ((read = in.read(buf)) > -1) {out.write(buf, 0, read);}closeStream(in);closeStream(out);}}void openTextFile(String urlString, boolean install) {StringBuffer sb = null;try {URL url = new URL(urlString);InputStream in = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(in));sb = new StringBuffer();String line;while ((line = br.readLine()) != null) sb.append(line + ""\n"");in.close();} catch (IOException e) {if (!(install && urlString.endsWith(""StartupMacros.txt""))) IJ.error(""URL Opener"", """" + e);sb = null;}if (sb != null) {if (install) (new MacroInstaller()).install(new String(sb)); else {int index = urlString.lastIndexOf(""/"");if (index != -1 && index <= urlString.length() - 1) urlString = urlString.substring(index + 1);(new Editor()).create(urlString, new String(sb));}}}public void validateXml(InputStream inputData, ErrorHandler errorHandler) throws SAXException, IOException, Exception {SAXParserFactory spf = SAXParserFactory.newInstance();spf.setValidating(false);spf.setNamespaceAware(true);try {SchemaFactory schemaFactory = SchemaFactory.newInstance(""http://www.w3.org/2001/XMLSchema"");URL schemaURL = new URL(schemeUrl);InputStream urlStream = null;try {urlStream = schemaURL.openStream();} catch (IOException ex) {if (defaultUrl != null) {schemaURL = new URL(defaultUrl);urlStream = schemaURL.openStream();} else {throw ex;}}LOGGER.debug(""Uses schema url : "" + schemaURL);StreamSource sss = new StreamSource(urlStream);Schema schema = schemaFactory.newSchema(sss);spf.setSchema(schema);SAXParser parser = spf.newSAXParser();XMLReader reader = parser.getXMLReader();reader.setErrorHandler(errorHandler);reader.parse(new InputSource(inputData));} catch (ParserConfigurationException e) {throw new SAXException(e);}}public static void copyFile(File sourceFile, File destFile) throws IOException {if (!destFile.exists()) destFile.createNewFile();FileChannel source = null;FileChannel destination = null;try {source = new FileInputStream(sourceFile).getChannel();destination = new FileOutputStream(destFile).getChannel();destination.transferFrom(source, 0, source.size());} finally {if (source != null) source.close();if (destination != null) destination.close();}}private void writeToDisk(byte[] download) throws IOException {File target = new File(TARGET_FILENAME);InputStream downloadedFromNetwork = new ByteArrayInputStream(download);FileOutputStream fileOnDisk = null;try {try {fileOnDisk = new FileOutputStream(target);fileOnDisk.write(""test"".getBytes());} catch (Exception e) {target = new File(PMS.getConfiguration().getTempFolder(), TARGET_FILENAME);} finally {fileOnDisk.close();}fileOnDisk = new FileOutputStream(target);int bytesSaved = IOUtils.copy(downloadedFromNetwork, fileOnDisk);logger.info(""Wrote "" + bytesSaved + "" bytes to "" + target.getAbsolutePath());} finally {IOUtils.closeQuietly(downloadedFromNetwork);IOUtils.closeQuietly(fileOnDisk);}}public void copyToZip(ZipOutputStream zout, String entryName) throws IOException {close();ZipEntry entry = new ZipEntry(entryName);zout.putNextEntry(entry);if (!isEmpty() && this.tmpFile.exists()) {InputStream in = new FileInputStream(this.tmpFile);IOUtils.copyTo(in, zout);in.close();}zout.flush();zout.closeEntry();delete();}public byte process(ProcessorContext<PublishRequest> context) throws InterruptedException, ProcessorException {logger.info(""MapTileChacheTask:process"");PublishRequest req = context.getItem().getEntity();if (StringUtils.isEmpty(req.getBackMap())) return TaskState.STATE_TILE_CACHED;final PublicMapPost post;final GenericDAO<PublicMapPost> postDao = DAOFactory.createDAO(PublicMapPost.class);try {ReadOnlyTransaction.beginTransaction();} catch (DatabaseException e) {logger.error(""error"", e);throw new ProcessorException(e);}int numCachedTiles = 0;try {List<MapTile> backTiles = new ArrayList<MapTile>();post = postDao.findUniqueByCriteria(Expression.eq(""guid"", req.getPostGuid()));final LatLngRectangle bounds = new LatLngRectangle(new LatLngPoint(post.getSWLat(), post.getSWLon()), new LatLngPoint(post.getNELat(), post.getNELon()));final String backMapGuid = ""gst"";final XFile dstDir = new XFile(new XFile(Configuration.getInstance().getPublicMapStorage().toString()), backMapGuid);dstDir.mkdir();for (int z = Math.min(Tile.getOptimalZoom(bounds, 768), 9); z <= 17; z++) {final Tile tileStart = new Tile(bounds.getSouthWest().getLat(), bounds.getSouthWest().getLng(), z);final Tile tileEnd = new Tile(bounds.getNorthEast().getLat(), bounds.getNorthEast().getLng(), z);for (double y = tileEnd.getTileCoord().getY(); y <= tileStart.getTileCoord().getY(); y++) for (double x = tileStart.getTileCoord().getX(); x <= tileEnd.getTileCoord().getX(); x++) {NASAMapTile tile = new NASAMapTile((int) x, (int) y, z);XFile file = new XFile(dstDir, tile.toKeyString());if (file.exists() && file.isFile()) continue;backTiles.add(tile);}}try {for (MapTile tile : backTiles) {InputStream in = null;OutputStream out = null;final URL url = new URL(tile.getPath());try {final XFile outFile = new XFile(dstDir, tile.toKeyString());final URLConnection conn = url.openConnection();if (conn == null || !conn.getContentType().startsWith(""image"")) throw new IllegalAccessException(""onearth.jpl.nasa.gov service returns non-image file, "" + ""content-type='"" + conn.getContentType() + ""'"");in = conn.getInputStream();if (in != null) {out = new XFileOutputStream(outFile);IOUtils.copy(in, out);} else throw new IllegalStateException(""opened stream is null"");} finally {if (out != null) {out.flush();out.close();}if (in != null) in.close();}if (++numCachedTiles % 100 == 0) {logger.info(numCachedTiles + "" tiles cached"");}}} catch (Throwable e) {logger.error(""map tile caching has failed: "", e);throw new ProcessorException(e);}} catch (ProcessorException e) {logger.error(""map tile caching has failed: "", e);throw e;} catch (Throwable e) {logger.error(""map tile caching has failed: "", e);throw new ProcessorException(e);} finally {ReadOnlyTransaction.closeTransaction();logger.info(numCachedTiles + "" tiles cached"");}return TaskState.STATE_TILE_CACHED;}"	5
"public boolean GetExternalLanguage() {String thisURL, newURL, TheLine;boolean ReadOK = true;int SlashPos = -1;thisURL = getDocumentBase().toString();SlashPos = thisURL.lastIndexOf(""/"");newURL = thisURL.substring(0, (SlashPos + 1)) + ""language.txt"";try {URL url = new URL(newURL);try {InputStream TheFile = url.openStream();try {DataInputStream MyData = new DataInputStream(TheFile);try {while ((TheLine = MyData.readLine()) != null) {if (TheLine.substring(0, 1).compareTo(""*"") == 0) {if (!ExternalLanguageVariable(TheLine)) {ReadOK = false;break;}}}} catch (Exception e) {System.out.println(""Error "" + e.toString());ReadOK = false;}} catch (Exception e) {System.out.println(""Error "" + e.toString());ReadOK = false;}} catch (Exception f) {System.out.println(""Error "" + f.toString());ReadOK = false;}} catch (Exception g) {System.out.println(""Error "" + g.toString());ReadOK = false;}return ReadOK;}public static void copyFile(File in, File out) throws IOException {FileChannel sourceChannel = new FileInputStream(in).getChannel();FileChannel destinationChannel = new FileOutputStream(out).getChannel();try {sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel);} finally {sourceChannel.close();destinationChannel.close();}}public void deploy(final File extension) {log.info(""Deploying new extension from {}"", extension.getPath());RequestContextHolder.setRequestContext(new RequestContext(SZoneConfig.getDefaultZoneName(), SZoneConfig.getAdminUserName(SZoneConfig.getDefaultZoneName()), new BaseSessionContext()));RequestContextHolder.getRequestContext().resolve();JarInputStream warIn;try {warIn = new JarInputStream(new FileInputStream(extension), true);} catch (IOException e) {log.warn(""Unable to open extension WAR at "" + extension.getPath(), e);return;}SAXReader reader = new SAXReader(false);reader.setIncludeExternalDTDDeclarations(false);String extensionPrefix = extension.getName().substring(0, extension.getName().lastIndexOf("".""));File extensionDir = new File(extensionBaseDir, extensionPrefix);extensionDir.mkdirs();File extensionWebDir = new File(this.extensionWebDir, extensionPrefix);extensionWebDir.mkdirs();try {for (JarEntry entry = warIn.getNextJarEntry(); entry != null; entry = warIn.getNextJarEntry()) {File inflated = new File(entry.getName().startsWith(infPrefix) ? extensionDir : extensionWebDir, entry.getName());if (entry.isDirectory()) {log.debug(""Creating directory at {}"", inflated.getPath());inflated.mkdirs();continue;}inflated.getParentFile().mkdirs();FileOutputStream entryOut = new FileOutputStream(inflated);if (!entry.getName().endsWith(configurationFileExtension)) {log.debug(""Inflating file resource to {}"", inflated.getPath());IOUtils.copy(warIn, entryOut);entryOut.close();continue;}try {final Document document = reader.read(new TeeInputStream(new CloseShieldInputStream(warIn), entryOut, true));Attribute schema = document.getRootElement().attribute(schemaAttribute);if (schema == null || StringUtils.isBlank(schema.getText())) {log.debug(""Inflating XML with unrecognized schema to {}"", inflated.getPath());continue;}if (schema.getText().contains(definitionsSchemaNamespace)) {log.debug(""Inflating and registering definition from {}"", inflated.getPath());document.getRootElement().add(new AbstractAttribute() {private static final long serialVersionUID = -7880537136055718310L;public QName getQName() {return new QName(extensionAttr, document.getRootElement().getNamespace());}public String getValue() {return extension.getName().substring(0, extension.getName().lastIndexOf("".""));}});definitionModule.addDefinition(document, true);continue;}if (schema.getText().contains(templateSchemaNamespace)) {log.debug(""Inflating and registering template from {}"", inflated.getPath());templateService.addTemplate(document, true, zoneModule.getDefaultZone());continue;}} catch (DocumentException e) {log.warn(""Malformed XML file in extension war at "" + extension.getPath(), e);return;}}} catch (IOException e) {log.warn(""Malformed extension war at "" + extension.getPath(), e);return;} finally {try {warIn.close();} catch (IOException e) {log.warn(""Unable to close extension war at "" + extension.getPath(), e);return;}RequestContextHolder.clear();}log.info(""Extension deployed successfully from {}"", extension.getPath());}public static void fileCopy(final File src, final File dest, final boolean overwrite) throws IOException {if (!dest.exists() || (dest.exists() && overwrite)) {final FileChannel srcChannel = new FileInputStream(src).getChannel();final FileChannel dstChannel = new FileOutputStream(dest).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();}}public static void copyFileStreams(File fromFile, File toFile) throws IOException {if (!fromFile.exists()) {return;}FileInputStream fis = new FileInputStream(fromFile);FileOutputStream fos = new FileOutputStream(toFile);int read = 0;byte[] buf = new byte[1024];while (-1 != read) {read = fis.read(buf);if (read >= 0) {fos.write(buf, 0, read);}}fos.close();fis.close();}public void testReleaseOnEntityWriteTo() throws Exception {HttpParams params = defaultParams.copy();ConnManagerParams.setMaxTotalConnections(params, 1);ConnManagerParams.setMaxConnectionsPerRoute(params, new ConnPerRouteBean(1));ThreadSafeClientConnManager mgr = createTSCCM(params, null);assertEquals(0, mgr.getConnectionsInPool());DefaultHttpClient client = new DefaultHttpClient(mgr, params);HttpGet httpget = new HttpGet(""/random/20000"");HttpHost target = getServerHttp();HttpResponse response = client.execute(target, httpget);ClientConnectionRequest connreq = mgr.requestConnection(new HttpRoute(target), null);try {connreq.getConnection(250, TimeUnit.MILLISECONDS);fail(""ConnectionPoolTimeoutException should have been thrown"");} catch (ConnectionPoolTimeoutException expected) {}HttpEntity e = response.getEntity();assertNotNull(e);ByteArrayOutputStream outsteam = new ByteArrayOutputStream();e.writeTo(outsteam);assertEquals(1, mgr.getConnectionsInPool());connreq = mgr.requestConnection(new HttpRoute(target), null);ManagedClientConnection conn = connreq.getConnection(250, TimeUnit.MILLISECONDS);mgr.releaseConnection(conn, -1, null);mgr.shutdown();}public void testReleaseOnAbort() throws Exception {HttpParams params = defaultParams.copy();ConnManagerParams.setMaxTotalConnections(params, 1);ConnManagerParams.setMaxConnectionsPerRoute(params, new ConnPerRouteBean(1));ThreadSafeClientConnManager mgr = createTSCCM(params, null);assertEquals(0, mgr.getConnectionsInPool());DefaultHttpClient client = new DefaultHttpClient(mgr, params);HttpGet httpget = new HttpGet(""/random/20000"");HttpHost target = getServerHttp();HttpResponse response = client.execute(target, httpget);ClientConnectionRequest connreq = mgr.requestConnection(new HttpRoute(target), null);try {connreq.getConnection(250, TimeUnit.MILLISECONDS);fail(""ConnectionPoolTimeoutException should have been thrown"");} catch (ConnectionPoolTimeoutException expected) {}HttpEntity e = response.getEntity();assertNotNull(e);httpget.abort();assertEquals(0, mgr.getConnectionsInPool());connreq = mgr.requestConnection(new HttpRoute(target), null);ManagedClientConnection conn = connreq.getConnection(250, TimeUnit.MILLISECONDS);mgr.releaseConnection(conn, -1, null);mgr.shutdown();}public void testReleaseOnIOException() throws Exception {localServer.register(""/dropdead"", new HttpRequestHandler() {public void handle(final HttpRequest request, final HttpResponse response, final HttpContext context) throws HttpException, IOException {BasicHttpEntity entity = new BasicHttpEntity() {@Overridepublic void writeTo(final OutputStream outstream) throws IOException {byte[] tmp = new byte[5];outstream.write(tmp);outstream.flush();DefaultHttpServerConnection conn = (DefaultHttpServerConnection) context.getAttribute(ExecutionContext.HTTP_CONNECTION);try {conn.sendResponseHeader(response);} catch (HttpException ignore) {}}};entity.setChunked(true);response.setEntity(entity);}});HttpParams params = defaultParams.copy();ConnManagerParams.setMaxTotalConnections(params, 1);ConnManagerParams.setMaxConnectionsPerRoute(params, new ConnPerRouteBean(1));ThreadSafeClientConnManager mgr = createTSCCM(params, null);assertEquals(0, mgr.getConnectionsInPool());DefaultHttpClient client = new DefaultHttpClient(mgr, params);HttpGet httpget = new HttpGet(""/dropdead"");HttpHost target = getServerHttp();HttpResponse response = client.execute(target, httpget);ClientConnectionRequest connreq = mgr.requestConnection(new HttpRoute(target), null);try {connreq.getConnection(250, TimeUnit.MILLISECONDS);fail(""ConnectionPoolTimeoutException should have been thrown"");} catch (ConnectionPoolTimeoutException expected) {}HttpEntity e = response.getEntity();assertNotNull(e);try {EntityUtils.toByteArray(e);fail(""MalformedChunkCodingException should have been thrown"");} catch (MalformedChunkCodingException expected) {}assertEquals(0, mgr.getConnectionsInPool());connreq = mgr.requestConnection(new HttpRoute(target), null);ManagedClientConnection conn = connreq.getConnection(250, TimeUnit.MILLISECONDS);mgr.releaseConnection(conn, -1, null);mgr.shutdown();}boolean getHTML(URL url) {html = """";int r;BufferedInputStream in = null;BufferedInputStream imgIn = null;boolean retry;Vector imageRd = new Vector(0);do {retry = false;try {in = new BufferedInputStream(url.openStream(), 4096);} catch (IOException ioe) {rbe.stats.error(""Unable to open URL."", url.toExternalForm());ioe.printStackTrace();retry = true;continue;}try {while ((r = in.read(buffer, 0, buffer.length)) != -1) {if (r > 0) {html = html + new String(buffer, 0, r);}}} catch (IOException ioe) {rbe.stats.error(""Unable to read HTML from URL."", url.toExternalForm());retry = true;continue;}if (retry) {try {if (waitKey) {rbe.getKey();} else {sleep(1000L);}} catch (InterruptedException inte) {System.out.println(""In getHTML, caught interrupted exception!"");return true;}}} while (retry);try {in.close();} catch (IOException ioe) {rbe.stats.error(""Unable to close URL."", url.toExternalForm());}if (DEBUG > 0) {}if (DEBUG > 10) {System.out.println(html);}int cur = 0;if (!RBE.getImage) return true;findImg(html, url, imgPat, srcPat, quotePat, imageRd);findImg(html, url, inputPat, srcPat, quotePat, imageRd);if (DEBUG > 2) {System.out.println(""Found "" + imageRd.size() + "" images."");}while (imageRd.size() > 0) {int max = imageRd.size();int min = Math.max(max - rbe.maxImageRd, 0);int i;try {for (i = min; i < max; i++) {ImageReader rd = (ImageReader) imageRd.elementAt(i);if (!rd.readImage()) {if (DEBUG > 2) {System.out.println(""Read "" + rd.tot + "" bytes from "" + rd.imgURLStr);}imageRd.removeElementAt(i);i--;max--;}}} catch (InterruptedException inte) {System.out.println(""In getHTML, caught interrupted exception!"");return true;}}return true;}public static boolean copyFile(String sourceFileName, String destFileName) {if (sourceFileName == null || destFileName == null) return false;if (sourceFileName.equals(destFileName)) return false;try {java.io.FileInputStream in = new java.io.FileInputStream(sourceFileName);java.io.FileOutputStream out = new java.io.FileOutputStream(destFileName);try {byte[] buf = new byte[31000];int read = in.read(buf);while (read > -1) {out.write(buf, 0, read);read = in.read(buf);}} finally {in.close();out.close();}} catch (Exception e) {System.out.println(e.toString());return false;}return true;}"	5
"public static String readUrlText(String urlString) throws IOException {URL url = new URL(urlString);InputStream stream = url.openStream();StringBuilder buf = new StringBuilder();BufferedReader in = null;try {in = new BufferedReader(new InputStreamReader(stream));String str;while ((str = in.readLine()) != null) {buf.append(str);buf.append(System.getProperty(""line.separator""));}} catch (IOException e) {System.out.println(""Error reading text from URL ["" + url + ""]: "" + e.toString());throw e;} finally {if (in != null) {try {in.close();} catch (IOException e) {System.out.println(""Error closing after reading text from URL ["" + url + ""]: "" + e.toString());}}}return buf.toString();}public static String md5(String password) {try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(password.getBytes());BigInteger hash = new BigInteger(1, md5.digest());return hash.toString(16);} catch (NoSuchAlgorithmException ex) {return password;}}public static void copyFile(File source, File destination) {if (!source.exists()) {return;}if ((destination.getParentFile() != null) && (!destination.getParentFile().exists())) {destination.getParentFile().mkdirs();}try {FileChannel srcChannel = new FileInputStream(source).getChannel();FileChannel dstChannel = new FileOutputStream(destination).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (IOException ioe) {ioe.printStackTrace();}}@Overrideprotected void doFetch(HttpServletRequest request, HttpServletResponse response) throws IOException, GadgetException {if (request.getHeader(""If-Modified-Since"") != null) {response.setStatus(HttpServletResponse.SC_NOT_MODIFIED);return;}String host = request.getHeader(""Host"");if (!lockedDomainService.isSafeForOpenProxy(host)) {String msg = ""Embed request for url "" + getParameter(request, URL_PARAM, """") + "" made to wrong domain "" + host;logger.info(msg);throw new GadgetException(GadgetException.Code.INVALID_PARAMETER, msg);}HttpRequest rcr = buildHttpRequest(request, URL_PARAM);HttpResponse results = requestPipeline.execute(rcr);if (results.isError()) {HttpRequest fallbackRcr = buildHttpRequest(request, FALLBACK_URL_PARAM);if (fallbackRcr != null) {results = requestPipeline.execute(fallbackRcr);}}if (contentRewriterRegistry != null) {try {results = contentRewriterRegistry.rewriteHttpResponse(rcr, results);} catch (RewritingException e) {throw new GadgetException(GadgetException.Code.INTERNAL_SERVER_ERROR, e);}}for (Map.Entry<String, String> entry : results.getHeaders().entries()) {String name = entry.getKey();if (!DISALLOWED_RESPONSE_HEADERS.contains(name.toLowerCase())) {response.addHeader(name, entry.getValue());}}String responseType = results.getHeader(""Content-Type"");if (!StringUtils.isEmpty(rcr.getRewriteMimeType())) {String requiredType = rcr.getRewriteMimeType();if (requiredType.endsWith(""/*"") && !StringUtils.isEmpty(responseType)) {requiredType = requiredType.substring(0, requiredType.length() - 2);if (!responseType.toLowerCase().startsWith(requiredType.toLowerCase())) {response.setContentType(requiredType);responseType = requiredType;}} else {response.setContentType(requiredType);responseType = requiredType;}}setResponseHeaders(request, response, results);if (results.getHttpStatusCode() != HttpResponse.SC_OK) {response.sendError(results.getHttpStatusCode());}IOUtils.copy(results.getResponse(), response.getOutputStream());}public static void copyFile(String source, String destination, boolean overwrite) {File sourceFile = new File(source);try {File destinationFile = new File(destination);BufferedInputStream bis = new BufferedInputStream(new FileInputStream(sourceFile));BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(destinationFile));int temp = 0;while ((temp = bis.read()) != -1) bos.write(temp);bis.close();bos.close();} catch (Exception e) {}return;}public static String makeMD5(String input) throws Exception {String dstr = null;byte[] digest;try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(input.getBytes());digest = md.digest();dstr = new BigInteger(1, digest).toString(16);if (dstr.length() % 2 > 0) {dstr = ""0"" + dstr;}} catch (Exception e) {throw new Exception(""Erro inesperado em makeMD5(): "" + e.toString(), e);}return dstr;}protected void find(final String pckgname, final boolean recursive) {URL url;String name = pckgname;name = name.replace('.', '/');url = ResourceLocatorTool.getClassPathResource(ExampleRunner.class, name);File directory;try {directory = new File(URLDecoder.decode(url.getFile(), ""UTF-8""));} catch (final UnsupportedEncodingException e) {throw new RuntimeException(e);}if (directory.exists()) {logger.info(""Searching for examples in \"""" + directory.getPath() + ""\""."");addAllFilesInDirectory(directory, pckgname, recursive);} else {try {logger.info(""Searching for Demo classes in \"""" + url + ""\""."");final URLConnection urlConnection = url.openConnection();if (urlConnection instanceof JarURLConnection) {final JarURLConnection conn = (JarURLConnection) urlConnection;final JarFile jfile = conn.getJarFile();final Enumeration<JarEntry> e = jfile.entries();while (e.hasMoreElements()) {final ZipEntry entry = e.nextElement();final Class<?> result = load(entry.getName());if (result != null) {addClassForPackage(result);}}}} catch (final IOException e) {logger.logp(Level.SEVERE, this.getClass().toString(), ""find(pckgname, recursive, classes)"", ""Exception"", e);} catch (final Exception e) {logger.logp(Level.SEVERE, this.getClass().toString(), ""find(pckgname, recursive, classes)"", ""Exception"", e);}}}public static void main(String args[]) {Connection con;if (args.length != 2) {System.out.println(""Usage: Shutdown <host> <password>"");System.exit(0);}try {con = new Connection(args[0]);con.tStart();Message message = new Message(MessageTypes.SHUTDOWN_SERVER);java.security.MessageDigest hash = java.security.MessageDigest.getInstance(""SHA-1"");hash.update(args[1].getBytes(""UTF-8""));message.put(""pwhash"", hash.digest());con.send(message);con.join();} catch (java.io.UnsupportedEncodingException e) {System.err.println(""Password character encoding not supported."");} catch (java.io.IOException e) {System.out.println(e.toString());} catch (java.security.NoSuchAlgorithmException e) {System.out.println(""Password hash algorithm SHA-1 not supported by runtime."");} catch (InterruptedException e) {}System.exit(0);}public static void copyFile(File src, File dst) throws IOException {InputStream in = new FileInputStream(src);OutputStream out = new FileOutputStream(dst);byte[] buf = new byte[1024];int len;while ((len = in.read(buf)) > 0) out.write(buf, 0, len);in.close();out.close();}@Overrideprotected Properties loadFile(String fileName) {Properties prop = new Properties();try {URL url = new File(fileName).toURI().toURL();final InputStream input = url.openStream();prop.load(input);} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return prop;}"	5
"private Vendor createVendor() throws SQLException, IOException {Connection conn = null;Statement st = null;String query = null;ResultSet rs = null;try {conn = dataSource.getConnection();st = conn.createStatement();query = ""insert into "" + DB.Tbl.vend + ""("" + col.title + "","" + col.addDate + "","" + col.authorId + "") values('"" + title + ""',now(),"" + user.getId() + "")"";st.executeUpdate(query, new String[] { col.id });rs = st.getGeneratedKeys();if (!rs.next()) {throw new SQLException(""Не удается получить generated key 'id' в таблице vendors."");}int genId = rs.getInt(1);rs.close();saveDescr(genId);conn.commit();Vendor v = new Vendor();v.setId(genId);v.setTitle(title);v.setDescr(descr);VendorViewer.getInstance().vendorListChanged();return v;} catch (SQLException e) {try {conn.rollback();} catch (Exception e1) {}throw e;} finally {try {rs.close();} catch (Exception e) {}try {st.close();} catch (Exception e) {}try {conn.close();} catch (Exception e) {}}}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}public static void main(String[] args) {try {FileReader reader = new FileReader(args[0]);FileWriter writer = new FileWriter(args[1]);html2xhtml(reader, writer);writer.close();reader.close();} catch (Exception e) {freemind.main.Resources.getInstance().logException(e);}}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public void extract(CabFolder cabfolder, File outputFolder) throws IOException {InputStream in = null;OutputStream out = null;File file;byte[] buffer = new byte[2048];int read, remain, maxread = buffer.length;in = new CabFileInputStream(cabfolder);CabEntry[] cabentries = this.getEntries();for (int i = 0; i < cabentries.length; i++) {if (cabentries[i].getCabFolder() == cabfolder) {file = new File(outputFolder, cabentries[i].getName().replace('\\', '/'));FileUtils.createParents(file);out = new FileOutputStream(file);remain = cabentries[i].getInflatedSize();while (remain != 0 && (read = in.read(buffer, 0, maxread)) != -1) {out.write(buffer, 0, read);remain -= read;if (buffer.length > remain) maxread = remain; else maxread = buffer.length;}in.close();out.close();}}}private void doIt() throws Throwable {GenericDAO<User> dao = DAOFactory.createDAO(User.class);try {final User user = dao.findUniqueByCriteria(Expression.eq(""login"", login));if (user == null) throw new IllegalArgumentException(""Specified user isn't exist"");if (srcDir.isDirectory() && srcDir.exists()) {final String[] fileList = srcDir.list(new XFilenameFilter() {public boolean accept(XFile dir, String file) {String[] fNArr = file.split(""\\."");return (fNArr.length > 1 && (fNArr[fNArr.length - 1].equalsIgnoreCase(""map"") || fNArr[fNArr.length - 1].equalsIgnoreCase(""plt"") || fNArr[fNArr.length - 1].equalsIgnoreCase(""wpt"")));}});int pointsCounter = 0;int tracksCounter = 0;int mapsCounter = 0;for (final String fName : fileList) {try {TransactionManager.beginTransaction();} catch (Throwable e) {logger.error(e);throw e;}final XFile file = new XFile(srcDir, fName);InputStream in = new XFileInputStream(file);try {ArrayList<UserMapOriginal> maps = new ArrayList<UserMapOriginal>();ArrayList<MapTrackPointsScaleRequest> tracks = new ArrayList<MapTrackPointsScaleRequest>();final byte[] headerBuf = new byte[1024];if (in.read(headerBuf) <= 0) continue;final String fileHeader = new String(headerBuf);final boolean isOziWPT = (fileHeader.indexOf(""OziExplorer Waypoint File"") >= 0);final boolean isOziPLT = (fileHeader.indexOf(""OziExplorer Track Point File"") >= 0);final boolean isOziMAP = (fileHeader.indexOf(""OziExplorer Map Data File"") >= 0);final boolean isKML = (fileHeader.indexOf(""<kml xmlns="") >= 0);if (isOziMAP || isOziPLT || isOziWPT || isKML) {in.close();in = new XFileInputStream(file);} else continue;WPTPoint wp;if (isOziWPT) {try {wp = new WPTPointParser(in, ""Cp1251"").parse();} catch (Throwable t) {wp = null;}if (wp != null) {Set<WayPointRow> rows = wp.getPoints();for (WayPointRow row : rows) {final UserMapPoint p = BeanFactory.createUserPoint(row, user);logger.info(""point:"" + p.getGuid());}pointsCounter += rows.size();}} else if (isOziPLT) {PLTTrack plt;try {plt = new PLTTrackParser(in, ""Cp1251"").parse();} catch (Throwable t) {plt = null;}if (plt != null) {final UserMapTrack t = BeanFactory.createUserTrack(plt, user);tracks.add(new MapTrackPointsScaleRequest(t));tracksCounter++;logger.info(""track:"" + t.getGuid());}} else if (isOziMAP) {MapProjection projection;MAPParser parser = new MAPParser(in, ""Cp1251"");try {projection = parser.parse();} catch (Throwable t) {projection = null;}if (projection != null && projection.getPoints() != null && projection.getPoints().size() >= 2) {GenericDAO<UserMapOriginal> mapDao = DAOFactory.createDAO(UserMapOriginal.class);final UserMapOriginal mapOriginal = new UserMapOriginal();mapOriginal.setName(projection.getTitle());mapOriginal.setUser(user);mapOriginal.setState(UserMapOriginal.State.UPLOAD);mapOriginal.setSubstate(UserMapOriginal.SubState.COMPLETE);MapManager.updateProjection(projection, mapOriginal);final XFile srcFile = new XFile(srcDir, projection.getPath());if (!srcFile.exists() || !srcFile.isFile()) throw new IllegalArgumentException(""file: "" + srcFile.getPath() + "" not found"");final XFile mapStorage = new XFile(new XFile(Configuration.getInstance().getPrivateMapStorage().toString()), mapOriginal.getGuid());mapStorage.mkdir();XFile dstFile = new XFile(mapStorage, mapOriginal.getGuid());XFileOutputStream out = new XFileOutputStream(dstFile);XFileInputStream inImg = new XFileInputStream(srcFile);IOUtils.copy(inImg, out);out.flush();out.close();inImg.close();mapDao.save(mapOriginal);maps.add(mapOriginal);srcFile.delete();mapsCounter++;logger.info(""map:"" + mapOriginal.getGuid());}} else logger.warn(""unsupported file format: "" + file.getName());TransactionManager.commitTransaction();for (MapTrackPointsScaleRequest track : tracks) {if (track != null) {try {PoolClientInterface pool = PoolFactory.getInstance().getClientPool();if (pool == null) throw new IllegalStateException(""pool not found"");pool.put(track, new StatesStack(new byte[] { 0x00, 0x11 }), GeneralCompleteStrategy.class);} catch (Throwable t) {logger.error(t);}}}} catch (Throwable e) {logger.error(""Error importing"", e);TransactionManager.rollbackTransaction();} finally {in.close();file.delete();}}logger.info(""waypoints: "" + pointsCounter + ""\ntracks: "" + tracksCounter + ""\nmaps: "" + mapsCounter);}} catch (Throwable e) {logger.error(""Error importing"", e);}}public void copy(File source, File destination) {try {FileInputStream fileInputStream = new FileInputStream(source);FileOutputStream fileOutputStream = new FileOutputStream(destination);FileChannel inputChannel = fileInputStream.getChannel();FileChannel outputChannel = fileOutputStream.getChannel();transfer(inputChannel, outputChannel, source.length(), false);fileInputStream.close();fileOutputStream.close();destination.setLastModified(source.lastModified());} catch (Exception e) {e.printStackTrace();}}private static void doCopyFile(File srcFile, File destFile, boolean preserveFileDate) throws IOException {if (destFile.exists() && destFile.isDirectory()) {throw new IOException(""Destination '"" + destFile + ""' exists but is a directory"");}FileInputStream input = new FileInputStream(srcFile);try {FileOutputStream output = new FileOutputStream(destFile);try {IOUtils.copy(input, output);} finally {IOUtils.closeQuietly(output);}} finally {IOUtils.closeQuietly(input);}if (srcFile.length() != destFile.length()) {throw new IOException(""Failed to copy full contents from '"" + srcFile + ""' to '"" + destFile + ""'"");}if (preserveFileDate) {destFile.setLastModified(srcFile.lastModified());}}int responseTomcat(InetAddress dest, int port, String request, boolean methodPost, StringBuffer response, int timeout) {int methodGetMaxSize = 250;int methodPostMaxSize = 32000;if (request == null || response == null) return -1;String fullRequest;if (methodPost) {String resource;String queryStr;int qIdx = request.indexOf('?');if (qIdx == -1) {resource = request;queryStr = """";} else {resource = request.substring(0, qIdx);queryStr = request.substring(qIdx + 1);}fullRequest = ""POST "" + resource + "" HTTP/1.1\nHost: "" + dest.getHostName() + "":"" + (new Integer(port)).toString() + ""\n\n"" + queryStr;} else {fullRequest = ""GET "" + request + "" HTTP/1.1\nHost: "" + dest.getHostName() + "":"" + (new Integer(port)).toString() + ""\n\n"";}if (methodPost && fullRequest.length() > methodPostMaxSize) {response.setLength(0);response.append(""Complete POST request longer than maximum of "" + methodPostMaxSize);return -5;} else if ((!methodPost) && fullRequest.length() > methodGetMaxSize) {response.setLength(0);response.append(""Complete GET request longer than maximum of "" + methodGetMaxSize);return -6;}String inputLine = """";request = ""http://"" + dest.getHostName() + "":"" + (new Integer(port).toString()) + request;try {URL urlAddress = new URL(request);URLConnection urlC = urlAddress.openConnection();BufferedReader in = new BufferedReader(new InputStreamReader(urlC.getInputStream()));while ((inputLine = in.readLine()) != null) {response = response.append(inputLine).append(""\n"");}} catch (MalformedURLException e) {return -4;} catch (IOException e) {return -3;}return 200;}"	5
"private void loadProperties() {if (properties == null) {properties = new Properties();try {URL url = getClass().getResource(propsFile);properties.load(url.openStream());} catch (IOException ioe) {ioe.printStackTrace();}}}private DialogHelper(String title, final URL imageURL) {jd = new JDialog();jd.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);jd.setAlwaysOnTop(true);jd.setLayout(new BoxLayout(jd.getContentPane(), BoxLayout.Y_AXIS));jd.setTitle(title);JLabel jl = new JLabel();ImageIcon icon = new ImageIcon(imageURL);jl.setIcon(icon);jd.add(new JScrollPane(jl));final JFileChooser chooser = getSaveImageChooser();JPanel jp = new JPanel();JButton jb = new JButton(getMessage(""btn_save_as""));jb.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {int returnVal = chooser.showSaveDialog(jd);if (returnVal == JFileChooser.APPROVE_OPTION) {File file = chooser.getSelectedFile();String fileName = file.getPath();String ext = StringUtil.getLowerExtension(fileName);if (!""png"".equals(ext)) {fileName += "".png"";file = new File(fileName);}boolean doIt = true;if (file.exists()) {int i = JOptionPane.showConfirmDialog(jd, getMessage(""warn_file_exist""));if (i != JOptionPane.YES_OPTION) doIt = false;} else if (!file.getParentFile().exists()) {doIt = file.getParentFile().mkdirs();}if (doIt) {FileChannel src = null;FileChannel dest = null;try {src = new FileInputStream(imageURL.getPath()).getChannel();dest = new FileOutputStream(fileName).getChannel();src.transferTo(0, src.size(), dest);} catch (FileNotFoundException e1) {warn(jd, getMessage(""err_no_source_file""));} catch (IOException e2) {warn(jd, getMessage(""err_output_target""));} finally {try {if (src != null) src.close();} catch (IOException e1) {}try {if (dest != null) dest.close();} catch (IOException e1) {}src = null;dest = null;}}}}});jp.add(jb);jb = new JButton(getMessage(""btn_close""));jb.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {jd.dispose();}});jp.add(jb);jd.add(jp);jd.pack();setCentral(jd);}public void actionPerformed(ActionEvent e) {int returnVal = chooser.showSaveDialog(jd);if (returnVal == JFileChooser.APPROVE_OPTION) {File file = chooser.getSelectedFile();String fileName = file.getPath();String ext = StringUtil.getLowerExtension(fileName);if (!""png"".equals(ext)) {fileName += "".png"";file = new File(fileName);}boolean doIt = true;if (file.exists()) {int i = JOptionPane.showConfirmDialog(jd, getMessage(""warn_file_exist""));if (i != JOptionPane.YES_OPTION) doIt = false;} else if (!file.getParentFile().exists()) {doIt = file.getParentFile().mkdirs();}if (doIt) {FileChannel src = null;FileChannel dest = null;try {src = new FileInputStream(imageURL.getPath()).getChannel();dest = new FileOutputStream(fileName).getChannel();src.transferTo(0, src.size(), dest);} catch (FileNotFoundException e1) {warn(jd, getMessage(""err_no_source_file""));} catch (IOException e2) {warn(jd, getMessage(""err_output_target""));} finally {try {if (src != null) src.close();} catch (IOException e1) {}try {if (dest != null) dest.close();} catch (IOException e1) {}src = null;dest = null;}}}}public void test2() throws Exception {SpreadsheetDocument document = new SpreadsheetDocument();Sheet sheet = new Sheet(""Planilha 1"");sheet.setLandscape(true);Row row = new Row();row.setHeight(20);sheet.getMerges().add(new IntegerCellMerge(0, 0, 0, 5));sheet.getImages().add(new Image(new FileInputStream(""D:/image001.jpg""), 0, 0, ImageType.JPEG, 80, 60));for (int i = 0; i < 10; i++) {Cell cell = new Cell();cell.setValue(""Celula "" + i);cell.setBackgroundColor(new Color(192, 192, 192));cell.setUnderline(true);cell.setBold(true);cell.setItalic(true);cell.setFont(""Times New Roman"");cell.setFontSize(10);cell.setFontColor(new Color(255, 0, 0));Border border = new Border();border.setWidth(1);border.setColor(new Color(0, 0, 0));cell.setLeftBorder(border);cell.setTopBorder(border);cell.setRightBorder(border);cell.setBottomBorder(border);row.getCells().add(cell);sheet.getColumnsWith().put(new Integer(i), new Integer(25));}sheet.getRows().add(row);document.getSheets().add(sheet);FileOutputStream fos = new FileOutputStream(""D:/teste2.xls"");SpreadsheetDocumentWriter writer = HSSFSpreadsheetDocumentWriter.getInstance();writer.write(document, fos);fos.close();}@Overrideprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {resp.setContentType(""image/png"");OutputStream outStream;outStream = resp.getOutputStream();InputStream is;String name = req.getParameter(""name"");if (name == null) {is = ImageServlet.class.getResourceAsStream(""/com/actionbazaar/blank.png"");} else {ImageRecord imageRecord = imageBean.getFile(name);if (imageRecord != null) {is = new BufferedInputStream(new FileInputStream(imageRecord.getThumbnailFile()));} else {is = ImageServlet.class.getResourceAsStream(""/com/actionbazaar/blank.png"");}}IOUtils.copy(is, outStream);outStream.close();outStream.flush();}@Overridepublic void setDocumentSpace(DocumentSpace space) {for (Document doc : space) {if (doc instanceof XMLDOMDocument) {writer.writeDocument(doc);} else if (doc instanceof BinaryDocument) {BinaryDocument bin = (BinaryDocument) doc;try {ManagedFile result = resolveFileFor(folder, (BinaryDocument) doc);IOUtils.copy(bin.getContent().getInputStream(), result.getContent().getOutputStream());} catch (IOException e) {throw ManagedIOException.manage(e);}} else {System.err.println(""Unkown Document type"");}}}public static void copyFile(File source, File destination) throws IOException {if (!source.isFile()) {throw new IOException(source + "" is not a file."");}if (destination.exists()) {throw new IOException(""Destination file "" + destination + "" is already exist."");}FileChannel inChannel = new FileInputStream(source).getChannel();FileChannel outChannel = new FileOutputStream(destination).getChannel();try {inChannel.transferTo(0, inChannel.size(), outChannel);} finally {inChannel.close();outChannel.close();}}public void test() throws Exception {File temp = File.createTempFile(""test"", "".test"");temp.deleteOnExit();StorageFile s = new StorageFile(temp, ""UTF-8"");s.addText(""Test"");s.getOutputStream().write(""ing is important"".getBytes(""UTF-8""));s.getWriter().write("" but overrated"");assertEquals(""Testing is important but overrated"", s.getText());s.close(ResponseStateOk.getInstance());assertEquals(""Testing is important but overrated"", s.getText());InputStream input = s.getInputStream();StringWriter writer = new StringWriter();IOUtils.copy(input, writer, ""UTF-8"");assertEquals(""Testing is important but overrated"", writer.toString());try {s.getOutputStream();fail(""Should thow an IOException as it is closed."");} catch (IOException e) {}}private boolean copyToFile(String folder, String fileName) throws StorageException {InputStream in = Thread.currentThread().getContextClassLoader().getResourceAsStream(folder + ""/"" + fileName);if (in == null) {return false;}FileOutputStream out = null;try {out = new FileOutputStream(new File(path, fileName));IOUtils.copy(in, out);in.close();out.flush();} catch (Exception e) {throw new StorageException(e);} finally {if (in != null) {IOUtils.closeQuietly(in);}if (out != null) {IOUtils.closeQuietly(out);}}return true;}public static String getMD5(String password) throws NoSuchAlgorithmException {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(password.getBytes());byte[] b = md.digest();StringBuffer sb = new StringBuffer();for (byte aB : b) {sb.append((Integer.toHexString((aB & 0xFF) | 0x100)).substring(1, 3));}return sb.toString();}"	5
"@Testpublic void testTrainingDefault() throws IOException {File temp = File.createTempFile(""fannj_"", "".tmp"");temp.deleteOnExit();IOUtils.copy(this.getClass().getResourceAsStream(""xor.data""), new FileOutputStream(temp));List<Layer> layers = new ArrayList<Layer>();layers.add(Layer.create(2));layers.add(Layer.create(3, ActivationFunction.FANN_SIGMOID_SYMMETRIC));layers.add(Layer.create(1, ActivationFunction.FANN_SIGMOID_SYMMETRIC));Fann fann = new Fann(layers);Trainer trainer = new Trainer(fann);float desiredError = .001f;float mse = trainer.train(temp.getPath(), 500000, 1000, desiredError);assertTrue("""" + mse, mse <= desiredError);}@Testpublic void testTrainingQuickprop() throws IOException {File temp = File.createTempFile(""fannj_"", "".tmp"");temp.deleteOnExit();IOUtils.copy(this.getClass().getResourceAsStream(""xor.data""), new FileOutputStream(temp));List<Layer> layers = new ArrayList<Layer>();layers.add(Layer.create(2));layers.add(Layer.create(3, ActivationFunction.FANN_SIGMOID_SYMMETRIC));layers.add(Layer.create(1, ActivationFunction.FANN_SIGMOID_SYMMETRIC));Fann fann = new Fann(layers);Trainer trainer = new Trainer(fann);trainer.setTrainingAlgorithm(TrainingAlgorithm.FANN_TRAIN_QUICKPROP);float desiredError = .001f;float mse = trainer.train(temp.getPath(), 500000, 1000, desiredError);assertTrue("""" + mse, mse <= desiredError);}@Testpublic void testTrainingBackprop() throws IOException {File temp = File.createTempFile(""fannj_"", "".tmp"");temp.deleteOnExit();IOUtils.copy(this.getClass().getResourceAsStream(""xor.data""), new FileOutputStream(temp));List<Layer> layers = new ArrayList<Layer>();layers.add(Layer.create(2));layers.add(Layer.create(3, ActivationFunction.FANN_SIGMOID_SYMMETRIC));layers.add(Layer.create(2, ActivationFunction.FANN_SIGMOID_SYMMETRIC));layers.add(Layer.create(1, ActivationFunction.FANN_SIGMOID_SYMMETRIC));Fann fann = new Fann(layers);Trainer trainer = new Trainer(fann);trainer.setTrainingAlgorithm(TrainingAlgorithm.FANN_TRAIN_INCREMENTAL);float desiredError = .001f;float mse = trainer.train(temp.getPath(), 500000, 1000, desiredError);assertTrue("""" + mse, mse <= desiredError);}@Testpublic void testCascadeTraining() throws IOException {File temp = File.createTempFile(""fannj_"", "".tmp"");temp.deleteOnExit();IOUtils.copy(this.getClass().getResourceAsStream(""parity8.train""), new FileOutputStream(temp));Fann fann = new FannShortcut(8, 1);Trainer trainer = new Trainer(fann);float desiredError = .00f;float mse = trainer.cascadeTrain(temp.getPath(), 30, 1, desiredError);assertTrue("""" + mse, mse <= desiredError);}public static String SHA(String s) {try {MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(s.getBytes(), 0, s.getBytes().length);byte[] hash = md.digest();StringBuilder sb = new StringBuilder();int msb;int lsb = 0;int i;for (i = 0; i < hash.length; i++) {msb = ((int) hash[i] & 0x000000FF) / 16;lsb = ((int) hash[i] & 0x000000FF) % 16;sb.append(hexChars[msb]);sb.append(hexChars[lsb]);}return sb.toString();} catch (NoSuchAlgorithmException e) {return null;}}private static void readAndRewrite(File inFile, File outFile) throws IOException {ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);Dataset ds = DcmObjectFactory.getInstance().newDataset();dcmParser.setDcmHandler(ds.getDcmHandler());dcmParser.parseDcmFile(null, Tags.PixelData);PixelDataReader pdReader = pdFact.newReader(ds, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());System.out.println(""reading "" + inFile + ""..."");pdReader.readPixelData(false);ImageOutputStream out = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;ds.writeDataset(out, dcmEncParam);ds.writeHeader(out, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());System.out.println(""writing "" + outFile + ""..."");PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, ds, out, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());pdWriter.writePixelData();out.flush();out.close();System.out.println(""done!"");}private void sendRemoteFiles() throws Exception {if (validParameters()) {URL url = new URL(storageUrlString);HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();RequestUtils requestUtils = new RequestUtils();requestUtils.preRequestAddParameter(""senderObj"", ""FileSender"");requestUtils.preRequestAddParameter(""wfiType"", ""zen"");requestUtils.preRequestAddParameter(""portalID"", this.portalID);requestUtils.preRequestAddParameter(""userID"", this.userID);requestUtils.preRequestAddParameter(""workflowID"", this.workflowID);requestUtils.preRequestAddParameter(""jobID"", this.jobID);requestUtils.preRequestAddParameter(""pidID"", this.pidID);requestUtils.preRequestAddParameter(""runtimeID"", this.runtimeID);requestUtils.preRequestAddParameter(""copyhash"", getCopyHashStr());String zipFileName = ZipUtils.getInstance().getUniqueZipFileName();requestUtils.preRequestAddFile(""zipFileName"", zipFileName);requestUtils.createPostRequest();httpURLConnection.setRequestProperty(""Content-Type"", ""multipart/form-data; boundary="" + requestUtils.getBoundary());httpURLConnection.setRequestMethod(""POST"");httpURLConnection.setDoOutput(true);httpURLConnection.setDoInput(true);try {httpURLConnection.connect();OutputStream out = httpURLConnection.getOutputStream();byte[] preBytes = requestUtils.getPreRequestStringBytes();out.write(preBytes);out.flush();ZipUtils.getInstance().sendDirAllFilesToStream(sendFilesDir, out);byte[] postBytes = requestUtils.getPostRequestStringBytes();out.write(postBytes);out.flush();out.close();BufferedReader in = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));in.readLine();in.close();if (HttpURLConnection.HTTP_OK != httpURLConnection.getResponseCode()) {throw new Exception(""response not HTTP_OK !"");}} catch (Exception e) {e.printStackTrace();throw new Exception(""Cannot connect to: "" + storageUrlString, e);}} else {throw new Exception(""FilesDir not exist ! or not valid parameters: portalID, userID, workflowID, jobID, pidID, runtimeID !"");}}@SuppressWarnings(""static-access"")@RequestMapping(value = ""/upload/upload.html"", method = RequestMethod.POST)protected void save(HttpServletRequest request, HttpServletResponse response) throws ServletException {UPLOAD_DIRECTORY = uploadDiretory();File diretorioUsuario = new File(UPLOAD_DIRECTORY);boolean diretorioCriado = false;if (!diretorioUsuario.exists()) {diretorioCriado = diretorioUsuario.mkdir();if (!diretorioCriado) throw new RuntimeException(""Não foi possível criar o diretório do usuário"");}PrintWriter writer = null;InputStream is = null;FileOutputStream fos = null;try {writer = response.getWriter();} catch (IOException ex) {System.err.println(FileUploadController.class.getName() + ""has thrown an exception: "" + ex.getMessage());}String filename = request.getHeader(""X-File-Name"");try {is = request.getInputStream();fos = new FileOutputStream(new File(UPLOAD_DIRECTORY + filename));IOUtils.copy(is, fos);response.setStatus(response.SC_OK);writer.print(""{success: true}"");} catch (FileNotFoundException ex) {response.setStatus(response.SC_INTERNAL_SERVER_ERROR);writer.print(""{success: false}"");System.err.println(FileUploadController.class.getName() + ""has thrown an exception: "" + ex.getMessage());} catch (IOException ex) {response.setStatus(response.SC_INTERNAL_SERVER_ERROR);writer.print(""{success: false}"");System.err.println(FileUploadController.class.getName() + ""has thrown an exception: "" + ex.getMessage());} finally {try {fos.close();is.close();} catch (IOException ignored) {}}writer.flush();writer.close();}public String md5(String phrase) {MessageDigest m;String coded = new String();try {m = MessageDigest.getInstance(""MD5"");m.update(phrase.getBytes(), 0, phrase.length());coded = (new BigInteger(1, m.digest()).toString(16)).toString();} catch (NoSuchAlgorithmException ex) {ex.printStackTrace();}return coded;}public void serviceDocument(final TranslationRequest request, final TranslationResponse response, final Document document) throws Exception {response.addHeaders(document.getResponseHeaders());try {IOUtils.copy(document.getInputStream(), response.getOutputStream());response.setEndState(ResponseStateOk.getInstance());} catch (Exception e) {response.setEndState(new ResponseStateException(e));log.warn(""Error parsing XML of "" + document, e);}}"	5
"public static void main(String[] args) throws Exception {final URL url = new URL(""http://www.ebi.ac.uk/Tools/webservices/psicquic/registry/registry?action=ACTIVE&format=txt"");BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String str;Map<String, String> psiqcuicServices = new HashMap<String, String>();while ((str = in.readLine()) != null) {final int idx = str.indexOf('=');psiqcuicServices.put(str.substring(0, idx), str.substring(idx + 1, str.length()));}in.close();System.out.println(""Found "" + psiqcuicServices.size() + "" active service(s)."");for (Object o : psiqcuicServices.keySet()) {String serviceName = (String) o;String serviceUrl = psiqcuicServices.get(serviceName);System.out.println(serviceName + "" -> "" + serviceUrl);UniversalPsicquicClient client = new UniversalPsicquicClient(serviceUrl);try {SearchResult<?> result = client.getByInteractor(""brca2"", 0, 50);System.out.println(""Interactions found: "" + result.getTotalCount());for (BinaryInteraction binaryInteraction : result.getData()) {String interactorIdA = binaryInteraction.getInteractorA().getIdentifiers().iterator().next().getIdentifier();String interactorIdB = binaryInteraction.getInteractorB().getIdentifiers().iterator().next().getIdentifier();String interactionAc = ""-"";if (!binaryInteraction.getInteractionAcs().isEmpty()) {CrossReference cr = (CrossReference) binaryInteraction.getInteractionAcs().iterator().next();interactionAc = cr.getIdentifier();}System.out.println(""\tInteraction ("" + interactionAc + ""): "" + interactorIdA + "" interacts with "" + interactorIdB);}} catch (Throwable e) {System.err.println(""Service is down! "" + serviceName + ""("" + serviceUrl + "")"");}}}@Overridepublic String getLatestApplicationVersion() {String latestVersion = null;String latestVersionInfoURL = ""http://movie-browser.googlecode.com/svn/site/latest"";LOGGER.info(""Checking latest version info from: "" + latestVersionInfoURL);BufferedReader in = null;try {LOGGER.info(""Fetcing latest version info from: "" + latestVersionInfoURL);URL url = new URL(latestVersionInfoURL);in = new BufferedReader(new InputStreamReader(url.openStream()));String str;while ((str = in.readLine()) != null) {latestVersion = str;}} catch (Exception ex) {LOGGER.error(""Error fetching latest version info from: "" + latestVersionInfoURL, ex);} finally {try {in.close();} catch (Exception ex) {LOGGER.error(""Could not close inputstream"", ex);}}return latestVersion;}protected void assignListeners() {groupsList.addListSelectionListener(new ListSelectionListener() {@Overridepublic void valueChanged(ListSelectionEvent event) {refreshInfo();}});saveButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {JFileChooser fileDialog = new JFileChooser(""."");fileDialog.setFileFilter(ReaderData.mkExtensionFileFilter("".grp"", ""Group Files""));int outcome = fileDialog.showSaveDialog((Frame) null);if (outcome == JFileChooser.APPROVE_OPTION) {assert (fileDialog.getCurrentDirectory() != null);assert (fileDialog.getSelectedFile() != null);String fileName = fileDialog.getCurrentDirectory().toString() + File.separator + fileDialog.getSelectedFile().getName();try {PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(fileName)));ReaderWriterGroup.write(out, writer);System.err.println(""Wrote groups informations to output '"" + fileName + ""'."");out.close();} catch (IOException e) {System.err.println(""error while writing (GroupManager.saveClt):"");e.printStackTrace();}} else if (outcome == JFileChooser.CANCEL_OPTION) {}}});loadButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent evt) {JFileChooser fileDialog = new JFileChooser(""."");fileDialog.setFileFilter(ReaderData.mkExtensionFileFilter("".grp"", ""Group Files""));int outcome = fileDialog.showOpenDialog((Frame) null);if (outcome == JFileChooser.APPROVE_OPTION) {assert (fileDialog.getCurrentDirectory() != null);assert (fileDialog.getSelectedFile() != null);String fileName = fileDialog.getCurrentDirectory().toString() + File.separator + fileDialog.getSelectedFile().getName();BufferedReader fileReader = null;try {fileReader = new BufferedReader(new FileReader(fileName));ReaderWriterGroup.read(fileReader, writer);fileReader.close();} catch (Exception e) {System.err.println(""Exception while reading from file '"" + fileName + ""'."");System.err.println(e);}} else if (outcome == JFileChooser.CANCEL_OPTION) {}}});ItemListener propItemListener = new ItemListener() {@Overridepublic void itemStateChanged(ItemEvent event) {int[] indices = groupsList.getSelectedIndices();for (int index : indices) {Group group = getGroupFromListIndex(index);if (group != null) {if (event.getSource() instanceof JComboBox) {JComboBox eventSource = (JComboBox) event.getSource();if (eventSource == colorComboBox) {Color color = colorComboBox.getSelectedColor();assert (color != null);group.setColor(color);shapeComboBox.setColor(color);} else if (eventSource == shapeComboBox) {Shape shape = shapeComboBox.getSelectedShape();assert (shape != null);group.setShape(shape);}} else if (event.getSource() instanceof JCheckBox) {JCheckBox eventSource = (JCheckBox) event.getSource();if (eventSource == showGroupCheckBox) {group.visible = showGroupCheckBox.isSelected();} else if (eventSource == showGraphicInfoCheckBox) {group.info = showGraphicInfoCheckBox.isSelected();}}}}graph.notifyAboutGroupsChange(null);}};colorComboBox.addItemListener(propItemListener);shapeComboBox.addItemListener(propItemListener);showGroupCheckBox.addItemListener(propItemListener);showGraphicInfoCheckBox.addItemListener(propItemListener);showGroupfreeNodesCheckBox.addItemListener(new ItemListener() {@Overridepublic void itemStateChanged(ItemEvent event) {graph.getGroup(0).visible = showGroupfreeNodesCheckBox.isSelected();graph.notifyAboutGroupsChange(null);}});ActionListener propActionListener = new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {JButton botton = (JButton) event.getSource();Group group = getGroupFromListIndex(groupsList.getSelectedIndex());if (group != null) {for (GraphVertex graphVertex : group) {if (botton == showLabelsButton) {graphVertex.setShowName(NameVisibility.Priority.GROUPS, true);} else if (botton == hideLabelsButton) {graphVertex.setShowName(NameVisibility.Priority.GROUPS, false);}}graph.notifyAboutGroupsChange(null);}}};showLabelsButton.addActionListener(propActionListener);hideLabelsButton.addActionListener(propActionListener);newButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {String newGroupName = JOptionPane.showInputDialog(null, ""Enter a name"", ""Name of the new group"", JOptionPane.QUESTION_MESSAGE);if (newGroupName != null) {if (graph.getGroup(newGroupName) == null) {graph.addGroup(new Group(newGroupName, graph));}}}});editButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {Group group = getGroupFromListIndex(groupsList.getSelectedIndex());if (group != null) {DialogEditGroup dialog = new DialogEditGroup(graph, group);dialog.setModal(true);dialog.setVisible(true);}}});deleteButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {int index = groupsList.getSelectedIndex();if (index > 0 && index < graph.getNumberOfGroups() - 1) {graph.removeGroup(index);}}});upButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {int index = groupsList.getSelectedIndex();if (index < graph.getNumberOfGroups() - 1) {graph.moveGroupUp(index);groupsList.setSelectedIndex(index - 1);}}});downButton.addActionListener(new ActionListener() {@Overridepublic void actionPerformed(ActionEvent event) {int index = groupsList.getSelectedIndex();if (index < graph.getNumberOfGroups() - 1) {graph.moveGroupDown(index);groupsList.setSelectedIndex(index + 1);}}});}private static boolean downloadFile(URL remote, File local) throws IllegalArgumentException, IOException {if (local == null) throw new IllegalArgumentException(""Must specify remote file"");if (local.exists() && !local.canWrite()) throw new IOException(""Cannot write to "" + local);long lengthCurrent = local.exists() ? local.length() : -1l;if (lengthCurrent == 0) throw new IOException(""Cannot get the length for "" + local);long lastModifiedCurrent = local.exists() ? local.lastModified() : -1l;if (remote == null) throw new IllegalArgumentException(""Must specify remote url"");URLConnection urlConnection = remote.openConnection();urlConnection.setDoInput(true);urlConnection.setDoOutput(false);long lengthRemote = urlConnection.getContentLength();long lastModifiedRemote = urlConnection.getLastModified();if (lengthRemote == lengthCurrent) {LOGGER.fine(""Not downloading "" + remote + "" of length "" + lengthRemote + "" and date "" + (lastModifiedRemote > 0 ? new Date(lastModifiedRemote).toString() : ""n/a"") + "" for "" + local + "" of length "" + lengthCurrent + "" and date "" + new Date(lastModifiedCurrent));return false;}BufferedInputStream inputStream = null;BufferedOutputStream bufferedOutputStream = null;try {inputStream = new BufferedInputStream(urlConnection.getInputStream(), BUFFER_SIZE);bufferedOutputStream = new BufferedOutputStream(new FileOutputStream(local));byte[] buffer = new byte[BUFFER_SIZE];do {int count = inputStream.read(buffer);if (count < 0) break;bufferedOutputStream.write(buffer, 0, count);} while (true);return true;} finally {try {if (inputStream != null) inputStream.close();} catch (Throwable throwable) {}try {if (bufferedOutputStream != null) bufferedOutputStream.close();} catch (Throwable throwable) {}}}void copyFile(File src, File dst) throws IOException {InputStream in = new FileInputStream(src);OutputStream out = new FileOutputStream(dst);byte[] buf = new byte[1024];int len;while ((len = in.read(buf)) > 0) out.write(buf, 0, len);in.close();out.close();}public byte[] loadResource(String location) throws IOException {if ((location == null) || (location.length() == 0)) {throw new IOException(""The given resource location must not be null and non empty."");}URL url = buildURL(location);URLConnection cxn = url.openConnection();InputStream is = null;try {byte[] byteBuffer = new byte[2048];ByteArrayOutputStream bos = new ByteArrayOutputStream(2048);is = cxn.getInputStream();int bytesRead = 0;while ((bytesRead = is.read(byteBuffer, 0, 2048)) >= 0) {bos.write(byteBuffer, 0, bytesRead);}return bos.toByteArray();} finally {if (is != null) {is.close();}}}public boolean resourceExists(String location) {if ((location == null) || (location.length() == 0)) {return false;}try {URL url = buildURL(location);URLConnection cxn = url.openConnection();InputStream is = null;try {byte[] byteBuffer = new byte[2048];is = cxn.getInputStream();while (is.read(byteBuffer, 0, 2048) >= 0) ;return true;} finally {if (is != null) {is.close();}}} catch (IOException ex) {return false;}}public void startElement(String uri, String tag, String qName, org.xml.sax.Attributes attributes) throws SAXException {wabclient.Attributes prop = new wabclient.Attributes(attributes);try {if (tag.equals(""window"")) {if (prop == null) {System.err.println(""window without properties"");return;}int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);Color bgcolor = prop.getValue(""bgcolor"", Color.white);String caption = prop.getValue(""caption"", """");layout = prop.getValue(""layout"", 0);boolean statusbar = prop.getValue(""statusbar"", false);if (sheet.opentype == WABSheet.LAYERED) {Point pos = frame.getNextMDIPos();sheet.setBounds(pos.x, pos.y, 400, 200);sheet.setNormalBounds(new Rectangle(pos.x, pos.y, 400, 200));} else {sheet.setBounds(x, y, width, height);sheet.setNormalBounds(new Rectangle(x, y, width, height));}if (sheet.opentype == WABSheet.MAXIMIZED) sheet.setMaximum(true); else sheet.setMaximum(false);sheet.setTitle(caption);frame.addSheetToMenu(caption);sheet.setBackground(bgcolor);if (layout == 1) sheet.getContentPane().setLayout(new FlowLayout()); else if (layout == 2) sheet.getContentPane().setLayout(new BorderLayout()); else sheet.getContentPane().setLayout(null);} else if (tag.equals(""menu"")) {if (prop == null) {System.err.println(""menu without properties"");return;}String id = prop.getValue(""id"", """");String label = prop.getValue(""label"", """");if ((id != null && id.equals(""WINDOW_MENU"") || label.equalsIgnoreCase(""window""))) {windowMenu = new JMenu();menu = windowMenu;sheet.setWindowMenu(menu);} else {menu = new JMenu();}menu.setText(label);sheet.menubar.add(menu);} else if (tag.equals(""menuitem"")) {if (prop == null) {System.err.println(""menuitem without properties"");return;}JMenuItem item;String action = prop.getValue(""action"", """");String label = prop.getValue(""label"", """");boolean visible = prop.getValue(""visible"", true);String icon = prop.getValue(""icon"", """");if (action.equals(""WINDOW_OVERLAPPED"")) {item = windowMenuOverlapped = new JMenuItem();item.setActionCommand(""10001"");item.addActionListener(frame);} else if (action.equals(""WINDOW_TILE_HORIZONTALLY"")) {item = windowMenuTile = new JMenuItem();item.setActionCommand(""10002"");item.addActionListener(frame);} else if (action.equals(""WINDOW_TILE_VERTICALLY"")) {item = windowMenuArrange = new JMenuItem();item.setActionCommand(""10003"");item.addActionListener(frame);} else {item = new JMenuItem();item.setActionCommand(action);item.addActionListener((WABClient) global);}item.setText(label);if (!visible) menu.setVisible(false);menu.add(item);if (frame.getToolBar() != null) {if (icon.length() > 0) {try {ImageIcon img = new ImageIcon(new URL(icon));BufferedImage image = new BufferedImage(25, 25, BufferedImage.TYPE_4BYTE_ABGR);Graphics g = image.createGraphics();g.setColor(new Color(0, 0, 0, 0));g.fillRect(0, 0, 25, 25);g.drawImage(img.getImage(), 4, 4, 16, 16, (ImageObserver) null);BufferedImage pressed = new BufferedImage(25, 25, BufferedImage.TYPE_4BYTE_ABGR);g = pressed.createGraphics();g.setColor(new Color(0, 0, 0, 0));g.fillRect(0, 0, 25, 25);g.drawImage(img.getImage(), 5, 5, 16, 16, (ImageObserver) null);g.setColor(new Color(132, 132, 132));g.drawLine(0, 0, 24, 0);g.drawLine(0, 0, 0, 24);g.setColor(new Color(255, 255, 255));g.drawLine(24, 24, 24, 0);g.drawLine(24, 24, 0, 24);BufferedImage over = new BufferedImage(25, 25, BufferedImage.TYPE_4BYTE_ABGR);g = over.createGraphics();g.setColor(new Color(0, 0, 0, 0));g.fillRect(0, 0, 25, 25);g.drawImage(img.getImage(), 4, 4, 16, 16, (ImageObserver) null);g.setColor(new Color(255, 255, 255));g.drawLine(0, 0, 24, 0);g.drawLine(0, 0, 0, 24);g.setColor(new Color(132, 132, 132));g.drawLine(24, 24, 24, 0);g.drawLine(24, 24, 0, 24);JButton b = new JButton(new ImageIcon(image));b.setRolloverEnabled(true);b.setPressedIcon(new ImageIcon(pressed));b.setRolloverIcon(new ImageIcon(over));b.setToolTipText(label);b.setActionCommand(action);b.setFocusPainted(false);b.setBorderPainted(false);b.setContentAreaFilled(false);b.setMargin(new Insets(0, 0, 0, 0));b.addActionListener(sheet);sheet.toolbar.add(b);} catch (Exception e) {}}}} else if (tag.equals(""separator"")) {menu.addSeparator();} else if (tag.equals(""choice"")) {if (prop == null) {System.err.println(""choice without properties"");return;}combo = new JComboBox();list = null;int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String id = prop.getValue(""id"", """");Object constraints = prop.getValue(""constraints"");boolean editable = prop.getValue(""editable"", false);boolean visible = prop.getValue(""visible"", true);boolean enabled = prop.getValue(""enabled"", true);combo_text = prop.getValue(""text"", """");combo.setBounds(x, y, width, height);combo.setName((String) id);if (editable) {combo.setEditable(editable);combo.setSelectedItem(combo_text);}if (!visible) combo.setVisible(false);if (!enabled) combo.setEnabled(false);if (layout == 0) sheet.getContentPane().add(combo); else sheet.getContentPane().add(combo, constraints);} else if (tag.equals(""list"")) {if (prop == null) {System.err.println(""list without properties"");return;}list = new JList();combo = null;listdata = new Vector();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String id = prop.getValue(""id"", """");Object constraints = prop.getValue(""constraints"");list.setName((String) id);list.setListData(listdata);JScrollPane sp = new JScrollPane(list);sp.setBounds(x, y, width, height);if (layout == 0) sheet.getContentPane().add(sp); else sheet.getContentPane().add(sp, constraints);} else if (tag.equals(""option"")) {if (prop == null) {System.err.println(""choice.option without properties"");return;}String value = prop.getValue(""value"", """");String text = prop.getValue(""text"", """");if (list != null) listdata.addElement(new ComboOption(text, value));if (combo != null) {ComboOption co = new ComboOption(text, value);combo.addItem(co);if (combo_text.equals(text.trim())) combo.setSelectedItem(co);}} else if (tag.equals(""label"")) {if (prop == null) {System.err.println(""label without properties"");return;}JLabel label = new JLabel();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String text = prop.getValue(""text"", """");Object constraints = prop.getValue(""constraints"");boolean visible = prop.getValue(""visible"", true);label.setBounds(x, y, width, height);label.setText(text);if (!visible) label.setVisible(false);if (layout == 0) sheet.getContentPane().add(label); else sheet.getContentPane().add(label, constraints);} else if (tag.equals(""button"")) {if (prop == null) {System.err.println(""button without properties"");return;}JButton btn = new JButton();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String id = prop.getValue(""id"", """");String text = prop.getValue(""text"", """");String onmouseup = prop.getValue(""onmouseup"", """");Object constraints = prop.getValue(""constraints"");btn.setBounds(x, y, width, height);btn.setText(text);btn.addActionListener(sheet);btn.setActionCommand(onmouseup);if (layout == 0) sheet.getContentPane().add(btn); else sheet.getContentPane().add(btn, constraints);} else if (tag.equals(""radiobutton"")) {if (prop == null) {System.err.println(""radiobutton without properties"");return;}JRadioButton rb = new JRadioButton();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String id = prop.getValue(""id"", """");String text = prop.getValue(""text"", """");Object constraints = prop.getValue(""constraints"");String checked = prop.getValue(""checked"", ""false"");rb.setBounds(x, y, width, height);rb.setText(text);rb.setName((String) id);rb.addActionListener(sheet);rb.setSelected(checked.equalsIgnoreCase(""true""));if (layout == 0) sheet.getContentPane().add(rb); else sheet.getContentPane().add(rb, constraints);} else if (tag.equals(""checkbox"")) {if (prop == null) {System.err.println(""checkbox without properties"");return;}JCheckBox cb = new JCheckBox();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String id = prop.getValue(""id"", """");String text = prop.getValue(""text"", """");String onmouseup = prop.getValue(""onmouseup"", """");Object constraints = prop.getValue(""constraints"");String checked = prop.getValue(""checked"", ""false"");cb.setBounds(x, y, width, height);cb.setText(text);cb.setName((String) id);cb.setSelected(checked.equalsIgnoreCase(""true""));if (layout == 0) sheet.getContentPane().add(cb); else sheet.getContentPane().add(cb, constraints);} else if (tag.equals(""image"")) {if (prop == null) {System.err.println(""image without properties"");return;}JLabel label = new JLabel();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String src = prop.getValue(""src"", """");Object constraints = prop.getValue(""constraints"");label.setIcon(new ImageIcon(new URL(src)));label.setBounds(x, y, width, height);if (layout == 0) sheet.getContentPane().add(label); else sheet.getContentPane().add(label, constraints);} else if (tag.equals(""singlelineedit"")) {if (prop == null) {System.err.println(""singlelineedit without properties"");return;}String pwd = prop.getValue(""password"", """");JTextField sle;if (pwd.equalsIgnoreCase(""true"")) sle = new JPasswordField(); else sle = new JTextField();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);Object id = prop.getValue(""id"");String text = prop.getValue(""text"", """");Object constraints = prop.getValue(""constraints"");sle.setBounds(x, y, width, height);sle.setText(text);sle.setName((String) id);if (layout == 0) sheet.getContentPane().add(sle); else sheet.getContentPane().add(sle, constraints);} else if (tag.equals(""treeview"")) {if (prop == null) {System.err.println(""treeview without properties"");return;}treeview_root = new DefaultMutableTreeNode(""root"");treeview = new JTree(treeview_root);Object constraints = prop.getValue(""constraints"");sheet.getContentPane().add(new JScrollPane(treeview), constraints);} else if (tag.equals(""treeitem"")) {if (prop == null) {System.err.println(""treeview.treeitem without properties"");return;}String text = prop.getValue(""text"", """");String value = prop.getValue(""value"", """");DefaultMutableTreeNode node = new DefaultMutableTreeNode(text);treeview_root.add(node);} else if (tag.equals(""table"")) {if (prop == null) {System.err.println(""table without properties"");return;}String id = prop.getValue(""id"", """");table = new JTable();model = new DefaultTableModel() {public boolean isCellEditable(int row, int col) {return false;}};table.setModel(model);table.setName((String) id);Object constraints = prop.getValue(""constraints"");sheet.getContentPane().add(new JScrollPane(table), constraints);rowNumber = 0;columnNumber = 0;headerWidths = new Vector();} else if (tag.equals(""header"")) {if (prop == null) {System.err.println(""table.header without properties"");return;}String text = prop.getValue(""text"", """");int width = prop.getValue(""width"", 0);headerWidths.addElement(new Integer(width));model.addColumn(text);} else if (tag.equals(""row"")) {rowNumber++;columnNumber = 0;model.setRowCount(rowNumber);} else if (tag.equals(""column"")) {columnNumber++;if (prop == null) {System.err.println(""table.column without properties"");return;}String value = prop.getValue(""value"", """");model.setValueAt(value, rowNumber - 1, columnNumber - 1);} else if (tag.equals(""script"")) {sheet.beginScript();String url = prop.getValue(""src"");if (url.length() > 0) {try {BufferedReader r = new BufferedReader(new InputStreamReader(new URL(url).openStream()));String buffer;while (true) {buffer = r.readLine();if (buffer == null) break;sheet.script += buffer + ""\n"";}r.close();sheet.endScript();} catch (IOException ioe) {System.err.println(""[IOError] "" + ioe.getMessage());System.exit(0);}}} else System.err.println(""[sheet] unparsed tag: "" + tag);} catch (Exception e) {e.printStackTrace(System.err);}}public static String encrypt(final String pass) {try {final MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(pass.getBytes(""UTF-8""));return new String(Base64.encodeBase64(md.digest()));} catch (final Exception e) {throw new RuntimeException(""No se pudo encriptar el password."", e);}}public Object process(Atom oAtm) throws IOException {File oFile;FileReader oFileRead;String sPathHTML;char cBuffer[];Object oReplaced;final String sSep = System.getProperty(""file.separator"");if (DebugFile.trace) {DebugFile.writeln(""Begin FileDumper.process([Job:"" + getStringNull(DB.gu_job, """") + "", Atom:"" + String.valueOf(oAtm.getInt(DB.pg_atom)) + ""])"");DebugFile.incIdent();}if (bHasReplacements) {sPathHTML = getProperty(""workareasput"");if (!sPathHTML.endsWith(sSep)) sPathHTML += sSep;sPathHTML += getParameter(""gu_workarea"") + sSep + ""apps"" + sSep + ""Mailwire"" + sSep + ""html"" + sSep + getParameter(""gu_pageset"") + sSep;sPathHTML += getParameter(""nm_pageset"").replace(' ', '_') + "".html"";if (DebugFile.trace) DebugFile.writeln(""PathHTML = "" + sPathHTML);oReplaced = oReplacer.replace(sPathHTML, oAtm.getItemMap());bHasReplacements = (oReplacer.lastReplacements() > 0);} else {oReplaced = null;if (null != oFileStr) oReplaced = oFileStr.get();if (null == oReplaced) {sPathHTML = getProperty(""workareasput"");if (!sPathHTML.endsWith(sSep)) sPathHTML += sSep;sPathHTML += getParameter(""gu_workarea"") + sSep + ""apps"" + sSep + ""Mailwire"" + sSep + ""html"" + sSep + getParameter(""gu_pageset"") + sSep + getParameter(""nm_pageset"").replace(' ', '_') + "".html"";if (DebugFile.trace) DebugFile.writeln(""PathHTML = "" + sPathHTML);oFile = new File(sPathHTML);cBuffer = new char[new Long(oFile.length()).intValue()];oFileRead = new FileReader(oFile);oFileRead.read(cBuffer);oFileRead.close();if (DebugFile.trace) DebugFile.writeln(String.valueOf(cBuffer.length) + "" characters readed"");oReplaced = new String(cBuffer);oFileStr = new SoftReference(oReplaced);}}String sPathJobDir = getProperty(""storage"");if (!sPathJobDir.endsWith(sSep)) sPathJobDir += sSep;sPathJobDir += ""jobs"" + sSep + getParameter(""gu_workarea"") + sSep + getString(DB.gu_job) + sSep;FileWriter oFileWrite = new FileWriter(sPathJobDir + getString(DB.gu_job) + ""_"" + String.valueOf(oAtm.getInt(DB.pg_atom)) + "".html"", true);oFileWrite.write((String) oReplaced);oFileWrite.close();iPendingAtoms--;if (DebugFile.trace) {DebugFile.writeln(""End FileDumper.process([Job:"" + getStringNull(DB.gu_job, """") + "", Atom:"" + String.valueOf(oAtm.getInt(DB.pg_atom)) + ""])"");DebugFile.decIdent();}return oReplaced;}"	5
"private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException {if (m_obj.getAuditRecords().size() == 0) {return;}String dsId = m_pid.toURI() + ""/AUDIT"";String dsvId = dsId + ""/"" + DateUtility.convertDateToString(m_obj.getCreateDate());Entry dsEntry = m_feed.addEntry();dsEntry.setId(dsId);dsEntry.setTitle(""AUDIT"");dsEntry.setUpdated(m_obj.getCreateDate());dsEntry.addCategory(MODEL.STATE.uri, ""A"", null);dsEntry.addCategory(MODEL.CONTROL_GROUP.uri, ""X"", null);dsEntry.addCategory(MODEL.VERSIONABLE.uri, ""false"", null);dsEntry.addLink(dsvId, Link.REL_ALTERNATE);Entry dsvEntry = m_feed.addEntry();dsvEntry.setId(dsvId);dsvEntry.setTitle(""AUDIT.0"");dsvEntry.setUpdated(m_obj.getCreateDate());ThreadHelper.addInReplyTo(dsvEntry, m_pid.toURI() + ""/AUDIT"");dsvEntry.addCategory(MODEL.FORMAT_URI.uri, AUDIT1_0.uri, null);dsvEntry.addCategory(MODEL.LABEL.uri, ""Audit Trail for this object"", null);if (m_format.equals(ATOM_ZIP1_1)) {String name = ""AUDIT.0.xml"";try {m_zout.putNextEntry(new ZipEntry(name));Reader r = new StringReader(DOTranslationUtility.getAuditTrail(m_obj));IOUtils.copy(r, m_zout, m_encoding);m_zout.closeEntry();r.close();} catch (IOException e) {throw new StreamIOException(e.getMessage(), e);}IRI iri = new IRI(name);dsvEntry.setSummary(""AUDIT.0"");dsvEntry.setContent(iri, ""text/xml"");} else {dsvEntry.setContent(DOTranslationUtility.getAuditTrail(m_obj), ""text/xml"");}}private void setInlineXML(Entry entry, DatastreamXMLMetadata ds) throws UnsupportedEncodingException, StreamIOException {String content;if (m_obj.hasContentModel(Models.SERVICE_DEPLOYMENT_3_0) && (ds.DatastreamID.equals(""SERVICE-PROFILE"") || ds.DatastreamID.equals(""WSDL""))) {content = DOTranslationUtility.normalizeInlineXML(new String(ds.xmlContent, m_encoding), m_transContext);} else {content = new String(ds.xmlContent, m_encoding);}if (m_format.equals(ATOM_ZIP1_1)) {String name = ds.DSVersionID + "".xml"";try {m_zout.putNextEntry(new ZipEntry(name));InputStream is = new ByteArrayInputStream(content.getBytes(m_encoding));IOUtils.copy(is, m_zout);m_zout.closeEntry();is.close();} catch (IOException e) {throw new StreamIOException(e.getMessage(), e);}IRI iri = new IRI(name);entry.setSummary(ds.DSVersionID);entry.setContent(iri, ds.DSMIME);} else {entry.setContent(content, ds.DSMIME);}}private void setManagedContent(Entry entry, Datastream vds) throws StreamIOException {if (m_transContext == DOTranslationUtility.SERIALIZE_EXPORT_ARCHIVE && !m_format.equals(ATOM_ZIP1_1)) {String mimeType = vds.DSMIME;if (MimeTypeHelper.isText(mimeType) || MimeTypeHelper.isXml(mimeType)) {try {entry.setContent(IOUtils.toString(vds.getContentStream(), m_encoding), mimeType);} catch (IOException e) {throw new StreamIOException(e.getMessage(), e);}} else {entry.setContent(vds.getContentStream(), mimeType);}} else {String dsLocation;IRI iri;if (m_format.equals(ATOM_ZIP1_1) && m_transContext != DOTranslationUtility.AS_IS) {dsLocation = vds.DSVersionID + ""."" + MimeTypeUtils.fileExtensionForMIMEType(vds.DSMIME);try {m_zout.putNextEntry(new ZipEntry(dsLocation));IOUtils.copy(vds.getContentStream(), m_zout);m_zout.closeEntry();} catch (IOException e) {throw new StreamIOException(e.getMessage(), e);}} else {dsLocation = StreamUtility.enc(DOTranslationUtility.normalizeDSLocationURLs(m_obj.getPid(), vds, m_transContext).DSLocation);}iri = new IRI(dsLocation);entry.setSummary(vds.DSVersionID);entry.setContent(iri, vds.DSMIME);}}public static byte[] hash(String identifier) {if (function.equals(""SHA-1"")) {try {MessageDigest md = MessageDigest.getInstance(function);md.reset();byte[] code = md.digest(identifier.getBytes());byte[] value = new byte[KEY_LENGTH / 8];int shrink = code.length / value.length;int bitCount = 1;for (int j = 0; j < code.length * 8; j++) {int currBit = ((code[j / 8] & (1 << (j % 8))) >> j % 8);if (currBit == 1) bitCount++;if (((j + 1) % shrink) == 0) {int shrinkBit = (bitCount % 2 == 0) ? 0 : 1;value[j / shrink / 8] |= (shrinkBit << ((j / shrink) % 8));bitCount = 1;}}return value;} catch (Exception e) {e.printStackTrace();}}if (function.equals(""CRC32"")) {CRC32 crc32 = new CRC32();crc32.reset();crc32.update(identifier.getBytes());long code = crc32.getValue();code &= (0xffffffffffffffffL >>> (64 - KEY_LENGTH));byte[] value = new byte[KEY_LENGTH / 8];for (int i = 0; i < value.length; i++) {value[value.length - i - 1] = (byte) ((code >> 8 * i) & 0xff);}return value;}if (function.equals(""Java"")) {int code = identifier.hashCode();code &= (0xffffffff >>> (32 - KEY_LENGTH));byte[] value = new byte[KEY_LENGTH / 8];for (int i = 0; i < value.length; i++) {value[value.length - i - 1] = (byte) ((code >> 8 * i) & 0xff);}return value;}return null;}public void print(PrintWriter out) {out.println(""<?xml version=\""1.0\""?>\n"" + ""<?xml-stylesheet type=\""text/xsl\"" href=\""http://www.urbigene.com/foaf/foaf2html.xsl\"" ?>\n"" + ""<rdf:RDF \n"" + ""xml:lang=\""en\"" \n"" + ""xmlns:rdf=\""http://www.w3.org/1999/02/22-rdf-syntax-ns#\""  \n"" + ""xmlns:rdfs=\""http://www.w3.org/2000/01/rdf-schema#\"" \n"" + ""xmlns=\""http://xmlns.com/foaf/0.1/\"" \n"" + ""xmlns:foaf=\""http://xmlns.com/foaf/0.1/\"" \n"" + ""xmlns:dc=\""http://purl.org/dc/elements/1.1/\"">\n"");out.println(""<!-- generated with SciFoaf http://www.urbigene.com/foaf -->"");if (this.mainAuthor == null && this.authors.getAuthorCount() > 0) {this.mainAuthor = this.authors.getAuthorAt(0);}if (this.mainAuthor != null) {out.println(""<foaf:PersonalProfileDocument rdf:about=\""\"">\n"" + ""\t<foaf:primaryTopic rdf:nodeID=\"""" + this.mainAuthor.getID() + ""\""/>\n"" + ""\t<foaf:maker rdf:resource=\""mailto:plindenbaum@yahoo.fr\""/>\n"" + ""\t<dc:title>FOAF for "" + XMLUtilities.escape(this.mainAuthor.getName()) + ""</dc:title>\n"" + ""\t<dc:description>\n"" + ""\tFriend-of-a-Friend description for "" + XMLUtilities.escape(this.mainAuthor.getName()) + ""\n"" + ""\t</dc:description>\n"" + ""</foaf:PersonalProfileDocument>\n\n"");}for (int i = 0; i < this.laboratories.size(); ++i) {Laboratory lab = this.laboratories.getLabAt(i);out.println(""<foaf:Group rdf:ID=\""laboratory_ID"" + i + ""\"" >"");out.println(""\t<foaf:name>"" + XMLUtilities.escape(lab.toString()) + ""</foaf:name>"");for (int j = 0; j < lab.getAuthorCount(); ++j) {out.println(""\t<foaf:member rdf:resource=\""#"" + lab.getAuthorAt(j).getID() + ""\"" />"");}out.println(""</foaf:Group>\n\n"");}for (int i = 0; i < this.authors.size(); ++i) {Author author = authors.getAuthorAt(i);out.println(""<foaf:Person rdf:ID=\"""" + xmlName(author.getID()) + ""\"" >"");out.println(""\t<foaf:name>"" + xmlName(author.getName()) + ""</foaf:name>"");out.println(""\t<foaf:title>Dr</foaf:title>"");out.println(""\t<foaf:family_name>"" + xmlName(author.getLastName()) + ""</foaf:family_name>"");if (author.getForeName() != null && author.getForeName().length() > 2) {out.println(""\t<foaf:firstName>"" + xmlName(author.getForeName()) + ""</foaf:firstName>"");}String prop = author.getProperty(""foaf:mbox"");if (prop != null) {String tokens[] = prop.split(""[\t ]+"");for (int j = 0; j < tokens.length; ++j) {if (tokens[j].trim().length() == 0) continue;if (tokens[j].equals(""mailto:"")) continue;if (!tokens[j].startsWith(""mailto:"")) tokens[j] = ""mailto:"" + tokens[j];try {MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(tokens[j].getBytes());byte[] digest = md.digest();out.print(""\t<foaf:mbox_sha1sum>"");for (int k = 0; k < digest.length; k++) {String hex = Integer.toHexString(digest[k]);if (hex.length() == 1) hex = ""0"" + hex;hex = hex.substring(hex.length() - 2);out.print(hex);}out.println(""</foaf:mbox_sha1sum>"");} catch (Exception err) {out.println(""\t<foaf:mbox rdf:resource=\"""" + tokens[j] + ""\"" />"");}}}prop = author.getProperty(""foaf:nick"");if (prop != null) {String tokens[] = prop.split(""[\t ]+"");for (int j = 0; j < tokens.length; ++j) {if (tokens[j].trim().length() == 0) continue;out.println(""\t<foaf:surname>"" + XMLUtilities.escape(tokens[j]) + ""</foaf:surname>"");}}prop = author.getProperty(""foaf:homepage"");if (prop != null) {String tokens[] = prop.split(""[\t ]+"");for (int j = 0; j < tokens.length; ++j) {if (!tokens[j].trim().startsWith(""http://"")) continue;if (tokens[j].trim().equals(""http://"")) continue;out.println(""\t<foaf:homepage  rdf:resource=\"""" + XMLUtilities.escape(tokens[j].trim()) + ""\""/>"");}}out.println(""\t<foaf:publications rdf:resource=\""http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?db=pubmed&amp;cmd=Search&amp;itool=pubmed_Abstract&amp;term="" + author.getTerm() + ""\""/>"");prop = author.getProperty(""foaf:img"");if (prop != null) {String tokens[] = prop.split(""[\t ]+"");for (int j = 0; j < tokens.length; ++j) {if (!tokens[j].trim().startsWith(""http://"")) continue;if (tokens[j].trim().equals(""http://"")) continue;out.println(""\t<foaf:depiction rdf:resource=\"""" + XMLUtilities.escape(tokens[j].trim()) + ""\""/>"");}}AuthorList knows = this.whoknowwho.getKnown(author);for (int j = 0; j < knows.size(); ++j) {out.println(""\t<foaf:knows rdf:resource=\""#"" + xmlName(knows.getAuthorAt(j).getID()) + ""\"" />"");}Paper publications[] = this.papers.getAuthorPublications(author).toArray();if (!(publications.length == 0)) {HashSet meshes = new HashSet();for (int j = 0; j < publications.length; ++j) {meshes.addAll(publications[j].meshTerms);}for (Iterator itermesh = meshes.iterator(); itermesh.hasNext(); ) {MeshTerm meshterm = (MeshTerm) itermesh.next();out.println(""\t<foaf:interest>\n"" + ""\t\t<rdf:Description rdf:about=\"""" + meshterm.getURL() + ""\"">\n"" + ""\t\t\t<dc:title>"" + XMLUtilities.escape(meshterm.toString()) + ""</dc:title>\n"" + ""\t\t</rdf:Description>\n"" + ""\t</foaf:interest>"");}}out.println(""</foaf:Person>\n\n"");}Paper paperarray[] = this.papers.toArray();for (int i = 0; i < paperarray.length; ++i) {out.println(""<foaf:Document rdf:about=\""http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&amp;db=pubmed&amp;dopt=Abstract&amp;list_uids="" + paperarray[i].getPMID() + ""\"">"");out.println(""<dc:title>"" + XMLUtilities.escape(paperarray[i].getTitle()) + ""</dc:title>"");for (Iterator iter = paperarray[i].authors.iterator(); iter.hasNext(); ) {Author author = (Author) iter.next();out.println(""<dc:author rdf:resource=\""#"" + XMLUtilities.escape(author.getID()) + ""\""/>"");}out.println(""</foaf:Document>"");}out.println(""</rdf:RDF>"");}public static void unzip(final File file, final ZipFile zipFile, final File targetDirectory) throws PtException {LOG.info(""Unzipping zip file '"" + file.getAbsolutePath() + ""' to directory "" + ""'"" + targetDirectory.getAbsolutePath() + ""'."");assert (file.exists() && file.isFile());if (targetDirectory.exists() == false) {LOG.debug(""Creating target directory."");if (targetDirectory.mkdirs() == false) {throw new PtException(""Could not create target directory at "" + ""'"" + targetDirectory.getAbsolutePath() + ""'!"");}}ZipInputStream zipin = null;try {zipin = new ZipInputStream(new FileInputStream(file));ZipEntry nextZipEntry = zipin.getNextEntry();while (nextZipEntry != null) {LOG.debug(""Unzipping entry '"" + nextZipEntry.getName() + ""'."");if (nextZipEntry.isDirectory()) {LOG.debug(""Skipping directory."");continue;}final File targetFile = new File(targetDirectory, nextZipEntry.getName());final File parentTargetFile = targetFile.getParentFile();if (parentTargetFile.exists() == false) {LOG.debug(""Creating directory '"" + parentTargetFile.getAbsolutePath() + ""'."");if (parentTargetFile.mkdirs() == false) {throw new PtException(""Could not create target directory at "" + ""'"" + parentTargetFile.getAbsolutePath() + ""'!"");}}InputStream input = null;FileOutputStream output = null;try {input = zipFile.getInputStream(nextZipEntry);if (targetFile.createNewFile() == false) {throw new PtException(""Could not create target file "" + ""'"" + targetFile.getAbsolutePath() + ""'!"");}output = new FileOutputStream(targetFile);byte[] buffer = new byte[BUFFER_SIZE];int readBytes = input.read(buffer, 0, buffer.length);while (readBytes > 0) {output.write(buffer, 0, readBytes);readBytes = input.read(buffer, 0, buffer.length);}} finally {PtCloseUtil.close(input, output);}nextZipEntry = zipin.getNextEntry();}} catch (IOException e) {throw new PtException(""Could not unzip file '"" + file.getAbsolutePath() + ""'!"", e);} finally {PtCloseUtil.close(zipin);}}public static void main(String[] args) throws IOException {String uri = ""hdfs://localhost:8020/user/leeing/maxtemp/sample.txt"";Configuration conf = new Configuration();FileSystem fs = FileSystem.get(URI.create(uri), conf);InputStream in = null;try {in = fs.open(new Path(uri));IOUtils.copyBytes(in, System.out, 8192, false);} finally {IOUtils.closeStream(in);}}@Overrideprotected ModelAndView handleRequestInternal(final HttpServletRequest request, final HttpServletResponse response) throws Exception {final String filename = ServletRequestUtils.getRequiredStringParameter(request, ""id"");final File file = new File(path, filename + "".html"");logger.debug(""Getting static content from: "" + file.getPath());final InputStream is = getServletContext().getResourceAsStream(file.getPath());OutputStream out = null;if (is != null) {try {out = response.getOutputStream();IOUtils.copy(is, out);} catch (IOException ioex) {logger.error(ioex);} finally {is.close();if (out != null) {out.close();}}}return null;}public String readLines() {StringBuffer lines = new StringBuffer();try {int HttpResult;URL url = new URL(address);URLConnection urlconn = url.openConnection();urlconn.connect();HttpURLConnection httpconn = (HttpURLConnection) urlconn;HttpResult = httpconn.getResponseCode();if (HttpResult != HttpURLConnection.HTTP_OK) {System.out.println(""�޷����ӵ�"" + address);} else {BufferedReader reader = new BufferedReader(new InputStreamReader(urlconn.getInputStream()));while (true) {String line = reader.readLine();if (line == null) break;lines.append(line + ""\r\n"");}reader.close();}} catch (Exception e) {e.printStackTrace();}return lines.toString();}public boolean copy(long id) {boolean bool = false;this.result = null;Connection conn = null;Object vo = null;try {PojoParser parser = PojoParser.getInstances();conn = ConnectUtil.getConnect();conn.setAutoCommit(false);String sql = SqlUtil.getInsertSql(this.getCls());vo = this.findById(conn, ""select * from "" + parser.getTableName(cls) + "" where "" + parser.getPriamryKey(cls) + ""="" + id);String pk = parser.getPriamryKey(cls);this.getClass().getMethod(""set"" + SqlUtil.getFieldName(pk), new Class[] { long.class }).invoke(vo, new Object[] { 0 });PreparedStatement ps = conn.prepareStatement(sql);setPsParams(ps, vo);ps.executeUpdate();ps.close();conn.commit();bool = true;} catch (Exception e) {try {conn.rollback();} catch (Exception ex) {}this.result = e.getMessage();} finally {this.closeConnectWithTransaction(conn);}return bool;}"	5
"public String getRandomGUID() {MessageDigest md5 = null;String valueBeforeMD5 = """";String retValue = """";try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}StringBuffer sbValueBeforeMD5 = new StringBuffer();try {InetAddress id = InetAddress.getLocalHost();long time = System.currentTimeMillis();long rand = 0;rand = random.nextLong();sbValueBeforeMD5.append(id.toString());sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) {sb.append('0');}sb.append(Integer.toHexString(b));}retValue = sb.toString();} catch (UnknownHostException e) {System.out.println(""Error:"" + e);}return retValue;}public static String encrypt(String password) {String sign = password;try {java.security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");md.update(sign.getBytes());byte[] hash = md.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < hash.length; i++) {if ((0xff & hash[i]) < 0x10) hexString.append(""0"" + Integer.toHexString((0xFF & hash[i]))); else hexString.append(Integer.toHexString(0xFF & hash[i]));}sign = hexString.toString();} catch (Exception nsae) {nsae.printStackTrace();}return sign;}public static String encode(String username, String password) {try {MessageDigest digest = MessageDigest.getInstance(""SHA-1"");digest.update(username.getBytes());digest.update(password.getBytes());return new String(digest.digest());} catch (Exception e) {Log.error(""Error encrypting credentials"", e);}return null;}public String process(URL url) throws IOException {String line, results = """";InputStream is = url.openStream();BufferedReader dis = new BufferedReader(new InputStreamReader(is));while ((line = dis.readLine()) != null) {results += line + ""\n"";}System.out.println(results);return results;}public String readTemplateToString(String fileName) {URL url = null;url = classLoader.getResource(fileName);StringBuffer content = new StringBuffer();if (url == null) {String error = ""Template file could not be found: "" + fileName;throw new RuntimeException(error);}try {BufferedReader breader = new BufferedReader(new InputStreamReader(url.openStream(), ""UTF-8""));String strLine = """";while ((strLine = breader.readLine()) != null) {content.append(strLine).append(""\n"");}breader.close();} catch (Exception e) {throw new RuntimeException(""Problem while loading file: "" + fileName);}return content.toString();}public synchronized String encrypt(String plaintext) throws SystemUnavailableException {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {throw new SystemUnavailableException(e.getMessage());}try {md.update(plaintext.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {throw new SystemUnavailableException(e.getMessage());}byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}private void loadProperties() {if (properties == null) {properties = new Properties();try {URL url = getClass().getResource(propsFile);properties.load(url.openStream());} catch (IOException ioe) {ioe.printStackTrace();}}}private DialogHelper(String title, final URL imageURL) {jd = new JDialog();jd.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);jd.setAlwaysOnTop(true);jd.setLayout(new BoxLayout(jd.getContentPane(), BoxLayout.Y_AXIS));jd.setTitle(title);JLabel jl = new JLabel();ImageIcon icon = new ImageIcon(imageURL);jl.setIcon(icon);jd.add(new JScrollPane(jl));final JFileChooser chooser = getSaveImageChooser();JPanel jp = new JPanel();JButton jb = new JButton(getMessage(""btn_save_as""));jb.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {int returnVal = chooser.showSaveDialog(jd);if (returnVal == JFileChooser.APPROVE_OPTION) {File file = chooser.getSelectedFile();String fileName = file.getPath();String ext = StringUtil.getLowerExtension(fileName);if (!""png"".equals(ext)) {fileName += "".png"";file = new File(fileName);}boolean doIt = true;if (file.exists()) {int i = JOptionPane.showConfirmDialog(jd, getMessage(""warn_file_exist""));if (i != JOptionPane.YES_OPTION) doIt = false;} else if (!file.getParentFile().exists()) {doIt = file.getParentFile().mkdirs();}if (doIt) {FileChannel src = null;FileChannel dest = null;try {src = new FileInputStream(imageURL.getPath()).getChannel();dest = new FileOutputStream(fileName).getChannel();src.transferTo(0, src.size(), dest);} catch (FileNotFoundException e1) {warn(jd, getMessage(""err_no_source_file""));} catch (IOException e2) {warn(jd, getMessage(""err_output_target""));} finally {try {if (src != null) src.close();} catch (IOException e1) {}try {if (dest != null) dest.close();} catch (IOException e1) {}src = null;dest = null;}}}}});jp.add(jb);jb = new JButton(getMessage(""btn_close""));jb.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {jd.dispose();}});jp.add(jb);jd.add(jp);jd.pack();setCentral(jd);}public void actionPerformed(ActionEvent e) {int returnVal = chooser.showSaveDialog(jd);if (returnVal == JFileChooser.APPROVE_OPTION) {File file = chooser.getSelectedFile();String fileName = file.getPath();String ext = StringUtil.getLowerExtension(fileName);if (!""png"".equals(ext)) {fileName += "".png"";file = new File(fileName);}boolean doIt = true;if (file.exists()) {int i = JOptionPane.showConfirmDialog(jd, getMessage(""warn_file_exist""));if (i != JOptionPane.YES_OPTION) doIt = false;} else if (!file.getParentFile().exists()) {doIt = file.getParentFile().mkdirs();}if (doIt) {FileChannel src = null;FileChannel dest = null;try {src = new FileInputStream(imageURL.getPath()).getChannel();dest = new FileOutputStream(fileName).getChannel();src.transferTo(0, src.size(), dest);} catch (FileNotFoundException e1) {warn(jd, getMessage(""err_no_source_file""));} catch (IOException e2) {warn(jd, getMessage(""err_output_target""));} finally {try {if (src != null) src.close();} catch (IOException e1) {}try {if (dest != null) dest.close();} catch (IOException e1) {}src = null;dest = null;}}}}public void test2() throws Exception {SpreadsheetDocument document = new SpreadsheetDocument();Sheet sheet = new Sheet(""Planilha 1"");sheet.setLandscape(true);Row row = new Row();row.setHeight(20);sheet.getMerges().add(new IntegerCellMerge(0, 0, 0, 5));sheet.getImages().add(new Image(new FileInputStream(""D:/image001.jpg""), 0, 0, ImageType.JPEG, 80, 60));for (int i = 0; i < 10; i++) {Cell cell = new Cell();cell.setValue(""Celula "" + i);cell.setBackgroundColor(new Color(192, 192, 192));cell.setUnderline(true);cell.setBold(true);cell.setItalic(true);cell.setFont(""Times New Roman"");cell.setFontSize(10);cell.setFontColor(new Color(255, 0, 0));Border border = new Border();border.setWidth(1);border.setColor(new Color(0, 0, 0));cell.setLeftBorder(border);cell.setTopBorder(border);cell.setRightBorder(border);cell.setBottomBorder(border);row.getCells().add(cell);sheet.getColumnsWith().put(new Integer(i), new Integer(25));}sheet.getRows().add(row);document.getSheets().add(sheet);FileOutputStream fos = new FileOutputStream(""D:/teste2.xls"");SpreadsheetDocumentWriter writer = HSSFSpreadsheetDocumentWriter.getInstance();writer.write(document, fos);fos.close();}"	5
"private void open() throws IOException {if (in != null) return;try {con = url.openConnection();in = con.getInputStream();} catch (IOException e) {if (cached.exists()) {LOG.fine(""Falling back to cached copy of wiki file "" + url);in = new FileInputStream(cached);con = null;return;}throw e;}try {tmp = new File(cached.getAbsolutePath() + "".tmp"");tmp.getParentFile().mkdirs();out = new FileOutputStream(tmp);} catch (IOException e) {LOG.fine(""can't write cached copy of wiki file "" + url);}}public static void uploadFile(String localPath, String hostname, String username, String password, String remotePath) {FTPClient ftpClient = new FTPClient();try {ftpClient.connect(hostname);int reply = ftpClient.getReplyCode();boolean success = false;if (FTPReply.isPositiveCompletion(reply)) {success = ftpClient.login(username, password);if (!success) {Output.error(""Failed to login with username/password "" + username + ""/"" + password);return;}ftpClient.enterLocalPassiveMode();ftpClient.setFileType(FTP.ASCII_FILE_TYPE);}FileInputStream in = new FileInputStream(localPath);boolean result = ftpClient.storeFile(remotePath, in);if (!result) {Output.error(""Logged in but failed to upload "" + localPath + "" to "" + remotePath + ""\nPerhaps one of the paths was wrong."");}in.close();ftpClient.disconnect();} catch (IOException ioe) {Output.error(""Error ftp'ing using "" + ""\nlocalPath: "" + localPath + ""\nhostname: "" + hostname + ""\nusername: "" + username + ""\npassword: "" + password + ""\nremotePath: "" + remotePath, ioe);}}private void loadProperties() {if (properties == null) {properties = new Properties();try {URL url = getClass().getResource(propsFile);if (url != null) properties.load(url.openStream());} catch (IOException ioe) {ioe.printStackTrace();}}}@Overrideprotected final void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {if (beforeServingFile(req, resp)) {String pathInfo = req.getPathInfo();Validate.notNull(pathInfo, ""the path info is null -> the sevlet should be mapped with /<mapping>/*"");String resurouce = pathInfo.substring(1);if (log.isDebugEnabled()) {log.debug(""resource to expose: "" + resurouce);}String extension = resurouce.substring(resurouce.lastIndexOf('.') + 1);MimeType mimeType = MimeTypeRegistry.getByExtension(extension);Validate.notNull(mimeType, ""no mimetype found for extension: "" + extension);if (log.isDebugEnabled()) {log.debug(""the mime type to set: "" + mimeType.getMimeType());}File f = new File(mappedFolder, resurouce);Validate.isTrue(f.exists(), ""file: "" + f + "" does not exist"");Validate.isTrue(f.canRead(), ""can not read the file: "" + f);if (log.isDebugEnabled()) {log.debug(""exposing the file: "" + f);}resp.setContentType(mimeType.getMimeType());FileInputStream fis = new FileInputStream(f);ServletOutputStream os = resp.getOutputStream();IOUtils.copy(fis, os);os.flush();IOUtils.closeQuietly(fis);IOUtils.closeQuietly(os);}}@Overridepublic DataTable generateDataTable(Query query, HttpServletRequest request) throws DataSourceException {String url = request.getParameter(URL_PARAM_NAME);if (StringUtils.isEmpty(url)) {log.error(""url parameter not provided."");throw new DataSourceException(ReasonType.INVALID_REQUEST, ""url parameter not provided"");}Reader reader;try {reader = new BufferedReader(new InputStreamReader(new URL(url).openStream()));} catch (MalformedURLException e) {log.error(""url is malformed: "" + url);throw new DataSourceException(ReasonType.INVALID_REQUEST, ""url is malformed: "" + url);} catch (IOException e) {log.error(""Couldn't read from url: "" + url, e);throw new DataSourceException(ReasonType.INVALID_REQUEST, ""Couldn't read from url: "" + url);}DataTable dataTable = null;ULocale requestLocale = DataSourceHelper.getLocaleFromRequest(request);try {dataTable = CsvDataSourceHelper.read(reader, null, true, requestLocale);} catch (IOException e) {log.error(""Couldn't read from url: "" + url, e);throw new DataSourceException(ReasonType.INVALID_REQUEST, ""Couldn't read from url: "" + url);}return dataTable;}public static String rename_file(String sessionid, String key, String newFileName) {String jsonstring = """";try {Log.d(""current running function name:"", ""rename_file"");HttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(""https://mt0-app.cloud.cm/rpc/json"");List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);nameValuePairs.add(new BasicNameValuePair(""c"", ""Storage""));nameValuePairs.add(new BasicNameValuePair(""m"", ""rename_file""));nameValuePairs.add(new BasicNameValuePair(""new_name"", newFileName));nameValuePairs.add(new BasicNameValuePair(""key"", key));httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));httppost.setHeader(""Cookie"", ""PHPSESSID="" + sessionid);HttpResponse response = httpclient.execute(httppost);jsonstring = EntityUtils.toString(response.getEntity());Log.d(""jsonStringReturned:"", jsonstring);return jsonstring;} catch (Exception e) {e.printStackTrace();}return jsonstring;}public static String rename_tag(String sessionid, String originalTag, String newTagName) {String jsonstring = """";try {Log.d(""current running function name:"", ""rename_tag"");HttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(""https://mt0-app.cloud.cm/rpc/json"");List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);nameValuePairs.add(new BasicNameValuePair(""c"", ""Storage""));nameValuePairs.add(new BasicNameValuePair(""m"", ""rename_tag""));nameValuePairs.add(new BasicNameValuePair(""new_tag_name"", newTagName));nameValuePairs.add(new BasicNameValuePair(""absolute_tag"", originalTag));httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));httppost.setHeader(""Cookie"", ""PHPSESSID="" + sessionid);HttpResponse response = httpclient.execute(httppost);jsonstring = EntityUtils.toString(response.getEntity());Log.d(""jsonStringReturned:"", jsonstring);return jsonstring;} catch (Exception e) {e.printStackTrace();}return jsonstring;}public static String upload_file(String sessionid, String localFilePath, String remoteTagPath) {String jsonstring = ""If you see this message, there is some problem inside the function:upload_file()"";String srcPath = localFilePath;String uploadUrl = ""https://s2.cloud.cm/rpc/json/?session_id="" + sessionid + ""&c=Storage&m=upload_file&tag="" + remoteTagPath;String end = ""\r\n"";String twoHyphens = ""--"";String boundary = ""******"";try {URL url = new URL(uploadUrl);HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();httpURLConnection.setDoInput(true);httpURLConnection.setDoOutput(true);httpURLConnection.setUseCaches(false);httpURLConnection.setRequestMethod(""POST"");httpURLConnection.setRequestProperty(""Connection"", ""Keep-Alive"");httpURLConnection.setRequestProperty(""Charset"", ""UTF-8"");httpURLConnection.setRequestProperty(""Content-Type"", ""multipart/form-data;boundary="" + boundary);DataOutputStream dos = new DataOutputStream(httpURLConnection.getOutputStream());dos.writeBytes(twoHyphens + boundary + end);dos.writeBytes(""Content-Disposition: form-data; name=\""file\""; filename=\"""" + srcPath.substring(srcPath.lastIndexOf(""/"") + 1) + ""\"""" + end);dos.writeBytes(end);FileInputStream fis = new FileInputStream(srcPath);byte[] buffer = new byte[8192];int count = 0;while ((count = fis.read(buffer)) != -1) {dos.write(buffer, 0, count);}fis.close();dos.writeBytes(end);dos.writeBytes(twoHyphens + boundary + twoHyphens + end);dos.flush();InputStream is = httpURLConnection.getInputStream();InputStreamReader isr = new InputStreamReader(is, ""utf-8"");BufferedReader br = new BufferedReader(isr);jsonstring = br.readLine();dos.close();is.close();return jsonstring;} catch (Exception e) {e.printStackTrace();}return jsonstring;}@Overridepublic void run() {Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);final String url = service.streamUrl.toString();InputStream stream = null;try {final URLConnection con = new URL(url).openConnection();con.setRequestProperty(""Icy-MetaData"", ""1"");con.setRequestProperty(""Connection"", ""close"");con.setRequestProperty(""Accept"", null);con.connect();stream = con.getInputStream();int metaDataOffset = -1;final Map<String, List<String>> headers = con.getHeaderFields();if (headers.containsKey(""icy-metaint"")) {metaDataOffset = Integer.parseInt(headers.get(""icy-metaint"").get(0));} else {final StringBuilder strHeaders = new StringBuilder();char c;while ((c = (char) stream.read()) != -1) {strHeaders.append(c);final int c5 = 5, c4 = 4;if (strHeaders.length() > c5 && ""\r\n\r\n"".equals(strHeaders.substring((strHeaders.length() - c4), strHeaders.length()))) {break;}}final Matcher m = PATTERN.matcher(strHeaders.toString());if (m.find()) {metaDataOffset = Integer.parseInt(m.group(2));}}if (metaDataOffset == -1) {throw new RuntimeException(""no data"");}final int bufSize = 4096;final byte[] buffer = new byte[bufSize];final int initialMetaLength = 1024;final StringBuilder metaData = new StringBuilder(initialMetaLength);int leftToSkip = metaDataOffset;while (true) {if (Thread.interrupted()) {throw new RuntimeException(""interrtupted"");}while (leftToSkip > 0) {final long actual = stream.skip(leftToSkip);leftToSkip -= actual;}int count = 0;int metaDataLength = 0;metaData.delete(0, metaData.length());int lastReadCount;while ((lastReadCount = stream.read(buffer)) != -1) {if (Thread.interrupted()) {throw new RuntimeException(""interrtupted"");}if (lastReadCount == 0) {continue;}if (count == 0) {final int paragraph = 16;metaDataLength = buffer[0] * paragraph;}final int startIndex = count == 0 ? 1 : 0;int length = count == 0 ? lastReadCount - 1 : lastReadCount;count += lastReadCount;if (count > metaDataLength) {length -= count - metaDataLength;if (count == lastReadCount) {length++;}}if (length > 0) {metaData.append(new String(buffer, startIndex, length, ""UTF-8""));}if (count > metaDataLength) {break;}}if (lastReadCount == -1) {break;}leftToSkip = metaDataOffset - (count - metaDataLength - 1);if (metaData.length() > 0) {service.updateAudioInfo(metaData.toString());}}} catch (final IOException e) {Log.e(TAG, ""IO error"", e);} catch (final RuntimeException e) {if (DEBUG) {Log.i(TAG, e.getMessage());}} finally {if (stream != null) {try {stream.close();} catch (final IOException e) {Log.e(TAG, ""Cannot close stream"", e);}}}}private void refreshCacheFile(RepositoryFile file, File cacheFile) throws FileNotFoundException, IOException {FileOutputStream fos = new FileOutputStream(cacheFile);InputStream is = file.getInputStream();int count = IOUtils.copy(is, fos);logger.debug(""===========================================================> wrote bytes to cache "" + count);fos.flush();IOUtils.closeQuietly(fos);IOUtils.closeQuietly(file.getInputStream());}"	5
"public void delete(String remoteFile) {String remotePath = connector.getRemoteDirectory();remotePath += PATH_SEPARATOR + remoteFile;FTPClient ftp = new FTPClient();try {String hostname = connector.getUrl().getHost();ftp.connect(hostname);log.info(""Connected to "" + hostname);log.info(ftp.getReplyString());boolean loggedIn = ftp.login(connector.getUsername(), connector.getPassword());if (loggedIn) {ftp.deleteFile(remotePath);ftp.logout();}ftp.disconnect();} catch (SocketException e) {log.error(""File chmod failed with message: "" + e.getMessage());} catch (IOException e) {log.error(""File chmod failed with message: "" + e.getMessage());} finally {if (ftp.isConnected()) {try {ftp.disconnect();} catch (IOException ioe) {}}}}public Map<String, String> getMetadata(WebFileObject fo) throws IOException {if (!fo.wfs.getRootURL().getProtocol().equals(""ftp"")) {String realName = fo.pathname;boolean exists;URL ur = new URL(fo.wfs.getRootURL(), realName);HttpURLConnection connect = (HttpURLConnection) ur.openConnection();connect.setRequestMethod(""HEAD"");HttpURLConnection.setFollowRedirects(false);connect.connect();HttpURLConnection.setFollowRedirects(true);if (connect.getResponseCode() == 303) {String surl = connect.getHeaderField(""Location"");if (surl.startsWith(fo.wfs.root.toString())) {realName = surl.substring(fo.wfs.root.toString().length());}connect.disconnect();ur = new URL(fo.wfs.getRootURL(), realName);connect = (HttpURLConnection) ur.openConnection();connect.setRequestMethod(""HEAD"");connect.connect();}exists = connect.getResponseCode() != 404;Map<String, String> result = new HashMap<String, String>();Map<String, List<String>> fields = connect.getHeaderFields();for (Entry<String, List<String>> e : fields.entrySet()) {String key = e.getKey();List<String> value = e.getValue();result.put(key, value.get(0));}result.put(META_EXIST, String.valueOf(exists));connect.disconnect();return result;} else {Map<String, String> result = new HashMap<String, String>();URL url = new URL(fo.wfs.getRootURL(), fo.pathname);URLConnection urlc = url.openConnection();try {urlc.connect();urlc.getInputStream().close();result.put(META_EXIST, ""true"");} catch (IOException ex) {result.put(META_EXIST, ""false"");}return result;}}private void copy(File source, File destinationDirectory) throws IOException {if (source.isDirectory()) {File newDir = new File(destinationDirectory, source.getName());newDir.mkdir();File[] children = source.listFiles();for (int i = 0; i < children.length; i++) {if (children[i].getName().equals("".svn"")) {continue;}copy(children[i], newDir);}} else {File newFile = new File(destinationDirectory, source.getName());if (newFile.exists() && source.lastModified() == newFile.lastModified()) {return;}FileOutputStream output = new FileOutputStream(newFile);FileInputStream input = new FileInputStream(source);byte[] buff = new byte[2048];int read = 0;while ((read = input.read(buff)) > 0) {output.write(buff, 0, read);}output.flush();output.close();input.close();}}public synchronized String encrypt(String plaintext) {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");md.update(plaintext.getBytes(""UTF-8""));} catch (NoSuchAlgorithmException e) {log().error(""failed to encrypt the password."", e);throw new RuntimeException(""failed to encrypt the password."", e);} catch (UnsupportedEncodingException e) {log().error(""failed to encrypt the password."", e);throw new RuntimeException(""failed to encrypt the password."", e);}byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}@Overridepublic void handlePeerEvent(PeerEvent event) {if (event.geteventInfo() instanceof EventServiceInfo) {EventServiceInfo info = (EventServiceInfo) event.geteventInfo();if (info.getServiceState() != ServiceState.Deployed) return;long bid = info.getBundleId();Bundle bundle = context.getBundle(bid);Enumeration entries = bundle.findEntries(""OSGI-INF/PrivacyPolicy/"", ""*.xml"", true);if (entries != null) {if (entries.hasMoreElements()) {try {URL url = (URL) entries.nextElement();BufferedInputStream in = new BufferedInputStream(url.openStream());XMLPolicyReader reader = new XMLPolicyReader(this.context);RequestPolicy policy = reader.readPolicyFromFile(in);if (policy != null) {this.policyMgr.addPrivacyPolicyForService(info.getServiceID(), policy);}} catch (IOException ioe) {}}}}}public void parse() {InputSource urlInputStream = null;SAXParserFactory spf = null;SAXParser sp = null;HttpURLConnection conn = null;try {URL url = new URL(this.urlString);_setProxy();conn = (HttpURLConnection) url.openConnection();urlInputStream = new InputSource(StreamUtils.inputStreamToReader(conn.getInputStream()));spf = SAXParserFactory.newInstance();if (spf != null) {sp = spf.newSAXParser();sp.parse(urlInputStream, this);}} catch (Exception e) {if (conn != null) {if (conn.getHeaderField(""X-RateLimit-Limit"") != null) {String rateLimit = conn.getHeaderField(""X-RateLimit-Limit"");String rateRemaining = conn.getHeaderField(""X-RateLimit-Remaining"");long rateReset = Long.valueOf(conn.getHeaderField(""X-RateLimit-Reset"")) * 1000;LOG.warn(""Possible rate limits?  LIMIT:"" + rateLimit + ""  REMAINING:"" + rateRemaining + ""  RESET:"" + new Date(rateReset));}}e.printStackTrace();LOG.warn(""error parsing rss feed"", e);} finally {}}public static Document getXHTMLDocument(URL _url) throws IOException {final Tidy tidy = new Tidy();tidy.setQuiet(true);tidy.setShowWarnings(false);tidy.setXmlOut(true);final BufferedInputStream input_stream = new BufferedInputStream(_url.openStream());return tidy.parseDOM(input_stream, null);}public void handleRequestInternal(final HttpServletRequest httpServletRequest, final HttpServletResponse httpServletResponse) throws ServletException, IOException {final String servetPath = httpServletRequest.getServletPath();final String previousToken = httpServletRequest.getHeader(IF_NONE_MATCH);final String currentToken = getETagValue(httpServletRequest);httpServletResponse.setHeader(ETAG, currentToken);final Date modifiedDate = new Date(httpServletRequest.getDateHeader(IF_MODIFIED_SINCE));final Calendar calendar = Calendar.getInstance();final Date now = calendar.getTime();calendar.setTime(modifiedDate);calendar.add(Calendar.MINUTE, getEtagExpiration());if (currentToken.equals(previousToken) && (now.getTime() < calendar.getTime().getTime())) {httpServletResponse.sendError(HttpServletResponse.SC_NOT_MODIFIED);httpServletResponse.setHeader(LAST_MODIFIED, httpServletRequest.getHeader(IF_MODIFIED_SINCE));if (LOG.isDebugEnabled()) {LOG.debug(""ETag the same, will return 304"");}} else {httpServletResponse.setDateHeader(LAST_MODIFIED, (new Date()).getTime());final String width = httpServletRequest.getParameter(Constants.WIDTH);final String height = httpServletRequest.getParameter(Constants.HEIGHT);final ImageNameStrategy imageNameStrategy = imageService.getImageNameStrategy(servetPath);String code = imageNameStrategy.getCode(servetPath);String fileName = imageNameStrategy.getFileName(servetPath);final String imageRealPathPrefix = getRealPathPrefix(httpServletRequest.getServerName().toLowerCase());String original = imageRealPathPrefix + imageNameStrategy.getFullFileNamePath(fileName, code);final File origFile = new File(original);if (!origFile.exists()) {code = Constants.NO_IMAGE;fileName = imageNameStrategy.getFileName(code);original = imageRealPathPrefix + imageNameStrategy.getFullFileNamePath(fileName, code);}String resizedImageFileName = null;if (width != null && height != null && imageService.isSizeAllowed(width, height)) {resizedImageFileName = imageRealPathPrefix + imageNameStrategy.getFullFileNamePath(fileName, code, width, height);}final File imageFile = getImageFile(original, resizedImageFileName, width, height);final FileInputStream fileInputStream = new FileInputStream(imageFile);IOUtils.copy(fileInputStream, httpServletResponse.getOutputStream());fileInputStream.close();}}public void copyFile(String oldPath, String newPath) {try {int bytesum = 0;int byteread = 0;File oldfile = new File(oldPath);if (oldfile.exists()) {InputStream inStream = new FileInputStream(oldPath);FileOutputStream fs = new FileOutputStream(newPath);byte[] buffer = new byte[1444];while ((byteread = inStream.read(buffer)) != -1) {bytesum += byteread;System.out.println(bytesum);fs.write(buffer, 0, byteread);}inStream.close();}} catch (Exception e) {System.out.println(""复制单个文件操作出错"");e.printStackTrace();}}public ValidationReport validate(OriginalDeployUnitDescription unit) throws UnitValidationException {ValidationReport vr = new DefaultValidationReport();errorHandler = new SimpleErrorHandler(vr);vr.setFileUri(unit.getAbsolutePath());SAXParser parser;SAXReader reader = null;try {parser = factory.newSAXParser();reader = new SAXReader(parser.getXMLReader());reader.setValidation(false);reader.setErrorHandler(this.errorHandler);} catch (ParserConfigurationException e) {throw new UnitValidationException(""The configuration of parser is illegal."", e);} catch (SAXException e) {String m = ""Something is wrong when register schema"";logger.error(m, e);throw new UnitValidationException(m, e);}ZipInputStream zipInputStream;InputStream tempInput = null;try {tempInput = new FileInputStream(unit.getAbsolutePath());} catch (FileNotFoundException e1) {String m = String.format(""The file [%s] don't exist."", unit.getAbsolutePath());logger.error(m, e1);throw new UnitValidationException(m, e1);}zipInputStream = new ZipInputStream(tempInput);ZipEntry zipEntry = null;try {zipEntry = zipInputStream.getNextEntry();if (zipEntry == null) {String m = String.format(""Error when get zipEntry. Maybe the [%s] is not zip file!"", unit.getAbsolutePath());logger.error(m);throw new UnitValidationException(m);}while (zipEntry != null) {if (configFiles.contains(zipEntry.getName())) {byte[] extra = new byte[(int) zipEntry.getSize()];zipInputStream.read(extra);File file = File.createTempFile(""temp"", ""extra"");file.deleteOnExit();logger.info(""[TempFile:]"" + file.getAbsoluteFile());ByteArrayInputStream byteInputStream = new ByteArrayInputStream(extra);FileOutputStream tempFileOutputStream = new FileOutputStream(file);IOUtils.copy(byteInputStream, tempFileOutputStream);tempFileOutputStream.flush();IOUtils.closeQuietly(tempFileOutputStream);InputStream inputStream = new FileInputStream(file);reader.read(inputStream, unit.getAbsolutePath() + "":"" + zipEntry.getName());IOUtils.closeQuietly(inputStream);}zipEntry = zipInputStream.getNextEntry();}} catch (IOException e) {ValidationMessage vm = new XMLValidationMessage(""IOError"", 0, 0, unit.getUrl() + "":"" + zipEntry.getName(), e);vr.addValidationMessage(vm);} catch (DocumentException e) {ValidationMessage vm = new XMLValidationMessage(""Document Error."", 0, 0, unit.getUrl() + "":"" + zipEntry.getName(), e);vr.addValidationMessage(vm);} finally {IOUtils.closeQuietly(tempInput);IOUtils.closeQuietly(zipInputStream);}return vr;}"	5
"String getLatestVersion() {try {URL url = new URL(Constants.VERSION_FILE_URL);URLConnection connection = url.openConnection();connection.setConnectTimeout(15000);InputStream in = connection.getInputStream();BufferedReader br = new BufferedReader(new InputStreamReader(in));return br.readLine();} catch (Exception ex) {return null;}}public void connectToUrl(String url_address) {message = new StringBuffer("""");try {URL url = new URL(url_address);try {HttpsURLConnection httpsConnection = (HttpsURLConnection) url.openConnection();httpsConnection.setDoOutput(false);httpsConnection.connect();message.append(""<BR>\n Connection Code:["" + httpsConnection.getResponseCode() + ""]"");message.append(""<BR>\n Response Message:["" + httpsConnection.getResponseMessage() + ""]"");InputStreamReader insr = new InputStreamReader(httpsConnection.getInputStream());BufferedReader in = new BufferedReader(insr);fullStringBuffer = new StringBuffer("""");String temp = in.readLine();while (temp != null) {fullStringBuffer.append(temp);temp = in.readLine();}in.close();} catch (IOException e) {message.append(""<BR>\n [Error][IOException]["" + e.getMessage() + ""]"");}} catch (MalformedURLException e) {message.append(""<BR>\n [Error][MalformedURLException]["" + e.getMessage() + ""]"");} catch (Exception e) {message.append(""<BR>\n [Error][Exception]["" + e.getMessage() + ""]"");}}public boolean refresh() {try {synchronized (text) {stream = (new URL(url)).openStream();BufferedReader reader = new BufferedReader(new InputStreamReader(stream));String line;StringBuilder sb = new StringBuilder();while ((line = reader.readLine()) != null) {sb.append(line);sb.append(""\n"");}text = sb.toString();}price = 0;date = null;} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();return false;} finally {if (stream != null) try {stream.close();} catch (IOException e) {e.printStackTrace();}}return true;}public void convert(File src, File dest) throws IOException {InputStream in = new BufferedInputStream(new FileInputStream(src));DcmParser p = pfact.newDcmParser(in);Dataset ds = fact.newDataset();p.setDcmHandler(ds.getDcmHandler());try {FileFormat format = p.detectFileFormat();if (format != FileFormat.ACRNEMA_STREAM) {System.out.println(""\n"" + src + "": not an ACRNEMA stream!"");return;}p.parseDcmFile(format, Tags.PixelData);if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {System.out.println(""\n"" + src + "": contains UIDs!"" + "" => probable already DICOM - do not convert"");return;}boolean hasPixelData = p.getReadTag() == Tags.PixelData;boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;int pxlen = p.getReadLength();if (hasPixelData) {if (inflate) {ds.putUS(Tags.BitsAllocated, 16);pxlen = pxlen * 4 / 3;}if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {System.out.println(""\n"" + src + "": mismatch pixel data length!"" + "" => do not convert"");return;}}ds.putUI(Tags.StudyInstanceUID, uid(studyUID));ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));ds.putUI(Tags.SOPInstanceUID, uid(instUID));ds.putUI(Tags.SOPClassUID, classUID);if (!ds.contains(Tags.NumberOfSamples)) {ds.putUS(Tags.NumberOfSamples, 1);}if (!ds.contains(Tags.PhotometricInterpretation)) {ds.putCS(Tags.PhotometricInterpretation, ""MONOCHROME2"");}if (fmi) {ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));}OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));try {} finally {ds.writeFile(out, encodeParam());if (hasPixelData) {if (!skipGroupLen) {out.write(PXDATA_GROUPLEN);int grlen = pxlen + 8;out.write((byte) grlen);out.write((byte) (grlen >> 8));out.write((byte) (grlen >> 16));out.write((byte) (grlen >> 24));}out.write(PXDATA_TAG);out.write((byte) pxlen);out.write((byte) (pxlen >> 8));out.write((byte) (pxlen >> 16));out.write((byte) (pxlen >> 24));}if (inflate) {int b2, b3;for (; pxlen > 0; pxlen -= 3) {out.write(in.read());b2 = in.read();b3 = in.read();out.write(b2 & 0x0f);out.write(b2 >> 4 | ((b3 & 0x0f) << 4));out.write(b3 >> 4);}} else {for (; pxlen > 0; --pxlen) {out.write(in.read());}}out.close();}System.out.print('.');} finally {in.close();}}@Overrideprotected DefaultHttpClient doInBackground(Account... params) {AccountManager accountManager = AccountManager.get(mainActivity);Account account = params[0];try {Bundle bundle = accountManager.getAuthToken(account, ""ah"", false, null, null).getResult();Intent intent = (Intent) bundle.get(AccountManager.KEY_INTENT);if (intent != null) {mainActivity.startActivity(intent);} else {String auth_token = bundle.getString(AccountManager.KEY_AUTHTOKEN);http_client.getParams().setBooleanParameter(ClientPNames.HANDLE_REDIRECTS, false);HttpGet http_get = new HttpGet(""http://3dforandroid.appspot.com/_ah"" + ""/login?continue=http://localhost/&auth="" + auth_token);HttpResponse response = http_client.execute(http_get);if (response.getStatusLine().getStatusCode() != 302) return null;for (Cookie cookie : http_client.getCookieStore().getCookies()) {if (cookie.getName().equals(""ACSID"")) {authClient = http_client;String json = createJsonFile(Kind);initializeSQLite();initializeServer(json);}}}} catch (OperationCanceledException e) {e.printStackTrace();} catch (AuthenticatorException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return http_client;}protected List<String[]> execute(String queryString, String sVar1, String sVar2, String filter) throws Exception {String query = URLEncoder.encode(queryString, ""UTF-8"");String urlString = ""http://sparql.bibleontology.com/sparql.jsp?sparql="" + query + ""&type1=xml"";URL url;BufferedReader br = null;ArrayList<String[]> values = new ArrayList<String[]>();try {url = new URL(urlString);URLConnection conn = url.openConnection();br = new BufferedReader(new InputStreamReader(conn.getInputStream()));StringBuffer sb = new StringBuffer();String line;String sURI1 = null;String sURI2 = null;boolean b1 = false;boolean b2 = false;while ((line = br.readLine()) != null) {if (line.indexOf(""</result>"") != -1) {if (sURI1 != null && sURI2 != null) {String pair[] = { sURI1, sURI2 };values.add(pair);}sURI1 = null;sURI2 = null;b1 = false;b2 = false;}if (line.indexOf(""binding name=\"""" + sVar1 + ""\"""") != -1) {b1 = true;continue;} else if (b1) {String s1 = getURI(line);if (s1 != null) {s1 = checkURISyntax(s1);if (filter == null || s1.startsWith(filter)) {sURI1 = s1;}}b1 = false;continue;}if (line.indexOf(""binding name=\"""" + sVar2 + ""\"""") != -1) {b2 = true;continue;} else if (b2) {String s2 = getURI(line);if (s2 != null) {s2 = checkURISyntax(s2);if (filter == null || s2.startsWith(filter)) {sURI2 = s2;}}b2 = false;continue;}}} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();} finally {br.close();}return values;}protected List<String> execute(String queryString, String sVar, String filter) throws UnsupportedEncodingException, IOException {String query = URLEncoder.encode(queryString, ""UTF-8"");String urlString = ""http://sparql.bibleontology.com/sparql.jsp?sparql="" + query + ""&type1=xml"";URL url;BufferedReader br = null;ArrayList<String> values = new ArrayList<String>();try {url = new URL(urlString);URLConnection conn = url.openConnection();br = new BufferedReader(new InputStreamReader(conn.getInputStream()));StringBuffer sb = new StringBuffer();String line;while ((line = br.readLine()) != null) {String sURI = getURI(line);if (sURI != null) {sURI = checkURISyntax(sURI);if (filter == null || sURI.startsWith(filter)) {values.add(sURI);}}}} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();} finally {br.close();}return values;}public void sendMessage(Message msg) {if (!blackList.contains(msg.getTo())) {Hashtable<String, String> content = msg.getContent();Enumeration<String> keys = content.keys();String key;String data = ""to="" + msg.getTo() + ""&from="" + msg.getFrom() + ""&"";while (keys.hasMoreElements()) {key = (String) keys.nextElement();data += key + ""="" + content.get(key) + ""&"";}URL url = null;try {logger.log(this, Level.FINER, ""sending "" + data + "" to "" + msg.getTo());url = new URL(""http://"" + msg.getTo() + "":8080/webmsgservice?"" + data);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));in.readLine();in.close();logger.log(this, Level.FINER, ""message sent to "" + msg.getTo());} catch (MalformedURLException e) {blackList.add(msg.getTo());logger.log(this, Level.WARNING, ""an error occured during message sending ("" + msg.getTo() + "") : "" + e.getMessage());e.printStackTrace();} catch (IOException e) {logger.log(this, Level.WARNING, ""an error occured during message sending ("" + msg.getTo() + "") : "" + e.getMessage());blackList.add(msg.getTo());}} else {logger.log(this, Level.FINE, ""will not send message to "" + msg.getTo() + "" because black listed IP"");}}public XMLResourceBundle() throws MissingResourceException {String systemId = getShortName() + "".xml"";URL url;if ((url = getClass().getResource(systemId)) != null) {InputStream is = null;try {is = url.openStream();SAXParserFactory factory = SAXParserFactory.newInstance();factory.setNamespaceAware(false);factory.setValidating(false);XMLReader xmlReader = factory.newSAXParser().getXMLReader();xmlReader.setContentHandler(new MessageContentHandler());xmlReader.parse(new InputSource(is));} catch (IOException ioe) {System.err.println(ioe.getMessage());ioe.printStackTrace();} catch (SAXException se) {System.err.println(se.getMessage());se.printStackTrace();} catch (ParserConfigurationException pce) {System.err.println(pce.getMessage());pce.printStackTrace();} finally {try {if (is != null) is.close();} catch (IOException ioe) {System.err.println(ioe.getMessage());ioe.printStackTrace();}}} else {throw new MissingResourceException(""Resource file '"" + systemId + ""' could not be found."", systemId, null);}}private File copyFile(String fileInClassPath, String systemPath) throws Exception {InputStream is = getClass().getResourceAsStream(fileInClassPath);OutputStream os = new FileOutputStream(systemPath);IOUtils.copy(is, os);is.close();os.close();return new File(systemPath);}"	5
"public String post() {if (content == null || content.equals("""")) return ""Type something to publish!!"";OutputStreamWriter wr = null;BufferedReader rd = null;try {String data = URLEncoder.encode(""api"", ""UTF-8"") + ""="" + URLEncoder.encode(apiKey, ""UTF-8"");data += ""&"" + URLEncoder.encode(""content"", ""UTF-8"") + ""="" + URLEncoder.encode(content, ""UTF-8"");data += ""&"" + URLEncoder.encode(""description"", ""UTF-8"") + ""="" + URLEncoder.encode(descriptionTextArea.getText() + description_suffix, ""UTF-8"");data += ""&"" + URLEncoder.encode(""expiry"", ""UTF-8"") + ""="" + URLEncoder.encode((String) expiryComboBox.getSelectedItem(), ""UTF-8"");data += ""&"" + URLEncoder.encode(""type"", ""UTF-8"") + ""="" + URLEncoder.encode(type, ""UTF-8"");data += ""&"" + URLEncoder.encode(""name"", ""UTF-8"") + ""="" + URLEncoder.encode(nameTextBox.getText(), ""UTF-8"");URL url = new URL(""http://pastebin.ca/quiet-paste.php"");URLConnection conn = url.openConnection();conn.setDoOutput(true);wr = new OutputStreamWriter(conn.getOutputStream());wr.write(data);wr.flush();rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));String line;line = rd.readLine();if (line == null || line.length() < 8 || !line.substring(0, 8).equals(""SUCCESS:"")) return ""Unknown error in publishing the post""; else return ""*Publish successful.! The link to your post is.: "" + ""http://pastebin.ca/"" + line.substring(8);} catch (IOException ex) {return ""Unable to connect to http://pastebin.ca/\nPlease check your internet connection"";} finally {try {if (wr != null) wr.close();if (rd != null) rd.close();} catch (IOException ex) {}}}@Overridepublic void onCreate(Bundle savedInstanceState) {super.onCreate(savedInstanceState);TextView tv = new TextView(this);HttpClient client = new DefaultHttpClient();HttpGet httpGetRequest = new HttpGet(""http://www.google.com/"");String line = """", responseString = """";try {HttpResponse response = client.execute(httpGetRequest);if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {BufferedReader br = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));while ((line = br.readLine()) != null) {responseString += line;}br.close();}} catch (ClientProtocolException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}tv.setText(responseString);setContentView(tv);}byte[] makeIDPFXORMask() {if (idpfMask == null) {try {MessageDigest sha = MessageDigest.getInstance(""SHA-1"");String temp = strip(getPrimaryIdentifier());sha.update(temp.getBytes(""UTF-8""), 0, temp.length());idpfMask = sha.digest();} catch (NoSuchAlgorithmException e) {System.err.println(""No such Algorithm (really, did I misspell SHA-1?"");System.err.println(e.toString());return null;} catch (IOException e) {System.err.println(""IO Exception. check out mask.write..."");System.err.println(e.toString());return null;}}return idpfMask;}public static void copyFile(File src, File dest, int bufSize, boolean force) throws IOException {if (dest.exists()) {if (force) {dest.delete();} else {throw new IOException(""Cannot overwrite existing file: "" + dest.getName());}}byte[] buffer = new byte[bufSize];int read = 0;InputStream in = null;OutputStream out = null;try {in = new FileInputStream(src);out = new FileOutputStream(dest);while (true) {read = in.read(buffer);if (read == -1) {break;}out.write(buffer, 0, read);}} finally {if (in != null) {try {in.close();} finally {if (out != null) {out.close();}}}}}@Overridepublic File fetchHSMFile(String fsID, String filePath) throws HSMException {log.debug(""fetchHSMFile called with fsID="" + fsID + "", filePath="" + filePath);if (absIncomingDir.mkdirs()) {log.info(""M-WRITE "" + absIncomingDir);}File tarFile;try {tarFile = File.createTempFile(""hsm_"", "".tar"", absIncomingDir);} catch (IOException x) {throw new HSMException(""Failed to create temp file in "" + absIncomingDir, x);}log.info(""Fetching "" + filePath + "" from cloud storage"");FileOutputStream fos = null;try {if (s3 == null) createClient();S3Object object = s3.getObject(new GetObjectRequest(bucketName, filePath));fos = new FileOutputStream(tarFile);IOUtils.copy(object.getObjectContent(), fos);} catch (AmazonClientException ace) {s3 = null;throw new HSMException(""Could not list objects for: "" + filePath, ace);} catch (Exception x) {throw new HSMException(""Failed to retrieve "" + filePath, x);} finally {if (fos != null) {try {fos.close();} catch (IOException e) {log.error(""Couldn't close output stream for: "" + tarFile);}}}return tarFile;}private final Vector<Class<?>> findSubclasses(URL location, String packageName, Class<?> superClass) {synchronized (results) {Map<Class<?>, URL> thisResult = new TreeMap<Class<?>, URL>(CLASS_COMPARATOR);Vector<Class<?>> v = new Vector<Class<?>>();String fqcn = searchClass.getName();List<URL> knownLocations = new ArrayList<URL>();knownLocations.add(location);for (int loc = 0; loc < knownLocations.size(); loc++) {URL url = knownLocations.get(loc);File directory = new File(url.getFile());if (directory.exists()) {String[] files = directory.list();for (int i = 0; i < files.length; i++) {if (files[i].endsWith("".class"")) {String classname = files[i].substring(0, files[i].length() - 6);try {Class<?> c = Class.forName(packageName + ""."" + classname);if (superClass.isAssignableFrom(c) && !fqcn.equals(packageName + ""."" + classname)) {thisResult.put(c, url);}} catch (ClassNotFoundException cnfex) {if (debug) {errors.add(cnfex);}} catch (Exception ex) {if (debug) {errors.add(ex);}} catch (NoClassDefFoundError ncdfe) {if (debug) {errors.add(ncdfe);}}}}} else {try {JarURLConnection conn = (JarURLConnection) url.openConnection();JarFile jarFile = conn.getJarFile();Enumeration<JarEntry> e = jarFile.entries();while (e.hasMoreElements()) {JarEntry entry = e.nextElement();String entryname = entry.getName();if (!entry.isDirectory() && entryname.endsWith("".class"")) {String classname = entryname.substring(0, entryname.length() - 6);if (classname.startsWith(""/"")) classname = classname.substring(1);classname = classname.replace('/', '.');try {Class c = Class.forName(classname);if (superClass.isAssignableFrom(c) && !fqcn.equals(classname)) {thisResult.put(c, url);}} catch (ClassNotFoundException cnfex) {errors.add(cnfex);} catch (NoClassDefFoundError ncdfe) {errors.add(ncdfe);} catch (UnsatisfiedLinkError ule) {errors.add(ule);} catch (Exception exception) {errors.add(exception);} catch (Error error) {errors.add(error);}}}} catch (IOException ioex) {errors.add(ioex);}}}results.putAll(thisResult);Iterator<Class<?>> it = thisResult.keySet().iterator();while (it.hasNext()) {v.add(it.next());}return v;}}private void doOp(String urlString) {URL url = null;try {url = new URL(urlString);} catch (MalformedURLException e) {e.printStackTrace();return;}URLConnection conn = null;try {conn = url.openConnection();conn.setRequestProperty(""Authorization"", ""Basic "" + (new BASE64Encoder()).encode((System.getProperty(""fedoragsearch.fgsUserName"") + "":"" + System.getProperty(""fedoragsearch.fgsPassword"")).getBytes()));conn.connect();} catch (IOException e) {e.printStackTrace();return;}content = null;try {content = conn.getContent();} catch (IOException e) {e.printStackTrace();return;}String line;BufferedReader br = new BufferedReader(new InputStreamReader((InputStream) content));try {while ((line = br.readLine()) != null) System.out.println(line);} catch (IOException e1) {e1.printStackTrace();}}public Object execute(ExecutionEvent event) throws ExecutionException {try {Shell shell = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell();QuizTreeView view = (QuizTreeView) PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().showView(""org.rcpquizengine.views.quizzes"");Folder rootFolder = view.getRootFolder();if (!rootFolder.isEncrypted()) {PasswordDialog dialog = new PasswordDialog(shell);if (dialog.open() == Window.OK) {String password = dialog.getPassword();if (!password.equals("""")) {String md5 = """";MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(password.getBytes());md5 = new BigInteger(md.digest()).toString();rootFolder.setMd5Digest(md5);rootFolder.setEncrypted(true);MessageDialog.openInformation(shell, ""Quiz bank locked"", ""The current quiz bank has been locked"");password = """";md5 = """";}}} else {MessageDialog.openError(shell, ""Error locking quiz bank"", ""Quiz bank already locked"");}} catch (PartInitException e) {e.printStackTrace();} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return null;}public void run() {if (withlinlyn == true) {try {xlin.erase(file);} catch (Exception e) {System.out.println(""Error erasing"");}} else if (as_php) {try {URL url = new URL(http + ""REM:"" + pservname);BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));System.out.println(""Response from REMOVE:"");String s;while ((s = br.readLine()) != null) {System.out.println(s);}br.close();} catch (Exception e) {System.out.println(""Error erasing/php!"");}}try {InetAddress ia = InetAddress.getLocalHost();ss = new ServerSocket(0, 50, ia);startserv = System.currentTimeMillis();ss.setSoTimeout(0);String svname = ia.getHostAddress();System.out.println(svname + "":sv"");String mssg = ""<SERVER><IP>"" + svname + ""</IP><PORT>"" + ss.getLocalPort() + ""</PORT></SERVER>"";if (withlinlyn == true) {try {xlin.replace(file, mssg);System.out.println(""mssg:"" + mssg + "", sent"");} catch (Exception e) {System.out.println(""Error posting address"");return;}} else if (as_php) {try {URL url = new URL(http + ""ADD:"" + svname + "":"" + ss.getLocalPort() + "":"" + pservname);BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));String response = """";String s;while ((s = br.readLine()) != null) {response = response + s + System.getProperty(""line.separator"");}br.close();String resp = new xLineSplit().ssplit(""REPLY"", response);if (!resp.equalsIgnoreCase(""ADDED"")) {System.out.println(""potential error posting via php:\nReponse was:\n"" + response);}} catch (Exception e) {System.out.println(""Error in posting php:"" + e.toString());}}xsl.regserver(svname, new String("""" + ss.getLocalPort()));Socket server = null;listening = true;while (listening) {server = ss.accept();if (server != null) {xsl.add(server);System.out.println(""added connect"");} else {System.out.println(""Received null socket"");}server = null;listening = control_listening;}finserv = System.currentTimeMillis();long l = finserv - startserv;long m = l / 1000;System.err.println(""Server socket has closed, time elapsed:"" + m);System.out.println(""Server socket has closed, time elapsed:"" + m);} catch (Exception e) {System.out.println(e.toString());}}public static void printResource(OutputStream os, String resourceName) throws IOException {InputStream is = null;try {is = ResourceLoader.loadResource(resourceName);if (is == null) {throw new IOException(""Given resource not found!"");}IOUtils.copy(is, os);} finally {IOUtils.closeQuietly(is);}}"	5
"public void process(String t) {try {MessageDigest md5 = MessageDigest.getInstance(MD5_DIGEST);md5.reset();md5.update(t.getBytes());callback.display(null, digestToHexString(md5.digest()));} catch (Exception ex) {callback.display(null, ""[failed]"");}}private void save() {int[] selection = list.getSelectionIndices();String dir = System.getProperty(""user.dir"");for (int i = 0; i < selection.length; i++) {File src = files[selection[i]];FileDialog dialog = new FileDialog(shell, SWT.SAVE);dialog.setFilterPath(dir);dialog.setFileName(src.getName());String destination = dialog.open();if (destination != null) {File dest = new File(destination);try {dest.createNewFile();FileChannel srcC = new FileInputStream(src).getChannel();FileChannel destC = new FileOutputStream(dest).getChannel();destC.transferFrom(srcC, 0, srcC.size());destC.close();srcC.close();updateSaved(selection[i], true);files[selection[i]] = dest;} catch (FileNotFoundException e) {IVC.showError(""Error!"", """" + e.getMessage(), """");} catch (IOException e) {IVC.showError(""Error!"", """" + e.getMessage(), """");}}}}public static void main(String[] args) {if (args.length == 0) {System.out.println(""Usage: java xyzImpl inputfile"");System.exit(0);}XYZ xyz = null;try {URL url = new URL(Util.makeAbsoluteURL(args[0]));BufferedReader bReader = new BufferedReader(new InputStreamReader(url.openStream()));int idx = args[0].indexOf(""."");String id = (idx == -1) ? args[0] : args[0].substring(0, idx);idx = id.lastIndexOf(""\\"");if (idx != -1) id = id.substring(idx + 1);xyz = new XYZImpl(bReader, id);CMLMolecule mol = xyz.getMolecule();StringWriter sw = new StringWriter();mol.debug(sw);System.out.println(sw.toString());SpanningTree sTree = new SpanningTreeImpl(mol);System.out.println(sTree.toSMILES());Writer w = new OutputStreamWriter(new FileOutputStream(id + "".xml""));PMRDelegate.outputEventStream(mol, w, PMRNode.PRETTY, 0);w.close();w = new OutputStreamWriter(new FileOutputStream(id + ""-new.mol""));xyz.setOutputCMLMolecule(mol);xyz.output(w);w.close();} catch (Exception e) {System.out.println(""xyz failed: "" + e);e.printStackTrace();System.exit(0);}}public static void bubbleSort(Drawable[] list) {boolean swapped;do {swapped = false;for (int i = 0; i < list.length - 1; ++i) {if (list[i].getSortValue() > list[i + 1].getSortValue()) {Drawable temp = list[i];list[i] = list[i + 1];list[i + 1] = temp;swapped = true;}}} while (swapped);}private List<String> readUrl(URL url) throws IOException {List<String> lines = new ArrayList<String>();BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String str;while ((str = in.readLine()) != null) {lines.add(str);}in.close();return lines;}public static boolean copyFile(File sourceFile, File destinationFile) {boolean copySuccessfull = false;FileChannel source = null;FileChannel destination = null;try {source = new FileInputStream(sourceFile).getChannel();destination = new FileOutputStream(destinationFile).getChannel();long transferedBytes = destination.transferFrom(source, 0, source.size());copySuccessfull = transferedBytes == source.size() ? true : false;} catch (FileNotFoundException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();} finally {if (source != null) {try {source.close();} catch (IOException e) {e.printStackTrace();}}if (destination != null) {try {destination.close();} catch (IOException e) {e.printStackTrace();}}}return copySuccessfull;}private static final void copyFile(File srcFile, File destDir, byte[] buffer) {try {File destFile = new File(destDir, srcFile.getName());InputStream in = new FileInputStream(srcFile);OutputStream out = new FileOutputStream(destFile);int bytesRead;while ((bytesRead = in.read(buffer)) != -1) out.write(buffer, 0, bytesRead);in.close();out.close();} catch (IOException ioe) {System.err.println(""Couldn't copy file '"" + srcFile + ""' to directory '"" + destDir + ""'"");}}public void initialize(IProgressMonitor monitor) throws JETException {IProgressMonitor progressMonitor = monitor;progressMonitor.beginTask("""", 10);progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_GeneratingJETEmitterFor_message"", new Object[] { getTemplateURI() }));final IWorkspace workspace = ResourcesPlugin.getWorkspace();IJavaModel javaModel = JavaCore.create(ResourcesPlugin.getWorkspace().getRoot());try {final JETCompiler jetCompiler = getTemplateURIPath() == null ? new MyBaseJETCompiler(getTemplateURI(), getEncoding(), getClassLoader()) : new MyBaseJETCompiler(getTemplateURIPath(), getTemplateURI(), getEncoding(), getClassLoader());progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETParsing_message"", new Object[] { jetCompiler.getResolvedTemplateURI() }));jetCompiler.parse();progressMonitor.worked(1);String packageName = jetCompiler.getSkeleton().getPackageName();if (getTemplateURIPath() != null) {URI templateURI = URI.createURI(getTemplateURIPath()[0]);URLClassLoader theClassLoader = null;if (templateURI.isPlatformResource()) {IProject project = workspace.getRoot().getProject(templateURI.segment(1));if (JETNature.getRuntime(project) != null) {List<URL> urls = new ArrayList<URL>();IJavaProject javaProject = JavaCore.create(project);urls.add(new File(project.getLocation() + ""/"" + javaProject.getOutputLocation().removeFirstSegments(1) + ""/"").toURI().toURL());for (IClasspathEntry classpathEntry : javaProject.getResolvedClasspath(true)) {if (classpathEntry.getEntryKind() == IClasspathEntry.CPE_PROJECT) {IPath projectPath = classpathEntry.getPath();IProject otherProject = workspace.getRoot().getProject(projectPath.segment(0));IJavaProject otherJavaProject = JavaCore.create(otherProject);urls.add(new File(otherProject.getLocation() + ""/"" + otherJavaProject.getOutputLocation().removeFirstSegments(1) + ""/"").toURI().toURL());}}theClassLoader = new URLClassLoader(urls.toArray(new URL[0])) {@Overridepublic Class<?> loadClass(String className) throws ClassNotFoundException {try {return super.loadClass(className);} catch (ClassNotFoundException classNotFoundException) {return getClassLoader().loadClass(className);}}};}} else if (templateURI.isPlatformPlugin()) {final Bundle bundle = Platform.getBundle(templateURI.segment(1));if (bundle != null) {theClassLoader = new URLClassLoader(new URL[0], getClassLoader()) {@Overridepublic Class<?> loadClass(String className) throws ClassNotFoundException {try {return bundle.loadClass(className);} catch (ClassNotFoundException classNotFoundException) {return super.loadClass(className);}}};}}if (theClassLoader != null) {String className = (packageName.length() == 0 ? """" : packageName + ""."") + jetCompiler.getSkeleton().getClassName();if (className.endsWith(""_"")) {className = className.substring(0, className.length() - 1);}try {Class<?> theClass = theClassLoader.loadClass(className);Class<?> theOtherClass = null;try {theOtherClass = getClassLoader().loadClass(className);} catch (ClassNotFoundException exception) {}if (theClass != theOtherClass) {String methodName = jetCompiler.getSkeleton().getMethodName();Method[] methods = theClass.getDeclaredMethods();for (int i = 0; i < methods.length; ++i) {if (methods[i].getName().equals(methodName)) {jetEmitter.setMethod(methods[i]);break;}}return;}} catch (ClassNotFoundException exception) {}}}ByteArrayOutputStream outputStream = new ByteArrayOutputStream();jetCompiler.generate(outputStream);final InputStream contents = new ByteArrayInputStream(outputStream.toByteArray());if (!javaModel.isOpen()) {javaModel.open(new SubProgressMonitor(progressMonitor, 1));} else {progressMonitor.worked(1);}final IProject project = workspace.getRoot().getProject(jetEmitter.getProjectName());progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETPreparingProject_message"", new Object[] { project.getName() }));IJavaProject javaProject;if (!project.exists()) {progressMonitor.subTask(""JET creating project "" + project.getName());project.create(new SubProgressMonitor(progressMonitor, 1));progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETCreatingProject_message"", new Object[] { project.getName() }));IProjectDescription description = workspace.newProjectDescription(project.getName());description.setNatureIds(new String[] { JavaCore.NATURE_ID });description.setLocation(null);project.open(new SubProgressMonitor(progressMonitor, 1));project.setDescription(description, new SubProgressMonitor(progressMonitor, 1));} else {project.open(new SubProgressMonitor(progressMonitor, 5));IProjectDescription description = project.getDescription();description.setNatureIds(new String[] { JavaCore.NATURE_ID });project.setDescription(description, new SubProgressMonitor(progressMonitor, 1));}javaProject = JavaCore.create(project);List<IClasspathEntry> classpath = new UniqueEList<IClasspathEntry>(Arrays.asList(javaProject.getRawClasspath()));for (int i = 0, len = classpath.size(); i < len; i++) {IClasspathEntry entry = classpath.get(i);if (entry.getEntryKind() == IClasspathEntry.CPE_SOURCE && (""/"" + project.getName()).equals(entry.getPath().toString())) {classpath.remove(i);}}progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETInitializingProject_message"", new Object[] { project.getName() }));IClasspathEntry classpathEntry = JavaCore.newSourceEntry(new Path(""/"" + project.getName() + ""/src""));IClasspathEntry jreClasspathEntry = JavaCore.newContainerEntry(new Path(""org.eclipse.jdt.launching.JRE_CONTAINER""));classpath.add(classpathEntry);classpath.add(jreClasspathEntry);classpath.addAll(getClassPathEntries());IFolder sourceFolder = project.getFolder(new Path(""src""));if (!sourceFolder.exists()) {sourceFolder.create(false, true, new SubProgressMonitor(progressMonitor, 1));}IFolder runtimeFolder = project.getFolder(new Path(""bin""));if (!runtimeFolder.exists()) {runtimeFolder.create(false, true, new SubProgressMonitor(progressMonitor, 1));}javaProject.setRawClasspath(classpath.toArray(new IClasspathEntry[classpath.size()]), new SubProgressMonitor(progressMonitor, 1));javaProject.setOutputLocation(new Path(""/"" + project.getName() + ""/bin""), new SubProgressMonitor(progressMonitor, 1));javaProject.close();progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETOpeningJavaProject_message"", new Object[] { project.getName() }));javaProject.open(new SubProgressMonitor(progressMonitor, 1));IPackageFragmentRoot[] packageFragmentRoots = javaProject.getPackageFragmentRoots();IPackageFragmentRoot sourcePackageFragmentRoot = null;for (int j = 0; j < packageFragmentRoots.length; ++j) {IPackageFragmentRoot packageFragmentRoot = packageFragmentRoots[j];if (packageFragmentRoot.getKind() == IPackageFragmentRoot.K_SOURCE) {sourcePackageFragmentRoot = packageFragmentRoot;break;}}StringTokenizer stringTokenizer = new StringTokenizer(packageName, ""."");IProgressMonitor subProgressMonitor = new SubProgressMonitor(progressMonitor, 1);subProgressMonitor.beginTask("""", stringTokenizer.countTokens() + 4);subProgressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_CreateTargetFile_message""));IContainer sourceContainer = sourcePackageFragmentRoot == null ? project : (IContainer) sourcePackageFragmentRoot.getCorrespondingResource();while (stringTokenizer.hasMoreElements()) {String folderName = stringTokenizer.nextToken();sourceContainer = sourceContainer.getFolder(new Path(folderName));if (!sourceContainer.exists()) {((IFolder) sourceContainer).create(false, true, new SubProgressMonitor(subProgressMonitor, 1));}}IFile targetFile = sourceContainer.getFile(new Path(jetCompiler.getSkeleton().getClassName() + "".java""));if (!targetFile.exists()) {subProgressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETCreating_message"", new Object[] { targetFile.getFullPath() }));targetFile.create(contents, true, new SubProgressMonitor(subProgressMonitor, 1));} else {subProgressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETUpdating_message"", new Object[] { targetFile.getFullPath() }));targetFile.setContents(contents, true, true, new SubProgressMonitor(subProgressMonitor, 1));}subProgressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETBuilding_message"", new Object[] { project.getName() }));project.build(IncrementalProjectBuilder.INCREMENTAL_BUILD, new SubProgressMonitor(subProgressMonitor, 1));boolean errors = hasErrors(subProgressMonitor, targetFile);if (!errors) {subProgressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETLoadingClass_message"", new Object[] { jetCompiler.getSkeleton().getClassName() + "".class"" }));List<URL> urls = new ArrayList<URL>();urls.add(new File(project.getLocation() + ""/"" + javaProject.getOutputLocation().removeFirstSegments(1) + ""/"").toURI().toURL());final Set<Bundle> bundles = new HashSet<Bundle>();LOOP: for (IClasspathEntry jetEmitterClasspathEntry : jetEmitter.getClasspathEntries()) {IClasspathAttribute[] classpathAttributes = jetEmitterClasspathEntry.getExtraAttributes();if (classpathAttributes != null) {for (IClasspathAttribute classpathAttribute : classpathAttributes) {if (classpathAttribute.getName().equals(CodeGenUtil.EclipseUtil.PLUGIN_ID_CLASSPATH_ATTRIBUTE_NAME)) {Bundle bundle = Platform.getBundle(classpathAttribute.getValue());if (bundle != null) {bundles.add(bundle);continue LOOP;}}}}urls.add(new URL(""platform:/resource"" + jetEmitterClasspathEntry.getPath() + ""/""));}URLClassLoader theClassLoader = new URLClassLoader(urls.toArray(new URL[0]), getClassLoader()) {@Overridepublic Class<?> loadClass(String className) throws ClassNotFoundException {try {return super.loadClass(className);} catch (ClassNotFoundException exception) {for (Bundle bundle : bundles) {try {return bundle.loadClass(className);} catch (ClassNotFoundException exception2) {}}throw exception;}}};Class<?> theClass = theClassLoader.loadClass((packageName.length() == 0 ? """" : packageName + ""."") + jetCompiler.getSkeleton().getClassName());String methodName = jetCompiler.getSkeleton().getMethodName();Method[] methods = theClass.getDeclaredMethods();for (int i = 0; i < methods.length; ++i) {if (methods[i].getName().equals(methodName)) {jetEmitter.setMethod(methods[i]);break;}}}subProgressMonitor.done();} catch (CoreException exception) {throw new JETException(exception);} catch (Exception exception) {throw new JETException(exception);} finally {progressMonitor.done();}}public void insertStringInFile(String file, String textToInsert, long fromByte, long toByte) throws Exception {String tmpFile = file + "".tmp"";BufferedInputStream in = null;BufferedOutputStream out = null;long byteCount = 0;try {in = new BufferedInputStream(new FileInputStream(new File(file)));out = new BufferedOutputStream(new FileOutputStream(tmpFile));long size = fromByte;byte[] buf = null;if (size == 0) {} else {buf = new byte[(int) size];int length = -1;if ((length = in.read(buf)) != -1) {out.write(buf, 0, length);byteCount = byteCount + length;} else {String msg = ""Failed to read the first '"" + size + ""' bytes of file '"" + file + ""'. This might be a programming error."";this.logger.warning(msg);throw new Exception(msg);}}buf = textToInsert.getBytes();int length = buf.length;out.write(buf, 0, length);byteCount = byteCount + length;long skipLength = toByte - fromByte;long skippedBytes = in.skip(skipLength);if (skippedBytes == -1) {} else {buf = new byte[4096];length = -1;while ((length = in.read(buf)) != -1) {out.write(buf, 0, length);byteCount = byteCount + length;}}in.close();in = null;out.close();out = null;File fileToDelete = new File(file);boolean wasDeleted = fileToDelete.delete();if (!wasDeleted) {String msg = ""Failed to delete the original file '"" + file + ""' to replace it with the modified file after text insertion."";this.logger.warning(msg);throw new Exception(msg);}File fileToRename = new File(tmpFile);boolean wasRenamed = fileToRename.renameTo(fileToDelete);if (!wasRenamed) {String msg = ""Failed to rename tmp file '"" + tmpFile + ""' to the name of the original file '"" + file + ""'"";this.logger.warning(msg);throw new Exception(msg);}} catch (Exception e) {this.logger.log(Level.WARNING, ""Failed to read/write file '"" + file + ""'."", e);throw e;} finally {if (in != null) {try {in.close();} catch (IOException e) {this.logger.log(Level.FINEST, ""Ignoring error closing input file '"" + file + ""'."", e);}}if (out != null) {try {out.close();} catch (IOException e) {this.logger.log(Level.FINEST, ""Ignoring error closing output file '"" + tmpFile + ""'."", e);}}}}public void run() throws Exception {logger.debug(""#run enter"");PreparedStatement psNextId = null;ResultSet rsNextId = null;PreparedStatement ps = null;try {PreparedStatement psCount = connection.prepareStatement(COUNT_ACTIVE_ORDERS);psCount.setString(1, login);ResultSet rsCount = psCount.executeQuery();if (rsCount.next()) {Integer count = rsCount.getInt(1);if (count > 0) {DBHelper.closeAll(null, rsCount, psCount);throw new RuntimeException(""У вас уже есть один активный заказ. Вы не можете создать второй."");}}connection.setAutoCommit(false);psNextId = connection.prepareStatement(NEXT_ORDER);rsNextId = psNextId.executeQuery();if (rsNextId.next()) {orderId = rsNextId.getInt(1);}rsNextId.close();psNextId.close();logger.info(""#run orderId  = "" + orderId);ps = connection.prepareStatement(INSERT_ORDER);ps.setInt(1, orderId);if (order.getCustomerId() != null) {ps.setInt(2, order.getCustomerId());} else {ps.setNull(2, Types.INTEGER);}ps.setString(3, order.getSellerLogin());ps.executeUpdate();ps.close();logger.info(""#run order insert OK"");Iterator<OrderLine> lines = order.getLines().iterator();while (lines.hasNext()) {OrderLine line = lines.next();CreateOrderLineAction action = new CreateOrderLineAction();action.execute(connection, orderId, line);}connection.commit();} catch (SQLException ex) {logger.error(""SQLException"", ex);connection.rollback();throw new Exception(""Не удалось создать заказ. Ошибка : "" + ex.getMessage());} finally {connection.setAutoCommit(true);}logger.debug(""#run exit"");}"	5
"protected void innerProcess(CrawlURI curi) throws InterruptedException {if (!curi.isHttpTransaction()) {return;}if (!TextUtils.matches(""^text.*$"", curi.getContentType())) {return;}long maxsize = DEFAULT_MAX_SIZE_BYTES.longValue();try {maxsize = ((Long) getAttribute(curi, ATTR_MAX_SIZE_BYTES)).longValue();} catch (AttributeNotFoundException e) {logger.severe(""Missing max-size-bytes attribute when processing "" + curi.getURIString());}if (maxsize < curi.getContentSize() && maxsize > -1) {return;}String regexpr = """";try {regexpr = (String) getAttribute(curi, ATTR_STRIP_REG_EXPR);} catch (AttributeNotFoundException e2) {logger.severe(""Missing strip-reg-exp when processing "" + curi.getURIString());return;}ReplayCharSequence cs = null;try {cs = curi.getHttpRecorder().getReplayCharSequence();} catch (Exception e) {curi.addLocalizedError(this.getName(), e, ""Failed get of replay char sequence "" + curi.toString() + "" "" + e.getMessage());logger.warning(""Failed get of replay char sequence "" + curi.toString() + "" "" + e.getMessage() + "" "" + Thread.currentThread().getName());return;}MessageDigest digest = null;try {digest = MessageDigest.getInstance(""SHA1"");} catch (NoSuchAlgorithmException e1) {e1.printStackTrace();return;}digest.reset();String s = null;if (regexpr.length() == 0) {s = cs.toString();} else {Matcher m = TextUtils.getMatcher(regexpr, cs);s = m.replaceAll("" "");}digest.update(s.getBytes());byte[] newDigestValue = digest.digest();if (logger.isLoggable(Level.FINEST)) {logger.finest(""Recalculated content digest for "" + curi.getURIString() + "" old: "" + Base32.encode((byte[]) curi.getContentDigest()) + "", new: "" + Base32.encode(newDigestValue));}curi.setContentDigest(newDigestValue);}public ServiceInfo[] findServices(String name) {Vector results = new Vector();String service_file = ServiceDiscovery.SERVICE_HOME + name;for (int loader_count = 0; loader_count < class_loaders_.size(); loader_count++) {ClassLoader loader = (ClassLoader) class_loaders_.elementAt(loader_count);Enumeration enumeration = null;try {enumeration = loader.getResources(service_file);} catch (IOException ex) {ex.printStackTrace();}if (enumeration == null) continue;while (enumeration.hasMoreElements()) {try {URL url = (URL) enumeration.nextElement();InputStream is = url.openStream();if (is != null) {try {BufferedReader rd;try {rd = new BufferedReader(new InputStreamReader(is, ""UTF-8""));} catch (java.io.UnsupportedEncodingException e) {rd = new BufferedReader(new InputStreamReader(is));}try {String service_class_name;while ((service_class_name = rd.readLine()) != null) {service_class_name.trim();if ("""".equals(service_class_name)) continue;if (service_class_name.startsWith(""#"")) continue;ServiceInfo sinfo = new ServiceInfo();sinfo.setClassName(service_class_name);sinfo.setLoader(loader);sinfo.setURL(url);results.add(sinfo);}} finally {rd.close();}} finally {is.close();}}} catch (MalformedURLException ex) {ex.printStackTrace();} catch (IOException ioe) {;}}}ServiceInfo result_array[] = new ServiceInfo[results.size()];results.copyInto(result_array);return (result_array);}public static byte[] encrypt(String x) throws Exception {java.security.MessageDigest d = null;d = java.security.MessageDigest.getInstance(""SHA-1"");d.reset();d.update(x.getBytes());return d.digest();}private static String simpleCompute(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(text.getBytes(""utf-8""), 0, text.length());sha1hash = md.digest();return convertToHex(sha1hash);}public static void main(String[] args) throws Exception {ClassPathXmlApplicationContext appContext = new ClassPathXmlApplicationContext(""camel/exec-context.xml"");CamelContext context = appContext.getBean(CamelContext.class);Exchange exchange = new DefaultExchange(context);List<String> arg = new ArrayList<String>();arg.add(""/home/sumit/derby.log"");arg.add(""helios:cameltesting/"");exchange.getIn().setHeader(ExecBinding.EXEC_COMMAND_ARGS, arg);Exchange res = context.createProducerTemplate().send(""direct:input"", exchange);ExecResult result = (ExecResult) res.getIn().getBody();System.out.println(result.getExitValue());System.out.println(result.getCommand());if (result.getStderr() != null) {IOUtils.copy(result.getStderr(), new FileOutputStream(new File(""/home/sumit/error.log"")));}if (result.getStdout() != null) {IOUtils.copy(result.getStdout(), new FileOutputStream(new File(""/home/sumit/out.log"")));}appContext.close();}public static String exchangeForSessionToken(String protocol, String domain, String onetimeUseToken, PrivateKey key) throws IOException, GeneralSecurityException, AuthenticationException {String sessionUrl = getSessionTokenUrl(protocol, domain);URL url = new URL(sessionUrl);HttpURLConnection httpConn = (HttpURLConnection) url.openConnection();String header = formAuthorizationHeader(onetimeUseToken, key, url, ""GET"");httpConn.setRequestProperty(""Authorization"", header);if (httpConn.getResponseCode() != HttpURLConnection.HTTP_OK) {throw new AuthenticationException(httpConn.getResponseCode() + "": "" + httpConn.getResponseMessage());}String body = IOUtils.toString(httpConn.getInputStream());Map parsedTokens = StringUtils.string2Map(body, ""\n"", ""="", true);parsedTokens = StringUtils.lowercaseKeys(parsedTokens);return (String) parsedTokens.get(""token"");}private static void processFile(String file) throws IOException {FileInputStream in = new FileInputStream(file);int read = 0;byte[] buf = new byte[2048];ByteArrayOutputStream bout = new ByteArrayOutputStream();while ((read = in.read(buf)) > 0) bout.write(buf, 0, read);in.close();String converted = bout.toString().replaceAll(""@project.name@"", projectNameS).replaceAll(""@base.package@"", basePackageS).replaceAll(""@base.dir@"", baseDir).replaceAll(""@webapp.dir@"", webAppDir).replaceAll(""path=\""target/classes\"""", ""path=\""src/main/webapp/WEB-INF/classes\"""");FileOutputStream out = new FileOutputStream(file);out.write(converted.getBytes());out.close();}private static void copyFile(String from, String to) throws IOException {FileReader in = new FileReader(from);FileWriter out = new FileWriter(to);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();}public void load(boolean isOrdered) throws ResourceInstantiationException {try {if (null == url) {throw new ResourceInstantiationException(""URL not specified (null)."");}BufferedReader listReader;listReader = new BomStrippingInputStreamReader((url).openStream(), encoding);String line;int linenr = 0;while (null != (line = listReader.readLine())) {linenr++;GazetteerNode node = null;try {node = new GazetteerNode(line, separator, isOrdered);} catch (Exception ex) {throw new GateRuntimeException(""Could not read gazetteer entry "" + linenr + "" from URL "" + getURL() + "": "" + ex.getMessage(), ex);}entries.add(new GazetteerNode(line, separator, isOrdered));}listReader.close();} catch (Exception x) {throw new ResourceInstantiationException(x.getClass() + "":"" + x.getMessage());}isModified = false;}public int executeBatch(String[] commands, String applicationid) throws Exception {Statement statement = null;int errors = 0;int commandCount = 0;Connection conn = null;try {conn = getConnection(applicationid);conn.setAutoCommit(false);statement = conn.createStatement();for (int i = 0; i < commands.length; i++) {String command = commands[i];if (command.trim().length() == 0) {continue;}commandCount++;try {log.info(""executing SQL: "" + command);int results = statement.executeUpdate(command);log.info(""After execution, "" + results + "" row(s) have been changed"");} catch (SQLException ex) {throw ex;}}conn.commit();log.info(""Executed "" + commandCount + "" SQL command(s) with "" + errors + "" error(s)"");} catch (SQLException ex) {if (conn != null) {conn.rollback();}throw ex;} catch (Exception e) {if (conn != null) {conn.rollback();}throw e;} finally {statement.close();}return errors;}"	5
"public String upload(String urlString, ByteArrayOutputStream dataStream) {HttpURLConnection conn = null;DataOutputStream dos = null;String exsistingFileName = ""blah.png"";String lineEnd = ""\r\n"";String twoHyphens = ""--"";String boundary = ""*****"";try {URL url = new URL(urlString);conn = (HttpURLConnection) url.openConnection();conn.setInstanceFollowRedirects(false);conn.setDoInput(true);conn.setDoOutput(true);conn.setUseCaches(false);conn.setRequestMethod(""POST"");conn.setRequestProperty(""Connection"", ""Keep-Alive"");conn.setRequestProperty(""Content-Type"", ""multipart/form-data;boundary="" + boundary);dos = new DataOutputStream(conn.getOutputStream());dos.writeBytes(twoHyphens + boundary + lineEnd);dos.writeBytes(""Content-Disposition: form-data; name=\""aFile\"";"" + "" filename=\"""" + exsistingFileName + ""\"""" + lineEnd);dos.writeBytes(lineEnd);dos.write(dataStream.toByteArray());dos.writeBytes(lineEnd);dos.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);dos.flush();dos.close();return conn.getHeaderField(""location"");} catch (MalformedURLException ex) {log.log(Level.INFO, ""From ServletCom CLIENT REQUEST:"" + ex);} catch (IOException ioe) {log.log(Level.INFO, ""From ServletCom CLIENT REQUEST:"" + ioe);}return null;}@SuppressWarnings(""unchecked"")public static void main(String[] args) {System.out.println(""Starting encoding test...."");Properties p = new Properties();try {InputStream pStream = ClassLoader.getSystemResourceAsStream(""sample_weather.properties"");p.load(pStream);} catch (Exception e) {System.err.println(""Could not load properties file."");System.err.println(e.getMessage());e.printStackTrace();return;}if (WeatherUpdater.DEBUG) {System.out.println(""hostname: "" + p.getProperty(""weather.hostname""));}if (WeatherUpdater.DEBUG) {System.out.println(""database: "" + p.getProperty(""weather.database""));}if (WeatherUpdater.DEBUG) {System.out.println(""username: "" + p.getProperty(""weather.username""));}if (WeatherUpdater.DEBUG) {System.out.println(""password: "" + p.getProperty(""weather.password""));}SqlAccount sqlAccount = new SqlAccount(p.getProperty(""weather.hostname""), p.getProperty(""weather.database""), p.getProperty(""weather.username""), p.getProperty(""weather.password""));DatabaseInterface dbi = null;try {dbi = new DatabaseInterface(sqlAccount);} catch (Exception e) {System.err.println(e.getMessage());e.printStackTrace();return;}System.out.println(""Established connection to database."");String query = ""SELECT * FROM Current_Weather WHERE ZipCode = '99702'"";ResultTable results;System.out.println(""Executing query: "" + query);try {results = dbi.executeQuery(query);} catch (Exception e) {System.err.println(e.getMessage());e.printStackTrace();return;}System.out.println(""Got results from query."");System.out.println(""Converted results into the following table:"");System.out.println(results);System.out.println();Class<? extends ResultEncoder> encoder_class;Class<? extends ResultDecoder> decoder_class;try {encoder_class = (Class<? extends ResultEncoder>) Class.forName(p.getProperty(""mysms.coding.resultEncoder""));decoder_class = (Class<? extends ResultDecoder>) Class.forName(p.getProperty(""mysms.coding.resultDecoder""));} catch (Exception e) {System.err.println(""Could not find specified encoder: "" + p.getProperty(""result.encoder""));System.err.println(e.getMessage());e.printStackTrace();return;}System.out.println(""Found class of encoder: "" + encoder_class);System.out.println(""Found class of decoder: "" + decoder_class);ResultEncoder encoder;ResultDecoder decoder;try {encoder = encoder_class.newInstance();if (encoder_class.equals(decoder_class) && decoder_class.isInstance(encoder)) {decoder = (ResultDecoder) encoder;} else {decoder = decoder_class.newInstance();}} catch (Exception e) {System.err.println(""Could not create instances of encoder and decoder."");System.err.println(e.getMessage());e.printStackTrace();return;}System.out.println(""Created instances of encoder and decoder."");if (decoder.equals(encoder)) {System.out.println(""Decoder and encoder are same object."");}ByteBuffer buffer;try {buffer = encoder.encode(null, results);} catch (Exception e) {System.err.println(""Could not encode results."");System.err.println(e.getMessage());e.printStackTrace();return;}System.out.println(""Encoded results to ByteBuffer with size: "" + buffer.capacity());File temp;try {temp = File.createTempFile(""encoding_test"", "".results"");temp.deleteOnExit();FileChannel out = new FileOutputStream(temp).getChannel();out.write(buffer);out.close();} catch (Exception e) {System.err.println(""Could not write buffer to file."");System.err.println(e.getMessage());e.printStackTrace();return;}System.out.println(""Wrote buffer to file: \"""" + temp.getName() + ""\"" with length: "" + temp.length());ByteBuffer re_buffer;try {FileInputStream in = new FileInputStream(temp.getAbsolutePath());byte[] temp_buffer = new byte[(int) temp.length()];int totalRead = 0;int numRead = 0;while (totalRead < temp_buffer.length) {numRead = in.read(temp_buffer, totalRead, temp_buffer.length - totalRead);if (numRead < 0) {break;} else {totalRead += numRead;}}re_buffer = ByteBuffer.wrap(temp_buffer);in.close();} catch (Exception e) {System.err.println(""Could not read from temporary file into buffer."");System.err.println(e.getMessage());e.printStackTrace();return;}System.out.println(""Read file back into buffer with length: "" + re_buffer.capacity());ResultTable re_results;try {re_results = decoder.decode(null, re_buffer);} catch (Exception e) {System.err.println(""Could not decode buffer into a ResultTable."");System.err.println(e.getMessage());e.printStackTrace();return;}System.out.println(""Decoded buffer back into the following table:"");System.out.println(re_results);System.out.println();System.out.println(""... encoding test complete."");}public static String SHA1(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(text.getBytes(""iso-8859-1""), 0, text.length());sha1hash = md.digest();return convertToHex(sha1hash);}public static void copyFile(File source, File destination) {if (!source.exists()) {return;}if ((destination.getParentFile() != null) && (!destination.getParentFile().exists())) {destination.getParentFile().mkdirs();}try {FileChannel srcChannel = new FileInputStream(source).getChannel();FileChannel dstChannel = new FileOutputStream(destination).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (IOException ioe) {ioe.printStackTrace();}}private static String downloadMedia(String mediadir, URL remoteFile) throws Exception, InterruptedException {File tmpDir = new File(System.getProperty(""java.io.tmpdir"") + ""org.ogre4j.examples/"" + mediadir);if (!tmpDir.exists()) {tmpDir.mkdirs();}URLConnection urlConnection = remoteFile.openConnection();if (urlConnection.getConnectTimeout() != 0) {urlConnection.setConnectTimeout(0);}InputStream content = remoteFile.openStream();BufferedInputStream bin = new BufferedInputStream(content);String downloaded = tmpDir.getCanonicalPath() + File.separatorChar + new File(remoteFile.getFile()).getName();File file = new File(downloaded);BufferedOutputStream bout = new BufferedOutputStream(new FileOutputStream(file));System.out.println(""downloading file "" + remoteFile + "" ..."");for (long i = 0; i < urlConnection.getContentLength(); i++) {bout.write(bin.read());}bout.close();bout = null;bin.close();return downloaded;}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}@NotNullpublic Set<Class<?>> in(Package pack) {String packageName = pack.getName();String packageOnly = pack.getName();final boolean recursive = true;Set<Class<?>> classes = new LinkedHashSet<Class<?>>();String packageDirName = packageOnly.replace('.', '/');Enumeration<URL> dirs;try {dirs = Thread.currentThread().getContextClassLoader().getResources(packageDirName);} catch (IOException e) {throw new PackageScanFailedException(""Could not read from package directory: "" + packageDirName, e);}while (dirs.hasMoreElements()) {URL url = dirs.nextElement();String protocol = url.getProtocol();if (""file"".equals(protocol)) {try {findClassesInDirPackage(packageOnly, URLDecoder.decode(url.getFile(), ""UTF-8""), recursive, classes);} catch (UnsupportedEncodingException e) {throw new PackageScanFailedException(""Could not read from file: "" + url, e);}} else if (""jar"".equals(protocol)) {JarFile jar;try {jar = ((JarURLConnection) url.openConnection()).getJarFile();} catch (IOException e) {throw new PackageScanFailedException(""Could not read from jar url: "" + url, e);}Enumeration<JarEntry> entries = jar.entries();while (entries.hasMoreElements()) {JarEntry entry = entries.nextElement();String name = entry.getName();if (name.charAt(0) == '/') {name = name.substring(1);}if (name.startsWith(packageDirName)) {int idx = name.lastIndexOf('/');if (idx != -1) {packageName = name.substring(0, idx).replace('/', '.');}if ((idx != -1) || recursive) {if (name.endsWith("".class"") && !entry.isDirectory()) {String className = name.substring(packageName.length() + 1, name.length() - 6);add(packageName, classes, className);}}}}}}return classes;}private static void readAndRewrite(File inFile, File outFile) throws IOException {ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);Dataset ds = DcmObjectFactory.getInstance().newDataset();dcmParser.setDcmHandler(ds.getDcmHandler());dcmParser.parseDcmFile(null, Tags.PixelData);PixelDataReader pdReader = pdFact.newReader(ds, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());System.out.println(""reading "" + inFile + ""..."");pdReader.readPixelData(false);ImageOutputStream out = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;ds.writeDataset(out, dcmEncParam);ds.writeHeader(out, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());System.out.println(""writing "" + outFile + ""..."");PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, ds, out, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());pdWriter.writePixelData();out.flush();out.close();System.out.println(""done!"");}public void xtestURL1() throws Exception {URL url = new URL(IOTest.URL);InputStream inputStream = url.openStream();OutputStream outputStream = new FileOutputStream(""C:/Temp/testURL1.mp4"");IOUtils.copy(inputStream, outputStream);inputStream.close();outputStream.close();}"	5
"public void run() {btnReintentar.setEnabled(false);try {lblEstado.setText(""Conectando con servidor..."");escribir(""\nConectando con servidor..."");URL url = new URL(""http://apeiron.sourceforge.net/version.php"");lblEstado.setText(""Obteniendo informaci�n de versi�n..."");escribir(""Ok\n"");escribir(""Obteniendo informaci�n sobre �ltima versi�n..."");BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));String linea = br.readLine();escribir(""Ok\n"");if (linea != null) {escribir(""Versi�n mas reciente: "" + linea + ""\n"");if (Principal.version < Double.parseDouble(linea)) {lblEstado.setText(""Hay una nueva versi�n: Apeiron "" + linea);escribir(""Puede obtener la actualizaci�n de: http://apeiron.sourceforge.net\n"");btnActualizar.setEnabled(true);setVisible(true);} else {lblEstado.setText(""Usted tiene la �ltima versi�n"");}}br.close();} catch (MalformedURLException e) {escribir(""Fall�\n"" + e + ""\n"");e.printStackTrace();} catch (IOException e) {escribir(""Fall�\n"" + e + ""\n"");e.printStackTrace();}btnReintentar.setEnabled(true);}public static void insert(Connection c, MLPApprox net, int azioneId, String descrizione, int[] indiciID, int output, Date from, Date to) throws SQLException {try {PreparedStatement ps = c.prepareStatement(insertNet, PreparedStatement.RETURN_GENERATED_KEYS);ArrayList<Integer> indexes = new ArrayList<Integer>(indiciID.length);for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i]);ps.setObject(1, net);ps.setInt(2, azioneId);ps.setObject(3, indexes);ps.setInt(4, output);ps.setDate(5, from);ps.setDate(6, to);ps.setString(7, descrizione);ps.executeUpdate();ResultSet key = ps.getGeneratedKeys();if (key.next()) {int id = key.getInt(1);for (int i = 0; i < indiciID.length; i++) {PreparedStatement psIndex = c.prepareStatement(insertNetIndex);psIndex.setInt(1, indiciID[i]);psIndex.setInt(2, id);psIndex.executeUpdate();}}} catch (SQLException e) {e.printStackTrace();try {c.rollback();} catch (SQLException e1) {e1.printStackTrace();throw e1;}throw e;}}public void getDataFiles(String server, String username, String password, String folder, String destinationFolder) {try {FTPClient ftp = new FTPClient();ftp.connect(server);ftp.login(username, password);System.out.println(""Connected to "" + server + ""."");System.out.print(ftp.getReplyString());ftp.enterLocalActiveMode();ftp.changeWorkingDirectory(folder);System.out.println(""Changed to "" + folder);FTPFile[] files = ftp.listFiles();System.out.println(""Number of files in dir: "" + files.length);for (int i = 0; i < files.length; i++) {getFiles(ftp, files[i], destinationFolder);}ftp.logout();ftp.disconnect();} catch (Exception e) {e.printStackTrace();}}public void putDataFiles(String server, String username, String password, String folder, String destinationFolder) {try {FTPClient ftp = new FTPClient();ftp.connect(server);System.out.println(""Connected"");ftp.login(username, password);System.out.println(""Logged in to "" + server + ""."");System.out.print(ftp.getReplyString());ftp.changeWorkingDirectory(destinationFolder);System.out.println(""Changed to directory "" + destinationFolder);File localRoot = new File(folder);File[] files = localRoot.listFiles();System.out.println(""Number of files in dir: "" + files.length);for (int i = 0; i < files.length; i++) {putFiles(ftp, files[i]);}ftp.logout();ftp.disconnect();} catch (Exception e) {e.printStackTrace();}}private Document getResponse(HttpGet request) throws ClientProtocolException, IOException, ParserConfigurationException, IllegalStateException, SAXException, NoRoutesException {HttpClient httpClient = new DefaultHttpClient();HttpResponse response = httpClient.execute(request);if (response.getStatusLine().getStatusCode() != HTTP_STATUS_OK) throw new ClientProtocolException(""The HTTP request is wrong."");allResponse = EntityUtils.toString(response.getEntity());String responseText = """";switch(modeOption) {case DRIVING:try {responseText = allResponse.substring(allResponse.indexOf(""<ol""), allResponse.indexOf(""</ol>"") + 5);} catch (Exception e) {throw new NoRoutesException();}break;case WALKING:try {responseText = allResponse.substring(allResponse.indexOf(""<ol""), allResponse.indexOf(""</ol>"") + 5);} catch (Exception e) {throw new NoRoutesException();}break;case PUBLIC_TRANSIT:String responseWithErrors = """";try {responseWithErrors = allResponse.substring(allResponse.indexOf(""<div id=\""tsp\"">""), allResponse.indexOf(""<div class=\""ddwpt\"" id=\""panel_ddw1\"" oi=\""wi1\"">""));} catch (Exception e) {throw new NoRoutesException();}responseText = responseWithErrors.replaceAll("".gif\"">"", "".gif\""/>"").replaceAll(""colspan=2"", ""colspan=\""2\"""").replaceAll(""nowrap"", """").replaceAll(""&laquo;"", """").replaceAll(""&nbsp;"", """").replaceAll(""&raquo;"", """");break;}File xmlFile = new File(""./data/temp/response.xml"");PrintWriter writer = new PrintWriter(xmlFile);writer.println(responseText);writer.close();DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();return dBuilder.parse(xmlFile);}@Overridepublic boolean copy(Document document, Folder folder) throws Exception {boolean isCopied = false;if (document.getId() != null && folder.getId() != null) {Document copiedDoc = new DocumentModel();copiedDoc.setValues(document.getValues());copiedDoc.setFolder(folder);copiedDoc.setId(null);em.persist(copiedDoc);resourceAuthorityService.applyAuthority(copiedDoc);List<Preference> preferences = prefService.findAll();Preference preference = new PreferenceModel();if (preferences != null && !preferences.isEmpty()) {preference = preferences.get(0);}String repo = preference.getRepository();SimpleDateFormat sdf = new SimpleDateFormat(Constants.DATEFORMAT_YYYYMMDD);Calendar calendar = Calendar.getInstance();StringBuffer sbRepo = new StringBuffer(repo);sbRepo.append(File.separator);StringBuffer sbFolder = new StringBuffer(sdf.format(calendar.getTime()));sbFolder.append(File.separator).append(calendar.get(Calendar.HOUR_OF_DAY));File fFolder = new File(sbRepo.append(sbFolder).toString());if (!fFolder.exists()) {fFolder.mkdirs();}copiedDoc.setLocation(sbFolder.toString());em.merge(copiedDoc);File in = new File(repo + File.separator + document.getLocation() + File.separator + document.getId() + ""."" + document.getExt());File out = new File(fFolder.getAbsolutePath() + File.separator + copiedDoc.getId() + ""."" + copiedDoc.getExt());FileChannel inChannel = new FileInputStream(in).getChannel();FileChannel outChannel = new FileOutputStream(out).getChannel();try {inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {throw e;} finally {if (inChannel != null) inChannel.close();if (outChannel != null) outChannel.close();}}return isCopied;}public void readData(int choice) throws IOException {for (i = 0; i < max; i++) for (j = 0; j < max; j++) {phase_x[i][j] = 0.0;phase_y[i][j] = 0.0;}URL url;InputStream is;InputStreamReader isr;if (choice == 0) {url = getClass().getResource(""resources/Phase_623_620_Achromat.dat"");is = url.openStream();isr = new InputStreamReader(is);} else {url = getClass().getResource(""resources/Phase_623_620_NoAchromat.dat"");is = url.openStream();isr = new InputStreamReader(is);}BufferedReader br = new BufferedReader(isr);s = br.readLine();StringTokenizer st = new StringTokenizer(s);i = 0;j = 0;phase_x[i][j] = 4 * Double.parseDouble(st.nextToken());phase_y[i][j] = 4 * Double.parseDouble(st.nextToken());xgridmin = phase_x[i][j];ygridmin = phase_y[i][j];temp_prev = phase_x[i][j];kd[i][j] = Double.parseDouble(st.nextToken());kfs[i][j] = Double.parseDouble(st.nextToken());kfl[i][j] = Double.parseDouble(st.nextToken());kdee[i][j] = Double.parseDouble(st.nextToken());kdc[i][j] = Double.parseDouble(st.nextToken());kfc[i][j] = Double.parseDouble(st.nextToken());j++;int k = 0;while ((s = br.readLine()) != null) {st = new StringTokenizer(s);temp_new = 4 * Double.parseDouble(st.nextToken());if (temp_new != temp_prev) {temp_prev = temp_new;i++;j = 0;}phase_x[i][j] = temp_new;phase_y[i][j] = 4 * Double.parseDouble(st.nextToken());kd[i][j] = Double.parseDouble(st.nextToken());kfs[i][j] = Double.parseDouble(st.nextToken());kfl[i][j] = Double.parseDouble(st.nextToken());kdee[i][j] = Double.parseDouble(st.nextToken());kdc[i][j] = Double.parseDouble(st.nextToken());kfc[i][j] = Double.parseDouble(st.nextToken());imax = i;jmax = j;j++;k++;}xgridmax = phase_x[i][j - 1];ygridmax = phase_y[i][j - 1];}@TestTargets({ @TestTargetNew(level = TestLevel.PARTIAL_COMPLETE, notes = ""Verifies that the ObjectInputStream constructor calls checkPermission on security manager."", method = ""ObjectInputStream"", args = { InputStream.class }) })public void test_ObjectInputStream2() throws IOException {class TestSecurityManager extends SecurityManager {boolean called;Permission permission;void reset() {called = false;permission = null;}@Overridepublic void checkPermission(Permission permission) {if (permission instanceof SerializablePermission) {called = true;this.permission = permission;}}}class TestObjectInputStream extends ObjectInputStream {TestObjectInputStream(InputStream s) throws StreamCorruptedException, IOException {super(s);}}class TestObjectInputStream_readFields extends ObjectInputStream {TestObjectInputStream_readFields(InputStream s) throws StreamCorruptedException, IOException {super(s);}@Overridepublic GetField readFields() throws IOException, ClassNotFoundException, NotActiveException {return super.readFields();}}class TestObjectInputStream_readUnshared extends ObjectInputStream {TestObjectInputStream_readUnshared(InputStream s) throws StreamCorruptedException, IOException {super(s);}@Overridepublic Object readUnshared() throws IOException, ClassNotFoundException {return super.readUnshared();}}long id = new java.util.Date().getTime();String filename = ""SecurityPermissionsTest_"" + id;File f = File.createTempFile(filename, null);ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(f));oos.writeObject(new Node());oos.flush();oos.close();f.deleteOnExit();TestSecurityManager s = new TestSecurityManager();System.setSecurityManager(s);s.reset();new ObjectInputStream(new FileInputStream(f));assertTrue(""ObjectInputStream(InputStream) ctor must not call checkPermission on security manager on a class which neither overwrites methods readFields nor readUnshared"", !s.called);s.reset();new TestObjectInputStream(new FileInputStream(f));assertTrue(""ObjectInputStream(InputStream) ctor must not call checkPermission on security manager on a class which neither overwrites methods readFields nor readUnshared"", !s.called);s.reset();new TestObjectInputStream_readFields(new FileInputStream(f));assertTrue(""ObjectInputStream(InputStream) ctor must call checkPermission on security manager on a class which overwrites method readFields"", s.called);assertEquals(""Name of SerializablePermission is not correct"", ""enableSubclassImplementation"", s.permission.getName());s.reset();new TestObjectInputStream_readUnshared(new FileInputStream(f));assertTrue(""ObjectInputStream(InputStream) ctor must call checkPermission on security manager on a class which overwrites method readUnshared"", s.called);assertEquals(""Name of SerializablePermission is not correct"", ""enableSubclassImplementation"", s.permission.getName());}public static JuneClass loadClass(Map<String, Entity> globals, String packageName, String baseClassName) {try {JuneClass $class = null;String resourceName = (packageName.length() > 0 ? packageName.replace('.', '/') + ""/"" : """") + baseClassName.replace('.', '$') + "".class"";URL url = Resolver.class.getClassLoader().getResource(resourceName);if (url != null) {ClassBuilder builder = new ClassBuilder(globals);InputStream stream = url.openStream();try {new ClassReader(new BufferedInputStream(stream)).accept(builder, ClassReader.SKIP_CODE);} finally {stream.close();}$class = builder.$class;$class.loaded = true;}return $class;} catch (Exception e) {throw Helper.throwAny(e);}}public static void copyFileNIO(String src, String dst) {try {FileChannel srcChannel = new FileInputStream(src).getChannel();FileChannel dstChannel = new FileOutputStream(dst).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (IOException e) {e.printStackTrace();}}"	5
"private void outputSignedOpenDocument(byte[] signatureData) throws IOException {LOG.debug(""output signed open document"");OutputStream signedOdfOutputStream = getSignedOpenDocumentOutputStream();if (null == signedOdfOutputStream) {throw new NullPointerException(""signedOpenDocumentOutputStream is null"");}ZipOutputStream zipOutputStream = new ZipOutputStream(signedOdfOutputStream);ZipInputStream zipInputStream = new ZipInputStream(this.getOpenDocumentURL().openStream());ZipEntry zipEntry;while (null != (zipEntry = zipInputStream.getNextEntry())) {if (!zipEntry.getName().equals(ODFUtil.SIGNATURE_FILE)) {zipOutputStream.putNextEntry(zipEntry);IOUtils.copy(zipInputStream, zipOutputStream);}}zipInputStream.close();zipEntry = new ZipEntry(ODFUtil.SIGNATURE_FILE);zipOutputStream.putNextEntry(zipEntry);IOUtils.write(signatureData, zipOutputStream);zipOutputStream.close();}public InputLattice(String file, int type, boolean convertJoinMeet) throws FileNotFoundException, IOException {InputStream latStream = null;labels = new Vector();upperCoversVector = new Vector();Vector upperCovers = new Vector();edgeColors = new Hashtable();Vector upperCovering = new Vector();int level = 0;String str;String currentElt = null;String cover = null;boolean first = true;StreamTokenizer in;switch(type) {case FILE:latStream = new FileInputStream(file);break;case STRING:latStream = new StringBufferInputStream(file);break;case URL:URL url = new URL(""http"", Config.HOST, Config.PORT, ""/"" + Config.HASSE + ""/"" + Config.URL_STREAMER + file);System.out.println(""url is "" + url);URLConnection connection = url.openConnection();latStream = new DataInputStream(connection.getInputStream());break;}in = new StreamTokenizer(latStream);in.wordChars('^', '_');in.wordChars('*', '.');while (in.nextToken() != StreamTokenizer.TT_EOF) {if (in.ttype == StreamTokenizer.TT_WORD || in.ttype == StreamTokenizer.TT_NUMBER || in.ttype == '""') {if (in.ttype == StreamTokenizer.TT_NUMBER) {str = """" + Math.round(in.nval);} else {str = in.sval;}if (convertJoinMeet && level > 1) {str = stringSubstitute(str, joinStr, joinSign);str = stringSubstitute(str, meetStr, meetSign);}if (level == 1) {name = new String(str);}if (level == 2) {labels.addElement(str);currentElt = str;}if (level == 3) {upperCovers.addElement(str);}if (level == 4) {if (first) {upperCovers.addElement(str);cover = str;first = false;} else {edgeColors.put(new Edge(currentElt, cover), str);}}}if (in.ttype == '(') {level++;if (level == 3) upperCovers = new Vector();}if (in.ttype == ')') {level--;if (level == 3) first = true;if (level == 2) upperCoversVector.addElement(upperCovers);if (level == 0) {if (latStream != null) latStream.close();return;}}}}public void mouseClicked(MouseEvent e) {String userNameString;String passwordString;String md5String = """";MessageDigest md;userNameString = userNameJTextField.getText();passwordString = passwordJTextField.getText();try {md = MessageDigest.getInstance(""MD5"");md.update(passwordString.getBytes());md5String = new String(md.digest());md5String = Base64.encode(md5String.getBytes());System.out.println(md5String);} catch (NoSuchAlgorithmException e1) {e1.printStackTrace();System.out.println(""ʧ��"");}if (userNameString.equals(""zouwulingde"") && md5String.equals(""aKdtP09kSTkWCD/cylk="")) {JOptionPane.showMessageDialog(null, ""��ӭʹ��ѧ���ڹ���ϵͳ��"");} else {JOptionPane.showMessageDialog(null, ""�û�������벻��ȷ!!!!"");}}public static String encrypt(String password) throws NoSuchAlgorithmException {java.security.MessageDigest d = null;d = java.security.MessageDigest.getInstance(""MD5"");d.reset();d.update(password.getBytes());byte[] cr = d.digest();return getString(cr).toLowerCase();}@Overridepublic boolean setupDatabaseSchema() {Configuration cfg = Configuration.getInstance();Connection con = getConnection();if (null == con) return false;try {String sql = FileTool.readFile(cfg.getProperty(""database.sql.rootdir"") + System.getProperty(""file.separator"") + cfg.getProperty(""database.sql.mysql.setupschema""));sql = sql.replaceAll(MYSQL_SQL_SCHEMA_REPLACEMENT, StateSaver.getInstance().getDatabaseSettings().getSchema());con.setAutoCommit(false);Statement stmt = con.createStatement();String[] sqlParts = sql.split("";"");for (String sqlPart : sqlParts) {if (sqlPart.trim().length() > 0) stmt.executeUpdate(sqlPart);}con.commit();JOptionPane.showMessageDialog(null, language.getProperty(""database.messages.executionsuccess""), language.getProperty(""dialog.information.title""), JOptionPane.INFORMATION_MESSAGE);return true;} catch (SQLException e) {Logger.logException(e);}try {if (con != null) con.rollback();} catch (SQLException e) {Logger.logException(e);}JOptionPane.showMessageDialog(null, language.getProperty(""database.messages.executionerror""), language.getProperty(""dialog.error.title""), JOptionPane.ERROR_MESSAGE);return false;}public PollSetMessage(String username, String question, String title, String[] choices) {this.username = username;MessageDigest m = null;try {m = MessageDigest.getInstance(""SHA-1"");} catch (NoSuchAlgorithmException ex) {ex.printStackTrace();}String id = username + String.valueOf(System.nanoTime());m.update(id.getBytes(), 0, id.length());voteId = new BigInteger(1, m.digest()).toString(16);this.question = question;this.title = title;this.choices = choices;}public static void test() {try {Pattern pattern = Pattern.compile(""[0-9]{3}\\. <a href='(.*)\\.html'>(.*)</a><br />"");URL url = new URL(""http://farmfive.com/"");BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));String line;int count = 0;while ((line = br.readLine()) != null) {Matcher match = pattern.matcher(line);if (match.matches()) {System.out.println(match.group(1) + "" "" + match.group(2));count++;}}System.out.println(count + "" counted"");br.close();} catch (Exception e) {e.printStackTrace();}}public static void bubbleSort(String[] a) {Collator myCollator = Collator.getInstance();boolean switched = true;for (int pass = 0; pass < a.length - 1 && switched; pass++) {switched = false;for (int i = 0; i < a.length - pass - 1; i++) {if (myCollator.compare(a[i], a[i + 1]) > 0) {switched = true;String temp = a[i];a[i] = a[i + 1];a[i + 1] = temp;}}}}public String hash(String password) {MessageDigest sha1Digest;try {sha1Digest = MessageDigest.getInstance(""SHA-1"");} catch (NoSuchAlgorithmException e) {throw NestedException.wrap(e);}sha1Digest.update(password.getBytes());StringBuilder retval = new StringBuilder(""sha1:"");retval.append(new String(Base64.encodeBase64(sha1Digest.digest())));return retval.toString();}private RSSFeed getFeed(String urlToRssFeed) {try {URL url = new URL(urlToRssFeed);SAXParserFactory factory = SAXParserFactory.newInstance();SAXParser parser = factory.newSAXParser();XMLReader xmlreader = parser.getXMLReader();RSSHandler theRssHandler = new RSSHandler();xmlreader.setContentHandler(theRssHandler);InputSource is = new InputSource(url.openStream());xmlreader.parse(is);return theRssHandler.getFeed();} catch (Exception ee) {return null;}}"	5
"private String calculateHash(String s) {if (s == null) {return null;}MessageDigest messageDigest;try {messageDigest = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {logger.error(""Could not find a message digest algorithm."");return null;}messageDigest.update(s.getBytes());byte[] hash = messageDigest.digest();StringBuilder sb = new StringBuilder();for (byte b : hash) {sb.append(String.format(""%02x"", b));}return sb.toString();}private String createHash() {String hash = """";try {final java.util.Calendar c = java.util.Calendar.getInstance();String day = """" + c.get(java.util.Calendar.DATE);day = (day.length() == 1) ? '0' + day : day;String month = """" + (c.get(java.util.Calendar.MONTH) + 1);month = (month.length() == 1) ? '0' + month : month;final String hashString = getStringProperty(""hashkey"") + day + ""."" + month + ""."" + c.get(java.util.Calendar.YEAR);final MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(hashString.getBytes());final byte digest[] = md.digest();hash = """";for (int i = 0; i < digest.length; i++) {final String s = Integer.toHexString(digest[i] & 0xFF);hash += ((s.length() == 1) ? ""0"" + s : s);}} catch (final NoSuchAlgorithmException e) {bot.getLogger().log(e);}return hash;}public void testAuthentication() throws Exception {String host = ""localhost"";int port = DEFAULT_PORT;URL url = new URL(""http://"" + host + "":"" + port + ""/"");URLConnection connection = url.openConnection();InputStream in = connection.getInputStream();in.close();waitToStop();server.setAttribute(name, new Attribute(""AuthenticationMethod"", ""basic""));server.invoke(name, ""addAuthorization"", new Object[] { ""mx4j"", ""mx4j"" }, new String[] { ""java.lang.String"", ""java.lang.String"" });server.invoke(name, ""start"", null, null);url = new URL(""http://"" + host + "":"" + port + ""/"");connection = url.openConnection();try {in = connection.getInputStream();} catch (Exception e) {} finally {in.close();}assertEquals(((HttpURLConnection) connection).getResponseCode(), 401);url = new URL(""http://"" + host + "":"" + port + ""/"");connection = url.openConnection();connection.setRequestProperty(""Authorization"", ""basic bXg0ajpteDRq"");in = connection.getInputStream();in.close();waitToStop();server.setAttribute(name, new Attribute(""AuthenticationMethod"", ""none""));}public void testAddCommandProcessor() throws Exception {String host = ""localhost"";int port = DEFAULT_PORT;URLConnection connection = null;URL url = new URL(""http://"" + host + "":"" + port + ""/nonexistant"");server.invoke(name, ""addCommandProcessor"", new Object[] { ""nonexistant"", new DummyCommandProcessor() }, new String[] { ""java.lang.String"", ""mx4j.tools.adaptor.http.HttpCommandProcessor"" });connection = url.openConnection();assertEquals(200, ((HttpURLConnection) connection).getResponseCode());server.invoke(name, ""removeCommandProcessor"", new Object[] { ""nonexistant"" }, new String[] { ""java.lang.String"" });connection = url.openConnection();assertEquals(404, ((HttpURLConnection) connection).getResponseCode());server.invoke(name, ""addCommandProcessor"", new Object[] { ""nonexistant"", ""test.mx4j.tools.adaptor.http.HttpAdaptorTest$DummyCommandProcessor"" }, new String[] { ""java.lang.String"", ""java.lang.String"" });connection = url.openConnection();assertEquals(200, ((HttpURLConnection) connection).getResponseCode());}public void parse(Project project, Object source, RootHandler handler) {AntXMLContext context = (AntXMLContext) Reflect.getField(handler, ""context"");File buildFile = null;URL url = null;String buildFileName = null;if (source instanceof File) {buildFile = (File) source;buildFile = fu.normalize(buildFile.getAbsolutePath());context.setBuildFile(buildFile);buildFileName = buildFile.toString();} else if (source instanceof URL) {url = (URL) source;buildFileName = url.toString();} else {throw new BuildException(""Source "" + source.getClass().getName() + "" not supported by this plugin"");}InputStream inputStream = null;InputSource inputSource = null;try {XMLReader parser = JAXPUtils.getNamespaceXMLReader();String uri = null;if (buildFile != null) {uri = fu.toURI(buildFile.getAbsolutePath());inputStream = new FileInputStream(buildFile);} else {inputStream = url.openStream();uri = url.toString();}inputSource = new InputSource(inputStream);if (uri != null) {inputSource.setSystemId(uri);}project.log(""parsing buildfile "" + buildFileName + "" with URI = "" + uri, Project.MSG_VERBOSE);DefaultHandler hb = handler;parser.setContentHandler(hb);parser.setEntityResolver(hb);parser.setErrorHandler(hb);parser.setDTDHandler(hb);parser.parse(inputSource);} catch (SAXParseException exc) {Location location = new Location(exc.getSystemId(), exc.getLineNumber(), exc.getColumnNumber());Throwable t = exc.getException();if (t instanceof BuildException) {BuildException be = (BuildException) t;if (be.getLocation() == Location.UNKNOWN_LOCATION) {be.setLocation(location);}throw be;}throw new BuildException(exc.getMessage(), t, location);} catch (SAXException exc) {Throwable t = exc.getException();if (t instanceof BuildException) {throw (BuildException) t;}throw new BuildException(exc.getMessage(), t);} catch (FileNotFoundException exc) {throw new BuildException(exc);} catch (UnsupportedEncodingException exc) {throw new BuildException(""Encoding of project file "" + buildFileName + "" is invalid."", exc);} catch (IOException exc) {throw new BuildException(""Error reading project file "" + buildFileName + "": "" + exc.getMessage(), exc);} finally {if (inputStream != null) {try {inputStream.close();} catch (IOException ioe) {}}}}private static void initMimeTypes() {InputStream is = null;extMimeTypes = new Properties();try {try {is = MimeUtil.class.getClassLoader().getResourceAsStream(""eu/medsea/mimeutil/mime-types.properties"");if (is != null) {((Properties) extMimeTypes).load(is);}} catch (Exception e) {log.error(""Error loading internal mime-types.properties"", e);} finally {is = closeStream(is);}try {File f = new File(System.getProperty(""user.home"") + File.separator + "".mime-types.properties"");if (f.exists()) {is = new FileInputStream(f);if (is != null) {log.debug(""Found a custom .mime-types.properties file in the users home directory."");Properties props = new Properties();props.load(is);if (props.size() > 0) {extMimeTypes.putAll(props);}log.debug(""Successfully parsed .mime-types.properties from users home directory."");}}} catch (Exception e) {log.error(""Failed to parse .magic.mime file from users home directory. File will be ignored."", e);} finally {is = closeStream(is);}try {Enumeration e = MimeUtil.class.getClassLoader().getResources(""mime-types.properties"");while (e.hasMoreElements()) {URL url = (URL) e.nextElement();if (log.isDebugEnabled()) {log.debug(""Found custom mime-types.properties file on the classpath ["" + url + ""]."");}Properties props = new Properties();try {is = url.openStream();if (is != null) {props.load(is);if (props.size() > 0) {extMimeTypes.putAll(props);if (log.isDebugEnabled()) {log.debug(""Successfully loaded custome mime-type.properties file ["" + url + ""] from classpath."");}}}} catch (Exception ex) {log.error(""Failed while loading custom mime-type.properties file ["" + url + ""] from classpath. File will be ignored."");}}} catch (Exception e) {log.error(""Problem while processing mime-types.properties files(s) from classpath. Files will be ignored."", e);} finally {is = closeStream(is);}try {String fname = System.getProperty(""mime-mappings"");if (fname != null && fname.length() != 0) {is = new FileInputStream(fname);if (is != null) {if (log.isDebugEnabled()) {log.debug(""Found a custom mime-mappings property defined by the property -Dmime-mappings ["" + System.getProperty(""mime-mappings"") + ""]."");}Properties props = new Properties();props.load(is);if (props.size() > 0) {extMimeTypes.putAll(props);}log.debug(""Successfully loaded the mime mappings file from property -Dmime-mappings ["" + System.getProperty(""mime-mappings"") + ""]."");}}} catch (Exception ex) {log.error(""Failed to load the mime-mappings file defined by the property -Dmime-mappings ["" + System.getProperty(""mime-mappings"") + ""]."");} finally {is = closeStream(is);}} finally {Iterator it = extMimeTypes.values().iterator();while (it.hasNext()) {String[] types = ((String) it.next()).split("","");for (int i = 0; i < types.length; i++) {MimeUtil.addKnownMimeType(types[i]);}}}}public static String ReadURL(URL url, boolean textonly) {try {URLConnection uconn = url.openConnection();Object ucont = uconn.getContent();if (ucont instanceof InputStream) return ReadInputStream((java.io.InputStream) ucont, textonly); else return """" + ucont;} catch (java.io.IOException e) {e.printStackTrace();}return null;}private void storeConfigurationPropertiesFile(java.net.URL url, String comp) {java.util.Properties p;try {p = new java.util.Properties();p.load(url.openStream());} catch (java.io.IOException ie) {System.err.println(""error opening: "" + url.getPath() + "": "" + ie.getMessage());return;}storeConfiguration(p, comp);return;}public List<String> loadList(String name) {List<String> ret = new ArrayList<String>();try {URL url = getClass().getClassLoader().getResource(""lists/"" + name + "".utf-8"");BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream(), ""UTF-8""));String line;while ((line = reader.readLine()) != null) {ret.add(line);}reader.close();} catch (IOException e) {showError(""No se puede cargar la lista de valores: "" + name, e);}return ret;}@Overridepublic VocabularyLocation next() {try {if (!urls.isEmpty()) {final URL url = urls.poll();return new VocabularyLocation(url.toExternalForm(), VocabularyFormat.RDFXML, 0, url.openStream());}if (!files.isEmpty()) {File file = files.poll();return new VocabularyLocation(file.getCanonicalPath(), file.getName().endsWith("".ntriples"") ? VocabularyFormat.NTRIPLES : VocabularyFormat.RDFXML, file.lastModified(), new FileInputStream(file));}if (nextZipEntry != null) {String zipEntryAsString = IOUtils.toString(new CloseShieldInputStream(in), ""UTF-8"");VocabularyLocation location = new VocabularyLocation(nextZipEntry.getName(), nextZipEntry.getName().endsWith("".rdf"") ? VocabularyFormat.RDFXML : null, nextZipEntry.getTime(), IOUtils.toInputStream(zipEntryAsString, ""UTF-8""));findNextZipEntry();return location;}} catch (Exception e) {throw new RuntimeException(e);}throw new NoSuchElementException();}"	5
"public int add(WebService ws) throws FidoDatabaseException {try {Connection conn = null;Statement stmt = null;ResultSet rs = null;try {String sql = ""insert into WebServices (MethodName, ServiceURI) "" + ""values ('"" + ws.getMethodName() + ""', '"" + ws.getServiceURI() + ""')"";conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();stmt.executeUpdate(sql);int id;sql = ""select currval('webservices_webserviceid_seq')"";rs = stmt.executeQuery(sql);if (rs.next() == false) throw new SQLException(""No rows returned from select currval() query""); else id = rs.getInt(1);PreparedStatement pstmt = conn.prepareStatement(""insert into WebServiceParams "" + ""(WebServiceId, Position, ParameterName, Type) "" + ""values (?, ?, ?, ?)"");pstmt.setInt(1, id);pstmt.setInt(2, 0);pstmt.setString(3, null);pstmt.setInt(4, ws.getReturnType());pstmt.executeUpdate();for (Iterator it = ws.parametersIterator(); it.hasNext(); ) {WebServiceParameter param = (WebServiceParameter) it.next();pstmt.setInt(2, param.getPosition());pstmt.setString(3, param.getName());pstmt.setInt(4, param.getType());pstmt.executeUpdate();}conn.commit();return id;} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (rs != null) rs.close();if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {e.printStackTrace();throw new FidoDatabaseException(e);}}public void delete(int id) throws FidoDatabaseException {try {Connection conn = null;Statement stmt = null;try {conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();stmt.executeUpdate(""delete from WebServices where WebServiceId = "" + id);stmt.executeUpdate(""delete from WebServiceParams where WebServiceId = "" + id);conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}public static boolean downloadFile(String url, String destination) throws Exception {BufferedInputStream bi = null;BufferedOutputStream bo = null;File destfile;byte BUFFER[] = new byte[100];java.net.URL fileurl;URLConnection conn;fileurl = new java.net.URL(url);conn = fileurl.openConnection();long fullsize = conn.getContentLength();long onepercent = fullsize / 100;MessageFrame.setTotalDownloadSize(fullsize);bi = new BufferedInputStream(conn.getInputStream());destfile = new File(destination);if (!destfile.createNewFile()) {destfile.delete();destfile.createNewFile();}bo = new BufferedOutputStream(new FileOutputStream(destfile));int read = 0;int sum = 0;long i = 0;while ((read = bi.read(BUFFER)) != -1) {bo.write(BUFFER, 0, read);sum += read;i += read;if (i > onepercent) {i = 0;MessageFrame.setDownloadProgress(sum);}}bi.close();bo.close();MessageFrame.setDownloadProgress(fullsize);return true;}public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException {int k_blockSize = 1024;int byteCount;char[] buf = new char[k_blockSize];File ofp = new File(outFile);ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(ofp));zos.setMethod(ZipOutputStream.DEFLATED);OutputStreamWriter osw = new OutputStreamWriter(zos, ""ISO-8859-1"");BufferedWriter bw = new BufferedWriter(osw);ZipEntry zot = null;File ifp = new File(inFile);ZipInputStream zis = new ZipInputStream(new FileInputStream(ifp));InputStreamReader isr = new InputStreamReader(zis, ""ISO-8859-1"");BufferedReader br = new BufferedReader(isr);ZipEntry zit = null;while ((zit = zis.getNextEntry()) != null) {if (zit.getName().equals(""content.xml"")) {continue;}zot = new ZipEntry(zit.getName());zos.putNextEntry(zot);while ((byteCount = br.read(buf, 0, k_blockSize)) >= 0) bw.write(buf, 0, byteCount);bw.flush();zos.closeEntry();}zos.putNextEntry(new ZipEntry(""content.xml""));bw.flush();osw = new OutputStreamWriter(zos, ""UTF8"");bw = new BufferedWriter(osw);return bw;}public static String hash(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""MD5"");byte[] md5hash = new byte[32];md.update(text.getBytes(""iso-8859-1""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);}public void create(String oid, Serializable obj) throws PersisterException {String key = getLock(oid);if (key != null) {throw new PersisterException(""Object already exists: OID = "" + oid);}Connection conn = null;PreparedStatement ps = null;try {byte[] data = serialize(obj);conn = _ds.getConnection();conn.setAutoCommit(true);ps = conn.prepareStatement(""insert into "" + _table_name + ""("" + _oid_col + "","" + _data_col + "","" + _ts_col + "") values (?,?,?)"");ps.setString(1, oid);ps.setBinaryStream(2, new ByteArrayInputStream(data), data.length);ps.setLong(3, System.currentTimeMillis());ps.executeUpdate();} catch (Throwable th) {if (conn != null) {try {conn.rollback();} catch (Throwable th2) {}}throw new PersisterException(""Failed to create object: OID = "" + oid, th);} finally {if (ps != null) {try {ps.close();} catch (Throwable th) {}}if (conn != null) {try {conn.close();} catch (Throwable th) {}}}}public void remove(String oid) throws PersisterException {String key = getLock(oid);if (key == null) {throw new PersisterException(""Object does not exist: OID = "" + oid);} else if (!NULL.equals(key)) {throw new PersisterException(""The object is currently locked: OID = "" + oid + "", LOCK = "" + key);}Connection conn = null;PreparedStatement ps = null;try {conn = _ds.getConnection();conn.setAutoCommit(true);ps = conn.prepareStatement(""delete from "" + _table_name + "" where "" + _oid_col + "" = ?"");ps.setString(1, oid);ps.executeUpdate();} catch (Throwable th) {if (conn != null) {try {conn.rollback();} catch (Throwable th2) {}}throw new PersisterException(""Failed to delete object: OID = "" + oid, th);} finally {if (ps != null) {try {ps.close();} catch (Throwable th) {}}if (conn != null) {try {conn.close();} catch (Throwable th) {}}}}public void save(String oid, String key, Serializable obj) throws PersisterException {String lock = getLock(oid);if (lock == null) {throw new PersisterException(""Object does not exist: OID = "" + oid);} else if (!NULL.equals(lock) && (!lock.equals(key))) {throw new PersisterException(""The object is currently locked with another key: OID = "" + oid + "", LOCK = "" + lock + "", KEY = "" + key);}Connection conn = null;PreparedStatement ps = null;try {byte[] data = serialize(obj);conn = _ds.getConnection();conn.setAutoCommit(true);ps = conn.prepareStatement(""update "" + _table_name + "" set "" + _data_col + "" = ?, "" + _ts_col + "" = ? where "" + _oid_col + "" = ?"");ps.setBinaryStream(1, new ByteArrayInputStream(data), data.length);ps.setLong(2, System.currentTimeMillis());ps.setString(3, oid);ps.executeUpdate();} catch (Throwable th) {if (conn != null) {try {conn.rollback();} catch (Throwable th2) {}}throw new PersisterException(""Failed to save object: OID = "" + oid, th);} finally {if (ps != null) {try {ps.close();} catch (Throwable th) {}}if (conn != null) {try {conn.close();} catch (Throwable th) {}}}}public void lock(String oid, String key) throws PersisterException {String lock = getLock(oid);if (lock == null) {throw new PersisterException(""Object does not exist: OID = "" + oid);} else if (!NULL.equals(lock) && (!lock.equals(key))) {throw new PersisterException(""The object is currently locked with another key: OID = "" + oid + "", LOCK = "" + lock + "", KEY = "" + key);}Connection conn = null;PreparedStatement ps = null;try {conn = _ds.getConnection();conn.setAutoCommit(true);ps = conn.prepareStatement(""update "" + _table_name + "" set "" + _key_col + "" = ?, "" + _ts_col + "" = ? where "" + _oid_col + "" = ?"");ps.setString(1, key);ps.setLong(2, System.currentTimeMillis());ps.setString(3, oid);ps.executeUpdate();} catch (Throwable th) {if (conn != null) {try {conn.rollback();} catch (Throwable th2) {}}throw new PersisterException(""Failed to lock object: OID = "" + oid + "", KEY = "" + key, th);} finally {if (ps != null) {try {ps.close();} catch (Throwable th) {}}if (conn != null) {try {conn.close();} catch (Throwable th) {}}}}public void unlock(String oid, String key) throws PersisterException {String lock = getLock(oid);if (lock == null) {throw new PersisterException(""Object does not exist: OID = "" + oid);} else if (!NULL.equals(lock) && (!lock.equals(key))) {throw new PersisterException(""The object is currently locked with another key: OID = "" + oid + "", LOCK = "" + lock + "", KEY = "" + key);}Connection conn = null;PreparedStatement ps = null;try {conn = _ds.getConnection();conn.setAutoCommit(true);ps = conn.prepareStatement(""update "" + _table_name + "" set "" + _key_col + "" = NULL, "" + _ts_col + "" = ? where "" + _oid_col + "" = ?"");ps.setLong(1, System.currentTimeMillis());ps.setString(2, oid);ps.executeUpdate();} catch (Throwable th) {if (conn != null) {try {conn.rollback();} catch (Throwable th2) {}}throw new PersisterException(""Failed to unlock object: OID = "" + oid + "", KEY = "" + key, th);} finally {if (ps != null) {try {ps.close();} catch (Throwable th) {}}if (conn != null) {try {conn.close();} catch (Throwable th) {}}}}"	5
"private void weightAndPlaceClasses() {int rows = getRows();for (int curRow = _maxPackageRank; curRow < rows; curRow++) {xPos = getHGap() / 2;BOTLObjectSourceDiagramNode[] rowObject = getObjectsInRow(curRow);for (int i = 0; i < rowObject.length; i++) {if (curRow == _maxPackageRank) {int nDownlinks = rowObject[i].getDownlinks().size();rowObject[i].setWeight((nDownlinks > 0) ? (1 / nDownlinks) : 2);} else {Vector uplinks = rowObject[i].getUplinks();int nUplinks = uplinks.size();if (nUplinks > 0) {float average_col = 0;for (int j = 0; j < uplinks.size(); j++) {average_col += ((BOTLObjectSourceDiagramNode) (uplinks.elementAt(j))).getColumn();}average_col /= nUplinks;rowObject[i].setWeight(average_col);} else {rowObject[i].setWeight(1000);}}}int[] pos = new int[rowObject.length];for (int i = 0; i < pos.length; i++) {pos[i] = i;}boolean swapped = true;while (swapped) {swapped = false;for (int i = 0; i < pos.length - 1; i++) {if (rowObject[pos[i]].getWeight() > rowObject[pos[i + 1]].getWeight()) {int temp = pos[i];pos[i] = pos[i + 1];pos[i + 1] = temp;swapped = true;}}}for (int i = 0; i < pos.length; i++) {rowObject[pos[i]].setColumn(i);if ((i > _vMax) && (rowObject[pos[i]].getUplinks().size() == 0) && (rowObject[pos[i]].getDownlinks().size() == 0)) {if (getColumns(rows - 1) > _vMax) {rows++;}rowObject[pos[i]].setRank(rows - 1);} else {rowObject[pos[i]].setLocation(new Point(xPos, yPos));xPos += rowObject[pos[i]].getSize().getWidth() + getHGap();}}yPos += getRowHeight(curRow) + getVGap();}}public void loginMD5() throws Exception {GetMethod get = new GetMethod(""http://login.yahoo.com/config/login?.src=www&.done=http://www.yahoo.com"");get.setRequestHeader(""user-agent"", ""Mozilla/5.0 (Macintosh; U; PPC MacOS X; en-us) AppleWebKit/124 (KHTML, like Gecko) Safari/125.1"");client.executeMethod(get);parseResponse(get.getResponseBodyAsStream());MessageDigest digest = MessageDigest.getInstance(""MD5"");digest.update(password.getBytes(""US-ASCII""));String hash1 = new String(digest.digest(), ""US-ASCII"");String hash2 = hash1 + challenge;digest.update(hash2.getBytes(""US-ASCII""));String hash = new String(digest.digest(), ""US-ASCII"");NameValuePair[] pairs = { new NameValuePair(""login"", login), new NameValuePair(""password"", hash), new NameValuePair("".save"", ""1""), new NameValuePair("".tries"", ""1""), new NameValuePair("".src"", ""www""), new NameValuePair("".md5"", ""1""), new NameValuePair("".hash"", ""1""), new NameValuePair("".js"", ""1""), new NameValuePair("".last"", """"), new NameValuePair("".promo"", """"), new NameValuePair("".intl"", ""us""), new NameValuePair("".bypass"", """"), new NameValuePair("".u"", u), new NameValuePair("".v"", ""0""), new NameValuePair("".challenge"", challenge), new NameValuePair("".yplus"", """"), new NameValuePair("".emailCode"", """"), new NameValuePair(""pkg"", """"), new NameValuePair(""stepid"", """"), new NameValuePair("".ev"", """"), new NameValuePair(""hasMsgr"", ""0""), new NameValuePair("".chkP"", ""Y""), new NameValuePair("".done"", ""http://www.yahoo.com""), new NameValuePair("".persistent"", ""y"") };get = new GetMethod(""http://login.yahoo.com/config/login"");get.setRequestHeader(""user-agent"", ""Mozilla/5.0 (Macintosh; U; PPC MacOS X; en-us) AppleWebKit/124 (KHTML, like Gecko) Safari/125.1"");get.addRequestHeader(""Accept"", ""*/*"");get.addRequestHeader(""Accept-Language"", ""en-us, ja;q=0.21, de-de;q=0.86, de;q=0.79, fr-fr;q=0.71, fr;q=0.64, nl-nl;q=0.57, nl;q=0.50, it-it;q=0.43, it;q=0.36, ja-jp;q=0.29, en;q=0.93, es-es;q=0.14, es;q=0.07"");get.setQueryString(pairs);client.executeMethod(get);get.getResponseBodyAsString();}private void createJCoPluginProject(IProgressMonitor monitor, String sourceFileName, String pluginName) throws CoreException, IOException {monitor.subTask(MessageFormat.format(Messages.ProjectGenerator_CreatePluginTaskDescription, pluginName));final Map<String, byte[]> files = readArchiveFile(sourceFileName);monitor.worked(10);IProject project = workspaceRoot.getProject(pluginName);if (project.exists()) {project.delete(true, true, new SubProgressMonitor(monitor, 5));} else {monitor.worked(5);}project.create(new SubProgressMonitor(monitor, 5));project.open(new SubProgressMonitor(monitor, 5));IProjectDescription description = project.getDescription();description.setNatureIds(new String[] { JavaCore.NATURE_ID, PLUGIN_NATURE_ID });project.setDescription(description, new SubProgressMonitor(monitor, 5));IJavaProject javaProject = JavaCore.create(project);IFolder binDir = project.getFolder(""bin"");IPath binPath = binDir.getFullPath();javaProject.setOutputLocation(binPath, new SubProgressMonitor(monitor, 5));project.getFolder(""jni"").create(true, true, new SubProgressMonitor(monitor, 5));project.getFile(""sapjco3.jar"").create(new ByteArrayInputStream(files.get(""sapjco3.jar"")), true, new SubProgressMonitor(monitor, 10));IFolder metaInfFolder = project.getFolder(""META-INF"");metaInfFolder.create(true, true, new SubProgressMonitor(monitor, 5));StringBuilder manifest = new StringBuilder();manifest.append(""Manifest-Version: 1.0\n"");manifest.append(""Bundle-ManifestVersion: 2\n"");manifest.append(""Bundle-Name: SAP Java Connector v3\n"");manifest.append(MessageFormat.format(""Bundle-SymbolicName: {0}\n"", pluginName));manifest.append(""Bundle-Version: 7.11.0\n"");manifest.append(""Bundle-ClassPath: bin/,\n"");manifest.append("" sapjco3.jar,\n"");manifest.append("" jni/\n"");manifest.append(""Bundle-Vendor: SAP AG, Walldorf (packaged using RCER)\n"");manifest.append(""Bundle-RequiredExecutionEnvironment: J2SE-1.5\n"");manifest.append(""Export-Package: com.sap.conn.jco,\n"");manifest.append("" com.sap.conn.jco.ext,\n"");manifest.append("" com.sap.conn.jco.monitor,\n"");manifest.append("" com.sap.conn.jco.rt,\n"");manifest.append("" com.sap.conn.jco.server\n"");manifest.append(""Bundle-ActivationPolicy: lazy\n"");writeTextFile(monitor, manifest, metaInfFolder.getFile(""MANIFEST.MF""));final IPath jcoPath = new Path(MessageFormat.format(""/{0}/sapjco3.jar"", pluginName));IClasspathEntry jcoEntry = JavaCore.newLibraryEntry(jcoPath, Path.EMPTY, Path.EMPTY, true);final IPath jniPath = new Path(MessageFormat.format(""/{0}/jni"", pluginName));IClasspathEntry jniEntry = JavaCore.newLibraryEntry(jniPath, Path.EMPTY, Path.EMPTY, true);javaProject.setRawClasspath(new IClasspathEntry[] { jcoEntry, jniEntry }, new SubProgressMonitor(monitor, 5));StringBuilder buildProperties = new StringBuilder();buildProperties.append(""bin.includes = META-INF/,\\\n"");buildProperties.append(""sapjco3.jar,\\\n"");buildProperties.append(""jni/,\\\n"");buildProperties.append("".\n"");writeTextFile(monitor, buildProperties, project.getFile(""build.properties""));exportableBundles.add(modelManager.findModel(project));}private void createIDocPluginProject(IProgressMonitor monitor, String sourceFileName, String pluginName, String pluginNameJCo) throws CoreException, IOException {monitor.subTask(MessageFormat.format(Messages.ProjectGenerator_CreatePluginTaskDescription, pluginName));final Map<String, byte[]> files = readArchiveFile(sourceFileName);monitor.worked(10);IProject project = workspaceRoot.getProject(pluginName);if (project.exists()) {project.delete(true, true, new SubProgressMonitor(monitor, 5));} else {monitor.worked(5);}project.create(new SubProgressMonitor(monitor, 5));project.open(new SubProgressMonitor(monitor, 5));IProjectDescription description = project.getDescription();description.setNatureIds(new String[] { JavaCore.NATURE_ID, PLUGIN_NATURE_ID });project.setDescription(description, new SubProgressMonitor(monitor, 5));IJavaProject javaProject = JavaCore.create(project);IFolder binDir = project.getFolder(""bin"");IPath binPath = binDir.getFullPath();javaProject.setOutputLocation(binPath, new SubProgressMonitor(monitor, 5));project.getFile(""sapidoc3.jar"").create(new ByteArrayInputStream(files.get(""sapidoc3.jar"")), true, new SubProgressMonitor(monitor, 15));IFolder metaInfFolder = project.getFolder(""META-INF"");metaInfFolder.create(true, true, new SubProgressMonitor(monitor, 5));StringBuilder manifest = new StringBuilder();manifest.append(""Manifest-Version: 1.0\n"");manifest.append(""Bundle-ManifestVersion: 2\n"");manifest.append(""Bundle-Name: SAP IDoc Library v3\n"");manifest.append(MessageFormat.format(""Bundle-SymbolicName: {0}\n"", pluginName));manifest.append(""Bundle-Version: 7.11.0\n"");manifest.append(""Bundle-ClassPath: bin/,\n"");manifest.append("" sapidoc3.jar\n"");manifest.append(""Bundle-Vendor: SAP AG, Walldorf (packaged using RCER)\n"");manifest.append(""Bundle-RequiredExecutionEnvironment: J2SE-1.5\n"");manifest.append(""Export-Package: com.sap.conn.idoc,\n"");manifest.append("" com.sap.conn.idoc.jco,\n"");manifest.append("" com.sap.conn.idoc.rt.cp,\n"");manifest.append("" com.sap.conn.idoc.rt.record,\n"");manifest.append("" com.sap.conn.idoc.rt.record.impl,\n"");manifest.append("" com.sap.conn.idoc.rt.trace,\n"");manifest.append("" com.sap.conn.idoc.rt.util,\n"");manifest.append("" com.sap.conn.idoc.rt.xml\n"");manifest.append(""Bundle-ActivationPolicy: lazy\n"");manifest.append(MessageFormat.format(""Require-Bundle: {0}\n"", pluginNameJCo));writeTextFile(monitor, manifest, metaInfFolder.getFile(""MANIFEST.MF""));final IPath jcoPath = new Path(MessageFormat.format(""/{0}/sapidoc3.jar"", pluginName));IClasspathEntry jcoEntry = JavaCore.newLibraryEntry(jcoPath, Path.EMPTY, Path.EMPTY, true);javaProject.setRawClasspath(new IClasspathEntry[] { jcoEntry }, new SubProgressMonitor(monitor, 5));StringBuilder buildProperties = new StringBuilder();buildProperties.append(""bin.includes = META-INF/,\\\n"");buildProperties.append(""sapidoc3.jar,\\\n"");buildProperties.append("".\n"");writeTextFile(monitor, buildProperties, project.getFile(""build.properties""));exportableBundles.add(modelManager.findModel(project));}public static String hashPassword(String plaintext) {if (plaintext == null) {return """";}MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA1"");md.update(plaintext.getBytes(""UTF-8""));} catch (Exception e) {logger.log(Level.SEVERE, ""Problem hashing password."", e);}return new String(Base64.encodeBase64(md.digest()));}public void runTask(HashMap pjobParms) throws Exception {FTPClient lftpClient = null;FileOutputStream lfosTargetFile = null;JBJFPluginDefinition lpluginCipher = null;IJBJFPluginCipher theCipher = null;try {JBJFFTPDefinition lxmlFTP = null;if (getFTPDefinition() != null) {lxmlFTP = getFTPDefinition();this.mstrSourceDirectory = lxmlFTP.getSourceDirectory();this.mstrTargetDirectory = lxmlFTP.getTargetDirectory();this.mstrFilename = lxmlFTP.getFilename();this.mstrRemoteServer = lxmlFTP.getServer();if (getResources().containsKey(""plugin-cipher"")) {lpluginCipher = (JBJFPluginDefinition) getResources().get(""plugin-cipher"");}if (lpluginCipher != null) {theCipher = getTaskPlugins().getCipherPlugin(lpluginCipher.getPluginId());}if (theCipher != null) {this.mstrServerUsr = theCipher.decryptString(lxmlFTP.getUser());this.mstrServerPwd = theCipher.decryptString(lxmlFTP.getPass());} else {this.mstrServerUsr = lxmlFTP.getUser();this.mstrServerPwd = lxmlFTP.getPass();}} else {throw new Exception(""Work unit [ "" + SHORT_NAME + "" ] is missing an FTP Definition.  Please check"" + "" your JBJF Batch Definition file an make sure"" + "" this work unit has a <resource> element added"" + "" within the <task> element."");}lfosTargetFile = new FileOutputStream(mstrTargetDirectory + File.separator + mstrFilename);lftpClient = new FTPClient();lftpClient.connect(mstrRemoteServer);lftpClient.setFileType(lxmlFTP.getFileTransferType());if (!FTPReply.isPositiveCompletion(lftpClient.getReplyCode())) {throw new Exception(""FTP server [ "" + mstrRemoteServer + "" ] refused connection."");}if (!lftpClient.login(mstrServerUsr, mstrServerPwd)) {throw new Exception(""Unable to login to server [ "" + mstrTargetDirectory + "" ]."");}if (!lftpClient.changeWorkingDirectory(mstrSourceDirectory)) {throw new Exception(""Unable to change to remote directory [ "" + mstrSourceDirectory + ""]"");}lftpClient.enterLocalPassiveMode();if (!lftpClient.retrieveFile(mstrFilename, lfosTargetFile)) {throw new Exception(""Unable to download [ "" + mstrSourceDirectory + ""/"" + mstrFilename + "" to "" + mstrTargetDirectory + File.separator + mstrFilename + "" ] from server [ "" + mstrRemoteServer + "" ]"");}lfosTargetFile.close();lftpClient.logout();} catch (Exception e) {throw e;} finally {if (lftpClient != null && lftpClient.isConnected()) {try {lftpClient.disconnect();} catch (IOException ioe) {}}if (lfosTargetFile != null) {try {lfosTargetFile.close();} catch (Exception e) {}}}}public File copyLocalFileAsTempFileInExternallyAccessableDir(String localFileRef) throws IOException {log.debug(""copyLocalFileAsTempFileInExternallyAccessableDir"");File f = this.createTempFileInExternallyAccessableDir();FileChannel srcChannel = new FileInputStream(localFileRef).getChannel();FileChannel dstChannel = new FileOutputStream(f).getChannel();log.debug(""before transferring via FileChannel from src-inputStream: "" + localFileRef + "" to dest-outputStream: "" + f.getAbsolutePath());dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();log.debug(""copyLocalFileAsTempFileInExternallyAccessableDir returning: "" + f.getAbsolutePath());return f;}private InputStream fetch(String urlString) throws MalformedURLException, IOException {DefaultHttpClient httpClient = new DefaultHttpClient();HttpGet request = new HttpGet(urlString);HttpResponse response = httpClient.execute(request);return response.getEntity().getContent();}static String getMD5Hash(String str) throws NoSuchAlgorithmException {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(str.getBytes());byte[] b = md.digest();StringBuffer sb = new StringBuffer();for (int i = 0; i < b.length; i++) {int v = (int) b[i];v = v < 0 ? 0x100 + v : v;String cc = Integer.toHexString(v);if (cc.length() == 1) sb.append('0');sb.append(cc);}return sb.toString();}@Overridepublic void process(HttpServletRequest request, HttpServletResponse response) throws Exception {String userAgentGroup = processUserAgent(request);final LiwenxRequest lRequest = new LiwenxRequestImpl(request, response, messageSource, userAgentGroup);Locator loc = router.route(lRequest);if (loc instanceof RedirectLocator) {response.sendRedirect(((RedirectLocator) loc).getPage());} else {((AbstractLiwenxRequest) lRequest).setRequestedLocator(loc);try {LiwenxResponse resp = processPage(lRequest, lRequest.getRequestedLocator(), maxRedirections);processHeaders(resp, response);processCookies(resp, response);if (resp instanceof ExternalRedirectionResponse) {response.sendRedirect(((ExternalRedirectionResponse) resp).getRedirectTo());} else if (resp instanceof BinaryResponse) {BinaryResponse bResp = (BinaryResponse) resp;response.setContentType(bResp.getMimeType().toString());IOUtils.copy(bResp.getInputStream(), response.getOutputStream());} else if (resp instanceof XmlResponse) {final Element root = ((XmlResponse) resp).getXml();Document doc = root.getDocument();if (doc == null) {doc = new Document(root);}final Locator l = lRequest.getCurrentLocator();final Device device = l.getDevice();response.setContentType(calculateContentType(device));response.setCharacterEncoding(encoding);if (device == Device.HTML) {view.processView(doc, l.getLocale(), userAgentGroup, response.getWriter());} else {Serializer s = new Serializer(response.getOutputStream(), encoding);s.write(doc);}}} catch (PageNotFoundException e) {response.sendError(HttpServletResponse.SC_NOT_FOUND);} catch (TooManyRedirectionsException e) {throw e;} catch (Exception e) {throw e;}}}"	5
"public static String Md5By32(String plainText) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(plainText.getBytes());byte b[] = md.digest();int i;StringBuffer buf = new StringBuffer("""");for (int offset = 0; offset < b.length; offset++) {i = b[offset];if (i < 0) i += 256;if (i < 16) buf.append(""0"");buf.append(Integer.toHexString(i));}return buf.toString();} catch (NoSuchAlgorithmException e) {e.printStackTrace();return null;}}public static synchronized String hash(String data) {if (digest == null) {try {digest = MessageDigest.getInstance(""SHA-1"");} catch (NoSuchAlgorithmException nsae) {nsae.printStackTrace();}}try {digest.update(data.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {System.err.println(e);}return encodeHex(digest.digest());}private static byte[] loadBytecodePrivileged() {URL url = SecureCaller.class.getResource(""SecureCallerImpl.clazz"");try {InputStream in = url.openStream();try {ByteArrayOutputStream bout = new ByteArrayOutputStream();for (; ; ) {int r = in.read();if (r == -1) {return bout.toByteArray();}bout.write(r);}} finally {in.close();}} catch (IOException e) {throw new UndeclaredThrowableException(e);}}public static byte[] computeMD5(String s) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.reset();md.update(s.getBytes());return md.digest();} catch (NoSuchAlgorithmException ex) {throw new RuntimeException(ex);}}private void populateAPI(API api) {try {if (api.isPopulated()) {log.traceln(""Skipping API "" + api.getName() + "" (already populated)"");return;}api.setPopulated(true);String sql = ""update API set populated=1 where name=?"";PreparedStatement pstmt = conn.prepareStatement(sql);pstmt.setString(1, api.getName());pstmt.executeUpdate();pstmt.close();storePackagesAndClasses(api);conn.commit();} catch (SQLException ex) {log.error(""Store (api: "" + api.getName() + "") failed!"");DBUtils.logSQLException(ex);log.error(""Rolling back.."");try {conn.rollback();} catch (SQLException inner_ex) {log.error(""rollback failed!"");}}}public static void copy(File src, File dest) {try {FileChannel srcChannel = new FileInputStream(src).getChannel();FileChannel dstChannel = new FileOutputStream(dest).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (IOException e) {}}public java.io.Serializable getContent() throws org.osid.repository.RepositoryException {logger.logMethod();if (!this.cached) {logger.logTrace(""not cached.. getting content"");Object object = this.asset.getContent();if (object instanceof String) {String s = (String) object;if (s.startsWith(""http://"")) {try {java.net.URL url = new java.net.URL(s);java.io.InputStream is = url.openStream();java.io.File file = getCacheFile();java.io.FileOutputStream fos = new java.io.FileOutputStream(file);int len;byte[] b = new byte[10240];this.length = 0;while ((len = is.read(b)) >= 0) {fos.write(b, 0, len);this.length += len;}fos.close();is.close();java.net.URLConnection urlc = new java.net.URL(s).openConnection();this.lastModified = urlc.getLastModified();this.mimeType = urlc.getContentType();} catch (java.io.IOException ie) {logger.logError(""error writing file"", ie);}}}this.cached = true;} else {logger.logTrace(""cached.."");}try {return (new SerializableInputStream(new java.io.FileInputStream(getCacheFile())));} catch (java.io.IOException ie) {logger.logError(""cannot get content"", ie);throw new org.osid.repository.RepositoryException(org.osid.repository.RepositoryException.OPERATION_FAILED);}}@Overrideprotected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {try {String fileName = request.getParameter(""tegsoftFileName"");if (fileName.startsWith(""Tegsoft_BACKUP_"")) {fileName = fileName.substring(""Tegsoft_BACKUP_"".length());String targetFileName = ""/home/customer/"" + fileName;response.setContentType(""application/octet-stream"");response.setHeader(""Content-Disposition"", ""attachment;filename="" + fileName);FileInputStream is = new FileInputStream(targetFileName);IOUtils.copy(is, response.getOutputStream());is.close();return;}if (fileName.equals(""Tegsoft_ASTMODULES"")) {String targetFileName = tobeHome + ""/setup/Tegsoft_ASTMODULES.tgz"";response.setContentType(""application/octet-stream"");response.setHeader(""Content-Disposition"", ""attachment;filename="" + fileName);FileInputStream is = new FileInputStream(targetFileName);IOUtils.copy(is, response.getOutputStream());is.close();return;}if (fileName.equals(""Tegsoft_ASTSBIN"")) {String targetFileName = tobeHome + ""/setup/Tegsoft_ASTSBIN.tgz"";response.setContentType(""application/octet-stream"");response.setHeader(""Content-Disposition"", ""attachment;filename="" + fileName);FileInputStream is = new FileInputStream(targetFileName);IOUtils.copy(is, response.getOutputStream());is.close();return;}if (!fileName.startsWith(""Tegsoft_"")) {return;}if (!fileName.endsWith("".zip"")) {return;}if (fileName.indexOf(""_"") < 0) {return;}fileName = fileName.substring(fileName.indexOf(""_"") + 1);if (fileName.indexOf(""_"") < 0) {return;}String fileType = fileName.substring(0, fileName.indexOf(""_""));String destinationFileName = tobeHome + ""/setup/Tegsoft_"" + fileName;if (!new File(destinationFileName).exists()) {if (""FORMS"".equals(fileType)) {FileUtil.createZipPackage(tobeHome + ""/forms"", tobeHome + ""/setup/Tegsoft_"" + fileName);} else if (""IMAGES"".equals(fileType)) {FileUtil.createZipPackage(tobeHome + ""/image"", tobeHome + ""/setup/Tegsoft_"" + fileName);} else if (""VIDEOS"".equals(fileType)) {FileUtil.createZipPackage(tobeHome + ""/videos"", tobeHome + ""/setup/Tegsoft_"" + fileName);} else if (""TEGSOFTJARS"".equals(fileType)) {FileUtil.createZipPackage(tobeHome + ""/WEB-INF/lib/"", tobeHome + ""/setup/Tegsoft_"" + fileName, ""Tegsoft"", ""jar"");} else if (""TOBEJARS"".equals(fileType)) {FileUtil.createZipPackage(tobeHome + ""/WEB-INF/lib/"", tobeHome + ""/setup/Tegsoft_"" + fileName, ""Tobe"", ""jar"");} else if (""ALLJARS"".equals(fileType)) {FileUtil.createZipPackage(tobeHome + ""/WEB-INF/lib/"", tobeHome + ""/setup/Tegsoft_"" + fileName);} else if (""DB"".equals(fileType)) {FileUtil.createZipPackage(tobeHome + ""/sql"", tobeHome + ""/setup/Tegsoft_"" + fileName);} else if (""CONFIGSERVICE"".equals(fileType)) {FileUtil.createZipPackage(""/tegsoft/src/java/TegsoftTelecom/configFiles/init.d/"", tobeHome + ""/setup/Tegsoft_"" + fileName, ""tegsoft"", null);} else if (""CONFIGSCRIPTS"".equals(fileType)) {FileUtil.createZipPackage(""/tegsoft/src/java/TegsoftTelecom/configFiles/root/"", tobeHome + ""/setup/Tegsoft_"" + fileName, ""tegsoft"", null);} else if (""CONFIGFOP"".equals(fileType)) {FileUtil.createZipPackage(""/tegsoft/src/java/TegsoftTelecom/configFiles/fop/"", tobeHome + ""/setup/Tegsoft_"" + fileName);} else if (""CONFIGASTERISK"".equals(fileType)) {FileUtil.createZipPackage(""/tegsoft/src/java/TegsoftTelecom/configFiles/asterisk/"", tobeHome + ""/setup/Tegsoft_"" + fileName);}}response.setContentType(""application/octet-stream"");response.setHeader(""Content-Disposition"", ""attachment;filename="" + fileName);FileInputStream is = new FileInputStream(destinationFileName);IOUtils.copy(is, response.getOutputStream());is.close();} catch (Exception ex) {ex.printStackTrace();}}public long calculateResponseTime(Proxy proxy) {try {LOGGER.debug(""Test network response time for "" + RESPONSE_TEST_URL);URL urlForTest = new URL(REACH_TEST_URL);URLConnection testConnection = urlForTest.openConnection(proxy);long startTime = System.currentTimeMillis();testConnection.connect();testConnection.connect();testConnection.connect();testConnection.connect();testConnection.connect();long endTime = System.currentTimeMillis();long averageResponseTime = (endTime - startTime) / 5;LOGGER.debug(""Average access time in ms : "" + averageResponseTime);return averageResponseTime;} catch (Exception e) {LOGGER.error(e);}return -1;}private byte[] odszyfrujKlucz(byte[] kluczSesyjny, int rozmiarKlucza) {byte[] odszyfrowanyKlucz = null;byte[] kluczTymczasowy = null;try {MessageDigest skrot = MessageDigest.getInstance(""SHA-1"");skrot.update(haslo.getBytes());byte[] skrotHasla = skrot.digest();Object kluczDoKlucza = MARS_Algorithm.makeKey(skrotHasla);byte[] tekst = null;kluczTymczasowy = new byte[rozmiarKlucza];int liczbaBlokow = rozmiarKlucza / ROZMIAR_BLOKU;for (int i = 0; i < liczbaBlokow; i++) {tekst = MARS_Algorithm.blockDecrypt(kluczSesyjny, i * ROZMIAR_BLOKU, kluczDoKlucza);System.arraycopy(tekst, 0, kluczTymczasowy, i * ROZMIAR_BLOKU, tekst.length);}odszyfrowanyKlucz = new byte[dlugoscKlucza];System.arraycopy(kluczTymczasowy, 0, odszyfrowanyKlucz, 0, dlugoscKlucza);} catch (InvalidKeyException ex) {Logger.getLogger(SzyfrowaniePliku.class.getName()).log(Level.SEVERE, null, ex);} catch (NoSuchAlgorithmException ex) {ex.printStackTrace();}return odszyfrowanyKlucz;}"	5
"public void run() {try {Socket socket = getSocket();System.out.println(""opening socket to "" + address + "" on "" + port);InputStream in = socket.getInputStream();for (; ; ) {FileTransferHeader header = FileTransferHeader.readHeader(in);if (header == null) break;System.out.println(""header: "" + header);List<String> parts = header.getFilename().getSegments();String filename;if (parts.size() > 0) filename = ""dl-"" + parts.get(parts.size() - 1); else filename = ""dl-"" + session.getScreenname();System.out.println(""writing to file "" + filename);long sum = 0;if (new File(filename).exists()) {FileInputStream fis = new FileInputStream(filename);byte[] block = new byte[10];for (int i = 0; i < block.length; ) {int count = fis.read(block);if (count == -1) break;i += count;}FileTransferChecksum summer = new FileTransferChecksum();summer.update(block, 0, 10);sum = summer.getValue();}FileChannel fileChannel = new FileOutputStream(filename).getChannel();FileTransferHeader outHeader = new FileTransferHeader(header);outHeader.setHeaderType(FileTransferHeader.HEADERTYPE_ACK);outHeader.setIcbmMessageId(cookie);outHeader.setBytesReceived(0);outHeader.setReceivedChecksum(sum);OutputStream socketOut = socket.getOutputStream();System.out.println(""sending header: "" + outHeader);outHeader.write(socketOut);for (int i = 0; i < header.getFileSize(); ) {long transferred = fileChannel.transferFrom(Channels.newChannel(in), 0, header.getFileSize() - i);System.out.println(""transferred "" + transferred);if (transferred == -1) return;i += transferred;}System.out.println(""finished transfer!"");fileChannel.close();FileTransferHeader doneHeader = new FileTransferHeader(header);doneHeader.setHeaderType(FileTransferHeader.HEADERTYPE_RECEIVED);doneHeader.setFlags(doneHeader.getFlags() | FileTransferHeader.FLAG_DONE);doneHeader.setBytesReceived(doneHeader.getBytesReceived() + 1);doneHeader.setIcbmMessageId(cookie);doneHeader.setFilesLeft(doneHeader.getFilesLeft() - 1);doneHeader.write(socketOut);if (doneHeader.getFilesLeft() - 1 <= 0) {socket.close();break;}}} catch (IOException e) {e.printStackTrace();return;}}public TestReport runImpl() throws Exception {DocumentFactory df = new SAXDocumentFactory(GenericDOMImplementation.getDOMImplementation(), parserClassName);File f = (new File(testFileName));URL url = f.toURL();Document doc = df.createDocument(null, rootTag, url.toString(), url.openStream());Element e = doc.getElementById(targetId);if (e == null) {DefaultTestReport report = new DefaultTestReport(this);report.setErrorCode(ERROR_GET_ELEMENT_BY_ID_FAILED);report.addDescriptionEntry(ENTRY_KEY_ID, targetId);report.setPassed(false);return report;}e.setAttribute(targetAttribute, targetValue);if (targetValue.equals(e.getAttribute(targetAttribute))) {return reportSuccess();}DefaultTestReport report = new DefaultTestReport(this);report.setErrorCode(TestReport.ERROR_TEST_FAILED);report.setPassed(false);return report;}protected synchronized String encryptThis(String seed, String text) throws EncryptionException {String encryptedValue = null;String textToEncrypt = text;try {MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(textToEncrypt.getBytes(""UTF-8""));encryptedValue = (new BASE64Encoder()).encode(md.digest());} catch (Exception e) {throw new EncryptionException(e);}return encryptedValue;}public static void reset() throws Exception {Session session = DataStaticService.getHibernateSessionFactory().openSession();try {Connection connection = session.connection();try {Statement statement = connection.createStatement();try {statement.executeUpdate(""delete from Post"");connection.commit();} finally {statement.close();}} catch (HibernateException e) {connection.rollback();throw new Exception(e);} catch (SQLException e) {connection.rollback();throw new Exception(e);}} catch (SQLException e) {throw new Exception(e);} finally {session.close();}}public void doCompress(File[] files, File out, List<String> excludedKeys) {Map<String, File> map = new HashMap<String, File>();String parent = FilenameUtils.getBaseName(out.getName());for (File f : files) {CompressionUtil.list(f, parent, map, excludedKeys);}if (!map.isEmpty()) {FileOutputStream fos = null;ArchiveOutputStream aos = null;InputStream is = null;try {fos = new FileOutputStream(out);aos = getArchiveOutputStream(fos);for (Map.Entry<String, File> entry : map.entrySet()) {File file = entry.getValue();ArchiveEntry ae = getArchiveEntry(file, entry.getKey());aos.putArchiveEntry(ae);if (file.isFile()) {IOUtils.copy(is = new FileInputStream(file), aos);IOUtils.closeQuietly(is);is = null;}aos.closeArchiveEntry();}aos.finish();} catch (IOException ex) {ex.printStackTrace();} finally {IOUtils.closeQuietly(is);IOUtils.closeQuietly(aos);IOUtils.closeQuietly(fos);}}}public static void copierFichier(URL url, File destination) throws CopieException, IOException {if (destination.exists()) {throw new CopieException(""ERREUR : Copie du fichier '"" + url.getPath() + ""' vers '"" + destination.getPath() + ""' impossible!\n"" + ""CAUSE  : Le fichier destination existe d�j�."");}URLConnection urlConnection = url.openConnection();InputStream httpStream = urlConnection.getInputStream();FileOutputStream destinationFile = new FileOutputStream(destination);byte buffer[] = new byte[512 * 1024];int nbLecture;while ((nbLecture = httpStream.read(buffer)) != -1) {destinationFile.write(buffer, 0, nbLecture);}log.debug(""(COPIE) Copie du fichier : "" + url.getPath() + "" --> "" + destination.getPath());httpStream.close();destinationFile.close();}public static void copyFile(File src, File dest) throws IOException {FileInputStream fis = new FileInputStream(src);FileOutputStream fos = new FileOutputStream(dest);java.nio.channels.FileChannel channelSrc = fis.getChannel();java.nio.channels.FileChannel channelDest = fos.getChannel();channelSrc.transferTo(0, channelSrc.size(), channelDest);fis.close();fos.close();}public static void main(String[] args) throws Exception {DES des = new DES();StreamBlockReader reader = new StreamBlockReader(new FileInputStream(""D:\\test.txt""));StreamBlockWriter writer = new StreamBlockWriter(new FileOutputStream(""D:\\test1.txt""));SingleKey key = new SingleKey(new Block(64), """");key = new SingleKey(new Block(""1111111100000000111111110000000011111111000000001111111100000000""), """");Mode mode = new ECBDESMode(des);des.encrypt(reader, writer, key, mode);}public String md5(String password) {MessageDigest m = null;try {m = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException ex) {}m.update(password.getBytes(), 0, password.length());return new BigInteger(1, m.digest()).toString(16);}public static void replaceEntry(File file, String entryName, InputStream stream) throws PersistenceException {try {File temporaryFile = File.createTempFile(""pmMDA_zargo"", "".zargo"");temporaryFile.deleteOnExit();FileInputStream inputStream = new FileInputStream(file);ZipInputStream input = new ZipInputStream(inputStream);ZipOutputStream output = new ZipOutputStream(new FileOutputStream(temporaryFile));ZipEntry entry = input.getNextEntry();while (entry != null) {ZipEntry zipEntry = new ZipEntry(entry);zipEntry.setCompressedSize(-1);output.putNextEntry(zipEntry);if (!entry.getName().equals(entryName)) {IOUtils.copy(input, output);} else {IOUtils.copy(stream, output);}input.closeEntry();output.closeEntry();entry = input.getNextEntry();}input.close();inputStream.close();output.close();System.gc();boolean isSuccess = file.delete();if (!isSuccess) {throw new PersistenceException();}isSuccess = temporaryFile.renameTo(file);if (!isSuccess) {throw new PersistenceException();}} catch (IOException e) {throw new PersistenceException(e);}}"	5
"public static byte[] encode(String origin, String algorithm) throws NoSuchAlgorithmException {String resultStr = null;resultStr = new String(origin);MessageDigest md = MessageDigest.getInstance(algorithm);md.update(resultStr.getBytes());return md.digest();}public static boolean checkEncode(String origin, byte[] mDigest, String algorithm) throws NoSuchAlgorithmException {MessageDigest md = MessageDigest.getInstance(algorithm);md.update(origin.getBytes());if (MessageDigest.isEqual(mDigest, md.digest())) {return true;} else {return false;}}public synchronized String encrypt(String plaintext) throws Exception {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {throw new Exception(e.getMessage());}try {md.update(plaintext.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {throw new Exception(e.getMessage());}byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}public boolean copyTo(String targetFilePath) {try {FileInputStream srcFile = new FileInputStream(filePath);FileOutputStream target = new FileOutputStream(targetFilePath);byte[] buff = new byte[1024];int readed = -1;while ((readed = srcFile.read(buff)) > 0) target.write(buff, 0, readed);srcFile.close();target.close();return true;} catch (Exception e) {e.printStackTrace();return false;}}private Concept fetchDataNeeded(String conceptUri) {if (cache.size() > MAX_CACHE) cache.clear();if (cache.containsKey(conceptUri)) return this.cache.get(conceptUri);try {URL url = new URL(conceptUri);HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.setInstanceFollowRedirects(true);connection.setRequestProperty(""Accept"", ""application/rdf+xml"");if (connection.getResponseCode() == HttpURLConnection.HTTP_OK && connection.getContentType().contains(""application/rdf+xml"")) {InputStream is = connection.getInputStream();HashMap<String, String> parameters = new HashMap<String, String>();parameters.put(""uri"", conceptUri);Transformer tf = this.templates.getDAOTransformer(keyTemplates, parameters);DOMResult outputTarget = new DOMResult();tf.transform(new StreamSource(is), outputTarget);Concept concept = ConceptXMLBind.getInstance().restoreConcept(outputTarget.getNode());this.cache.put(conceptUri, concept);return concept;} else {logger.error(""Unable to get a representation of the resource: "" + connection.getResponseCode() + "" => "" + connection.getContentType());throw new RuntimeException(""Unable to get a representation of the resource"");}} catch (Exception e) {logger.error(""Unable to fetch data for concept "" + conceptUri, e);throw new RuntimeException(e);}}public void fetchFile(String ID) {String url = ""http://www.nal.usda.gov/cgi-bin/agricola-ind?bib="" + ID + ""&conf=010000++++++++++++++&screen=MA"";System.out.println(url);try {PrintWriter pw = new PrintWriter(new FileWriter(""MARC"" + ID + "".txt""));if (!id.contains(""MARC"" + ID + "".txt"")) {id.add(""MARC"" + ID + "".txt"");}in = new BufferedReader(new InputStreamReader((new URL(url)).openStream()));in.readLine();String inputLine, stx = """";StringBuffer sb = new StringBuffer();while ((inputLine = in.readLine()) != null) {if (inputLine.startsWith(""<TR><TD><B>"")) {String sts = (inputLine.substring(inputLine.indexOf(""B>"") + 2, inputLine.indexOf(""</"")));int i = 0;try {i = Integer.parseInt(sts);} catch (NumberFormatException nfe) {}if (i > 0) {stx = stx + ""\n"" + sts + "" - "";} else {stx += sts;}}if (!(inputLine.startsWith(""<"") || inputLine.startsWith("" <"") || inputLine.startsWith("">""))) {String tx = inputLine.trim();stx += tx;}}pw.println(stx);pw.close();} catch (Exception e) {System.out.println(""Couldn't open stream"");System.out.println(e);}}protected Class findClass(String name) throws ClassNotFoundException {String classFile = name.replace('.', '/') + "".class"";InputStream classInputStream = null;if (this.extensionJars != null) {for (int i = 0; i < this.extensionJars.length; i++) {JarFile extensionJar = this.extensionJars[i];JarEntry jarEntry = extensionJar.getJarEntry(classFile);if (jarEntry != null) {try {classInputStream = extensionJar.getInputStream(jarEntry);} catch (IOException ex) {throw new ClassNotFoundException(""Couldn't read class "" + name, ex);}}}}if (classInputStream == null) {URL url = getResource(classFile);if (url == null) {throw new ClassNotFoundException(""Class "" + name);}try {classInputStream = url.openStream();} catch (IOException ex) {throw new ClassNotFoundException(""Couldn't read class "" + name, ex);}}try {ByteArrayOutputStream out = new ByteArrayOutputStream();BufferedInputStream in = new BufferedInputStream(classInputStream);byte[] buffer = new byte[8096];int size;while ((size = in.read(buffer)) != -1) {out.write(buffer, 0, size);}in.close();return defineClass(name, out.toByteArray(), 0, out.size(), this.protectionDomain);} catch (IOException ex) {throw new ClassNotFoundException(""Class "" + name, ex);}}public static byte[] hash(final byte[] saltBefore, final String content, final byte[] saltAfter, final int repeatedHashingCount) throws NoSuchAlgorithmException, UnsupportedEncodingException {if (content == null) return null;final MessageDigest digest = MessageDigest.getInstance(DIGEST);if (digestLength == -1) digestLength = digest.getDigestLength();for (int i = 0; i < repeatedHashingCount; i++) {if (i > 0) digest.update(digest.digest());digest.update(saltBefore);digest.update(content.getBytes(WebCastellumFilter.DEFAULT_CHARACTER_ENCODING));digest.update(saltAfter);}return digest.digest();}void queryFile(String rendezvousProgram, String rendezvousMD5) {try {XMLConfigParser.readUrlHost();String url = XMLConfigParser.urlHost;String query;String param1 = ""op=query"";String param2 = ""program="" + rendezvousProgram;String param3 = ""md5="" + rendezvousMD5;query = String.format(""%s&%s&%s"", param1, param2, param3);openConnection(query, url);String line = br.readLine();NetworkLog.logMsg(NetworkLog.LOG_DEBUG, this, ""(Query) Response of the server: "" + line);br.close();} catch (MalformedURLException e) {NetworkLog.logMsg(NetworkLog.LOG_ERROR, this, ""Error"" + e);} catch (IOException e) {NetworkLog.logMsg(NetworkLog.LOG_ERROR, this, e.getMessage());}}void queryInactive() {try {XMLConfigParser.readUrlHost();String url = XMLConfigParser.urlHost;Date currenttime = new Date();String query;String param1 = ""op=queryinactive"";String param2 = ""time="" + currenttime.getTime();query = String.format(""%s&%s"", param1, param2);openConnection(query, url);String line = br.readLine();NetworkLog.logMsg(NetworkLog.LOG_DEBUG, this, ""(Query inactive)Response of the server: "" + line);br.close();} catch (MalformedURLException e) {NetworkLog.logMsg(NetworkLog.LOG_ERROR, this, ""Error"" + e);} catch (IOException e) {NetworkLog.logMsg(NetworkLog.LOG_ERROR, this, e.getMessage());}}"	5
"public FTPClient connect(String host, String userId, String password, String alias) throws IOException {FTPClient client = null;if (connections.get(alias) != null) {client = (FTPClient) connections.get(alias);if (client.isConnected() == false) {client.connect(host);}} else {client = new FTPClient();client.connect(host);client.login(userId, password);connections.put(alias, client);}return client;}protected void doGet(final HttpServletRequest request, final HttpServletResponse response) throws ServletException, IOException {Session session = HibernateUtil.getInstance().getSession();response.setBufferSize(65536);ServletOutputStream outStream = response.getOutputStream();File file = null;FileData fileData = null;try {String fileParameter = request.getParameter(""file"");String disposition = request.getParameter(""disposition"");if (fileParameter == null || fileParameter.equals("""")) {String pi = request.getPathInfo();int lastSlashIndex = pi.lastIndexOf(""/"") + 1;fileParameter = pi.substring(lastSlashIndex, pi.indexOf(""_"", pi.lastIndexOf(""/"")));}if (fileParameter == null || fileParameter.equals("""")) {response.sendError(HttpServletResponse.SC_BAD_REQUEST);response.setStatus(HttpServletResponse.SC_BAD_REQUEST);response.flushBuffer();Logger.log(""file parameter not specified"");return;}if (disposition == null || disposition.equals("""")) {String pi = request.getPathInfo();String filename = pi.substring(pi.lastIndexOf(""/"") + 1);int underscoreIndex = filename.indexOf(""_"") + 1;disposition = filename.substring(underscoreIndex, filename.indexOf(""_"", underscoreIndex));}file = (File) session.load(File.class, new Long(fileParameter));Logger.log(""Content requested="" + file.getName() + "":"" + fileParameter + "" Referral: "" + request.getParameter(""referer""));long ifModifiedSince = request.getDateHeader(""If-Modified-Since"");long fileDate = file.getLastModifiedDate() - (file.getLastModifiedDate() % 1000);if (fileDate <= ifModifiedSince) {response.setStatus(HttpServletResponse.SC_NOT_MODIFIED);if (""attachment"".equals(disposition)) {response.setHeader(""Content-Disposition"", ""attachment; filename=\"""" + file.getName() + ""\"""");} else {response.setHeader(""Content-Disposition"", ""inline; filename=\"""" + file.getName() + ""\"""");}response.setContentType(file.getContentType());response.setHeader(""Content-Description"", file.getName());response.setDateHeader(""Last-Modified"", file.getLastModifiedDate());response.setDateHeader(""Expires"", System.currentTimeMillis() + 31536000000L);response.setContentLength((int) file.getSize());response.flushBuffer();Logger.log(""Conditional GET: "" + file.getName());return;}User authUser = baseService.getAuthenticatedUser(session, request, response);if (!SecurityHelper.doesUserHavePermission(session, authUser, file, Permission.PERM.READ)) {response.sendError(HttpServletResponse.SC_FORBIDDEN, ""Forbidden"");response.setStatus(HttpServletResponse.SC_FORBIDDEN);response.flushBuffer();Logger.log(""Forbidden content requested: "" + fileParameter);return;}String contentType = file.getContentType();response.setContentType(contentType);if (""attachment"".equals(disposition)) {response.setHeader(""Content-Disposition"", ""attachment; filename=\"""" + file.getName() + ""\"""");} else {response.setHeader(""Content-Disposition"", ""inline; filename=\"""" + file.getName() + ""\"""");}String name = file.getName();response.setHeader(""Content-Description"", name);response.setDateHeader(""Last-Modified"", file.getLastModifiedDate());response.setDateHeader(""Expires"", System.currentTimeMillis() + 31536000000L);response.setContentLength((int) file.getSize());java.io.File possibleDataFile = new java.io.File(BaseSystem.getTempDir() + file.getNameOnDisk());if (possibleDataFile.exists()) {Logger.log(""File exists in "" + BaseSystem.getTempDir() + "" pulling "" + possibleDataFile.getName());FileInputStream fileInputStream = new FileInputStream(possibleDataFile);try {IOUtils.copy(fileInputStream, outStream);} finally {try {fileInputStream.close();} catch (Throwable t) {}}} else {List<FileData> fileDataList = HibernateUtil.getInstance().executeQuery(session, ""from "" + FileData.class.getSimpleName() + "" where permissibleObject.id = "" + file.getId());if (fileDataList.size() == 0) {response.sendError(HttpServletResponse.SC_NOT_FOUND);response.setStatus(HttpServletResponse.SC_NOT_FOUND);Logger.log(""Requested content not found: "" + fileParameter);response.flushBuffer();return;}fileData = (FileData) fileDataList.get(0);FileOutputStream fileOutputStream = null;try {java.io.File tmpDir = new java.io.File(BaseSystem.getTempDir());tmpDir.mkdirs();fileOutputStream = new FileOutputStream(possibleDataFile);IOUtils.write(fileData.getData(), fileOutputStream);} catch (Throwable t) {Logger.log(t);} finally {try {fileOutputStream.close();} catch (Throwable t) {}}IOUtils.write(fileData.getData(), outStream);}} catch (Throwable t) {Logger.log(t);try {response.sendError(HttpServletResponse.SC_NOT_FOUND);response.setStatus(HttpServletResponse.SC_NOT_FOUND);response.flushBuffer();} catch (Throwable tt) {}try {response.reset();response.resetBuffer();} catch (Throwable tt) {}} finally {file = null;fileData = null;try {outStream.flush();} catch (Throwable t) {}try {outStream.close();} catch (Throwable t) {}try {session.close();} catch (Throwable t) {}}}private void chooseGame(DefaultHttpClient httpclient) throws IOException, ClientProtocolException {HttpGet httpget = new HttpGet(Constants.STRATEGICDOMINATION_URL + ""/gameboard.cgi?gameid="" + 1687);HttpResponse response = httpclient.execute(httpget);HttpEntity entity = response.getEntity();System.out.println(""cg form get: "" + response.getStatusLine());if (entity != null) {InputStream inStream = entity.getContent();IOUtils.copy(inStream, System.out);}System.out.println(""cg set of cookies:"");List<Cookie> cookies = httpclient.getCookieStore().getCookies();if (cookies.isEmpty()) {System.out.println(""None"");} else {for (int i = 0; i < cookies.size(); i++) {System.out.println(""- "" + cookies.get(i).toString());}}}public String getLastVersion() {try {String server = icescrum2Properties.get(""check.url"").toString();Boolean useProxy = new Boolean(icescrum2Properties.get(""proxy.active"").toString());Boolean authProxy = new Boolean(icescrum2Properties.get(""proxy.auth.active"").toString());URL url = new URL(server);if (useProxy) {String proxy = icescrum2Properties.get(""proxy.url"").toString();String port = icescrum2Properties.get(""proxy.port"").toString();Properties systemProperties = System.getProperties();systemProperties.setProperty(""http.proxyHost"", proxy);systemProperties.setProperty(""http.proxyPort"", port);}URLConnection connection = url.openConnection();if (authProxy) {String username = icescrum2Properties.get(""proxy.auth.username"").toString();String password = icescrum2Properties.get(""proxy.auth.password"").toString();String login = username + "":"" + password;String encodedLogin = Base64.base64Encode(login);connection.setRequestProperty(""Proxy-Authorization"", ""Basic "" + encodedLogin);}connection.setConnectTimeout(Integer.parseInt(icescrum2Properties.get(""check.timeout"").toString()));InputStream input = connection.getInputStream();StringWriter writer = new StringWriter();InputStreamReader streamReader = new InputStreamReader(input);BufferedReader buffer = new BufferedReader(streamReader);String value = """";while (null != (value = buffer.readLine())) {writer.write(value);}return writer.toString();} catch (IOException e) {}return null;}public void convert(File src, File dest) throws IOException {InputStream in = new BufferedInputStream(new FileInputStream(src));DcmParser p = pfact.newDcmParser(in);Dataset ds = fact.newDataset();p.setDcmHandler(ds.getDcmHandler());try {FileFormat format = p.detectFileFormat();if (format != FileFormat.ACRNEMA_STREAM) {System.out.println(""\n"" + src + "": not an ACRNEMA stream!"");return;}p.parseDcmFile(format, Tags.PixelData);if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {System.out.println(""\n"" + src + "": contains UIDs!"" + "" => probable already DICOM - do not convert"");return;}boolean hasPixelData = p.getReadTag() == Tags.PixelData;boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;int pxlen = p.getReadLength();if (hasPixelData) {if (inflate) {ds.putUS(Tags.BitsAllocated, 16);pxlen = pxlen * 4 / 3;}if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {System.out.println(""\n"" + src + "": mismatch pixel data length!"" + "" => do not convert"");return;}}ds.putUI(Tags.StudyInstanceUID, uid(studyUID));ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));ds.putUI(Tags.SOPInstanceUID, uid(instUID));ds.putUI(Tags.SOPClassUID, classUID);if (!ds.contains(Tags.NumberOfSamples)) {ds.putUS(Tags.NumberOfSamples, 1);}if (!ds.contains(Tags.PhotometricInterpretation)) {ds.putCS(Tags.PhotometricInterpretation, ""MONOCHROME2"");}if (fmi) {ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));}OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));try {} finally {ds.writeFile(out, encodeParam());if (hasPixelData) {if (!skipGroupLen) {out.write(PXDATA_GROUPLEN);int grlen = pxlen + 8;out.write((byte) grlen);out.write((byte) (grlen >> 8));out.write((byte) (grlen >> 16));out.write((byte) (grlen >> 24));}out.write(PXDATA_TAG);out.write((byte) pxlen);out.write((byte) (pxlen >> 8));out.write((byte) (pxlen >> 16));out.write((byte) (pxlen >> 24));}if (inflate) {int b2, b3;for (; pxlen > 0; pxlen -= 3) {out.write(in.read());b2 = in.read();b3 = in.read();out.write(b2 & 0x0f);out.write(b2 >> 4 | ((b3 & 0x0f) << 4));out.write(b3 >> 4);}} else {for (; pxlen > 0; --pxlen) {out.write(in.read());}}out.close();}System.out.print('.');} finally {in.close();}}public T_Result unmarshall(URL url) throws SAXException, ParserConfigurationException, IOException {XMLReader parser = getParserFactory().newSAXParser().getXMLReader();parser.setContentHandler(getContentHandler());parser.setDTDHandler(getContentHandler());parser.setEntityResolver(getContentHandler());parser.setErrorHandler(getContentHandler());InputSource inputSource = new InputSource(url.openStream());inputSource.setSystemId(url.toString());parser.parse(inputSource);return contentHandler.getRootObject();}private static String getServiceResponse(final String requestName, final Template template, final Map variables) {OutputStreamWriter outputWriter = null;try {final StringWriter writer = new StringWriter();final VelocityContext context = new VelocityContext(variables);template.merge(context, writer);final String request = writer.toString();final URLConnection urlConnection = new URL(SERVICE_URL).openConnection();urlConnection.setUseCaches(false);urlConnection.setDoOutput(true);urlConnection.setRequestProperty(""User-Agent"", ""Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2b4) Gecko/20091124 Firefox/3.6b4"");urlConnection.setRequestProperty(""Accept"", ""text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"");urlConnection.setRequestProperty(""Accept-Language"", ""en-us,en;q=0.5"");urlConnection.setRequestProperty(""Accept-Charset"", ""ISO-8859-1,utf-8;q=0.7,*;q=0.7"");urlConnection.setRequestProperty(""Accept-Encoding"", ""gzip,deflate"");urlConnection.setRequestProperty(""Keep-Alive"", ""115"");urlConnection.setRequestProperty(""Connection"", ""keep-alive"");urlConnection.setRequestProperty(""Content-Type"", ""text/xml; charset=utf-8"");urlConnection.setRequestProperty(""Content-Length"", """" + request.length());urlConnection.setRequestProperty(""SOAPAction"", requestName);outputWriter = new OutputStreamWriter(urlConnection.getOutputStream(), ""UTF-8"");outputWriter.write(request);outputWriter.flush();final InputStream result = urlConnection.getInputStream();return IOUtils.toString(result);} catch (Exception ex) {throw new RuntimeException(ex);} finally {if (outputWriter != null) {try {outputWriter.close();} catch (IOException logOrIgnore) {}}}}public static void CopyFile(String in, String out) throws Exception {FileChannel sourceChannel = new FileInputStream(new File(in)).getChannel();FileChannel destinationChannel = new FileOutputStream(new File(out)).getChannel();sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel);sourceChannel.close();destinationChannel.close();}public static String getMD5(String password) {MessageDigest md5;try {md5 = MessageDigest.getInstance(""MD5"");md5.update(password.getBytes());String pwd = new BigInteger(1, md5.digest()).toString(16);return pwd;} catch (Exception e) {logger.error(e.getMessage());}return password;}public static String[] bubbleSort(String[] unsortedString, boolean ascending) {if (unsortedString.length < 2) return unsortedString;String[] sortedString = new String[unsortedString.length];for (int i = 0; i < unsortedString.length; i++) {sortedString[i] = unsortedString[i];}if (ascending) {for (int i = 0; i < sortedString.length - 1; i++) {for (int j = 1; j < sortedString.length - 1 - i; j++) if (sortedString[j + 1].compareToIgnoreCase(sortedString[j]) < 0) {String swap = sortedString[j];sortedString[j] = sortedString[j + 1];sortedString[j + 1] = swap;}}} else {for (int i = sortedString.length - 2; i >= 0; i--) {for (int j = sortedString.length - 2 - i; j >= 0; j--) if (sortedString[j + 1].compareToIgnoreCase(sortedString[j]) > 0) {String swap = sortedString[j];sortedString[j] = sortedString[j + 1];sortedString[j + 1] = swap;}}}return sortedString;}"	5
"public static String md5(final String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md = MessageDigest.getInstance(""MD5"");byte[] md5hash = new byte[FOUR_BYTES];md.update(text.getBytes(""iso-8859-1""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);}static byte[] getSystemEntropy() {byte[] ba;final MessageDigest md;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException nsae) {throw new InternalError(""internal error: SHA-1 not available."");}byte b = (byte) System.currentTimeMillis();md.update(b);java.security.AccessController.doPrivileged(new java.security.PrivilegedAction() {public Object run() {try {String s;Properties p = System.getProperties();Enumeration e = p.propertyNames();while (e.hasMoreElements()) {s = (String) e.nextElement();md.update(s.getBytes());md.update(p.getProperty(s).getBytes());}md.update(InetAddress.getLocalHost().toString().getBytes());File f = new File(p.getProperty(""java.io.tmpdir""));String[] sa = f.list();for (int i = 0; i < sa.length; i++) md.update(sa[i].getBytes());} catch (Exception ex) {md.update((byte) ex.hashCode());}Runtime rt = Runtime.getRuntime();byte[] memBytes = longToByteArray(rt.totalMemory());md.update(memBytes, 0, memBytes.length);memBytes = longToByteArray(rt.freeMemory());md.update(memBytes, 0, memBytes.length);return null;}});return md.digest();}private static void serveHTML() throws Exception {Bus bus = BusFactory.getDefaultBus();DestinationFactoryManager dfm = bus.getExtension(DestinationFactoryManager.class);DestinationFactory df = dfm.getDestinationFactory(""http://cxf.apache.org/transports/http/configuration"");EndpointInfo ei = new EndpointInfo();ei.setAddress(""http://localhost:8080/test.html"");Destination d = df.getDestination(ei);d.setMessageObserver(new MessageObserver() {public void onMessage(Message message) {try {ExchangeImpl ex = new ExchangeImpl();ex.setInMessage(message);Conduit backChannel = message.getDestination().getBackChannel(message, null, null);MessageImpl res = new MessageImpl();res.put(Message.CONTENT_TYPE, ""text/html"");backChannel.prepare(res);OutputStream out = res.getContent(OutputStream.class);FileInputStream is = new FileInputStream(""test.html"");IOUtils.copy(is, out, 2048);out.flush();out.close();is.close();backChannel.close(res);} catch (Exception e) {e.printStackTrace();}}});}public void onMessage(Message message) {try {ExchangeImpl ex = new ExchangeImpl();ex.setInMessage(message);Conduit backChannel = message.getDestination().getBackChannel(message, null, null);MessageImpl res = new MessageImpl();res.put(Message.CONTENT_TYPE, ""text/html"");backChannel.prepare(res);OutputStream out = res.getContent(OutputStream.class);FileInputStream is = new FileInputStream(""test.html"");IOUtils.copy(is, out, 2048);out.flush();out.close();is.close();backChannel.close(res);} catch (Exception e) {e.printStackTrace();}}public String readRemoteFile() throws IOException {String response = """";boolean eof = false;URL url = new URL(StaticData.remoteFile);InputStream is = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(is));String s;s = br.readLine();response = s;while (!eof) {try {s = br.readLine();if (s == null) {eof = true;br.close();} else response += s;} catch (EOFException eo) {eof = true;} catch (IOException e) {System.out.println(""IO Error : "" + e.getMessage());}}return response;}public void copy(String pathFileIn, String pathFileOut) {try {File inputFile = new File(pathFileIn);File outputFile = new File(pathFileOut);FileReader in = new FileReader(inputFile);File outDir = new File(DirOut);if (!outDir.exists()) outDir.mkdirs();FileWriter out = new FileWriter(outputFile);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();this.printColumn(inputFile.getName(), outputFile.getPath());} catch (Exception e) {e.printStackTrace();}}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer(128);try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer(32);for (int j = 0; j < array.length; ++j) {int b = array[j] & TWO_BYTES;if (b < PAD_BELOW) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {}}public void setUp() {try {String excelFile = ""result"" + java.io.File.separator + ""input"" + java.io.File.separator + ""conextech.xls"";java.io.File f1 = new java.io.File(excelFile);URL url = new URL(""file:test/result/input/checksun.xls"");InputStream is = url.openStream();workbook = Workbook.getWorkbook(is);} catch (MalformedURLException urlEx) {urlEx.printStackTrace();fail();} catch (IOException ioEx) {ioEx.printStackTrace();fail();} catch (BiffException biffEx) {biffEx.printStackTrace();fail();}}public void removeJarFiles() throws IOException {HashSet<GridNode> nodes = (HashSet) batchTask.returnNodeCollection();Iterator<GridNode> ic = nodes.iterator();InetAddress addLocal = InetAddress.getLocalHost();String hostnameLocal = addLocal.getHostName();while (ic.hasNext()) {GridNode node = ic.next();String address = node.getPhysicalAddress();InetAddress addr = InetAddress.getByName(address);byte[] rawAddr = addr.getAddress();Map<String, String> attributes = node.getAttributes();InetAddress hostname = InetAddress.getByAddress(rawAddr);if (hostname.getHostName().equals(hostnameLocal)) continue;String gridPath = attributes.get(""GRIDGAIN_HOME"");FTPClient ftp = new FTPClient();try {String[] usernamePass = inputNodes.get(hostname.getHostName());ftp.connect(hostname);ftp.login(usernamePass[0], usernamePass[1]);int reply = ftp.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {ftp.disconnect();System.err.println(""FTP server refused connection."");continue;}ftp.login(usernamePass[0], usernamePass[1]);String directory = gridPath + ""/libs/ext/"";ftp.changeWorkingDirectory(directory);FTPFile[] fs = ftp.listFiles();for (FTPFile f : fs) {if (f.isDirectory()) continue;System.out.println(f.getName());ftp.deleteFile(f.getName());}ftp.sendCommand(""rm *"");ftp.logout();ftp.disconnect();} catch (Exception e) {MessageCenter.getMessageCenter(BatchMainSetup.class).error(""Problems with the FTP connection."" + ""A file has not been succesfully transfered"", e);e.printStackTrace();}}}public void transferOutputFiles() throws IOException {HashSet<GridNode> nodes = (HashSet) batchTask.returnNodeCollection();Iterator<GridNode> ic = nodes.iterator();InetAddress addLocal = InetAddress.getLocalHost();String hostnameLocal = addLocal.getHostName();while (ic.hasNext()) {GridNode node = ic.next();String address = node.getPhysicalAddress();InetAddress addr = InetAddress.getByName(address);byte[] rawAddr = addr.getAddress();Map<String, String> attributes = node.getAttributes();InetAddress hostname = InetAddress.getByAddress(rawAddr);if (hostname.getHostName().equals(hostnameLocal)) continue;String[] usernamePass = inputNodes.get(hostname.getHostName());String gridPath = attributes.get(""GRIDGAIN_HOME"");FTPClient ftp = new FTPClient();ftp.connect(hostname);ftp.login(usernamePass[0], usernamePass[1]);int reply = ftp.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {ftp.disconnect();System.err.println(""FTP server refused connection."");continue;}ftp.changeWorkingDirectory(gridPath + ""/bin"");ftp.setFileType(FTPClient.COMPRESSED_TRANSFER_MODE);ftp.setRemoteVerificationEnabled(false);ftp.setFileType(FTPClient.ASCII_FILE_TYPE);FTPFile[] fs = ftp.listFiles();for (FTPFile f : fs) {if (f.isDirectory()) continue;String fileName = f.getName();if (!fileName.endsWith("".txt"")) continue;System.out.println(f.getName());FileOutputStream out = new FileOutputStream(""../repast.simphony.distributedBatch/"" + ""remoteOutput/"" + f.getName());try {ftp.retrieveFile(fileName, out);} catch (Exception e) {continue;} finally {if (out != null) out.close();}}ftp.logout();ftp.disconnect();}}"	5
"private static void getFileFtp(String user, String password, String host, int port, String fileName, String location) throws Exception {Log.info(""\nretrieve "" + fileName + NEW_LINE);FTPClient client = new FTPClient();client.connect(host, port);int reply = client.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {throw new Exception(""FTP fail to connect"");}if (!client.login(user, password)) {throw new Exception(""FTP fail to login"");}try {File locationFile = new File(location);File dest = new File(locationFile, fileName);if (dest.exists()) {dest.delete();} else {locationFile.mkdirs();}boolean status = client.changeWorkingDirectory(""/"");Log.info(""chdir-status:"" + status + NEW_LINE);client.setFileTransferMode(FTPClient.BINARY_FILE_TYPE);client.setFileType(FTPClient.BINARY_FILE_TYPE);client.enterLocalActiveMode();InputStream in = client.retrieveFileStream(fileName);if (in == null) {Log.error(""Input stream is null\n"");throw new Exception(""Fail to retrieve file "" + fileName);}Thread.sleep(3000);saveInputStreamToFile(in, new File(location, fileName));} finally {client.disconnect();}}public static void copyFile(String src, String target) throws IOException {FileChannel ic = new FileInputStream(src).getChannel();FileChannel oc = new FileOutputStream(target).getChannel();ic.transferTo(0, ic.size(), oc);ic.close();oc.close();}public static String digest(String text, String algorithm, String charsetName) {try {MessageDigest md = MessageDigest.getInstance(algorithm);md.update(text.getBytes(charsetName), 0, text.length());return convertToHex(md.digest());} catch (NoSuchAlgorithmException e) {throw new RuntimeException(""unexpected exception: "" + e, e);} catch (UnsupportedEncodingException e) {throw new RuntimeException(""unexpected exception: "" + e, e);}}private String callPage(String urlStr) throws IOException {URL url = new URL(urlStr);BufferedReader reader = null;StringBuilder result = new StringBuilder();try {reader = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = reader.readLine()) != null) {result.append(line);}} finally {if (reader != null) reader.close();}return result.toString();}public static Image getPluginImage(Object plugin, String name) {try {try {URL url = getPluginImageURL(plugin, name);if (mURLImageMap.containsKey(url)) {return mURLImageMap.get(url);}InputStream is = url.openStream();Image image;try {image = getImage(is);mURLImageMap.put(url, image);} finally {is.close();}return image;} catch (Throwable e) {LOG.debug(""Ignore any exceptions"");}} catch (Throwable e) {LOG.debug(""Ignore any exceptions"");}return null;}public static void processString(String text) throws Exception {MessageDigest md5 = MessageDigest.getInstance(MD5_DIGEST);md5.reset();md5.update(text.getBytes());displayResult(null, md5.digest());}public void process(String t) {try {MessageDigest md5 = MessageDigest.getInstance(MD5_DIGEST);md5.reset();md5.update(t.getBytes());callback.display(null, digestToHexString(md5.digest()));} catch (Exception ex) {callback.display(null, ""[failed]"");}}private void save() {int[] selection = list.getSelectionIndices();String dir = System.getProperty(""user.dir"");for (int i = 0; i < selection.length; i++) {File src = files[selection[i]];FileDialog dialog = new FileDialog(shell, SWT.SAVE);dialog.setFilterPath(dir);dialog.setFileName(src.getName());String destination = dialog.open();if (destination != null) {File dest = new File(destination);try {dest.createNewFile();FileChannel srcC = new FileInputStream(src).getChannel();FileChannel destC = new FileOutputStream(dest).getChannel();destC.transferFrom(srcC, 0, srcC.size());destC.close();srcC.close();updateSaved(selection[i], true);files[selection[i]] = dest;} catch (FileNotFoundException e) {IVC.showError(""Error!"", """" + e.getMessage(), """");} catch (IOException e) {IVC.showError(""Error!"", """" + e.getMessage(), """");}}}}public static void main(String[] args) {if (args.length == 0) {System.out.println(""Usage: java xyzImpl inputfile"");System.exit(0);}XYZ xyz = null;try {URL url = new URL(Util.makeAbsoluteURL(args[0]));BufferedReader bReader = new BufferedReader(new InputStreamReader(url.openStream()));int idx = args[0].indexOf(""."");String id = (idx == -1) ? args[0] : args[0].substring(0, idx);idx = id.lastIndexOf(""\\"");if (idx != -1) id = id.substring(idx + 1);xyz = new XYZImpl(bReader, id);CMLMolecule mol = xyz.getMolecule();StringWriter sw = new StringWriter();mol.debug(sw);System.out.println(sw.toString());SpanningTree sTree = new SpanningTreeImpl(mol);System.out.println(sTree.toSMILES());Writer w = new OutputStreamWriter(new FileOutputStream(id + "".xml""));PMRDelegate.outputEventStream(mol, w, PMRNode.PRETTY, 0);w.close();w = new OutputStreamWriter(new FileOutputStream(id + ""-new.mol""));xyz.setOutputCMLMolecule(mol);xyz.output(w);w.close();} catch (Exception e) {System.out.println(""xyz failed: "" + e);e.printStackTrace();System.exit(0);}}public static void bubbleSort(Drawable[] list) {boolean swapped;do {swapped = false;for (int i = 0; i < list.length - 1; ++i) {if (list[i].getSortValue() > list[i + 1].getSortValue()) {Drawable temp = list[i];list[i] = list[i + 1];list[i + 1] = temp;swapped = true;}}} while (swapped);}"	5
"private void Connect() throws NpsException {try {client = new FTPClient();client.connect(host.hostname, host.remoteport);int reply = client.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {client.disconnect();client = null;nps.util.DefaultLog.error_noexception(""FTP Server:"" + host.hostname + ""refused connection."");return;}client.login(host.uname, host.upasswd);client.enterLocalPassiveMode();client.setFileType(FTPClient.BINARY_FILE_TYPE);client.changeWorkingDirectory(host.remotedir);} catch (Exception e) {nps.util.DefaultLog.error(e);}}public void sorter() {String inputLine1, inputLine2;String epiNames[] = new String[1000];String epiEpisodes[] = new String[1000];int lineCounter = 0;try {String pluginDir = pluginInterface.getPluginDirectoryName();String eplist_file = pluginDir + System.getProperty(""file.separator"") + ""EpisodeList.txt"";File episodeList = new File(eplist_file);if (!episodeList.isFile()) {episodeList.createNewFile();}final BufferedReader in = new BufferedReader(new FileReader(episodeList));while ((inputLine1 = in.readLine()) != null) {if ((inputLine2 = in.readLine()) != null) {epiNames[lineCounter] = inputLine1;epiEpisodes[lineCounter] = inputLine2;lineCounter++;}}in.close();int epiLength = epiNames.length;for (int i = 0; i < (lineCounter); i++) {for (int j = 0; j < (lineCounter - 1); j++) {if (epiNames[j].compareToIgnoreCase(epiNames[j + 1]) > 0) {String temp = epiNames[j];epiNames[j] = epiNames[j + 1];epiNames[j + 1] = temp;String temp2 = epiEpisodes[j];epiEpisodes[j] = epiEpisodes[j + 1];epiEpisodes[j + 1] = temp2;}}}File episodeList2 = new File(eplist_file);BufferedWriter bufWriter = new BufferedWriter(new FileWriter(episodeList2));for (int i = 0; i <= lineCounter; i++) {if (epiNames[i] == null) {break;}bufWriter.write(epiNames[i] + ""\n"");bufWriter.write(epiEpisodes[i] + ""\n"");}bufWriter.close();} catch (IOException e) {e.printStackTrace();}}public static String machineInfo() {StringBuilder machineInfo = new StringBuilder();try {Enumeration networkInterfaces = NetworkInterface.getNetworkInterfaces();while (networkInterfaces.hasMoreElements()) {NetworkInterface networkInterface = (NetworkInterface) networkInterfaces.nextElement();if (""eth0"".equals(networkInterface.getDisplayName())) {for (byte b : networkInterface.getHardwareAddress()) {StringTools.appendWithDelimiter(machineInfo, String.format(""%02x"", b).toUpperCase(), "":"");}machineInfo.append(""\n"");break;}}} catch (IOException x) {System.out.println(""LicenseTools.machineInfo: "" + x.getMessage());x.printStackTrace();}if (machineInfo.length() == 0) {return null;}String info = machineInfo.toString();try {MessageDigest messageDigest = MessageDigest.getInstance(""MD5"", ""SUN"");messageDigest.update(info.getBytes());byte[] md5 = messageDigest.digest(info.getBytes());return new String(Base64.encodeBase64(md5));} catch (Exception x) {System.out.println(""LicenseTools.machineInfo: "" + x.getMessage());x.printStackTrace();}return null;}public void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {PrintWriter out = null;ServletOutputStream outstream = null;try {String action = req.getParameter(""nmrshiftdbaction"");String relativepath = ServletUtils.expandRelative(this.getServletConfig(), ""/WEB-INF"");TurbineConfig tc = new TurbineConfig(relativepath + "".."", relativepath + getServletConfig().getInitParameter(""properties""));tc.init();int spectrumId = -1;DBSpectrum spectrum = null;Export export = null;String format = req.getParameter(""format"");if (action.equals(""test"")) {try {res.setContentType(""text/plain"");out = res.getWriter();List l = DBSpectrumPeer.executeQuery(""select SPECTRUM_ID from SPECTRUM limit 1"");if (l.size() > 0) spectrumId = ((Record) l.get(0)).getValue(1).asInt();out.write(""success"");} catch (Exception ex) {out.write(""failure"");}} else if (action.equals(""rss"")) {int numbertoexport = 10;out = res.getWriter();if (req.getParameter(""numbertoexport"") != null) {try {numbertoexport = Integer.parseInt(req.getParameter(""numbertoexport""));if (numbertoexport < 1 || numbertoexport > 20) throw new NumberFormatException(""Number to small/large"");} catch (NumberFormatException ex) {out.println(""The parameter <code>numbertoexport</code>must be an integer from 1 to 20"");}}res.setContentType(""text/xml"");RssWriter rssWriter = new RssWriter();rssWriter.setWriter(res.getWriter());AtomContainerSet soac = new AtomContainerSet();String query = ""select distinct MOLECULE.MOLECULE_ID from MOLECULE, SPECTRUM where SPECTRUM.MOLECULE_ID = MOLECULE.MOLECULE_ID and SPECTRUM.REVIEW_FLAG =\""true\"" order by MOLECULE.DATE desc;"";List l = NmrshiftdbUserPeer.executeQuery(query);for (int i = 0; i < numbertoexport; i++) {if (i == l.size()) break;DBMolecule mol = DBMoleculePeer.retrieveByPK(new NumberKey(((Record) l.get(i)).getValue(1).asInt()));IMolecule cdkmol = mol.getAsCDKMoleculeAsEntered(1);soac.addAtomContainer(cdkmol);rssWriter.getLinkmap().put(cdkmol, mol.getEasylink(req));rssWriter.getDatemap().put(cdkmol, mol.getDate());rssWriter.getTitlemap().put(cdkmol, mol.getChemicalNamesAsOneStringWithFallback());rssWriter.getCreatormap().put(cdkmol, mol.getNmrshiftdbUser().getUserName());rssWriter.setCreator(GeneralUtils.getAdminEmail(getServletConfig()));Vector v = mol.getDBCanonicalNames();for (int k = 0; k < v.size(); k++) {DBCanonicalName canonName = (DBCanonicalName) v.get(k);if (canonName.getDBCanonicalNameType().getCanonicalNameType() == ""INChI"") {rssWriter.getInchimap().put(cdkmol, canonName.getName());break;}}rssWriter.setTitle(""NMRShiftDB"");rssWriter.setLink(""http://www.nmrshiftdb.org"");rssWriter.setDescription(""NMRShiftDB is an open-source, open-access, open-submission, open-content web database for chemical structures and their nuclear magnetic resonance data"");rssWriter.setPublisher(""NMRShiftDB.org"");rssWriter.setImagelink(""http://www.nmrshiftdb.org/images/nmrshift-logo.gif"");rssWriter.setAbout(""http://www.nmrshiftdb.org/NmrshiftdbServlet?nmrshiftdbaction=rss"");Collection coll = new ArrayList();Vector spectra = mol.selectSpectra(null);for (int k = 0; k < spectra.size(); k++) {Element el = ((DBSpectrum) spectra.get(k)).getCmlSpect();Element el2 = el.getChildElements().get(0);el.removeChild(el2);coll.add(el2);}rssWriter.getMultiMap().put(cdkmol, coll);}rssWriter.write(soac);} else if (action.equals(""getattachment"")) {res.setContentType(""application/zip"");outstream = res.getOutputStream();DBSample sample = DBSamplePeer.retrieveByPK(new NumberKey(req.getParameter(""sampleid"")));outstream.write(sample.getAttachment());} else if (action.equals(""createreport"")) {res.setContentType(""application/pdf"");outstream = res.getOutputStream();boolean yearly = req.getParameter(""style"").equals(""yearly"");int yearstart = Integer.parseInt(req.getParameter(""yearstart""));int yearend = Integer.parseInt(req.getParameter(""yearend""));int monthstart = 0;int monthend = 0;if (!yearly) {monthstart = Integer.parseInt(req.getParameter(""monthstart""));monthend = Integer.parseInt(req.getParameter(""monthend""));}int type = Integer.parseInt(req.getParameter(""type""));JasperReport jasperReport = (JasperReport) JRLoader.loadObject(relativepath + ""/reports/"" + (yearly ? ""yearly"" : ""monthly"") + ""_report_"" + type + "".jasper"");Map parameters = new HashMap();if (yearly) parameters.put(""HEADER"", ""Report for years "" + yearstart + "" - "" + yearend); else parameters.put(""HEADER"", ""Report for "" + monthstart + ""/"" + yearstart + "" - "" + monthend + ""/"" + yearend);DBConnection dbconn = TurbineDB.getConnection();Connection conn = dbconn.getConnection();Statement stmt = conn.createStatement();ResultSet rs = null;if (type == 1) {rs = stmt.executeQuery(""select YEAR(DATE) as YEAR, "" + (yearly ? """" : "" MONTH(DATE) as MONTH, "") + ""AFFILIATION_1, AFFILIATION_2, MACHINE.NAME as NAME, count(*) as C, sum(WISHED_SPECTRUM like '%13C%' or WISHED_SPECTRUM like '%variable temperature%' or WISHED_SPECTRUM like '%ID sel. NOE%' or WISHED_SPECTRUM like '%solvent suppression%' or WISHED_SPECTRUM like '%standard spectrum%') as 1_D, sum(WISHED_SPECTRUM like '%H,H-COSY%' or WISHED_SPECTRUM like '%NOESY%' or WISHED_SPECTRUM like '%HMQC%' or WISHED_SPECTRUM like '%HMBC%') as 2_D, sum(OTHER_WISHED_SPECTRUM!='') as SPECIAL, sum(OTHER_NUCLEI!='') as HETERO, sum(PROCESS='self') as SELF, sum(PROCESS='robot') as ROBOT, sum(PROCESS='worker') as OPERATOR from (SAMPLE join TURBINE_USER using (USER_ID)) join MACHINE on MACHINE.MACHINE_ID=SAMPLE.MACHINE where YEAR(DATE)>="" + yearstart + "" and YEAR(DATE)<="" + yearend + "" and LOGIN_NAME<>'testuser' group by YEAR, "" + (yearly ? """" : ""MONTH, "") + ""AFFILIATION_1, AFFILIATION_2, MACHINE.NAME"");} else if (type == 2) {rs = stmt.executeQuery(""select YEAR(DATE) as YEAR, "" + (yearly ? """" : "" MONTH(DATE) as MONTH, "") + ""MACHINE.NAME as NAME, count(*) as C, sum(WISHED_SPECTRUM like '%13C%' or WISHED_SPECTRUM like '%variable temperature%' or WISHED_SPECTRUM like '%ID sel. NOE%' or WISHED_SPECTRUM like '%solvent suppression%' or WISHED_SPECTRUM like '%standard spectrum%') as 1_D, sum(WISHED_SPECTRUM like '%H,H-COSY%' or WISHED_SPECTRUM like '%NOESY%' or WISHED_SPECTRUM like '%HMQC%' or WISHED_SPECTRUM like '%HMBC%') as 2_D, sum(OTHER_WISHED_SPECTRUM!='') as SPECIAL, sum(OTHER_NUCLEI!='') as HETERO, sum(PROCESS='self') as SELF, sum(PROCESS='robot') as ROBOT, sum(PROCESS='worker') as OPERATOR from (SAMPLE join TURBINE_USER using (USER_ID)) join MACHINE on MACHINE.MACHINE_ID=SAMPLE.MACHINE group by YEAR, "" + (yearly ? """" : ""MONTH, "") + ""MACHINE.NAME"");}JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, new JRResultSetDataSource(rs));JasperExportManager.exportReportToPdfStream(jasperPrint, outstream);dbconn.close();} else if (action.equals(""exportcmlbyinchi"")) {res.setContentType(""text/xml"");out = res.getWriter();String inchi = req.getParameter(""inchi"");String spectrumtype = req.getParameter(""spectrumtype"");Criteria crit = new Criteria();crit.add(DBCanonicalNamePeer.NAME, inchi);crit.addJoin(DBCanonicalNamePeer.MOLECULE_ID, DBSpectrumPeer.MOLECULE_ID);crit.addJoin(DBSpectrumPeer.SPECTRUM_TYPE_ID, DBSpectrumTypePeer.SPECTRUM_TYPE_ID);crit.add(DBSpectrumTypePeer.NAME, spectrumtype);try {GeneralUtils.logToSql(crit.toString(), null);} catch (Exception ex) {}Vector spectra = DBSpectrumPeer.doSelect(crit);if (spectra.size() == 0) {out.write(""No such molecule or spectrum"");} else {Element cmlElement = new Element(""cml"");cmlElement.addAttribute(new Attribute(""convention"", ""nmrshiftdb-convention""));cmlElement.setNamespaceURI(""http://www.xml-cml.org/schema"");Element parent = ((DBSpectrum) spectra.get(0)).getDBMolecule().getCML(1);nu.xom.Node cmldoc = parent.getChild(0);((Element) cmldoc).setNamespaceURI(""http://www.xml-cml.org/schema"");parent.removeChildren();cmlElement.appendChild(cmldoc);for (int k = 0; k < spectra.size(); k++) {Element parentspec = ((DBSpectrum) spectra.get(k)).getCmlSpect();Node spectrumel = parentspec.getChild(0);parentspec.removeChildren();cmlElement.appendChild(spectrumel);((Element) spectrumel).setNamespaceURI(""http://www.xml-cml.org/schema"");}out.write(cmlElement.toXML());}} else if (action.equals(""namelist"")) {res.setContentType(""application/zip"");outstream = res.getOutputStream();ByteArrayOutputStream baos = new ByteArrayOutputStream();ZipOutputStream zipout = new ZipOutputStream(baos);Criteria crit = new Criteria();crit.addJoin(DBMoleculePeer.MOLECULE_ID, DBSpectrumPeer.MOLECULE_ID);crit.add(DBSpectrumPeer.REVIEW_FLAG, ""true"");Vector v = DBMoleculePeer.doSelect(crit);for (int i = 0; i < v.size(); i++) {if (i % 500 == 0) {if (i != 0) {zipout.write(new String(""<p>The list is continued <a href=\""nmrshiftdb.names."" + i + "".html\"">here</a></p></body></html>"").getBytes());zipout.closeEntry();}zipout.putNextEntry(new ZipEntry(""nmrshiftdb.names."" + i + "".html""));zipout.write(new String(""<html><body><h1>This is a list of strcutures in <a href=\""http://www.nmrshiftdb.org\"">NMRShiftDB</a>, starting at "" + i + "", Its main purpose is to be found by search engines</h1>"").getBytes());}DBMolecule mol = (DBMolecule) v.get(i);zipout.write(new String(""<p><a href=\"""" + mol.getEasylink(req) + ""\"">"").getBytes());Vector cannames = mol.getDBCanonicalNames();for (int k = 0; k < cannames.size(); k++) {zipout.write(new String(((DBCanonicalName) cannames.get(k)).getName() + "" "").getBytes());}Vector chemnames = mol.getDBChemicalNames();for (int k = 0; k < chemnames.size(); k++) {zipout.write(new String(((DBChemicalName) chemnames.get(k)).getName() + "" "").getBytes());}zipout.write(new String(""</a>. Information we have got: NMR spectra"").getBytes());Vector spectra = mol.selectSpectra();for (int k = 0; k < spectra.size(); k++) {zipout.write(new String(((DBSpectrum) spectra.get(k)).getDBSpectrumType().getName() + "", "").getBytes());}if (mol.hasAny3d()) zipout.write(new String(""3D coordinates, "").getBytes());zipout.write(new String(""File formats: CML, mol, png, jpeg"").getBytes());zipout.write(new String(""</p>"").getBytes());}zipout.write(new String(""</body></html>"").getBytes());zipout.closeEntry();zipout.close();InputStream is = new ByteArrayInputStream(baos.toByteArray());byte[] buf = new byte[32 * 1024];int nRead = 0;while ((nRead = is.read(buf)) != -1) {outstream.write(buf, 0, nRead);}} else if (action.equals(""predictor"")) {if (req.getParameter(""symbol"") == null) {res.setContentType(""text/plain"");out = res.getWriter();out.write(""please give the symbol to create the predictor for in the request with symbol=X (e. g. symbol=C"");}res.setContentType(""application/zip"");outstream = res.getOutputStream();ByteArrayOutputStream baos = new ByteArrayOutputStream();ZipOutputStream zipout = new ZipOutputStream(baos);String filename = ""org/openscience/nmrshiftdb/PredictionTool.class"";zipout.putNextEntry(new ZipEntry(filename));JarInputStream jip = new JarInputStream(new FileInputStream(ServletUtils.expandRelative(getServletConfig(), ""/WEB-INF/lib/nmrshiftdb-lib.jar"")));JarEntry entry = jip.getNextJarEntry();while (entry.getName().indexOf(""PredictionTool.class"") == -1) {entry = jip.getNextJarEntry();}for (int i = 0; i < entry.getSize(); i++) {zipout.write(jip.read());}zipout.closeEntry();zipout.putNextEntry(new ZipEntry(""nmrshiftdb.csv""));int i = 0;org.apache.turbine.util.db.pool.DBConnection conn = TurbineDB.getConnection();HashMap mapsmap = new HashMap();while (true) {Statement stmt = conn.createStatement();ResultSet rs = stmt.executeQuery(""select HOSE_CODE, VALUE, SYMBOL from HOSE_CODES where CONDITION_TYPE='m' and WITH_RINGS=0 and SYMBOL='"" + req.getParameter(""symbol"") + ""' limit "" + (i * 1000) + "", 1000"");int m = 0;while (rs.next()) {String code = rs.getString(1);Double value = new Double(rs.getString(2));String symbol = rs.getString(3);if (mapsmap.get(symbol) == null) {mapsmap.put(symbol, new HashMap());}for (int spheres = 6; spheres > 0; spheres--) {StringBuffer hoseCodeBuffer = new StringBuffer();StringTokenizer st = new StringTokenizer(code, ""()/"");for (int k = 0; k < spheres; k++) {if (st.hasMoreTokens()) {String partcode = st.nextToken();hoseCodeBuffer.append(partcode);}if (k == 0) {hoseCodeBuffer.append(""("");} else if (k == 3) {hoseCodeBuffer.append("")"");} else {hoseCodeBuffer.append(""/"");}}String hoseCode = hoseCodeBuffer.toString();if (((HashMap) mapsmap.get(symbol)).get(hoseCode) == null) {((HashMap) mapsmap.get(symbol)).put(hoseCode, new ArrayList());}((ArrayList) ((HashMap) mapsmap.get(symbol)).get(hoseCode)).add(value);}m++;}i++;stmt.close();if (m == 0) break;}Set keySet = mapsmap.keySet();Iterator it = keySet.iterator();while (it.hasNext()) {String symbol = (String) it.next();HashMap hosemap = ((HashMap) mapsmap.get(symbol));Set keySet2 = hosemap.keySet();Iterator it2 = keySet2.iterator();while (it2.hasNext()) {String hoseCode = (String) it2.next();ArrayList list = ((ArrayList) hosemap.get(hoseCode));double[] values = new double[list.size()];for (int k = 0; k < list.size(); k++) {values[k] = ((Double) list.get(k)).doubleValue();}zipout.write(new String(symbol + ""|"" + hoseCode + ""|"" + Statistics.minimum(values) + ""|"" + Statistics.average(values) + ""|"" + Statistics.maximum(values) + ""\r\n"").getBytes());}}zipout.closeEntry();zipout.close();InputStream is = new ByteArrayInputStream(baos.toByteArray());byte[] buf = new byte[32 * 1024];int nRead = 0;i = 0;while ((nRead = is.read(buf)) != -1) {outstream.write(buf, 0, nRead);}} else if (action.equals(""exportspec"") || action.equals(""exportmol"")) {if (spectrumId > -1) spectrum = DBSpectrumPeer.retrieveByPK(new NumberKey(spectrumId)); else spectrum = DBSpectrumPeer.retrieveByPK(new NumberKey(req.getParameter(""spectrumid"")));export = new Export(spectrum);} else if (action.equals(""exportmdl"")) {res.setContentType(""text/plain"");outstream = res.getOutputStream();DBMolecule mol = DBMoleculePeer.retrieveByPK(new NumberKey(req.getParameter(""moleculeid"")));outstream.write(mol.getStructureFile(Integer.parseInt(req.getParameter(""coordsetid"")), false).getBytes());} else if (action.equals(""exportlastinputs"")) {format = action;} else if (action.equals(""printpredict"")) {res.setContentType(""text/html"");out = res.getWriter();HttpSession session = req.getSession();VelocityContext context = PredictPortlet.getContext(session, true, true, new StringBuffer(), getServletConfig(), req, true);StringWriter w = new StringWriter();Velocity.mergeTemplate(""predictprint.vm"", ""ISO-8859-1"", context, w);out.println(w.toString());} else {res.setContentType(""text/html"");out = res.getWriter();out.println(""No valid action"");}if (format == null) format = """";if (format.equals(""pdf"") || format.equals(""rtf"")) {res.setContentType(""application/"" + format);out = res.getWriter();}if (format.equals(""docbook"")) {res.setContentType(""application/zip"");outstream = res.getOutputStream();}if (format.equals(""svg"")) {res.setContentType(""image/x-svg"");out = res.getWriter();}if (format.equals(""tiff"")) {res.setContentType(""image/tiff"");outstream = res.getOutputStream();}if (format.equals(""jpeg"")) {res.setContentType(""image/jpeg"");outstream = res.getOutputStream();}if (format.equals(""png"")) {res.setContentType(""image/png"");outstream = res.getOutputStream();}if (format.equals(""mdl"") || format.equals(""txt"") || format.equals(""cml"") || format.equals(""cmlboth"") || format.indexOf(""exsection"") == 0) {res.setContentType(""text/plain"");out = res.getWriter();}if (format.equals(""simplehtml"") || format.equals(""exportlastinputs"")) {res.setContentType(""text/html"");out = res.getWriter();}if (action.equals(""exportlastinputs"")) {int numbertoexport = 4;if (req.getParameter(""numbertoexport"") != null) {try {numbertoexport = Integer.parseInt(req.getParameter(""numbertoexport""));if (numbertoexport < 1 || numbertoexport > 20) throw new NumberFormatException(""Number to small/large"");} catch (NumberFormatException ex) {out.println(""The parameter <code>numbertoexport</code>must be an integer from 1 to 20"");}}NmrshiftdbUser user = null;try {user = NmrshiftdbUserPeer.getByName(req.getParameter(""username""));} catch (NmrshiftdbException ex) {out.println(""Seems <code>username</code> is not OK: "" + ex.getMessage());}if (user != null) {List l = NmrshiftdbUserPeer.executeQuery(""SELECT LAST_DOWNLOAD_DATE FROM TURBINE_USER  where LOGIN_NAME=\"""" + user.getUserName() + ""\"";"");Date lastDownloadDate = ((Record) l.get(0)).getValue(1).asDate();if (((new Date().getTime() - lastDownloadDate.getTime()) / 3600000) < 24) {out.println(""Your last download was at "" + lastDownloadDate + "". You may download your last inputs only once a day. Sorry for this, but we need to be carefull with resources. If you want to put your last inputs on your homepage best use some sort of cache (e. g. use wget for downlaod with crond and link to this static resource))!"");} else {NmrshiftdbUserPeer.executeStatement(""UPDATE TURBINE_USER SET LAST_DOWNLOAD_DATE=NOW() where LOGIN_NAME=\"""" + user.getUserName() + ""\"";"");Vector<String> parameters = new Vector<String>();String query = ""select distinct MOLECULE.MOLECULE_ID from MOLECULE, SPECTRUM where SPECTRUM.MOLECULE_ID = MOLECULE.MOLECULE_ID and SPECTRUM.REVIEW_FLAG =\""true\"" and SPECTRUM.USER_ID="" + user.getUserId() + "" order by MOLECULE.DATE desc;"";l = NmrshiftdbUserPeer.executeQuery(query);String url = javax.servlet.http.HttpUtils.getRequestURL(req).toString();url = url.substring(0, url.length() - 17);for (int i = 0; i < numbertoexport; i++) {if (i == l.size()) break;DBMolecule mol = DBMoleculePeer.retrieveByPK(new NumberKey(((Record) l.get(i)).getValue(1).asInt()));parameters.add(new String(""<a href=\"""" + url + ""/portal/pane0/Results?nmrshiftdbaction=showDetailsFromHome&molNumber="" + mol.getMoleculeId() + ""\""><img src=\"""" + javax.servlet.http.HttpUtils.getRequestURL(req).toString() + ""?nmrshiftdbaction=exportmol&spectrumid="" + ((DBSpectrum) mol.getDBSpectrums().get(0)).getSpectrumId() + ""&format=jpeg&size=150x150&backcolor=12632256\""></a>""));}VelocityContext context = new VelocityContext();context.put(""results"", parameters);StringWriter w = new StringWriter();Velocity.mergeTemplate(""lateststructures.vm"", ""ISO-8859-1"", context, w);out.println(w.toString());}}}if (action.equals(""exportspec"")) {if (format.equals(""txt"")) {String lastsearchtype = req.getParameter(""lastsearchtype"");if (lastsearchtype.equals(NmrshiftdbConstants.TOTALSPECTRUM) || lastsearchtype.equals(NmrshiftdbConstants.SUBSPECTRUM)) {List l = ParseUtils.parseSpectrumFromSpecFile(req.getParameter(""lastsearchvalues""));spectrum.initSimilarity(l, lastsearchtype.equals(NmrshiftdbConstants.SUBSPECTRUM));}Vector v = spectrum.getOptions();DBMolecule mol = spectrum.getDBMolecule();out.print(mol.getChemicalNamesAsOneString(false) + mol.getMolecularFormula(false) + ""; "" + mol.getMolecularWeight() + "" Dalton\n\r"");out.print(""\n\rAtom\t"");if (spectrum.getDBSpectrumType().getElementSymbol() == (""H"")) out.print(""Mult.\t"");out.print(""Meas."");if (lastsearchtype.equals(NmrshiftdbConstants.TOTALSPECTRUM) || lastsearchtype.equals(NmrshiftdbConstants.SUBSPECTRUM)) {out.print(""\tInput\tDiff"");}out.print(""\n\r"");out.print(""No.\t"");if (spectrum.getDBSpectrumType().getElementSymbol() == (""H"")) out.print(""\t"");out.print(""Shift"");if (lastsearchtype.equals(NmrshiftdbConstants.TOTALSPECTRUM) || lastsearchtype.equals(NmrshiftdbConstants.SUBSPECTRUM)) {out.print(""\tShift\tM-I"");}out.print(""\n\r"");for (int i = 0; i < v.size(); i++) {out.print(((ValuesForVelocityBean) v.get(i)).getDisplayText() + ""\t"" + ((ValuesForVelocityBean) v.get(i)).getRange());if (lastsearchtype.equals(NmrshiftdbConstants.TOTALSPECTRUM) || lastsearchtype.equals(NmrshiftdbConstants.SUBSPECTRUM)) {out.print(""\t"" + ((ValuesForVelocityBean) v.get(i)).getNameForElements() + ""\t"" + ((ValuesForVelocityBean) v.get(i)).getDelta());}out.print(""\n\r"");}}if (format.equals(""simplehtml"")) {String i1 = export.getImage(false, ""jpeg"", ServletUtils.expandRelative(this.getServletConfig(), ""/nmrshiftdbhtml"") + ""/tmp/"" + System.currentTimeMillis(), true);export.pictures[0] = new File(i1).getName();String i2 = export.getImage(true, ""jpeg"", ServletUtils.expandRelative(this.getServletConfig(), ""/nmrshiftdbhtml"") + ""/tmp/"" + System.currentTimeMillis(), true);export.pictures[1] = new File(i2).getName();String docbook = export.getHtml();out.print(docbook);}if (format.equals(""pdf"") || format.equals(""rtf"")) {String svgSpec = export.getSpecSvg(400, 200);String svgspecfile = relativepath + ""/tmp/"" + System.currentTimeMillis() + ""s.svg"";new FileOutputStream(svgspecfile).write(svgSpec.getBytes());export.pictures[1] = svgspecfile;String molSvg = export.getMolSvg(true);String svgmolfile = relativepath + ""/tmp/"" + System.currentTimeMillis() + ""m.svg"";new FileOutputStream(svgmolfile).write(molSvg.getBytes());export.pictures[0] = svgmolfile;String docbook = export.getDocbook(""pdf"", ""SVG"");TransformerFactory tFactory = TransformerFactory.newInstance();Transformer transformer = tFactory.newTransformer(new StreamSource(""file:"" + GeneralUtils.getNmrshiftdbProperty(""docbookxslpath"", getServletConfig()) + ""/fo/docbook.xsl""));ByteArrayOutputStream baos = new ByteArrayOutputStream();transformer.transform(new StreamSource(new StringReader(docbook)), new StreamResult(baos));FopFactory fopFactory = FopFactory.newInstance();FOUserAgent foUserAgent = fopFactory.newFOUserAgent();OutputStream out2 = new ByteArrayOutputStream();Fop fop = fopFactory.newFop(format.equals(""rtf"") ? MimeConstants.MIME_RTF : MimeConstants.MIME_PDF, foUserAgent, out2);TransformerFactory factory = TransformerFactory.newInstance();transformer = factory.newTransformer();Source src = new StreamSource(new StringReader(baos.toString()));Result res2 = new SAXResult(fop.getDefaultHandler());transformer.transform(src, res2);out.print(out2.toString());}if (format.equals(""docbook"")) {String i1 = relativepath + ""/tmp/"" + System.currentTimeMillis() + "".svg"";new FileOutputStream(i1).write(export.getSpecSvg(300, 200).getBytes());export.pictures[0] = new File(i1).getName();String i2 = relativepath + ""/tmp/"" + System.currentTimeMillis() + "".svg"";new FileOutputStream(i2).write(export.getMolSvg(true).getBytes());export.pictures[1] = new File(i2).getName();String docbook = export.getDocbook(""pdf"", ""SVG"");String docbookfile = relativepath + ""/tmp/"" + System.currentTimeMillis() + "".xml"";new FileOutputStream(docbookfile).write(docbook.getBytes());ByteArrayOutputStream baos = export.makeZip(new String[] { docbookfile, i1, i2 });outstream.write(baos.toByteArray());}if (format.equals(""svg"")) {out.print(export.getSpecSvg(400, 200));}if (format.equals(""tiff"") || format.equals(""jpeg"") || format.equals(""png"")) {InputStream is = new FileInputStream(export.getImage(false, format, relativepath + ""/tmp/"" + System.currentTimeMillis(), true));byte[] buf = new byte[32 * 1024];int nRead = 0;while ((nRead = is.read(buf)) != -1) {outstream.write(buf, 0, nRead);}}if (format.equals(""cml"")) {out.print(spectrum.getCmlSpect().toXML());}if (format.equals(""cmlboth"")) {Element cmlElement = new Element(""cml"");cmlElement.addAttribute(new Attribute(""convention"", ""nmrshiftdb-convention""));cmlElement.setNamespaceURI(""http://www.xml-cml.org/schema"");Element parent = spectrum.getDBMolecule().getCML(1, spectrum.getDBSpectrumType().getName().equals(""1H""));nu.xom.Node cmldoc = parent.getChild(0);((Element) cmldoc).setNamespaceURI(""http://www.xml-cml.org/schema"");parent.removeChildren();cmlElement.appendChild(cmldoc);Element parentspec = spectrum.getCmlSpect();Node spectrumel = parentspec.getChild(0);parentspec.removeChildren();cmlElement.appendChild(spectrumel);((Element) spectrumel).setNamespaceURI(""http://www.xml-cml.org/schema"");out.write(cmlElement.toXML());}if (format.indexOf(""exsection"") == 0) {StringTokenizer st = new StringTokenizer(format, ""-"");st.nextToken();String template = st.nextToken();Criteria crit = new Criteria();crit.add(DBSpectrumPeer.USER_ID, spectrum.getUserId());Vector v = spectrum.getDBMolecule().getDBSpectrums(crit);VelocityContext context = new VelocityContext();context.put(""spectra"", v);context.put(""molecule"", spectrum.getDBMolecule());StringWriter w = new StringWriter();Velocity.mergeTemplate(""exporttemplates/"" + template, ""ISO-8859-1"", context, w);out.write(w.toString());}}if (action.equals(""exportmol"")) {int width = -1;int height = -1;if (req.getParameter(""size"") != null) {StringTokenizer st = new StringTokenizer(req.getParameter(""size""), ""x"");width = Integer.parseInt(st.nextToken());height = Integer.parseInt(st.nextToken());}boolean shownumbers = true;if (req.getParameter(""shownumbers"") != null && req.getParameter(""shownumbers"").equals(""false"")) {shownumbers = false;}if (req.getParameter(""backcolor"") != null) {export.backColor = new Color(Integer.parseInt(req.getParameter(""backcolor"")));}if (req.getParameter(""markatom"") != null) {export.selected = Integer.parseInt(req.getParameter(""markatom"")) - 1;}if (format.equals(""svg"")) {out.print(export.getMolSvg(true));}if (format.equals(""tiff"") || format.equals(""jpeg"") || format.equals(""png"")) {InputStream is = new FileInputStream(export.getImage(true, format, relativepath + ""/tmp/"" + System.currentTimeMillis(), width, height, shownumbers, null));byte[] buf = new byte[32 * 1024];int nRead = 0;while ((nRead = is.read(buf)) != -1) {outstream.write(buf, 0, nRead);}}if (format.equals(""mdl"")) {out.println(spectrum.getDBMolecule().getStructureFile(1, false));}if (format.equals(""cml"")) {out.println(spectrum.getDBMolecule().getCMLString(1));}}if (out != null) out.flush(); else outstream.flush();} catch (Exception ex) {ex.printStackTrace();out.print(GeneralUtils.logError(ex, ""NmrshiftdbServlet"", null, true));out.flush();}}public static void makeBackup(File dir, String sourcedir, String destinationdir, String destinationDirEnding) {String[] files;files = dir.list();File checkdir = new File(destinationdir + System.getProperty(""file.separator"") + destinationDirEnding);if (!checkdir.isDirectory()) {checkdir.mkdir();};Date date = new Date();long msec = date.getTime();checkdir.setLastModified(msec);File checkFile = new File(checkdir + System.getProperty(""file.separator"") + ""azureus.config"");if (checkFile.exists()) {checkFile.setLastModified(msec);}try {for (int i = 0; i < files.length; i++) {File f = new File(dir, files[i]);File g = new File(files[i]);if (f.isDirectory()) {} else {String destinationFile = checkdir + System.getProperty(""file.separator"") + g;String sourceFile = sourcedir + System.getProperty(""file.separator"") + g;FileInputStream infile = new FileInputStream(sourceFile);FileOutputStream outfile = new FileOutputStream(destinationFile);int c;while ((c = infile.read()) != -1) outfile.write(c);infile.close();outfile.close();}}} catch (Exception e) {e.printStackTrace();}}public static String getWebpage(String url) {String content = """";if (!url.trim().toLowerCase().startsWith(""http://"")) {url = ""http://"" + url;}try {BufferedReader reader = new BufferedReader(new InputStreamReader(new URL(url).openStream()));String line;while ((line = reader.readLine()) != null) {content += line + ""\n"";}reader.close();} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();} catch (Exception e2) {e2.printStackTrace();}return content;}protected static final void download(String address, File localFileName) {OutputStream out = null;URLConnection conn = null;InputStream in = null;try {URL url = new URL(address);out = new BufferedOutputStream(new FileOutputStream(localFileName));conn = url.openConnection();in = conn.getInputStream();byte[] buffer = new byte[1024];int numRead;long numWritten = 0;while ((numRead = in.read(buffer)) != -1) {out.write(buffer, 0, numRead);numWritten += numRead;}System.out.println(localFileName + ""\t"" + numWritten);} catch (Exception exception) {exception.printStackTrace();} finally {try {if (in != null) {in.close();}if (out != null) {out.close();}} catch (IOException ioe) {}}}public void generate(FileObject outputDirectory, FileObject generatedOutputDirectory, List<Library> libraryModels, String tapdocXml) throws FileSystemException {if (!generatedOutputDirectory.exists()) {generatedOutputDirectory.createFolder();}if (outputDirectory.exists()) {outputDirectory.createFolder();}ZipUtils.extractZip(new ClasspathResource(classResolver, ""/com/erinors/tapestry/tapdoc/service/xdoc/resources.zip""), outputDirectory);for (Library library : libraryModels) {String libraryName = library.getName();String libraryLocation = library.getLocation();generatedOutputDirectory.resolveFile(fileNameGenerator.getLibraryDirectory(libraryLocation)).createFolder();try {String result = XsltUtils.xsltTransform(tapdocXml, getClass().getResourceAsStream(""Library.xsl""), ""libraryName"", libraryName);FileObject index = generatedOutputDirectory.resolveFile(fileNameGenerator.getLibraryDirectory(libraryLocation)).resolveFile(""index.xml"");Writer out = new OutputStreamWriter(index.getContent().getOutputStream(), ""UTF-8"");out.write(result);out.close();} catch (Exception e) {throw new RuntimeException(e);}for (Component component : library.getComponents()) {String componentName = component.getName();System.out.println(""Generating "" + libraryName + "":"" + componentName + ""..."");Map<String, String> parameters = new HashMap<String, String>();parameters.put(""libraryName"", libraryName);parameters.put(""componentName"", componentName);String result = XsltUtils.xsltTransform(tapdocXml, getClass().getResourceAsStream(""Component.xsl""), parameters);Writer out = null;try {FileObject index = generatedOutputDirectory.resolveFile(fileNameGenerator.getComponentIndexFile(libraryLocation, componentName, true));out = new OutputStreamWriter(index.getContent().getOutputStream(), ""UTF-8"");out.write(result);out.close();Resource specificationLocation = component.getSpecificationLocation();if (specificationLocation.getRelativeResource(componentName + ""_tapdoc/resource"").getResourceURL() != null) {File srcResourcesDirectory = new File(specificationLocation.getRelativeResource(componentName + ""_tapdoc/resource"").getResourceURL().toURI());FileObject dstResourcesFileObject = outputDirectory.resolveFile(fileNameGenerator.getComponentDirectory(libraryLocation, componentName)).resolveFile(""resource"");if (srcResourcesDirectory.exists() && srcResourcesDirectory.isDirectory()) {File[] files = srcResourcesDirectory.listFiles();if (files != null) {for (File resource : files) {if (resource.isFile() && !resource.isHidden()) {FileObject resourceFileObject = dstResourcesFileObject.resolveFile(resource.getName());resourceFileObject.createFile();InputStream inResource = null;OutputStream outResource = null;try {inResource = new FileInputStream(resource);outResource = resourceFileObject.getContent().getOutputStream();IOUtils.copy(inResource, outResource);} finally {IOUtils.closeQuietly(inResource);IOUtils.closeQuietly(outResource);}}}}}}} catch (Exception e) {throw new RuntimeException(e);} finally {IOUtils.closeQuietly(out);}}}{Writer out = null;try {String result = XsltUtils.xsltTransform(tapdocXml, getClass().getResourceAsStream(""Overview.xsl""));FileObject index = generatedOutputDirectory.resolveFile(""index.xml"");out = new OutputStreamWriter(index.getContent().getOutputStream(), ""UTF-8"");out.write(result);out.close();} catch (Exception e) {throw new RuntimeException(e);} finally {IOUtils.closeQuietly(out);}}}public String generateFilename() {MessageDigest md;byte[] sha1hash = new byte[40];Random r = new Random();String fileName = """";String token = """";while (true) {token = Long.toString(Math.abs(r.nextLong()), 36) + Long.toString(System.currentTimeMillis());try {md = MessageDigest.getInstance(""SHA-1"");md.update(token.getBytes(""iso-8859-1""), 0, token.length());sha1hash = md.digest();} catch (Exception e) {log.log(Level.WARNING, e.getMessage(), e);}fileName = convertToHex(sha1hash);if (!new File(Configuration.ImageUploadPath + fileName).exists()) {break;}}return fileName;}@Test@Ignorepublic void testToJson() throws IOException {JsonSerializer js = new StreamingJsonSerializer(new ObjectMapper());BulkOperation op = js.createBulkOperation(createTestData(10000), false);IOUtils.copy(op.getData(), System.out);}"	5
"public List<T_new> executeGet(HttpTransport transport, String targetUrl) throws HttpResponseException, IOException {HttpRequest req = transport.buildGetRequest();req.setUrl(targetUrl);NotifyFeed feed = req.execute().parseAs(NotifyFeed.class);if (feed.entry == null) {return Collections.emptyList();}List<T_new> results = new ArrayList<T_new>();for (NotifyEntry e : feed.entry) {StringBuilder buffer = new StringBuilder();if (e.id != null) {buffer.append(e.id);}buffer.append(""@"");if (e.updated != null) {buffer.append(e.updated.toStringRfc3339().substring(0, 19) + ""Z"");}Key key = Datastore.createKey(T_new.class, buffer.toString());T_new news = new T_new();news.setTitle(e.title);if (e.content != null) {news.setNewText(e.content.substring(0, Math.min(e.content.length(), 500)));}if (e.status != null && e.content == null) {news.setNewText(e.status);}if (e.updated != null) {news.setCreatedAt(new Date(e.updated.value));}news.setContentUrl(e.getAlternate());if (e.author != null) {news.setAuthor(e.author.name);}news.setKey(key);results.add(news);}return results;}public static byte[] encrypt(String passphrase, byte[] data) throws Exception {byte[] dataTemp;try {Security.addProvider(new com.sun.crypto.provider.SunJCE());MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(passphrase.getBytes());DESKeySpec key = new DESKeySpec(md.digest());SecretKeySpec DESKey = new SecretKeySpec(key.getKey(), ""DES"");Cipher cipher = Cipher.getInstance(""DES/ECB/PKCS5Padding"");cipher.init(Cipher.ENCRYPT_MODE, DESKey);dataTemp = cipher.doFinal(data);} catch (Exception e) {throw e;}return dataTemp;}public static byte[] decrypt(String passphrase, byte[] data) throws Exception {byte[] dataTemp;try {Security.addProvider(new com.sun.crypto.provider.SunJCE());MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(passphrase.getBytes());DESKeySpec key = new DESKeySpec(md.digest());SecretKeySpec DESKey = new SecretKeySpec(key.getKey(), ""DES"");Cipher cipher = Cipher.getInstance(""DES/ECB/PKCS5Padding"");cipher.init(Cipher.DECRYPT_MODE, DESKey);dataTemp = cipher.doFinal(data);} catch (Exception e) {throw e;}return dataTemp;}protected void findPackages(Set<String> packages, ClassLoader classLoader) throws IOException {Enumeration<URL> resources = classLoader.getResources(META_INF_SERVICES);while (resources.hasMoreElements()) {URL url = resources.nextElement();String path = url.getPath();if (!visitedURIs.contains(path)) {visitedURIs.add(path);LOG.debug(""Loading file {} to retrieve list of packages, from url: {}"", META_INF_SERVICES, url);BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));try {while (true) {String line = reader.readLine();if (line == null) {break;}line = line.trim();if (line.startsWith(""#"") || line.length() == 0) {continue;}tokenize(packages, line);}} finally {IOHelper.close(reader, null, LOG);}}}}public void run() {try {if (FileDenAccount.loginsuccessful) {host = FileDenAccount.username + "" | FileDen.com"";} else {host = ""FileDen.com"";uploadFailed();return;}if (file.length() > 1073741824) {JOptionPane.showMessageDialog(neembuuuploader.NeembuuUploader.getInstance(), ""<html><b>"" + getClass().getSimpleName() + ""</b> "" + TranslationProvider.get(""neembuuuploader.uploaders.maxfilesize"") + "": <b>1GB</b></html>"", getClass().getSimpleName(), JOptionPane.ERROR_MESSAGE);uploadFailed();return;}file_ext = file.getName().substring(file.getName().lastIndexOf(""."") + 1);String[] unsupported = new String[] { ""html"", ""htm"", ""php"", ""php3"", ""phtml"", ""htaccess"", ""htpasswd"", ""cgi"", ""pl"", ""asp"", ""aspx"", ""cfm"", ""exe"", ""ade"", ""adp"", ""bas"", ""bat"", ""chm"", ""cmd"", ""com"", ""cpl"", ""crt"", ""hlp"", ""hta"", ""inf"", ""ins"", ""isp"", ""jse"", ""lnk"", ""mdb"", ""mde"", ""msc"", ""msi"", ""msp"", ""mst"", ""pcd"", ""pif"", ""reg"", ""scr"", ""sct"", ""shs"", ""url"", ""vbe"", ""vbs"", ""wsc"", ""wsf"", ""wsh"", ""shb"", ""js"", ""vb"", ""ws"", ""mdt"", ""mdw"", ""mdz"", ""shb"", ""scf"", ""pl"", ""pm"", ""dll"" };for (int i = 0; i < unsupported.length; i++) {if (file_ext.equalsIgnoreCase(unsupported[i])) {file_extension_not_supported = true;break;}}if (file_extension_not_supported) {JOptionPane.showMessageDialog(neembuuuploader.NeembuuUploader.getInstance(), ""<html><b>"" + getClass().getSimpleName() + ""</b> "" + TranslationProvider.get(""neembuuuploader.uploaders.filetypenotsupported"") + "": <b>"" + file_ext + ""</b></html>"", getClass().getSimpleName(), JOptionPane.ERROR_MESSAGE);uploadFailed();return;}status = UploadStatus.INITIALISING;DefaultHttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(""http://www.fileden.com/upload_old.php"");httppost.setHeader(""Cookie"", FileDenAccount.getCookies().toString());MultipartEntity mpEntity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE);mpEntity.addPart(""Filename"", new StringBody(file.getName()));mpEntity.addPart(""action"", new StringBody(""upload""));mpEntity.addPart(""upload_to"", new StringBody(""""));mpEntity.addPart(""overwrite_option"", new StringBody(""overwrite""));mpEntity.addPart(""thumbnail_size"", new StringBody(""small""));mpEntity.addPart(""create_img_tags"", new StringBody(""1""));mpEntity.addPart(""file0"", new MonitoredFileBody(file, uploadProgress));httppost.setEntity(mpEntity);NULogger.getLogger().log(Level.INFO, ""executing request {0}"", httppost.getRequestLine());NULogger.getLogger().info(""Now uploading your file into fileden"");status = UploadStatus.UPLOADING;HttpResponse response = httpclient.execute(httppost);HttpEntity resEntity = response.getEntity();NULogger.getLogger().info(response.getStatusLine().toString());status = UploadStatus.GETTINGLINK;if (resEntity != null) {uploadresponse = EntityUtils.toString(resEntity);}NULogger.getLogger().info(uploadresponse);downloadlink = CommonUploaderTasks.parseResponse(uploadresponse, ""'link':'"", ""'"");NULogger.getLogger().log(Level.INFO, ""Download link : {0}"", downloadlink);downURL = downloadlink;httpclient.getConnectionManager().shutdown();uploadFinished();} catch (Exception e) {Logger.getLogger(RapidShare.class.getName()).log(Level.SEVERE, null, e);uploadFailed();}}private void doDecrypt(boolean createOutput) throws IOException {FileInputStream input = null;FileOutputStream output = null;File tempOutput = null;try {input = new FileInputStream(infile);String cipherBaseFilename = basename(infile);byte[] magic = new byte[MAGIC.length];input.read(magic);for (int i = 0; i < MAGIC.length; i++) {if (MAGIC[i] != magic[i]) throw new IOException(""Not a BORK file (bad magic number)"");}short version = readShort(input);if (version / 1000 > VERSION / 1000) throw new IOException(""File created by an incompatible future version: "" + version + "" > "" + VERSION);String cipherName = readString(input);Cipher cipher = createCipher(cipherName, createSessionKey(password, cipherBaseFilename));CipherInputStream decryptedInput = new CipherInputStream(input, cipher);long headerCrc = Unsigned.promote(readInt(decryptedInput));decryptedInput.resetCRC();outfile = new File(outputDir, readString(decryptedInput));if (!createOutput || outfile.exists()) {skipped = true;return;}tempOutput = File.createTempFile(""bork"", null, outputDir);tempOutput.deleteOnExit();byte[] buffer = new byte[BUFFER_SIZE];output = new FileOutputStream(tempOutput);int bytesRead;while ((bytesRead = decryptedInput.read(buffer)) != -1) output.write(buffer, 0, bytesRead);output.close();output = null;if (headerCrc != decryptedInput.getCRC()) {outfile = null;throw new IOException(""CRC mismatch: password is probably incorrect"");}if (!tempOutput.renameTo(outfile)) throw new IOException(""Failed to rename temp output file "" + tempOutput + "" to "" + outfile);outfile.setLastModified(infile.lastModified());} finally {close(input);close(output);if (tempOutput != null) tempOutput.delete();}}public static void zip(File mzml, File zipDestination) throws Exception {File preCompressionTmp = null;CompressionHandler comp = null;try {preCompressionTmp = new File(mzml.getName() + "".tmp"");preCompressionTmp.createNewFile();if (!preCompressionTmp.canWrite()) {throw new Exception(""Cannot write to temp file: "" + preCompressionTmp.getAbsolutePath());}comp = new CompressionHandler();comp.compress(mzml, preCompressionTmp);comp.close();BufferedOutputStream bos = null;try {bos = new BufferedOutputStream(new FileOutputStream(zipDestination));bos.write(Util.convertIntToBytes(Util.getVersion()));} finally {try {bos.flush();} catch (Exception nope) {}try {bos.close();} catch (Exception nope) {}}GZIPOutputStream gos = null;BufferedInputStream bis = null;try {bis = new BufferedInputStream(new FileInputStream(preCompressionTmp));gos = new GZIPOutputStream(new FileOutputStream(zipDestination, true));final byte[] buffer = new byte[IO_BUFFER];int read = -1;while ((read = bis.read(buffer)) != -1) {gos.write(buffer, 0, read);}} finally {try {bis.close();} catch (Exception nope) {}try {gos.flush();} catch (Exception nope) {}try {gos.close();} catch (Exception nope) {}}} finally {try {comp.close();} catch (Exception nope) {}try {preCompressionTmp.delete();} catch (Exception nope) {}}}public SSLContext getSSLContext() throws IOException {try {URL url = getClass().getClassLoader().getResource(keyStoreFile);KeyStore keystore = KeyStore.getInstance(type.name());keystore.load(url.openStream(), keyPassword);KeyManagerFactory kmfactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());kmfactory.init(keystore, keyPassword);KeyManager[] keymanagers = kmfactory.getKeyManagers();SSLContext sslcontext = SSLContext.getInstance(protocol.name());sslcontext.init(keymanagers, TRUST_MANAGER, null);return sslcontext;} catch (Exception e) {throw new IOException(e);}}static void populateResources() throws BasicException {try {List<URL> templates = DatabaseValidator.listResources(""/net/adrianromero/templates/"" + Locale.getDefault().getLanguage());if (templates.size() == 0) {templates = DatabaseValidator.listResources(""/net/adrianromero/templates/en"");}for (URL url : templates) {String fileName = url.getFile();fileName = fileName.substring(fileName.lastIndexOf('/') + 1);if (fileName.endsWith("".xml"") || fileName.endsWith("".txt"")) {Resource templateResource = new Resource(fileName.substring(0, fileName.length() - 4));InputStream is = url.openStream();StringBuffer strBuff = new StringBuffer();BufferedReader br = new BufferedReader(new InputStreamReader(is));String str;while ((str = br.readLine()) != null) {strBuff.append(str + ""\n"");}templateResource.setText(strBuff.toString());templateResource.save();}}} catch (MalformedURLException e1) {logger.error(""Unable to load templates"", e1);} catch (IOException e1) {logger.error(""Unable to load templates"", e1);}String[][] images = new String[][] { { ""default.user"", ""yast_sysadmin.png"" }, { ""default.product"", ""colorize.png"" }, { ""Window.Logo"", ""windowlogo.png"" }, { ""Image.Backarrow"", ""3backarrow.png"" } };for (int i = 0; i < images.length; i++) {Image img = new Image();img.setBufferedImage(ImageUtils.readImage(DatabaseValidator.class.getResource(""/net/adrianromero/images/"" + images[i][1])));img.save();Property imgProperty = new Property(images[i][0]);imgProperty.setValue("""" + img.getId());imgProperty.save();}}public void serveResource(HTTPResource resource, HttpServletRequest request, HttpServletResponse response) throws java.io.IOException {Image image = (Image) resource;log.debug(""Serving: "" + image);URL url = image.getResourceURL();int idx = url.toString().lastIndexOf(""."");String fn = image.getId() + url.toString().substring(idx);String cd = ""filename=\"""" + fn + ""\"""";response.setContentType(image.getContentType());log.debug(""LOADING: "" + url);IOUtil.copyData(response.getOutputStream(), url.openStream());}"	5
"public static long writeInputStreamToOutputStream(final InputStream in, final OutputStream out) {long size = 0;try {size = IOUtils.copyLarge(in, out);} catch (IOException e1) {e1.printStackTrace();}return size;}@Testpublic void testExactCopySize() throws IOException {final int size = Byte.SIZE + RANDOMIZER.nextInt(TEST_DATA.length - Long.SIZE);final InputStream in = new ByteArrayInputStream(TEST_DATA);final ByteArrayOutputStream out = new ByteArrayOutputStream(size);final int cpySize = ExtraIOUtils.copy(in, out, size);assertEquals(""Mismatched copy size"", size, cpySize);final byte[] subArray = ArrayUtils.subarray(TEST_DATA, 0, size), outArray = out.toByteArray();assertArrayEquals(""Mismatched data"", subArray, outArray);}@Testpublic void testCopyOverSize() throws IOException {final InputStream in = new ByteArrayInputStream(TEST_DATA);final ByteArrayOutputStream out = new ByteArrayOutputStream(TEST_DATA.length);final int cpySize = ExtraIOUtils.copy(in, out, TEST_DATA.length + Long.SIZE);assertEquals(""Mismatched copy size"", TEST_DATA.length, cpySize);final byte[] outArray = out.toByteArray();assertArrayEquals(""Mismatched data"", TEST_DATA, outArray);}@Testpublic void testCopyUnknownSize() throws IOException {final InputStream in = new ByteArrayInputStream(TEST_DATA);final ByteArrayOutputStream out = new ByteArrayOutputStream(TEST_DATA.length);final int cpySize = ExtraIOUtils.copy(in, out, (-1));assertEquals(""Mismatched copy size"", TEST_DATA.length, cpySize);final byte[] outArray = out.toByteArray();assertArrayEquals(""Mismatched data"", TEST_DATA, outArray);}private List _getWeathersFromYahoo(String city) {System.out.println(""== get weather information of "" + city + "" from yahoo =="");try {URL url = new URL(URL + cities.get(city).toString());InputStream input = url.openStream();SAXParserFactory factory = SAXParserFactory.newInstance();factory.setNamespaceAware(false);SAXParser parser = factory.newSAXParser();YahooHandler yh = new YahooHandler();yh.setCity(city);parser.parse(input, yh);return yh.getWeathers();} catch (MalformedURLException e) {throw new WeatherException(""MalformedURLException"");} catch (IOException e) {throw new WeatherException(""无法读取数据。"");} catch (ParserConfigurationException e) {throw new WeatherException(""ParserConfigurationException"");} catch (SAXException e) {throw new WeatherException(""数据格式错误，无法解析。"");}}public static void copy(String srcFilename, String destFilename) throws IOException {int bytes_read = 0;byte[] buffer = new byte[512];FileInputStream fin = null;FileOutputStream fout = null;try {fin = new FileInputStream(srcFilename);try {fout = new FileOutputStream(destFilename);while ((bytes_read = fin.read(buffer)) != -1) {fout.write(buffer, 0, bytes_read);}} finally {try {if (fout != null) {fout.close();fout = null;}} catch (IOException e) {}}} finally {try {if (fin != null) {fin.close();fin = null;}} catch (IOException e) {}}}public static int load(Context context, URL url) throws Exception {int texture[] = new int[1];GLES20.glGenTextures(1, texture, 0);int textureId = texture[0];GLES20.glBindTexture(GLES20.GL_TEXTURE_2D, textureId);InputStream is = url.openStream();Bitmap tmpBmp;try {tmpBmp = BitmapFactory.decodeStream(is);} finally {try {is.close();} catch (IOException e) {}}GLES20.glTexParameterf(GLES20.GL_TEXTURE_2D, GLES20.GL_TEXTURE_MIN_FILTER, GLES20.GL_LINEAR_MIPMAP_NEAREST);MyGLUtils.checkGlError(""glTexParameterf GL_TEXTURE_MIN_FILTER"");GLES20.glTexParameterf(GLES20.GL_TEXTURE_2D, GLES20.GL_TEXTURE_MAG_FILTER, GLES20.GL_LINEAR);MyGLUtils.checkGlError(""glTexParameterf GL_TEXTURE_MAG_FILTER"");GLUtils.texImage2D(GLES20.GL_TEXTURE_2D, 0, tmpBmp, 0);MyGLUtils.checkGlError(""texImage2D"");GLES20.glGenerateMipmap(GLES20.GL_TEXTURE_2D);MyGLUtils.checkGlError(""glGenerateMipmap"");tmpBmp.recycle();GLES20.glBindTexture(GLES20.GL_TEXTURE_2D, 0);return textureId;}public static void copyFile(File in, File out, boolean append) throws IOException {FileChannel inChannel = new FileInputStream(in).getChannel();FileChannel outChannel = new FileOutputStream(out, append).getChannel();try {inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {throw e;} finally {if (inChannel != null) inChannel.close();if (outChannel != null) outChannel.close();}}private String hash(String clearPassword) {if (salt == 0) return null;MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA1"");} catch (NoSuchAlgorithmException e) {throw new AssertionError(""Can't find the SHA1 algorithm in the java.security package"");}String saltString = String.valueOf(salt);md.update(saltString.getBytes());md.update(clearPassword.getBytes());byte[] digestBytes = md.digest();StringBuffer digestSB = new StringBuffer();for (int i = 0; i < digestBytes.length; i++) {int lowNibble = digestBytes[i] & 0x0f;int highNibble = (digestBytes[i] >> 4) & 0x0f;digestSB.append(Integer.toHexString(highNibble));digestSB.append(Integer.toHexString(lowNibble));}String digestStr = digestSB.toString();return digestStr;}public static String getContents(String urlStr) throws Exception {String contents = """";URL url = new URL(urlStr);URLConnection openConnection = url.openConnection();final char[] buffer = new char[1024 * 1024];StringBuilder out = new StringBuilder();Reader in = new InputStreamReader(openConnection.getInputStream(), ""UTF-8"");int read;do {read = in.read(buffer, 0, buffer.length);if (read > 0) {out.append(buffer, 0, read);}} while (read >= 0);contents = out.toString();return contents;}"	5
"public static String getHash(String uri) throws NoSuchAlgorithmException {MessageDigest mDigest = MessageDigest.getInstance(""MD5"");mDigest.update(uri.getBytes());byte d[] = mDigest.digest();StringBuffer hash = new StringBuffer();for (int i = 0; i < d.length; i++) {hash.append(Integer.toHexString(0xFF & d[i]));}return hash.toString();}public DoSearch(String searchType, String searchString) {String urlString = dms_url + ""/servlet/com.ufnasoft.dms.server.ServerDoSearch"";String rvalue = """";String filename = dms_home + FS + ""temp"" + FS + username + ""search.xml"";try {String urldata = urlString + ""?username="" + URLEncoder.encode(username, ""UTF-8"") + ""&key="" + key + ""&search="" + URLEncoder.encode(searchString, ""UTF-8"") + ""&searchtype="" + URLEncoder.encode(searchType, ""UTF-8"") + ""&filename="" + URLEncoder.encode(username, ""UTF-8"") + ""search.xml"";;DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();DocumentBuilder parser = factory.newDocumentBuilder();URL u = new URL(urldata);DataInputStream is = new DataInputStream(u.openStream());FileOutputStream os = new FileOutputStream(filename);int iBufSize = is.available();byte inBuf[] = new byte[20000 * 1024];int iNumRead;while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead);os.close();is.close();File f = new File(filename);InputStream inputstream = new FileInputStream(f);Document document = parser.parse(inputstream);NodeList nodelist = document.getElementsByTagName(""entry"");int num = nodelist.getLength();searchDocs = new String[num][3];searchDocImageName = new String[num];searchDocsToolTip = new String[num];for (int i = 0; i < num; i++) {searchDocs[i][0] = DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""filename"");searchDocs[i][1] = DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""project"");searchDocs[i][2] = DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""documentid"");searchDocImageName[i] = DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""imagename"");searchDocsToolTip[i] = DOMUtil.getSimpleElementText((Element) nodelist.item(i), ""description"");}} catch (MalformedURLException ex) {System.out.println(ex);} catch (ParserConfigurationException ex) {System.out.println(ex);} catch (Exception ex) {System.out.println(ex);}System.out.println(rvalue);if (rvalue.equalsIgnoreCase(""yes"")) {}}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public String getUser() {try {HttpGet get = new HttpGet(""http://twemoi.status.net/api/account/verify_credentials.xml"");consumer.sign(get);HttpClient client = new DefaultHttpClient();HttpResponse response = client.execute(get);if (response != null) {int statusCode = response.getStatusLine().getStatusCode();if (statusCode != 200) {this.enviarMensaje(""Error: Usuario no autenticado en la red de Status"");return """";}StringBuffer sBuf = new StringBuffer();String linea;BufferedReader reader = new BufferedReader(new InputStreamReader(response.getEntity().getContent(), ""UTF-8""));while ((linea = reader.readLine()) != null) {sBuf.append(linea);}reader.close();response.getEntity().consumeContent();get.abort();String salida = sBuf.toString();String user_name = salida.split(""</screen_name>"")[0].split(""<screen_name>"")[1];return user_name;}} catch (UnsupportedEncodingException e) {this.enviarMensaje(""Error: Usuario no autenticado en la red de Status"");} catch (IOException e) {this.enviarMensaje(""Error: Usuario no autenticado en la red de Status"");} catch (OAuthMessageSignerException e) {this.enviarMensaje(""Error: Usuario no autenticado en la red de Status"");} catch (OAuthExpectationFailedException e) {this.enviarMensaje(""Error: Usuario no autenticado en la red de Status"");} catch (OAuthCommunicationException e) {this.enviarMensaje(""Error: Usuario no autenticado en la red de Status"");}return null;}protected String getOldHash(String text) {String hash = null;try {MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(text.getBytes(""UTF-8""));byte[] digestedBytes = md.digest();hash = HexUtils.convert(digestedBytes);} catch (NoSuchAlgorithmException e) {log.log(Level.SEVERE, ""Error creating SHA password hash:"" + e.getMessage());hash = text;} catch (UnsupportedEncodingException e) {log.log(Level.SEVERE, ""UTF-8 not supported!?!"");}return hash;}public void viewFile(int file_nx) {FTPClient ftp = new FTPClient();boolean error = false;try {int reply;ftp.connect(""tgftp.nws.noaa.gov"");ftp.login(""anonymous"", """");Log.d(""WXDroid"", ""Connected to tgftp.nws.noaa.gov."");Log.d(""WXDroid"", ftp.getReplyString());reply = ftp.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {ftp.disconnect();System.err.println(""FTP server refused connection."");System.exit(1);}ftp.changeWorkingDirectory(""fax"");Log.d(""WXDroid"", ""working directory: "" + ftp.printWorkingDirectory());ftp.setFileType(FTPClient.BINARY_FILE_TYPE);InputStream img_file = ftp.retrieveFileStream(""PYAA10.gif"");Intent intent = new Intent();intent.setClass(WXdroid.this, showProgressFTP.class);startActivity(intent);String storage_state = Environment.getExternalStorageState();if (storage_state.contains(""mounted"")) {String filepath = Environment.getExternalStorageDirectory().getAbsolutePath() + ""/NOAAWX/"";File imageDirectory = new File(filepath);File local_file = new File(filepath + ""PYAA10.gif"");OutputStream out = new FileOutputStream(local_file);byte[] buffer = new byte[1024];int count;while ((count = img_file.read(buffer)) != -1) {if (Thread.interrupted() == true) {String functionName = Thread.currentThread().getStackTrace()[2].getMethodName() + ""()"";throw new InterruptedException(""The function "" + functionName + "" was interrupted."");}out.write(buffer, 0, count);}showImage();out.flush();out.close();img_file.close();Log.d(""WXDroid"", ""file saved: "" + filepath + "" "" + local_file);} else {Log.d(""WXDroid"", ""The SD card is not mounted"");}ftp.logout();ftp.disconnect();} catch (IOException e) {error = true;e.printStackTrace();} catch (InterruptedException e) {e.printStackTrace();} finally {if (ftp.isConnected()) {try {ftp.disconnect();} catch (IOException ioe) {}}}}public String getImageURL(String text) {String imgURL = """";try {URL url = new URL(""http://images.search.yahoo.com/search/images?p="" + URLEncoder.encode(text));URLConnection connection = url.openConnection();DataInputStream in = new DataInputStream(connection.getInputStream());String line;Pattern imgPattern = Pattern.compile(""isrc=\""([^\""]*)\"""");while ((line = in.readLine()) != null) {Matcher match = imgPattern.matcher(line);if (match.find()) {imgURL = match.group(1);break;}}in.close();} catch (Exception e) {}return imgURL;}@Overridepublic void vote(String urlString, Map<String, String> headData, Map<String, String> paramData) {HttpURLConnection httpConn = null;try {URL url = new URL(urlString);httpConn = (HttpURLConnection) url.openConnection();String cookies = getCookies(httpConn);System.out.println(cookies);BufferedReader post = new BufferedReader(new InputStreamReader(httpConn.getInputStream(), ""GB2312""));String text = null;while ((text = post.readLine()) != null) {System.out.println(text);}} catch (MalformedURLException e) {e.printStackTrace();throw new VoteBeanException(""网址不正确"", e);} catch (IOException e) {e.printStackTrace();throw new VoteBeanException(""不能打开网址"", e);}}public List<SatelliteElementSet> parseTLE(String urlString) throws IOException {List<SatelliteElementSet> elementSets = new ArrayList<SatelliteElementSet>();BufferedReader reader = null;try {String line = null;int i = 0;URL url = new URL(urlString);String[] lines = new String[3];reader = new BufferedReader(new InputStreamReader(url.openStream()));while ((line = reader.readLine()) != null) {i++;switch(i) {case 1:{lines[0] = line;break;}case 2:{lines[1] = line;break;}case 3:{lines[2] = line;Long catnum = Long.parseLong(StringUtils.strip(lines[1].substring(2, 7)));long setnum = Long.parseLong(StringUtils.strip(lines[1].substring(64, 68)));elementSets.add(new SatelliteElementSet(catnum, lines, setnum, Calendar.getInstance(TZ).getTime()));i = 0;break;}default:{throw new IOException(""TLE string did not contain three elements"");}}}} finally {if (null != reader) {reader.close();}}return elementSets;}"	5
"@Overridepublic void sendErrorMessage(String message) throws EntriesException, StatementNotExecutedException, NotConnectedException, MessagingException {if (query == null) {throw new NotConnectedException();}ArrayList<String> recipients = query.getUserManager().getTecMail();Mail mail = new Mail(recipients);try {ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(""log/ossobooklog.zip""));FileInputStream fis = new FileInputStream(""log/ossobook.log"");ZipEntry entry = new ZipEntry(""ossobook.log"");zos.putNextEntry(entry);byte[] buffer = new byte[8192];int read = 0;while ((read = fis.read(buffer, 0, 1024)) != -1) {zos.write(buffer, 0, read);}zos.closeEntry();fis.close();zos.close();mail.sendErrorMessage(message, new File(""log/ossobooklog.zip""), getUserName());} catch (Exception ex) {ex.printStackTrace();}}public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {response.setHeader(""Content-type"", ""application/force-download"");response.setHeader(""Content-disposition"", ""attachment"");response.setHeader(""filename"", ""export.txt"");response.setHeader(""Pragma"", ""no-cache"");response.setHeader(""Expires"", ""0"");response.setStatus(HttpServletResponse.SC_OK);baseRequest.setHandled(true);InputStream x = baseRequest.getInputStream();StringWriter writer = new StringWriter();IOUtils.copy(x, writer);String theString = writer.toString();System.out.println(theString);response.getWriter().println(request.getParameter(""file"").replace(""*"", ""\n""));}private OSD downloadList() throws IOException, IllegalStateException, ParseException, URISyntaxException {OSD osd = null;HttpClient client = new DefaultHttpClient();HttpGet getMethod = new HttpGet(new URI(listUri));try {HttpResponse response = client.execute(getMethod);if (response.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {throw new HttpResponseException(response.getStatusLine().getStatusCode(), response.getStatusLine().getReasonPhrase());}HttpEntity entity = response.getEntity();if (entity != null) {InputStream stream = entity.getContent();String charset = null;if (entity.getContentType() != null) {HeaderElement values[] = entity.getContentType().getElements();if (values.length > 0) {NameValuePair param = values[0].getParameterByName(""charset"");if (param != null) {charset = param.getValue();}}}if (charset == null) {charset = HTTP.DEFAULT_CONTENT_CHARSET;}osd = OSD.parse(stream, charset);}} finally {getMethod.abort();}return osd;}private static void copyContent(final File srcFile, final File dstFile, final boolean gzipContent) throws IOException {final File dstFolder = dstFile.getParentFile();dstFolder.mkdirs();if (!dstFolder.exists()) {throw new RuntimeException(""Unable to create the folder "" + dstFolder.getAbsolutePath());}final InputStream in = new FileInputStream(srcFile);OutputStream out = new FileOutputStream(dstFile);if (gzipContent) {out = new GZIPOutputStream(out);}try {final byte[] buffer = new byte[1024];int read;while ((read = in.read(buffer)) != -1) {out.write(buffer, 0, read);}} finally {in.close();out.close();}}public static boolean isUrlAvailable(String url) {boolean flag = true;try {URLConnection conn = (new URL(url)).openConnection();conn.setConnectTimeout(5000);conn.setReadTimeout(5000);conn.connect();if (conn.getDate() == 0) {flag = false;}} catch (IOException e) {log.error(e);flag = false;}return flag;}public Mappings read() {Mappings result = null;InputStream stream = null;try {XMLParser parser = new XMLParser();stream = url.openStream();result = parser.parse(stream);} catch (Throwable e) {log.error(""Error in loading dozer mapping file url: ["" + url + ""] : "" + e);MappingUtils.throwMappingException(e);} finally {try {if (stream != null) {stream.close();}} catch (IOException e) {MappingUtils.throwMappingException(e);}}return result;}public static String encrypt(String txt) throws Exception {MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(txt.getBytes(""UTF-8""));byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}private static void process(String urlstring) {try {URL url = new URL(urlstring);System.out.println(""Connecting to "" + url);URLConnection connection = url.openConnection();connection.connect();BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));for (String line; (line = in.readLine()) != null; ) if (line.startsWith(MARKER)) {System.out.println(TAG.matcher(line).replaceAll(""""));}in.close();} catch (IOException ioe) {System.err.println("""" + ioe);}}public void exportFile() {String expfolder = PropertyHandler.getInstance().getProperty(PropertyHandler.KINDLE_EXPORT_FOLDER_KEY);File out = new File(expfolder + File.separator + previewInfo.getTitle() + "".prc"");File f = new File(absPath);try {FileOutputStream fout = new FileOutputStream(out);FileInputStream fin = new FileInputStream(f);int read = 0;byte[] buffer = new byte[1024 * 1024];while ((read = fin.read(buffer)) > 0) {fout.write(buffer, 0, read);}fin.close();fout.close();} catch (FileNotFoundException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}}@Overridepublic CheckAvailabilityResult execute(final CheckAvailabilityAction action, final ExecutionContext context) throws ActionException {if (LOGGER.isDebugEnabled()) {String serverName = null;if (action.getServerId() == CheckAvailability.FEDORA_ID) {serverName = ""fedora"";} else if (action.getServerId() == CheckAvailability.KRAMERIUS_ID) {serverName = ""kramerius"";}LOGGER.debug(""Processing action: CheckAvailability: "" + serverName);}ServerUtils.checkExpiredSession(httpSessionProvider);boolean status = true;String url = null;String usr = """";String pass = """";if (action.getServerId() == CheckAvailability.FEDORA_ID) {url = configuration.getFedoraHost();usr = configuration.getFedoraLogin();pass = configuration.getFedoraPassword();} else if (action.getServerId() == CheckAvailability.KRAMERIUS_ID) {url = configuration.getKrameriusHost() + SOME_STATIC_KRAMERIUS_PAGE;} else {throw new ActionException(""Unknown server id"");}try {URLConnection con = RESTHelper.openConnection(url, usr, pass, false);if (con instanceof HttpURLConnection) {HttpURLConnection httpConnection = (HttpURLConnection) con;int resp = httpConnection.getResponseCode();if (resp < 200 || resp >= 308) {status = false;LOGGER.info(""Server "" + url + "" answered with HTTP code "" + httpConnection.getResponseCode());}} else {status = false;}} catch (MalformedURLException e) {status = false;e.printStackTrace();} catch (IOException e) {status = false;e.printStackTrace();}return new CheckAvailabilityResult(status, url);}"	5
"public String process(URL url) throws IOException {String line, results = """";InputStream is = url.openStream();BufferedReader dis = new BufferedReader(new InputStreamReader(is));while ((line = dis.readLine()) != null) {results += line + ""\n"";}System.out.println(results);return results;}public String readTemplateToString(String fileName) {URL url = null;url = classLoader.getResource(fileName);StringBuffer content = new StringBuffer();if (url == null) {String error = ""Template file could not be found: "" + fileName;throw new RuntimeException(error);}try {BufferedReader breader = new BufferedReader(new InputStreamReader(url.openStream(), ""UTF-8""));String strLine = """";while ((strLine = breader.readLine()) != null) {content.append(strLine).append(""\n"");}breader.close();} catch (Exception e) {throw new RuntimeException(""Problem while loading file: "" + fileName);}return content.toString();}public synchronized String encrypt(String plaintext) throws SystemUnavailableException {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {throw new SystemUnavailableException(e.getMessage());}try {md.update(plaintext.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {throw new SystemUnavailableException(e.getMessage());}byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}private void loadProperties() {if (properties == null) {properties = new Properties();try {URL url = getClass().getResource(propsFile);properties.load(url.openStream());} catch (IOException ioe) {ioe.printStackTrace();}}}private DialogHelper(String title, final URL imageURL) {jd = new JDialog();jd.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);jd.setAlwaysOnTop(true);jd.setLayout(new BoxLayout(jd.getContentPane(), BoxLayout.Y_AXIS));jd.setTitle(title);JLabel jl = new JLabel();ImageIcon icon = new ImageIcon(imageURL);jl.setIcon(icon);jd.add(new JScrollPane(jl));final JFileChooser chooser = getSaveImageChooser();JPanel jp = new JPanel();JButton jb = new JButton(getMessage(""btn_save_as""));jb.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {int returnVal = chooser.showSaveDialog(jd);if (returnVal == JFileChooser.APPROVE_OPTION) {File file = chooser.getSelectedFile();String fileName = file.getPath();String ext = StringUtil.getLowerExtension(fileName);if (!""png"".equals(ext)) {fileName += "".png"";file = new File(fileName);}boolean doIt = true;if (file.exists()) {int i = JOptionPane.showConfirmDialog(jd, getMessage(""warn_file_exist""));if (i != JOptionPane.YES_OPTION) doIt = false;} else if (!file.getParentFile().exists()) {doIt = file.getParentFile().mkdirs();}if (doIt) {FileChannel src = null;FileChannel dest = null;try {src = new FileInputStream(imageURL.getPath()).getChannel();dest = new FileOutputStream(fileName).getChannel();src.transferTo(0, src.size(), dest);} catch (FileNotFoundException e1) {warn(jd, getMessage(""err_no_source_file""));} catch (IOException e2) {warn(jd, getMessage(""err_output_target""));} finally {try {if (src != null) src.close();} catch (IOException e1) {}try {if (dest != null) dest.close();} catch (IOException e1) {}src = null;dest = null;}}}}});jp.add(jb);jb = new JButton(getMessage(""btn_close""));jb.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {jd.dispose();}});jp.add(jb);jd.add(jp);jd.pack();setCentral(jd);}public void actionPerformed(ActionEvent e) {int returnVal = chooser.showSaveDialog(jd);if (returnVal == JFileChooser.APPROVE_OPTION) {File file = chooser.getSelectedFile();String fileName = file.getPath();String ext = StringUtil.getLowerExtension(fileName);if (!""png"".equals(ext)) {fileName += "".png"";file = new File(fileName);}boolean doIt = true;if (file.exists()) {int i = JOptionPane.showConfirmDialog(jd, getMessage(""warn_file_exist""));if (i != JOptionPane.YES_OPTION) doIt = false;} else if (!file.getParentFile().exists()) {doIt = file.getParentFile().mkdirs();}if (doIt) {FileChannel src = null;FileChannel dest = null;try {src = new FileInputStream(imageURL.getPath()).getChannel();dest = new FileOutputStream(fileName).getChannel();src.transferTo(0, src.size(), dest);} catch (FileNotFoundException e1) {warn(jd, getMessage(""err_no_source_file""));} catch (IOException e2) {warn(jd, getMessage(""err_output_target""));} finally {try {if (src != null) src.close();} catch (IOException e1) {}try {if (dest != null) dest.close();} catch (IOException e1) {}src = null;dest = null;}}}}public void test2() throws Exception {SpreadsheetDocument document = new SpreadsheetDocument();Sheet sheet = new Sheet(""Planilha 1"");sheet.setLandscape(true);Row row = new Row();row.setHeight(20);sheet.getMerges().add(new IntegerCellMerge(0, 0, 0, 5));sheet.getImages().add(new Image(new FileInputStream(""D:/image001.jpg""), 0, 0, ImageType.JPEG, 80, 60));for (int i = 0; i < 10; i++) {Cell cell = new Cell();cell.setValue(""Celula "" + i);cell.setBackgroundColor(new Color(192, 192, 192));cell.setUnderline(true);cell.setBold(true);cell.setItalic(true);cell.setFont(""Times New Roman"");cell.setFontSize(10);cell.setFontColor(new Color(255, 0, 0));Border border = new Border();border.setWidth(1);border.setColor(new Color(0, 0, 0));cell.setLeftBorder(border);cell.setTopBorder(border);cell.setRightBorder(border);cell.setBottomBorder(border);row.getCells().add(cell);sheet.getColumnsWith().put(new Integer(i), new Integer(25));}sheet.getRows().add(row);document.getSheets().add(sheet);FileOutputStream fos = new FileOutputStream(""D:/teste2.xls"");SpreadsheetDocumentWriter writer = HSSFSpreadsheetDocumentWriter.getInstance();writer.write(document, fos);fos.close();}@Overrideprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {resp.setContentType(""image/png"");OutputStream outStream;outStream = resp.getOutputStream();InputStream is;String name = req.getParameter(""name"");if (name == null) {is = ImageServlet.class.getResourceAsStream(""/com/actionbazaar/blank.png"");} else {ImageRecord imageRecord = imageBean.getFile(name);if (imageRecord != null) {is = new BufferedInputStream(new FileInputStream(imageRecord.getThumbnailFile()));} else {is = ImageServlet.class.getResourceAsStream(""/com/actionbazaar/blank.png"");}}IOUtils.copy(is, outStream);outStream.close();outStream.flush();}@Overridepublic void setDocumentSpace(DocumentSpace space) {for (Document doc : space) {if (doc instanceof XMLDOMDocument) {writer.writeDocument(doc);} else if (doc instanceof BinaryDocument) {BinaryDocument bin = (BinaryDocument) doc;try {ManagedFile result = resolveFileFor(folder, (BinaryDocument) doc);IOUtils.copy(bin.getContent().getInputStream(), result.getContent().getOutputStream());} catch (IOException e) {throw ManagedIOException.manage(e);}} else {System.err.println(""Unkown Document type"");}}}public static void copyFile(File source, File destination) throws IOException {if (!source.isFile()) {throw new IOException(source + "" is not a file."");}if (destination.exists()) {throw new IOException(""Destination file "" + destination + "" is already exist."");}FileChannel inChannel = new FileInputStream(source).getChannel();FileChannel outChannel = new FileOutputStream(destination).getChannel();try {inChannel.transferTo(0, inChannel.size(), outChannel);} finally {inChannel.close();outChannel.close();}}"	5
"public int executeBatch(String[] commands, String applicationid) throws Exception {Statement statement = null;int errors = 0;int commandCount = 0;Connection conn = null;try {conn = getConnection(applicationid);conn.setAutoCommit(false);statement = conn.createStatement();for (int i = 0; i < commands.length; i++) {String command = commands[i];if (command.trim().length() == 0) {continue;}commandCount++;try {log.info(""executing SQL: "" + command);int results = statement.executeUpdate(command);log.info(""After execution, "" + results + "" row(s) have been changed"");} catch (SQLException ex) {throw ex;}}conn.commit();log.info(""Executed "" + commandCount + "" SQL command(s) with "" + errors + "" error(s)"");} catch (SQLException ex) {if (conn != null) {conn.rollback();}throw ex;} catch (Exception e) {if (conn != null) {conn.rollback();}throw e;} finally {statement.close();}return errors;}public static String encripty(String toEncripty) {if (toEncripty != null) {try {synchronized (toEncripty) {java.security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");md.update(toEncripty.getBytes());byte[] hash = md.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < hash.length; i++) {if ((0xff & hash[i]) < 0x10) hexString.append(""0"" + Integer.toHexString((0xFF & hash[i]))); else hexString.append(Integer.toHexString(0xFF & hash[i]));}toEncripty = hexString.toString();}} catch (Exception e) {e.getMessage();}}return toEncripty;}private void getXMLData() {String result = null;URL url = null;URLConnection conn = null;BufferedReader rd = null;StringBuffer sb = new StringBuffer();String line;try {url = new URL(this.url);conn = url.openConnection();rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));while ((line = rd.readLine()) != null) {sb.append(line + ""\n"");}rd.close();result = sb.toString();} catch (MalformedURLException e) {log.error(""URL was malformed: {}"", url, e);} catch (IOException e) {log.error(""IOException thrown: {}"", url, e);}this.xmlString = result;}public String getRandomGUID() {MessageDigest md5 = null;String valueBeforeMD5 = """";String retValue = """";try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}StringBuffer sbValueBeforeMD5 = new StringBuffer();try {InetAddress id = InetAddress.getLocalHost();long time = System.currentTimeMillis();long rand = 0;rand = random.nextLong();sbValueBeforeMD5.append(id.toString());sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) {sb.append('0');}sb.append(Integer.toHexString(b));}retValue = sb.toString();} catch (UnknownHostException e) {System.out.println(""Error:"" + e);}return retValue;}public static String encrypt(String password) {String sign = password;try {java.security.MessageDigest md = java.security.MessageDigest.getInstance(""MD5"");md.update(sign.getBytes());byte[] hash = md.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < hash.length; i++) {if ((0xff & hash[i]) < 0x10) hexString.append(""0"" + Integer.toHexString((0xFF & hash[i]))); else hexString.append(Integer.toHexString(0xFF & hash[i]));}sign = hexString.toString();} catch (Exception nsae) {nsae.printStackTrace();}return sign;}public static String encode(String username, String password) {try {MessageDigest digest = MessageDigest.getInstance(""SHA-1"");digest.update(username.getBytes());digest.update(password.getBytes());return new String(digest.digest());} catch (Exception e) {Log.error(""Error encrypting credentials"", e);}return null;}public String process(URL url) throws IOException {String line, results = """";InputStream is = url.openStream();BufferedReader dis = new BufferedReader(new InputStreamReader(is));while ((line = dis.readLine()) != null) {results += line + ""\n"";}System.out.println(results);return results;}public String readTemplateToString(String fileName) {URL url = null;url = classLoader.getResource(fileName);StringBuffer content = new StringBuffer();if (url == null) {String error = ""Template file could not be found: "" + fileName;throw new RuntimeException(error);}try {BufferedReader breader = new BufferedReader(new InputStreamReader(url.openStream(), ""UTF-8""));String strLine = """";while ((strLine = breader.readLine()) != null) {content.append(strLine).append(""\n"");}breader.close();} catch (Exception e) {throw new RuntimeException(""Problem while loading file: "" + fileName);}return content.toString();}public synchronized String encrypt(String plaintext) throws SystemUnavailableException {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {throw new SystemUnavailableException(e.getMessage());}try {md.update(plaintext.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {throw new SystemUnavailableException(e.getMessage());}byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}private void loadProperties() {if (properties == null) {properties = new Properties();try {URL url = getClass().getResource(propsFile);properties.load(url.openStream());} catch (IOException ioe) {ioe.printStackTrace();}}}"	5
"private boolean verifyPassword(String password, byte[] hash) {boolean returnValue = false;try {MessageDigest msgDigest = MessageDigest.getInstance(""SHA-1"");msgDigest.update(password.getBytes(""UTF-8""));byte[] digest = msgDigest.digest();returnValue = Arrays.equals(hash, digest);} catch (UnsupportedEncodingException ex) {Logger.getLogger(AuthentificationState.class.getName()).log(Level.SEVERE, null, ex);} catch (NoSuchAlgorithmException ex) {Logger.getLogger(AuthentificationState.class.getName()).log(Level.SEVERE, null, ex);}return returnValue;}@Overridepublic void doExecute(String[] args) {if (args.length != 2) {printUsage();} else {int fileNo = 0;try {fileNo = Integer.parseInt(args[1]) - 1;} catch (NumberFormatException e) {printUsage();return;}if (fileNo < 0) {printUsage();return;}StorageFile[] files = (StorageFile[]) ctx.getRemoteDir().listFiles();try {StorageFile file = files[fileNo];File outFile = getOutFile(file);FileOutputStream out = new FileOutputStream(outFile);InputStream in = file.openStream();IOUtils.copy(in, out);IOUtils.closeQuietly(out);afterSave(outFile);if (outFile.exists()) {print(""File written to: "" + outFile.getAbsolutePath());}} catch (IOException e) {printError(""Failed to load file. "" + e.getMessage());} catch (Exception e) {printUsage();return;}}}static InputStream getUrlStream(String url) throws IOException {System.out.print(""getting : "" + url + "" ... "");long start = System.currentTimeMillis();URLConnection c = new URL(url).openConnection();InputStream is = c.getInputStream();System.out.print((System.currentTimeMillis() - start) + ""ms\n"");return is;}public static void copy(FileInputStream in, File destination) throws IOException {FileChannel srcChannel = null;FileChannel dstChannel = null;try {srcChannel = in.getChannel();dstChannel = new FileOutputStream(destination).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());} finally {if (srcChannel != null) {srcChannel.close();}if (dstChannel != null) {dstChannel.close();}}}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}public static void copyFile(String fromFile, String toFile) {FileInputStream from = null;FileOutputStream to = null;try {from = new FileInputStream(fromFile);to = new FileOutputStream(toFile);byte[] buffer = new byte[4096];int bytesRead;while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead);} catch (FileNotFoundException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();} finally {if (from != null) try {from.close();} catch (IOException e) {;}if (to != null) try {to.close();} catch (IOException e) {;}}}public boolean executeUpdate(String strSql) throws SQLException {getConnection();boolean flag = false;stmt = con.createStatement();logger.info(""###############::执行SQL语句操作(更新数据 无参数):"" + strSql);try {if (0 < stmt.executeUpdate(strSql)) {close_DB_Object();flag = true;con.commit();}} catch (SQLException ex) {logger.info(""###############Error DBManager Line126::执行SQL语句操作(更新数据 无参数):"" + strSql + ""失败!"");flag = false;con.rollback();throw ex;}return flag;}public boolean executeUpdate(String strSql, HashMap<Integer, Object> prams) throws SQLException, ClassNotFoundException {getConnection();boolean flag = false;try {pstmt = con.prepareStatement(strSql);setParamet(pstmt, prams);logger.info(""###############::执行SQL语句操作(更新数据 有参数):"" + strSql);if (0 < pstmt.executeUpdate()) {close_DB_Object();flag = true;con.commit();}} catch (SQLException ex) {logger.info(""###############Error DBManager Line121::执行SQL语句操作(更新数据 无参数):"" + strSql + ""失败!"");flag = false;con.rollback();throw ex;} catch (ClassNotFoundException ex) {logger.info(""###############Error DBManager Line152::执行SQL语句操作(更新数据 无参数):"" + strSql + ""失败! 参数设置类型错误!"");con.rollback();throw ex;}return flag;}public void run() {FileInputStream src;FileOutputStream dest;try {dest = new FileOutputStream(srcName);} catch (FileNotFoundException e) {e.printStackTrace();return;}FileChannel destC = dest.getChannel();FileChannel srcC;ByteBuffer buf = ByteBuffer.allocateDirect(BUFFER_SIZE);try {int fileNo = 0;while (true) {int i = 1;String destName = srcName + ""_"" + fileNo;src = new FileInputStream(destName);srcC = src.getChannel();while ((i > 0)) {i = srcC.read(buf);buf.flip();destC.write(buf);buf.compact();}srcC.close();src.close();fileNo++;}} catch (IOException e1) {e1.printStackTrace();return;}}@Overridepublic List<SheetFullName> importSheets(INetxiliaSystem workbookProcessor, WorkbookId workbookName, URL url, IProcessingConsole console) throws ImportException {try {return importSheets(workbookProcessor, workbookName, url.openStream(), console);} catch (Exception e) {throw new ImportException(url, ""Cannot open workbook:"" + e, e);}}"	5
"public static void copyFile(File source, File destination) {if (!source.exists()) {return;}if ((destination.getParentFile() != null) && (!destination.getParentFile().exists())) {destination.getParentFile().mkdirs();}try {FileChannel srcChannel = new FileInputStream(source).getChannel();FileChannel dstChannel = new FileOutputStream(destination).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (IOException ioe) {ioe.printStackTrace();}}public static int best(int r, int n, int s) {if ((n <= 0) || (r < 0) || (r > n) || (s < 0)) return 0;int[] rolls = new int[n];for (int i = 0; i < n; i++) rolls[i] = d(s);boolean found;do {found = false;for (int x = 0; x < n - 1; x++) {if (rolls[x] < rolls[x + 1]) {int t = rolls[x];rolls[x] = rolls[x + 1];rolls[x + 1] = t;found = true;}}} while (found);int sum = 0;for (int i = 0; i < r; i++) sum += rolls[i];return sum;}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}private void preprocessImages(GeoImage[] detailedImages) throws IOException {for (int i = 0; i < detailedImages.length; i++) {BufferedImage img = loadImage(detailedImages[i].getPath());detailedImages[i].setLatDim(img.getHeight());detailedImages[i].setLonDim(img.getWidth());freeImage(img);String fileName = detailedImages[i].getPath();int dotindex = fileName.lastIndexOf(""."");dotindex = dotindex < 0 ? 0 : dotindex;String tmp = dotindex < 1 ? fileName : fileName.substring(0, dotindex + 3) + ""w"";System.out.println(""filename "" + tmp);File worldFile = new File(tmp);if (!worldFile.exists()) {System.out.println(""Rez: Could not find file: "" + tmp);debug(""Rez: Could not find directory: "" + tmp);throw new IOException(""File not Found"");}BufferedReader worldFileReader = new BufferedReader(new InputStreamReader(new FileInputStream(worldFile)));if (staticDebugOn) debug(""b4nextline: "");line = worldFileReader.readLine();if (staticDebugOn) debug(""line: "" + line);if (line != null) {tokenizer = new StringTokenizer(line, "" \n\t\r\"""", false);detailedImages[i].setLonSpacing(Double.valueOf(tokenizer.nextToken()).doubleValue());detailedImages[i].setLonExtent(detailedImages[i].getLonSpacing() * ((double) detailedImages[i].getLonDim() - 1d));System.out.println(""setLonExtent "" + detailedImages[i].getLonExtent());line = worldFileReader.readLine();if (staticDebugOn) debug(""skip line: "" + line);line = worldFileReader.readLine();if (staticDebugOn) debug(""skip line: "" + line);line = worldFileReader.readLine();if (staticDebugOn) debug(""line: "" + line);tokenizer = new StringTokenizer(line, "" \n\t\r\"""", false);detailedImages[i].setLatSpacing(Double.valueOf(tokenizer.nextToken()).doubleValue());detailedImages[i].setLatExtent(detailedImages[i].getLatSpacing() * ((double) detailedImages[i].getLatDim() - 1d));line = worldFileReader.readLine();if (staticDebugOn) debug(""line: "" + line);tokenizer = new StringTokenizer(line, "" \n\t\r\"""", false);detailedImages[i].setLon(Double.valueOf(tokenizer.nextToken()).doubleValue());line = worldFileReader.readLine();if (staticDebugOn) debug(""line: "" + line);tokenizer = new StringTokenizer(line, "" \n\t\r\"""", false);detailedImages[i].setLat(Double.valueOf(tokenizer.nextToken()).doubleValue());int slashindex = fileName.lastIndexOf(java.io.File.separator);slashindex = slashindex < 0 ? 0 : slashindex;if (slashindex == 0) {slashindex = fileName.lastIndexOf(""/"");slashindex = slashindex < 0 ? 0 : slashindex;}tmp = slashindex < 1 ? fileName : fileName.substring(slashindex + 1, fileName.length());System.out.println(""filename "" + destinationDirectory + XPlat.fileSep + tmp);detailedImages[i].setPath(tmp);DataInputStream dataIn = new DataInputStream(new BufferedInputStream(new FileInputStream(fileName)));DataOutputStream dataOut = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(destinationDirectory + XPlat.fileSep + tmp)));System.out.println(""copying to "" + destinationDirectory + XPlat.fileSep + tmp);for (; ; ) {try {dataOut.writeShort(dataIn.readShort());} catch (EOFException e) {break;} catch (IOException e) {break;}}dataOut.close();} else {System.out.println(""Rez: ERROR: World file for image is null"");}}}private void preprocessObjects(GeoObject[] objects) throws IOException {System.out.println(""objects.length "" + objects.length);for (int i = 0; i < objects.length; i++) {String fileName = objects[i].getPath();int dotindex = fileName.lastIndexOf(""."");dotindex = dotindex < 0 ? 0 : dotindex;String tmp = dotindex < 1 ? fileName : fileName.substring(0, dotindex + 3) + ""w"";System.out.println(""i: "" + "" world filename "" + tmp);File worldFile = new File(tmp);if (worldFile.exists()) {BufferedReader worldFileReader = new BufferedReader(new InputStreamReader(new FileInputStream(worldFile)));if (staticDebugOn) debug(""b4nextline: "");line = worldFileReader.readLine();if (staticDebugOn) debug(""line: "" + line);if (line != null) {line = worldFileReader.readLine();if (staticDebugOn) debug(""line: "" + line);tokenizer = new StringTokenizer(line, "" \n\t\r\"""", false);objects[i].setLon(Double.valueOf(tokenizer.nextToken()).doubleValue());line = worldFileReader.readLine();if (staticDebugOn) debug(""line: "" + line);tokenizer = new StringTokenizer(line, "" \n\t\r\"""", false);objects[i].setLat(Double.valueOf(tokenizer.nextToken()).doubleValue());}}File file = new File(objects[i].getPath());if (file.exists()) {System.out.println(""object src file found "");int slashindex = fileName.lastIndexOf(java.io.File.separator);slashindex = slashindex < 0 ? 0 : slashindex;if (slashindex == 0) {slashindex = fileName.lastIndexOf(""/"");slashindex = slashindex < 0 ? 0 : slashindex;}tmp = slashindex < 1 ? fileName : fileName.substring(slashindex + 1, fileName.length());System.out.println(""filename "" + destinationDirectory + XPlat.fileSep + tmp);objects[i].setPath(tmp);file = new File(fileName);if (file.exists()) {DataInputStream dataIn = new DataInputStream(new BufferedInputStream(new FileInputStream(fileName)));DataOutputStream dataOut = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(destinationDirectory + XPlat.fileSep + tmp)));System.out.println(""copying to "" + destinationDirectory + XPlat.fileSep + tmp);for (; ; ) {try {dataOut.writeShort(dataIn.readShort());} catch (EOFException e) {break;} catch (IOException e) {break;}}dataOut.close();}}}}@Override@Transactionalpublic FileData store(FileData data, InputStream stream) {try {FileData file = save(data);file.setPath(file.getGroup() + File.separator + file.getId());file = save(file);File folder = new File(PATH, file.getGroup());if (!folder.exists()) folder.mkdirs();File filename = new File(folder, file.getId() + """");IOUtils.copyLarge(stream, new FileOutputStream(filename));return file;} catch (IOException e) {throw new ServiceException(""storage"", e);}}@PostConstructpublic void init() {logger.info(""+++++ TRACAuditChecklistWizardMB: init() start ++++++++"");try {tracSectionAll = new ArrayList<TRACCriteriaCheckListItem>();List<TRACCriteriaCheckListItem> tracSectionA = new ArrayList<TRACCriteriaCheckListItem>();List<TRACCriteriaCheckListItem> tracSectionB = new ArrayList<TRACCriteriaCheckListItem>();List<TRACCriteriaCheckListItem> tracSectionC = new ArrayList<TRACCriteriaCheckListItem>();URL url = TRACAuditChecklistManagedBean.class.getResource(tracCriteriaPropertiesFileName);tracCriteriaCheckList = new LinkedProperties();tracCriteriaCheckList.load(url.openStream());Set<String> tmpKeys = tracCriteriaCheckList.stringPropertyNames();List<String> sortWrkList = new ArrayList<String>();sortWrkList.addAll(tmpKeys);sortList(sortWrkList);for (String key : sortWrkList) {String aspectCode = key.substring(aspectCodeOffsetValue);logger.info(""aspectCode="" + aspectCode);if (aspectCode.startsWith(""A"")) {if (aspectCode.equals(""A"")) {sectionAcaption = tracCriteriaCheckList.getProperty(key);} else {if (aspectCode.length() == 4) {tracSectionAll.add(new TRACCriteriaCheckListItem(aspectCode, tracCriteriaCheckList.getProperty(key), """", """", """"));}}} else if (aspectCode.startsWith(""B"")) {if (aspectCode.equals(""B"")) {sectionBcaption = tracCriteriaCheckList.getProperty(key);} else {if (aspectCode.length() == 4) {tracSectionAll.add(new TRACCriteriaCheckListItem(aspectCode, tracCriteriaCheckList.getProperty(key), """", """", """"));}}} else if (aspectCode.startsWith(""C"")) {if (aspectCode.equals(""C"")) {sectionCcaption = tracCriteriaCheckList.getProperty(key);} else {if (aspectCode.length() == 4) {tracSectionAll.add(new TRACCriteriaCheckListItem(aspectCode, tracCriteriaCheckList.getProperty(key), """", """", """"));}}} else {logger.warning(""offset value is wrong: 16th character must be A or B or C"");}}} catch (FileNotFoundException ex) {logger.log(Level.WARNING, ""specified properties file was not found"", ex);} catch (IOException ex) {logger.log(Level.WARNING, ""IO error occurred"", ex);} finally {}logger.info(""+++++ TRACAuditChecklistWizardMB: init() end++++++++"");}protected Document fetchResource(String method, String parameter, Locale locale, final FloodLimit limit) throws IOException, SAXException {return getDocument(new CachedPage(getResourceLocation(method, parameter, locale)) {@Overrideprotected Reader openConnection(URL url) throws IOException {try {if (limit != null) {limit.acquirePermit();}return super.openConnection(url);} catch (InterruptedException e) {throw new IOException(e);}};}.get());}@Overrideprotected Reader openConnection(URL url) throws IOException {try {if (limit != null) {limit.acquirePermit();}return super.openConnection(url);} catch (InterruptedException e) {throw new IOException(e);}}"	5
"protected Class findClass(String name) throws ClassNotFoundException {String classFile = name.replace('.', '/') + "".class"";InputStream classInputStream = null;if (this.extensionJars != null) {for (int i = 0; i < this.extensionJars.length; i++) {JarFile extensionJar = this.extensionJars[i];JarEntry jarEntry = extensionJar.getJarEntry(classFile);if (jarEntry != null) {try {classInputStream = extensionJar.getInputStream(jarEntry);} catch (IOException ex) {throw new ClassNotFoundException(""Couldn't read class "" + name, ex);}}}}if (classInputStream == null) {URL url = getResource(classFile);if (url == null) {throw new ClassNotFoundException(""Class "" + name);}try {classInputStream = url.openStream();} catch (IOException ex) {throw new ClassNotFoundException(""Couldn't read class "" + name, ex);}}try {ByteArrayOutputStream out = new ByteArrayOutputStream();BufferedInputStream in = new BufferedInputStream(classInputStream);byte[] buffer = new byte[8096];int size;while ((size = in.read(buffer)) != -1) {out.write(buffer, 0, size);}in.close();return defineClass(name, out.toByteArray(), 0, out.size(), this.protectionDomain);} catch (IOException ex) {throw new ClassNotFoundException(""Class "" + name, ex);}}public static byte[] hash(final byte[] saltBefore, final String content, final byte[] saltAfter, final int repeatedHashingCount) throws NoSuchAlgorithmException, UnsupportedEncodingException {if (content == null) return null;final MessageDigest digest = MessageDigest.getInstance(DIGEST);if (digestLength == -1) digestLength = digest.getDigestLength();for (int i = 0; i < repeatedHashingCount; i++) {if (i > 0) digest.update(digest.digest());digest.update(saltBefore);digest.update(content.getBytes(WebCastellumFilter.DEFAULT_CHARACTER_ENCODING));digest.update(saltAfter);}return digest.digest();}void queryFile(String rendezvousProgram, String rendezvousMD5) {try {XMLConfigParser.readUrlHost();String url = XMLConfigParser.urlHost;String query;String param1 = ""op=query"";String param2 = ""program="" + rendezvousProgram;String param3 = ""md5="" + rendezvousMD5;query = String.format(""%s&%s&%s"", param1, param2, param3);openConnection(query, url);String line = br.readLine();NetworkLog.logMsg(NetworkLog.LOG_DEBUG, this, ""(Query) Response of the server: "" + line);br.close();} catch (MalformedURLException e) {NetworkLog.logMsg(NetworkLog.LOG_ERROR, this, ""Error"" + e);} catch (IOException e) {NetworkLog.logMsg(NetworkLog.LOG_ERROR, this, e.getMessage());}}void queryInactive() {try {XMLConfigParser.readUrlHost();String url = XMLConfigParser.urlHost;Date currenttime = new Date();String query;String param1 = ""op=queryinactive"";String param2 = ""time="" + currenttime.getTime();query = String.format(""%s&%s"", param1, param2);openConnection(query, url);String line = br.readLine();NetworkLog.logMsg(NetworkLog.LOG_DEBUG, this, ""(Query inactive)Response of the server: "" + line);br.close();} catch (MalformedURLException e) {NetworkLog.logMsg(NetworkLog.LOG_ERROR, this, ""Error"" + e);} catch (IOException e) {NetworkLog.logMsg(NetworkLog.LOG_ERROR, this, e.getMessage());}}private String getPayLoadWithCookie(String url) {StringBuffer sb = new StringBuffer();if (this.cookie != null) {try {Log.debug(""Requesting url ==> "" + url);URLConnection con = new URL(url).openConnection();con.setDoOutput(true);con.addRequestProperty(""Cookie"", this.cookie);BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream()));String line = """";while ((line = br.readLine()) != null) {sb.append(line + ""\n"");}} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}}return sb.toString();}public static void copy(File source, File destination) throws IOException {InputStream in = new FileInputStream(source);OutputStream out = new FileOutputStream(destination);byte[] buffer = new byte[1024];int len;while ((len = in.read(buffer)) > 0) out.write(buffer, 0, len);in.close();out.close();}public static void copy(String fromFileName, String toFileName) throws IOException {File fromFile = new File(fromFileName);File toFile = new File(toFileName);if (!fromFile.exists()) throw new IOException(""FileCopy: "" + ""no such source file: "" + fromFileName);if (!fromFile.isFile()) throw new IOException(""FileCopy: "" + ""can't copy directory: "" + fromFileName);if (!fromFile.canRead()) throw new IOException(""FileCopy: "" + ""source file is unreadable: "" + fromFileName);if (toFile.isDirectory()) toFile = new File(toFile, fromFile.getName());if (toFile.exists()) {if (!toFile.canWrite()) throw new IOException(""FileCopy: "" + ""destination file is unwriteable: "" + toFileName);System.out.print(""Overwrite existing file "" + toFile.getName() + ""? (Y/N): "");System.out.flush();BufferedReader in = new BufferedReader(new InputStreamReader(System.in));String response = in.readLine();if (!response.equals(""Y"") && !response.equals(""y"")) throw new IOException(""FileCopy: "" + ""existing file was not overwritten."");} else {String parent = toFile.getParent();if (parent == null) parent = System.getProperty(""user.dir"");File dir = new File(parent);if (!dir.exists()) throw new IOException(""FileCopy: "" + ""destination directory doesn't exist: "" + parent);if (dir.isFile()) throw new IOException(""FileCopy: "" + ""destination is not a directory: "" + parent);if (!dir.canWrite()) throw new IOException(""FileCopy: "" + ""destination directory is unwriteable: "" + parent);}FileInputStream from = null;FileOutputStream to = null;try {from = new FileInputStream(fromFile);to = new FileOutputStream(toFile);byte[] buffer = new byte[4096];int bytesRead;while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead);} finally {if (from != null) try {from.close();} catch (IOException e) {;}if (to != null) try {to.close();} catch (IOException e) {;}}}public static final String getContent(String address) {String content = """";OutputStream out = null;URLConnection conn = null;InputStream in = null;try {URL url = new URL(address);out = new ByteArrayOutputStream();conn = url.openConnection();in = conn.getInputStream();byte[] buffer = new byte[1024];int numRead;while ((numRead = in.read(buffer)) != -1) {out.write(buffer, 0, numRead);}content = out.toString();} catch (Exception exception) {exception.printStackTrace();} finally {try {if (in != null) {in.close();}if (out != null) {out.close();}} catch (IOException ioe) {}}return content;}public static void copyFromFileToFileUsingNIO(File inputFile, File outputFile) throws FileNotFoundException, IOException {FileChannel inputChannel = new FileInputStream(inputFile).getChannel();FileChannel outputChannel = new FileOutputStream(outputFile).getChannel();try {inputChannel.transferTo(0, inputChannel.size(), outputChannel);} catch (IOException e) {throw e;} finally {if (inputChannel != null) inputChannel.close();if (outputChannel != null) outputChannel.close();}}public void setContentMD5() {MessageDigest messagedigest = null;try {messagedigest = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {e.printStackTrace();contentMD5 = null;}messagedigest.update(content.getBytes());byte digest[] = messagedigest.digest();String chk = """";for (int i = 0; i < digest.length; i++) {String s = Integer.toHexString(digest[i] & 0xFF);chk += ((s.length() == 1) ? ""0"" + s : s);}contentMD5 = chk;}"	5
"private void createHomeTab() {Tabpanel homeTab = new Tabpanel();windowContainer.addWindow(homeTab, Msg.getMsg(EnvWeb.getCtx(), ""Home"").replaceAll(""&"", """"), false);Portallayout portalLayout = new Portallayout();portalLayout.setWidth(""100%"");portalLayout.setHeight(""100%"");portalLayout.setStyle(""position: absolute; overflow: auto"");homeTab.appendChild(portalLayout);Portalchildren portalchildren = null;int currentColumnNo = 0;String sql = ""SELECT COUNT(DISTINCT COLUMNNO) "" + ""FROM PA_DASHBOARDCONTENT "" + ""WHERE (AD_CLIENT_ID=0 OR AD_CLIENT_ID=?) AND ISACTIVE='Y'"";int noOfCols = DB.getSQLValue(null, sql, EnvWeb.getCtx().getAD_Client_ID());int width = noOfCols <= 0 ? 100 : 100 / noOfCols;sql = ""SELECT x.*, m.AD_MENU_ID "" + ""FROM PA_DASHBOARDCONTENT x "" + ""LEFT OUTER JOIN AD_MENU m ON x.AD_WINDOW_ID=m.AD_WINDOW_ID "" + ""WHERE (x.AD_CLIENT_ID=0 OR x.AD_CLIENT_ID=?) AND x.ISACTIVE='Y' "" + ""AND x.zulfilepath not in (?, ?, ?) "" + ""ORDER BY x.COLUMNNO, x.AD_CLIENT_ID, x.LINE "";PreparedStatement pstmt = null;ResultSet rs = null;try {pstmt = DB.prepareStatement(sql, null);pstmt.setInt(1, EnvWeb.getCtx().getAD_Client_ID());pstmt.setString(2, ACTIVITIES_PATH);pstmt.setString(3, FAVOURITES_PATH);pstmt.setString(4, VIEWS_PATH);rs = pstmt.executeQuery();while (rs.next()) {int columnNo = rs.getInt(""ColumnNo"");if (portalchildren == null || currentColumnNo != columnNo) {portalchildren = new Portalchildren();portalLayout.appendChild(portalchildren);portalchildren.setWidth(width + ""%"");portalchildren.setStyle(""padding: 5px"");currentColumnNo = columnNo;}Panel panel = new Panel();panel.setStyle(""margin-bottom:10px"");panel.setTitle(rs.getString(""Name""));String description = rs.getString(""Description"");if (description != null) panel.setTooltiptext(description);String collapsible = rs.getString(""IsCollapsible"");panel.setCollapsible(collapsible.equals(""Y""));panel.setBorder(""normal"");portalchildren.appendChild(panel);Panelchildren content = new Panelchildren();panel.appendChild(content);boolean panelEmpty = true;String htmlContent = rs.getString(""HTML"");if (htmlContent != null) {StringBuffer result = new StringBuffer(""<html><head>"");URL url = getClass().getClassLoader().getResource(""org/compiere/images/PAPanel.css"");InputStreamReader ins;try {ins = new InputStreamReader(url.openStream());BufferedReader bufferedReader = new BufferedReader(ins);String cssLine;while ((cssLine = bufferedReader.readLine()) != null) result.append(cssLine + ""\n"");} catch (IOException e1) {logger.log(Level.SEVERE, e1.getLocalizedMessage(), e1);}result.append(""</head><body><div class=\""content\"">\n"");result.append(stripHtml(htmlContent, false) + ""<br>\n"");result.append(""</div>\n</body>\n</html>\n</html>"");Html html = new Html();html.setContent(result.toString());content.appendChild(html);panelEmpty = false;}int AD_Window_ID = rs.getInt(""AD_Window_ID"");if (AD_Window_ID > 0) {int AD_Menu_ID = rs.getInt(""AD_Menu_ID"");ToolBarButton btn = new ToolBarButton(String.valueOf(AD_Menu_ID));MMenu menu = new MMenu(EnvWeb.getCtx(), AD_Menu_ID, null);btn.setLabel(menu.getName());btn.addEventListener(Events.ON_CLICK, this);content.appendChild(btn);panelEmpty = false;}int PA_Goal_ID = rs.getInt(""PA_Goal_ID"");if (PA_Goal_ID > 0) {StringBuffer result = new StringBuffer(""<html><head>"");URL url = getClass().getClassLoader().getResource(""org/compiere/images/PAPanel.css"");InputStreamReader ins;try {ins = new InputStreamReader(url.openStream());BufferedReader bufferedReader = new BufferedReader(ins);String cssLine;while ((cssLine = bufferedReader.readLine()) != null) result.append(cssLine + ""\n"");} catch (IOException e1) {logger.log(Level.SEVERE, e1.getLocalizedMessage(), e1);}result.append(""</head><body><div class=\""content\"">\n"");result.append(renderGoals(PA_Goal_ID, content));result.append(""</div>\n</body>\n</html>\n</html>"");Html html = new Html();html.setContent(result.toString());content.appendChild(html);panelEmpty = false;}String url = rs.getString(""ZulFilePath"");if (url != null) {try {Component component = Executions.createComponents(url, content, null);if (component != null) {if (component instanceof DashboardPanel) {DashboardPanel dashboardPanel = (DashboardPanel) component;if (!dashboardPanel.getChildren().isEmpty()) {content.appendChild(dashboardPanel);dashboardRunnable.add(dashboardPanel);panelEmpty = false;}} else {content.appendChild(component);panelEmpty = false;}}} catch (Exception e) {logger.log(Level.WARNING, ""Failed to create components. zul="" + url, e);}}if (panelEmpty) panel.detach();}} catch (Exception e) {logger.log(Level.WARNING, ""Failed to create dashboard content"", e);} finally {Util.closeCursor(pstmt, rs);}registerWindow(homeTab);if (!portalLayout.getDesktop().isServerPushEnabled()) portalLayout.getDesktop().enableServerPush(true);dashboardRunnable.refreshDashboard();dashboardThread = new Thread(dashboardRunnable, ""UpdateInfo"");dashboardThread.setDaemon(true);dashboardThread.start();}private void channelCopy(File source, File dest) throws IOException {FileChannel srcChannel = new FileInputStream(source).getChannel();FileChannel dstChannel = new FileOutputStream(dest).getChannel();try {dstChannel.transferFrom(srcChannel, 0, srcChannel.size());} finally {srcChannel.close();dstChannel.close();}}File exportCommunityData(Community community) throws CommunityNotActiveException, FileNotFoundException, IOException, CommunityNotFoundException {try {String communityId = community.getId();if (!community.isActive()) {log.error(""The community with id "" + communityId + "" is inactive"");throw new CommunityNotActiveException(""The community with id "" + communityId + "" is inactive"");}new File(CommunityManagerImpl.EXPORTED_COMMUNITIES_PATH).mkdirs();String communityName = community.getName();String communityType = community.getType();String communityTitle = I18NUtils.localize(community.getTitle());File zipOutFilename;if (community.isPersonalCommunity()) {zipOutFilename = new File(CommunityManagerImpl.EXPORTED_COMMUNITIES_PATH + communityName + "".zip"");} else {zipOutFilename = new File(CommunityManagerImpl.EXPORTED_COMMUNITIES_PATH + MANUAL_EXPORTED_COMMUNITY_PREFIX + communityTitle + "".zip"");}ZipOutputStream out = new ZipOutputStream(new FileOutputStream(zipOutFilename));File file = File.createTempFile(""exported-community"", null);TemporaryFilesHandler.register(null, file);FileOutputStream fos = new FileOutputStream(file);String contentPath = JCRUtil.getNodeById(communityId).getPath();JCRUtil.currentSession().exportSystemView(contentPath, fos, false, false);fos.close();File propertiesFile = File.createTempFile(""exported-community-properties"", null);TemporaryFilesHandler.register(null, propertiesFile);FileOutputStream fosProperties = new FileOutputStream(propertiesFile);fosProperties.write((""communityId="" + communityId).getBytes());fosProperties.write("";"".getBytes());fosProperties.write((""externalId="" + community.getExternalId()).getBytes());fosProperties.write("";"".getBytes());fosProperties.write((""title="" + communityTitle).getBytes());fosProperties.write("";"".getBytes());fosProperties.write((""communityType="" + communityType).getBytes());fosProperties.write("";"".getBytes());fosProperties.write((""communityName="" + communityName).getBytes());fosProperties.close();FileInputStream finProperties = new FileInputStream(propertiesFile);byte[] bufferProperties = new byte[4096];out.putNextEntry(new ZipEntry(""properties""));int readProperties = 0;while ((readProperties = finProperties.read(bufferProperties)) > 0) {out.write(bufferProperties, 0, readProperties);}finProperties.close();FileInputStream fin = new FileInputStream(file);byte[] buffer = new byte[4096];out.putNextEntry(new ZipEntry(""xmlData""));int read = 0;while ((read = fin.read(buffer)) > 0) {out.write(buffer, 0, read);}fin.close();out.close();community.setActive(Boolean.FALSE);communityPersister.saveCommunity(community);Collection<Community> duplicatedPersonalCommunities = communityPersister.searchCommunitiesByName(communityName);if (CommunityManager.PERSONAL_COMMUNITY_TYPE.equals(communityType)) {for (Community currentCommunity : duplicatedPersonalCommunities) {if (currentCommunity.isActive()) {currentCommunity.setActive(Boolean.FALSE);communityPersister.saveCommunity(currentCommunity);}}}return zipOutFilename;} catch (RepositoryException e) {log.error(""Error getting community with id "" + community.getId());throw new GroupwareRuntimeException(""Error getting community with id "" + community.getId(), e.getCause());}}public static String getSHA1Digest(String inputStr) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md = null;byte[] sha1hash = null;md = MessageDigest.getInstance(""SHA"");sha1hash = new byte[40];md.update(inputStr.getBytes(""iso-8859-1""), 0, inputStr.length());sha1hash = md.digest();return convertToHex(sha1hash);}public AssemblyConfig load() {AssemblyConfig assembly = null;Digester digester = createParser();try {if (inputStream != null) {if (logger.isDebugEnabled()) {logger.debug(""XML config loader is parsing an inputstream:"" + inputStream);}assembly = (AssemblyConfig) digester.parse(inputStream);} else if (file != null) {if (logger.isDebugEnabled()) {logger.debug(""XML config loader is parsing a file:"" + file);}assembly = (AssemblyConfig) digester.parse(file);} else {if (logger.isDebugEnabled()) {logger.debug(""XML config loader is parsing a URI:"" + uri);}URL url = new URL(uri);inputStream = url.openStream();assembly = (AssemblyConfig) digester.parse(inputStream);}if (assembly != null) {logger.debug(""Services from XML configuration are: "");logger.debug(assembly.toString());} else {throw new AssemblyConfigException(""Unable to parse the XML assembly configuration. "" + ""HINT: Please check the schema/grammar of the supplied "" + ""XML document and verify the XML namespace is correct."");}} catch (IOException ioe) {throw new AssemblyConfigException(""I/O failure, unable to process configuration"", ioe);} catch (SAXException sxe) {throw new AssemblyConfigException(""XML Reader failure, unable to process configuration"", sxe);}return assembly;}private void trainSRLParser(byte flag, JarArchiveOutputStream zout) throws Exception {AbstractSRLParser labeler = null;AbstractDecoder[] decoder = null;if (flag == SRLParser.FLAG_TRAIN_LEXICON) {System.out.println(""\n* Save lexica"");labeler = new SRLParser(flag, s_featureXml);} else if (flag == SRLParser.FLAG_TRAIN_INSTANCE) {System.out.println(""\n* Print training instances"");System.out.println(""- loading lexica"");labeler = new SRLParser(flag, t_xml, s_lexiconFiles);} else if (flag == SRLParser.FLAG_TRAIN_BOOST) {System.out.println(""\n* Train boost"");decoder = new AbstractDecoder[m_model.length];for (int i = 0; i < decoder.length; i++) decoder[i] = new OneVsAllDecoder((OneVsAllModel) m_model[i]);labeler = new SRLParser(flag, t_xml, t_map, decoder);}AbstractReader<DepNode, DepTree> reader = new SRLReader(s_trainFile, true);DepTree tree;int n;labeler.setLanguage(s_language);reader.setLanguage(s_language);for (n = 0; (tree = reader.nextTree()) != null; n++) {labeler.parse(tree);if (n % 1000 == 0) System.out.printf(""\r- parsing: %dK"", n / 1000);}System.out.println(""\r- labeling: "" + n);if (flag == SRLParser.FLAG_TRAIN_LEXICON) {System.out.println(""- labeling"");labeler.saveTags(s_lexiconFiles);t_xml = labeler.getSRLFtrXml();} else if (flag == SRLParser.FLAG_TRAIN_INSTANCE || flag == SRLParser.FLAG_TRAIN_BOOST) {a_yx = labeler.a_trans;zout.putArchiveEntry(new JarArchiveEntry(ENTRY_FEATURE));IOUtils.copy(new FileInputStream(s_featureXml), zout);zout.closeArchiveEntry();for (String lexicaFile : s_lexiconFiles) {zout.putArchiveEntry(new JarArchiveEntry(lexicaFile));IOUtils.copy(new FileInputStream(lexicaFile), zout);zout.closeArchiveEntry();}if (flag == SRLParser.FLAG_TRAIN_INSTANCE) t_map = labeler.getSRLFtrMap();}}public void visit(BosMember member) throws BosException {String relative = AddressingUtil.getRelativePath(member.getDataSourceUri(), baseUri);URL resultUrl;try {resultUrl = new URL(outputUrl, relative);File resultFile = new File(resultUrl.toURI());resultFile.getParentFile().mkdirs();log.info(""Creating result file \"""" + resultFile.getAbsolutePath() + ""\""..."");IOUtils.copy(member.getInputStream(), new FileOutputStream(resultFile));} catch (Exception e) {throw new BosException(e);}}public boolean setCliente(int IDcliente, String nombre, String paterno, String materno, String ocupacion, String rfc) {boolean inserto = false;try {stm = conexion.prepareStatement(""insert into clientes values( '"" + IDcliente + ""' , '"" + nombre.toUpperCase() + ""' , '"" + paterno.toUpperCase() + ""' , '"" + materno.toUpperCase() + ""' , '"" + ocupacion.toUpperCase() + ""' , '"" + rfc + ""' )"");stm.executeUpdate();conexion.commit();inserto = true;} catch (SQLException e) {System.out.println(""error al insertar registro en la tabla clientes general  "" + e.getMessage());try {conexion.rollback();} catch (SQLException ee) {System.out.println(ee.getMessage());}return inserto = false;}return inserto;}public boolean setUpdateCliente(int IDcliente, String nombre, String paterno, String materno, String ocupacion, String rfc) {boolean update = false;try {stm = conexion.prepareStatement(""update clientes set nombre='"" + nombre.toUpperCase().trim() + ""' , paterno='"" + paterno.toUpperCase().trim() + ""' ,"" + ""materno='"" + materno.toUpperCase().trim() + ""',ocupacion='"" + ocupacion.toUpperCase().trim() + ""',rfc='"" + rfc.trim() + ""' where IDcliente ='"" + IDcliente + ""' "");stm.executeUpdate();conexion.commit();update = true;} catch (SQLException e) {System.out.println(""error al actualizar registro en la tabla clientes  "" + e.getMessage());try {conexion.rollback();} catch (SQLException ee) {System.out.println(ee.getMessage());}return update = false;}return update;}public boolean setDeleteCliente(int IDcliente) {boolean delete = false;try {stm = conexion.prepareStatement(""delete clientes where IDcliente='"" + IDcliente + ""'"");stm.executeUpdate();conexion.commit();delete = true;} catch (SQLException e) {System.out.println(""Error en la eliminacion del registro en tabla clientes "" + e.getMessage());try {conexion.rollback();} catch (SQLException ee) {System.out.println(ee.getMessage());}return delete = false;}return delete;}"	5
"public void delete(String fileName) throws IOException {log.debug(""deleting: "" + fileName);URL url = new URL(this.endpointURL + ""?operation=delete&filename="" + fileName);URLConnection connection = url.openConnection();connection.setDoOutput(false);connection.setDoInput(true);connection.setUseCaches(false);connection.getInputStream();}public static synchronized BufferedImage loadBufferedJPEGImage(URL url) {BufferedImage image = null;if (url != null) {InputStream in = null;try {in = url.openStream();JPEGImageDecoder decoder = JPEGCodec.createJPEGDecoder(in);image = decoder.decodeAsBufferedImage();} catch (Exception e) {log.severe(""URL: "" + url + "" - "" + e.getMessage());image = null;} finally {try {if (in != null) in.close();} catch (IOException ioe) {log.severe(""URL: "" + url + "" - "" + ioe.getMessage());}}if (image != null) {log.config(""Image type : "" + image.getType());if (image.getWidth() <= 0 || image.getHeight() <= 0) {log.severe(""URL: "" + url + "" =0"");image = null;}}}return image;}private void output(HttpServletResponse resp, InputStream is, long length, String fileName) throws Exception {resp.reset();String mimeType = ""image/jpeg"";resp.setContentType(mimeType);resp.setContentLength((int) length);resp.setHeader(""Content-Disposition"", ""inline; filename=\"""" + fileName + ""\"""");resp.setHeader(""Cache-Control"", ""must-revalidate"");ServletOutputStream sout = resp.getOutputStream();IOUtils.copy(is, sout);sout.flush();resp.flushBuffer();}public void writeConfigurationFile() throws IOException, ComponentException {SystemConfig config = parent.getParentSystem().getConfiguration();File original = config.getLocation();File backup = new File(original.getParentFile(), original.getName() + ""."" + System.currentTimeMillis());FileInputStream in = new FileInputStream(original);FileOutputStream out = new FileOutputStream(backup);byte[] buffer = new byte[2048];try {int bytesread = 0;while ((bytesread = in.read(buffer)) > 0) {out.write(buffer, 0, bytesread);}} catch (IOException e) {logger.warn(""Failed to copy backup of configuration file"");throw e;} finally {in.close();out.close();}FileWriter replace = new FileWriter(original);replace.write(config.toFileFormat());replace.close();logger.info(""Re-wrote configuration file "" + original.getPath());}protected String parseAction() throws ChangesOnServerException, ConnectionException, RequestCancelledException {GetPageRequest request = getHttpClient().createGetPageRequest();request.setUrl(""http://www.zippyshare.com/index_old.jsp"");HttpResponse response = executeRequest(request);try {Parser p = new Parser(response.getResponseBody());String action = p.parseOne(""enctype=\""multipart/form-data\"" action=\""(.*)\"">"");return action;} catch (ParsingException ex) {throw new ChangesOnServerException();} catch (IOException ex) {throw new ChangesOnServerException();}}public static void copy(File source, File dest) throws IOException {if (dest.isDirectory()) {dest = new File(dest + File.separator + source.getName());}FileChannel in = null, out = null;try {in = new FileInputStream(source).getChannel();out = new FileOutputStream(dest).getChannel();long size = in.size();MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buf);} finally {if (in != null) in.close();if (out != null) out.close();}}public void testDoubleNaN() {double value = 0;boolean wasEqual = false;String message = ""DB operation completed"";String ddl1 = ""DROP TABLE t1 IF EXISTS;"" + ""CREATE TABLE t1 ( d DECIMAL, f DOUBLE, l BIGINT, i INTEGER, s SMALLINT, t TINYINT, "" + ""dt DATE DEFAULT CURRENT_DATE, ti TIME DEFAULT CURRENT_TIME, ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP );"";try {stmnt.execute(ddl1);PreparedStatement ps = connection.prepareStatement(""INSERT INTO t1 (d,f,l,i,s,t,dt,ti,ts) VALUES (?,?,?,?,?,?,?,?,?)"");ps.setString(1, ""0.2"");ps.setDouble(2, 0.2);ps.setLong(3, java.lang.Long.MAX_VALUE);ps.setInt(4, Integer.MAX_VALUE);ps.setInt(5, Short.MAX_VALUE);ps.setInt(6, 0);ps.setDate(7, new java.sql.Date(System.currentTimeMillis()));ps.setTime(8, new java.sql.Time(System.currentTimeMillis()));ps.setTimestamp(9, new java.sql.Timestamp(System.currentTimeMillis()));ps.execute();ps.setInt(1, 0);ps.setDouble(2, java.lang.Double.NaN);ps.setLong(3, java.lang.Long.MIN_VALUE);ps.setInt(4, Integer.MIN_VALUE);ps.setInt(5, Short.MIN_VALUE);ps.setInt(6, 0);ps.setTimestamp(7, new java.sql.Timestamp(System.currentTimeMillis() + 1));ps.setTime(8, new java.sql.Time(System.currentTimeMillis() + 1));ps.setDate(9, new java.sql.Date(System.currentTimeMillis() + 1));ps.execute();ps.setInt(1, 0);ps.setDouble(2, java.lang.Double.POSITIVE_INFINITY);ps.setInt(4, Integer.MIN_VALUE);ps.setObject(5, Boolean.TRUE);ps.setBoolean(5, true);ps.setObject(5, new Short((short) 2), Types.SMALLINT);ps.setObject(6, new Integer(2), Types.TINYINT);ps.setObject(7, new java.sql.Date(System.currentTimeMillis() + 2));ps.setObject(8, new java.sql.Time(System.currentTimeMillis() + 2));ps.setObject(9, new java.sql.Timestamp(System.currentTimeMillis() + 2));ps.execute();ps.setObject(1, new Float(0), Types.INTEGER);ps.setObject(4, new Float(1), Types.INTEGER);ps.setDouble(2, java.lang.Double.NEGATIVE_INFINITY);ps.execute();ResultSet rs = stmnt.executeQuery(""SELECT d, f, l, i, s*2, t FROM t1"");boolean result = rs.next();value = rs.getDouble(2);int integerValue = rs.getInt(4);if (rs.next()) {value = rs.getDouble(2);wasEqual = Double.isNaN(value);integerValue = rs.getInt(4);integerValue = rs.getInt(1);}if (rs.next()) {value = rs.getDouble(2);wasEqual = wasEqual && value == Double.POSITIVE_INFINITY;}if (rs.next()) {value = rs.getDouble(2);wasEqual = wasEqual && value == Double.NEGATIVE_INFINITY;}rs = stmnt.executeQuery(""SELECT MAX(i) FROM t1"");if (rs.next()) {int max = rs.getInt(1);System.out.println(""Max value for i: "" + max);}{stmnt.execute(""drop table CDTYPE if exists"");rs = stmnt.executeQuery(""CREATE TABLE cdType (ID INTEGER NOT NULL, name VARCHAR(50), PRIMARY KEY(ID))"");rs = stmnt.executeQuery(""SELECT MAX(ID) FROM cdType"");if (rs.next()) {int max = rs.getInt(1);System.out.println(""Max value for ID: "" + max);} else {System.out.println(""Max value for ID not returned"");}stmnt.executeUpdate(""INSERT INTO cdType VALUES (10,'Test String');"");stmnt.executeQuery(""CALL IDENTITY();"");try {stmnt.executeUpdate(""INSERT INTO cdType VALUES (10,'Test String');"");} catch (SQLException e1) {stmnt.execute(""ROLLBACK"");connection.rollback();}}} catch (SQLException e) {fail(e.getMessage());}System.out.println(""testDoubleNaN complete"");assertEquals(true, wasEqual);}private String generateCode(String seed) {try {Security.addProvider(new FNVProvider());MessageDigest digest = MessageDigest.getInstance(""FNV-1a"");digest.update((seed + UUID.randomUUID().toString()).getBytes());byte[] hash1 = digest.digest();String sHash1 = ""m"" + (new String(LibraryBase64.encode(hash1))).replaceAll(""="", """").replaceAll(""-"", ""_"");return sHash1;} catch (Exception e) {e.printStackTrace();}return """";}private void copy(String inputPath, String outputPath, String name) {try {FileReader in = new FileReader(inputPath + name);FileWriter out = new FileWriter(outputPath + name);int c;while ((c = in.read()) != -1) out.write(c);in.close();out.close();} catch (FileNotFoundException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}}public void doIt() throws GlobalMapperTileTranslatorException {if (StringUtils.isEmpty(dstGuid)) throw new GlobalMapperTileTranslatorException(""GUID of destination map is empty"");if (srcDir == null || !srcDir.isDirectory() || !srcDir.exists()) throw new GlobalMapperTileTranslatorException(""Source directory is invalid"");try {int z;final XFile dstDir = new XFile(dstParentDir, dstGuid);dstDir.mkdir();int n = 1;if (srcDir.isDirectory() && srcDir.exists()) {for (int i = 0; i < 18; i++) {XFile zDir = new XFile(srcDir, ""z"" + i);if (!zDir.isDirectory() || !zDir.exists()) zDir = new XFile(srcDir, ""Z"" + i);if (zDir.isDirectory() && zDir.exists()) {for (String fileName : zDir.list()) {XFile file = new XFile(zDir, fileName);if (file.isFile() && file.exists() && file.canRead()) {final String[] yx;if (fileName.indexOf('.') > 0) {String[] fileExt = fileName.split(""\\."");yx = fileExt[0].split(""_"");} else yx = fileName.split(""_"");if (yx.length > 1) {final int x = Integer.valueOf(yx[1]);final int y = Integer.valueOf(yx[0]);z = 17 - i;XFileOutputStream out = null;XFileInputStream in = null;try {final XFile outFile = new XFile(dstDir, x + ""_"" + y + ""_"" + z);if (override || !(isExist(outFile, file))) {out = new XFileOutputStream(outFile);in = new XFileInputStream(file);IOUtils.copy(in, out);}if (n % 999 == 0) {logger.info(i + "" tiles were copied from 'incoming'"");synchronized (GlobalMapperTileTranslator.class) {GlobalMapperTileTranslator.class.wait(300);}}n++;} finally {if (out != null) {out.flush();out.close();}if (in != null) {in.close();}}}}}}}}} catch (Throwable e) {logger.error(""map tile importing has failed: "", e);throw new GlobalMapperTileTranslatorException(e);}}"	5
"public static String crypt(String strPassword, String strSalt) {try {StringTokenizer st = new StringTokenizer(strSalt, ""$"");st.nextToken();byte[] abyPassword = strPassword.getBytes();byte[] abySalt = st.nextToken().getBytes();MessageDigest _md = MessageDigest.getInstance(""MD5"");_md.update(abyPassword);_md.update(MAGIC.getBytes());_md.update(abySalt);MessageDigest md2 = MessageDigest.getInstance(""MD5"");md2.update(abyPassword);md2.update(abySalt);md2.update(abyPassword);byte[] abyFinal = md2.digest();for (int n = abyPassword.length; n > 0; n -= 16) {_md.update(abyFinal, 0, n > 16 ? 16 : n);}abyFinal = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };for (int j = 0, i = abyPassword.length; i != 0; i >>>= 1) {if ((i & 1) == 1) _md.update(abyFinal, j, 1); else _md.update(abyPassword, j, 1);}StringBuffer sbPasswd = new StringBuffer();sbPasswd.append(MAGIC);sbPasswd.append(new String(abySalt));sbPasswd.append('$');abyFinal = _md.digest();for (int n = 0; n < 1000; n++) {MessageDigest md3 = MessageDigest.getInstance(""MD5"");if ((n & 1) != 0) md3.update(abyPassword); else md3.update(abyFinal);if ((n % 3) != 0) md3.update(abySalt);if ((n % 7) != 0) md3.update(abyPassword);if ((n & 1) != 0) md3.update(abyFinal); else md3.update(abyPassword);abyFinal = md3.digest();}int[] anFinal = new int[] { (abyFinal[0] & 0x7f) | (abyFinal[0] & 0x80), (abyFinal[1] & 0x7f) | (abyFinal[1] & 0x80), (abyFinal[2] & 0x7f) | (abyFinal[2] & 0x80), (abyFinal[3] & 0x7f) | (abyFinal[3] & 0x80), (abyFinal[4] & 0x7f) | (abyFinal[4] & 0x80), (abyFinal[5] & 0x7f) | (abyFinal[5] & 0x80), (abyFinal[6] & 0x7f) | (abyFinal[6] & 0x80), (abyFinal[7] & 0x7f) | (abyFinal[7] & 0x80), (abyFinal[8] & 0x7f) | (abyFinal[8] & 0x80), (abyFinal[9] & 0x7f) | (abyFinal[9] & 0x80), (abyFinal[10] & 0x7f) | (abyFinal[10] & 0x80), (abyFinal[11] & 0x7f) | (abyFinal[11] & 0x80), (abyFinal[12] & 0x7f) | (abyFinal[12] & 0x80), (abyFinal[13] & 0x7f) | (abyFinal[13] & 0x80), (abyFinal[14] & 0x7f) | (abyFinal[14] & 0x80), (abyFinal[15] & 0x7f) | (abyFinal[15] & 0x80) };to64(sbPasswd, anFinal[0] << 16 | anFinal[6] << 8 | anFinal[12], 4);to64(sbPasswd, anFinal[1] << 16 | anFinal[7] << 8 | anFinal[13], 4);to64(sbPasswd, anFinal[2] << 16 | anFinal[8] << 8 | anFinal[14], 4);to64(sbPasswd, anFinal[3] << 16 | anFinal[9] << 8 | anFinal[15], 4);to64(sbPasswd, anFinal[4] << 16 | anFinal[10] << 8 | anFinal[5], 4);to64(sbPasswd, anFinal[11], 2);return sbPasswd.toString();} catch (NoSuchAlgorithmException e) {return null;}}public void writeData(String name, int items, int mznum, int mzscale, long tstart, long tdelta, int[] peaks) {PrintWriter file = getWriter(name + "".txt"");file.println(""999 9999"");file.println(""Doe, John"");file.println(""TEST Lab"");if (mzscale == 1) file.println(""PALMS Positive Ion Data""); else if (mzscale == -1) file.println(""PALMS Negative Ion Data""); else file.println(""PALMS GJIFJIGJ Ion Data"");file.println(""TEST Mission"");file.println(""1 1"");file.println(""1970 01 01 2008 07 09"");file.println(""0"");file.println(""TIME (UT SECONDS)"");file.println(mznum + 4);for (int i = 0; i < mznum + 4; i++) file.println(""1.0"");for (int i = 0; i < mznum + 4; i++) file.println(""9.9E29"");file.println(""TOTION total MCP signal (electron units)"");file.println(""HMASS high mass integral (fraction)"");file.println(""UNLIST (unlisted low mass peaks (fraction)"");file.println(""UFO unidentified peaks (fraction)"");for (int i = 1; i <= mznum; i++) file.println(""MS"" + i + "" (fraction)"");int header2length = 13;file.println(header2length);for (int i = 0; i < header2length; i++) file.println(""1.0"");for (int i = 0; i < header2length; i++) file.println(""9.9E29"");file.println(""AirCraftTime aircraft time (s)"");file.println(""INDEX index ()"");file.println(""SCAT scatter (V)"");file.println(""JMETER joule meter ()"");file.println(""ND neutral density (fraction)"");file.println(""SCALEA Mass scale intercept (us)"");file.println(""SCALEB mass scale slope (us)"");file.println(""NUMPKS number of peaks ()"");file.println(""CONF confidence (coded)"");file.println(""CAT preliminary category ()"");file.println(""AeroDiam aerodynamic diameter (um)"");file.println(""AeroDiam1p7 aero diam if density=1.7 (um)"");file.println(""TOTBACK total background subtracted (electron units)"");file.println(""0"");file.println(""0"");String nothing = ""0.000000"";for (int i = 0; i < items; i++) {file.println(tstart + (tdelta * i));file.println(tstart + (tdelta * i) - 3);file.println(i + 1);for (int j = 0; j < 15; j++) file.println(Math.random());boolean peaked = false;for (int k = 1; k <= mznum; k++) {for (int j = 0; j < peaks.length && !peaked; j++) if (k == peaks[j]) {double randData = (int) (1000000 * (j + 1));file.println(randData / 1000000);peaked = true;}if (!peaked) file.println(nothing);peaked = false;}}try {Scanner test = new Scanner(f);while (test.hasNext()) {System.out.println(test.nextLine());}System.out.println(""test"");} catch (Exception e) {}file.close();}public static InputStream getPropertyFileInputStream(String propertyFileURLStr) {InputStream in = null;String errmsg = ""Fatal error: Unable to open specified properties file: "" + propertyFileURLStr;try {URL url = new URL(propertyFileURLStr);in = url.openStream();} catch (IOException e) {throw new IllegalArgumentException(errmsg);}return (in);}private void createPropertyName(String objectID, String value, String propertyName, Long userID) throws JspTagException {rObject object = new rObject(new Long(objectID), userID);ClassProperty classProperty = new ClassProperty(propertyName, object.getClassName());String newValue = value;if (classProperty.getName().equals(""Password"")) {try {MessageDigest crypt = MessageDigest.getInstance(""MD5"");crypt.update(value.getBytes());byte digest[] = crypt.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < digest.length; i++) {hexString.append(hexDigit(digest[i]));}newValue = hexString.toString();crypt.reset();} catch (NoSuchAlgorithmException e) {System.err.println(""jspShop: Could not get instance of MD5 algorithm. Please fix this!"" + e.getMessage());e.printStackTrace();throw new JspTagException(""Error crypting password!: "" + e.getMessage());}}Properties properties = new Properties(new Long(objectID), userID);try {Property property = properties.create(classProperty.getID(), newValue);pageContext.setAttribute(getId(), property);} catch (CreateException e) {throw new JspTagException(""Could not create PropertyValue, CreateException: "" + e.getMessage());}}private void createProperty(String objectID, String value, String propertyID, Long userID) throws JspTagException {ClassProperty classProperty = new ClassProperty(new Long(propertyID));String newValue = value;if (classProperty.getName().equals(""Password"")) {try {MessageDigest crypt = MessageDigest.getInstance(""MD5"");crypt.update(value.getBytes());byte digest[] = crypt.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < digest.length; i++) {hexString.append(hexDigit(digest[i]));}newValue = hexString.toString();crypt.reset();} catch (NoSuchAlgorithmException e) {System.err.println(""jspShop: Could not get instance of MD5 algorithm. Please fix this!"" + e.getMessage());e.printStackTrace();throw new JspTagException(""Error crypting password!: "" + e.getMessage());}}Properties properties = new Properties(new Long(objectID), userID);try {Property property = properties.create(new Long(propertyID), newValue);pageContext.setAttribute(getId(), property);} catch (CreateException e) {throw new JspTagException(""Could not create PropertyValue, CreateException: "" + e.getMessage());}}public List<Datastream> getFiles(final String pFile) throws IOException {List<Datastream> tDatastreams = new ArrayList<Datastream>();new File(this.getTmpExtractDirName()).mkdir();ZipFile tZipFile = new ZipFile(pFile);Enumeration tEntries = tZipFile.entries();ZipEntry tEntry = null;File tFile = null;String tFileLocation = """";LocalDatastream tLocalDs = null;while (tEntries.hasMoreElements()) {tEntry = (ZipEntry) tEntries.nextElement();if (tEntry.isDirectory()) {continue;}tFileLocation = this.getTmpExtractDirName() + System.getProperty(""file.separator"") + tEntry.getName();tFile = new File(tFileLocation);LOG.debug(""Saving "" + tEntry.getName() + "" to "" + tFile.getPath());tFile.getParentFile().mkdirs();IOUtils.copy(tZipFile.getInputStream(tEntry), new FileOutputStream(tFile));tLocalDs = new LocalDatastream(tFile.getName().split(""\\."")[0], FindMimeType.getMimeType(tFile.getName().split(""\\."")[1]), tFileLocation);tLocalDs.setLabel(tEntry.getName());tDatastreams.add(tLocalDs);}return tDatastreams;}public static String SHA1(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(text.getBytes(""iso-8859-1""), 0, text.length());sha1hash = md.digest();return convertToHex(sha1hash);}public String getRec(String attribute, String url) {String arr[] = new String[3];String[] subarr = new String[6];String mdPrefix = """";String mdPrefixValue = """";String iden = """";String idenValue = """";String s = """";String arguments = attribute.substring(attribute.indexOf(""?"") + 1);System.out.println(""attributes"" + arguments);java.util.StringTokenizer st = new java.util.StringTokenizer(arguments, ""&"");int i = 0;int j = 0;int count = 0;int argCount = 0;java.util.Vector v1 = new java.util.Vector(1, 1);java.util.Vector v901 = new java.util.Vector(1, 1);java.util.Vector v902 = new java.util.Vector(1, 1);java.util.Vector v903 = new java.util.Vector(1, 1);java.util.Vector v904 = new java.util.Vector(1, 1);java.util.Vector v905 = new java.util.Vector(1, 1);java.util.Vector v906 = new java.util.Vector(1, 1);java.util.Vector v907 = new java.util.Vector(1, 1);java.util.Vector v908 = new java.util.Vector(1, 1);java.util.Vector v3 = new java.util.Vector(1, 1);java.util.Vector vData = new java.util.Vector(1, 1);java.util.Vector vSet = new java.util.Vector(1, 1);java.util.Vector v856 = new java.util.Vector(1, 1);Resdate dt = new Resdate();try {while (st.hasMoreElements()) {arr[i] = st.nextElement().toString();java.util.StringTokenizer subSt = new java.util.StringTokenizer(arr[i], ""="");while (subSt.hasMoreElements()) {subarr[j] = subSt.nextElement().toString();System.out.println("" arga are... "" + subarr[j]);j++;}i++;count++;}} catch (Exception e) {e.printStackTrace();}Namespace oains = Namespace.getNamespace(""http://www.openarchives.org/OAI/2.0/"");Element root = new Element(""OAI-PMH"", oains);Namespace xsi = Namespace.getNamespace(""xsi"", ""http://www.w3.org/2001/XMLSchema-instance"");Attribute schemaLocation = new Attribute(""schemaLocation"", ""http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd"", xsi);root.setAttribute(schemaLocation);root.addNamespaceDeclaration(xsi);Document doc = new Document(root);Element responseDate = new Element(""responseDate"", oains);root.addContent(responseDate);responseDate.setText(dt.getDate());Element request = new Element(""request"", oains);request.setAttribute(""verb"", ""GetRecord"");int idenCount = 0, mdfCount = 0;for (int k = 2; k < j; k += 2) {System.out.println("" arg key "" + subarr[k]);if (subarr[k].equals(""metadataPrefix"")) {mdPrefix = ""metadataPrefix"";mdfCount++;mdPrefixValue = subarr[k + 1];request.setAttribute(mdPrefix, mdPrefixValue);System.out.println(subarr[k] + ""="");System.out.println(mdPrefixValue);argCount++;} else if (subarr[k].equals(""identifier"")) {iden = ""identifier"";idenCount++;idenValue = subarr[k + 1];request.setAttribute(iden, idenValue);System.out.println(subarr[k] + ""="");System.out.println(idenValue);argCount++;}}request.setText(url);root.addContent(request);System.out.println(""count"" + argCount);if (mdfCount == 1 && idenCount == 1 && (mdPrefixValue.equals(""marc21"") || mdPrefixValue.equals(""oai_dc"") || mdPrefixValue.equals(""mods""))) {try {v1 = ((ejb.bprocess.OAIPMH.ListGetRecordsHome) ejb.bprocess.util.HomeFactory.getInstance().getRemoteHome(""ListGetRecords"")).create().getRecord(idenValue, mdPrefixValue);} catch (Exception ex) {ex.printStackTrace();}if (v1.size() == 0) {System.out.println(""vector size is empty"");Errors e1 = new Errors();Element errorXML = e1.describeError(3, attribute, url, ""GetRecord"");root.addContent(errorXML);} else {Element GetRecord = new Element(""GetRecord"", oains);root.addContent(GetRecord);Element Record = new Element(""record"", oains);Element metadata = new Element(""metadata"", oains);Element head = new Element(""header"", oains);System.out.println(""size i  s "" + v1.size());for (int v = 0; v < v1.size(); v = v + 13) {vSet = (java.util.Vector) v1.elementAt(v + 1);Element ident = new Element(""identifier"", oains);ident.setText(idenValue);head.addContent(ident);Element dates = new Element(""datestamp"", oains);dates.setText(v1.elementAt(v).toString().substring(0, 10));head.addContent(dates);for (int t = 0; t < vSet.size(); t++) {Element setSpec = new Element(""setSpec"", oains);System.out.println(""set elem"" + vSet.elementAt(t).toString());setSpec.setText(vSet.elementAt(t).toString());head.addContent(setSpec);}Element marcroot = new Element(""record"", ""marc"", ""http://www.loc.gov/MARC21/slim"");Namespace xsimarc = Namespace.getNamespace(""xsi"", ""http://www.w3.org/2001/XMLSchema-instance"");marcroot.addNamespaceDeclaration(xsimarc);Attribute schemaLocationmarc = new Attribute(""schemaLocation"", ""http://www.loc.gov/MARC21/slim http://www.loc.gov/standards/marcxml/schema/MARC21slim.xsd"", xsimarc);marcroot.setAttribute(schemaLocationmarc);marcroot.setAttribute(""type"", ""Bibliographic"");v3 = (java.util.Vector) v1.elementAt(v + 10);java.util.Vector vL = (java.util.Vector) v3.elementAt(0);org.jdom.Element lead = new org.jdom.Element(""leader"", ""marc"", ""http://www.loc.gov/MARC21/slim"");lead.setText(vL.elementAt(0).toString());marcroot.addContent(lead);java.util.Vector vC = (java.util.Vector) v3.elementAt(1);for (int u = 0; u < vC.size(); u = u + 2) {org.jdom.Element ct = new org.jdom.Element(""controlfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");ct.setAttribute(""tag"", vC.elementAt(u).toString());ct.setText(vC.elementAt(u + 1).toString());marcroot.addContent(ct);}v901 = (java.util.Vector) v1.elementAt(v + 2);for (int k = 0; k < v901.size(); k++) {org.jdom.Element datafield = new org.jdom.Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield.setAttribute(""tag"", ""901"");datafield.setAttribute(""ind1"", ""0"");datafield.setAttribute(""ind2"", ""0"");java.util.Vector vecSub = new java.util.Vector(1, 1);vecSub = (java.util.Vector) v901.elementAt(k);System.out.println(""in getrec sub "");System.out.println(""sub 901 size"" + vecSub.size());for (int k1 = 0; k1 < vecSub.size(); k1 = k1 + 2) {org.jdom.Element subfield = new org.jdom.Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", vecSub.elementAt(k1).toString());subfield.setText(vecSub.elementAt(k1 + 1).toString());datafield.addContent(subfield);}marcroot.addContent(datafield);}v902 = (java.util.Vector) v1.elementAt(v + 3);for (int l = 0; l < v902.size(); l++) {Element datafield1 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield1.setAttribute(""tag"", ""902"");datafield1.setAttribute(""ind1"", ""0"");datafield1.setAttribute(""ind2"", ""0"");java.util.Vector vecSub1 = new java.util.Vector(1, 1);vecSub1 = (java.util.Vector) v902.elementAt(l);for (int b = 0; b < vecSub1.size(); b = b + 2) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", vecSub1.elementAt(b).toString());subfield.setText(vecSub1.elementAt(b + 1).toString());datafield1.addContent(subfield);}marcroot.addContent(datafield1);}v903 = (java.util.Vector) v1.elementAt(v + 4);Element datafield1 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield1.setAttribute(""tag"", ""903"");datafield1.setAttribute(""ind1"", ""0"");datafield1.setAttribute(""ind2"", ""0"");for (int l = 0; l < v903.size(); l++) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", ""a"");subfield.setText(v903.elementAt(l).toString());datafield1.addContent(subfield);}marcroot.addContent(datafield1);v904 = (java.util.Vector) v1.elementAt(v + 5);Element datafield21 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield21.setAttribute(""tag"", ""904"");datafield21.setAttribute(""ind1"", ""0"");datafield21.setAttribute(""ind2"", ""0"");for (int l = 0; l < v904.size(); l++) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", ""a"");subfield.setText(v904.elementAt(l).toString());datafield21.addContent(subfield);}marcroot.addContent(datafield21);v905 = (java.util.Vector) v1.elementAt(v + 6);Element datafield31 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield31.setAttribute(""tag"", ""905"");datafield31.setAttribute(""ind1"", ""0"");datafield31.setAttribute(""ind2"", ""0"");for (int l = 0; l < v905.size(); l++) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", ""a"");subfield.setText(v905.elementAt(l).toString());datafield31.addContent(subfield);}marcroot.addContent(datafield31);v906 = (java.util.Vector) v1.elementAt(v + 7);Element datafield4 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield4.setAttribute(""tag"", ""906"");datafield4.setAttribute(""ind1"", ""0"");datafield4.setAttribute(""ind2"", ""0"");for (int l = 0; l < v906.size(); l++) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", ""a"");subfield.setText(v906.elementAt(l).toString());datafield4.addContent(subfield);}marcroot.addContent(datafield4);v907 = (java.util.Vector) v1.elementAt(v + 8);for (int l = 0; l < v907.size(); l++) {Element datafield5 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield5.setAttribute(""tag"", ""907"");datafield5.setAttribute(""ind1"", ""0"");datafield5.setAttribute(""ind2"", ""0"");java.util.Vector vecSub1 = new java.util.Vector(1, 1);vecSub1 = (java.util.Vector) v907.elementAt(l);for (int b = 0; b < vecSub1.size(); b = b + 2) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", vecSub1.elementAt(b).toString());subfield.setText(vecSub1.elementAt(b + 1).toString());datafield5.addContent(subfield);}marcroot.addContent(datafield5);}v908 = (java.util.Vector) v1.elementAt(v + 9);for (int l = 0; l < v908.size(); l++) {Element datafield6 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield6.setAttribute(""tag"", ""908"");datafield6.setAttribute(""ind1"", ""0"");datafield6.setAttribute(""ind2"", ""0"");java.util.Vector vecSub1 = new java.util.Vector(1, 1);vecSub1 = (java.util.Vector) v908.elementAt(l);for (int b = 0; b < vecSub1.size(); b = b + 2) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", vecSub1.elementAt(b).toString());subfield.setText(vecSub1.elementAt(b + 1).toString());datafield6.addContent(subfield);}marcroot.addContent(datafield6);}vData = (java.util.Vector) v1.elementAt(v + 11);for (int m = 0; m < vData.size(); m = m + 2) {Element datafield2 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield2.setAttribute(""tag"", vData.elementAt(m).toString());datafield2.setAttribute(""ind1"", ""0"");datafield2.setAttribute(""ind2"", ""0"");java.util.Vector vSub = new java.util.Vector(1, 1);vSub = (java.util.Vector) vData.elementAt(m + 1);for (int n = 0; n < vSub.size(); n = n + 2) {Element subfield = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield.setAttribute(""code"", vSub.elementAt(n).toString());subfield.setText(vSub.elementAt(n + 1).toString());datafield2.addContent(subfield);}marcroot.addContent(datafield2);}v856 = (java.util.Vector) v1.elementAt(v + 12);for (int l = 0; l < v856.size(); l = l + 2) {Element datafield3 = new Element(""datafield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");datafield3.setAttribute(""tag"", ""856"");datafield3.setAttribute(""ind1"", ""0"");datafield3.setAttribute(""ind2"", ""0"");Element subfield1 = new Element(""subfield"", ""marc"", ""http://www.loc.gov/MARC21/slim"");subfield1.setAttribute(""code"", v856.elementAt(l).toString());subfield1.setText(v856.elementAt(l + 1).toString());datafield3.addContent(subfield1);marcroot.addContent(datafield3);}if (mdPrefixValue.equals(""oai_dc"")) {try {Transformer transformer = TransformerFactory.newInstance().newTransformer(new StreamSource(ejb.bprocess.util.NewGenLibRoot.getRoot() + java.io.File.separator + ""StyleSheets"" + java.io.File.separator + ""MARC21slim2OAIDC.xsl""));Document docmarc = new Document(marcroot);JDOMSource in = new JDOMSource(docmarc);JDOMResult out = new JDOMResult();transformer.transform(in, out);Document doc2 = out.getDocument();org.jdom.output.XMLOutputter out1 = new org.jdom.output.XMLOutputter();out1.setTextTrim(true);out1.setIndent(""  "");out1.setNewlines(true);String s1 = out1.outputString(doc2);System.out.println(""dublin core is"" + s1);Element dcroot1 = doc2.getRootElement();Namespace xsi1 = Namespace.getNamespace(""xsi"", ""http://www.w3.org/2001/XMLSchema-instance"");Namespace oainsdc = Namespace.getNamespace(""http://www.openarchives.org/OAI/2.0/oai_dc/"");Element dcroot = new Element(""dc"", ""oai_dc"", ""http://www.openarchives.org/OAI/2.0/oai_dc/"");Namespace dcns = Namespace.getNamespace(""dc"", ""http://purl.org/dc/elements/1.1/"");dcroot.addNamespaceDeclaration(dcns);dcroot.addNamespaceDeclaration(xsi1);Attribute schemaLocationdc = new Attribute(""schemaLocation"", ""http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"", xsi1);dcroot.setAttribute(schemaLocationdc);java.util.List dcList = doc2.getRootElement().getChildren();for (int g = 0; g < dcList.size(); g++) {Element dcElem1 = (org.jdom.Element) dcList.get(g);Element dcElem = new Element(dcElem1.getName(), ""dc"", ""http://purl.org/dc/elements/1.1/"");dcElem.setText(dcElem1.getText());dcroot.addContent(dcElem);}metadata.addContent(dcroot);} catch (TransformerException e) {e.printStackTrace();}} else if (mdPrefixValue.equals(""mods"")) {try {java.util.Properties systemSettings = System.getProperties();java.util.prefs.Preferences prefs = java.util.prefs.Preferences.systemRoot();if (prefs.getBoolean(""useproxy"", false)) {systemSettings.put(""proxySet"", ""true"");systemSettings.put(""proxyHost"", prefs.get(""proxyservername"", """"));systemSettings.put(""proxyPort"", prefs.get(""proxyport"", """"));systemSettings.put(""http.proxyHost"", prefs.get(""proxyservername"", """"));systemSettings.put(""http.proxyPort"", prefs.get(""proxyport"", """"));}String urltext = """";Transformer transformer = null;urltext = ""http://www.loc.gov/standards/mods/v3/MARC21slim2MODS3.xsl"";java.net.URL url1 = new java.net.URL(urltext);java.net.URLConnection urlconn = url1.openConnection();urlconn.setDoInput(true);transformer = TransformerFactory.newInstance().newTransformer(new StreamSource(urlconn.getInputStream()));Document docmarc = new Document(marcroot);JDOMSource in = new JDOMSource(docmarc);JDOMResult out = new JDOMResult();transformer.transform(in, out);Document doc2 = out.getDocument();org.jdom.output.XMLOutputter out1 = new org.jdom.output.XMLOutputter();out1.setTextTrim(true);out1.setIndent(""  "");out1.setNewlines(true);String s1 = out1.outputString(doc2);Namespace xsi1 = Namespace.getNamespace(""xlink"", ""http://www.w3.org/1999/xlink"");Namespace oainsdc = Namespace.getNamespace(""http://www.openarchives.org/OAI/2.0/oai_dc/"");Element mroot = new Element(""mods"", ""http://www.loc.gov/mods/v3"");Namespace dcns = Namespace.getNamespace(""http://www.loc.gov/mods/v3"");mroot.addNamespaceDeclaration(xsi1);Attribute schemaLocationdc = new Attribute(""schemaLocation"", ""http://www.loc.gov/mods/v3 http://www.loc.gov/standards/mods/v3/mods-3-0.xsd"", xsi1);mroot.setAttribute(schemaLocationdc);java.util.List dcList = doc2.getRootElement().getChildren();for (int g = 0; g < dcList.size(); g++) {Element mElem1 = (org.jdom.Element) dcList.get(g);Element mElem = new Element(mElem1.getName(), ""http://www.loc.gov/mods/v3"");if (mElem1.hasChildren()) {java.util.List mList1 = mElem1.getChildren();for (int f = 0; f < mList1.size(); f++) {Element mElem2 = (org.jdom.Element) mList1.get(f);Element mElem3 = new Element(mElem2.getName(), ""http://www.loc.gov/mods/v3"");if (mElem2.hasChildren()) {java.util.List mList2 = mElem2.getChildren();for (int h = 0; h < mList2.size(); h++) {Element mElem4 = (org.jdom.Element) mList1.get(h);Element mElem5 = new Element(mElem4.getName(), ""http://www.loc.gov/mods/v3"");mElem5.setText(mElem4.getText());mElem3.addContent(mElem5);}}if (mElem2.hasChildren() == false) {mElem3.setText(mElem2.getText());}mElem.addContent(mElem3);}}if (mElem1.hasChildren() == false) {mElem.setText(mElem1.getText());}mroot.addContent(mElem);}metadata.addContent(mroot);} catch (Exception e) {e.printStackTrace();}}if (mdPrefixValue.equals(""marc21"")) {metadata.addContent(marcroot);} else if (mdPrefixValue.equals(""oai_dc"")) {}}Record.addContent(head);Record.addContent(metadata);GetRecord.addContent(Record);}} else if (argCount <= 2) {if (idenCount < 1 && mdfCount < 1) {Errors e1 = new Errors();Element errorXML = e1.describeError(2, ""missing arguments: identifier,metadataprefix"", url, ""GetRecord"");root.addContent(errorXML);} else if (idenCount < 1) {Errors e1 = new Errors();Element errorXML = e1.describeError(2, ""missing argument: identifier"", url, ""GetRecord"");root.addContent(errorXML);} else if (mdfCount < 1) {Errors e1 = new Errors();Element errorXML = e1.describeError(2, ""missing argument: metadataprefix"", url, ""GetRecord"");root.addContent(errorXML);} else if (argCount > 2) {Errors e1 = new Errors();Element errorXML = e1.describeError(2, ""more number of arguments"", url, ""GetRecord"");root.addContent(errorXML);} else {System.out.println(""no format"");Errors e1 = new Errors();Element errorXML = e1.describeError(6, """", url, ""GetRecord"");root.addContent(errorXML);}}XMLOutputter out = new XMLOutputter();out.setIndent("" "");out.setNewlines(true);s = out.outputString(doc);return s;}protected void configure() {Enumeration<URL> resources = null;try {resources = classLoader.getResources(resourceName);} catch (IOException e) {binder().addError(e.getMessage(), e);return;}int resourceCount = 0;while (resources.hasMoreElements()) {URL url = resources.nextElement();log.debug(url + "" ..."");try {InputStream stream = url.openStream();Properties props = new Properties();props.load(stream);resourceCount++;addComponentsFromProperties(props, classLoader);} catch (IOException e) {binder().addError(e.getMessage(), e);}}log.info(""Added components from "" + resourceCount + "" resources."");}public String upload() {System.out.println(imgFile);String destDir = ""E:\\ganymede_workspace\\training01\\web\\user_imgs\\map_bg.jpg"";FileOutputStream fos;try {fos = new FileOutputStream(new File(destDir));IOUtils.copy(new FileInputStream(imgFile), fos);IOUtils.closeQuietly(fos);} catch (FileNotFoundException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return ""show"";}"	5
"public File download(Show s) throws Exception {Collection<String> exclude = Util.toCollection((List<String>) this.exclude.clone(), Util.nonNullString(s.getExclude()).split("",""));URL url = new URL(""http://v3.newzbin.com/search/"" + buildQuery(s));BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = in.readLine()) != null) {if (!Util.containsNone(line, exclude)) continue;String id = line.split(""\"",\"""", 3)[1];File downloaded = download(s, id);if (downloaded != null) return downloaded;}return null;}private static MapEntry<String, Properties> loadFpmConf() throws ConfigurationReadException {MapEntry<String, Properties> ret = null;Scanner sc = new Scanner(CONF_PATHS).useDelimiter(SEP_P);String prev = """";while (sc.hasNext() && !hasLoaded) {Properties fpmConf = null;boolean relative = false;String path = sc.next();if (path.startsWith(PREV_P)) {path = path.replace(PREV_P, prev.substring(0, prev.length() - 1));} else if (path.startsWith(REL_P)) {path = path.replace(REL_P + FS, """");relative = true;} else if (path.contains(HOME_P)) {path = path.replace(HOME_P, USER_HOME);}prev = path;path = path.concat(MAIN_CONF_FILE);try {InputStream is = null;if (relative) {is = ClassLoader.getSystemResourceAsStream(path);path = getSystemConfDir();Strings.getOne().createPath(path);path += MAIN_CONF_FILE;FileOutputStream os = new FileOutputStream(path);IOUtils.copy(is, os);os.flush();os.close();os = null;} else {is = new FileInputStream(path);}fpmConf = new Properties();fpmConf.load(is);if (fpmConf.isEmpty()) {throw new ConfigurationReadException();}ret = new MapEntry<String, Properties>(path, fpmConf);hasLoaded = true;} catch (FileNotFoundException e) {fpmConf = null;singleton = null;hasLoaded = false;} catch (IOException e) {throw new ConfigurationReadException();}}return ret;}@Overrideprotected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {String rewrittenQueryString = URLDecoder.decode(request.getRequestURI(), ""UTF-8"").replaceFirst(""^.*?\\/(id:.*)\\/.*?$"", ""$1"");logger.debug(""rewrittenQueryString: "" + rewrittenQueryString);URL rewrittenUrl = new URL(fedoraUrl + rewrittenQueryString);logger.debug(""rewrittenUrl: "" + rewrittenUrl.getProtocol() + ""://"" + rewrittenUrl.getHost() + "":"" + rewrittenUrl.getPort() + rewrittenUrl.getFile());HttpURLConnection httpURLConnection = (HttpURLConnection) rewrittenUrl.openConnection();HttpURLConnection.setFollowRedirects(false);httpURLConnection.connect();response.setStatus(httpURLConnection.getResponseCode());logger.debug(""[status="" + httpURLConnection.getResponseCode() + ""]"");logger.debug(""[headers]"");for (Entry<String, List<String>> header : httpURLConnection.getHeaderFields().entrySet()) {if (header.getKey() != null) {for (String value : header.getValue()) {if (value != null) {logger.debug(header.getKey() + "": "" + value);if (!header.getKey().equals(""Server"") && !header.getKey().equals(""Transfer-Encoding"")) {response.addHeader(header.getKey(), value);}}}}}logger.debug(""[/headers]"");InputStream inputStream = httpURLConnection.getInputStream();OutputStream outputStream = response.getOutputStream();IOUtils.copy(inputStream, outputStream);}private String readFile(String urlFileString) throws IOException {URL url = new URL(urlFileString);VizDebugUtils.debug(""url: "" + url.toString());InputStream stream = url.openStream();Reader reader = new InputStreamReader(stream, ""iso-8859-1"");StringWriter writer = new StringWriter();StreamUtils.transfer(reader, writer);stream.close();return writer.toString();}public static String md5Encode16(String s) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(s.getBytes(""utf-8""));byte b[] = md.digest();int i;StringBuilder buf = new StringBuilder("""");for (int offset = 0; offset < b.length; offset++) {i = b[offset];if (i < 0) i += 256;if (i < 16) buf.append(""0"");buf.append(Integer.toHexString(i));}return buf.toString().substring(8, 24);} catch (Exception e) {throw new RuntimeException(e);}}InputStream selectSource(String item) {if (item == null) {item = ""http://pushnpop.net:8912/subpop.ogg"";}if (item.endsWith("".pls"")) {item = fetch_pls(item);if (item == null) {return null;}} else if (item.endsWith("".m3u"")) {item = fetch_m3u(item);if (item == null) {return null;}}if (!item.endsWith("".ogg"")) {return null;}InputStream is = null;URLConnection urlc = null;try {URL url = null;if (running_as_applet) {url = new URL(getCodeBase(), item);} else {url = new URL(item);}urlc = url.openConnection();is = urlc.getInputStream();current_source = url.getProtocol() + ""://"" + url.getHost() + "":"" + url.getPort() + url.getFile();} catch (Exception ee) {System.err.println(ee);}if (is == null && !running_as_applet) {try {is = new FileInputStream(System.getProperty(""user.dir"") + System.getProperty(""file.separator"") + item);current_source = null;} catch (Exception ee) {System.err.println(ee);}}if (is == null) {return null;}System.out.println(""Select: "" + item);{boolean find = false;for (int i = 0; i < cb.getItemCount(); i++) {String foo = (String) (cb.getItemAt(i));if (item.equals(foo)) {find = true;break;}}if (!find) {cb.addItem(item);}}int i = 0;String s = null;String t = null;udp_port = -1;udp_baddress = null;while (urlc != null && true) {s = urlc.getHeaderField(i);t = urlc.getHeaderFieldKey(i);if (s == null) {break;}i++;if (t != null && t.equals(""udp-port"")) {try {udp_port = Integer.parseInt(s);} catch (Exception ee) {System.err.println(ee);}} else if (t != null && t.equals(""udp-broadcast-address"")) {udp_baddress = s;}}return is;}String fetch_pls(String pls) {InputStream pstream = null;if (pls.startsWith(""http://"")) {try {URL url = null;if (running_as_applet) {url = new URL(getCodeBase(), pls);} else {url = new URL(pls);}URLConnection urlc = url.openConnection();pstream = urlc.getInputStream();} catch (Exception ee) {System.err.println(ee);return null;}}if (pstream == null && !running_as_applet) {try {pstream = new FileInputStream(System.getProperty(""user.dir"") + System.getProperty(""file.separator"") + pls);} catch (Exception ee) {System.err.println(ee);return null;}}String line = null;while (true) {try {line = readline(pstream);} catch (Exception e) {}if (line == null) {break;}if (line.startsWith(""File1="")) {byte[] foo = line.getBytes();int i = 6;for (; i < foo.length; i++) {if (foo[i] == 0x0d) {break;}}return line.substring(6, i);}}return null;}String fetch_m3u(String m3u) {InputStream pstream = null;if (m3u.startsWith(""http://"")) {try {URL url = null;if (running_as_applet) {url = new URL(getCodeBase(), m3u);} else {url = new URL(m3u);}URLConnection urlc = url.openConnection();pstream = urlc.getInputStream();} catch (Exception ee) {System.err.println(ee);return null;}}if (pstream == null && !running_as_applet) {try {pstream = new FileInputStream(System.getProperty(""user.dir"") + System.getProperty(""file.separator"") + m3u);} catch (Exception ee) {System.err.println(ee);return null;}}String line = null;while (true) {try {line = readline(pstream);} catch (Exception e) {}if (line == null) {break;}return line;}return null;}void loadPlaylist() {if (running_as_applet) {String s = null;for (int i = 0; i < 10; i++) {s = getParameter(""jorbis.player.play."" + i);if (s == null) {break;}playlist.addElement(s);}}if (playlistfile == null) {return;}try {InputStream is = null;try {URL url = null;if (running_as_applet) {url = new URL(getCodeBase(), playlistfile);} else {url = new URL(playlistfile);}URLConnection urlc = url.openConnection();is = urlc.getInputStream();} catch (Exception ee) {}if (is == null && !running_as_applet) {try {is = new FileInputStream(System.getProperty(""user.dir"") + System.getProperty(""file.separator"") + playlistfile);} catch (Exception ee) {}}if (is == null) {return;}while (true) {String line = readline(is);if (line == null) {break;}byte[] foo = line.getBytes();for (int i = 0; i < foo.length; i++) {if (foo[i] == 0x0d) {line = new String(foo, 0, i);break;}}playlist.addElement(line);}} catch (Exception e) {System.out.println(e);}}protected Control createContents(Composite parent) {this.getShell().setText(""Chisio"");this.getShell().setSize(800, 600);this.getShell().setImage(ImageDescriptor.createFromFile(ChisioMain.class, ""icon/chisio-icon.png"").createImage());Composite composite = new Composite(parent, SWT.BORDER);composite.setLayout(new FillLayout());this.viewer = new ScrollingGraphicalViewer();this.viewer.setEditDomain(this.editDomain);this.viewer.createControl(composite);this.viewer.getControl().setBackground(ColorConstants.white);this.rootEditPart = new ChsScalableRootEditPart();this.viewer.setRootEditPart(this.rootEditPart);this.viewer.setEditPartFactory(new ChsEditPartFactory());((FigureCanvas) this.viewer.getControl()).setScrollBarVisibility(FigureCanvas.ALWAYS);this.viewer.addDropTargetListener(new ChsFileDropTargetListener(this.viewer, this));this.viewer.addDragSourceListener(new ChsFileDragSourceListener(this.viewer));CompoundModel model = new CompoundModel();model.setAsRoot();this.viewer.setContents(model);this.viewer.getControl().addMouseListener(this);this.popupManager = new PopupManager(this);this.popupManager.setRemoveAllWhenShown(true);this.popupManager.addMenuListener(new IMenuListener() {public void menuAboutToShow(IMenuManager manager) {ChisioMain.this.popupManager.createActions(manager);}});KeyHandler keyHandler = new KeyHandler();ActionRegistry a = new ActionRegistry();keyHandler.put(KeyStroke.getPressed(SWT.DEL, 127, 0), new DeleteAction(this.viewer));keyHandler.put(KeyStroke.getPressed('+', SWT.KEYPAD_ADD, 0), new ZoomAction(this, 1, null));keyHandler.put(KeyStroke.getPressed('-', SWT.KEYPAD_SUBTRACT, 0), new ZoomAction(this, -1, null));keyHandler.put(KeyStroke.getPressed(SWT.F2, 0), a.getAction(GEFActionConstants.DIRECT_EDIT));this.viewer.setKeyHandler(keyHandler);this.higlightColor = ColorConstants.yellow;this.createCombos();return composite;}"	5
"public void copy(File s, File t) throws IOException {FileChannel in = (new FileInputStream(s)).getChannel();FileChannel out = (new FileOutputStream(t)).getChannel();in.transferTo(0, s.length(), out);in.close();out.close();}public String upload() throws IOException {int idx = docIndex.incrementAndGet();String tmpName = ""namefinder/doc_"" + idx + ""__"" + fileFileName;File tmpFile = tmpFile(tmpName);if (tmpFile.exists()) {org.apache.commons.io.FileUtils.deleteQuietly(tmpFile);}org.apache.commons.io.FileUtils.touch(tmpFile);InputStream fileStream = new FileInputStream(file);OutputStream bos = new FileOutputStream(tmpFile);IOUtils.copy(fileStream, bos);bos.close();fileStream.close();return tmpUrl(tmpName);}public static void main(String[] args) {try {MessageDigest sha1 = MessageDigest.getInstance(""SHA1"");sha1.update(""Test"".getBytes());byte[] digest = sha1.digest();for (int i = 0; i < digest.length; i++) {System.err.print(Integer.toHexString(0xFF & digest[i]));}} catch (NoSuchAlgorithmException e) {e.printStackTrace();}}public static String MD5(String text) {MessageDigest md;try {md = MessageDigest.getInstance(""MD5"");byte[] md5hash = new byte[32];md.update(text.getBytes(""iso-8859-1""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);} catch (NoSuchAlgorithmException ex) {ex.printStackTrace();return text;} catch (UnsupportedEncodingException ex) {ex.printStackTrace();return text;}}@Overridepublic T[] sort(T[] values) {super.compareTimes = 0;for (int i = 0; i < values.length; i++) {for (int j = 0; j < values.length - i - 1; j++) {super.compareTimes++;if (values[j].compareTo(values[j + 1]) > 0) {T temp = values[j];values[j] = values[j + 1];values[j + 1] = temp;}}}return values;}@SuppressWarnings({ ""serial"", ""unchecked"" })private static IProject createCopyProject(IProject project, String pName, IWorkspace ws, IProgressMonitor pm) throws Exception {pm.beginTask(""Creating temp project"", 1);final IPath destination = new Path(pName);final IJavaProject oldJavaproj = JavaCore.create(project);final IClasspathEntry[] classPath = oldJavaproj.getRawClasspath();final IProject newProject = ResourcesPlugin.getWorkspace().getRoot().getProject(pName);newProject.create(null);newProject.open(null);final IProjectDescription desc = newProject.getDescription();desc.setNatureIds(new String[] { JavaCore.NATURE_ID });newProject.setDescription(desc, null);final List<IClasspathEntry> newClassPath = new ArrayList<IClasspathEntry>();for (final IClasspathEntry cEntry : classPath) {switch(cEntry.getEntryKind()) {case IClasspathEntry.CPE_SOURCE:System.out.println(""Source folder "" + cEntry.getPath());newClassPath.add(copySourceFolder(project, newProject, cEntry, destination));break;case IClasspathEntry.CPE_LIBRARY:System.out.println(""library folder "" + cEntry.getPath());newClassPath.add(cEntry);break;case IClasspathEntry.CPE_PROJECT:System.out.println(""project folder "" + cEntry.getPath());newClassPath.add(cEntry);break;case IClasspathEntry.CPE_VARIABLE:System.out.println(""variable folder "" + cEntry.getPath());newClassPath.add(cEntry);break;default:System.out.println(""container folder "" + cEntry.getPath());newClassPath.add(cEntry);}}copyDir(project.getLocation().toString(), ""/translator"", newProject.getLocation().toString(), """", new ArrayList<String>() {{add(""generated"");add(""classes"");add("".svn"");}});newProject.refreshLocal(IResource.DEPTH_INFINITE, pm);newProject.build(IncrementalProjectBuilder.AUTO_BUILD, pm);newProject.touch(pm);final IJavaProject javaproj = JavaCore.create(newProject);javaproj.setOutputLocation(new Path(""/"" + newProject.getName() + ""/classes/bin""), null);javaproj.setRawClasspath(newClassPath.toArray(new IClasspathEntry[newClassPath.size()]), pm);final Map opts = oldJavaproj.getOptions(true);javaproj.setOptions(opts);javaproj.makeConsistent(pm);javaproj.save(pm, true);return newProject;}@Testpublic void testLoadHttpGzipped() throws Exception {String url = HTTP_GZIPPED;LoadingInfo loadingInfo = Utils.openFileObject(fsManager.resolveFile(url));InputStream contentInputStream = loadingInfo.getContentInputStream();byte[] actual = IOUtils.toByteArray(contentInputStream);byte[] expected = IOUtils.toByteArray(new GZIPInputStream(new URL(url).openStream()));assertEquals(expected.length, actual.length);}@SuppressWarnings(""unchecked"")protected void processDownloadAction(HttpServletRequest request, HttpServletResponse response) throws Exception {File transformationFile = new File(xslBase, ""file-info.xsl"");HashMap<String, Object> params = new HashMap<String, Object>();params.putAll(request.getParameterMap());params.put(""{"" + Definitions.CONFIGURATION_NAMESPACE + ""}configuration"", configuration);params.put(""{"" + Definitions.REQUEST_NAMESPACE + ""}request"", request);params.put(""{"" + Definitions.RESPONSE_NAMESPACE + ""}response"", response);params.put(""{"" + Definitions.SESSION_NAMESPACE + ""}session"", request.getSession());params.put(""{"" + Definitions.INFOFUZE_NAMESPACE + ""}development-mode"", new Boolean(Config.getInstance().isDevelopmentMode()));Transformer transformer = new Transformer();transformer.setTransformationFile(transformationFile);transformer.setParams(params);transformer.setTransformMode(TransformMode.NORMAL);transformer.setConfiguration(configuration);transformer.setErrorListener(new TransformationErrorListener(response));transformer.setLogInfo(false);DataSourceIf dataSource = new NullSource();Document fileInfoDoc = XmlUtils.getEmptyDOM();DOMResult result = new DOMResult(fileInfoDoc);transformer.transform((Source) dataSource, result);Element documentElement = fileInfoDoc.getDocumentElement();if (documentElement.getLocalName().equals(""null"")) {response.sendError(HttpServletResponse.SC_UNAUTHORIZED);return;}InputStream is = null;try {XPath xpath = XPathFactory.newInstance().newXPath();String sourceType = XPathUtils.getStringValue(xpath, ""source-type"", documentElement, null);String location = XPathUtils.getStringValue(xpath, ""location"", documentElement, null);String fileName = XPathUtils.getStringValue(xpath, ""file-name"", documentElement, null);String mimeType = XPathUtils.getStringValue(xpath, ""mime-type"", documentElement, null);String encoding = XPathUtils.getStringValue(xpath, ""encoding"", documentElement, null);if (StringUtils.equals(sourceType, ""cifsSource"")) {String domain = XPathUtils.getStringValue(xpath, ""domain"", documentElement, null);String userName = XPathUtils.getStringValue(xpath, ""username"", documentElement, null);String password = XPathUtils.getStringValue(xpath, ""password"", documentElement, null);URI uri = new URI(location);if (StringUtils.isNotBlank(userName)) {String userInfo = """";if (StringUtils.isNotBlank(domain)) {userInfo = userInfo + domain + "";"";}userInfo = userInfo + userName;if (StringUtils.isNotBlank(password)) {userInfo = userInfo + "":"" + password;}uri = new URI(uri.getScheme(), userInfo, uri.getHost(), uri.getPort(), uri.getPath(), uri.getQuery(), uri.getFragment());}SmbFile smbFile = new SmbFile(uri.toURL());is = new SmbFileInputStream(smbFile);} else if (StringUtils.equals(sourceType, ""localFileSystemSource"")) {File file = new File(location);is = new FileInputStream(file);} else {logger.error(""Source type \"""" + ((sourceType != null) ? sourceType : """") + ""\"" not supported"");response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);return;}if (StringUtils.isBlank(mimeType) && StringUtils.isBlank(encoding)) {response.setContentType(Definitions.MIMETYPE_BINARY);} else if (StringUtils.isBlank(encoding)) {response.setContentType(mimeType);} else {response.setContentType(mimeType + "";charset="" + encoding);}if (request.getParameterMap().containsKey(Definitions.REQUEST_PARAMNAME_DOWNLOAD)) {response.setHeader(""Content-Disposition"", ""attachment; filename="" + fileName);}IOUtils.copy(new BufferedInputStream(is), response.getOutputStream());} finally {if (is != null) {is.close();}}}public static synchronized BaseFont getL2BaseFont() {if (l2baseFont == null) {final ConfigProvider conf = ConfigProvider.getInstance();try {final ByteArrayOutputStream tmpBaos = new ByteArrayOutputStream();String fontPath = conf.getNotEmptyProperty(""font.path"", null);String fontName;String fontEncoding;InputStream tmpIs;if (fontPath != null) {fontName = conf.getNotEmptyProperty(""font.name"", null);if (fontName == null) {fontName = new File(fontPath).getName();}fontEncoding = conf.getNotEmptyProperty(""font.encoding"", null);if (fontEncoding == null) {fontEncoding = BaseFont.WINANSI;}tmpIs = new FileInputStream(fontPath);} else {fontName = Constants.L2TEXT_FONT_NAME;fontEncoding = BaseFont.IDENTITY_H;tmpIs = FontUtils.class.getResourceAsStream(Constants.L2TEXT_FONT_PATH);}IOUtils.copy(tmpIs, tmpBaos);tmpIs.close();tmpBaos.close();l2baseFont = BaseFont.createFont(fontName, fontEncoding, BaseFont.EMBEDDED, BaseFont.CACHED, tmpBaos.toByteArray(), null);} catch (Exception e) {e.printStackTrace();try {l2baseFont = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.WINANSI, BaseFont.EMBEDDED);} catch (Exception ex) {}}}return l2baseFont;}protected File extractArchive(File archive) {byte buf[] = new byte[BUF_SIZE];ZipInputStream zis = null;File archiveDirectory = null;FileOutputStream fos;ZipEntry entry;File curEntry;int n;try {zis = new ZipInputStream(new FileInputStream(archive));while ((entry = zis.getNextEntry()) != null) {curEntry = new File(workingDir, entry.getName());if (entry.isDirectory()) {getLogger().info(""skip directory: "" + entry.getName());if (archiveDirectory == null) archiveDirectory = curEntry;continue;}getLogger().info(""zip-entry (file): "" + entry.getName() + "" ==> real path: "" + curEntry.getAbsolutePath());if (!curEntry.getParentFile().exists()) curEntry.getParentFile().mkdirs();fos = new FileOutputStream(curEntry);while ((n = zis.read(buf, 0, buf.length)) > -1) fos.write(buf, 0, n);fos.close();zis.closeEntry();}} catch (Throwable t) {t.printStackTrace();} finally {try {if (zis != null) zis.close();} catch (Throwable t) {}}return archiveDirectory;}"	5
"public void run() {OutputStream out = null;InputStream in = null;boolean success = false;String absoluteFileName = """";try {String fileName = getFileName(softwareLocation);File downloadFolder = new File(Properties.downloadFolder);if (downloadFolder.exists()) {if (downloadFolder.isDirectory()) {fileName = downloadFolder.getPath() + File.separator + fileName;}} else {downloadFolder.mkdir();fileName = downloadFolder.getPath() + File.separator + fileName;}File softwareFile = new File(fileName);absoluteFileName = softwareFile.getAbsolutePath();if (softwareFile.exists() && softwareFile.length() == softwareSize) {XohmLogger.debugPrintln(""Software file already exists. Exiting..."");listener.downloadComplete(true, softwareName, absoluteFileName);return;} else {try {File[] oldFiles = downloadFolder.listFiles();for (int i = 0; i < oldFiles.length; i++) {oldFiles[i].delete();}} catch (Exception ex) {}}File softwareTempFile = File.createTempFile(""XOHMCM"", null);URL url = new URL(softwareLocation);out = new BufferedOutputStream(new FileOutputStream(softwareTempFile));URLConnection connection = url.openConnection();in = connection.getInputStream();listener.downloadStarted(softwareName);byte[] buffer = new byte[1024];int numRead;long numWritten = 0;while ((numRead = in.read(buffer)) != -1) {out.write(buffer, 0, numRead);numWritten += numRead;listener.downloadProgressNotification(softwareName, numWritten, softwareSize);}out.flush();out.close();in.close();if (copyFile(softwareTempFile, softwareFile)) {XohmLogger.debugPrintln(""Download complete: "" + absoluteFileName + ""\t"" + numWritten);success = true;softwareTempFile.delete();}} catch (Exception ex) {XohmLogger.warningPrintln(""Software Update download failed - "" + ex.getMessage(), null, null);ex.printStackTrace();}listener.downloadComplete(success, softwareName, absoluteFileName);}public void rename(String virtualWiki, String oldTopicName, String newTopicName) throws Exception {Connection conn = DatabaseConnection.getConnection();try {boolean commit = false;conn.setAutoCommit(false);try {PreparedStatement pstm = conn.prepareStatement(STATEMENT_RENAME);try {pstm.setString(1, newTopicName);pstm.setString(2, oldTopicName);pstm.setString(3, virtualWiki);if (pstm.executeUpdate() == 0) throw new SQLException(""Unable to rename topic "" + oldTopicName + "" on wiki "" + virtualWiki);} finally {pstm.close();}doUnlockTopic(conn, virtualWiki, oldTopicName);doRenameAllVersions(conn, virtualWiki, oldTopicName, newTopicName);commit = true;} finally {if (commit) conn.commit(); else conn.rollback();}} finally {conn.close();}}public void testAuthentication() throws Exception {String host = ""localhost"";int port = 8080;URL url = new URL(""http://"" + host + "":"" + port + ""/"");URLConnection connection = url.openConnection();InputStream in = connection.getInputStream();in.close();server.invoke(name, ""stop"", null, null);server.setAttribute(name, new Attribute(""AuthenticationMethod"", ""basic""));server.invoke(name, ""addAuthorization"", new Object[] { ""openjmx"", ""openjmx"" }, new String[] { ""java.lang.String"", ""java.lang.String"" });server.invoke(name, ""start"", null, null);url = new URL(""http://"" + host + "":"" + port + ""/"");connection = url.openConnection();in = connection.getInputStream();in.close();assertEquals(((HttpURLConnection) connection).getResponseCode(), 401);url = new URL(""http://"" + host + "":"" + port + ""/"");connection = url.openConnection();connection.setRequestProperty(""Authorization"", ""basic b3BlbmpteDpvcGVuam14"");in = connection.getInputStream();in.close();server.invoke(name, ""stop"", null, null);server.setAttribute(name, new Attribute(""AuthenticationMethod"", ""none""));}@SuppressWarnings(""unchecked"")public List<Event> lookupFutureEvents(String groupIdentifier) throws GtugsException {StringBuilder json = new StringBuilder();String requestUrl = ""http://api.meetup.com/events.json/?group_urlname="" + groupIdentifier + ""&key="" + key;try {URL url = new URL(requestUrl.toString());BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String inputLine;while ((inputLine = in.readLine()) != null) {json.append(inputLine);}in.close();} catch (IOException e) {throw new GtugsException(e);}List<Event> events = new ArrayList<Event>();JSONObject jsonObj = (JSONObject) JSONValue.parse(json.toString());JSONArray results = (JSONArray) jsonObj.get(""results"");for (int i = 0; i < results.size(); i++) {JSONObject result = (JSONObject) results.get(i);Event e = new Event();e.setAttendeeCount(Integer.parseInt((String) result.get(""rsvpcount"")));e.setCity((String) result.get(""venue_city""));e.setDescription((String) result.get(""description""));e.setLatitude(Double.parseDouble((String) result.get(""venue_lat"")));e.setLongitude(Double.parseDouble((String) result.get(""venue_lon"")));e.setName((String) result.get(""name""));Date myDate = null;String time = (String) result.get(""time"");try {myDate = meetupDateFormat.parse(time);e.setStartTime(timeDateFormat.format(myDate));e.setEndTime(timeDateFormat.format(myDate));e.setStartDate(myDate);e.setEndDate(myDate);String tz = tzDateFormat.format(myDate);if (tz != null && tz.startsWith(""+"")) {tz = tz.substring(1);}e.setTimeZone(Integer.toString(Integer.parseInt(tz) / 100));} catch (ParseException ex) {ex.printStackTrace();continue;}e.setState((String) result.get(""venue_state""));StringBuilder addressBuilder = new StringBuilder();if (result.get(""venue_address1"") != null) {addressBuilder.append((String) result.get(""venue_address1"") + "" "");}if (result.get(""venue_address2"") != null) {addressBuilder.append((String) result.get(""venue_address2"") + "" "");}if (result.get(""venue_address3"") != null) {addressBuilder.append((String) result.get(""venue_address3"") + "" "");}if (result.get(""venue_address4"") != null) {addressBuilder.append((String) result.get(""venue_address4""));}e.setStreetAddress(addressBuilder.toString().trim());e.setZipCode((String) result.get(""venue_zip""));e.setUrl((String) result.get(""event_url""));events.add(e);}return events;}public static void copyFile(File sourceFile, File destFile) throws IOException {InputStream is = null;OutputStream os = null;try {is = new FileInputStream(sourceFile);os = new FileOutputStream(destFile);IOUtils.copy(is, os);} finally {try {if (os != null) os.close();} catch (Exception e) {}try {if (is != null) is.close();} catch (Exception e) {}}}public static void copyWithClose(InputStream is, OutputStream os) throws IOException {try {IOUtils.copy(is, os);} catch (IOException ioe) {try {if (os != null) os.close();} catch (Exception e) {}try {if (is != null) is.close();} catch (Exception e) {}}}public static Object fetchCached(String address, int hours) throws MalformedURLException, IOException {String cacheName = md5(address);checkAndCreateDirectoryIfNeeded();File r = new File(CACHELOCATION + cacheName);Date d = new Date();long limit = d.getTime() - (1000 * 60 * 60 * hours);if (!r.exists() || (hours != -1 && r.lastModified() < limit)) {InputStream is = (InputStream) fetch(address);FileOutputStream fos = new FileOutputStream(CACHELOCATION + cacheName);int nextChar;while ((nextChar = is.read()) != -1) fos.write((char) nextChar);fos.flush();}FileInputStream fis = new FileInputStream(CACHELOCATION + cacheName);return fis;}public static Drawable fetchCachedDrawable(String url) throws MalformedURLException, IOException {Log.d(LOG_TAG, ""Fetching cached : "" + url);String cacheName = md5(url);checkAndCreateDirectoryIfNeeded();File r = new File(CACHELOCATION + cacheName);if (!r.exists()) {InputStream is = (InputStream) fetch(url);FileOutputStream fos = new FileOutputStream(CACHELOCATION + cacheName);int nextChar;while ((nextChar = is.read()) != -1) fos.write((char) nextChar);fos.flush();}FileInputStream fis = new FileInputStream(CACHELOCATION + cacheName);Drawable d = Drawable.createFromStream(fis, ""src"");return d;}public static String md5(String str) {try {MessageDigest digest = java.security.MessageDigest.getInstance(""MD5"");digest.update(str.getBytes());byte messageDigest[] = digest.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < messageDigest.length; i++) hexString.append(Integer.toHexString(0xFF & messageDigest[i]));String md5 = hexString.toString();Log.v(FileUtil.class.getName(), md5);return md5;} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return """";}private void copy(final File file) throws IOException {String targetFilename = targetFilename(file);FileInputStream fis = new FileInputStream(file);try {FileChannel source = fis.getChannel();try {FileOutputStream fos = new FileOutputStream(targetFilename);try {FileChannel target = fos.getChannel();try {target.transferFrom(source, 0, source.size());} finally {target.close();}} finally {fos.close();}} finally {source.close();}} finally {fis.close();}}"	5
"public String login() {String authSuccess = ""false"";try {String errorMesg = """";int error;if ((error = utils.stringIsNull(passwd)) != -1) {errorMesg += rb.getString(""passwdField"") + "": "" + utils.errors[error] + "" "";} else if ((error = utils.stringIsEmpty(passwd)) != -1) {errorMesg += rb.getString(""passwdField"") + "": "" + utils.errors[error] + "" "";}if ((error = utils.stringIsNull(login)) != -1) {errorMesg += rb.getString(""loginField"") + "": "" + utils.errors[error] + "" "";} else if ((error = utils.stringIsEmpty(login)) != -1) {errorMesg += rb.getString(""loginField"") + "": "" + utils.errors[error] + "" "";}String[] admins = conf.getProperty(""admin"").split(""\\s"");boolean admin = false;for (int i = 0; i < admins.length; i++) {if (admins[i].equals(login)) {admin = true;}}if (!admin) {errorMesg += rb.getString(""noAdmin"");session.invalidate();} else {session.setAttribute(""conf"", conf);}if (errorMesg.length() > 0) {status = errorMesg;System.out.println(status);FacesContext context = FacesContext.getCurrentInstance();context.renderResponse();} else {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.reset();md5.update(passwd.getBytes());byte[] result = md5.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < result.length; i++) {String hex = Integer.toHexString(0xFF & result[i]);if (hex.length() == 1) {hexString.append('0');}hexString.append(hex);}authSuccess = (sqlManager.getPassword(login).equals(hexString.toString())) ? ""true"" : ""false"";if (authSuccess.equals(""false"")) session.invalidate();}} catch (NoSuchAlgorithmException nsae) {utils.catchExp(nsae);status = utils.getStatus();if (stacktrace) {stackTrace = utils.getStackTrace();}FacesContext.getCurrentInstance().renderResponse();} catch (SQLException sqle) {utils.catchExp(sqle);status = utils.getStatus();if (stacktrace) {stackTrace = utils.getStackTrace();}FacesContext.getCurrentInstance().renderResponse();}return authSuccess;}public static String getEncodedHex(String text) {MessageDigest md = null;String encodedString = null;try {md = MessageDigest.getInstance(""MD5"");md.update(text.getBytes());} catch (NoSuchAlgorithmException e) {e.printStackTrace();}Hex hex = new Hex();encodedString = new String(hex.encode(md.digest()));md.reset();return encodedString;}private boolean copyFile(File inFile, File outFile) {BufferedReader reader = null;BufferedWriter writer = null;try {reader = new BufferedReader(new FileReader(inFile));writer = new BufferedWriter(new FileWriter(outFile));while (reader.ready()) {writer.write(reader.read());}writer.flush();} catch (IOException ex) {ex.printStackTrace();} finally {if (reader != null) {try {reader.close();} catch (IOException ex) {ex.printStackTrace();return false;}}if (writer != null) {try {writer.close();} catch (IOException ex) {return false;}}}return true;}private String generateHash(String key, String data) throws ChiropteraException {try {MessageDigest md = MessageDigest.getInstance(Constants.Connection.Auth.MD5);md.update(key.getBytes());byte[] raw = md.digest();String s = toHexString(raw);SecretKey skey = new SecretKeySpec(s.getBytes(), Constants.Connection.Auth.HMACMD5);Mac mac = Mac.getInstance(skey.getAlgorithm());mac.init(skey);byte digest[] = mac.doFinal(data.getBytes());String digestB64 = BaculaBase64.binToBase64(digest);return digestB64.substring(0, digestB64.length());} catch (NoSuchAlgorithmException e) {throw new ChiropteraException(Constants.Chiroptera.Errors.HASH, e.getMessage(), e);} catch (InvalidKeyException e) {throw new ChiropteraException(Constants.Chiroptera.Errors.HASH, e.getMessage(), e);}}public static String copy(URL url, File dest) throws IOException {if (log.isDebugEnabled()) {log.debug(""Fetching: "" + url);}IOException error = null;for (int retries = 0; retries < MAX_RETRIES; retries++) {try {OutputStream out = null;InputStream is = null;try {out = new FileOutputStream(dest);if (url.getProtocol().equals(""http"")) {is = new WebFileInputStream(url);} else {is = url.openStream();}MessageDigest md = MessageDigest.getInstance(""MD5"");byte[] buf = new byte[1024];int len;while ((len = is.read(buf)) > 0) {out.write(buf, 0, len);md.update(buf, 0, len);}out.flush();return bytesToHexString(md.digest());} catch (ConnectException e) {if (error == null) {error = e;}if (retries < MAX_RETRIES - 1) {log.error(MessageFormat.format(""Unable to fetch URL {0}, connection timed out. Will retry..."", url.toExternalForm()));try {Thread.sleep(FileHelper.RETRY_SLEEP_TIME);} catch (InterruptedException e2) {}}} catch (SocketTimeoutException e) {if (error == null) {error = e;}if (retries < MAX_RETRIES - 1) {log.error(MessageFormat.format(""Unable to fetch URL {0}, timed out. Will retry..."", url.toExternalForm()));try {Thread.sleep(FileHelper.RETRY_SLEEP_TIME);} catch (InterruptedException e2) {}}} catch (IOException e) {if (dest.exists()) {try {FileHelper.delete(dest);} catch (IOException e1) {log.error(MessageFormat.format(Messages.getString(""FileHelper.UNABLE_DELETE_FILE""), dest), e1);}}throw e;} finally {if (is != null) {try {is.close();} catch (IOException e) {log.error(Messages.getString(""FileHelper.UNABLE_CLOSE_STREAM""), e);}}if (out != null) {try {out.close();} catch (IOException e) {log.error(Messages.getString(""FileHelper.UNABLE_CLOSE_STREAM""), e);}}}} catch (NoSuchAlgorithmException e) {throw new IOException(MessageFormat.format(Messages.getString(""FileHelper.UNABLE_DOWNLOAD_URL""), url), e);}}throw error;}public static String hash(String string, String algorithm, String encoding) throws UnsupportedEncodingException {try {MessageDigest digest = MessageDigest.getInstance(algorithm);digest.update(string.getBytes(encoding));byte[] encodedPassword = digest.digest();return new BigInteger(1, encodedPassword).toString(16);} catch (NoSuchAlgorithmException e) {throw new RuntimeException(e);}}public static String mysqlPasswordHash(String string) {try {MessageDigest digest = MessageDigest.getInstance(HashAlgorithms.SHA1);try {digest.update(string.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {throw new RuntimeException(e);}byte[] encodedPassword = digest.digest();digest.update(encodedPassword);encodedPassword = digest.digest();String hash = new BigInteger(1, encodedPassword).toString(16).toUpperCase();while (hash.length() < 40) {hash = ""0"" + hash;}return ""*"" + hash;} catch (NoSuchAlgorithmException e) {throw new RuntimeException(e);}}public String readPage(boolean ignoreComments) throws Exception {BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String inputLine;String html = """";if (ignoreComments) {while ((inputLine = in.readLine()) != null) {if (inputLine.length() > 0) {if (inputLine.substring(0, 1).compareTo(""#"") != 0) {html = html + inputLine + ""\n"";}}}} else {while ((inputLine = in.readLine()) != null) {html = html + inputLine + ""\n"";}}in.close();return html;}public boolean updatenum(int num, String pid) {boolean flag = false;Connection conn = null;PreparedStatement pm = null;try {conn = Pool.getConnection();conn.setAutoCommit(false);pm = conn.prepareStatement(""update addwuliao set innum=? where pid=?"");pm.setInt(1, num);pm.setString(2, pid);int a = pm.executeUpdate();if (a == 0) {flag = false;} else {flag = true;}conn.commit();Pool.close(pm);Pool.close(conn);} catch (Exception e) {e.printStackTrace();flag = false;try {conn.rollback();} catch (SQLException e1) {e1.printStackTrace();}Pool.close(pm);Pool.close(conn);} finally {Pool.close(pm);Pool.close(conn);}return flag;}public boolean delwuliao(String pid) {boolean flag = false;Connection conn = null;PreparedStatement pm = null;try {conn = Pool.getConnection();conn.setAutoCommit(false);pm = conn.prepareStatement(""delete from addwuliao where pid=?"");pm.setString(1, pid);int x = pm.executeUpdate();if (x == 0) {flag = false;} else {flag = true;}conn.commit();Pool.close(pm);Pool.close(conn);} catch (Exception e) {e.printStackTrace();flag = false;try {conn.rollback();} catch (SQLException e1) {e1.printStackTrace();}Pool.close(pm);Pool.close(conn);} finally {Pool.close(pm);Pool.close(conn);}return flag;}"	5
"public static byte[] read(URL url) throws IOException {byte[] bytes;InputStream is = null;try {is = url.openStream();bytes = readAllBytes(is);} finally {if (is != null) {is.close();}}return bytes;}public static String CopyFile(String sourcefile, String destfile) throws FileNotFoundException, IOException {int last = destfile.lastIndexOf('/');if (last < 0) {DrxWriteError(""CopyFile"", ""Destination filepath "" + destfile + "" doesn't contain /"");throw new java.io.FileNotFoundException(destfile);}String parent = destfile.substring(0, last);if (parent.length() > 0) {File f = new File(parent);if (!f.isDirectory()) {if (!f.mkdirs()) {DrxWriteError(""CopyFile"", ""Folder "" + parent + "" doesn't exist, cannot create"");}}}FileChannel srcChannel = new FileInputStream(sourcefile).getChannel();FileChannel dstChannel = new FileOutputStream(destfile).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();return destfile;}public static String gerarDigest(String mensagem) {String mensagemCriptografada = null;try {MessageDigest md = MessageDigest.getInstance(""SHA"");System.out.println(""Mensagem original: "" + mensagem);md.update(mensagem.getBytes());byte[] digest = md.digest();mensagemCriptografada = converterBytesEmHexa(digest);} catch (Exception e) {e.printStackTrace();}return mensagemCriptografada;}private String readCreditsHtml(IApplication app) {final URL url = app.getResources().getCreditsURL();StringBuffer buf = new StringBuffer(2048);if (url != null) {try {BufferedReader rdr = new BufferedReader(new InputStreamReader(url.openStream()));try {String line = null;while ((line = rdr.readLine()) != null) {String internationalizedLine = Utilities.replaceI18NSpanLine(line, s_stringMgr);buf.append(internationalizedLine);}} finally {rdr.close();}} catch (IOException ex) {String errorMsg = s_stringMgr.getString(""AboutBoxDialog.error.creditsfile"");s_log.error(errorMsg, ex);buf.append(errorMsg + "": "" + ex.toString());}} else {String errorMsg = s_stringMgr.getString(""AboutBoxDialog.error.creditsfileurl"");s_log.error(errorMsg);buf.append(errorMsg);}return buf.toString();}public void load(String filename) throws VisbardException {String defaultFilename = VisbardMain.getSettingsDir() + File.separator + DEFAULT_SETTINGS_FILE;File defaultFile = new File(defaultFilename);InputStream settingsInStreamFromFile = null;try {sLogger.info(""Loading settings from : "" + defaultFilename);settingsInStreamFromFile = new FileInputStream(defaultFile);} catch (FileNotFoundException fnf) {sLogger.info(""Unable to load custom settings from user's settings directory ("" + fnf.getMessage() + ""); reverting to default settings"");try {InputStream settingsInStreamFromJar = VisbardMain.class.getClassLoader().getResourceAsStream(filename);FileOutputStream settingsOutStream = new FileOutputStream(defaultFile);int c;while ((c = settingsInStreamFromJar.read()) != -1) settingsOutStream.write(c);settingsInStreamFromJar.close();settingsOutStream.close();settingsInStreamFromFile = new FileInputStream(defaultFile);} catch (IOException ioe) {sLogger.warn(""Unable to copy default settings to user's settings directory ("" + ioe.getMessage() + ""); using default settings from ViSBARD distribution package"");settingsInStreamFromFile = VisbardMain.class.getClassLoader().getResourceAsStream(filename);}}this.processSettingsFile(settingsInStreamFromFile, filename);}void run(PseudolocalizerArguments arguments) throws IOException {List<String> fileNames = arguments.getFileNames();PseudolocalizationPipeline pipeline = arguments.getPipeline();if (arguments.isInteractive()) {runStdin(pipeline);return;}if (fileNames.size() == 0) {MessageCatalog msgCat = FormatRegistry.getMessageCatalog(arguments.getType());writeMessages(msgCat, readAndProcessMessages(pipeline, msgCat, System.in), System.out);return;}String suffix = arguments.getVariant();if (suffix == null) {suffix = ""_pseudo"";} else {suffix = ""_"" + suffix;}for (String fileName : fileNames) {File file = new File(fileName);if (!file.exists()) {System.err.println(""File "" + fileName + "" not found"");continue;}int lastDot = fileName.lastIndexOf('.');String extension;String outFileName;if (lastDot >= 0) {extension = fileName.substring(lastDot + 1);outFileName = fileName.substring(0, lastDot) + suffix + ""."" + extension;} else {extension = """";outFileName = fileName + suffix;}System.out.println(""Processing "" + fileName + "" into "" + outFileName);String fileType = arguments.getType();if (fileType == null) {fileType = extension;}MessageCatalog msgCat = FormatRegistry.getMessageCatalog(fileType);InputStream inputStream = new FileInputStream(file);List<Message> processedMessages = readAndProcessMessages(pipeline, msgCat, inputStream);OutputStream outputStream = new FileOutputStream(new File(outFileName));writeMessages(msgCat, processedMessages, outputStream);}}public JspBaseTestCase(String name) {super(name);String propertyFile = ""bugbase.properties"";Properties properties = new Properties();setProperties(properties);try {URL url = this.getClass().getResource(""/"" + propertyFile);if (url != null) {InputStream is = url.openStream();properties.load(is);is.close();getLog().debug(""Cactus LogService successfully instantiated."");getLog().debug(""Log4J successfully instantiated."");}} catch (IOException e) {System.err.println(""ERROR: cannot load "" + propertyFile + ""!"");}setDefault(""openfuture.bugbase.test.host"", ""localhost:8080"");setDefault(""openfuture.bugbase.test.context"", ""bugbase"");setDefault(""openfuture.bugbase.test.userid"", ""admin"");setDefault(""openfuture.bugbase.test.password"", ""bugbase"");setDefault(""openfuture.bugbase.test.project"", ""BugBase Test"");}public static void copyFile(final String inFile, final String outFile) {FileChannel in = null;FileChannel out = null;try {in = new FileInputStream(inFile).getChannel();out = new FileOutputStream(outFile).getChannel();in.transferTo(0, in.size(), out);} catch (final Exception e) {} finally {if (in != null) {try {in.close();} catch (final Exception e) {}}if (out != null) {try {out.close();} catch (final Exception e) {}}}}private void processRequest(HttpServletRequest request, HttpServletResponse response) throws IOException {response.setContentType(""text/html"");ServletContext ctx = getServletContext();RequestDispatcher rd = ctx.getRequestDispatcher(SETUP_JSP);HttpSession session = request.getSession(false);if (session == null) {session = request.getSession(true);session.setAttribute(ERROR_TAG, ""You need to have run the Sniffer before running "" + ""the Grinder. Go to <a href=\""/index.jsp\"">the start page</a> "" + "" to run the Sniffer."");rd = ctx.getRequestDispatcher(ERROR_JSP);} else {session.setMaxInactiveInterval(-1);String pValue = request.getParameter(ACTION_TAG);if (pValue != null && pValue.equals(START_TAG)) {rd = ctx.getRequestDispatcher(WAIT_JSP);int p = 1;int t = 1;int c = 1;try {p = Integer.parseInt(request.getParameter(""procs""));p = p > MAX_PROCS ? MAX_PROCS : p;} catch (NumberFormatException e) {}try {t = Integer.parseInt(request.getParameter(""threads""));t = t > MAX_THREADS ? MAX_THREADS : t;} catch (NumberFormatException e) {}try {c = Integer.parseInt(request.getParameter(""cycles""));c = c > MAX_CYCLES ? MAX_CYCLES : c;} catch (NumberFormatException e) {}try {String dirname = (String) session.getAttribute(OUTPUT_TAG);File workdir = new File(dirname);(new File(dirname + File.separator + LOG_DIR)).mkdir();FileInputStream gpin = new FileInputStream(GPROPS);FileOutputStream gpout = new FileOutputStream(dirname + File.separator + GPROPS);copyBytes(gpin, gpout);gpin.close();InitialContext ictx = new InitialContext();Boolean isSecure = (Boolean) session.getAttribute(SECURE_TAG);if (isSecure.booleanValue()) {gpout.write((""grinder.plugin="" + ""net.grinder.plugin.http.HttpsPlugin"" + ""\n"").getBytes());String certificate = (String) ictx.lookup(CERTIFICATE);String password = (String) ictx.lookup(PASSWORD);gpout.write((""grinder.plugin.parameter.clientCert="" + certificate + ""\n"").getBytes());gpout.write((""grinder.plugin.parameter.clientCertPassword="" + password + ""\n"").getBytes());} else {gpout.write((""grinder.plugin="" + ""net.grinder.plugin.http.HttpPlugin\n"").getBytes());}gpout.write((""grinder.processes="" + p + ""\n"").getBytes());gpout.write((""grinder.threads="" + t + ""\n"").getBytes());gpout.write((""grinder.cycles="" + c + ""\n"").getBytes());gpin = new FileInputStream(dirname + File.separator + SNIFFOUT);copyBytes(gpin, gpout);gpin.close();gpout.close();String classpath = (String) ictx.lookup(CLASSPATH);String cmd[] = new String[JAVA_PROCESS.length + 1 + GRINDER_PROCESS.length];int i = 0;int n = JAVA_PROCESS.length;System.arraycopy(JAVA_PROCESS, 0, cmd, i, n);cmd[n] = classpath;i = n + 1;n = GRINDER_PROCESS.length;System.arraycopy(GRINDER_PROCESS, 0, cmd, i, n);for (int j = 0; j < cmd.length; ++j) {System.out.print(cmd[j] + "" "");}Process proc = Runtime.getRuntime().exec(cmd, null, workdir);session.setAttribute(PROCESS_TAG, proc);} catch (NamingException e) {e.printStackTrace();session.setAttribute(ERROR_MSG_TAG, e.toString());session.setMaxInactiveInterval(TIMEOUT);rd = ctx.getRequestDispatcher(ERROR_JSP);} catch (Throwable e) {e.printStackTrace(response.getWriter());throw new IOException(e.getMessage());}} else if (pValue != null && pValue.equals(CHECK_TAG)) {boolean finished = true;try {Process p = (Process) session.getAttribute(PROCESS_TAG);int result = p.exitValue();} catch (IllegalThreadStateException e) {finished = false;}if (finished) {session.setMaxInactiveInterval(TIMEOUT);rd = ctx.getRequestDispatcher(RESULTS_JSP);} else {rd = ctx.getRequestDispatcher(WAIT_JSP);}}try {rd.forward(request, response);} catch (ServletException e) {e.printStackTrace(response.getWriter());throw new IOException(e.getMessage());}}}private Component createLicensePane(String propertyKey) {if (licesePane == null) {String licenseText = """";BufferedReader in = null;try {String filename = ""conf/LICENSE.txt"";java.net.URL url = FileUtil.toURL(filename);in = new BufferedReader(new InputStreamReader(url.openStream()));String line = null;while (true) {line = in.readLine();if (line == null) break;licenseText += line;}} catch (Exception e) {log.error(e);} finally {if (in != null) {try {in.close();} catch (Exception e) {}}}licenseText = StringUtils.replace(licenseText, ""<br>"", ""\n"");licenseText = StringUtils.replace(licenseText, ""<p>"", ""\n\n"");StyleContext context = new StyleContext();StyledDocument document = new DefaultStyledDocument(context);Style style = context.getStyle(StyleContext.DEFAULT_STYLE);StyleConstants.setAlignment(style, StyleConstants.ALIGN_CENTER);StyleConstants.setSpaceAbove(style, 4);StyleConstants.setSpaceBelow(style, 4);StyleConstants.setFontSize(style, 14);try {document.insertString(document.getLength(), licenseText, style);} catch (BadLocationException e) {log.error(e);}JTextPane textPane = new JTextPane(document);textPane.setEditable(false);licesePane = new JScrollPane(textPane);}return licesePane;}"	5
"public void testImageInfo() throws MalformedURLException, IOException {System.out.println(""ImageInfo:"");long start = Calendar.getInstance().getTimeInMillis();for (int i = 0; i < images.length; i++) {String url = Constants.getDefaultURIMediaConnectorBasePath() + ""albums/hund/"" + images[i];InputStream istream = (new URL(url)).openStream();ImageInfo ii = new ImageInfo();ii.setInput(istream);assertTrue(""Not a supported image file format."", ii.check());int width = ii.getWidth();int height = ii.getHeight();System.out.println(width + ""x"" + height);}long stop = Calendar.getInstance().getTimeInMillis();System.out.println(""zeit: "" + (stop - start));}public void testJPEGBuffImage() throws MalformedURLException, IOException {System.out.println(""JPEGCodec BufferedImage:"");long start = Calendar.getInstance().getTimeInMillis();for (int i = 0; i < images.length; i++) {String url = Constants.getDefaultURIMediaConnectorBasePath() + ""albums/hund/"" + images[i];InputStream istream = (new URL(url)).openStream();JPEGImageDecoder dec = JPEGCodec.createJPEGDecoder(istream);BufferedImage image = dec.decodeAsBufferedImage();int width = image.getWidth();int height = image.getHeight();istream.close();System.out.println(""w: "" + width + "" - h: "" + height);}long stop = Calendar.getInstance().getTimeInMillis();System.out.println(""zeit: "" + (stop - start));}public void testJPEGRaster() throws MalformedURLException, IOException {System.out.println(""JPEGCodec RasterImage:"");long start = Calendar.getInstance().getTimeInMillis();for (int i = 0; i < images.length; i++) {String url = Constants.getDefaultURIMediaConnectorBasePath() + ""albums/hund/"" + images[i];InputStream istream = (new URL(url)).openStream();JPEGImageDecoder dec = JPEGCodec.createJPEGDecoder(istream);Raster raster = dec.decodeAsRaster();int width = raster.getWidth();int height = raster.getHeight();istream.close();System.out.println(""w: "" + width + "" - h: "" + height);}long stop = Calendar.getInstance().getTimeInMillis();System.out.println(""zeit: "" + (stop - start));}public static void copy(FileInputStream source, FileOutputStream dest) throws IOException {FileChannel in = null, out = null;try {in = source.getChannel();out = dest.getChannel();long size = in.size();MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buf);} finally {if (in != null) in.close();if (out != null) out.close();}}private void addPNMLFileToLibrary(File selected) {try {FileChannel srcChannel = new FileInputStream(selected.getAbsolutePath()).getChannel();FileChannel dstChannel = new FileOutputStream(new File(matchingOrderXML).getParent() + ""/"" + selected.getName()).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();order.add(new ComponentDescription(false, selected.getName().replaceAll("".pnml"", """"), 1.0));updateComponentList();} catch (IOException ioe) {JOptionPane.showMessageDialog(dialog, ""Could not add the PNML file "" + selected.getName() + "" to the library!"");}}private final int copyFiles(File[] list, String dest, boolean dest_is_full_name) throws InterruptedException {Context c = ctx;File file = null;for (int i = 0; i < list.length; i++) {boolean existed = false;FileChannel in = null;FileChannel out = null;File outFile = null;file = list[i];if (file == null) {error(c.getString(R.string.unkn_err));break;}String uri = file.getAbsolutePath();try {if (isStopReq()) {error(c.getString(R.string.canceled));break;}long last_modified = file.lastModified();String fn = file.getName();outFile = dest_is_full_name ? new File(dest) : new File(dest, fn);if (file.isDirectory()) {if (depth++ > 40) {error(ctx.getString(R.string.too_deep_hierarchy));break;} else if (outFile.exists() || outFile.mkdir()) {copyFiles(file.listFiles(), outFile.getAbsolutePath(), false);if (errMsg != null) break;} else error(c.getString(R.string.cant_md, outFile.getAbsolutePath()));depth--;} else {if (existed = outFile.exists()) {int res = askOnFileExist(c.getString(R.string.file_exist, outFile.getAbsolutePath()), commander);if (res == Commander.SKIP) continue;if (res == Commander.REPLACE) {if (outFile.equals(file)) continue; else outFile.delete();}if (res == Commander.ABORT) break;}if (move) {long len = file.length();if (file.renameTo(outFile)) {counter++;totalBytes += len;int so_far = (int) (totalBytes * conv);sendProgress(outFile.getName() + "" "" + c.getString(R.string.moved), so_far, 0);continue;}}in = new FileInputStream(file).getChannel();out = new FileOutputStream(outFile).getChannel();long size = in.size();final long max_chunk = 524288;long pos = 0;long chunk = size > max_chunk ? max_chunk : size;long t_chunk = 0;long start_time = 0;int speed = 0;int so_far = (int) (totalBytes * conv);String sz_s = Utils.getHumanSize(size);String rep_s = c.getString(R.string.copying, fn);for (pos = 0; pos < size; ) {if (t_chunk == 0) start_time = System.currentTimeMillis();sendProgress(rep_s + sizeOfsize(pos, sz_s), so_far, (int) (totalBytes * conv), speed);long transferred = in.transferTo(pos, chunk, out);pos += transferred;t_chunk += transferred;totalBytes += transferred;if (isStopReq()) {Log.d(TAG, ""Interrupted!"");error(c.getString(R.string.canceled));return counter;}long time_delta = System.currentTimeMillis() - start_time;if (time_delta > 0) {speed = (int) (1000 * t_chunk / time_delta);t_chunk = 0;}}in.close();out.close();in = null;out = null;if (i >= list.length - 1) sendProgress(c.getString(R.string.copied_f, fn) + sizeOfsize(pos, sz_s), (int) (totalBytes * conv));counter++;}if (move) file.delete();outFile.setLastModified(last_modified);final int GINGERBREAD = 9;if (android.os.Build.VERSION.SDK_INT >= GINGERBREAD) ForwardCompat.setFullPermissions(outFile);} catch (SecurityException e) {error(c.getString(R.string.sec_err, e.getMessage()));} catch (FileNotFoundException e) {error(c.getString(R.string.not_accs, e.getMessage()));} catch (ClosedByInterruptException e) {error(c.getString(R.string.canceled));} catch (IOException e) {String msg = e.getMessage();error(c.getString(R.string.acc_err, uri, msg != null ? msg : """"));} catch (RuntimeException e) {error(c.getString(R.string.rtexcept, uri, e.getMessage()));} finally {try {if (in != null) in.close();if (out != null) out.close();if (!move && errMsg != null && outFile != null && !existed) {Log.i(TAG, ""Deleting failed output file"");outFile.delete();}} catch (IOException e) {error(c.getString(R.string.acc_err, uri, e.getMessage()));}}}return counter;}private boolean runValidation(PropertyMap map, URL url, URL schema) {ValidationDriver vd = new ValidationDriver(map);try {vd.loadSchema(new InputSource(schema.openStream()));return vd.validate(new InputSource(url.openStream()));} catch (SAXException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return false;}public void copyFile(String oldPathFile, String newPathFile) {try {int bytesum = 0;int byteread = 0;File oldfile = new File(oldPathFile);if (oldfile.exists()) {InputStream inStream = new FileInputStream(oldPathFile);FileOutputStream fs = new FileOutputStream(newPathFile);byte[] buffer = new byte[1444];while ((byteread = inStream.read(buffer)) != -1) {bytesum += byteread;System.out.println(bytesum);fs.write(buffer, 0, byteread);}inStream.close();}} catch (Exception e) {message = (""���Ƶ����ļ���������"");}}private String copyAndHash(InputStream input, File into) throws IOException {MessageDigest digest = createMessageDigest();DigestInputStream dis = new DigestInputStream(input, digest);IOException ex;FileOutputStream fos = null;try {fos = new FileOutputStream(into);IOUtils.copyLarge(dis, fos);byte[] hash = digest.digest();Formatter formatter = new Formatter();for (byte b : hash) {formatter.format(""%02x"", b);}return formatter.toString();} catch (IOException e) {ex = e;} finally {IOUtils.closeQuietly(dis);IOUtils.closeQuietly(fos);}if (logger.isWarnEnabled()) logger.warn(""Couldn't retrieve data from input!"", ex);deleteTempFile(into);throw ex;}private static Long statusSWGCraftTime() {long current = System.currentTimeMillis() / 1000L;if (current < (previousStatusCheck + SWGCraft.STATUS_CHECK_DELAY)) return previousStatusTime;URL url = null;try {synchronized (previousStatusTime) {if (current >= previousStatusCheck + SWGCraft.STATUS_CHECK_DELAY) {url = SWGCraft.getStatusTextURL();String statusTime = ZReader.read(url.openStream());previousStatusTime = Long.valueOf(statusTime);previousStatusCheck = current;}return previousStatusTime;}} catch (UnknownHostException e) {SWGCraft.showUnknownHostDialog(url, e);} catch (Throwable e) {SWGAide.printDebug(""cmgr"", 1, ""SWGResourceManager:statusSWGCraftTime:"", e.toString());}return Long.valueOf(0);}"	5
"public byte process(ProcessorContext<PublishRequest> context) throws InterruptedException, ProcessorException {logger.info(""MapTileChacheTask:process"");PublishRequest req = context.getItem().getEntity();if (StringUtils.isEmpty(req.getBackMap())) return TaskState.STATE_TILE_CACHED;final PublicMapPost post;final GenericDAO<PublicMapPost> postDao = DAOFactory.createDAO(PublicMapPost.class);try {ReadOnlyTransaction.beginTransaction();} catch (DatabaseException e) {logger.error(""error"", e);throw new ProcessorException(e);}int numCachedTiles = 0;try {List<MapTile> backTiles = new ArrayList<MapTile>();post = postDao.findUniqueByCriteria(Expression.eq(""guid"", req.getPostGuid()));final LatLngRectangle bounds = new LatLngRectangle(new LatLngPoint(post.getSWLat(), post.getSWLon()), new LatLngPoint(post.getNELat(), post.getNELon()));final String backMapGuid = ""gst"";final XFile dstDir = new XFile(new XFile(Configuration.getInstance().getPublicMapStorage().toString()), backMapGuid);dstDir.mkdir();for (int z = Math.min(Tile.getOptimalZoom(bounds, 768), 9); z <= 17; z++) {final Tile tileStart = new Tile(bounds.getSouthWest().getLat(), bounds.getSouthWest().getLng(), z);final Tile tileEnd = new Tile(bounds.getNorthEast().getLat(), bounds.getNorthEast().getLng(), z);for (double y = tileEnd.getTileCoord().getY(); y <= tileStart.getTileCoord().getY(); y++) for (double x = tileStart.getTileCoord().getX(); x <= tileEnd.getTileCoord().getX(); x++) {NASAMapTile tile = new NASAMapTile((int) x, (int) y, z);XFile file = new XFile(dstDir, tile.toKeyString());if (file.exists() && file.isFile()) continue;backTiles.add(tile);}}try {for (MapTile tile : backTiles) {InputStream in = null;OutputStream out = null;final URL url = new URL(tile.getPath());try {final XFile outFile = new XFile(dstDir, tile.toKeyString());final URLConnection conn = url.openConnection();if (conn == null || !conn.getContentType().startsWith(""image"")) throw new IllegalAccessException(""onearth.jpl.nasa.gov service returns non-image file, "" + ""content-type='"" + conn.getContentType() + ""'"");in = conn.getInputStream();if (in != null) {out = new XFileOutputStream(outFile);IOUtils.copy(in, out);} else throw new IllegalStateException(""opened stream is null"");} finally {if (out != null) {out.flush();out.close();}if (in != null) in.close();}if (++numCachedTiles % 100 == 0) {logger.info(numCachedTiles + "" tiles cached"");}}} catch (Throwable e) {logger.error(""map tile caching has failed: "", e);throw new ProcessorException(e);}} catch (ProcessorException e) {logger.error(""map tile caching has failed: "", e);throw e;} catch (Throwable e) {logger.error(""map tile caching has failed: "", e);throw new ProcessorException(e);} finally {ReadOnlyTransaction.closeTransaction();logger.info(numCachedTiles + "" tiles cached"");}return TaskState.STATE_TILE_CACHED;}public HttpResponse executeHttp(final HttpUriRequest request, final int expectedCode) throws ClientProtocolException, IOException, HttpException {final HttpResponse response = httpClient.execute(request);if (response.getStatusLine().getStatusCode() != expectedCode) {throw newHttpException(request, response);}return response;}public HttpResponse executeHttp(final HttpUriRequest request, final int beginExpectedCode, final int endExpectedCode) throws ClientProtocolException, IOException, HttpException {final HttpResponse response = httpClient.execute(request);final int statusCode = response.getStatusLine().getStatusCode();if (statusCode < beginExpectedCode || statusCode >= endExpectedCode) {throw newHttpException(request, response);}return response;}public static int getContentLength(URL urlFileLocation) {HttpURLConnection connFile = null;int iFileSize = -1;try {connFile = (HttpURLConnection) urlFileLocation.openConnection();connFile.setDoInput(true);InputStream is = connFile.getInputStream();iFileSize = connFile.getContentLength();is.close();connFile.disconnect();} catch (IOException e) {e.printStackTrace();}return iFileSize;}private void writeResponse(final Collection<? extends Resource> resources, final HttpServletResponse response) throws IOException {for (final Resource resource : resources) {InputStream in = null;try {in = resource.getInputStream();final OutputStream out = response.getOutputStream();final long bytesCopied = IOUtils.copyLarge(in, out);if (bytesCopied < 0L) throw new StreamCorruptedException(""Bad number of copied bytes ("" + bytesCopied + "") for resource="" + resource.getFilename());if (logger.isDebugEnabled()) logger.debug(""writeResponse("" + resource.getFile() + "") copied "" + bytesCopied + "" bytes"");} finally {if (in != null) in.close();}}}public void setPilot(PilotData pilotData) throws UsernameNotValidException {try {if (pilotData.username.trim().equals("""") || pilotData.password.trim().equals("""")) throw new UsernameNotValidException(1, ""Username or password missing"");PreparedStatement psta;if (pilotData.id == 0) {psta = jdbc.prepareStatement(""INSERT INTO pilot "" + ""(name, address1, address2, zip, city, state, country, birthdate, "" + ""pft_theory, pft, medical, passenger, instructor, loc_language, "" + ""loc_country, loc_variant, username, password, id) "" + ""VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"");pilotData.id = Sequence.nextVal(""pilot_id"", jdbc);} else {psta = jdbc.prepareStatement(""UPDATE pilot SET "" + ""name = ?, address1 = ?, address2 = ?, "" + ""zip = ?, city = ?, state = ?, country = ?, birthdate = ?, pft_theory = ?,"" + ""pft = ?, medical = ?, passenger = ?, instructor = ?, loc_language = ?, "" + ""loc_country = ?, loc_variant = ?, username = ?, password = ? "" + ""WHERE id = ?"");}psta.setString(1, pilotData.name);psta.setString(2, pilotData.address1);psta.setString(3, pilotData.address2);psta.setString(4, pilotData.zip);psta.setString(5, pilotData.city);psta.setString(6, pilotData.state);psta.setString(7, pilotData.country);if (pilotData.birthdate != null) psta.setLong(8, pilotData.birthdate.getTime()); else psta.setNull(8, java.sql.Types.INTEGER);if (pilotData.pft_theory != null) psta.setLong(9, pilotData.pft_theory.getTime()); else psta.setNull(9, java.sql.Types.INTEGER);if (pilotData.pft != null) psta.setLong(10, pilotData.pft.getTime()); else psta.setNull(10, java.sql.Types.INTEGER);if (pilotData.medical != null) psta.setLong(11, pilotData.medical.getTime()); else psta.setNull(11, java.sql.Types.INTEGER);if (pilotData.passenger) psta.setString(12, ""Y""); else psta.setString(12, ""N"");if (pilotData.instructor) psta.setString(13, ""Y""); else psta.setString(13, ""N"");psta.setString(14, pilotData.loc_language);psta.setString(15, pilotData.loc_country);psta.setString(16, pilotData.loc_variant);psta.setString(17, pilotData.username);psta.setString(18, pilotData.password);psta.setInt(19, pilotData.id);psta.executeUpdate();jdbc.commit();} catch (SQLException sql) {jdbc.rollback();sql.printStackTrace();throw new UsernameNotValidException(2, ""Username allready exist"");}}ServiceDescription getServiceDescription() throws ConfigurationException {final XPath pathsXPath = this.xPathFactory.newXPath();try {final Node serviceDescriptionNode = (Node) pathsXPath.evaluate(ConfigurationFileTagsV1.SERVICE_DESCRIPTION_ELEMENT_XPATH, this.configuration, XPathConstants.NODE);final String title = getMandatoryElementText(serviceDescriptionNode, ConfigurationFileTagsV1.TITLE_ELEMENT);ServiceDescription.Builder builder = new ServiceDescription.Builder(title, Migrate.class.getCanonicalName());Property[] serviceProperties = getServiceProperties(serviceDescriptionNode);builder.author(getMandatoryElementText(serviceDescriptionNode, ConfigurationFileTagsV1.CREATOR_ELEMENT));builder.classname(this.canonicalServiceName);builder.description(getOptionalElementText(serviceDescriptionNode, ConfigurationFileTagsV1.DESCRIPTION_ELEMENT));final String serviceVersion = getOptionalElementText(serviceDescriptionNode, ConfigurationFileTagsV1.VERSION_ELEMENT);final Tool toolDescription = getToolDescriptionElement(serviceDescriptionNode);String identifier = getOptionalElementText(serviceDescriptionNode, ConfigurationFileTagsV1.IDENTIFIER_ELEMENT);if (identifier == null || """".equals(identifier)) {try {final MessageDigest identDigest = MessageDigest.getInstance(""MD5"");identDigest.update(this.canonicalServiceName.getBytes());final String versionInfo = (serviceVersion != null) ? serviceVersion : """";identDigest.update(versionInfo.getBytes());final URI toolIDURI = toolDescription.getIdentifier();final String toolIdentifier = toolIDURI == null ? """" : toolIDURI.toString();identDigest.update(toolIdentifier.getBytes());final BigInteger md5hash = new BigInteger(identDigest.digest());identifier = md5hash.toString(16);} catch (NoSuchAlgorithmException nsae) {throw new RuntimeException(nsae);}}builder.identifier(identifier);builder.version(serviceVersion);builder.tool(toolDescription);builder.instructions(getOptionalElementText(serviceDescriptionNode, ConfigurationFileTagsV1.INSTRUCTIONS_ELEMENT));builder.furtherInfo(getOptionalURIElement(serviceDescriptionNode, ConfigurationFileTagsV1.FURTHER_INFO_ELEMENT));builder.logo(getOptionalURIElement(serviceDescriptionNode, ConfigurationFileTagsV1.LOGO_ELEMENT));builder.serviceProvider(this.serviceProvider);final DBMigrationPathFactory migrationPathFactory = new DBMigrationPathFactory(this.configuration);final MigrationPaths migrationPaths = migrationPathFactory.getAllMigrationPaths();builder.paths(MigrationPathConverter.toPlanetsPaths(migrationPaths));builder.inputFormats(migrationPaths.getInputFormatURIs().toArray(new URI[0]));builder.parameters(getUniqueParameters(migrationPaths));builder.properties(serviceProperties);return builder.build();} catch (XPathExpressionException xPathExpressionException) {throw new ConfigurationException(String.format(""Failed parsing the '%s' element in the '%s' element."", ConfigurationFileTagsV1.SERVICE_DESCRIPTION_ELEMENT_XPATH, this.configuration.getNodeName()), xPathExpressionException);} catch (NullPointerException nullPointerException) {throw new ConfigurationException(String.format(""Failed parsing the '%s' element in the '%s' element."", ConfigurationFileTagsV1.SERVICE_DESCRIPTION_ELEMENT_XPATH, this.configuration.getNodeName()), nullPointerException);}}public static String generateHash(String key) {key += ""use_your_key_here"";MessageDigest md;try {md = java.security.MessageDigest.getInstance(""MD5"");md.reset();md.update(key.getBytes());byte[] bytes = md.digest();StringBuffer buff = new StringBuffer();for (int l = 0; l < bytes.length; l++) {String hx = Integer.toHexString(0xFF & bytes[l]);if (hx.length() == 1) buff.append(""0"");buff.append(hx);}return buff.toString().trim();} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return null;}public HttpEntity execute(final HttpRequestBase request) throws IOException, ClientProtocolException {final HttpResponse response = mClient.execute(request);final int statusCode = response.getStatusLine().getStatusCode();if (statusCode == HttpStatus.SC_OK | statusCode == HttpStatus.SC_CREATED) {return response.getEntity();}return null;}protected synchronized AbstractBaseObject insert(AbstractBaseObject obj) throws ApplicationException {PreparedStatement preStat = null;StringBuffer sqlStat = new StringBuffer();DmsRelationalWord tmpDmsRelationalWord = (DmsRelationalWord) ((DmsRelationalWord) obj).clone();synchronized (dbConn) {try {Integer nextID = getNextPrimaryID();Timestamp currTime = Utility.getCurrentTimestamp();sqlStat.append(""INSERT "");sqlStat.append(""INTODMS_RELATIONAL_WORD(ID, RECORD_STATUS, UPDATE_COUNT, CREATOR_ID, CREATE_DATE, UPDATER_ID, UPDATE_DATE, WORD, PARENT_ID, TYPE) "");sqlStat.append(""VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) "");preStat = dbConn.prepareStatement(sqlStat.toString(), ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);setPrepareStatement(preStat, 1, nextID);setPrepareStatement(preStat, 2, tmpDmsRelationalWord.getRecordStatus());setPrepareStatement(preStat, 3, new Integer(0));setPrepareStatement(preStat, 4, tmpDmsRelationalWord.getCreatorID());setPrepareStatement(preStat, 5, currTime);setPrepareStatement(preStat, 6, tmpDmsRelationalWord.getUpdaterID());setPrepareStatement(preStat, 7, currTime);if (tmpDmsRelationalWord.getWord() == null || """".equals(tmpDmsRelationalWord.getWord().trim())) {return null;}setPrepareStatement(preStat, 8, tmpDmsRelationalWord.getWord());setPrepareStatement(preStat, 9, tmpDmsRelationalWord.getParentID());setPrepareStatement(preStat, 10, tmpDmsRelationalWord.getType());preStat.executeUpdate();tmpDmsRelationalWord.setID(nextID);tmpDmsRelationalWord.setCreatorID(tmpDmsRelationalWord.getCreatorID());tmpDmsRelationalWord.setCreateDate(currTime);tmpDmsRelationalWord.setUpdaterID(tmpDmsRelationalWord.getUpdaterID());tmpDmsRelationalWord.setUpdateDate(currTime);tmpDmsRelationalWord.setUpdateCount(new Integer(0));tmpDmsRelationalWord.setCreatorName(UserInfoFactory.getUserFullName(tmpDmsRelationalWord.getCreatorID()));tmpDmsRelationalWord.setUpdaterName(UserInfoFactory.getUserFullName(tmpDmsRelationalWord.getUpdaterID()));dbConn.commit();return (tmpDmsRelationalWord);} catch (Exception e) {try {dbConn.rollback();} catch (Exception ee) {}log.error(e, e);throw new ApplicationException(ErrorConstant.DB_INSERT_ERROR, e);} finally {try {preStat.close();} catch (Exception ignore) {} finally {preStat = null;}}}}"	5
"private void addServices(Bundle bundle) {if (!resolvedBundles.containsKey(bundle)) {Enumeration enumeration = bundle.findEntries(""META-INF"", ""*services.xml"", false);int i = 0;List<AxisServiceGroup> axisServiceGroupList = null;if (enumeration != null) {axisServiceGroupList = new ArrayList<AxisServiceGroup>();}while (enumeration != null && enumeration.hasMoreElements()) {try {URL url = (URL) enumeration.nextElement();AxisServiceGroup serviceGroup = new AxisServiceGroup(configCtx.getAxisConfiguration());serviceGroup.addParameter(""last.updated"", bundle.getLastModified());ClassLoader loader = new BundleClassLoader(bundle, Registry.class.getClassLoader());serviceGroup.setServiceGroupClassLoader(loader);InputStream inputStream = url.openStream();DescriptionBuilder builder = new DescriptionBuilder(inputStream, configCtx);OMElement rootElement = builder.buildOM();String elementName = rootElement.getLocalName();Dictionary headers = bundle.getHeaders();String bundleSymbolicName = (String) headers.get(""Bundle-SymbolicName"");bundleSymbolicName = bundleSymbolicName + ""_"" + i;serviceGroup.setServiceGroupName(bundleSymbolicName);HashMap wsdlServicesMap = new HashMap();if (DeploymentConstants.TAG_SERVICE.equals(elementName)) {AxisService axisService = new AxisService(bundleSymbolicName);axisService.setParent(serviceGroup);axisService.setClassLoader(loader);ServiceBuilder serviceBuilder = new OSGiServiceBuilder(configCtx, axisService);serviceBuilder.setWsdlServiceMap(wsdlServicesMap);AxisService service = serviceBuilder.populateService(rootElement);ArrayList<AxisService> serviceList = new ArrayList<AxisService>();serviceList.add(service);DeploymentEngine.addServiceGroup(serviceGroup, serviceList, null, null, configCtx.getAxisConfiguration());log.info(""[Axis2/OSGi] Deployed axis2 service:"" + service.getName() + "" in Bundle: "" + bundle.getSymbolicName());} else if (DeploymentConstants.TAG_SERVICE_GROUP.equals(elementName)) {ServiceGroupBuilder groupBuilder = new OSGiServiceGroupBuilder(rootElement, wsdlServicesMap, configCtx);ArrayList serviceList = groupBuilder.populateServiceGroup(serviceGroup);DeploymentEngine.addServiceGroup(serviceGroup, serviceList, null, null, configCtx.getAxisConfiguration());log.info(""[Axis2/OSGi] Deployed axis2 service group:"" + serviceGroup.getServiceGroupName() + "" in Bundle: "" + bundle.getSymbolicName());}serviceGroup.addParameter(OSGi_BUNDLE_ID, bundle.getBundleId());axisServiceGroupList.add(serviceGroup);if (unreslovedBundles.contains(bundle)) {unreslovedBundles.remove(bundle);}i++;} catch (Throwable e) {String msg = ""Error while reading from the bundle"";if (e instanceof DeploymentException) {String message = e.getMessage();if (message != null && message.length() != 0) {if (message.indexOf(MODULE_NOT_FOUND_ERROR) > -1) {if (!unreslovedBundles.contains(bundle)) {log.info(""A service being found with unmeant module "" + ""dependency. Hence, moved it to UNRESOLVED state."");unreslovedBundles.add(bundle);} else {log.info(""A service being found in UNRESOLVED state."");}} else {log.error(msg, e);break;}} else {log.error(msg, e);break;}} else {log.error(msg, e);break;}}}if (axisServiceGroupList != null && axisServiceGroupList.size() > 0) {resolvedBundles.put(bundle, axisServiceGroupList);}}}public void zip_compressFiles() throws Exception {FileInputStream in = null;File f1 = new File(""C:\\WINDOWS\\regedit.exe"");File f2 = new File(""C:\\WINDOWS\\win.ini"");File file = new File(""C:\\"" + NTUtil.class.getName() + "".zip"");ZipOutputStream out = new ZipOutputStream(new FileOutputStream(file));out.putNextEntry(new ZipEntry(""regedit.exe""));in = new FileInputStream(f1);while (in.available() > 0) {out.write(in.read());}in.close();out.closeEntry();out.putNextEntry(new ZipEntry(""win.ini""));in = new FileInputStream(f2);while (in.available() > 0) {out.write(in.read());}in.close();out.closeEntry();out.close();}private void constructDialogContent(Composite parent) {SashForm splitter = new SashForm(parent, SWT.HORIZONTAL);splitter.setLayoutData(new GridData(GridData.FILL_BOTH));Group fragmentsGroup = new Group(splitter, SWT.NONE);fragmentsGroup.setLayout(new GridLayout(1, false));fragmentsGroup.setText(""Result Fragments"");fragmentsTable = CheckboxTableViewer.newCheckList(fragmentsGroup, SWT.NONE);fragmentsTable.getTable().setLayoutData(new GridData(GridData.FILL_BOTH));fragmentsTable.setContentProvider(new ArrayContentProvider());fragmentsTable.setLabelProvider(new LabelProvider() {public Image getImage(Object element) {return JFaceResources.getImage(WsmoImageRegistry.INSTANCE_ICON);}public String getText(Object element) {if (element == null) {return """";}if (element instanceof ProcessFragment) {ProcessFragment frag = (ProcessFragment) element;String label = (frag.getName() == null) ? "" <no-fragment-name>"" : frag.getName();if (frag.getDescription() != null) {label += ""  ["" + Utils.normalizeSpaces(frag.getDescription()) + ']';}return label;}return element.toString();}});fragmentsTable.setInput(results.toArray());final MenuManager menuMgr = new MenuManager();menuMgr.setRemoveAllWhenShown(true);menuMgr.addMenuListener(new IMenuListener() {public void menuAboutToShow(IMenuManager mgr) {if (false == GUIHelper.containsCursor(fragmentsTable.getTable())) {return;}if (false == fragmentsTable.getSelection().isEmpty()) {menuMgr.add(new Action(""Edit Name"") {public void run() {doEditName();}});menuMgr.add(new Action(""Edit Description"") {public void run() {doEditDescription();}});menuMgr.add(new Separator());}menuMgr.add(new Action(""Select All"") {public void run() {fragmentsTable.setAllChecked(true);updateSelectionMonitor();}});menuMgr.add(new Separator());menuMgr.add(new Action(""Unselect All"") {public void run() {fragmentsTable.setAllChecked(false);updateSelectionMonitor();}});}});fragmentsTable.getTable().setMenu(menuMgr.createContextMenu(fragmentsTable.getTable()));fragmentsTable.addSelectionChangedListener(new ISelectionChangedListener() {public void selectionChanged(SelectionChangedEvent event) {updatePreviewPanel((IStructuredSelection) event.getSelection());}});new FragmentsToolTipProvider(this.fragmentsTable.getTable());Group previewGroup = new Group(splitter, SWT.NONE);previewGroup.setLayout(new GridLayout(1, false));previewGroup.setText(""Fragment Preview"");createZoomToolbar(previewGroup);previewArea = new Composite(previewGroup, SWT.BORDER);previewArea.setLayoutData(new GridData(GridData.FILL_BOTH));previewArea.setLayout(new GridLayout(1, false));viewer = new ScrollingGraphicalViewer();viewer.createControl(previewArea);ScalableFreeformRootEditPart rootEditPart = new ScalableFreeformRootEditPart();viewer.setRootEditPart(rootEditPart);viewer.setEditPartFactory(new GraphicalPartFactory());viewer.getControl().setBackground(ColorConstants.listBackground);viewer.getControl().setLayoutData(new GridData(GridData.FILL_BOTH));ZoomManager zoomManager = rootEditPart.getZoomManager();ArrayList<String> zoomContributions = new ArrayList<String>();zoomContributions.add(ZoomManager.FIT_ALL);zoomContributions.add(ZoomManager.FIT_HEIGHT);zoomContributions.add(ZoomManager.FIT_WIDTH);zoomManager.setZoomLevelContributions(zoomContributions);zoomManager.setZoomLevels(new double[] { 0.25, 0.33, 0.5, 0.75, 1.0 });zoomManager.setZoom(1.0);Composite businessGoalPanel = new Composite(previewGroup, SWT.NONE);businessGoalPanel.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));businessGoalPanel.setLayout(new GridLayout(4, false));Label lab = new Label(businessGoalPanel, SWT.NONE);lab.setText(""Process goal:"");bpgIRI = new Text(businessGoalPanel, SWT.BORDER | SWT.READ_ONLY);bpgIRI.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));selectBpgButton = new Button(businessGoalPanel, SWT.NONE);selectBpgButton.setText(""Select"");selectBpgButton.setEnabled(false);selectBpgButton.addSelectionListener(new SelectionAdapter() {public void widgetSelected(SelectionEvent s) {doSelectProcessGoal();}});clearBpgButton = new Button(businessGoalPanel, SWT.NONE);clearBpgButton.setText(""Clear"");clearBpgButton.setEnabled(false);clearBpgButton.addSelectionListener(new SelectionAdapter() {public void widgetSelected(SelectionEvent s) {IStructuredSelection sel = (IStructuredSelection) fragmentsTable.getSelection();if (sel.isEmpty() || false == sel.getFirstElement() instanceof ProcessFragment) {return;}((ProcessFragment) sel.getFirstElement()).setBusinessProcessGoal(null);updatePreviewPanel(sel);}});splitter.setWeights(new int[] { 1, 2 });}public static void copyFile(String from, String to, boolean append) throws IOException {FileChannel in = new FileInputStream(from).getChannel();FileChannel out = new FileOutputStream(to, append).getChannel();ByteBuffer buffer = ByteBuffer.allocate(BSIZE);while (in.read(buffer) != -1) {buffer.flip();out.write(buffer);buffer.clear();}}public void fetchFile(String ID) {String url = ""http://www.nal.usda.gov/cgi-bin/agricola-ind?bib="" + ID + ""&conf=010000++++++++++++++&screen=MA"";System.out.println(url);try {PrintWriter pw = new PrintWriter(new FileWriter(""MARC"" + ID + "".txt""));if (!id.contains(""MARC"" + ID + "".txt"")) {id.add(""MARC"" + ID + "".txt"");}in = new BufferedReader(new InputStreamReader((new URL(url)).openStream()));in.readLine();String inputLine, stx = """";StringBuffer sb = new StringBuffer();while ((inputLine = in.readLine()) != null) {if (inputLine.startsWith(""<TR><TD><B>"")) {String sts = (inputLine.substring(inputLine.indexOf(""B>"") + 2, inputLine.indexOf(""</"")));int i = 0;try {i = Integer.parseInt(sts);} catch (NumberFormatException nfe) {}if (i > 0) {stx = stx + ""\n"" + sts + "" - "";} else {stx += sts;}}if (!(inputLine.startsWith(""<"") || inputLine.startsWith("" <"") || inputLine.startsWith("">""))) {String tx = inputLine.trim();stx += tx;}}pw.println(stx);pw.close();} catch (Exception e) {System.out.println(""Couldn't open stream"");System.out.println(e);}}public void afficherMetar(String oaci) {if (oaci.length() != 4) {System.out.println(""un code METAR est composé de 4 caracteres"");}oaci.toUpperCase();try {URL url = new URL(""http://weather.noaa.gov/pub/data/observations/metar/stations/"" + oaci + "".TXT"");System.out.println(url.toString());Proxy acReunion = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(""proxy.ac-reunion.fr"", 8080));HttpURLConnection con = (HttpURLConnection) url.openConnection(acReunion);InputStreamReader isr = new InputStreamReader(con.getInputStream());BufferedReader in = new BufferedReader(isr);Vector vListe = new Vector();String line;System.out.println(""Affichage METAR"");System.out.println(""--------"");while ((line = in.readLine()) != null) {System.out.println(line);vListe.add(line);}System.out.println(""--------"");in.close();} catch (java.io.FileNotFoundException e) {System.out.println(""Impossible de trouver le METAR"");System.out.println(e);} catch (Exception e) {System.out.println(e.toString());}}public void downloadTranslationsAndReload() {File languages = new File(this.translationsFile);try {URL languageURL = new URL(languageServer);InputStream is = languageURL.openStream();OutputStream os = new FileOutputStream(languages);byte[] read = new byte[512000];int bytesRead = 0;do {bytesRead = is.read(read);if (bytesRead > 0) {os.write(read, 0, bytesRead);}} while (bytesRead > 0);is.close();os.close();this.loadTranslations();} catch (Exception e) {System.err.println(""Remote languages file not found!"");if (languages.exists()) {try {XMLDecoder loader = new XMLDecoder(new FileInputStream(languages));this.languages = (Hashtable) loader.readObject();loader.close();} catch (Exception ex) {ex.printStackTrace();this.languages.put(naiveLanguage, new Hashtable());}} else this.languages.put(naiveLanguage, new Hashtable());}}private void externalizeFiles(Document doc, File out) throws IOException {File[] files = doc.getImages();if (files.length > 0) {File dir = new File(out.getParentFile(), out.getName() + "".images"");if (!dir.mkdirs()) throw new IOException(""cannot create directory "" + dir);if (dir.exists()) {for (int i = 0; i < files.length; i++) {File file = files[i];File copy = new File(dir, file.getName());FileChannel from = null, to = null;long count = -1;try {from = new FileInputStream(file).getChannel();count = from.size();to = new FileOutputStream(copy).getChannel();from.transferTo(0, count, to);doc.setImage(file, dir.getName() + ""/"" + copy.getName());} catch (Throwable t) {LOG.log(Level.WARNING, ""Copying '"" + file + ""' to '"" + copy + ""' failed (size="" + count + "")"", t);} finally {try {to.close();} catch (Throwable t) {}try {from.close();} catch (Throwable t) {}}}}}}protected static void clearTables() throws SQLException {Connection conn = null;Statement stmt = null;try {conn = FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();ClearData.clearTables(stmt);stmt.executeUpdate(""delete from Objects"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (1, 'Money value')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (2, 'Date')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (3, 'Unix path')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (4, 'Dos path')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (5, 'Time')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (6, 'IP address')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (7, 'Internet hostname')"");stmt.executeUpdate(""insert into Objects (ObjectId, Description) values (8, 'Number')"");conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}}public final void close() throws IOException {if (dataStream == null) throw new NullPointerException(""Write stream is null."");dataStream.flush();dataStream.close();dataStream = null;File tmpFile = new File(packPath + "".tmp"");FileOutputStream packStream = new FileOutputStream(packPath);try {String nbFiles = Long.toString(currentNbFiles) + ""\0"";packStream.write(FLAT_PACK_HEADER.getBytes(Charsets.ISO_8859_1));structBufferWriter.flush();structBufferWriter.close();int headerSize = structBuffer.size() + nbFiles.length();packStream.write(Integer.toString(headerSize).getBytes(Charsets.ISO_8859_1));packStream.write('\0');packStream.write(nbFiles.getBytes(Charsets.ISO_8859_1));structBuffer.writeTo(packStream);structBufferWriter = null;structBuffer = null;FileInputStream in = new FileInputStream(tmpFile);try {byte[] buffer = new byte[FILE_COPY_BUFFER_LEN];int read;while ((read = in.read(buffer)) > 0) packStream.write(buffer, 0, read);packStream.flush();packStream.close();} finally {Utilities.closeStream(in);}} finally {Utilities.closeStream(packStream);}if (tmpFile.isFile()) Utilities.deleteFile(tmpFile);packPath = null;structBuffer = null;}"	5
"public void process(Group group, List resourcesName, List excludeResources, ServletContext servletContext, Writer out, String location) throws IOException {LOG.debug(""Merging content of group : "" + group.getName());for (Iterator iterator = group.getSubgroups().iterator(); iterator.hasNext(); ) {Group subGroup = (Group) iterator.next();String subLocation = subGroup.getBestLocation(location);ResourcesProcessor subGroupProcessor = null;if (subGroup.isMinimize() == null) subGroupProcessor = this; else subGroupProcessor = subGroup.getJSProcessor();subGroupProcessor.process(subGroup, subGroup.getJsNames(), excludeResources, servletContext, out, subLocation);}for (Iterator it = resourcesName.iterator(); it.hasNext(); ) {URL url = null;String path = (String) it.next();if (!excludeResources.contains(path)) {url = URLUtils.getLocalURL(path, servletContext);if (url == null) {String webPath = URLUtils.concatUrlWithSlaches(group.getBestLocation(location), path);url = URLUtils.getWebUrlResource(webPath);}if (url == null) {throw new IOException(""The resources '"" + path + ""' could not be found neither in the webapp folder nor in a jar"");}InputStream in = null;try {in = url.openStream();IOUtils.copy(in, out, URLUtils.DEFAULT_ENCODING);out.write(""\n\n"");} catch (Exception e) {LOG.error(""Merge failed for file "" + path, e);} finally {if (in != null) in.close();}excludeResources.add(path);}}}public Set<String> getAvailableRoles() {if (availableRoles == null) {availableRoles = new HashSet<String>();try {Enumeration<URL> resources = org.springframework.util.ClassUtils.getDefaultClassLoader().getResources(ROLE_FILE_LOCATION);while (resources.hasMoreElements()) {URL url = resources.nextElement();InputStream is = null;try {URLConnection con = url.openConnection();con.setUseCaches(false);is = con.getInputStream();List<String> lines = IOUtils.readLines(is, ""ISO-8859-1"");if (lines != null) {for (String line : lines) {availableRoles.add(line.trim());}}} finally {if (is != null) {is.close();}}}} catch (IOException e) {throw new RuntimeException(e);}}return availableRoles;}public static void copyFile(File in, File out) throws ObclipseException {try {FileChannel inChannel = null;FileChannel outChannel = null;try {inChannel = new FileInputStream(in).getChannel();outChannel = new FileOutputStream(out).getChannel();inChannel.transferTo(0, inChannel.size(), outChannel);} finally {if (inChannel != null) {inChannel.close();}if (outChannel != null) {outChannel.close();}}} catch (FileNotFoundException e) {Msg.error(""The file ''{0}'' to copy does not exist!"", e, in.getAbsolutePath());} catch (IOException e) {Msg.ioException(in, out, e);}}public static String convertToSha1(final String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {MessageDigest md;md = MessageDigest.getInstance(""SHA-1"");byte[] sha1hash = new byte[40];md.update(text.getBytes(""iso-8859-1""), 0, text.length());sha1hash = md.digest();return convertToHex(sha1hash);}public static String getHashedPasswordTc(String password) throws java.security.NoSuchAlgorithmException {java.security.MessageDigest d = java.security.MessageDigest.getInstance(""MD5"");d.reset();d.update(password.getBytes());byte[] buf = d.digest();char[] cbf = new char[buf.length * 2];for (int jj = 0, kk = 0; jj < buf.length; jj++) {cbf[kk++] = ""0123456789abcdef"".charAt((buf[jj] >> 4) & 0x0F);cbf[kk++] = ""0123456789abcdef"".charAt(buf[jj] & 0x0F);}return new String(cbf);}public static String getHashedStringMD5(String value) throws java.security.NoSuchAlgorithmException {java.security.MessageDigest d = java.security.MessageDigest.getInstance(""MD5"");d.reset();d.update(value.getBytes());byte[] buf = d.digest();return new String(buf);}public static void bubble(double[] a) {for (int i = a.length - 1; i > 0; i--) for (int j = 0; j < i; j++) if (a[j] > a[j + 1]) {double temp = a[j];a[j] = a[j + 1];a[j + 1] = temp;}}public static String getRandomUserAgent() {if (USER_AGENT_CACHE == null) {Collection<String> userAgentsCache = new ArrayList<String>();try {URL url = Tools.getResource(UserAgent.class.getClassLoader(), ""user-agents-browser.txt"");BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String str;while ((str = in.readLine()) != null) {userAgentsCache.add(str);}in.close();USER_AGENT_CACHE = userAgentsCache.toArray(new String[userAgentsCache.size()]);} catch (Exception e) {System.err.println(""Can not read file; using default user-agent; error message: "" + e.getMessage());return DEFAULT_USER_AGENT;}}return USER_AGENT_CACHE[new Random().nextInt(USER_AGENT_CACHE.length)];}public String contactService(String service, StringBuffer xmlRequest) throws Exception {Logger.debug(UPSConnections.class, ""UPS CONNECTIONS ***** Started "" + service + "" "" + new Date().toString() + "" *****"");HttpURLConnection connection;URL url;String response = """";try {Logger.debug(UPSConnections.class, ""connect to "" + protocol + ""://"" + hostname + ""/"" + URLPrefix + ""/"" + service);if (protocol.equalsIgnoreCase(""https"")) {java.security.Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());System.getProperties().put(""java.protocol.handler.pkgs"", ""com.sun.net.ssl.internal.www.protocol"");url = new URL(protocol + ""://"" + hostname + ""/"" + URLPrefix + ""/"" + service);connection = (HttpsURLConnection) url.openConnection();} else {url = new URL(protocol + ""://"" + hostname + ""/"" + URLPrefix + ""/"" + service);connection = (HttpURLConnection) url.openConnection();}Logger.debug(UPSConnections.class, ""Establishing connection with "" + url.toString());connection.setDoOutput(true);connection.setDoInput(true);connection.setUseCaches(false);OutputStream out = connection.getOutputStream();StringBuffer request = new StringBuffer();request.append(accessXMLRequest());request.append(xmlRequest);out.write((request.toString()).getBytes());Logger.debug(UPSConnections.class, ""Transmission sent to "" + url.toString() + "":\n"" + xmlRequest);out.close();try {response = readURLConnection(connection);} catch (Exception e) {Logger.debug(UPSConnections.class, ""Error in reading URL Connection"" + e.getMessage());throw e;}Logger.debug(UPSConnections.class, ""Response = "" + response);} catch (Exception e1) {Logger.info(UPSConnections.class, ""Error sending data to server"" + e1.toString());Logger.debug(UPSConnections.class, ""Error sending data to server"" + e1.toString());} finally {Logger.info(UPSConnections.class, ""****** Transmission Finished "" + service + "" "" + new Date().toString() + "" *********"");Logger.debug(UPSConnections.class, ""****** Transmission Finished "" + service + "" "" + new Date().toString() + "" *********"");}return response;}private static void loadQueryProcessorFactories() {qpFactoryMap = new HashMap<String, QueryProcessorFactoryIF>();Enumeration<URL> resources = null;try {resources = QueryUtils.class.getClassLoader().getResources(RESOURCE_STRING);} catch (IOException e) {log.error(""Error while trying to look for "" + ""QueryProcessorFactoryIF implementations."", e);}while (resources != null && resources.hasMoreElements()) {URL url = resources.nextElement();InputStream is = null;try {is = url.openStream();} catch (IOException e) {log.warn(""Error opening stream to QueryProcessorFactoryIF service description."", e);}if (is != null) {BufferedReader rdr = new BufferedReader(new InputStreamReader(is));String line;try {while ((line = rdr.readLine()) != null) {try {ClassLoader classLoader = Thread.currentThread().getContextClassLoader();Class<?> c = Class.forName(line, true, classLoader);if (QueryProcessorFactoryIF.class.isAssignableFrom(c)) {QueryProcessorFactoryIF factory = (QueryProcessorFactoryIF) c.newInstance();qpFactoryMap.put(factory.getQueryLanguage().toUpperCase(), factory);} else {log.warn(""Wrong entry for QueryProcessorFactoryIF service "" + ""description, '"" + line + ""' is not implementing the "" + ""correct interface."");}} catch (Exception e) {log.warn(""Could not create an instance for "" + ""QueryProcessorFactoryIF service '"" + line + ""'."");}}} catch (IOException e) {log.warn(""Could not read from QueryProcessorFactoryIF "" + ""service descriptor."", e);}}}if (!qpFactoryMap.containsKey(DEFAULT_LANGUAGE)) {qpFactoryMap.put(DEFAULT_LANGUAGE, new TologQueryProcessorFactory());}}"	5
"public static synchronized String hash(String plaintext) {MessageDigest md;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {return null;}try {md.update(plaintext.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {return null;}byte raw[] = md.digest();return (new BASE64Encoder()).encode(raw);}public static int[] bubbleSortOtimizado(int... a) {boolean swapped;int n = a.length - 2;do {swapped = false;for (int i = 0; i <= n; i++) {if (a[i] > a[i + 1]) {int tmp = a[i];a[i] = a[i + 1];a[i + 1] = tmp;swapped = true;}}n = n - 1;} while (swapped);return a;}@Nullablepublic LSInput resolveResource(String type, String namespaceURI, String publicId, String systemId, String baseURI) {if (logger.isLoggable(Level.FINE)) {logger.fine(""Try to resolve the resource with the public ID: "" + publicId + "", system ID: "" + systemId + "" and baseURI "" + baseURI + ""."");}InputSource inputSource = null;try {inputSource = resolveIntern(publicId, systemId);} catch (IOException e) {logger.log(Level.SEVERE, """", e);}if (inputSource != null) {return new LSInputSAXWrapper(inputSource);}if (baseURI != null) {String resolved = baseURI.substring(0, baseURI.lastIndexOf('/') + 1) + systemId;try {URL url = new URL(resolved);url.openConnection().connect();if (logger.isLoggable(Level.FINE)) {logger.fine(""Resolve with help of baseURI to: "" + resolved);}inputSource = new InputSource(resolved);return new LSInputSAXWrapper(inputSource);} catch (MalformedURLException e) {} catch (IOException e) {}}if (logger.isLoggable(Level.WARNING)) {logger.warning(""Failed to resolve the resource with the public ID: "" + publicId + "", system ID: "" + systemId + "" and baseURI "" + baseURI + ""."");}return null;}private static void loadProperties(Properties props, String res, boolean warnIfNotFound) throws IOException {log.debug(""Reading properties from resource "" + res);URL url = ResourceFileStorageFactory.class.getResource(res);if (null == url) {if (warnIfNotFound) {log.warn(""Resource "" + res + "" was not found"");} else {log.debug(""Resource "" + res + "" was not found"");}} else {InputStream in = url.openStream();try {props.load(in);} finally {in.close();}}}public void actionPerformed(ActionEvent e) {String aboutText = ""Slug application."";String aboutURL = System.getProperty(GateConstants.ABOUT_URL_JAVA_PROPERTY_NAME);boolean canShowInPane = false;if (aboutURL != null) {try {URL url = new URL(aboutURL);AboutPaneDialog dlg = new AboutPaneDialog(ShellSlacFrame.this, ""Slug application about"", true);canShowInPane = dlg.setURL(url);if (canShowInPane) {dlg.setSize(300, 200);dlg.setLocationRelativeTo(ShellSlacFrame.this);dlg.setVisible(true);} else {BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String line = """";StringBuffer content = new StringBuffer();do {content.append(line);line = reader.readLine();} while (line != null);if (content.length() != 0) {aboutText = content.toString();}}} catch (Exception ex) {if (DEBUG) {ex.printStackTrace();}}}if (!canShowInPane) JOptionPane.showMessageDialog(ShellSlacFrame.this, aboutText, ""Slug application about"", JOptionPane.INFORMATION_MESSAGE);}public boolean extract(File f, String folder) {Enumeration entries;ZipFile zipFile;try {zipFile = new ZipFile(f);entries = zipFile.getEntries();while (entries.hasMoreElements()) {ZipArchiveEntry entry = (ZipArchiveEntry) entries.nextElement();if (entry == null) continue;String path = folder + ""/"" + entry.getName().replace('\\', '/');if (!entry.isDirectory()) {File destFile = new File(path);String parent = destFile.getParent();if (parent != null) {File parentFile = new File(parent);if (!parentFile.exists()) {parentFile.mkdirs();}}copyInputStream(zipFile.getInputStream(entry), new BufferedOutputStream(new FileOutputStream(destFile)));}}zipFile.close();} catch (IOException ioe) {this.errMsg = ioe.getMessage();Malgn.errorLog(""{Zip.unzip} "" + ioe.getMessage());return false;}return true;}protected void handleConnection(Socket server) throws IOException {OutputStream out = server.getOutputStream();PrintWriter pout = new PrintWriter(out, true);BufferedReader in = SocketUtil.getReader(server);String failureReason = null;int failureCode = 0;String httpVersion = ""HTTP/1.0"";String uri = null;String command = in.readLine();URL url = null;if (command != null) {StringTokenizer tokenizer = new StringTokenizer(command);if (tokenizer.countTokens() != 3) {failureCode = 400;failureReason = ""Illformed Request-Line"";} else {String method = tokenizer.nextToken();if (!method.equalsIgnoreCase(""get"")) {failureCode = 501;failureReason = ""Only supports GET method"";} else {uri = tokenizer.nextToken();httpVersion = tokenizer.nextToken();try {url = getURL(uri);} catch (IOException e) {failureCode = 404;failureReason = ""resource not found"";}}}} else {failureCode = 400;failureReason = ""Null request"";}if (url != null) {InputStream stream = null;try {URLConnection connection = url.openConnection();byte[] chunk = new byte[1024];int read = 0;pout.println(httpVersion + "" 200 "");pout.println(""Content-Type: "" + connection.getContentType());pout.println(""Content-Length: "" + connection.getContentLength());pout.println(""Content-Encoding: "" + connection.getContentEncoding());pout.println();stream = connection.getInputStream();read = stream.read(chunk);while (read != -1) {out.write(chunk, 0, read);read = stream.read(chunk);}} catch (IOException e) {failureCode = 500;failureReason = ""problem reading the resource content"";} finally {if (stream != null) {stream.close();}}} else {failureCode = 404;failureReason = ""resource not found"";}if (failureCode != 0) {pout.println(httpVersion + "" "" + failureCode + "" "" + failureReason);pout.println();}doDelay();server.close();}@Overridepublic void run() {if (mMode == 0) {long currentVersion = Version.extractVersion(App.getVersion());if (currentVersion == 0) {mMode = 2;RESULT = MSG_UP_TO_DATE;return;}long versionAvailable = currentVersion;mMode = 2;try {StringBuilder buffer = new StringBuilder(mCheckURL);try {NetworkInterface ni = NetworkInterface.getByInetAddress(InetAddress.getLocalHost());if (!ni.isLoopback()) {if (ni.isUp()) {if (!ni.isVirtual()) {buffer.append('?');byte[] macAddress = ni.getHardwareAddress();for (byte one : macAddress) {buffer.append(Integer.toHexString(one >>> 4 & 0xF));buffer.append(Integer.toHexString(one & 0xF));}}}}} catch (Exception exception) {}URL url = new URL(buffer.toString());BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String line = in.readLine();while (line != null) {StringTokenizer tokenizer = new StringTokenizer(line, ""\t"");if (tokenizer.hasMoreTokens()) {try {if (tokenizer.nextToken().equalsIgnoreCase(mProductKey)) {String token = tokenizer.nextToken();long version = Version.extractVersion(token);if (version > versionAvailable) {versionAvailable = version;}}} catch (Exception exception) {}}line = in.readLine();}} catch (Exception exception) {}if (versionAvailable > currentVersion) {Preferences prefs = Preferences.getInstance();String humanReadableVersion = Version.getHumanReadableVersion(versionAvailable);NEW_VERSION_AVAILABLE = true;RESULT = MessageFormat.format(MSG_OUT_OF_DATE, humanReadableVersion);if (versionAvailable > Version.extractVersion(prefs.getStringValue(MODULE, LAST_VERSION_KEY, App.getVersion()))) {prefs.setValue(MODULE, LAST_VERSION_KEY, humanReadableVersion);prefs.save();mMode = 1;EventQueue.invokeLater(this);return;}} else {RESULT = MSG_UP_TO_DATE;}} else if (mMode == 1) {if (App.isNotificationAllowed()) {String result = getResult();mMode = 2;if (WindowUtils.showConfirmDialog(null, result, MSG_UPDATE_TITLE, JOptionPane.OK_CANCEL_OPTION, new String[] { MSG_UPDATE_TITLE, MSG_IGNORE_TITLE }, MSG_UPDATE_TITLE) == JOptionPane.OK_OPTION) {goToUpdate();}} else {DelayedTask.schedule(this, 250);}}}public static void main(String[] args) throws Exception {String layerName = args[0];String layerDescription = args[1];String units = args[2];String rawDataDirPath = args[3];String processDirPath = args[4];String divaDirPath = args[5];String legendDirPath = args[6];String geotiffDirPath = args[7];String dbJdbcUrl = args[8];String dbUsername = args[9];String dbPassword = args[10];String geoserverUsername = args[11];String geoserverPassword = args[12];File rawDataDir = new File(rawDataDirPath);if (!rawDataDir.exists() || !rawDataDir.isDirectory()) {throw new RuntimeException(""Supplied raw data directory "" + rawDataDirPath + "" does not exist or is not a directory"");}File processDir = new File(processDirPath);if (!processDir.exists() || !processDir.isDirectory()) {throw new RuntimeException(""Supplied process directory "" + processDirPath + "" does not exist or is not a directory"");}File divaDir = new File(divaDirPath);if (!divaDir.exists() || !divaDir.isDirectory()) {throw new RuntimeException(""Supplied diva directory "" + divaDirPath + "" does not exist or is not a directory"");}File legendDir = new File(legendDirPath);if (!legendDir.exists() || !legendDir.isDirectory()) {throw new RuntimeException(""Supplied legend directory "" + legendDirPath + "" does not exist or is not a directory"");}File geotiffDir = new File(geotiffDirPath);if (!geotiffDir.exists() || !geotiffDir.isDirectory()) {throw new RuntimeException(""Supplied geotiff directory "" + geotiffDirPath + "" does not exist or is not a directory"");}System.out.println(""Beginning environmetal load"");System.out.println(""Connecting to database"");Class.forName(""org.postgresql.Driver"");Properties props = new Properties();props.setProperty(""user"", dbUsername);props.setProperty(""password"", dbPassword);Connection conn = DriverManager.getConnection(dbJdbcUrl, props);conn.setAutoCommit(false);try {File layerProcessDir = new File(processDir, layerName);layerProcessDir.mkdir();System.out.println(""Running gdalwarp"");File hdrFile = new File(rawDataDir, ""hdr.adf"");if (!hdrFile.exists()) {throw new RuntimeException(""Could not find hdr.adf in "" + rawDataDirPath);}File bilFile = new File(layerProcessDir, layerName + "".bil"");Process procGdalWarp = Runtime.getRuntime().exec(new String[] { ""gdalwarp"", ""-of"", ""EHdr"", ""-ot"", ""Float32"", hdrFile.getAbsolutePath(), bilFile.getAbsolutePath() });int gdalWarpReturnVal = procGdalWarp.waitFor();if (gdalWarpReturnVal != 0) {String gdalWarpErrorOutput = IOUtils.toString(procGdalWarp.getErrorStream());throw new RuntimeException(""gdalwarp failed: "" + gdalWarpErrorOutput);}System.out.println(""Running Bil2diva"");boolean bil2DivaSuccess = Bil2diva.bil2diva(layerProcessDir.getAbsolutePath() + File.separator + layerName, divaDir.getAbsolutePath() + File.separator + layerName, units);if (!bil2DivaSuccess) {throw new RuntimeException(""Bil2diva Failed"");}System.out.println(""Running GridLegend"");boolean gridLegendSuccess = GridLegend.generateGridLegend(divaDir.getAbsolutePath() + File.separator + layerName, legendDir.getAbsolutePath() + File.separator + layerName, 1, false);if (!gridLegendSuccess) {throw new RuntimeException(""GridLegend Failed"");}System.out.println(""Running gdal_translate"");File geotiffFile = new File(geotiffDir, layerName + "".tif"");Process procGdalTranslate = Runtime.getRuntime().exec(new String[] { ""gdal_translate"", ""-of"", ""GTiff"", bilFile.getAbsolutePath(), geotiffFile.getAbsolutePath() });int gdalTranslateReturnVal = procGdalTranslate.waitFor();if (gdalTranslateReturnVal != 0) {String gdalTranslateErrorOutput = IOUtils.toString(procGdalTranslate.getErrorStream());throw new RuntimeException(""gdal_translate failed: "" + gdalTranslateErrorOutput);}System.out.println(""Extracting extents and min/max environmental value from diva .grd file"");File divaGrd = new File(divaDir, layerName + "".grd"");if (!divaGrd.exists()) {throw new RuntimeException(""Could not locate diva .grd file: "" + divaGrd.toString());}String strDivaGrd = FileUtils.readFileToString(divaGrd);float minValue = Float.parseFloat(matchPattern(strDivaGrd, ""^MinValue=(.+)$""));float maxValue = Float.parseFloat(matchPattern(strDivaGrd, ""^MaxValue=(.+)$""));float minLatitude = Float.parseFloat(matchPattern(strDivaGrd, ""^MinY=(.+)$""));float maxLatitude = Float.parseFloat(matchPattern(strDivaGrd, ""^MaxY=(.+)$""));float minLongitude = Float.parseFloat(matchPattern(strDivaGrd, ""^MinX=(.+)$""));float maxLongitude = Float.parseFloat(matchPattern(strDivaGrd, ""^MaxX=(.+)$""));System.out.println(""Generating ID for new layer..."");Statement st = conn.createStatement();ResultSet rs = st.executeQuery(""SELECT MAX(id) from layers"");rs.next();int id = 1;String idAsString = rs.getString(1);if (idAsString != null) {id = Integer.parseInt(idAsString);id++;}String displayPath = MessageFormat.format(GEOSERVER_QUERY_TEMPLATE, layerName);System.out.println(""Creating layers table entry..."");PreparedStatement createLayersStatement = createLayersInsert(conn, id, layerDescription, divaDir.getAbsolutePath(), layerName, displayPath, minLatitude, minLongitude, maxLatitude, maxLongitude, minValue, maxValue, units);createLayersStatement.execute();System.out.println(""Creating fields table entry..."");PreparedStatement createFieldsStatement = createFieldsInsert(conn, id, layerName, layerDescription);createFieldsStatement.execute();DefaultHttpClient httpClient = new DefaultHttpClient();httpClient.getCredentialsProvider().setCredentials(new AuthScope(""localhost"", 8082), new UsernamePasswordCredentials(geoserverUsername, geoserverPassword));System.out.println(""Creating layer in geoserver..."");HttpPut createLayerPut = new HttpPut(String.format(""http://localhost:8082/geoserver/rest/workspaces/ALA/coveragestores/%s/external.geotiff"", layerName));createLayerPut.setHeader(""Content-type"", ""text/plain"");createLayerPut.setEntity(new StringEntity(geotiffFile.toURI().toURL().toString()));HttpResponse createLayerResponse = httpClient.execute(createLayerPut);if (createLayerResponse.getStatusLine().getStatusCode() != 200) {throw new RuntimeException(""Error creating layer in geoserver: "" + createLayerResponse.toString());}EntityUtils.consume(createLayerResponse.getEntity());System.out.println(""Creating style in geoserver"");HttpPost createStylePost = new HttpPost(""http://localhost:8082/geoserver/rest/styles"");createStylePost.setHeader(""Content-type"", ""text/xml"");createStylePost.setEntity(new StringEntity(String.format(""<style><name>%s_style</name><filename>%s.sld</filename></style>"", layerName, layerName)));HttpResponse createStyleResponse = httpClient.execute(createLayerPut);if (createStyleResponse.getStatusLine().getStatusCode() != 201) {throw new RuntimeException(""Error creating style in geoserver: "" + createStyleResponse.toString());}EntityUtils.consume(createStyleResponse.getEntity());System.out.println(""Uploading sld file to geoserver"");File sldFile = new File(legendDir, layerName + "".sld"");String sldData = FileUtils.readFileToString(sldFile);HttpPut uploadSldPut = new HttpPut(String.format(""http://localhost:8082/geoserver/rest/styles/%s_style"", layerName));uploadSldPut.setHeader(""Content-type"", ""application/vnd.ogc.sld+xml"");uploadSldPut.setEntity(new StringEntity(sldData));HttpResponse uploadSldResponse = httpClient.execute(uploadSldPut);if (uploadSldResponse.getStatusLine().getStatusCode() != 200) {throw new RuntimeException(""Error uploading sld file geoserver: "" + uploadSldResponse.toString());}EntityUtils.consume(uploadSldResponse.getEntity());System.out.println(""Setting default style in geoserver"");HttpPut setDefaultStylePut = new HttpPut(String.format(""http://localhost:8082/geoserver/rest/layers/ALA:%s"", layerName));setDefaultStylePut.setHeader(""Content-type"", ""text/xml"");setDefaultStylePut.setEntity(new StringEntity(String.format(""<layer><enabled>true</enabled><defaultStyle><name>%s_style</name></defaultStyle></layer>"", layerName)));HttpResponse setDefaultStyleResponse = httpClient.execute(createLayerPut);if (setDefaultStyleResponse.getStatusLine().getStatusCode() != 200) {throw new RuntimeException(""Setting default style in geoserver: "" + setDefaultStyleResponse.toString());}EntityUtils.consume(setDefaultStyleResponse.getEntity());conn.commit();} catch (Exception ex) {ex.printStackTrace();conn.rollback();}}public byte[] getBytesFromUrl(String url) {try {HttpGet get = new HttpGet(url);HttpResponse response = this.getHttpClient().execute(get);HttpEntity entity = response.getEntity();if (entity == null) {throw new RuntimeException(""response body was empty"");}return EntityUtils.toByteArray(entity);} catch (RuntimeException ex) {throw ex;} catch (Exception ex) {throw new RuntimeException(ex);}}"	5
"public Point getCoordinates(String address, String city, String state, String country) {StringBuilder queryString = new StringBuilder();StringBuilder urlString = new StringBuilder();StringBuilder response = new StringBuilder();if (address != null) {queryString.append(address.trim().replaceAll("" "", ""+""));queryString.append(""+"");}if (city != null) {queryString.append(city.trim().replaceAll("" "", ""+""));queryString.append(""+"");}if (state != null) {queryString.append(state.trim().replaceAll("" "", ""+""));queryString.append(""+"");}if (country != null) {queryString.append(country.replaceAll("" "", ""+""));}urlString.append(""http://maps.google.com/maps/geo?key="");urlString.append(key);urlString.append(""&sensor=false&output=json&oe=utf8&q="");urlString.append(queryString.toString());try {URL url = new URL(urlString.toString());BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = reader.readLine()) != null) {response.append(line);}reader.close();JSONObject root = (JSONObject) JSONValue.parse(response.toString());JSONObject placemark = (JSONObject) ((JSONArray) root.get(""Placemark"")).get(0);JSONArray coordinates = (JSONArray) ((JSONObject) placemark.get(""Point"")).get(""coordinates"");Point point = new Point();point.setLatitude((Double) coordinates.get(1));point.setLongitude((Double) coordinates.get(0));return point;} catch (MalformedURLException ex) {return null;} catch (NullPointerException ex) {return null;} catch (IOException ex) {return null;}}private static void copyFile(File in, File out) throws Exception {FileChannel sourceChannel = new FileInputStream(in).getChannel();FileChannel destinationChannel = new FileOutputStream(out).getChannel();sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel);sourceChannel.close();destinationChannel.close();}private void initialize() {StringBuffer license = new StringBuffer();URL url;InputStreamReader in;BufferedReader reader;String str;JTextArea textArea;JButton button;GridBagConstraints c;setTitle(""mibible License"");setSize(600, 600);setDefaultCloseOperation(DISPOSE_ON_CLOSE);getContentPane().setLayout(new GridBagLayout());url = getClass().getClassLoader().getResource(""LICENSE.txt"");if (url == null) {license.append(""Couldn't locate license file (LICENSE.txt)."");} else {try {in = new InputStreamReader(url.openStream());reader = new BufferedReader(in);while ((str = reader.readLine()) != null) {if (!str.equals("""")) {license.append(str);}license.append(""\n"");}reader.close();} catch (IOException e) {license.append(""Error reading license file "");license.append(""(LICENSE.txt):\n\n"");license.append(e.getMessage());}}textArea = new JTextArea(license.toString());textArea.setEditable(false);c = new GridBagConstraints();c.fill = GridBagConstraints.BOTH;c.weightx = 1.0d;c.weighty = 1.0d;c.insets = new Insets(4, 5, 4, 5);getContentPane().add(new JScrollPane(textArea), c);button = new JButton(""Close"");button.addActionListener(new ActionListener() {public void actionPerformed(ActionEvent e) {dispose();}});c = new GridBagConstraints();c.gridy = 1;c.anchor = GridBagConstraints.CENTER;c.insets = new Insets(10, 10, 10, 10);getContentPane().add(button, c);}public void testJob() {try {URL url = new URL(""http://rickysql.gotoip3.com/mapp/admin/admin.do"");url.openConnection();url.getContent();System.out.print(""00"");} catch (Exception e) {System.out.print(""Daily data update exception:"" + e);}}public List<String> generate(String geronimoVersion, String geronimoHome, String instanceNumber) {geronimoRepository = geronimoHome + ""/repository"";Debug.logInfo(""The WASCE or Geronimo Repository is "" + geronimoRepository, module);Classpath classPath = new Classpath(System.getProperty(""java.class.path""));List<File> elements = classPath.getElements();List<String> jar_version = new ArrayList<String>();String jarPath = null;String jarName = null;String newJarName = null;String jarNameSimple = null;String jarVersion = ""1.0"";int lastDash = -1;for (File f : elements) {if (f.exists()) {if (f.isFile()) {jarPath = f.getAbsolutePath();jarName = f.getName();String jarNameWithoutExt = (String) jarName.subSequence(0, jarName.length() - 4);lastDash = jarNameWithoutExt.lastIndexOf(""-"");if (lastDash > -1) {jarVersion = jarNameWithoutExt.substring(lastDash + 1, jarNameWithoutExt.length());jarNameSimple = jarNameWithoutExt.substring(0, lastDash);boolean alreadyVersioned = 0 < StringUtil.removeRegex(jarVersion, ""[^.0123456789]"").length();if (!alreadyVersioned) {jarVersion = ""1.0"";jarNameSimple = jarNameWithoutExt;newJarName = jarNameWithoutExt + ""-"" + jarVersion + "".jar"";} else {newJarName = jarName;}} else {jarVersion = ""1.0"";jarNameSimple = jarNameWithoutExt;newJarName = jarNameWithoutExt + ""-"" + jarVersion + "".jar"";}jar_version.add(jarNameSimple + ""#"" + jarVersion);String targetDirectory = geronimoRepository + ""/org/ofbiz/"" + jarNameSimple + ""/"" + jarVersion;File targetDir = new File(targetDirectory);if (!targetDir.exists()) {boolean created = targetDir.mkdirs();if (!created) {Debug.logFatal(""Unable to create target directory - "" + targetDirectory, module);return null;}}if (!targetDirectory.endsWith(""/"")) {targetDirectory = targetDirectory + ""/"";}String newCompleteJarName = targetDirectory + newJarName;File newJarFile = new File(newCompleteJarName);try {FileChannel srcChannel = new FileInputStream(jarPath).getChannel();FileChannel dstChannel = new FileOutputStream(newCompleteJarName).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());Debug.log(""Created jar file : "" + newJarName + "" in WASCE or Geronimo repository"", module);srcChannel.close();dstChannel.close();} catch (IOException e) {Debug.logFatal(""Unable to create jar file - "" + newJarName + "" in WASCE or Geronimo repository (certainly already exists)"", module);return null;}}}}List<ComponentConfig.WebappInfo> webApps = ComponentConfig.getAllWebappResourceInfos();File geronimoWebXml = new File(System.getProperty(""ofbiz.home"") + ""/framework/appserver/templates/"" + geronimoVersion + ""/geronimo-web.xml"");for (ComponentConfig.WebappInfo webApp : webApps) {if (null != webApp) {parseTemplate(geronimoWebXml, webApp);}}return jar_version;}protected void ensureProjectExists(String projectName) {List<IClasspathEntry> classpathEntries = new UniqueEList<IClasspathEntry>();IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName);try {boolean isEmptyProject = true;IProjectDescription projectDescription = null;IJavaProject javaProject = JavaCore.create(project);if (!project.exists()) {projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectName);project.create(new NullProgressMonitor());} else {isEmptyProject = false;projectDescription = project.getDescription();classpathEntries.addAll(Arrays.asList(javaProject.getRawClasspath()));}String[] natureIds = projectDescription.getNatureIds();if (natureIds == null) {natureIds = new String[] { JavaCore.NATURE_ID };} else {boolean hasJavaNature = false;boolean hasPDENature = false;for (int i = 0; i < natureIds.length; ++i) {if (JavaCore.NATURE_ID.equals(natureIds[i])) {hasJavaNature = true;}if (""org.eclipse.pde.PluginNature"".equals(natureIds[i])) {hasPDENature = true;}}if (!hasJavaNature) {String[] oldNatureIds = natureIds;natureIds = new String[oldNatureIds.length + 1];System.arraycopy(oldNatureIds, 0, natureIds, 0, oldNatureIds.length);natureIds[oldNatureIds.length] = JavaCore.NATURE_ID;}if (!hasPDENature) {String[] oldNatureIds = natureIds;natureIds = new String[oldNatureIds.length + 1];System.arraycopy(oldNatureIds, 0, natureIds, 0, oldNatureIds.length);natureIds[oldNatureIds.length] = ""org.eclipse.pde.PluginNature"";}}projectDescription.setNatureIds(natureIds);ICommand[] builders = projectDescription.getBuildSpec();if (builders == null) {builders = new ICommand[0];}boolean hasManifestBuilder = false;boolean hasSchemaBuilder = false;for (int i = 0; i < builders.length; ++i) {if (""org.eclipse.pde.ManifestBuilder"".equals(builders[i].getBuilderName())) {hasManifestBuilder = true;}if (""org.eclipse.pde.SchemaBuilder"".equals(builders[i].getBuilderName())) {hasSchemaBuilder = true;}}if (!hasManifestBuilder) {ICommand[] oldBuilders = builders;builders = new ICommand[oldBuilders.length + 1];System.arraycopy(oldBuilders, 0, builders, 0, oldBuilders.length);builders[oldBuilders.length] = projectDescription.newCommand();builders[oldBuilders.length].setBuilderName(""org.eclipse.pde.ManifestBuilder"");}if (!hasSchemaBuilder) {ICommand[] oldBuilders = builders;builders = new ICommand[oldBuilders.length + 1];System.arraycopy(oldBuilders, 0, builders, 0, oldBuilders.length);builders[oldBuilders.length] = projectDescription.newCommand();builders[oldBuilders.length].setBuilderName(""org.eclipse.pde.SchemaBuilder"");}projectDescription.setBuildSpec(builders);project.open(new NullProgressMonitor());project.setDescription(projectDescription, new NullProgressMonitor());if (isEmptyProject) {IFolder sourceContainer = project.getFolder(""src"");sourceContainer.create(false, true, new NullProgressMonitor());IClasspathEntry sourceClasspathEntry = JavaCore.newSourceEntry(new Path(""/"" + projectName + ""/src""));classpathEntries.add(0, sourceClasspathEntry);String jreContainer = JavaRuntime.JRE_CONTAINER;String complianceLevel = CodeGenUtil.EclipseUtil.getJavaComplianceLevel(project);if (""1.5"".equals(complianceLevel)) {jreContainer += ""/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"";} else if (""1.6"".equals(complianceLevel)) {jreContainer += ""/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"";}classpathEntries.add(JavaCore.newContainerEntry(new Path(jreContainer)));classpathEntries.add(JavaCore.newContainerEntry(new Path(""org.eclipse.pde.core.requiredPlugins"")));javaProject.setOutputLocation(new Path(""/"" + projectName + ""/bin""), new NullProgressMonitor());}javaProject.setRawClasspath(classpathEntries.toArray(new IClasspathEntry[classpathEntries.size()]), new NullProgressMonitor());} catch (CoreException e) {e.printStackTrace();CodeGenEcorePlugin.INSTANCE.log(e);}}private static void readAndRewrite(File inFile, File outFile) throws IOException {ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);Dataset ds = DcmObjectFactory.getInstance().newDataset();dcmParser.setDcmHandler(ds.getDcmHandler());dcmParser.parseDcmFile(null, Tags.PixelData);PixelDataReader pdReader = pdFact.newReader(ds, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());System.out.println(""reading "" + inFile + ""..."");pdReader.readPixelData(false);ImageOutputStream out = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;ds.writeDataset(out, dcmEncParam);ds.writeHeader(out, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());System.out.println(""writing "" + outFile + ""..."");PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, ds, out, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());pdWriter.writePixelData();out.flush();out.close();System.out.println(""done!"");}@Overridepublic String getMessageDigest() throws SarasvatiLoadException {if (messageDigest == null) {Collections.sort(nodes);Collections.sort(externals);try {MessageDigest digest = MessageDigest.getInstance(""SHA1"");digest.update(name.getBytes());for (XmlNode node : nodes) {node.addToDigest(digest);}for (XmlExternal external : externals) {external.addToDigest(digest);}messageDigest = SvUtil.getHexString(digest.digest());} catch (NoSuchAlgorithmException nsae) {throw new SarasvatiException(""Unable to load SHA1 algorithm"", nsae);}}return messageDigest;}public static byte[] hash(final byte[] saltBefore, final String content, final byte[] saltAfter, final int repeatedHashingCount) throws NoSuchAlgorithmException, UnsupportedEncodingException {if (content == null) return null;final MessageDigest digest = MessageDigest.getInstance(DIGEST);if (digestLength == -1) digestLength = digest.getDigestLength();for (int i = 0; i < repeatedHashingCount; i++) {if (i > 0) digest.update(digest.digest());digest.update(saltBefore);digest.update(content.getBytes(WebCastellumParameter.DEFAULT_CHARACTER_ENCODING.getValue()));digest.update(saltAfter);}return digest.digest();}private void connect(byte[] bData) {System.out.println(""Connecting to: "" + url.toString());String SOAPAction = """";URLConnection connection = null;try {connection = url.openConnection();httpConn = (HttpURLConnection) connection;httpConn.setRequestProperty(""Content-Length"", String.valueOf(bData.length));httpConn.setRequestProperty(""Content-Type"", ""text/xml; charset=utf-8"");httpConn.setRequestProperty(""SOAPAction"", SOAPAction);httpConn.setRequestMethod(""POST"");httpConn.setDoOutput(true);httpConn.setDoInput(true);} catch (IOException ioExp) {CommonLogger.error(this, ""Error while connecting to  SOAP server !"", ioExp);}}"	5
"public static DigitalObjectContent byReference(final InputStream inputStream) {try {File tempFile = File.createTempFile(""tempContent"", ""tmp"");tempFile.deleteOnExit();FileOutputStream out = new FileOutputStream(tempFile);IOUtils.copyLarge(inputStream, out);out.close();return new ImmutableContent(tempFile);} catch (IOException e) {e.printStackTrace();}throw new IllegalStateException(""Could not create content for input stream: "" + inputStream);}public static void copy(String pstrFileFrom, String pstrFileTo) {try {FileChannel srcChannel = new FileInputStream(pstrFileFrom).getChannel();FileChannel dstChannel = new FileOutputStream(pstrFileTo).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (Exception e) {throw new RuntimeException(e);}}public static void main(String[] args) throws Exception {HttpGet get = new HttpGet(""https://localhost/docs/index.html"");DefaultHttpClient client = new DefaultHttpClient();ServerConfig config = new ServerConfig(new Properties());config.setParam(""https.keyStoreFile"", ""test.keystore"");config.setParam(""https.keyPassword"", ""nopassword"");config.setParam(""https.keyStoreType"", ""JKS"");config.setParam(""https.protocol"", ""SSLv3"");SSLContextCreator ssl = new SSLContextCreator(config);SSLContext ctx = ssl.getSSLContext();SSLSocketFactory socketFactory = new SSLSocketFactory(ctx);Scheme sch = new Scheme(""https"", 443, socketFactory);client.getConnectionManager().getSchemeRegistry().register(sch);HttpResponse response = client.execute(get);System.out.println(response.getStatusLine().getStatusCode());}public InputStream sendGetMessage(Properties args) throws IOException {String argString = """";if (args != null) {argString = ""?"" + toEncodedString(args);}URL url = new URL(servlet.toExternalForm() + argString);URLConnection con = url.openConnection();con.setUseCaches(false);sendHeaders(con);return con.getInputStream();}@Overridepublic String compute_hash(String plaintext) {MessageDigest d;try {d = MessageDigest.getInstance(get_algorithm_name());d.update(plaintext.getBytes());byte[] hash = d.digest();StringBuffer sb = new StringBuffer();for (byte b : hash) sb.append(String.format(""%02x"", b));return sb.toString();} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return null;}void copyTo(HttpServletRequest httpRequest, HttpServletResponse httpResponse) throws IOException {if (shouldMock()) {return;}assert httpRequest != null;assert httpResponse != null;final long start = System.currentTimeMillis();try {final URLConnection connection = openConnection(url, headers);connection.setRequestProperty(""Accept-Language"", httpRequest.getHeader(""Accept-Language""));connection.connect();try {InputStream input = connection.getInputStream();if (""gzip"".equals(connection.getContentEncoding())) {input = new GZIPInputStream(input);}httpResponse.setContentType(connection.getContentType());TransportFormat.pump(input, httpResponse.getOutputStream());} finally {close(connection);}} finally {LOGGER.info(""http call done in "" + (System.currentTimeMillis() - start) + "" ms for "" + url);}}private Vendor createVendor() throws SQLException, IOException {Connection conn = null;Statement st = null;String query = null;ResultSet rs = null;try {conn = dataSource.getConnection();st = conn.createStatement();query = ""insert into "" + DB.Tbl.vend + ""("" + col.title + "","" + col.addDate + "","" + col.authorId + "") values('"" + title + ""',now(),"" + user.getId() + "")"";st.executeUpdate(query, new String[] { col.id });rs = st.getGeneratedKeys();if (!rs.next()) {throw new SQLException(""Не удается получить generated key 'id' в таблице vendors."");}int genId = rs.getInt(1);rs.close();saveDescr(genId);conn.commit();Vendor v = new Vendor();v.setId(genId);v.setTitle(title);v.setDescr(descr);VendorViewer.getInstance().vendorListChanged();return v;} catch (SQLException e) {try {conn.rollback();} catch (Exception e1) {}throw e;} finally {try {rs.close();} catch (Exception e) {}try {st.close();} catch (Exception e) {}try {conn.close();} catch (Exception e) {}}}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}public static void main(String[] args) {try {FileReader reader = new FileReader(args[0]);FileWriter writer = new FileWriter(args[1]);html2xhtml(reader, writer);writer.close();reader.close();} catch (Exception e) {freemind.main.Resources.getInstance().logException(e);}}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}"	5
"public static void copyFile(File src, File dest) throws IOException {FileInputStream fis = new FileInputStream(src);FileOutputStream fos = new FileOutputStream(dest);java.nio.channels.FileChannel channelSrc = fis.getChannel();java.nio.channels.FileChannel channelDest = fos.getChannel();channelSrc.transferTo(0, channelSrc.size(), channelDest);fis.close();fos.close();}public static void main(String[] args) throws Exception {DES des = new DES();StreamBlockReader reader = new StreamBlockReader(new FileInputStream(""D:\\test.txt""));StreamBlockWriter writer = new StreamBlockWriter(new FileOutputStream(""D:\\test1.txt""));SingleKey key = new SingleKey(new Block(64), """");key = new SingleKey(new Block(""1111111100000000111111110000000011111111000000001111111100000000""), """");Mode mode = new ECBDESMode(des);des.encrypt(reader, writer, key, mode);}public String md5(String password) {MessageDigest m = null;try {m = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException ex) {}m.update(password.getBytes(), 0, password.length());return new BigInteger(1, m.digest()).toString(16);}public static void replaceEntry(File file, String entryName, InputStream stream) throws PersistenceException {try {File temporaryFile = File.createTempFile(""pmMDA_zargo"", "".zargo"");temporaryFile.deleteOnExit();FileInputStream inputStream = new FileInputStream(file);ZipInputStream input = new ZipInputStream(inputStream);ZipOutputStream output = new ZipOutputStream(new FileOutputStream(temporaryFile));ZipEntry entry = input.getNextEntry();while (entry != null) {ZipEntry zipEntry = new ZipEntry(entry);zipEntry.setCompressedSize(-1);output.putNextEntry(zipEntry);if (!entry.getName().equals(entryName)) {IOUtils.copy(input, output);} else {IOUtils.copy(stream, output);}input.closeEntry();output.closeEntry();entry = input.getNextEntry();}input.close();inputStream.close();output.close();System.gc();boolean isSuccess = file.delete();if (!isSuccess) {throw new PersistenceException();}isSuccess = temporaryFile.renameTo(file);if (!isSuccess) {throw new PersistenceException();}} catch (IOException e) {throw new PersistenceException(e);}}public static void copy(File src, File dst) throws IOException {FileChannel inChannel;FileChannel outChannel;inChannel = new FileInputStream(src).getChannel();outChannel = new FileOutputStream(dst).getChannel();outChannel.transferFrom(inChannel, 0, inChannel.size());inChannel.close();outChannel.close();}public static String getMd5Digest(String pInput) {try {MessageDigest lDigest = MessageDigest.getInstance(""MD5"");lDigest.update(pInput.getBytes());BigInteger lHashInt = new BigInteger(1, lDigest.digest());return String.format(""%1$032x"", lHashInt).toLowerCase();} catch (NoSuchAlgorithmException lException) {throw new RuntimeException(lException);}}private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException {this.qualifiersOnTarget = qualifiersOnTarget;model = new Model(description);if (roughMode) model.setRoughMode(true);DOMParser parser = new DOMParser();parser.setFeature(""http://xml.org/sax/features/validation"", false);parser.setFeature(""http://apache.org/xml/features/nonvalidating/load-external-dtd"", false);parser.parse(new InputSource(url.openStream()));Document doc = parser.getDocument();Element documentEl = doc.getDocumentElement();Element contentEl = demandChildElement(documentEl, ""XMI.content"");adapter = Adapter.getAdapter(documentEl);parsePackage(contentEl);if (!packagePath.isEmpty()) throw new IllegalArgumentException();packagePath = null;for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next());generalizations = null;for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) {Element assoel = (Element) i.next();parseAssociation(assoel, (ModelClass) (associations.get(assoel)));}associations = null;for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()));classElements = null;if (roughMode) model.determineAllSupertypes(); else model.flatten();url = null;}private void onOKAction() {if (url == null) {optionPane.setValue(JOptionPane.UNINITIALIZED_VALUE);JOptionPane.showMessageDialog(this, ""URL field cannot be empty"", ""Empty URL"", JOptionPane.ERROR_MESSAGE);} else {try {URLConnection sourceConnection = url.openConnection();sourceConnection.setConnectTimeout(10);if (sourceConnection.getContentLength() == -1) {throw new IOException(""Can't connect to "" + url.toString());}exit_status = OK;setVisible(false);dispose();} catch (IOException e) {optionPane.setValue(JOptionPane.UNINITIALIZED_VALUE);JOptionPane.showMessageDialog(this, ""Please enter valid, resolvable source and target URLs...\n "" + e.getMessage(), ""Invalid URL"", JOptionPane.ERROR_MESSAGE);}}}public static void main(String[] args) throws IOException {String uri = ""hdfs://localhost:8020/user/leeing/maxtemp/sample.txt"";Configuration conf = new Configuration();FileSystem fs = FileSystem.get(URI.create(uri), conf);FSDataInputStream in = null;try {in = fs.open(new Path(uri));IOUtils.copyBytes(in, System.out, 8192, false);System.out.println(""\n"");in.seek(0);IOUtils.copyBytes(in, System.out, 8192, false);} finally {IOUtils.closeStream(in);}}public boolean update(String dbName, Query[] queries) throws ServiceException {Connection con = null;PreparedStatement pstmt = null;int rows = 0;try {con = getDbConnection().getConnection(dbName);con.setAutoCommit(false);for (int i = 0; i < queries.length; i++) {Query query = queries[i];System.out.println(query.getSql());pstmt = con.prepareStatement(query.getSql());addParametersToQuery(query, pstmt);rows += pstmt.executeUpdate();}con.commit();return rows > 0;} catch (DbException e) {log.error(""[DAOService::update]  "" + e.getMessage(), e);log.error(""[DAOService::update] Execute rollback "" + e.getMessage(), e);try {con.rollback();} catch (SQLException e1) {log.error(""[DAOService::update] Errore durante il rollback "" + e.getMessage(), e);throw new ServiceException(e.getMessage());}throw new ServiceException(e.getMessage());} catch (SQLException e) {log.error(""[DAOService::update]  "" + e.getMessage(), e);try {con.rollback();} catch (SQLException e1) {log.error(""[DAOService::update] Errore durante il rollback "" + e.getMessage(), e);throw new ServiceException(e.getMessage());}throw new ServiceException(e.getMessage());} finally {closeConnection(con, pstmt, null);}}"	5
"public static byte[] openHttpResult(String urlPath, boolean retry) throws IOException {AQUtility.debug(""net"", urlPath);URL url = new URL(urlPath);HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.setUseCaches(false);connection.setInstanceFollowRedirects(true);connection.setConnectTimeout(NET_TIMEOUT);int code = connection.getResponseCode();if (code == 307 && retry) {String redirect = connection.getHeaderField(""Location"");return openHttpResult(redirect, false);}if (code == -1 && retry) {return openHttpResult(urlPath, false);}AQUtility.debug(""response"", code);if (code == -1 || code < 200 || code >= 300) {throw new IOException();}byte[] result = AQUtility.toBytes(connection.getInputStream());return result;}protected void copyFile(String from, String to, String workingDirectory) throws Exception {URL monitorCallShellScriptUrl = Thread.currentThread().getContextClassLoader().getResource(from);File f = new File(monitorCallShellScriptUrl.getFile());String directoryPath = f.getAbsolutePath();String fileName = from;InputStream in = null;if (directoryPath.indexOf("".jar!"") > -1) {URL urlJar = new URL(directoryPath.substring(directoryPath.indexOf(""file:""), directoryPath.indexOf('!')));JarFile jf = new JarFile(urlJar.getFile());JarEntry je = jf.getJarEntry(from);fileName = je.getName();in = Thread.currentThread().getContextClassLoader().getResourceAsStream(fileName);} else {in = new FileInputStream(f);}File outScriptFile = new File(to);FileOutputStream fos = new FileOutputStream(outScriptFile);int nextChar;while ((nextChar = in.read()) != -1) fos.write(nextChar);fos.flush();fos.close();try {LinuxCommandExecutor cmdExecutor = new LinuxCommandExecutor();cmdExecutor.setWorkingDirectory(workingDirectory);cmdExecutor.runCommand(""chmod 777 "" + to);} catch (Exception e) {throw e;}}private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) {xformer = annoMan.getTransformer();builder = annoMan.getBuilder();String annohash = """";if (document == null) return;NodeList ndlist = document.getElementsByTagNameNS(annoNS, ""body"");if (ndlist.getLength() != 1) {System.out.println(""Sorry Annotation Body was found "" + ndlist.getLength() + "" times"");return;}Element bodynode = (Element) ndlist.item(0);Node htmlNode = bodynode.getElementsByTagName(""html"").item(0);if (htmlNode == null) htmlNode = bodynode.getElementsByTagName(""HTML"").item(0);Document newdoc = builder.newDocument();Element rootelem = newdoc.createElementNS(rdfNS, ""r:RDF"");rootelem.setAttribute(""xmlns:r"", rdfNS);rootelem.setAttribute(""xmlns:a"", annoNS);rootelem.setAttribute(""xmlns:d"", dubNS);rootelem.setAttribute(""xmlns:t"", threadNS);newdoc.appendChild(rootelem);Element tmpelem;NodeList tmpndlist;Element annoElem = newdoc.createElementNS(annoNS, ""a:Annotation"");rootelem.appendChild(annoElem);tmpelem = (Element) document.getElementsByTagNameNS(annoNS, ""context"").item(0);String context = tmpelem.getChildNodes().item(0).getNodeValue();annoElem.setAttributeNS(annoNS, ""a:context"", context);NodeList elemcontl = tmpelem.getElementsByTagNameNS(alNS, ""context-element"");Node ncontext_element = null;if (elemcontl.getLength() > 0) {Node old_context_element = elemcontl.item(0);ncontext_element = newdoc.importNode(old_context_element, true);}tmpndlist = document.getElementsByTagNameNS(dubNS, ""title"");annoElem.setAttributeNS(dubNS, ""d:title"", tmpndlist.getLength() > 0 ? tmpndlist.item(0).getChildNodes().item(0).getNodeValue() : ""Default"");tmpelem = (Element) document.getElementsByTagNameNS(dubNS, ""creator"").item(0);annoElem.setAttributeNS(dubNS, ""d:creator"", tmpelem.getChildNodes().item(0).getNodeValue());tmpelem = (Element) document.getElementsByTagNameNS(annoNS, ""created"").item(0);annoElem.setAttributeNS(annoNS, ""a:created"", tmpelem.getChildNodes().item(0).getNodeValue());tmpelem = (Element) document.getElementsByTagNameNS(dubNS, ""date"").item(0);annoElem.setAttributeNS(dubNS, ""d:date"", tmpelem.getChildNodes().item(0).getNodeValue());tmpndlist = document.getElementsByTagNameNS(dubNS, ""language"");String language = (tmpndlist.getLength() > 0 ? tmpndlist.item(0).getChildNodes().item(0).getNodeValue() : ""en"");annoElem.setAttributeNS(dubNS, ""d:language"", language);Node typen = newdoc.importNode(document.getElementsByTagNameNS(rdfNS, ""type"").item(0), true);annoElem.appendChild(typen);Element contextn = newdoc.createElementNS(annoNS, ""a:context"");contextn.setAttributeNS(rdfNS, ""r:resource"", context);annoElem.appendChild(contextn);Node annotatesn = newdoc.importNode(document.getElementsByTagNameNS(annoNS, ""annotates"").item(0), true);annoElem.appendChild(annotatesn);Element newbodynode = newdoc.createElementNS(annoNS, ""a:body"");annoElem.appendChild(newbodynode);if (ncontext_element != null) {contextn.appendChild(ncontext_element);} else {System.out.println(""No context element found, we create one..."");try {XPointer xptr = new XPointer(htmldoc);NodeRange xprange = xptr.getRange(context, htmldoc);Element context_elem = newdoc.createElementNS(alNS, ""al:context-element"");context_elem.setAttributeNS(alNS, ""al:text"", xprange.getContentString());context_elem.appendChild(newdoc.createTextNode(annoMan.generateContextString(xprange)));contextn.appendChild(context_elem);} catch (XPointerRangeException e2) {e2.printStackTrace();}}WordFreq wf = new WordFreq(annoMan.extractTextFromNode(htmldoc));Element docident = newdoc.createElementNS(alNS, ""al:document-identifier"");annotatesn.appendChild(docident);docident.setAttributeNS(alNS, ""al:orig-url"", ((Element) annotatesn).getAttributeNS(rdfNS, ""resource""));docident.setAttributeNS(alNS, ""al:version"", ""1"");Iterator it = null;it = wf.getSortedWordlist();Map.Entry ent;String word;int count;int i = 0;while (it.hasNext()) {ent = (Map.Entry) it.next();word = ((String) ent.getKey());count = ((Counter) ent.getValue()).count;if ((word.length() > 4) && (i < 10)) {Element wordelem = newdoc.createElementNS(alNS, ""al:word"");wordelem.setAttributeNS(alNS, ""al:freq"", Integer.toString(count));wordelem.appendChild(newdoc.createTextNode(word));docident.appendChild(wordelem);i++;}}try {StringWriter strw = new StringWriter();MessageDigest messagedigest = MessageDigest.getInstance(""MD5"");xformer.transform(new DOMSource(newdoc), new StreamResult(strw));messagedigest.update(strw.toString().getBytes());byte[] md5bytes = messagedigest.digest();annohash = """";for (int b = 0; b < md5bytes.length; b++) {String s = Integer.toHexString(md5bytes[b] & 0xFF);annohash = annohash + ((s.length() == 1) ? ""0"" + s : s);}this.annohash = annohash;annoElem.setAttribute(""xmlns:al"", alNS);annoElem.setAttributeNS(alNS, ""al:id"", getAnnohash());Location = (baseurl + ""/annotation/"" + getAnnohash());annoElem.setAttributeNS(rdfNS, ""r:about"", Location);newbodynode.setAttributeNS(rdfNS, ""r:resource"", baseurl + ""/annotation/body/"" + getAnnohash());} catch (NoSuchAlgorithmException e) {e.printStackTrace();} catch (TransformerException e) {e.printStackTrace();}annoMan.store(newdoc.getDocumentElement());annoMan.createAnnoResource(newdoc.getDocumentElement(), getAnnohash());if (htmlNode != null) annoMan.createAnnoBody(htmlNode, getAnnohash());Location = (this.baseurl + ""/annotation/"" + getAnnohash());annoElem.setAttributeNS(rdfNS, ""r:about"", Location);this.responseDoc = newdoc;}protected File EncodeReturn() throws EncodeFailedException, IOException {CryptoClient c = getNode().getCryptoClientByID(PiggybackCrypto);File tmpf = getNode().getTempFM().createNewFile(""encodereturn"", ""download"");ChannelWriter cw = new ChannelWriter(tmpf);cw.putLongFile(DownloadData);cw.close();File encdata = c.RawEncode(tmpf, RawKey);File pigdata = PigData.EncodeData(encdata);File pigroute = ReturnPigRoute.EncodeData(ReturnRouteFile);FileOutputStream fos = new FileOutputStream(pigroute, true);FileChannel foc = fos.getChannel();FileInputStream fis = new FileInputStream(pigdata);FileChannel fic = fis.getChannel();fic.transferTo(0, fic.size(), foc);foc.close();fic.close();pigdata.delete();ReturnRouteFile.delete();encdata.delete();return pigroute;}public static String readFromURL(String url_) {StringBuffer buffer = new StringBuffer();try {URL url = new URL(url_);System.setProperty(""http.agent"", """");URLConnection connection = url.openConnection();connection.setRequestProperty(""User-Agent"", ""Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.4; en-US; rv:1.9.2.2) Gecko/20100316 Firefox/3.6.2"");connection.setDoInput(true);InputStream inStream = connection.getInputStream();BufferedReader input = new BufferedReader(new InputStreamReader(inStream, ""utf8""));String line = """";while ((line = input.readLine()) != null) {buffer.append(line + ""\n"");}} catch (Exception e) {System.out.println(e.toString());}return buffer.toString();}public static void writeURLToFile(String url, String path) throws MalformedURLException, IOException {java.io.BufferedInputStream in = new java.io.BufferedInputStream(new java.net.URL(url).openStream());java.io.FileOutputStream fos = new java.io.FileOutputStream(path);java.io.BufferedOutputStream bout = new BufferedOutputStream(fos, 1024);byte data[] = new byte[1024];int count;while ((count = in.read(data, 0, 1024)) != -1) {;bout.write(data, 0, count);}bout.close();in.close();}public static String submitURLRequest(String url) throws HttpException, IOException, URISyntaxException {HttpClient httpclient = new DefaultHttpClient();InputStream stream = null;user_agents = new LinkedList<String>();user_agents.add(""Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.2) Gecko/20100316 Firefox/3.6.2"");String response_text = """";URI uri = new URI(url);HttpGet post = new HttpGet(uri);int MAX = user_agents.size() - 1;int index = (int) Math.round(((double) Math.random() * (MAX)));String agent = user_agents.get(index);httpclient.getParams().setParameter(CoreProtocolPNames.USER_AGENT, agent);httpclient.getParams().setParameter(""User-Agent"", agent);httpclient.getParams().setParameter(ClientPNames.COOKIE_POLICY, CookiePolicy.ACCEPT_NONE);HttpResponse response = httpclient.execute(post);HttpEntity entity = response.getEntity();if (entity != null) {stream = entity.getContent();response_text = convertStreamToString(stream);}httpclient.getConnectionManager().shutdown();if (stream != null) {stream.close();}return response_text;}private String File2String(String directory, String filename) {String line;InputStream in = null;try {File f = new File(filename);System.out.println(""File On:>>>>>>>>>> "" + f.getCanonicalPath());in = new FileInputStream(f);} catch (FileNotFoundException ex) {in = null;} catch (IOException ex) {in = null;}try {if (in == null) {filename = directory + ""/"" + filename;java.net.URL urlFile = ClassLoader.getSystemResource(filename);if (urlFile == null) {System.out.println(""Integrated Chips list file not found: "" + filename);System.exit(-1);}in = urlFile.openStream();}BufferedReader reader = new BufferedReader(new InputStreamReader(in));StringBuffer xmlText = new StringBuffer();while ((line = reader.readLine()) != null) {xmlText.append(line);}reader.close();return xmlText.toString();} catch (FileNotFoundException ex) {System.out.println(""Integrated Chips list file not found"");System.exit(-1);} catch (IOException ex) {ex.printStackTrace();System.exit(-1);}return null;}private synchronized File zipTempFile(File tempFile) throws BlogunityException {try {File zippedFile = new File(BlogunityManager.getSystemConfiguration().getTempDir(), tempFile.getName() + "".zip"");ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(zippedFile));byte[] readBuffer = new byte[2156];int bytesIn = 0;FileInputStream fis = new FileInputStream(tempFile);ZipEntry anEntry = new ZipEntry(tempFile.getName());zos.putNextEntry(anEntry);while ((bytesIn = fis.read(readBuffer)) != -1) {zos.write(readBuffer, 0, bytesIn);}fis.close();zos.close();return zippedFile;} catch (Exception e) {throw new BlogunityException(I18NStatusFactory.create(I18N.ERRORS.FEED_ZIP_FAILED, e));}}private synchronized File gzipTempFile(File tempFile) throws BlogunityException {try {File gzippedFile = new File(BlogunityManager.getSystemConfiguration().getTempDir(), tempFile.getName() + "".gz"");GZIPOutputStream zos = new GZIPOutputStream(new FileOutputStream(gzippedFile));byte[] readBuffer = new byte[2156];int bytesIn = 0;FileInputStream fis = new FileInputStream(tempFile);while ((bytesIn = fis.read(readBuffer)) != -1) {zos.write(readBuffer, 0, bytesIn);}fis.close();zos.close();return gzippedFile;} catch (Exception e) {throw new BlogunityException(I18NStatusFactory.create(I18N.ERRORS.FEED_GZIP_FAILED, e));}}"	5
"public void adjustPadding(File file, int paddingSize, long audioStart) throws FileNotFoundException, IOException {logger.finer(""Need to move audio file to accomodate tag"");FileChannel fcIn = null;FileChannel fcOut;ByteBuffer paddingBuffer = ByteBuffer.wrap(new byte[paddingSize]);File paddedFile;try {paddedFile = File.createTempFile(Utils.getMinBaseFilenameAllowedForTempFile(file), "".new"", file.getParentFile());logger.finest(""Created temp file:"" + paddedFile.getName() + "" for "" + file.getName());} catch (IOException ioe) {logger.log(Level.SEVERE, ioe.getMessage(), ioe);if (ioe.getMessage().equals(FileSystemMessage.ACCESS_IS_DENIED.getMsg())) {logger.severe(ErrorMessage.GENERAL_WRITE_FAILED_TO_CREATE_TEMPORARY_FILE_IN_FOLDER.getMsg(file.getName(), file.getParentFile().getPath()));throw new UnableToCreateFileException(ErrorMessage.GENERAL_WRITE_FAILED_TO_CREATE_TEMPORARY_FILE_IN_FOLDER.getMsg(file.getName(), file.getParentFile().getPath()));} else {logger.severe(ErrorMessage.GENERAL_WRITE_FAILED_TO_CREATE_TEMPORARY_FILE_IN_FOLDER.getMsg(file.getName(), file.getParentFile().getPath()));throw new UnableToCreateFileException(ErrorMessage.GENERAL_WRITE_FAILED_TO_CREATE_TEMPORARY_FILE_IN_FOLDER.getMsg(file.getName(), file.getParentFile().getPath()));}}try {fcOut = new FileOutputStream(paddedFile).getChannel();} catch (FileNotFoundException ioe) {logger.log(Level.SEVERE, ioe.getMessage(), ioe);logger.severe(ErrorMessage.GENERAL_WRITE_FAILED_TO_MODIFY_TEMPORARY_FILE_IN_FOLDER.getMsg(file.getName(), file.getParentFile().getPath()));throw new UnableToModifyFileException(ErrorMessage.GENERAL_WRITE_FAILED_TO_MODIFY_TEMPORARY_FILE_IN_FOLDER.getMsg(file.getName(), file.getParentFile().getPath()));}try {fcIn = new FileInputStream(file).getChannel();long written = fcOut.write(paddingBuffer);logger.finer(""Copying:"" + (file.length() - audioStart) + ""bytes"");long audiolength = file.length() - audioStart;if (audiolength <= MAXIMUM_WRITABLE_CHUNK_SIZE) {long written2 = fcIn.transferTo(audioStart, audiolength, fcOut);logger.finer(""Written padding:"" + written + "" Data:"" + written2);if (written2 != audiolength) {throw new RuntimeException(ErrorMessage.MP3_UNABLE_TO_ADJUST_PADDING.getMsg(audiolength, written2));}} else {long noOfChunks = audiolength / MAXIMUM_WRITABLE_CHUNK_SIZE;long lastChunkSize = audiolength % MAXIMUM_WRITABLE_CHUNK_SIZE;long written2 = 0;for (int i = 0; i < noOfChunks; i++) {written2 += fcIn.transferTo(audioStart + (i * MAXIMUM_WRITABLE_CHUNK_SIZE), MAXIMUM_WRITABLE_CHUNK_SIZE, fcOut);}written2 += fcIn.transferTo(audioStart + (noOfChunks * MAXIMUM_WRITABLE_CHUNK_SIZE), lastChunkSize, fcOut);logger.finer(""Written padding:"" + written + "" Data:"" + written2);if (written2 != audiolength) {throw new RuntimeException(ErrorMessage.MP3_UNABLE_TO_ADJUST_PADDING.getMsg(audiolength, written2));}}long lastModified = file.lastModified();if (fcIn != null) {if (fcIn.isOpen()) {fcIn.close();}}if (fcOut != null) {if (fcOut.isOpen()) {fcOut.close();}}replaceFile(file, paddedFile);paddedFile.setLastModified(lastModified);} finally {try {if (fcIn != null) {if (fcIn.isOpen()) {fcIn.close();}}if (fcOut != null) {if (fcOut.isOpen()) {fcOut.close();}}} catch (Exception e) {logger.log(Level.WARNING, ""Problem closing channels and locks:"" + e.getMessage(), e);}}}private HttpURLConnection getConnection() throws IOException {HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();conn.setRequestMethod(method);conn.setDoOutput(true);conn.setDoInput(true);if (cookie != null) conn.setRequestProperty(""Cookie"", cookie);conn.setRequestProperty(""Connection"", ""Keep-Alive"");conn.setRequestProperty(""Accept-Encoding"", ""gzip, deflate"");conn.setRequestProperty(""User-Agent"", Constants.USER_AGENT());conn.connect();if (!parameters.equals("""")) {DataOutputStream out = new DataOutputStream(conn.getOutputStream());out.writeBytes(parameters);out.flush();out.close();}return conn;}private void onDhReply(final SshDhReply msg) throws GeneralSecurityException, IOException {if ((this.keyPair == null) || this.connection.isServer()) throw new SshException(""%s: unexpected %s"", this.connection.uri, msg.getType());final BigInteger k;{final DHPublicKeySpec remoteKeySpec = new DHPublicKeySpec(new BigInteger(msg.f), P1, G);final KeyFactory dhKeyFact = KeyFactory.getInstance(""DH"");final DHPublicKey remotePubKey = (DHPublicKey) dhKeyFact.generatePublic(remoteKeySpec);final KeyAgreement dhKex = KeyAgreement.getInstance(""DH"");dhKex.init(this.keyPair.getPrivate());dhKex.doPhase(remotePubKey, true);k = new BigInteger(dhKex.generateSecret());}final MessageDigest md = createMessageDigest();final byte[] h;{updateByteArray(md, SshVersion.LOCAL.toString().getBytes());updateByteArray(md, this.connection.getRemoteSshVersion().toString().getBytes());updateByteArray(md, this.keyExchangeInitLocal.getPayload());updateByteArray(md, this.keyExchangeInitRemote.getPayload());updateByteArray(md, msg.hostKey);updateByteArray(md, ((DHPublicKey) this.keyPair.getPublic()).getY().toByteArray());updateByteArray(md, msg.f);updateBigInt(md, k);h = md.digest();}if (this.sessionId == null) this.sessionId = h;this.keyExchangeInitLocal = null;this.keyExchangeInitRemote = null;this.h = h;this.k = k;this.connection.send(new SshKeyExchangeNewKeys());}private void modifyProperty(String valueID, String value, Long userID) throws JspTagException {Property property = new Property(new Long(valueID), userID);String newValue = value;System.out.println(property.getName());if (property.getName().equals(""Password"")) {try {MessageDigest crypt = MessageDigest.getInstance(""MD5"");crypt.update(value.getBytes());byte digest[] = crypt.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < digest.length; i++) {hexString.append(hexDigit(digest[i]));}newValue = hexString.toString();crypt.reset();} catch (NoSuchAlgorithmException e) {System.err.println(""jspShop: Could not get instance of MD5 algorithm. Please fix this!"" + e.getMessage());e.printStackTrace();throw new JspTagException(""Error crypting password!: "" + e.getMessage());}}property.setValue(newValue);}public CServletContextWrapper(final FileSystem fs, final String contextName) {this.fs = fs;this.name = contextName;CContext.getInstance().init(this);try {URL url = this.getResource(""/WEB-INF/classes/log4j.properties"");boolean ok = false;InputStream in = null;try {in = url.openStream();ok = true;} catch (Throwable e) {} finally {try {if (in != null) in.close();} catch (Exception ignore) {}}if (ok) {PropertyConfigurator.configure(url);}} catch (final Throwable e) {if (!hasPrintedLog4JWarning) {hasPrintedLog4JWarning = true;System.err.println(""!!! WARNING: /WEB-INF/classes/log4j.properties missing."");}}this.init();this.loadServletContextListener();this.log = LOGGERHelper.getLogger(this.getClass());CJNDIContextSetup.init(this);JDBCPooler.init(this);CResourceBundle.registerBundles(this);this.fireInitEvent();}static String getMD5Hash(String str) throws NoSuchAlgorithmException {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(str.getBytes());byte[] b = md.digest();StringBuffer sb = new StringBuffer();for (int i = 0; i < b.length; i++) {int v = (int) b[i];v = v < 0 ? 0x100 + v : v;String cc = Integer.toHexString(v);if (cc.length() == 1) sb.append('0');sb.append(cc);}return sb.toString();}public FlashExObj get(String s, int page) {FlashExObj retVal = new FlashExObj();s = s.replaceAll(""[^a-z0-9_]"", """");ArrayList list = new ArrayList();retVal.list = list;try {String result = null;URL url = new URL(""http://www.flashcardexchange.com/flashcards/list/"" + URLEncoder.encode(s, ""UTF-8"") + ""?page="" + page);URLConnection connection = url.openConnection();connection.setRequestProperty(""User-Agent"", ""Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)"");connection.setDoOutput(false);BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream(), ""UTF-8""));String inputLine;int state = 2;StringBuilder sb = new StringBuilder();while ((inputLine = in.readLine()) != null) {if (state == 0) {int textPos = inputLine.indexOf(""Number of Card"");if (textPos >= 0) {state = 1;}} else if (state == 1) {int s1 = inputLine.indexOf("">"");int s2 = inputLine.indexOf(""<"", 1);if (s1 >= 0 && s1 < s2) {String numOfCardStr = inputLine.substring(s1 + 1, s2);try {} catch (Exception e) {}state = 2;}} else if (state == 2) {int textPos = inputLine.indexOf(""tbody class=\""shaded\"""");if (textPos >= 0) {state = 3;}} else if (state == 3) {int textPos = inputLine.indexOf(""tbody"");if (textPos >= 0) {break;}sb.append(inputLine);sb.append("" "");}}in.close();Pattern myPattern = Pattern.compile(""<td>(.*?)</td>"");Matcher myMatcher = myPattern.matcher(sb);String str;int counter = 0;String buff[] = new String[4];while (myMatcher.find()) {int tt = counter % 4;buff[tt] = myMatcher.group(1);if (tt == 3) {String toAdd[] = new String[2];toAdd[0] = buff[1];toAdd[1] = buff[2];list.add(toAdd);}counter++;}} catch (Exception e) {e.printStackTrace();}return retVal;}protected void handleUrl(URL url) throws Exception {File file = new File(dir.getAbsolutePath() + ""/"" + new Date().getTime() + ""."" + this.ext);FileWriter writer = new FileWriter(file);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String s;while ((s = in.readLine()) != null) {writer.write(s + ""\n"");}in.close();writer.close();}public static void contentTrans(String contents, String urlString, String urlString2, String serverIp, int port) {try {URL url = new URL(urlString);url.openStream();} catch (Exception e) {e.printStackTrace();}try {Socket server = new Socket(InetAddress.getByName(serverIp), port);OutputStream outputStream = server.getOutputStream();BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(outputStream, ""UTF-8""));bufferedWriter.write(contents);bufferedWriter.flush();bufferedWriter.close();server.close();} catch (Exception e) {e.printStackTrace();}try {URL url2 = new URL(urlString2);url2.openStream();} catch (Exception e) {e.printStackTrace();}}public static void fileTrans(String filePath, String urlString, String urlString2, String serverIp, int port) {try {URL url = new URL(urlString);url.openStream();} catch (Exception e) {e.printStackTrace();}File file = new File(filePath);try {FileInputStream fis = new FileInputStream(file);Socket server = new Socket(InetAddress.getByName(serverIp), port);OutputStream outputStream = server.getOutputStream();DataOutputStream dataOutputStream = new DataOutputStream(new BufferedOutputStream(outputStream));byte[] buffer = new byte[2048];int num = fis.read(buffer);while (num != -1) {dataOutputStream.write(buffer, 0, num);dataOutputStream.flush();num = fis.read(buffer);}fis.close();dataOutputStream.close();server.close();} catch (Exception e) {e.printStackTrace();}try {URL url2 = new URL(urlString2);url2.openStream();} catch (Exception e) {e.printStackTrace();}}"	5
"private static void cut() {File inputFile = new File(inputFileName);BufferedReader in = null;try {in = new BufferedReader(new InputStreamReader(new FileInputStream(inputFile), inputCharSet));} catch (FileNotFoundException e) {System.err.print(""Invalid File Name!"");System.err.flush();System.exit(1);} catch (UnsupportedEncodingException e) {System.err.print(""Invalid Char Set Name!"");System.err.flush();System.exit(1);}switch(cutMode) {case charMode:{int outputFileIndex = 1;char[] readBuf = new char[charPerFile];while (true) {int readCount = 0;try {readCount = in.read(readBuf);} catch (IOException e) {System.err.println(""Read IO Error!"");System.err.flush();System.exit(1);}if (-1 == readCount) break; else {try {int ppos = inputFileName.lastIndexOf(""."");String prefixInputFileName = inputFileName.substring(0, ppos);String postfixInputFileName = ""html"";DecimalFormat outputFileIndexFormat = new DecimalFormat(""0000"");File outputFile = new File(prefixInputFileName + ""-"" + outputFileIndexFormat.format(outputFileIndex) + ""."" + postfixInputFileName);BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(outputFile), outputCharSet));out.write(readBuf, 0, readCount);out.flush();out.close();outputFileIndex++;} catch (IOException e) {System.err.println(""Write IO Error!"");System.err.flush();System.exit(1);}}}break;}case lineMode:{boolean isFileEnd = false;int outputFileIndex = 1;while (!isFileEnd) {try {int ppos = inputFileName.lastIndexOf(""."");String prefixInputFileName = inputFileName.substring(0, ppos);String postfixInputFileName = inputFileName.substring(ppos + 1);DecimalFormat outputFileIndexFormat = new DecimalFormat(""0000"");File outputFile = new File(prefixInputFileName + outputFileIndexFormat.format(outputFileIndex) + ""."" + postfixInputFileName);PrintStream out = new PrintStream(new FileOutputStream(outputFile), false, outputCharSet);int p = 0;while (p < linePerFile) {String line = in.readLine();if (null == line) {isFileEnd = true;break;}out.println(line);++p;}out.flush();out.close();} catch (IOException e) {System.err.println(""Write IO Error!"");System.err.flush();System.exit(1);}++outputFileIndex;}break;}case htmlMode:{boolean isFileEnd = false;int outputFileIndex = 1;int ppos = inputFileName.lastIndexOf(""."");String prefixInputFileName = inputFileName.substring(0, ppos);String postfixInputFileName = ""html"";DecimalFormat df = new DecimalFormat(""0000"");while (!isFileEnd) {try {File outputFile = new File(prefixInputFileName + ""-"" + df.format(outputFileIndex) + ""."" + postfixInputFileName);PrintStream out = new PrintStream(new FileOutputStream(outputFile), false, outputCharSet);out.println(""<html><head><title>"" + prefixInputFileName + ""-"" + df.format(outputFileIndex) + ""</title>"" + ""<meta http-equiv=\""Content-Type\"""" + "" content=\""text/html; "" + ""charset="" + outputCharSet + ""\"" />"" + ""<link rel =\""stylesheet\"" "" + ""type=\""text/css\"" "" + ""href=\""stylesheet.css\"" />"" + ""</head><body><div id=\""content\"">"");int p = 0;while (p < pPerFile) {String line = in.readLine();if (null == line) {isFileEnd = true;break;}if (line.length() > 0) out.println(""<p>"" + line + ""</p>"");++p;}out.println(""</div><a href=\"""" + prefixInputFileName + ""-"" + df.format(outputFileIndex + 1) + ""."" + postfixInputFileName + ""\"">NEXT</a></body></html>"");out.flush();out.close();} catch (IOException e) {System.err.println(""Write IO Error!"");System.err.flush();System.exit(1);}++outputFileIndex;}try {File indexFile = new File(""index.html"");PrintStream out = new PrintStream(new FileOutputStream(indexFile), false, outputCharSet);out.println(""<html><head><title>"" + ""Index"" + ""</title>"" + ""<meta http-equiv=\""Content-Type\"""" + "" content=\""text/html; "" + ""charset="" + outputCharSet + ""\"" />"" + ""<link rel =\""stylesheet\"" "" + ""type=\""text/css\"" "" + ""href=\""stylesheet.css\"" />"" + ""</head><body><h2>"" + htmlTitle + ""</h2><div id=\""content\""><ul>"");for (int i = 1; i < outputFileIndex; i++) {out.println(""<li><a href=\"""" + prefixInputFileName + ""-"" + df.format(i) + ""."" + postfixInputFileName + ""\"">"" + df.format(i) + ""</a></li>"");}out.println(""</ul></body></html>"");out.flush();out.close();} catch (IOException e) {System.err.println(""Write IO Error!"");System.err.flush();System.exit(1);}break;}}}private void addConfigurationResource(final String fileName, NotFoundPolicy notFoundPolicy) {try {final ClassLoader cl = this.getClass().getClassLoader();final Properties p = new Properties();final URL url = cl.getResource(fileName);if (url == null) {throw new NakedObjectException(""Failed to load configuration resource: "" + fileName);}p.load(url.openStream());LOG.info(""configuration resource "" + fileName + "" loaded"");configuration.add(p);} catch (final Exception e) {if (notFoundPolicy == NotFoundPolicy.FAIL_FAST) {throw new NakedObjectException(e);}LOG.info(""configuration resource "" + fileName + "" not found, but not needed"");}}public String[] retrieveFasta(String id) throws Exception {URL url = new URL(""http://www.ebi.ac.uk/ena/data/view/"" + id + ""&display=fasta"");BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String header = reader.readLine();StringBuffer seq = new StringBuffer();String line = """";while ((line = reader.readLine()) != null) {seq.append(line);}reader.close();return new String[] { header, seq.toString() };}public FTPClient connect(String host, String userId, String password, String alias) throws IOException {FTPClient client = null;if (connections.get(alias) != null) {client = (FTPClient) connections.get(alias);if (client.isConnected() == false) {client.connect(host);}} else {client = new FTPClient();client.connect(host);client.login(userId, password);connections.put(alias, client);}return client;}protected void doGet(final HttpServletRequest request, final HttpServletResponse response) throws ServletException, IOException {Session session = HibernateUtil.getInstance().getSession();response.setBufferSize(65536);ServletOutputStream outStream = response.getOutputStream();File file = null;FileData fileData = null;try {String fileParameter = request.getParameter(""file"");String disposition = request.getParameter(""disposition"");if (fileParameter == null || fileParameter.equals("""")) {String pi = request.getPathInfo();int lastSlashIndex = pi.lastIndexOf(""/"") + 1;fileParameter = pi.substring(lastSlashIndex, pi.indexOf(""_"", pi.lastIndexOf(""/"")));}if (fileParameter == null || fileParameter.equals("""")) {response.sendError(HttpServletResponse.SC_BAD_REQUEST);response.setStatus(HttpServletResponse.SC_BAD_REQUEST);response.flushBuffer();Logger.log(""file parameter not specified"");return;}if (disposition == null || disposition.equals("""")) {String pi = request.getPathInfo();String filename = pi.substring(pi.lastIndexOf(""/"") + 1);int underscoreIndex = filename.indexOf(""_"") + 1;disposition = filename.substring(underscoreIndex, filename.indexOf(""_"", underscoreIndex));}file = (File) session.load(File.class, new Long(fileParameter));Logger.log(""Content requested="" + file.getName() + "":"" + fileParameter + "" Referral: "" + request.getParameter(""referer""));long ifModifiedSince = request.getDateHeader(""If-Modified-Since"");long fileDate = file.getLastModifiedDate() - (file.getLastModifiedDate() % 1000);if (fileDate <= ifModifiedSince) {response.setStatus(HttpServletResponse.SC_NOT_MODIFIED);if (""attachment"".equals(disposition)) {response.setHeader(""Content-Disposition"", ""attachment; filename=\"""" + file.getName() + ""\"""");} else {response.setHeader(""Content-Disposition"", ""inline; filename=\"""" + file.getName() + ""\"""");}response.setContentType(file.getContentType());response.setHeader(""Content-Description"", file.getName());response.setDateHeader(""Last-Modified"", file.getLastModifiedDate());response.setDateHeader(""Expires"", System.currentTimeMillis() + 31536000000L);response.setContentLength((int) file.getSize());response.flushBuffer();Logger.log(""Conditional GET: "" + file.getName());return;}User authUser = baseService.getAuthenticatedUser(session, request, response);if (!SecurityHelper.doesUserHavePermission(session, authUser, file, Permission.PERM.READ)) {response.sendError(HttpServletResponse.SC_FORBIDDEN, ""Forbidden"");response.setStatus(HttpServletResponse.SC_FORBIDDEN);response.flushBuffer();Logger.log(""Forbidden content requested: "" + fileParameter);return;}String contentType = file.getContentType();response.setContentType(contentType);if (""attachment"".equals(disposition)) {response.setHeader(""Content-Disposition"", ""attachment; filename=\"""" + file.getName() + ""\"""");} else {response.setHeader(""Content-Disposition"", ""inline; filename=\"""" + file.getName() + ""\"""");}String name = file.getName();response.setHeader(""Content-Description"", name);response.setDateHeader(""Last-Modified"", file.getLastModifiedDate());response.setDateHeader(""Expires"", System.currentTimeMillis() + 31536000000L);response.setContentLength((int) file.getSize());java.io.File possibleDataFile = new java.io.File(BaseSystem.getTempDir() + file.getNameOnDisk());if (possibleDataFile.exists()) {Logger.log(""File exists in "" + BaseSystem.getTempDir() + "" pulling "" + possibleDataFile.getName());FileInputStream fileInputStream = new FileInputStream(possibleDataFile);try {IOUtils.copy(fileInputStream, outStream);} finally {try {fileInputStream.close();} catch (Throwable t) {}}} else {List<FileData> fileDataList = HibernateUtil.getInstance().executeQuery(session, ""from "" + FileData.class.getSimpleName() + "" where permissibleObject.id = "" + file.getId());if (fileDataList.size() == 0) {response.sendError(HttpServletResponse.SC_NOT_FOUND);response.setStatus(HttpServletResponse.SC_NOT_FOUND);Logger.log(""Requested content not found: "" + fileParameter);response.flushBuffer();return;}fileData = (FileData) fileDataList.get(0);FileOutputStream fileOutputStream = null;try {java.io.File tmpDir = new java.io.File(BaseSystem.getTempDir());tmpDir.mkdirs();fileOutputStream = new FileOutputStream(possibleDataFile);IOUtils.write(fileData.getData(), fileOutputStream);} catch (Throwable t) {Logger.log(t);} finally {try {fileOutputStream.close();} catch (Throwable t) {}}IOUtils.write(fileData.getData(), outStream);}} catch (Throwable t) {Logger.log(t);try {response.sendError(HttpServletResponse.SC_NOT_FOUND);response.setStatus(HttpServletResponse.SC_NOT_FOUND);response.flushBuffer();} catch (Throwable tt) {}try {response.reset();response.resetBuffer();} catch (Throwable tt) {}} finally {file = null;fileData = null;try {outStream.flush();} catch (Throwable t) {}try {outStream.close();} catch (Throwable t) {}try {session.close();} catch (Throwable t) {}}}private void chooseGame(DefaultHttpClient httpclient) throws IOException, ClientProtocolException {HttpGet httpget = new HttpGet(Constants.STRATEGICDOMINATION_URL + ""/gameboard.cgi?gameid="" + 1687);HttpResponse response = httpclient.execute(httpget);HttpEntity entity = response.getEntity();System.out.println(""cg form get: "" + response.getStatusLine());if (entity != null) {InputStream inStream = entity.getContent();IOUtils.copy(inStream, System.out);}System.out.println(""cg set of cookies:"");List<Cookie> cookies = httpclient.getCookieStore().getCookies();if (cookies.isEmpty()) {System.out.println(""None"");} else {for (int i = 0; i < cookies.size(); i++) {System.out.println(""- "" + cookies.get(i).toString());}}}public String getLastVersion() {try {String server = icescrum2Properties.get(""check.url"").toString();Boolean useProxy = new Boolean(icescrum2Properties.get(""proxy.active"").toString());Boolean authProxy = new Boolean(icescrum2Properties.get(""proxy.auth.active"").toString());URL url = new URL(server);if (useProxy) {String proxy = icescrum2Properties.get(""proxy.url"").toString();String port = icescrum2Properties.get(""proxy.port"").toString();Properties systemProperties = System.getProperties();systemProperties.setProperty(""http.proxyHost"", proxy);systemProperties.setProperty(""http.proxyPort"", port);}URLConnection connection = url.openConnection();if (authProxy) {String username = icescrum2Properties.get(""proxy.auth.username"").toString();String password = icescrum2Properties.get(""proxy.auth.password"").toString();String login = username + "":"" + password;String encodedLogin = Base64.base64Encode(login);connection.setRequestProperty(""Proxy-Authorization"", ""Basic "" + encodedLogin);}connection.setConnectTimeout(Integer.parseInt(icescrum2Properties.get(""check.timeout"").toString()));InputStream input = connection.getInputStream();StringWriter writer = new StringWriter();InputStreamReader streamReader = new InputStreamReader(input);BufferedReader buffer = new BufferedReader(streamReader);String value = """";while (null != (value = buffer.readLine())) {writer.write(value);}return writer.toString();} catch (IOException e) {}return null;}public void convert(File src, File dest) throws IOException {InputStream in = new BufferedInputStream(new FileInputStream(src));DcmParser p = pfact.newDcmParser(in);Dataset ds = fact.newDataset();p.setDcmHandler(ds.getDcmHandler());try {FileFormat format = p.detectFileFormat();if (format != FileFormat.ACRNEMA_STREAM) {System.out.println(""\n"" + src + "": not an ACRNEMA stream!"");return;}p.parseDcmFile(format, Tags.PixelData);if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {System.out.println(""\n"" + src + "": contains UIDs!"" + "" => probable already DICOM - do not convert"");return;}boolean hasPixelData = p.getReadTag() == Tags.PixelData;boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;int pxlen = p.getReadLength();if (hasPixelData) {if (inflate) {ds.putUS(Tags.BitsAllocated, 16);pxlen = pxlen * 4 / 3;}if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {System.out.println(""\n"" + src + "": mismatch pixel data length!"" + "" => do not convert"");return;}}ds.putUI(Tags.StudyInstanceUID, uid(studyUID));ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));ds.putUI(Tags.SOPInstanceUID, uid(instUID));ds.putUI(Tags.SOPClassUID, classUID);if (!ds.contains(Tags.NumberOfSamples)) {ds.putUS(Tags.NumberOfSamples, 1);}if (!ds.contains(Tags.PhotometricInterpretation)) {ds.putCS(Tags.PhotometricInterpretation, ""MONOCHROME2"");}if (fmi) {ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));}OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));try {} finally {ds.writeFile(out, encodeParam());if (hasPixelData) {if (!skipGroupLen) {out.write(PXDATA_GROUPLEN);int grlen = pxlen + 8;out.write((byte) grlen);out.write((byte) (grlen >> 8));out.write((byte) (grlen >> 16));out.write((byte) (grlen >> 24));}out.write(PXDATA_TAG);out.write((byte) pxlen);out.write((byte) (pxlen >> 8));out.write((byte) (pxlen >> 16));out.write((byte) (pxlen >> 24));}if (inflate) {int b2, b3;for (; pxlen > 0; pxlen -= 3) {out.write(in.read());b2 = in.read();b3 = in.read();out.write(b2 & 0x0f);out.write(b2 >> 4 | ((b3 & 0x0f) << 4));out.write(b3 >> 4);}} else {for (; pxlen > 0; --pxlen) {out.write(in.read());}}out.close();}System.out.print('.');} finally {in.close();}}public T_Result unmarshall(URL url) throws SAXException, ParserConfigurationException, IOException {XMLReader parser = getParserFactory().newSAXParser().getXMLReader();parser.setContentHandler(getContentHandler());parser.setDTDHandler(getContentHandler());parser.setEntityResolver(getContentHandler());parser.setErrorHandler(getContentHandler());InputSource inputSource = new InputSource(url.openStream());inputSource.setSystemId(url.toString());parser.parse(inputSource);return contentHandler.getRootObject();}private static String getServiceResponse(final String requestName, final Template template, final Map variables) {OutputStreamWriter outputWriter = null;try {final StringWriter writer = new StringWriter();final VelocityContext context = new VelocityContext(variables);template.merge(context, writer);final String request = writer.toString();final URLConnection urlConnection = new URL(SERVICE_URL).openConnection();urlConnection.setUseCaches(false);urlConnection.setDoOutput(true);urlConnection.setRequestProperty(""User-Agent"", ""Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2b4) Gecko/20091124 Firefox/3.6b4"");urlConnection.setRequestProperty(""Accept"", ""text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"");urlConnection.setRequestProperty(""Accept-Language"", ""en-us,en;q=0.5"");urlConnection.setRequestProperty(""Accept-Charset"", ""ISO-8859-1,utf-8;q=0.7,*;q=0.7"");urlConnection.setRequestProperty(""Accept-Encoding"", ""gzip,deflate"");urlConnection.setRequestProperty(""Keep-Alive"", ""115"");urlConnection.setRequestProperty(""Connection"", ""keep-alive"");urlConnection.setRequestProperty(""Content-Type"", ""text/xml; charset=utf-8"");urlConnection.setRequestProperty(""Content-Length"", """" + request.length());urlConnection.setRequestProperty(""SOAPAction"", requestName);outputWriter = new OutputStreamWriter(urlConnection.getOutputStream(), ""UTF-8"");outputWriter.write(request);outputWriter.flush();final InputStream result = urlConnection.getInputStream();return IOUtils.toString(result);} catch (Exception ex) {throw new RuntimeException(ex);} finally {if (outputWriter != null) {try {outputWriter.close();} catch (IOException logOrIgnore) {}}}}"	5
"private File downloadURL(URL url) {MerlotDebug.msg(""Downloading URL: "" + url);String filename = url.getFile();if (filename.indexOf('/') >= 0) {filename = filename.substring(filename.lastIndexOf('/') + 1);}File userPluginsDir = new File(XMLEditorSettings.USER_MERLOT_DIR, ""plugins"");File cache = new File(userPluginsDir, filename);try {if (!userPluginsDir.exists()) {userPluginsDir.mkdirs();}URLConnection connection = url.openConnection();if (cache.exists() && cache.canRead()) {connection.connect();long remoteTimestamp = connection.getLastModified();if (remoteTimestamp == 0 || remoteTimestamp > cache.lastModified()) {cache = downloadContent(connection, cache);} else {MerlotDebug.msg(""Using cached version for URL: "" + url);}} else {cache = downloadContent(connection, cache);}} catch (IOException ex) {MerlotDebug.exception(ex);}if (cache != null && cache.exists()) {return cache;} else {return null;}}public synchronized String encrypt(String plaintext) throws Exception {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {throw new Exception(e.getMessage());}try {md.update(plaintext.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {throw new Exception(e.getMessage());}byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}private static String fetchUrl(String url, boolean keepLineEnds) throws IOException, MalformedURLException {URLConnection destConnection = (new URL(url)).openConnection();BufferedReader br;String inputLine;StringBuffer doc = new StringBuffer();String contentEncoding;destConnection.setRequestProperty(""Accept-Encoding"", ""gzip"");if (proxyAuth != null) destConnection.setRequestProperty(""Proxy-Authorization"", proxyAuth);destConnection.connect();contentEncoding = destConnection.getContentEncoding();if ((contentEncoding != null) && contentEncoding.equals(""gzip"")) {br = new BufferedReader(new InputStreamReader(new GZIPInputStream(destConnection.getInputStream())));} else {br = new BufferedReader(new InputStreamReader(destConnection.getInputStream()));}while ((inputLine = br.readLine()) != null) {if (keepLineEnds) doc.append(inputLine + ""\n""); else doc.append(inputLine);}br.close();return doc.toString();}protected Document getRawResults(String urlString, Map args) throws Exception {int count = 0;Iterator keys = args.keySet().iterator();while (keys.hasNext()) {String sep = count++ == 0 ? ""?"" : ""&"";String name = (String) keys.next();if (args.get(name) != null) {urlString += sep + name + ""="" + args.get(name);}}URL url = new URL(urlString);URLConnection conn = url.openConnection();conn.connect();SAXBuilder builder = new SAXBuilder();return builder.build(conn.getInputStream());}public boolean renameTo(File dest) throws IOException {if (dest == null) {throw new NullPointerException(""dest"");}if (!file.renameTo(dest)) {FileInputStream inputStream = new FileInputStream(file);FileOutputStream outputStream = new FileOutputStream(dest);FileChannel in = inputStream.getChannel();FileChannel out = outputStream.getChannel();long destsize = in.transferTo(0, size, out);in.close();out.close();if (destsize == size) {file.delete();file = dest;isRenamed = true;return true;} else {dest.delete();return false;}}file = dest;isRenamed = true;return true;}private static void zipFolder(File folder, ZipOutputStream zipOutputStream, String relativePath) throws IOException {File[] children = folder.listFiles();for (int i = 0; i < children.length; i++) {File child = children[i];if (child.isFile()) {String zipEntryName = children[i].getCanonicalPath().replace(relativePath + File.separator, """");ZipEntry entry = new ZipEntry(zipEntryName);zipOutputStream.putNextEntry(entry);InputStream inputStream = new FileInputStream(child);IOUtils.copy(inputStream, zipOutputStream);inputStream.close();} else {ZipUtil.zipFolder(child, zipOutputStream, relativePath);}}}private static void addFolderToZip(File folder, ZipOutputStream zip, String baseName) throws IOException {File[] files = folder.listFiles();for (File file : files) {if (file.isDirectory()) {addFolderToZip(file, zip, baseName);} else {String name = file.getAbsolutePath().substring(baseName.length());ZipEntry zipEntry = new ZipEntry(name);zip.putNextEntry(zipEntry);IOUtils.copy(new FileInputStream(file), zip);zip.closeEntry();}}}public static void main(String[] args) throws Exception {if (args.length < 2) {System.out.println(""Usage: <target URI> <no of requests>"");System.exit(-1);}URI targetURI = new URI(args[0]);int n = Integer.parseInt(args[1]);URL url = targetURI.toURL();byte[] buffer = new byte[4096];long startTime;long finishTime;int successCount = 0;int failureCount = 0;String serverName = ""unknown"";long total = 0;long contentLen = 0;long totalContentLen = 0;startTime = System.currentTimeMillis();for (int i = 0; i < n; i++) {HttpURLConnection c = (HttpURLConnection) url.openConnection();c.connect();InputStream instream = c.getInputStream();try {contentLen = 0;if (instream != null) {int l = 0;while ((l = instream.read(buffer)) != -1) {total += l;contentLen += l;}}if (c.getResponseCode() == 200) {successCount++;} else {failureCount++;}totalContentLen += contentLen;} catch (IOException ex) {failureCount++;}String s = c.getHeaderField(""Server"");if (s != null) {serverName = s;}}finishTime = System.currentTimeMillis();float totalTimeSec = (float) (finishTime - startTime) / 1000;float reqsPerSec = (float) successCount / totalTimeSec;float timePerReqMs = (float) (finishTime - startTime) / (float) successCount;System.out.print(""Server Software:\t"");System.out.println(serverName);System.out.println();System.out.print(""Document URI:\t\t"");System.out.println(targetURI);System.out.print(""Document Length:\t"");System.out.print(contentLen);System.out.println("" bytes"");System.out.println();System.out.print(""Time taken for tests:\t"");System.out.print(totalTimeSec);System.out.println("" seconds"");System.out.print(""Complete requests:\t"");System.out.println(successCount);System.out.print(""Failed requests:\t"");System.out.println(failureCount);System.out.print(""Content transferred:\t"");System.out.print(total);System.out.println("" bytes"");System.out.print(""Requests per second:\t"");System.out.print(reqsPerSec);System.out.println("" [#/sec] (mean)"");System.out.print(""Time per request:\t"");System.out.print(timePerReqMs);System.out.println("" [ms] (mean)"");}public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException {long sTime = System.currentTimeMillis();if (DEBUG) System.out.println(""INGESTING FILE TO FEDORA:fileName ="" + fileName + ""fileType ="" + fileType + ""t = 0"");String host = FedoraUtils.getFedoraProperty(this, ""admin.ftp.address"");String url = FedoraUtils.getFedoraProperty(this, ""admin.ftp.url"");int port = Integer.parseInt(FedoraUtils.getFedoraProperty(this, ""admin.ftp.port""));String userName = FedoraUtils.getFedoraProperty(this, ""admin.ftp.username"");String password = FedoraUtils.getFedoraProperty(this, ""admin.ftp.password"");String directory = FedoraUtils.getFedoraProperty(this, ""admin.ftp.directory"");FTPClient client = new FTPClient();client.connect(host, port);client.login(userName, password);client.changeWorkingDirectory(directory);client.setFileType(FTP.BINARY_FILE_TYPE);client.storeFile(fileName, new FileInputStream(file.getAbsolutePath().replaceAll(""%20"", "" "")));client.logout();client.disconnect();if (DEBUG) System.out.println(""INGESTING FILE TO FEDORA: Writting to FTP Server:"" + (System.currentTimeMillis() - sTime));fileName = url + fileName;int BUFFER_SIZE = 10240;StringBuffer sb = new StringBuffer();String s = new String();BufferedInputStream fis = new BufferedInputStream(new FileInputStream(new File(getResource(templateFileName).getFile().replaceAll(""%20"", "" ""))));byte[] buf = new byte[BUFFER_SIZE];int ch;int len;while ((len = fis.read(buf)) > 0) {s = s + new String(buf);}fis.close();if (DEBUG) System.out.println(""INGESTING FILE TO FEDORA: Read Mets File:"" + (System.currentTimeMillis() - sTime));String r = updateMetadata(s, fileName, file.getName(), fileType, properties);if (DEBUG) System.out.println(""INGESTING FILE TO FEDORA: Resplaced Metadata:"" + (System.currentTimeMillis() - sTime));File METSfile = File.createTempFile(""vueMETSMap"", "".xml"");FileOutputStream fos = new FileOutputStream(METSfile);fos.write(r.getBytes());fos.close();if (DEBUG) System.out.println(""INGESTING FILE TO FEDORA: Ingest complete:"" + (System.currentTimeMillis() - sTime));String pid = ""Method Not Supported any more"";System.out.println("" METSfile= "" + METSfile.getPath() + "" PID = "" + pid);return new PID(pid);}public void doFTP() throws BuildException {FTPClient ftp = null;try {task.log(""Opening FTP connection to "" + task.getServer(), Project.MSG_VERBOSE);ftp = new FTPClient();if (task.isConfigurationSet()) {ftp = FTPConfigurator.configure(ftp, task);}ftp.setRemoteVerificationEnabled(task.getEnableRemoteVerification());ftp.connect(task.getServer(), task.getPort());if (!FTPReply.isPositiveCompletion(ftp.getReplyCode())) {throw new BuildException(""FTP connection failed: "" + ftp.getReplyString());}task.log(""connected"", Project.MSG_VERBOSE);task.log(""logging in to FTP server"", Project.MSG_VERBOSE);if ((task.getAccount() != null && !ftp.login(task.getUserid(), task.getPassword(), task.getAccount())) || (task.getAccount() == null && !ftp.login(task.getUserid(), task.getPassword()))) {throw new BuildException(""Could not login to FTP server"");}task.log(""login succeeded"", Project.MSG_VERBOSE);if (task.isBinary()) {ftp.setFileType(org.apache.commons.net.ftp.FTP.BINARY_FILE_TYPE);if (!FTPReply.isPositiveCompletion(ftp.getReplyCode())) {throw new BuildException(""could not set transfer type: "" + ftp.getReplyString());}} else {ftp.setFileType(org.apache.commons.net.ftp.FTP.ASCII_FILE_TYPE);if (!FTPReply.isPositiveCompletion(ftp.getReplyCode())) {throw new BuildException(""could not set transfer type: "" + ftp.getReplyString());}}if (task.isPassive()) {task.log(""entering passive mode"", Project.MSG_VERBOSE);ftp.enterLocalPassiveMode();if (!FTPReply.isPositiveCompletion(ftp.getReplyCode())) {throw new BuildException(""could not enter into passive "" + ""mode: "" + ftp.getReplyString());}}if (task.getInitialSiteCommand() != null) {RetryHandler h = new RetryHandler(task.getRetriesAllowed(), task);final FTPClient lftp = ftp;executeRetryable(h, new Retryable() {public void execute() throws IOException {doSiteCommand(lftp, task.getInitialSiteCommand());}}, ""initial site command: "" + task.getInitialSiteCommand());}if (task.getUmask() != null) {RetryHandler h = new RetryHandler(task.getRetriesAllowed(), task);final FTPClient lftp = ftp;executeRetryable(h, new Retryable() {public void execute() throws IOException {doSiteCommand(lftp, ""umask "" + task.getUmask());}}, ""umask "" + task.getUmask());}if (task.getAction() == FTPTask.MK_DIR) {RetryHandler h = new RetryHandler(task.getRetriesAllowed(), task);final FTPClient lftp = ftp;executeRetryable(h, new Retryable() {public void execute() throws IOException {makeRemoteDir(lftp, task.getRemotedir());}}, task.getRemotedir());} else if (task.getAction() == FTPTask.SITE_CMD) {RetryHandler h = new RetryHandler(task.getRetriesAllowed(), task);final FTPClient lftp = ftp;executeRetryable(h, new Retryable() {public void execute() throws IOException {doSiteCommand(lftp, task.getSiteCommand());}}, ""Site Command: "" + task.getSiteCommand());} else {if (task.getRemotedir() != null) {task.log(""changing the remote directory"", Project.MSG_VERBOSE);ftp.changeWorkingDirectory(task.getRemotedir());if (!FTPReply.isPositiveCompletion(ftp.getReplyCode())) {throw new BuildException(""could not change remote "" + ""directory: "" + ftp.getReplyString());}}if (task.isNewer() && task.isTimeDiffAuto()) {task.setTimeDiffMillis(getTimeDiff(ftp));}task.log(FTPTask.ACTION_STRS[task.getAction()] + "" "" + FTPTask.ACTION_TARGET_STRS[task.getAction()]);transferFiles(ftp);}} catch (IOException ex) {throw new BuildException(""error during FTP transfer: "" + ex, ex);} finally {if (ftp != null && ftp.isConnected()) {try {task.log(""disconnecting"", Project.MSG_VERBOSE);ftp.logout();ftp.disconnect();} catch (IOException ex) {}}}}"	5
"public static byte[] hash(String identifier) {if (function.equals(""SHA-1"")) {try {MessageDigest md = MessageDigest.getInstance(function);md.reset();byte[] code = md.digest(identifier.getBytes());byte[] value = new byte[KEY_LENGTH / 8];int shrink = code.length / value.length;int bitCount = 1;for (int j = 0; j < code.length * 8; j++) {int currBit = ((code[j / 8] & (1 << (j % 8))) >> j % 8);if (currBit == 1) bitCount++;if (((j + 1) % shrink) == 0) {int shrinkBit = (bitCount % 2 == 0) ? 0 : 1;value[j / shrink / 8] |= (shrinkBit << ((j / shrink) % 8));bitCount = 1;}}return value;} catch (Exception e) {e.printStackTrace();}}if (function.equals(""CRC32"")) {CRC32 crc32 = new CRC32();crc32.reset();crc32.update(identifier.getBytes());long code = crc32.getValue();code &= (0xffffffffffffffffL >>> (64 - KEY_LENGTH));byte[] value = new byte[KEY_LENGTH / 8];for (int i = 0; i < value.length; i++) {value[value.length - i - 1] = (byte) ((code >> 8 * i) & 0xff);}return value;}if (function.equals(""Java"")) {int code = identifier.hashCode();code &= (0xffffffff >>> (32 - KEY_LENGTH));byte[] value = new byte[KEY_LENGTH / 8];for (int i = 0; i < value.length; i++) {value[value.length - i - 1] = (byte) ((code >> 8 * i) & 0xff);}return value;}return null;}public void print(PrintWriter out) {out.println(""<?xml version=\""1.0\""?>\n"" + ""<?xml-stylesheet type=\""text/xsl\"" href=\""http://www.urbigene.com/foaf/foaf2html.xsl\"" ?>\n"" + ""<rdf:RDF \n"" + ""xml:lang=\""en\"" \n"" + ""xmlns:rdf=\""http://www.w3.org/1999/02/22-rdf-syntax-ns#\""  \n"" + ""xmlns:rdfs=\""http://www.w3.org/2000/01/rdf-schema#\"" \n"" + ""xmlns=\""http://xmlns.com/foaf/0.1/\"" \n"" + ""xmlns:foaf=\""http://xmlns.com/foaf/0.1/\"" \n"" + ""xmlns:dc=\""http://purl.org/dc/elements/1.1/\"">\n"");out.println(""<!-- generated with SciFoaf http://www.urbigene.com/foaf -->"");if (this.mainAuthor == null && this.authors.getAuthorCount() > 0) {this.mainAuthor = this.authors.getAuthorAt(0);}if (this.mainAuthor != null) {out.println(""<foaf:PersonalProfileDocument rdf:about=\""\"">\n"" + ""\t<foaf:primaryTopic rdf:nodeID=\"""" + this.mainAuthor.getID() + ""\""/>\n"" + ""\t<foaf:maker rdf:resource=\""mailto:plindenbaum@yahoo.fr\""/>\n"" + ""\t<dc:title>FOAF for "" + XMLUtilities.escape(this.mainAuthor.getName()) + ""</dc:title>\n"" + ""\t<dc:description>\n"" + ""\tFriend-of-a-Friend description for "" + XMLUtilities.escape(this.mainAuthor.getName()) + ""\n"" + ""\t</dc:description>\n"" + ""</foaf:PersonalProfileDocument>\n\n"");}for (int i = 0; i < this.laboratories.size(); ++i) {Laboratory lab = this.laboratories.getLabAt(i);out.println(""<foaf:Group rdf:ID=\""laboratory_ID"" + i + ""\"" >"");out.println(""\t<foaf:name>"" + XMLUtilities.escape(lab.toString()) + ""</foaf:name>"");for (int j = 0; j < lab.getAuthorCount(); ++j) {out.println(""\t<foaf:member rdf:resource=\""#"" + lab.getAuthorAt(j).getID() + ""\"" />"");}out.println(""</foaf:Group>\n\n"");}for (int i = 0; i < this.authors.size(); ++i) {Author author = authors.getAuthorAt(i);out.println(""<foaf:Person rdf:ID=\"""" + xmlName(author.getID()) + ""\"" >"");out.println(""\t<foaf:name>"" + xmlName(author.getName()) + ""</foaf:name>"");out.println(""\t<foaf:title>Dr</foaf:title>"");out.println(""\t<foaf:family_name>"" + xmlName(author.getLastName()) + ""</foaf:family_name>"");if (author.getForeName() != null && author.getForeName().length() > 2) {out.println(""\t<foaf:firstName>"" + xmlName(author.getForeName()) + ""</foaf:firstName>"");}String prop = author.getProperty(""foaf:mbox"");if (prop != null) {String tokens[] = prop.split(""[\t ]+"");for (int j = 0; j < tokens.length; ++j) {if (tokens[j].trim().length() == 0) continue;if (tokens[j].equals(""mailto:"")) continue;if (!tokens[j].startsWith(""mailto:"")) tokens[j] = ""mailto:"" + tokens[j];try {MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(tokens[j].getBytes());byte[] digest = md.digest();out.print(""\t<foaf:mbox_sha1sum>"");for (int k = 0; k < digest.length; k++) {String hex = Integer.toHexString(digest[k]);if (hex.length() == 1) hex = ""0"" + hex;hex = hex.substring(hex.length() - 2);out.print(hex);}out.println(""</foaf:mbox_sha1sum>"");} catch (Exception err) {out.println(""\t<foaf:mbox rdf:resource=\"""" + tokens[j] + ""\"" />"");}}}prop = author.getProperty(""foaf:nick"");if (prop != null) {String tokens[] = prop.split(""[\t ]+"");for (int j = 0; j < tokens.length; ++j) {if (tokens[j].trim().length() == 0) continue;out.println(""\t<foaf:surname>"" + XMLUtilities.escape(tokens[j]) + ""</foaf:surname>"");}}prop = author.getProperty(""foaf:homepage"");if (prop != null) {String tokens[] = prop.split(""[\t ]+"");for (int j = 0; j < tokens.length; ++j) {if (!tokens[j].trim().startsWith(""http://"")) continue;if (tokens[j].trim().equals(""http://"")) continue;out.println(""\t<foaf:homepage  rdf:resource=\"""" + XMLUtilities.escape(tokens[j].trim()) + ""\""/>"");}}out.println(""\t<foaf:publications rdf:resource=\""http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?db=pubmed&amp;cmd=Search&amp;itool=pubmed_Abstract&amp;term="" + author.getTerm() + ""\""/>"");prop = author.getProperty(""foaf:img"");if (prop != null) {String tokens[] = prop.split(""[\t ]+"");for (int j = 0; j < tokens.length; ++j) {if (!tokens[j].trim().startsWith(""http://"")) continue;if (tokens[j].trim().equals(""http://"")) continue;out.println(""\t<foaf:depiction rdf:resource=\"""" + XMLUtilities.escape(tokens[j].trim()) + ""\""/>"");}}AuthorList knows = this.whoknowwho.getKnown(author);for (int j = 0; j < knows.size(); ++j) {out.println(""\t<foaf:knows rdf:resource=\""#"" + xmlName(knows.getAuthorAt(j).getID()) + ""\"" />"");}Paper publications[] = this.papers.getAuthorPublications(author).toArray();if (!(publications.length == 0)) {HashSet meshes = new HashSet();for (int j = 0; j < publications.length; ++j) {meshes.addAll(publications[j].meshTerms);}for (Iterator itermesh = meshes.iterator(); itermesh.hasNext(); ) {MeshTerm meshterm = (MeshTerm) itermesh.next();out.println(""\t<foaf:interest>\n"" + ""\t\t<rdf:Description rdf:about=\"""" + meshterm.getURL() + ""\"">\n"" + ""\t\t\t<dc:title>"" + XMLUtilities.escape(meshterm.toString()) + ""</dc:title>\n"" + ""\t\t</rdf:Description>\n"" + ""\t</foaf:interest>"");}}out.println(""</foaf:Person>\n\n"");}Paper paperarray[] = this.papers.toArray();for (int i = 0; i < paperarray.length; ++i) {out.println(""<foaf:Document rdf:about=\""http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&amp;db=pubmed&amp;dopt=Abstract&amp;list_uids="" + paperarray[i].getPMID() + ""\"">"");out.println(""<dc:title>"" + XMLUtilities.escape(paperarray[i].getTitle()) + ""</dc:title>"");for (Iterator iter = paperarray[i].authors.iterator(); iter.hasNext(); ) {Author author = (Author) iter.next();out.println(""<dc:author rdf:resource=\""#"" + XMLUtilities.escape(author.getID()) + ""\""/>"");}out.println(""</foaf:Document>"");}out.println(""</rdf:RDF>"");}public static void unzip(final File file, final ZipFile zipFile, final File targetDirectory) throws PtException {LOG.info(""Unzipping zip file '"" + file.getAbsolutePath() + ""' to directory "" + ""'"" + targetDirectory.getAbsolutePath() + ""'."");assert (file.exists() && file.isFile());if (targetDirectory.exists() == false) {LOG.debug(""Creating target directory."");if (targetDirectory.mkdirs() == false) {throw new PtException(""Could not create target directory at "" + ""'"" + targetDirectory.getAbsolutePath() + ""'!"");}}ZipInputStream zipin = null;try {zipin = new ZipInputStream(new FileInputStream(file));ZipEntry nextZipEntry = zipin.getNextEntry();while (nextZipEntry != null) {LOG.debug(""Unzipping entry '"" + nextZipEntry.getName() + ""'."");if (nextZipEntry.isDirectory()) {LOG.debug(""Skipping directory."");continue;}final File targetFile = new File(targetDirectory, nextZipEntry.getName());final File parentTargetFile = targetFile.getParentFile();if (parentTargetFile.exists() == false) {LOG.debug(""Creating directory '"" + parentTargetFile.getAbsolutePath() + ""'."");if (parentTargetFile.mkdirs() == false) {throw new PtException(""Could not create target directory at "" + ""'"" + parentTargetFile.getAbsolutePath() + ""'!"");}}InputStream input = null;FileOutputStream output = null;try {input = zipFile.getInputStream(nextZipEntry);if (targetFile.createNewFile() == false) {throw new PtException(""Could not create target file "" + ""'"" + targetFile.getAbsolutePath() + ""'!"");}output = new FileOutputStream(targetFile);byte[] buffer = new byte[BUFFER_SIZE];int readBytes = input.read(buffer, 0, buffer.length);while (readBytes > 0) {output.write(buffer, 0, readBytes);readBytes = input.read(buffer, 0, buffer.length);}} finally {PtCloseUtil.close(input, output);}nextZipEntry = zipin.getNextEntry();}} catch (IOException e) {throw new PtException(""Could not unzip file '"" + file.getAbsolutePath() + ""'!"", e);} finally {PtCloseUtil.close(zipin);}}public static void main(String[] args) throws IOException {String uri = ""hdfs://localhost:8020/user/leeing/maxtemp/sample.txt"";Configuration conf = new Configuration();FileSystem fs = FileSystem.get(URI.create(uri), conf);InputStream in = null;try {in = fs.open(new Path(uri));IOUtils.copyBytes(in, System.out, 8192, false);} finally {IOUtils.closeStream(in);}}@Overrideprotected ModelAndView handleRequestInternal(final HttpServletRequest request, final HttpServletResponse response) throws Exception {final String filename = ServletRequestUtils.getRequiredStringParameter(request, ""id"");final File file = new File(path, filename + "".html"");logger.debug(""Getting static content from: "" + file.getPath());final InputStream is = getServletContext().getResourceAsStream(file.getPath());OutputStream out = null;if (is != null) {try {out = response.getOutputStream();IOUtils.copy(is, out);} catch (IOException ioex) {logger.error(ioex);} finally {is.close();if (out != null) {out.close();}}}return null;}public String readLines() {StringBuffer lines = new StringBuffer();try {int HttpResult;URL url = new URL(address);URLConnection urlconn = url.openConnection();urlconn.connect();HttpURLConnection httpconn = (HttpURLConnection) urlconn;HttpResult = httpconn.getResponseCode();if (HttpResult != HttpURLConnection.HTTP_OK) {System.out.println(""�޷����ӵ�"" + address);} else {BufferedReader reader = new BufferedReader(new InputStreamReader(urlconn.getInputStream()));while (true) {String line = reader.readLine();if (line == null) break;lines.append(line + ""\r\n"");}reader.close();}} catch (Exception e) {e.printStackTrace();}return lines.toString();}public boolean copy(long id) {boolean bool = false;this.result = null;Connection conn = null;Object vo = null;try {PojoParser parser = PojoParser.getInstances();conn = ConnectUtil.getConnect();conn.setAutoCommit(false);String sql = SqlUtil.getInsertSql(this.getCls());vo = this.findById(conn, ""select * from "" + parser.getTableName(cls) + "" where "" + parser.getPriamryKey(cls) + ""="" + id);String pk = parser.getPriamryKey(cls);this.getClass().getMethod(""set"" + SqlUtil.getFieldName(pk), new Class[] { long.class }).invoke(vo, new Object[] { 0 });PreparedStatement ps = conn.prepareStatement(sql);setPsParams(ps, vo);ps.executeUpdate();ps.close();conn.commit();bool = true;} catch (Exception e) {try {conn.rollback();} catch (Exception ex) {}this.result = e.getMessage();} finally {this.closeConnectWithTransaction(conn);}return bool;}public boolean copy(Class<?> subCls, String subCol, long id) {boolean bool = false;this.result = null;Connection conn = null;Object vo = null;try {conn = ConnectUtil.getConnect();conn.setAutoCommit(false);PojoParser parser = PojoParser.getInstances();String sql = SqlUtil.getInsertSql(this.getCls());vo = this.findById(conn, ""select * from "" + parser.getTableName(cls) + "" where "" + parser.getPriamryKey(cls) + ""="" + id);String pk = parser.getPriamryKey(cls);this.getCls().getMethod(""set"" + SqlUtil.getFieldName(pk), new Class[] { long.class }).invoke(vo, new Object[] { 0 });PreparedStatement ps = conn.prepareStatement(sql);setPsParams(ps, vo);ps.executeUpdate();ps.close();long key = this.id;parser = PojoParser.getInstances();sql = SqlUtil.getInsertSql(subCls);Class<?> clses = this.cls;this.cls = subCls;ps = conn.prepareStatement(""select * from "" + parser.getTableName(subCls) + "" where "" + subCol + ""="" + id);this.assembleObjToList(ps);ps = conn.prepareStatement(sql);ids = new long[orgList.size()];Method m = subCls.getMethod(""set"" + SqlUtil.getFieldName(subCol), new Class[] { long.class });for (int i = 0; i < orgList.size(); ++i) {Object obj = orgList.get(i);subCls.getMethod(""set"" + SqlUtil.getFieldName(parser.getPriamryKey(subCls)), new Class[] { long.class }).invoke(obj, new Object[] { 0 });m.invoke(obj, new Object[] { key });setPsParams(ps, obj);ps.addBatch();if ((i % 100) == 0) ps.executeBatch();ids[i] = this.id;}ps.executeBatch();ps.close();conn.commit();this.cls = clses;this.id = key;bool = true;} catch (Exception e) {try {conn.rollback();} catch (Exception ex) {ex.printStackTrace();}this.result = e.getMessage();} finally {this.closeConnectWithTransaction(conn);}return bool;}public boolean save(Object obj) {boolean bool = false;this.result = null;if (obj == null) return bool;Connection conn = null;try {conn = ConnectUtil.getConnect();conn.setAutoCommit(false);String sql = SqlUtil.getInsertSql(this.getCls());PreparedStatement ps = conn.prepareStatement(sql);setPsParams(ps, obj);ps.executeUpdate();ps.close();conn.commit();bool = true;} catch (Exception e) {try {conn.rollback();} catch (SQLException e1) {}this.result = e.getMessage();} finally {this.closeConnectWithTransaction(conn);}return bool;}public NodeId generateTopicId(String topicName) {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {System.err.println(""No SHA support!"");}md.update(topicName.getBytes());byte[] digest = md.digest();NodeId newId = new NodeId(digest);return newId;}"	5
"public int delete(BusinessObject o) throws DAOException {int delete = 0;Currency curr = (Currency) o;try {PreparedStatement pst = connection.prepareStatement(XMLGetQuery.getQuery(""DELETE_CURRENCY""));pst.setInt(1, curr.getId());delete = pst.executeUpdate();if (delete <= 0) {connection.rollback();throw new DAOException(""Number of rows <= 0"");} else if (delete > 1) {connection.rollback();throw new DAOException(""Number of rows > 1"");}connection.commit();} catch (SQLException e) {Log.write(e.getMessage());throw new DAOException(""A SQLException has occured"");} catch (NullPointerException npe) {Log.write(npe.getMessage());throw new DAOException(""Connection null"");}return delete;}public int update(BusinessObject o) throws DAOException {int update = 0;Currency curr = (Currency) o;try {PreparedStatement pst = connection.prepareStatement(XMLGetQuery.getQuery(""UPDATE_CURRENCY""));pst.setString(1, curr.getName());pst.setInt(2, curr.getIdBase());pst.setDouble(3, curr.getValue());pst.setInt(4, curr.getId());update = pst.executeUpdate();if (update <= 0) {connection.rollback();throw new DAOException(""Number of rows <= 0"");} else if (update > 1) {connection.rollback();throw new DAOException(""Number of rows > 1"");}connection.commit();} catch (SQLException e) {Log.write(e.getMessage());throw new DAOException(""A SQLException has occured"");} catch (NullPointerException npe) {Log.write(npe.getMessage());throw new DAOException(""Connection null"");}return update;}public static String encryptPassword(String password) {try {MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(password.getBytes());byte[] hash = md.digest();StringBuilder hashStringBuf = new StringBuilder(""{SHA}"");String byteString;int byteLength;for (int index = 0; index < hash.length; index++) {byteString = String.valueOf(hash[index] + 128);byteLength = byteString.length();switch(byteLength) {case 1:byteString = ""00"" + byteString;break;case 2:byteString = ""0"" + byteString;break;}hashStringBuf.append(byteString);}return hashStringBuf.toString();} catch (NoSuchAlgorithmException nsae) {log.error(""Error getting password hash - "" + nsae.getMessage());return null;}}public static String encryptPassword(String username, String realm, String password) throws GeneralSecurityException {MessageDigest md = null;md = MessageDigest.getInstance(""MD5"");md.update(username.getBytes());md.update("":"".getBytes());md.update(realm.getBytes());md.update("":"".getBytes());md.update(password.getBytes());byte[] hash = md.digest();return toHex(hash, hash.length);}public static boolean doTest(Getter<?> context, Document node) {try {URL url = new URL(StringUtil.evaluateEL(Documents.getDocumentValue(node, ""url""), context));HttpURLConnection conn = (HttpURLConnection) url.openConnection();Assert.isTrue(conn.getResponseCode() < 400);conn.disconnect();return true;} catch (Exception e) {return false;}}protected void xInitGUI() {this.jlHead.setText(formater.getText(""select_marc21_title""));this.jlResId.setText(formater.getText(""select_marc21_label_text""));this.jlResId.setToolTipText(formater.getText(""select_marc21_label_description""));ElvisListModel model = new ElvisListModel();this.jlResourceList.setModel(model);try {URL urlListResources = new URL(ElvisRegistry.getInstance().getProperty(""elvis.server"") + ""/servlet/listResources?xpath=document()//Book"");InputStream streamResources = urlListResources.openStream();XmlPullParser xpp = XmlPullParserFactory.newInstance().newPullParser();xpp.setInput(new InputStreamReader(streamResources));int type = xpp.getEventType();while (type != XmlPullParser.END_DOCUMENT) {if (type == XmlPullParser.START_TAG && ""Resource"".equals(xpp.getName())) {model.add(xpp.getAttributeValue("""", ""resId""), xpp.getAttributeValue("""", ""author""), xpp.getAttributeValue("""", ""title""));}type = xpp.next();}streamResources.close();} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException ioe) {ioe.printStackTrace();} catch (XmlPullParserException xppe) {xppe.printStackTrace();}ListSelectionModel selectionModel = this.jlResourceList.getSelectionModel();selectionModel.addListSelectionListener(new ListSelectionListener() {/**				 * @param  e  Description of the Parameter				 * @seejavax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)				 */public void valueChanged(ListSelectionEvent e) {int index = e.getFirstIndex();boolean isAdjusting = e.getValueIsAdjusting();if (!isAdjusting) {ElvisListModel _model = (ElvisListModel) jlResourceList.getModel();jtfResId.setText(_model.get(index).getId());}}});}private static void getFileFtp(String user, String password, String host, int port, String fileName, String location) throws Exception {Log.info(""\nretrieve "" + fileName + NEW_LINE);FTPClient client = new FTPClient();client.connect(host, port);int reply = client.getReplyCode();if (!FTPReply.isPositiveCompletion(reply)) {throw new Exception(""FTP fail to connect"");}if (!client.login(user, password)) {throw new Exception(""FTP fail to login"");}try {File locationFile = new File(location);File dest = new File(locationFile, fileName);if (dest.exists()) {dest.delete();} else {locationFile.mkdirs();}boolean status = client.changeWorkingDirectory(""/"");Log.info(""chdir-status:"" + status + NEW_LINE);client.setFileTransferMode(FTPClient.BINARY_FILE_TYPE);client.setFileType(FTPClient.BINARY_FILE_TYPE);client.enterLocalActiveMode();InputStream in = client.retrieveFileStream(fileName);if (in == null) {Log.error(""Input stream is null\n"");throw new Exception(""Fail to retrieve file "" + fileName);}Thread.sleep(3000);saveInputStreamToFile(in, new File(location, fileName));} finally {client.disconnect();}}public static void copyFile(String src, String target) throws IOException {FileChannel ic = new FileInputStream(src).getChannel();FileChannel oc = new FileOutputStream(target).getChannel();ic.transferTo(0, ic.size(), oc);ic.close();oc.close();}public static String digest(String text, String algorithm, String charsetName) {try {MessageDigest md = MessageDigest.getInstance(algorithm);md.update(text.getBytes(charsetName), 0, text.length());return convertToHex(md.digest());} catch (NoSuchAlgorithmException e) {throw new RuntimeException(""unexpected exception: "" + e, e);} catch (UnsupportedEncodingException e) {throw new RuntimeException(""unexpected exception: "" + e, e);}}private String callPage(String urlStr) throws IOException {URL url = new URL(urlStr);BufferedReader reader = null;StringBuilder result = new StringBuilder();try {reader = new BufferedReader(new InputStreamReader(url.openStream()));String line;while ((line = reader.readLine()) != null) {result.append(line);}} finally {if (reader != null) reader.close();}return result.toString();}"	5
"private void runUpdateAppListing() {DataStorage.clearListedAppListing();GenericUrl url = new GoogleUrl(EnterpriseMarketplaceUrl.generateAppListingUrl() + DataStorage.getVendorProfile().vendorId);AppListing appListingBody = buildAppListing(appsMarketplaceProject);JsonHttpContent content = new JsonHttpContent();content.jsonFactory = jsonFactory;if (appListingBody != null) {content.data = appListingBody;}AppListing appListing;try {HttpRequest request = requestFactory.buildPutRequest(url, content);request.addParser(jsonHttpParser);request.readTimeout = readTimeout;HttpResponse response = request.execute();appListing = response.parseAs(AppListing.class);operationStatus = validateAppListing(appListing, appListingBody);if (operationStatus) {DataStorage.setListedAppListing(appListing);}response.getContent().close();} catch (IOException e) {AppsMarketplacePluginLog.logError(e);}}private static List<InputMethodDescriptor> loadIMDescriptors() {String nm = SERVICES + InputMethodDescriptor.class.getName();Enumeration<URL> en;LinkedList<InputMethodDescriptor> imdList = new LinkedList<InputMethodDescriptor>();NativeIM nativeIM = ContextStorage.getNativeIM();imdList.add(nativeIM);try {en = ClassLoader.getSystemResources(nm);ClassLoader cl = ClassLoader.getSystemClassLoader();while (en.hasMoreElements()) {URL url = en.nextElement();InputStreamReader isr = new InputStreamReader(url.openStream(), ""UTF-8"");BufferedReader br = new BufferedReader(isr);String str = br.readLine();while (str != null) {str = str.trim();int comPos = str.indexOf(""#"");if (comPos >= 0) {str = str.substring(0, comPos);}if (str.length() > 0) {imdList.add((InputMethodDescriptor) cl.loadClass(str).newInstance());}str = br.readLine();}}} catch (Exception e) {}return imdList;}public static String encodeByMd5(String str) {try {if (str == null) {str = """";}MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(str.getBytes(""utf-8""));byte[] b = md5.digest();int i;StringBuffer buff = new StringBuffer("""");for (int offset = 0; offset < b.length; offset++) {i = b[offset];if (i < 0) {i += 256;}if (i < 16) {buff.append(""0"");}buff.append(Integer.toHexString(i));}return buff.toString();} catch (Exception e) {return str;}}private void generateGuid() throws NoSuchAlgorithmException {MessageDigest md5 = MessageDigest.getInstance(""MD5"");StringBuilder stringToDigest = new StringBuilder();long time = System.currentTimeMillis();long rand = random.nextLong();stringToDigest.append(time);stringToDigest.append(""-"");stringToDigest.append(rand);md5.update(stringToDigest.toString().getBytes());byte[] digestBytes = md5.digest();StringBuilder digest = new StringBuilder();for (int i = 0; i < digestBytes.length; ++i) {int b = digestBytes[i] & 0xFF;if (b < 0x10) {digest.append('0');}digest.append(Integer.toHexString(b));}guid = digest.toString();}protected boolean downloadFile(TestThread thread, ActionResult result) {result.setRequestString(""download file "" + remoteFile);InputStream input = null;OutputStream output = null;OutputStream target = null;boolean status = false;ftpClient.enterLocalPassiveMode();try {if (localFile != null) {File lcFile = new File(localFile);if (lcFile.exists() && lcFile.isDirectory()) output = new FileOutputStream(new File(lcFile, remoteFile)); else output = new FileOutputStream(lcFile);target = output;} else {target = new FileOutputStream(remoteFile);}input = ftpClient.retrieveFileStream(remoteFile);long bytes = IOUtils.copy(input, target);status = bytes > 0;if (status) {result.setResponseLength(bytes);}} catch (Exception e) {result.setException(new TestActionException(config, e));} finally {IOUtils.closeQuietly(input);IOUtils.closeQuietly(output);}return status;}public boolean login(URL strUrl, String loginName, String loginPwd, String sessionID) throws Exception {String starter = ""-----------------------------"";String returnChar = ""\r\n"";String lineEnd = ""--"";URL urlString = strUrl;String input = null;List txtList = new ArrayList();List fileList = new ArrayList();String targetFile = null;String actionStatus = null;StringBuffer returnMessage = new StringBuffer();List head = new ArrayList();final String boundary = String.valueOf(System.currentTimeMillis());URL url = null;URLConnection conn = null;BufferedReader br = null;DataOutputStream dos = null;boolean isLogin = false;txtList.add(new HtmlFormText(""loginName"", loginName));txtList.add(new HtmlFormText(""loginPwd"", loginPwd));txtList.add(new HtmlFormText(""navMode"", ""I""));txtList.add(new HtmlFormText(""action"", ""login""));try {url = new URL(urlString, ""/"" + projectName + ""/Login.do"");conn = url.openConnection();((HttpURLConnection) conn).setRequestMethod(""POST"");conn.setDoInput(true);conn.setDoOutput(true);conn.setUseCaches(false);conn.setRequestProperty(""Content-Type"", ""multipart/form-data, boundary="" + ""---------------------------"" + boundary);if (input != null) {String auth = ""Basic "" + new sun.misc.BASE64Encoder().encode(input.getBytes());conn.setRequestProperty(""Authorization"", auth);}dos = new DataOutputStream(conn.getOutputStream());dos.write((starter + boundary + returnChar).getBytes());for (int i = 0; i < txtList.size(); i++) {HtmlFormText htmltext = (HtmlFormText) txtList.get(i);dos.write(htmltext.getTranslated());if (i + 1 < txtList.size()) {dos.write((starter + boundary + returnChar).getBytes());} else if (fileList.size() > 0) {dos.write((starter + boundary + returnChar).getBytes());}}dos.write((starter + boundary + ""--"" + returnChar).getBytes());dos.flush();br = new BufferedReader(new InputStreamReader(conn.getInputStream()));String key;String header;int i = 1;key = conn.getHeaderFieldKey(i);header = conn.getHeaderField(i);System.out.println(header);if (Utility.isEmpty(header) || header.indexOf(""JSESSIONID"") < 0) {header = ""JSESSIONID="" + sessionID + ""; Path=/"" + projectName;}while (key != null) {head.add(header);i++;key = conn.getHeaderFieldKey(i);header = conn.getHeaderField(i);}String tempstr;int line = 0;while (null != ((tempstr = br.readLine()))) {if (!tempstr.equals("""")) {if (""window.location.replace(\""/eip/Home.do\"");"".indexOf(returnMessage.append(formatLine(tempstr)).toString()) != -1) {isLogin = true;break;}line++;}}txtList.clear();fileList.clear();} catch (Exception e) {e.printStackTrace();} finally {try {dos.close();} catch (Exception e) {}try {br.close();} catch (Exception e) {}}this.setHeadList(head);return isLogin;}public ObjectInputStream getObjectInputStreamFromServlet(String strUrl) throws Exception {if (headList.size() == 0) {return null;}String starter = ""-----------------------------"";String returnChar = ""\r\n"";String lineEnd = ""--"";String urlString = strUrl;String input = null;List txtList = new ArrayList();List fileList = new ArrayList();String targetFile = null;String actionStatus = null;StringBuffer returnMessage = new StringBuffer();List head = new ArrayList();final String boundary = String.valueOf(System.currentTimeMillis());URL url = null;URLConnection conn = null;DataOutputStream dos = null;ObjectInputStream inputFromServlet = null;try {url = new URL(baseURL, ""/"" + projectName + strUrl);conn = url.openConnection();((HttpURLConnection) conn).setRequestMethod(""POST"");conn.setDoInput(true);conn.setDoOutput(true);conn.setUseCaches(false);conn.setRequestProperty(""Content-Type"", ""multipart/form-data, boundary="" + ""---------------------------"" + boundary);conn.setRequestProperty(""Cookie"", (String) headList.get(0));if (input != null) {String auth = ""Basic "" + new sun.misc.BASE64Encoder().encode(input.getBytes());conn.setRequestProperty(""Authorization"", auth);}dos = new DataOutputStream(conn.getOutputStream());dos.flush();inputFromServlet = new ObjectInputStream(conn.getInputStream());txtList.clear();fileList.clear();} catch (EOFException e) {workflowEditor.getEditor().outputMessage(""Session Expired!"", false);throw e;} catch (Exception e) {e.printStackTrace();return null;} finally {try {dos.close();} catch (Exception e) {}}return inputFromServlet;}public Object execute(ExecutionEvent event) throws ExecutionException {try {Shell shell = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell();QuizTreeView view = (QuizTreeView) PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().showView(""org.rcpquizengine.views.quizzes"");Folder rootFolder = view.getRootFolder();if (rootFolder.isEncrypted()) {PasswordDialog dialog = new PasswordDialog(shell);if (dialog.open() == Window.OK) {String password = dialog.getPassword();if (!password.equals("""")) {String md5 = """";MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(password.getBytes());md5 = new BigInteger(md.digest()).toString();if (rootFolder.getMd5Digest().equals(md5)) {rootFolder.setMd5Digest("""");rootFolder.setEncrypted(false);MessageDialog.openInformation(shell, ""Quiz bank unlocked"", ""The current quiz bank has been unlocked"");} else {MessageDialog.openError(shell, ""Error unlocking quiz bank"", ""Incorrect password"");}password = """";md5 = """";}}} else {MessageDialog.openError(shell, ""Error unlocking quiz bank"", ""Quiz bank already unlocked"");}} catch (PartInitException e) {e.printStackTrace();} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return null;}public String getResponse(URL url) throws OAuthException {try {HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.connect();BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));String inputLine;StringBuilder response = new StringBuilder();while ((inputLine = in.readLine()) != null) {response.append(inputLine);}in.close();return response.toString();} catch (IOException e) {throw new OAuthException(""Error getting HTTP response"", e);}}Library(MainFrame mf, boolean newLibrary, String templateName, String newFileName) throws Exception {mainFrame = mf;trackMap = new HashMap<String, LibraryTrack>();trackVec = new Vector<LibraryTrack>();String propFileName = null;File propFile = null;String notExist = """";String[] options = templateDesc;boolean isCurrent = mainFrame.library != null;int ix;if (!newLibrary) {propFileName = mainFrame.name + "".jampal"";propFile = new File(propFileName);}if (isCurrent) {options = new String[templateDesc.length + 1];options[0] = ""Copy of Current Library"";for (ix = 0; ix < templateDesc.length; ix++) {options[ix + 1] = templateDesc[ix];}}boolean copyLibrary = false;if (newLibrary) {if (templateName == null) {Object resp = JOptionPane.showInputDialog(mainFrame.frame, ""Please select a template."", ""Select Type of Library"", JOptionPane.WARNING_MESSAGE, null, options, null);if (resp == null) return;templateName = (String) resp;}for (ix = 0; ix < options.length && !options[ix].equals(templateName); ix++) ;if (isCurrent) ix--;boolean creatingPlaylist = false;BufferedReader in;if (ix == -1) {in = new BufferedReader(new FileReader(mainFrame.name + "".jampal""));copyLibrary = true;creatingPlaylist = (mainFrame.library.attributes.libraryType == 'P');} else {in = new BufferedReader(new InputStreamReader(ClassLoader.getSystemResourceAsStream(""pgbennett/jampal/"" + templateNames[ix])));creatingPlaylist = (""playlist.jampal"".equals(templateNames[ix]));}if (newFileName == null) {JFileChooser fileChooser = new JFileChooser();fileChooser.setDialogTitle(""Create New Library File"");String currentDirectory = null;if (mainFrame.name != null) {File nameFile = new File(mainFrame.name);currentDirectory = nameFile.getParent();if (currentDirectory == null) currentDirectory = ""."";}if (currentDirectory == null) currentDirectory = Jampal.jampalDirectory;if (currentDirectory != null) fileChooser.setCurrentDirectory(new File(currentDirectory));fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);fileChooser.setMultiSelectionEnabled(false);Mp3FileFilter filter = new Mp3FileFilter();filter.setExtension(""jampal"", ""Jampal library files"");fileChooser.addChoosableFileFilter(filter);fileChooser.setAcceptAllFileFilterUsed(false);fileChooser.setFileFilter(filter);fileChooser.setDialogType(JFileChooser.SAVE_DIALOG);int returnVal = fileChooser.showSaveDialog(mainFrame.frame);if (returnVal == fileChooser.APPROVE_OPTION) {propFile = fileChooser.getSelectedFile();propFileName = propFile.getPath();if (!propFileName.toLowerCase().endsWith("".jampal"")) {propFileName = propFileName + "".jampal"";propFile = new File(propFileName);}} else return;} else {propFileName = newFileName;propFile = new File(propFileName);}if (propFile.exists()) {if (JOptionPane.showConfirmDialog(mainFrame.frame, ""File "" + propFileName + "" already exists. Do you want to overwrite it ?"", ""Warning"", JOptionPane.YES_NO_OPTION) != JOptionPane.YES_OPTION) return;}PrintWriter out = new PrintWriter(new FileOutputStream(propFile));String libName = propFile.getName();libName = libName.substring(0, libName.length() - 7);for (; ; ) {String line = in.readLine();if (line == null) break;if (creatingPlaylist && line.startsWith(""playlist="")) {line = ""playlist="" + libName;}if (line.startsWith(""libraryname="")) {line = ""libraryname="" + libName + "".jmp"";}out.println(line);}in.close();out.close();if (!creatingPlaylist && !copyLibrary) {String playlistName = propFile.getParent() + File.separator + ""playlist.jampal"";File playlistFile = new File(playlistName);if (!playlistFile.exists()) {in = new BufferedReader(new InputStreamReader(ClassLoader.getSystemResourceAsStream(""pgbennett/jampal/playlist.jampal"")));out = new PrintWriter(new FileOutputStream(playlistFile));for (; ; ) {String line = in.readLine();if (line == null) break;out.println(line);}in.close();out.close();}}}if (propFileName != null) attributes = new LibraryAttributes(propFileName);insertBefore = -1;}"	5
"public static void init(Locale lng) {try {Locale toLoad = lng != null ? lng : DEFAULT_LOCALE;URL url = ClassLoader.getSystemResource(""locales/"" + toLoad.getISO3Language() + "".properties"");if (url == null) {url = ClassLoader.getSystemResource(""locales/"" + DEFAULT_LOCALE.getISO3Language() + "".properties"");}PROPS.clear();PROPS.load(url.openStream());} catch (IOException ioe) {try {URL url = ClassLoader.getSystemResource(""locales/"" + DEFAULT_LOCALE.getISO3Language() + "".properties"");PROPS.clear();PROPS.load(url.openStream());} catch (Exception e) {e.printStackTrace();System.exit(99);}} catch (Exception e) {e.printStackTrace();System.exit(99);}}private static List<CountryEntry> retrieveCountries() throws IOException {URL url = new URL(""http://"" + ISO_3166_HOST + ISO_3166_TXT_FILE_PATH);BufferedReader input = new BufferedReader(new InputStreamReader(url.openStream()));List<CountryEntry> countries = new LinkedList<CountryEntry>();boolean parsing = false;int trCount = 0;int tdCount = 0;CountryEntry current = new CountryEntry();String nextLine = input.readLine();while (nextLine != null) {if (nextLine.startsWith(""<table"")) {parsing = true;}if (nextLine.startsWith(""</table>"")) {break;}if (parsing) {if (nextLine.startsWith(""<tr"")) {trCount++;} else {if ((trCount > 1 && nextLine.startsWith(""<td""))) {tdCount++;String data = pullData(nextLine);switch(tdCount) {case 1:current.setName(getCountryName(data));break;case 2:current.setNumber(data);break;case 3:current.setAlpha3(data);break;case 4:current.setAlpha2(data);break;case 5:countries.add(current);current = new CountryEntry();tdCount = 0;break;default:String msg = ""Parsing error.  Unexpected column: ["" + data + ""]"";throw new IllegalStateException(msg);}}}}nextLine = input.readLine();}input.close();return countries;}protected long loadFromSource(long afterThisTime) {long startTime = System.currentTimeMillis();QuoteDataSourceDescriptor quoteDataSourceDescriptor = (QuoteDataSourceDescriptor) dataSourceDescriptor;List<Quote> dataPool = dataPools.get(quoteDataSourceDescriptor.sourceSymbol);Calendar calendar = Calendar.getInstance();calendar.clear();SimpleDateFormat sdf = new SimpleDateFormat(quoteDataSourceDescriptor.dateFormat, Locale.US);Date fromDate = new Date();Date toDate = new Date();if (afterThisTime == FIRST_TIME_LOAD) {fromDate = quoteDataSourceDescriptor.fromDate;toDate = quoteDataSourceDescriptor.toDate;} else {calendar.setTimeInMillis(afterThisTime);fromDate = calendar.getTime();}calendar.setTime(fromDate);int a = calendar.get(Calendar.MONTH);int b = calendar.get(Calendar.DAY_OF_MONTH);int c = calendar.get(Calendar.YEAR);calendar.setTime(toDate);int d = calendar.get(Calendar.MONTH);int e = calendar.get(Calendar.DAY_OF_MONTH);int f = calendar.get(Calendar.YEAR);BufferedReader dis;StringBuffer urlStr = new StringBuffer();urlStr.append(""http://table.finance.yahoo.com/table.csv"").append(""?s="");urlStr.append(quoteDataSourceDescriptor.sourceSymbol);urlStr.append(""&a="" + a + ""&b="" + b + ""&c="" + c + ""&d="" + d + ""&e="" + e + ""&f="" + f);urlStr.append(""&g=d&ignore=.csv"");try {URL url = new URL(urlStr.toString());System.out.println(url);HttpURLConnection conn = (HttpURLConnection) url.openConnection();conn.setAllowUserInteraction(true);conn.setRequestMethod(""GET"");conn.setInstanceFollowRedirects(true);InputStreamReader isr = new InputStreamReader(conn.getInputStream());dis = new BufferedReader(isr);String s = dis.readLine();int iDateTime = 0;int iOpen = 1;int iHigh = 2;int iLow = 3;int iClose = 4;int iVolume = 5;int iAdjClose = 6;count = 0;calendar.clear();while ((s = dis.readLine()) != null) {String[] items;items = s.split("","");if (items.length < 6) {break;}Date date = null;try {date = sdf.parse(items[iDateTime].trim());} catch (ParseException ex) {ex.printStackTrace();continue;}calendar.clear();calendar.setTime(date);long time = calendar.getTimeInMillis();if (time <= afterThisTime) {continue;}Quote quote = new Quote();quote.time = time;quote.open = Float.parseFloat(items[iOpen].trim());quote.high = Float.parseFloat(items[iHigh].trim());quote.low = Float.parseFloat(items[iLow].trim());quote.close = Float.parseFloat(items[iClose].trim());quote.volume = Float.parseFloat(items[iVolume].trim()) / 100f;quote.amount = -1;quote.close_adj = Float.parseFloat(items[iAdjClose].trim());if (quote.high * quote.low * quote.close == 0) {quote = null;continue;}dataPool.add(quote);if (count == 0) {firstTime = time;}lastTime = time;setAscending((lastTime >= firstTime) ? true : false);count++;}} catch (Exception ex) {System.out.println(""Error in Reading File: "" + ex.getMessage());}long newestTime = (lastTime >= firstTime) ? lastTime : firstTime;return newestTime;}public void actionPerformed(ActionEvent evt) {try {File tempFile = new File(""/tmp/controler.xml"");File f = new File(""/tmp/controler-temp.xml"");BufferedInputStream copySource = new BufferedInputStream(new FileInputStream(tempFile));BufferedOutputStream copyDestination = new BufferedOutputStream(new FileOutputStream(f));int read = 0;while (read != -1) {read = copySource.read(buffer, 0, BUFFER_SIZE);if (read != -1) {copyDestination.write(buffer, 0, read);}}copyDestination.write(new String(""</log>\n"").getBytes());copySource.close();copyDestination.close();XMLParser parser = new XMLParser(""Controler"");parser.parse(f);f.delete();} catch (IOException ex) {System.out.println(""An error occured during the file copy!"");}}public static void main(String[] args) throws Exception {File inputFile = new File(args[0]);BufferedReader reader = new BufferedReader(new FileReader(inputFile));StringBuffer stringBuffer = new StringBuffer();String readed;while ((readed = reader.readLine()) != null) stringBuffer.append(readed + ""\r\n"");readed = stringBuffer.toString();reader.close();File outputFile = new File(args[0] + "".output"");BufferedWriter writer = new BufferedWriter(new FileWriter(outputFile));readed = readed.replaceAll(""\\t+"", ""#"");readed = readed.replaceAll(""\\s*#\\s*"", ""#"");readed = readed.replaceAll(""Latitude,.*"", """");readed = readed.replaceAll(""Flag of"", """");readed = readed.replaceAll(""^\\s+$"", """");writer.write(readed);writer.close();}public String drive() {logger.info(""\n"");logger.info(""==========================================================="");logger.info(""========== Start drive method ============================="");logger.info(""==========================================================="");logger.entering(cl, ""drive"");xstream = new XStream(new JsonHierarchicalStreamDriver());xstream.setMode(XStream.NO_REFERENCES);xstream.alias(""AuditDiffFacade"", AuditDiffFacade.class);File auditSchemaFile = null;File auditSchemaXsdFile = null;try {if (configFile == null) {logger.severe(""Request Failed: configFile is null"");return null;} else {if (configFile.getAuditSchemaFile() != null) {logger.info(""auditSchemaFile="" + configFile.getAuditSchemaFile());logger.info(""auditSchemaXsdFile="" + configFile.getAuditSchemaXsdFile());logger.info(""plnXpathFile="" + configFile.getPlnXpathFile());logger.info(""auditSchemaFileDir="" + configFile.getAuditSchemaFileDir());logger.info(""auditReportFile="" + configFile.getAuditReportFile());logger.info(""auditReportXsdFile="" + configFile.getAuditReportXsdFile());} else {logger.severe(""Request Failed: auditSchemaFile is null"");return null;}}File test = new File(configFile.getAuditSchemaFileDir() + File.separator + ""temp.xml"");auditSchemaFile = new File(configFile.getAuditSchemaFile());if (!auditSchemaFile.exists() || auditSchemaFile.length() == 0L) {logger.severe(""Request Failed: the audit schema file does not exist or empty"");return null;}auditSchemaXsdFile = null;if (configFile.getAuditSchemaXsdFile() != null) {auditSchemaXsdFile = new File(configFile.getAuditSchemaXsdFile());} else {logger.severe(""Request Failed: the audit schema xsd file is null"");return null;}if (!auditSchemaXsdFile.exists() || auditSchemaXsdFile.length() == 0L) {logger.severe(""Request Failed: the audit schema xsd file does not exist or empty"");return null;}SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);Schema schema = factory.newSchema(auditSchemaXsdFile);Validator validator = schema.newValidator();Source source = new StreamSource(auditSchemaFile);validator.validate(source);} catch (SAXException e) {logger.warning(""SAXException caught trying to validate input Schema Files: "");e.printStackTrace();} catch (IOException e) {logger.warning(""IOException caught trying to read input Schema File: "");e.printStackTrace();}String xPathFile = null;if (configFile.getPlnXpathFile() != null) {xPathFile = configFile.getPlnXpathFile();logger.info(""Attempting to retrieve xpaths from file: '"" + xPathFile + ""'"");XpathUtility.readFile(xPathFile);} else {logger.severe(""Configuration file does not have a value for the Xpath Filename"");return null;}Properties xpathProps = XpathUtility.getXpathsProps();if (xpathProps == null) {logger.severe(""No Xpaths could be extracted from file: '"" + xPathFile + ""' - xpath properties object is null"");return null;}if (xpathProps.isEmpty()) {logger.severe(""No Xpaths could be extracted from file: '"" + xPathFile + ""' - xpath properties object is empty"");return null;}logger.info(xpathProps.size() + "" xpaths retrieved."");for (String key : xpathProps.stringPropertyNames()) {logger.info(""Key="" + key + ""Value="" + xpathProps.getProperty(key));}logger.info(""\n"");logger.info(""==========================================================="");logger.info(""========== Process XML Schema File BEGIN =================="");logger.info(""==========================================================="");SchemaSAXReader sax = new SchemaSAXReader();ArrayList<String> key_matches = new ArrayList<String>(sax.parseDocument(auditSchemaFile, xpathProps));logger.info(""Check Input xpath hash against xpaths found in Schema."");Comparison comp_keys = new Comparison();ArrayList<String> in_xpath_not_in_schema = new ArrayList<String>(comp_keys.keys_not_in_both_hashes(xpathProps, Utility.arraylist_to_map(key_matches, ""key_matches""), ""xpath Properties"", ""hm_key_matches""));if (in_xpath_not_in_schema.size() > 0) {logger.severe(""All XPaths in Input xpath Properties list were not found in Schema."");logger.severe(""Xpaths in xpath Properties list missing from schema file:"" + xstream.toXML(in_xpath_not_in_schema));logger.severe(""Quitting."");return null;}Map<String, Map> schema_audit_hashbox = sax.get_audit_hashbox();logger.info(""schema_audit_hashbox\n"" + xstream.toXML(schema_audit_hashbox));Map<String, Map> schema_network_hashbox = sax.get_net_hashbox();logger.info(""schema_network_hashbox\n"" + xstream.toXML(schema_network_hashbox));Map<String, Map> schema_host_hashbox = sax.get_host_hashbox();Map<String, Map> schema_au_hashbox = sax.get_au_hashbox();logger.info(""schema_au_hashbox\n"" + xstream.toXML(schema_au_hashbox));Hasherator hr = new Hasherator();Set<String> s_host_hb_additions = new HashSet<String>();s_host_hb_additions.add(""/SSP/network/@network_id"");schema_host_hashbox = hr.copy_hashbox_entries(schema_network_hashbox, schema_host_hashbox, s_host_hb_additions);logger.info(""schema_host_hashbox(after adding network name)\n"" + xstream.toXML(schema_host_hashbox));Map<String, String> transforms_s_au_hb = new HashMap<String, String>();transforms_s_au_hb.put(""/SSP/archivalUnits/au/auCapabilities/storageRequired/@max_size"", ""s_gigabytes_to_string_bytes_unformatted()"");schema_au_hashbox = hr.convert_hashbox_vals(schema_au_hashbox, transforms_s_au_hb);Map<String, String> transforms_s_host_hb = new HashMap<String, String>();transforms_s_host_hb.put(""/SSP/hosts/host/hostCapabilities/storageAvailable/@max_size"", ""s_gigabytes_to_string_bytes_unformatted()"");schema_host_hashbox = hr.convert_hashbox_vals(schema_host_hashbox, transforms_s_host_hb);logger.info(""schema_host_hashbox(after transformations)\n"" + xstream.toXML(schema_host_hashbox));logger.info(""\n"");logger.info(""========== Process Schema  END ============================"");logger.info(""\n"");logger.info(""========== Database Operations ============================"");MYSQLWorkPlnHostSummaryDAO daowphs = new MYSQLWorkPlnHostSummaryDAO();daowphs.drop();daowphs.create();daowphs.updateTimestamp();CachedRowSet rs_q0_N = daowphs.query_0_N();double d_space_total = DBUtil.get_single_db_double_value(rs_q0_N, ""net_sum_repo_size"");double d_space_used = DBUtil.get_single_db_double_value(rs_q0_N, ""net_sum_used_space"");double d_space_free = d_space_total - d_space_used;double d_avg_uptime = DBUtil.get_single_db_double_value(rs_q0_N, ""net_avg_uptime"");long space_total = (long) d_space_total;long space_used = (long) d_space_used;long space_free = space_total - space_used;String f_space_total = Utility.l_bytes_to_other_units_formatted(space_total, 3, ""T"");String f_space_used = Utility.l_bytes_to_other_units_formatted(space_used, 3, ""G"");String f_space_free = Utility.l_bytes_to_other_units_formatted(space_free, 3, ""T"");String f_space_free2 = Utility.l_bytes_to_other_units_formatted(space_free, 3, null);logger.info(""d_space_total: "" + d_space_total + ""\n"" + ""d_space_used: "" + d_space_used + ""\n"" + ""space_total: "" + space_total + ""\n"" + ""space_used: "" + space_used + ""\n"" + ""space_free: "" + space_free + ""\n\n"" + ""Double.toString( d_space_total ): "" + Double.toString(d_space_total) + ""\n\n"" + ""f_space_total: "" + f_space_total + ""\n"" + ""f_space_used: "" + f_space_used + ""\n"" + ""f_space_free: "" + f_space_free + ""\n"" + ""f_space_free2: "" + f_space_free2);rprtCnst = new ReportData();logger.info(""\n"");logger.info(""========== Load Report Constants from Calculations ==========="");rprtCnst.addKV(""REPORT_HOSTS_TOTAL_DISKSPACE"", f_space_total);rprtCnst.addKV(""REPORT_HOSTS_TOTAL_DISKSPACE_USED"", f_space_used);rprtCnst.addKV(""REPORT_HOSTS_TOTAL_DISKSPACE_FREE"", f_space_free);rprtCnst.addKV(""REPORT_HOSTS_MEAN_UPTIME"", Utility.ms_to_dd_hh_mm_ss_formatted((long) d_avg_uptime));logger.info(""r=\n"" + rprtCnst.toString());logger.info(""\n"");logger.info(""========== Load Report Constants from ConfigFile ============="");rprtCnst.addKV(""REPORT_FILENAME_SCHEMA_FILENAME"", configFile.getAuditSchemaFile());rprtCnst.addKV(""REPORT_FILENAME_SCHEMA_FILE_XSD_FILENAME"", configFile.getAuditSchemaXsdFile());rprtCnst.addKV(""REPORT_FILENAME_XML_DIFF_FILENAME"", configFile.getAuditReportFile());rprtCnst.addKV(""REPORT_FILENAME_XML_DIFF_FILE_XSD_FILENAME"", configFile.getAuditReportXsdFile());logger.info(""\n"");logger.info(""========== Load Report Constants from Hashboxes =============="");Set auditHBKeySet = hr.getMapKeyset(schema_audit_hashbox, ""schema_audit_hashbox"");String audit_id = hr.singleKeysetEntryToString(auditHBKeySet);logger.info(""audit_id: "" + audit_id);Set networkHBKeySet = hr.getMapKeyset(schema_network_hashbox, ""schema_network_hashbox"");String network_id = hr.singleKeysetEntryToString(networkHBKeySet);logger.info(""network_id: "" + network_id);rprtCnst.addKV(""REPORT_AUDIT_ID"", audit_id);rprtCnst.addKV(""REPORT_AUDIT_REPORT_EMAIL"", hr.extractSingleValueFromHashbox(schema_audit_hashbox, ""schema_audit_hashbox"", audit_id, ""/SSP/audit/auditReportEmail""));rprtCnst.addKV(""REPORT_AUDIT_INTERVAL"", hr.extractSingleValueFromHashbox(schema_audit_hashbox, ""schema_audit_hashbox"", audit_id, ""/SSP/audit/auditReportInterval/@maxDays""));rprtCnst.addKV(""REPORT_SCHEMA_VERSION"", hr.extractSingleValueFromHashbox(schema_audit_hashbox, ""schema_audit_hashbox"", audit_id, ""/SSP/audit/schemaVersion""));rprtCnst.addKV(""REPORT_CLASSIFICATION_GEOGRAPHIC_SUMMARY_SCHEME"", hr.extractSingleValueFromHashbox(schema_audit_hashbox, ""schema_audit_hashbox"", audit_id, ""/SSP/audit/geographicSummaryScheme""));rprtCnst.addKV(""REPORT_CLASSIFICATION_SUBJECT_SUMMARY_SCHEME"", hr.extractSingleValueFromHashbox(schema_audit_hashbox, ""schema_audit_hashbox"", audit_id, ""/SSP/audit/subjectSummaryScheme""));rprtCnst.addKV(""REPORT_CLASSIFICATION_OWNER_INSTITUTION_SUMMARY_SCHEME"", hr.extractSingleValueFromHashbox(schema_audit_hashbox, ""schema_audit_hashbox"", audit_id, ""/SSP/audit/ownerInstSummaryScheme""));rprtCnst.addKV(""REPORT_NETWORK_ID"", network_id);rprtCnst.addKV(""REPORT_NETWORK_ADMIN_EMAIL"", hr.extractSingleValueFromHashbox(schema_network_hashbox, ""schema_network_hashbox"", network_id, ""/SSP/network/networkIdentity/accessBase/@adminEmail""));rprtCnst.addKV(""REPORT_GEOGRAPHIC_CODING"", hr.extractSingleValueFromHashbox(schema_network_hashbox, ""schema_network_hashbox"", network_id, ""/SSP/network/networkIdentity/geographicCoding""));logger.info(""\n"");logger.info(""==========================================================="");logger.info(""========== Process Network Data BEGIN======================"");logger.info(""==========================================================="");Set<String> tableSet0 = reportAuOverviewFacade.findAllTables();String reportAuOverviewTable = ""report_au_overview"";int n_tabs = 0;if (tableSet0 != null && !tableSet0.isEmpty()) {logger.fine(""Table List N="" + tableSet0.size());for (String tableName : tableSet0) {n_tabs++;if (tableName.equalsIgnoreCase(reportAuOverviewTable)) {logger.fine(n_tabs + "" "" + tableName + "" <--"");} else {logger.fine(n_tabs + "" "" + tableName);}}} else {logger.fine(""No tables found in DB."");}if (!tableSet0.contains(reportAuOverviewTable)) {logger.info(""Database does not contain table '"" + reportAuOverviewTable + ""'"");}List<ReportAuOverview> repAuOvTabAllData = null;repAuOvTabAllData = reportAuOverviewFacade.findAll();if (repAuOvTabAllData != null && !(repAuOvTabAllData.isEmpty())) {logger.fine(""\n"" + reportAuOverviewTable + "" table has "" + repAuOvTabAllData.size() + "" rows."");int n_rows = 0;for (ReportAuOverview row : repAuOvTabAllData) {n_rows++;logger.fine(n_rows + "" "" + row.toString());}} else {logger.fine(reportAuOverviewTable + "" is null, empty, or nonexistent."");}logger.fine(""report_au_overview Table xstream Dump:\n"" + xstream.toXML(repAuOvTabAllData));logger.fine(""\n"");logger.fine(""Iterate over repAuOvTabAllData 2"");Iterator it = repAuOvTabAllData.iterator();int n_el = 0;while (it.hasNext()) {++n_el;String el = it.next().toString();logger.fine(n_el + "". "" + el);}Class aClass = edu.harvard.iq.safe.saasystem.entities.ReportAuOverview.class;String reportAuOverviewTableName = reportAuOverviewFacade.getTableName();logger.fine(""\n"");logger.fine(""EntityManager Tests"");logger.fine(""Table: "" + reportAuOverviewTableName);logger.fine(""\n"");logger.fine(""Schema: "" + reportAuOverviewFacade.getSchema());logger.fine(""\n"");Set columnList = reportAuOverviewFacade.getColumnList(reportAuOverviewFacade.getTableName());logger.fine(""Columns (fields) in table '"" + reportAuOverviewTableName + ""' (N="" + columnList.size() + "")"");Set<String> colList = new HashSet();Iterator colNames = columnList.iterator();int n_el2 = 0;while (colNames.hasNext()) {++n_el2;String el = colNames.next().toString();logger.fine(n_el2 + "". "" + el);colList.add(el);}logger.fine(colList.size() + "" entries in Set 'colList' "");logger.info(""========== Query 'au_overview_table'============="");MySQLAuOverviewDAO daoao = new MySQLAuOverviewDAO();CachedRowSet rs_q1_A = daoao.query_q1_A();int[] au_table_rc = DBUtil.get_rs_dims(rs_q1_A);logger.info(""Au Table Query ResultSet has "" + au_table_rc[0] + "" rows and "" + au_table_rc[1] + "" columns."");rprtCnst.addKV(""REPORT_N_AUS_IN_NETWORK"", Integer.toString(au_table_rc[0]));logger.info(""========== Create 'network_au_hashbox' =========="");Map<String, Map> network_au_hashbox = new TreeMap<String, Map>(DBUtil.rs_to_hashbox(rs_q1_A, null, ""au_id""));logger.info(""network_au_hashbox before transformations\n"" + xstream.toXML(network_au_hashbox));Map<String, String> transforms_n_au_hb = new HashMap<String, String>();transforms_n_au_hb.put(""last_s_crawl_end"", ""ms_to_decimal_days_elapsed()"");transforms_n_au_hb.put(""last_s_poll_end"", ""ms_to_decimal_days_elapsed()"");transforms_n_au_hb.put(""crawl_duration"", ""ms_to_decimal_days()"");network_au_hashbox = hr.convert_hashbox_vals(network_au_hashbox, transforms_n_au_hb);Map<String, String> auNVerifiedRegions = reportAuOverviewFacade.getAuNVerifiedRegions();logger.fine(""auNVerifiedRegions\n"" + xstream.toXML(auNVerifiedRegions));network_au_hashbox = hr.addNewInnerHashEntriesToHashbox(network_au_hashbox, auNVerifiedRegions, ""au_n_verified_regions"");logger.info(""network_au_hashbox after Transformations and Addition of 'au_n_verified_regions'"" + xstream.toXML(network_au_hashbox));logger.info(""========== Compare AUs BEGIN =============================="");ArrayList<String> al_aus_in_schema_not_in_network = new ArrayList<String>(comp_keys.keys_not_in_both_hashes(schema_au_hashbox, network_au_hashbox, ""schema_aus"", ""network_aus""));Map<String, String> h_aus_in_schema_not_in_network = hr.get_names_from_id_list(schema_au_hashbox, al_aus_in_schema_not_in_network, ""/SSP/archivalUnits/au/auIdentity/name"");rprtCnst.addKV(""REPORT_N_AUS_IN_SCHEMA_NOT_IN_NETWORK"", Integer.toString(al_aus_in_schema_not_in_network.size()));rprtCnst.set_h_aus_in_schema_not_in_network(h_aus_in_schema_not_in_network);MYSQLReportAusInSchemaNotInNetworkDAO daoraisnin = new MYSQLReportAusInSchemaNotInNetworkDAO();daoraisnin.create();daoraisnin.update(h_aus_in_schema_not_in_network);ArrayList<String> al_aus_in_network_not_in_schema = new ArrayList<String>(comp_keys.keys_not_in_both_hashes(network_au_hashbox, schema_au_hashbox, ""network_aus"", ""schema_aus""));Utility.print_arraylist(al_aus_in_network_not_in_schema, ""aus in_network_not_in_schema"");Map<String, String> h_aus_in_network_not_in_schema = hr.get_names_from_id_list(network_au_hashbox, al_aus_in_network_not_in_schema, ""au_name"");rprtCnst.addKV(""REPORT_N_AUS_IN_NETWORK_NOT_IN_SCHEMA"", Integer.toString(al_aus_in_network_not_in_schema.size()));rprtCnst.set_h_aus_in_network_not_in_schema(h_aus_in_network_not_in_schema);MYSQLReportAusInNetworkNotInSchemaDAO daorainnis = new MYSQLReportAusInNetworkNotInSchemaDAO();daorainnis.create();daorainnis.update(h_aus_in_network_not_in_schema);Comparison comp_au = new Comparison(schema_au_hashbox, ""Schema_AU"", network_au_hashbox, ""Network_AU"", XpathUtility.getXpathToDbColumnMap(), XpathUtility.getXpathToCompOpMap());comp_au.init();logger.info(""Attempting to create DB table 'lockss_audit.audit_results_au'"");MYSQLAuditResultsAuDAO daoara = new MYSQLAuditResultsAuDAO();daoara.create();String results_table_au = ""audit_results_au"";String sql_vals_au_schema = comp_au.iterate_hbs_au(daoara, results_table_au, ""au"", h_aus_in_network_not_in_schema);CachedRowSet rs_RA2 = daoara.query_q1_RA();String n_aus_not_verified = DBUtil.get_single_count_from_rs(rs_RA2);rprtCnst.addKV(""REPORT_N_AUS_NOT_VERIFIED"", DBUtil.get_single_count_from_rs(rs_RA2));logger.info(""\nInstantiating Result Class from main()"");DiffResult result = new DiffResult();Map au_comp_host = result.get_result_hash(""au"");logger.info(""========== Compare AUs END ================================"");logger.info(""========== Process Network Host Table ====================="");logger.info(""========== Query 'lockss_box_table' and ========="");logger.info(""================ 'repository_space_table' =======\n"");MySQLLockssBoxRepositorySpaceDAO daolbrs = new MySQLLockssBoxRepositorySpaceDAO();CachedRowSet rs_q1_H = daolbrs.query_q1_H();int[] host_table_rc = DBUtil.get_rs_dims(rs_q1_H);logger.info(""Host Table Query ResultSet has "" + host_table_rc[0] + "" rows and "" + host_table_rc[1] + "" columns."");rprtCnst.addKV(""REPORT_N_HOSTS_IN_NETWORK"", Integer.toString(host_table_rc[0]));Long numberOfMemberHosts;if (StringUtils.isNotBlank(saasConfigurationRegistry.getSaasConfigProperties().getProperty(""saas.ip.fromlockssxml""))) {numberOfMemberHosts = Long.parseLong(Integer.toString(saasConfigurationRegistry.getSaasConfigProperties().getProperty(""saas.ip.fromlockssxml"").split("","").length));} else {if (StringUtils.isNotBlank(saasConfigurationRegistry.getSaasAuditConfigProperties().getProperty(""saas.targetIp""))) {numberOfMemberHosts = Long.parseLong(Integer.toString(saasConfigurationRegistry.getSaasAuditConfigProperties().getProperty(""saas.targetIp"").split("","").length));} else {numberOfMemberHosts = 0L;}}rprtCnst.addKV(""REPORT_N_HOSTS_IN_NETWORK_2"", Long.toString(numberOfMemberHosts));Long numberOfReachableHosts;numberOfReachableHosts = lockssBoxFacade.getTotalHosts();rprtCnst.addKV(""REPORT_N_HOSTS_IN_NETWORK_REACHABLE"", Long.toString(numberOfReachableHosts));Map<String, Map> network_host_hashbox = new TreeMap<String, Map>(DBUtil.rs_to_hashbox(rs_q1_H, null, ""ip_address""));logger.info(""network_host_hashbox before transformations\n"" + xstream.toXML(network_host_hashbox));Map<String, String> transforms_n_host_hb = new HashMap<String, String>();transforms_n_host_hb.put(""repo_size"", ""SciToStr2()"");transforms_n_host_hb.put(""used_space"", ""SciToStr2()"");network_host_hashbox = hr.convert_hashbox_vals(network_host_hashbox, transforms_n_host_hb);logger.info(""network_host_hashbox(after transformations)\n"" + xstream.toXML(network_host_hashbox));Map<String, String> network_host_hb_sel_used_space = hr.join_hash_pk_to_inner_hash_value(network_host_hashbox, ""used_space"");Map<String, String> schema_host_hb_sel_size = hr.join_hash_pk_to_inner_hash_value(schema_host_hashbox, ""/SSP/hosts/host/hostCapabilities/storageAvailable/@max_size"");logger.info(""\n========== Process Network  END ==========================="");logger.info(""========== Compare Key Sets (IDs)=========================="");Set<String> sa_hb_keys = hr.gen_hash_keyset(schema_au_hashbox, ""schema_au_hashbox"");hr.set_hash_keyset(sa_hb_keys, ""s_au_hb"");Set<String> sh_hb_keys = hr.gen_hash_keyset(schema_host_hashbox, ""schema_host_hashbox"");hr.set_hash_keyset(sh_hb_keys, ""s_h_hb"");Set<String> na_hb_keys = hr.gen_hash_keyset(network_au_hashbox, ""network_au_hashbox"");hr.set_hash_keyset(na_hb_keys, ""n_au_hb"");Set<String> nh_hb_keys = hr.gen_hash_keyset(network_host_hashbox, ""network_host_hashbox"");hr.set_hash_keyset(nh_hb_keys, ""n_h_hb"");Set<String> aus_in_schema_not_in_network = new TreeSet<String>(hr.get_hash_keyset(""s_au_hb""));aus_in_schema_not_in_network.removeAll(hr.get_hash_keyset(""n_au_hb""));Set<String> aus_in_network_not_in_schema = new TreeSet<String>(hr.get_hash_keyset(""n_au_hb""));aus_in_network_not_in_schema.removeAll(hr.get_hash_keyset(""s_au_hb""));Set<String> symmetricDiff = new HashSet<String>(hr.get_hash_keyset(""s_au_hb""));symmetricDiff.addAll(hr.get_hash_keyset(""n_au_hb""));Set<String> tmp = new HashSet<String>(hr.get_hash_keyset(""s_au_hb""));tmp.retainAll(hr.get_hash_keyset(""n_au_hb""));symmetricDiff.removeAll(tmp);Set<String> hosts_in_network_not_in_schema = new TreeSet<String>(hr.get_hash_keyset(""n_h_hb""));hosts_in_network_not_in_schema.removeAll(hr.get_hash_keyset(""s_h_hb""));Set<String> hosts_in_schema_not_in_network = new TreeSet<String>(hr.get_hash_keyset(""s_h_hb""));hosts_in_schema_not_in_network.removeAll(hr.get_hash_keyset(""n_h_hb""));ArrayList<String> al_hosts_in_schema_not_in_network = new ArrayList<String>(comp_keys.keys_not_in_both_hashes(schema_host_hashbox, network_host_hashbox, ""schema_hosts"", ""network_hosts""));Map<String, String> h_hosts_in_schema_not_in_network = hr.get_names_from_id_list(schema_host_hashbox, al_hosts_in_schema_not_in_network, ""/SSP/hosts/host/hostIdentity/name"");rprtCnst.addKV(""REPORT_N_HOSTS_IN_SCHEMA_NOT_IN_NETWORK"", Integer.toString(al_hosts_in_schema_not_in_network.size()));rprtCnst.set_h_hosts_in_schema_not_in_network(h_hosts_in_schema_not_in_network);MYSQLReportHostsInSchemaNotInNetworkDAO daorhisnin = new MYSQLReportHostsInSchemaNotInNetworkDAO();daorhisnin.create();daorhisnin.update(h_hosts_in_schema_not_in_network);ArrayList<String> al_hosts_in_network_not_in_schema = new ArrayList<String>(comp_keys.keys_not_in_both_hashes(network_host_hashbox, schema_host_hashbox, ""network_hosts"", ""schema_hosts""));Map<String, String> h_hosts_in_network_not_in_schema = hr.get_names_from_id_list(network_host_hashbox, al_hosts_in_network_not_in_schema, ""host_name"");rprtCnst.addKV(""REPORT_N_HOSTS_IN_NETWORK_NOT_IN_SCHEMA"", Integer.toString(al_hosts_in_network_not_in_schema.size()));rprtCnst.set_h_hosts_in_network_not_in_schema(h_hosts_in_network_not_in_schema);MYSQLReportHostsInNetworkNotInSchemaDAO rhinnis = new MYSQLReportHostsInNetworkNotInSchemaDAO();rhinnis.create();rhinnis.update(h_hosts_in_network_not_in_schema);logger.info(""========== Compare Hosts BEGIN ============================"");Comparison comp_host = new Comparison(schema_host_hashbox, ""Schema_Host"", network_host_hashbox, ""Network_Host"", XpathUtility.getXpathToDbColumnMap(), XpathUtility.getXpathToCompOpMap());comp_host.init();MYSQLAuditResultsHostDAO daoarh = new MYSQLAuditResultsHostDAO();daoarh.create();String sql_vals_host_schema = comp_host.iterate_hbs_host(daoarh, ""audit_results_host"", ""host"", h_hosts_in_network_not_in_schema);CachedRowSet rs_RH = daoarh.query_q1_RH();String n_hosts_not_meeting_storage = DBUtil.get_single_count_from_rs(rs_RH);rprtCnst.addKV(""REPORT_N_HOSTS_NOT_MEETING_STORAGE"", n_hosts_not_meeting_storage);logger.info(""Calling result.get_result_hash( \""host\"" ) from main()"");Map host_comp_hash = result.get_result_hash(""host"");Map au_comp_hash2 = result.get_result_hash(""au"");logger.info(""========== Compare Hosts END =============================="");Map<String, String> map_host_ip_to_host_name = hr.make_id_hash(schema_host_hashbox, ""/SSP/hosts/host/hostIdentity/name"");rprtCnst.addKV(""REPORT_N_HOSTS_IN_SCHEMA"", Integer.toString(map_host_ip_to_host_name.size()));String[] host_ip_list = hr.hash_keys_to_array(schema_host_hashbox);String[][] col2 = Utility.add_column_to_array1(map_host_ip_to_host_name.values().toArray(new String[0]), host_ip_list, null);Map<String, String> map_au_key_string_to_au_name = hr.make_id_hash(schema_au_hashbox, ""/SSP/archivalUnits/au/auIdentity/name"");logger.info(""Length map_au_key_string_to_au_name.values().toArray(new String[0]: "" + map_au_key_string_to_au_name.values().toArray(new String[0]).length);rprtCnst.addKV(""REPORT_N_AUS_IN_SCHEMA"", Integer.toString(map_au_key_string_to_au_name.size()));MySQLLockssBoxArchivalUnitStatusDAO daolbaus = new MySQLLockssBoxArchivalUnitStatusDAO();int[] rc = daolbaus.getResultSetDimensions();int n_rs_rows = rc[0];int n_rs_cols = rc[1];logger.info(""\n"" + n_rs_rows + "" rows (Host-AU's). "" + n_rs_cols + "" columns."");rprtCnst.addKV(""REPORT_N_HOST_AUS_IN_NETWORK"", Integer.toString(n_rs_rows));logger.info(""================== Query 'audit_results_host' Table =========="");CachedRowSet NNonCompliantAUsCRS = daoara.getNNonCompliantAUs();String NNonCompliantAUs = DBUtil.get_single_count_from_rs(NNonCompliantAUsCRS);rprtCnst.addKV(""REPORT_N_AUS_NONCOMPLIANT"", NNonCompliantAUs);logger.info(""================== Query 'audit_results_host' Table END ======"");logger.info(""========== Output Report =================================="");MYSQLReportConstantsDAO daorc = new MYSQLReportConstantsDAO();daorc.create();daorc.update(rprtCnst.getBox());MYSQLReportHostSummaryDAO daorhs = new MYSQLReportHostSummaryDAO();daorhs.create();CachedRowSet crsarh = daoarh.queryAll();daorhs.update(crsarh);daorhs.update_new_column(""space_offered"", schema_host_hb_sel_size);daorhs.update_new_column(""space_used"", network_host_hb_sel_used_space);Map<String, String> computation_cols_in_net_host_summary = new HashMap<String, String>();computation_cols_in_net_host_summary.put(""space_total"", ""1"");computation_cols_in_net_host_summary.put(""space_used"", ""2"");daorhs.update_compute_column(""space_free"", computation_cols_in_net_host_summary);logger.info(""========== Audit Report Writer ======================================"");AuditReportXMLWriter arxw = new AuditReportXMLWriter(rprtCnst, configFile.getAuditReportFile());Set<String> tableSet = tracAuditChecklistDataFacade.findAllTables();String tracResultTable = ""trac_audit_checklist_data"";List<TracAuditChecklistData> evidenceList = null;if (tableSet.contains(tracResultTable)) {evidenceList = tracAuditChecklistDataFacade.findAll();logger.info(""TRAC evidence list is size:"" + evidenceList.size());} else {logger.info(""Database does not contain table 'trac_audit_checklist_data'"");}Map<String, String> tracDataMap = new LinkedHashMap<String, String>();for (TracAuditChecklistData tracdata : evidenceList) {tracDataMap.put(tracdata.getAspectId(), tracdata.getEvidence());}String writeTimestamp = arxw.write(daoarh, daoara, daorc, tracDataMap);File target = new File(configFile.getAuditReportFileDir() + File.separator + configFile.getAuditSchemaFileName() + ""."" + writeTimestamp);FileChannel sourceChannel = null;FileChannel targetChannel = null;try {sourceChannel = new FileInputStream(auditSchemaFile).getChannel();targetChannel = new FileOutputStream(target).getChannel();targetChannel.transferFrom(sourceChannel, 0, sourceChannel.size());} catch (IOException e) {logger.log(Level.SEVERE, ""IO exception occurred while copying file"", e);} finally {try {if (sourceChannel != null) {sourceChannel.close();}if (targetChannel != null) {targetChannel.close();}} catch (IOException e) {logger.info(""closing channels failed"");}}logger.info(""\n========== EXIT drive() ==========================================="");return writeTimestamp;}private void getRandomGUID(boolean secure) {MessageDigest md5;StringBuilder sbValueBeforeHash = new StringBuilder();try {md5 = MessageDigest.getInstance(""SHA-1"");} catch (NoSuchAlgorithmException e) {throw new ApplicationIllegalArgumentException(e);}long time = System.nanoTime();long rand = 0;if (secure) {rand = MySecureRand.nextLong();} else {rand = MyRand.nextLong();}sbValueBeforeHash.append(SId);sbValueBeforeHash.append("":"");sbValueBeforeHash.append(Long.toString(time));sbValueBeforeHash.append("":"");sbValueBeforeHash.append(Long.toString(rand));valueBeforeHash = sbValueBeforeHash.toString();md5.update(valueBeforeHash.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) {sb.append('0');}sb.append(Integer.toHexString(b));}valueAfterHash = sb.toString();}private Vector _sort(Pair[] ps, String id, int num) {Vector ret = new Vector();boolean swapped = true;int j = 0;Pair tmp;while (swapped) {swapped = false;j++;for (int i = 0; i < ps.length - j; i++) {if (ps[i].c > ps[i + 1].c) {tmp = ps[i];ps[i] = ps[i + 1];ps[i + 1] = tmp;swapped = true;}}}int m = Math.min(num, ps.length);for (int i = m - 1; i >= 0; i--) {if (id == null) ret.addElement(ps[i].n); else if (ps[i].n.startsWith(id) && !ps[i].n.equals(id)) ret.addElement(ps[i].n);}return ret;}private void readVersion() {URL url = ClassLoader.getSystemResource(""version"");if (url == null) {return;}BufferedReader reader = null;String line = null;try {reader = new BufferedReader(new InputStreamReader(url.openStream()));while ((line = reader.readLine()) != null) {if (line.startsWith(""Version="")) {version = (line.split(""=""))[1];}if (line.startsWith(""Revision="")) {revision = (line.split(""=""))[1];}if (line.startsWith(""Date="")) {String sSec = (line.split(""=""))[1];Long lSec = Long.valueOf(sSec);compileDate = new Date(lSec);}}} catch (IOException e) {e.printStackTrace();} finally {if (reader != null) {try {reader.close();} catch (IOException e) {e.printStackTrace();}}}return;}public void testGetResource_FileOutsideOfClasspath() throws Exception {File temp = File.createTempFile(""dozerfiletest"", "".txt"");temp.deleteOnExit();String resourceName = ""file:"" + temp.getAbsolutePath();URL url = loader.getResource(resourceName);assertNotNull(""URL should not be null"", url);InputStream is = url.openStream();assertNotNull(""input stream should not be null"", is);}"	5
"public static void loadConfig(DeviceEntry defaultDevice, EmulatorContext emulatorContext) {Config.defaultDevice = defaultDevice;Config.emulatorContext = emulatorContext;File configFile = new File(getConfigPath(), ""config2.xml"");try {if (configFile.exists()) {loadConfigFile(""config2.xml"");} else {configFile = new File(getConfigPath(), ""config.xml"");if (configFile.exists()) {loadConfigFile(""config.xml"");for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) {DeviceEntry entry = (DeviceEntry) e.nextElement();if (!entry.canRemove()) {continue;}removeDeviceEntry(entry);File src = new File(getConfigPath(), entry.getFileName());File dst = File.createTempFile(""dev"", "".jar"", getConfigPath());IOUtils.copyFile(src, dst);entry.setFileName(dst.getName());addDeviceEntry(entry);}} else {createDefaultConfigXml();}saveConfig();}} catch (IOException ex) {Logger.error(ex);createDefaultConfigXml();} finally {if (configXml == null) {createDefaultConfigXml();}}urlsMRU.read(configXml.getChildOrNew(""files"").getChildOrNew(""recent""));initSystemProperties();}public ViewInitListener() throws IOException {URL url = this.getClass().getResource(VIEW_INIT_CONFIG);log.debug(""Loading configuration from: "" + url);config = new Properties();InputStream in = url.openStream();config.load(in);in.close();}private static String scramble(String text) {try {MessageDigest md = MessageDigest.getInstance(""SHA-1"");md.update(text.getBytes(""UTF-8""));StringBuffer sb = new StringBuffer();for (byte b : md.digest()) sb.append(Integer.toString(b & 0xFF, 16));return sb.toString();} catch (UnsupportedEncodingException e) {return null;} catch (NoSuchAlgorithmException e) {return null;}}private void forBundle(BundleManipulator manip) {ByteArrayOutputStream bout = null;try {bout = new ByteArrayOutputStream();ZipOutputStream zout = new ZipOutputStream(bout);Bundle bundle = getBundle();Enumeration<URL> files = bundle.findEntries(""/"", ""*.vm"", false);if (files != null) {while (files.hasMoreElements()) {URL url = files.nextElement();String name = url.getFile();if (name.startsWith(""/"")) {name = name.substring(1);}if (manip.includeEntry(name)) {zout.putNextEntry(new ZipEntry(name));IOUtils.copy(url.openStream(), zout);}}}manip.finish(bundle, zout);Manifest mf = new Manifest(bundle.getEntry(""META-INF/MANIFEST.MF"").openStream());zout.putNextEntry(new ZipEntry(""META-INF/MANIFEST.MF""));mf.write(zout);zout.close();File tmpFile = File.createTempFile(TEMPLATES_SYMBOLIC_NAME, "".jar"");FileUtils.writeByteArrayToFile(tmpFile, bout.toByteArray());if (pluginAccessor.getPlugin(TEMPLATES_SYMBOLIC_NAME) != null) {pluginController.uninstall(pluginAccessor.getPlugin(TEMPLATES_SYMBOLIC_NAME));} else if (pluginAccessor.getPlugin(TEMPLATES_PLUGIN_KEY) != null) {pluginController.uninstall(pluginAccessor.getPlugin(TEMPLATES_PLUGIN_KEY));}pluginController.installPlugin(new JarPluginArtifact(tmpFile));ServiceReference ref = bundleContext.getServiceReference(PackageAdmin.class.getName());((PackageAdmin) bundleContext.getService(ref)).refreshPackages(null);tmpFile.delete();} catch (IOException e) {e.printStackTrace();} finally {IOUtils.closeQuietly(bout);}}public void add(final String name, final String content) {forBundle(new BundleManipulator() {public boolean includeEntry(String entryName) {return !name.equals(entryName);}public void finish(Bundle bundle, ZipOutputStream zout) throws IOException {zout.putNextEntry(new ZipEntry(name));IOUtils.copy(new StringReader(content), zout, ""UTF-8"");}});}synchronized List<String> getDatasetsList(String surl) {if (datasetsList == null) {datasetsList = new HashMap<String, List<String>>();}List<String> result = datasetsList.get(surl);if (result == null) {BufferedReader reader = null;try {URL url = new URL(surl + ""?server=list"");reader = new BufferedReader(new InputStreamReader(url.openStream()));String s = reader.readLine();ArrayList<String> list = new ArrayList<String>();while (s != null) {list.add(s);s = reader.readLine();}datasetsList.put(surl, list);} catch (IOException ex) {Logger.getLogger(Das2ServerDataSourceFactory.class.getName()).log(Level.SEVERE, null, ex);throw new RuntimeException(ex);} finally {try {reader.close();} catch (IOException ex) {Logger.getLogger(Das2ServerDataSourceFactory.class.getName()).log(Level.SEVERE, null, ex);}}}return datasetsList.get(surl);}public static void main(String[] args) throws Exception {if (args.length != 2) {PrintUtil.prt(""arguments: sourcefile, destfile"");System.exit(1);}FileChannel in = new FileInputStream(args[0]).getChannel(), out = new FileOutputStream(args[1]).getChannel();in.transferTo(0, in.size(), out);}public static void main(String[] args) {Usage u = new ccngetmeta();for (int i = 0; i < args.length - 3; i++) {if (!CommonArguments.parseArguments(args, i, u)) {u.usage();System.exit(1);}if (CommonParameters.startArg > i + 1) i = CommonParameters.startArg - 1;}if (args.length != CommonParameters.startArg + 3) {u.usage();System.exit(1);}try {int readsize = 1024;CCNHandle handle = CCNHandle.open();String metaArg = args[CommonParameters.startArg + 1];if (!metaArg.startsWith(""/"")) metaArg = ""/"" + metaArg;ContentName fileName = MetadataProfile.getLatestVersion(ContentName.fromURI(args[CommonParameters.startArg]), ContentName.fromNative(metaArg), CommonParameters.timeout, handle);if (fileName == null) {System.out.println(""File "" + args[CommonParameters.startArg] + "" does not exist"");System.exit(1);}if (VersioningProfile.hasTerminalVersion(fileName)) {} else {System.out.println(""File "" + fileName + "" does not exist...  exiting"");System.exit(1);}File theFile = new File(args[CommonParameters.startArg + 2]);if (theFile.exists()) {System.out.println(""Overwriting file: "" + args[CommonParameters.startArg + 1]);}FileOutputStream output = new FileOutputStream(theFile);long starttime = System.currentTimeMillis();CCNInputStream input;if (CommonParameters.unversioned) input = new CCNInputStream(fileName, handle); else input = new CCNFileInputStream(fileName, handle);if (CommonParameters.timeout != null) {input.setTimeout(CommonParameters.timeout);}byte[] buffer = new byte[readsize];int readcount = 0;long readtotal = 0;while ((readcount = input.read(buffer)) != -1) {readtotal += readcount;output.write(buffer, 0, readcount);output.flush();}if (CommonParameters.verbose) System.out.println(""ccngetfile took: "" + (System.currentTimeMillis() - starttime) + ""ms"");System.out.println(""Retrieved content "" + args[CommonParameters.startArg + 1] + "" got "" + readtotal + "" bytes."");System.exit(0);} catch (ConfigurationException e) {System.out.println(""Configuration exception in ccngetfile: "" + e.getMessage());e.printStackTrace();} catch (MalformedContentNameStringException e) {System.out.println(""Malformed name: "" + args[CommonParameters.startArg] + "" "" + e.getMessage());e.printStackTrace();} catch (IOException e) {System.out.println(""Cannot write file or read content. "" + e.getMessage());e.printStackTrace();}System.exit(1);}@Overridepublic String transformSingleFile(X3DEditorSupport.X3dEditor xed) {Node[] node = xed.getActivatedNodes();X3DDataObject dob = (X3DDataObject) xed.getX3dEditorSupport().getDataObject();FileObject mySrc = dob.getPrimaryFile();File mySrcF = FileUtil.toFile(mySrc);File myOutF = new File(mySrcF.getParentFile(), mySrc.getName() + "".x3dv.gz"");TransformListener co = TransformListener.getInstance();co.message(NbBundle.getMessage(getClass(), ""Gzip_compression_starting""));co.message(NbBundle.getMessage(getClass(), ""Saving_as_"") + myOutF.getAbsolutePath());co.moveToFront();co.setNode(node[0]);try {String x3dvFile = ExportClassicVRMLAction.instance.transformSingleFile(xed);FileInputStream fis = new FileInputStream(new File(x3dvFile));GZIPOutputStream gzos = new GZIPOutputStream(new FileOutputStream(myOutF));byte[] buf = new byte[4096];int ret;while ((ret = fis.read(buf)) > 0) gzos.write(buf, 0, ret);gzos.close();} catch (Exception ex) {co.message(NbBundle.getMessage(getClass(), ""Exception:__"") + ex.getLocalizedMessage());return null;}co.message(NbBundle.getMessage(getClass(), ""Gzip_compression_complete""));return myOutF.getAbsolutePath();}private Bitmap fetchImage(String urlstr) throws Exception {URL url;url = new URL(urlstr);HttpURLConnection c = (HttpURLConnection) url.openConnection();c.setDoInput(true);c.setRequestProperty(""User-Agent"", ""Agent"");c.connect();InputStream is = c.getInputStream();Bitmap img;img = BitmapFactory.decodeStream(is);return img;}"	5
"private File copyFile(File currFile) throws IOException {String relativePath = currFile.getPath().substring(_distDir.length() + 1);File targetFile = new File(_installDir, relativePath);if (targetFile.exists()) {log(targetFile.getPath() + "" already exists, skipping libcopy"", Project.MSG_INFO);return targetFile;} else {if (!targetFile.getParentFile().exists()) {if (!targetFile.getParentFile().mkdirs()) {log(""Unable to create target dir tree for "" + targetFile.getPath(), Project.MSG_ERR);throw new IOException();}}}FileInputStream fis = null;FileOutputStream fos = null;try {fis = new FileInputStream(currFile);} catch (FileNotFoundException e) {log(""Library from plugin manifest appears to have been deleted: "" + currFile.getPath(), Project.MSG_ERR);throw new IOException();}try {fos = new FileOutputStream(targetFile);} catch (FileNotFoundException e) {log(""Unable to create target file to write to: "" + targetFile.getPath(), Project.MSG_ERR);throw new IOException();}BufferedInputStream bis = new BufferedInputStream(fis);BufferedOutputStream bos = new BufferedOutputStream(fos);int read = 0;byte[] buff = new byte[65536];boolean success = true;while (read != -1 && success) {try {read = bis.read(buff, 0, 65536);} catch (IOException e) {log(""Read error whilst reading from: "" + currFile.getPath(), Project.MSG_ERR);success = false;}if (read != -1 && success) {try {bos.write(buff, 0, read);} catch (IOException e) {log(""Write error whilst writing to: "" + targetFile.getPath(), Project.MSG_ERR);success = false;}}}try {bis.close();} catch (IOException e) {}try {bos.close();} catch (IOException e) {}try {fis.close();} catch (IOException e) {}try {fos.close();} catch (IOException e) {}if (!success) {throw new IOException();}return targetFile;}public static void copier(final File pFichierSource, final File pFichierDest) {FileChannel vIn = null;FileChannel vOut = null;try {vIn = new FileInputStream(pFichierSource).getChannel();vOut = new FileOutputStream(pFichierDest).getChannel();vIn.transferTo(0, vIn.size(), vOut);} catch (Exception e) {e.printStackTrace();} finally {if (vIn != null) {try {vIn.close();} catch (IOException e) {}}if (vOut != null) {try {vOut.close();} catch (IOException e) {}}}}public void initialize(IProgressMonitor monitor) throws JETException {IProgressMonitor progressMonitor = monitor;progressMonitor.beginTask("""", 10);progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_GeneratingJETEmitterFor_message"", new Object[] { getTemplateURI() }));final IWorkspace workspace = ResourcesPlugin.getWorkspace();IJavaModel javaModel = JavaCore.create(ResourcesPlugin.getWorkspace().getRoot());try {final JETCompiler jetCompiler = getTemplateURIPath() == null ? new MyBaseJETCompiler(getTemplateURI(), getEncoding(), getClassLoader()) : new MyBaseJETCompiler(getTemplateURIPath(), getTemplateURI(), getEncoding(), getClassLoader());progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETParsing_message"", new Object[] { jetCompiler.getResolvedTemplateURI() }));jetCompiler.parse();progressMonitor.worked(1);String packageName = jetCompiler.getSkeleton().getPackageName();if (getTemplateURIPath() != null) {URI templateURI = URI.createURI(getTemplateURIPath()[0]);URLClassLoader theClassLoader = null;if (templateURI.isPlatformResource()) {IProject project = workspace.getRoot().getProject(templateURI.segment(1));if (JETNature.getRuntime(project) != null) {List<URL> urls = new ArrayList<URL>();IJavaProject javaProject = JavaCore.create(project);urls.add(new File(project.getLocation() + ""/"" + javaProject.getOutputLocation().removeFirstSegments(1) + ""/"").toURI().toURL());for (IClasspathEntry classpathEntry : javaProject.getResolvedClasspath(true)) {if (classpathEntry.getEntryKind() == IClasspathEntry.CPE_PROJECT) {IPath projectPath = classpathEntry.getPath();IProject otherProject = workspace.getRoot().getProject(projectPath.segment(0));IJavaProject otherJavaProject = JavaCore.create(otherProject);urls.add(new File(otherProject.getLocation() + ""/"" + otherJavaProject.getOutputLocation().removeFirstSegments(1) + ""/"").toURI().toURL());}}theClassLoader = AccessController.doPrivileged(new GetURLClassLoaderSuperAction(urls));}} else if (templateURI.isPlatformPlugin()) {final Bundle bundle = Platform.getBundle(templateURI.segment(1));if (bundle != null) {theClassLoader = AccessController.doPrivileged(new GetURLClassLoaderBundleAction(bundle));}}if (theClassLoader != null) {String className = (packageName.length() == 0 ? """" : packageName + ""."") + jetCompiler.getSkeleton().getClassName();if (className.endsWith(""_"")) {className = className.substring(0, className.length() - 1);}try {Class<?> theClass = theClassLoader.loadClass(className);Class<?> theOtherClass = null;try {theOtherClass = getClassLoader().loadClass(className);} catch (ClassNotFoundException exception) {}if (theClass != theOtherClass) {String methodName = jetCompiler.getSkeleton().getMethodName();Method[] methods = theClass.getDeclaredMethods();for (int i = 0; i < methods.length; ++i) {if (methods[i].getName().equals(methodName)) {jetEmitter.setMethod(methods[i]);break;}}return;}} catch (ClassNotFoundException exception) {}}}ByteArrayOutputStream outputStream = new ByteArrayOutputStream();jetCompiler.generate(outputStream);final InputStream contents = new ByteArrayInputStream(outputStream.toByteArray());if (!javaModel.isOpen()) {javaModel.open(new SubProgressMonitor(progressMonitor, 1));} else {progressMonitor.worked(1);}final IProject project = workspace.getRoot().getProject(jetEmitter.getProjectName());progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETPreparingProject_message"", new Object[] { project.getName() }));IJavaProject javaProject;if (!project.exists()) {progressMonitor.subTask(""JET creating project "" + project.getName());project.create(new SubProgressMonitor(progressMonitor, 1));progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETCreatingProject_message"", new Object[] { project.getName() }));IProjectDescription description = workspace.newProjectDescription(project.getName());description.setNatureIds(new String[] { JavaCore.NATURE_ID });description.setLocation(null);project.open(new SubProgressMonitor(progressMonitor, 1));project.setDescription(description, new SubProgressMonitor(progressMonitor, 1));} else {project.open(new SubProgressMonitor(progressMonitor, 5));IProjectDescription description = project.getDescription();description.setNatureIds(new String[] { JavaCore.NATURE_ID });project.setDescription(description, new SubProgressMonitor(progressMonitor, 1));}javaProject = JavaCore.create(project);List<IClasspathEntry> classpath = new UniqueEList<IClasspathEntry>(Arrays.asList(javaProject.getRawClasspath()));for (int i = 0, len = classpath.size(); i < len; i++) {IClasspathEntry entry = classpath.get(i);if (entry.getEntryKind() == IClasspathEntry.CPE_SOURCE && (""/"" + project.getName()).equals(entry.getPath().toString())) {classpath.remove(i);}}progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETInitializingProject_message"", new Object[] { project.getName() }));IClasspathEntry classpathEntry = JavaCore.newSourceEntry(new Path(""/"" + project.getName() + ""/src""));IClasspathEntry jreClasspathEntry = JavaCore.newContainerEntry(new Path(""org.eclipse.jdt.launching.JRE_CONTAINER""));classpath.add(classpathEntry);classpath.add(jreClasspathEntry);classpath.addAll(getClassPathEntries());IFolder sourceFolder = project.getFolder(new Path(""src""));if (!sourceFolder.exists()) {sourceFolder.create(false, true, new SubProgressMonitor(progressMonitor, 1));}IFolder runtimeFolder = project.getFolder(new Path(""bin""));if (!runtimeFolder.exists()) {runtimeFolder.create(false, true, new SubProgressMonitor(progressMonitor, 1));}javaProject.setRawClasspath(classpath.toArray(new IClasspathEntry[classpath.size()]), new SubProgressMonitor(progressMonitor, 1));javaProject.setOutputLocation(new Path(""/"" + project.getName() + ""/bin""), new SubProgressMonitor(progressMonitor, 1));javaProject.close();progressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETOpeningJavaProject_message"", new Object[] { project.getName() }));javaProject.open(new SubProgressMonitor(progressMonitor, 1));IPackageFragmentRoot[] packageFragmentRoots = javaProject.getPackageFragmentRoots();IPackageFragmentRoot sourcePackageFragmentRoot = null;for (int j = 0; j < packageFragmentRoots.length; ++j) {IPackageFragmentRoot packageFragmentRoot = packageFragmentRoots[j];if (packageFragmentRoot.getKind() == IPackageFragmentRoot.K_SOURCE) {sourcePackageFragmentRoot = packageFragmentRoot;break;}}StringTokenizer stringTokenizer = new StringTokenizer(packageName, ""."");IProgressMonitor subProgressMonitor = new SubProgressMonitor(progressMonitor, 1);subProgressMonitor.beginTask("""", stringTokenizer.countTokens() + 4);subProgressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_CreateTargetFile_message""));IContainer sourceContainer = sourcePackageFragmentRoot == null ? project : (IContainer) sourcePackageFragmentRoot.getCorrespondingResource();while (stringTokenizer.hasMoreElements()) {String folderName = stringTokenizer.nextToken();sourceContainer = sourceContainer.getFolder(new Path(folderName));if (!sourceContainer.exists()) {((IFolder) sourceContainer).create(false, true, new SubProgressMonitor(subProgressMonitor, 1));}}IFile targetFile = sourceContainer.getFile(new Path(jetCompiler.getSkeleton().getClassName() + "".java""));if (!targetFile.exists()) {subProgressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETCreating_message"", new Object[] { targetFile.getFullPath() }));targetFile.create(contents, true, new SubProgressMonitor(subProgressMonitor, 1));} else {subProgressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETUpdating_message"", new Object[] { targetFile.getFullPath() }));targetFile.setContents(contents, true, true, new SubProgressMonitor(subProgressMonitor, 1));}subProgressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETBuilding_message"", new Object[] { project.getName() }));project.build(IncrementalProjectBuilder.INCREMENTAL_BUILD, new SubProgressMonitor(subProgressMonitor, 1));boolean errors = hasErrors(subProgressMonitor, targetFile);if (!errors) {subProgressMonitor.subTask(CodeGenPlugin.getPlugin().getString(""_UI_JETLoadingClass_message"", new Object[] { jetCompiler.getSkeleton().getClassName() + "".class"" }));List<URL> urls = new ArrayList<URL>();urls.add(new File(project.getLocation() + ""/"" + javaProject.getOutputLocation().removeFirstSegments(1) + ""/"").toURI().toURL());final Set<Bundle> bundles = new HashSet<Bundle>();LOOP: for (IClasspathEntry jetEmitterClasspathEntry : jetEmitter.getClasspathEntries()) {IClasspathAttribute[] classpathAttributes = jetEmitterClasspathEntry.getExtraAttributes();if (classpathAttributes != null) {for (IClasspathAttribute classpathAttribute : classpathAttributes) {if (classpathAttribute.getName().equals(CodeGenUtil.EclipseUtil.PLUGIN_ID_CLASSPATH_ATTRIBUTE_NAME)) {Bundle bundle = Platform.getBundle(classpathAttribute.getValue());if (bundle != null) {bundles.add(bundle);continue LOOP;}}}}urls.add(new URL(""platform:/resource"" + jetEmitterClasspathEntry.getPath() + ""/""));}URLClassLoader theClassLoader = AccessController.doPrivileged(new GetURLClassLoaderSuperBundlesAction(bundles, urls));Class<?> theClass = theClassLoader.loadClass((packageName.length() == 0 ? """" : packageName + ""."") + jetCompiler.getSkeleton().getClassName());String methodName = jetCompiler.getSkeleton().getMethodName();Method[] methods = theClass.getDeclaredMethods();for (int i = 0; i < methods.length; ++i) {if (methods[i].getName().equals(methodName)) {jetEmitter.setMethod(methods[i]);break;}}}subProgressMonitor.done();} catch (CoreException exception) {throw new JETException(exception);} catch (Exception exception) {throw new JETException(exception);} finally {progressMonitor.done();}}private String signMethod() {String str = API.SHARED_SECRET;Vector<String> v = new Vector<String>(parameters.keySet());Collections.sort(v);for (String key : v) {str += key + parameters.get(key);}MessageDigest m = null;try {m = MessageDigest.getInstance(""MD5"");m.update(str.getBytes(), 0, str.length());return new BigInteger(1, m.digest()).toString(16);} catch (NoSuchAlgorithmException e) {return null;}}public void setImage(java.awt.Image img) {if (imageName != null && imageName.length() > 0) {try {InputStream url = currentProject.getUrl(imageName).openStream();image = new org.eclipse.swt.graphics.Image(getDisplay(), url);} catch (IOException e) {e.printStackTrace();}Display.getDefault().asyncExec(new Runnable() {public void run() {redraw();}});}}private void work(String[] args) throws Exception {String dictLocation = CONTENT_URL;String cpeContentDirName = CONTENT_DIR;String fn = dictLocation.substring(dictLocation.lastIndexOf(""/"") + 1);File destFile = new File(cpeContentDirName + File.separator + fn);URL url = new URL(dictLocation);URLConnection conn = url.openConnection();conn.connect();long lmodifiedRemote = conn.getLastModified();boolean needToDownload = false;if (destFile.exists()) {System.out.println(destFile.getAbsolutePath() + "" exists, check modification time"");long lmodifiedLocal = destFile.lastModified();if (lmodifiedRemote > lmodifiedLocal) {System.out.println(""Server file is newer, need to download"");needToDownload = true;} else {System.out.println(""Local version is newer, no need to download"");}} else {System.out.println(""Local version doesn't exist, need to download"");needToDownload = true;}if (needToDownload) {InputStream is = conn.getInputStream();FileOutputStream fos = new FileOutputStream(destFile);byte[] buff = new byte[8192];int read = 0;while ((read = is.read(buff)) > 0) {fos.write(buff, 0, read);}fos.flush();fos.close();is.close();}}protected void readLockssConfigFile(URL url, List<String> peers) {PrintWriter out = null;try {out = new PrintWriter(new OutputStreamWriter(System.out, ""utf8""), true);out.println(""unicode-output-ready"");} catch (UnsupportedEncodingException ex) {System.out.println(ex.toString());return;}XMLInputFactory xmlif = XMLInputFactory.newInstance();xmlif.setProperty(""javax.xml.stream.isCoalescing"", java.lang.Boolean.TRUE);xmlif.setProperty(""javax.xml.stream.isNamespaceAware"", java.lang.Boolean.TRUE);XMLStreamReader xmlr = null;BufferedInputStream stream = null;long starttime = System.currentTimeMillis();out.println(""Starting to parse the remote config xml["" + url + ""]"");int elementCount = 0;int topPropertyCounter = 0;int propertyTagLevel = 0;try {stream = new BufferedInputStream(url.openStream());xmlr = xmlif.createXMLStreamReader(stream, ""utf8"");int eventType = xmlr.getEventType();String curElement = """";String targetTagName = ""property"";String peerListAttrName = ""id.initialV3PeerList"";boolean sentinel = false;boolean valueline = false;while (xmlr.hasNext()) {eventType = xmlr.next();switch(eventType) {case XMLEvent.START_ELEMENT:curElement = xmlr.getLocalName();if (curElement.equals(""property"")) {topPropertyCounter++;propertyTagLevel++;int count = xmlr.getAttributeCount();if (count > 0) {for (int i = 0; i < count; i++) {if (xmlr.getAttributeValue(i).equals(peerListAttrName)) {sentinel = true;out.println(""!!!!!! hit the"" + peerListAttrName);out.println(""attr="" + xmlr.getAttributeName(i));out.println(""vl="" + xmlr.getAttributeValue(i));out.println("">>>>>>>>>>>>>> start :property tag ("" + topPropertyCounter + "") >>>>>>>>>>>>>>"");out.println("">>>>>>>>>>>>>> property tag level ("" + propertyTagLevel + "") >>>>>>>>>>>>>>"");out.print(xmlr.getAttributeName(i).toString());out.print(""="");out.print(""\"""");out.print(xmlr.getAttributeValue(i));out.println("""");}}}}if (sentinel && curElement.equals(""value"")) {valueline = true;String ipAd = xmlr.getElementText();peers.add(ipAd);}break;case XMLEvent.CHARACTERS:break;case XMLEvent.ATTRIBUTE:if (curElement.equals(targetTagName)) {}break;case XMLEvent.END_ELEMENT:if (xmlr.getLocalName().equals(""property"")) {if (sentinel) {out.println(""========= end of the target property element"");sentinel = false;valueline = false;}elementCount++;propertyTagLevel--;} else {}break;case XMLEvent.END_DOCUMENT:}}} catch (MalformedURLException ue) {} catch (IOException ex) {} catch (XMLStreamException ex) {} finally {if (xmlr != null) {try {xmlr.close();} catch (XMLStreamException ex) {}}if (stream != null) {try {stream.close();} catch (IOException ex) {}}}}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}public Resource get(URL serviceUrl, String resourceId) throws Exception {Resource resource = new Resource();String openurl = serviceUrl.toString() + ""?url_ver=Z39.88-2004"" + ""&rft_id="" + URLEncoder.encode(resourceId, ""UTF-8"") + ""&svc_id="" + SVCID_ADORE4;log.debug(""OpenURL Request: "" + openurl);URL url;try {url = new URL(openurl);HttpURLConnection huc = (HttpURLConnection) (url.openConnection());int code = huc.getResponseCode();if (code == 200) {InputStream is = huc.getInputStream();resource.setBytes(StreamUtil.getByteArray(is));resource.setContentType(huc.getContentType());} else {log.error(""An error of type "" + code + "" occurred for "" + url.toString());throw new Exception(""Cannot get "" + url.toString());}} catch (MalformedURLException e) {throw new Exception(""A MalformedURLException occurred for "" + openurl);} catch (IOException e) {throw new Exception(""An IOException occurred attempting to connect to "" + openurl);}return resource;}public static String md5Hash(String src) {try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(src.getBytes());return bytesArrayToHexString(md.digest());} catch (Exception e) {return null;}}"	5
"  @SuppressWarnings(""finally"")  private void compress(File src) throws IOException  {if (this.switches.contains(Switch.test))  return;checkSourceFile(src);if (src.getPath().endsWith("".bz2"")){  this.log.println(""WARNING: skipping file because it already has .bz2 suffix:"").println(src);  return;}final File dst = new File(src.getPath() + "".bz2"").getAbsoluteFile();if (!checkDestFile(dst))  return;FileChannelinChannel= null;FileChanneloutChannel  = null;FileOutputStream  fileOut = null;BZip2OutputStream bzOut= null;FileLock  inLock  = null;FileLock  outLock = null;try{  inChannel = new FileInputStream(src).getChannel();  final long inSize = inChannel.size();  inLock = inChannel.tryLock(0, inSize, true);  if (inLock == null)throw error(""source file locked by another process: "" + src);  fileOut = new FileOutputStream(dst);  outChannel  = fileOut.getChannel();  bzOut= new BZip2OutputStream(new BufferedXOutputStream(fileOut, 8192),Math.min(  (this.blockSize == -1) ? BZip2OutputStream.MAX_BLOCK_SIZE : this.blockSize,  BZip2OutputStream.chooseBlockSize(inSize))  );  outLock = outChannel.tryLock();  if (outLock == null)throw error(""destination file locked by another process: "" + dst);  final boolean showProgress = this.switches.contains(Switch.showProgress);  long pos = 0;  int progress = 0;  if (showProgress || this.verbose)  {this.log.print(""source: "" + src).print("": size="").println(inSize);this.log.println(""target: "" + dst);  }  while (true)  {final long maxStep = showProgress ? Math.max(8192, (inSize - pos) / MAX_PROGRESS) : (inSize - pos);if (maxStep <= 0){  if (showProgress)  {for (int i = progress; i < MAX_PROGRESS; i++)  this.log.print('#');this.log.println("" done"");  }  break;}else{  final long step = inChannel.transferTo(pos, maxStep, bzOut);  if ((step == 0) && (inChannel.size() != inSize))throw error(""file "" + src + "" has been modified concurrently by another process"");  pos += step;  if (showProgress)  {final double  p= (double) pos / (double) inSize;final int newProgress = (int) (MAX_PROGRESS * p);for (int i = progress; i < newProgress; i++)  this.log.print('#');progress = newProgress;  }}  }  inLock.release();  inChannel.close();  bzOut.closeInstance();  final long outSize = outChannel.position();  outChannel.truncate(outSize);  outLock.release();  fileOut.close();  if (this.verbose)  {final double ratio = (inSize == 0) ? (outSize * 100) : ((double) outSize / (double) inSize);this.log.print(""raw size: "").print(inSize)  .print(""; compressed size: "").print(outSize)  .print(""; compression ratio: "").print(ratio).println('%');  }  if (!this.switches.contains(Switch.keep))  {if (!src.delete())  throw error(""unable to delete sourcefile: "" + src);  }}catch (final IOException ex){  IO.tryClose(inChannel);  IO.tryClose(bzOut);  IO.tryClose(fileOut);  IO.tryRelease(inLock);  IO.tryRelease(outLock);  try  {this.log.println();  }  finally  {throw ex;  }}  }  @SuppressWarnings(""finally"")  private void decompress(final File src) throws IOException  {final String srcPath = src.getPath();checkSourceFile(src);final boolean test = this.switches.contains(Switch.test);final File dst;if (test)  dst = File.createTempFile(""jaxlib-bzip"", null);else{  if (srcPath.endsWith("".bz2""))dst = new File(srcPath.substring(0, srcPath.length() - 4));  else  {this.log.println(""WARNING: Can't guess original name, using extension \"".out\"":"").println(srcPath);dst = new File(srcPath + "".out"");  }}if (!checkDestFile(dst))  return;final boolean showProgress = this.switches.contains(Switch.showProgress);BZip2InputStream  in  = null;FileOutputStream  out = null;FileChanneloutChannel  = null;FileLock  inLock  = null;FileLock  outLock = null;try{  final FileInputStream in0= new FileInputStream(src);  final FileChannel inChannel = in0.getChannel();  final longinSize= inChannel.size();  inLock = inChannel.tryLock(0, inSize, true);  if (inLock == null)throw error(""source file locked by another process: "" + src);  in  = new BZip2InputStream(new BufferedXInputStream(in0, 8192));  out = new FileOutputStream(dst);  outChannel  = out.getChannel();  outLock = outChannel.tryLock();  if (outLock == null)throw error(""destination file locked by another process: "" + dst);  if (showProgress || this.verbose)  {this.log.print(""source: "" + src).print("": size="").println(inSize);this.log.println(""target: "" + dst);  }  long  pos= 0;  intprogress  = 0;  final long maxStep = showProgress ? Math.max(8192, inSize / MAX_PROGRESS) : Integer.MAX_VALUE;  while (true)  {final long step = outChannel.transferFrom(in, pos, maxStep);if (step <= 0){  final long a = inChannel.size();  if (a != inSize)throw error(""file "" + src + "" has been modified concurrently by another process"");  if (inChannel.position() >= inSize)  {if (showProgress){  for (int i = progress; i < MAX_PROGRESS; i++)this.log.print('#');  this.log.println("" done"");}break;  }}else{  pos += step;  if (showProgress)  {final double  p= (double) inChannel.position() / (double) inSize;final int newProgress = (int) (MAX_PROGRESS * p);for (int i = progress; i < newProgress; i++)  this.log.print('#');progress = newProgress;  }}  }  final long outSize = outChannel.size();  in.close();  out.close();  if (this.verbose)  {final double ratio = (outSize == 0) ? (inSize * 100) : ((double) inSize / (double) outSize);this.log.print(""compressed size: "").print(inSize)  .print(""; decompressed size: "").print(outSize)  .print(""; compression ratio: "").print(ratio).println('%');  }  if (!test && !this.switches.contains(Switch.keep))  {if (!src.delete())  throw error(""unable to delete sourcefile: "" + src);  }  if (test && !dst.delete())throw error(""unable to delete testfile: "" + dst);}catch (final IOException ex){  IO.tryClose(in);  IO.tryClose(out);  IO.tryRelease(inLock);  IO.tryRelease(outLock);  try  {this.log.println();  }  finally  {throw ex;  }}  }public String getXML(String servletURL, String request) {StringBuffer stringBuffer = new StringBuffer();try {String encodedRequest = URLEncoder.encode(request, ""UTF-8"");URL url = new URL(servletURL + request);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));String inputLine;while ((inputLine = in.readLine()) != null) {stringBuffer.append(inputLine);}in.close();} catch (MalformedURLException ex) {return null;} catch (UnsupportedEncodingException ex) {return null;} catch (IOException ex) {return null;}return stringBuffer.toString();}public synchronized String encrypt(String plaintext) {MessageDigest md = null;try {md = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {e.printStackTrace();}try {md.update(plaintext.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {e.printStackTrace();}byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}public static void DecodeMapFile(String mapFile, String outputFile) throws Exception {byte magicKey = 0;byte[] buffer = new byte[2048];int nread;InputStream map;OutputStream output;try {map = new FileInputStream(mapFile);} catch (Exception e) {throw new Exception(""Map file error"", e);}try {output = new FileOutputStream(outputFile);} catch (Exception e) {throw new Exception(""Map file error"", e);}while ((nread = map.read(buffer, 0, 2048)) != 0) {for (int i = 0; i < nread; ++i) {buffer[i] ^= magicKey;magicKey += 43;}output.write(buffer, 0, nread);}map.close();output.close();}@Testpublic void testCopy() throws IOException {final byte[] input = { 0x00, 0x01, 0x7F, 0x03, 0x40 };final byte[] verification = input.clone();Assert.assertNotSame(""Expecting verification to be a new array."", input, verification);final ByteArrayInputStream in = new ByteArrayInputStream(input);final ByteArrayOutputStream out = new ByteArrayOutputStream();IOUtils.copy(in, out);final byte[] output = out.toByteArray();Assert.assertTrue(""Expecting input to be unchanged."", Arrays.equals(verification, input));Assert.assertTrue(""Expecting output to be like input."", Arrays.equals(verification, output));Assert.assertNotSame(""Expecting output to be a new array."", input, output);Assert.assertNotSame(""Expecting output to be a new array."", verification, output);}public static String getMD5Hash(String data) {MessageDigest digest;try {digest = java.security.MessageDigest.getInstance(""MD5"");digest.update(data.getBytes());byte[] hash = digest.digest();StringBuffer hexString = new StringBuffer();String hexChar = """";for (int i = 0; i < hash.length; i++) {hexChar = Integer.toHexString(0xFF & hash[i]);if (hexChar.length() < 2) {hexChar = ""0"" + hexChar;}hexString.append(hexChar);}return hexString.toString();} catch (NoSuchAlgorithmException ex) {return null;}}public static final String computeHash(String stringToCompile) {String retVal = null;try {MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.reset();md5.update(stringToCompile.getBytes());byte[] result = md5.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < result.length; i++) {hexString.append(Integer.toHexString(0xFF & result[i]));}retVal = hexString.toString();if (log.isDebugEnabled()) log.debug(""MD5 hash for \"""" + stringToCompile + ""\"" is: "" + retVal);} catch (Exception exe) {log.error(exe.getMessage(), exe);}return retVal;}public File createReadmeFile(File dir, MavenProject mavenProject) throws IOException {InputStream is = getClass().getResourceAsStream(""README.template"");StringWriter sw = new StringWriter();IOUtils.copy(is, sw);String content = sw.getBuffer().toString();content = StringUtils.replace(content, ""{project_name}"", mavenProject.getArtifactId());File readme = new File(dir, ""README.TXT"");FileUtils.writeStringToFile(readme, content);return readme;}protected Document SendRequest(Document request) throws WsmanException {HttpURLConnection conn = null;Document response = null;stampRequest(request);boolean printDebug = System.getProperty(""intel.management.wsman.debug"", ""false"").equals(""true"");int retry = 2;while (retry > 0) {try {if (conn != null) {conn.disconnect();}URL url = new URL((String) properties.get(""Address""));Proxy proxy = (Proxy) properties.get(""HttpProxy"");if (proxy != null) conn = (HttpURLConnection) url.openConnection(proxy); else conn = (HttpURLConnection) url.openConnection();if (conn instanceof HttpsURLConnection) {HttpsURLConnection sslConn = (HttpsURLConnection) conn;SSLSocketFactory factory = (SSLSocketFactory) properties.get(""SSLSocketFactory"");X509TrustManager tm = (X509TrustManager) properties.get(""X509TrustManager"");HostnameVerifier verifier = (HostnameVerifier) properties.get(""HostnameVerifier"");X509KeyManager km = (X509KeyManager) properties.get(""X509KeyManager"");if (factory == null && (km != null || tm != null)) {X509KeyManager[] keys = null;X509TrustManager[] trusts = null;SSLContext sc = SSLContext.getInstance(""SSL"");if (km != null) {keys = new X509KeyManager[1];keys[0] = km;}if (tm != null) {trusts = new X509TrustManager[1];trusts[0] = tm;}sc.init(keys, trusts, null);factory = sc.getSocketFactory();properties.put(""SSLSocketFactory"", factory);}if (factory != null) sslConn.setSSLSocketFactory(factory);if (verifier != null) sslConn.setHostnameVerifier(verifier);}Object auth = properties.get(""AuthScheme"");if (auth != null && auth.equals(""kerberos"")) {Oid spnegoMecOid = new Oid(""1.3.6.1.5.5.2"");GSSManager manager = org.ietf.jgss.GSSManager.getInstance();String spnName = ""HTTP/"" + url.getHost();int spnPort = url.getPort();if (spnPort == 16992 || spnPort == 16993 || spnPort == 623 || spnPort == 624) {spnName = spnName + "":"" + Integer.toString(spnPort);}GSSName gssName = manager.createName(spnName, null);GSSContext context = manager.createContext(gssName, spnegoMecOid, null, GSSCredential.DEFAULT_LIFETIME);context.requestCredDeleg(true);byte[] token = new byte[0];token = context.initSecContext(token, 0, token.length);String tokenStr = WsmanUtils.getBase64String(token);conn.addRequestProperty(""Authorization"", ""Negotiate "" + tokenStr);} else if (auth != null && auth.equals(""basic"")) {java.net.Authenticator.requestPasswordAuthentication(url.getHost(), null, url.getPort(), url.getProtocol(), """", ""basic"");String tokenStr = """";conn.addRequestProperty(""Authorization"", ""Basic "" + tokenStr);}conn.setRequestMethod(""POST"");conn.addRequestProperty(""Content-Type"", ""application/soap+xml;charset=UTF-8"");conn.setDoOutput(true);if (printDebug) System.out.println(getXmlLoader().formatDocument(request));getXmlLoader().saveDocument(request, conn.getOutputStream());InputStream s = conn.getInputStream();response = getXmlLoader().loadDocument(s);if (printDebug) {System.out.println(getXmlLoader().formatDocument(response));}conn.getResponseCode();retry = 0;conn.disconnect();conn = null;} catch (IOException ioException) {retry--;int max = conn.getHeaderFields().size();for (int i = 0; i < max; i++) {String t = conn.getHeaderField(i);t.toString();}conn.getRequestProperty(""Authorization"");conn.getHeaderField(""Authorization"");Object errObj = getResponse(conn);if (errObj != null && errObj instanceof Document) {response = (Document) errObj;retry = 0;throw new WsmanException(this, response);} else if (errObj != null) throw new WsmanException(ioException);if (retry == 0) throw new WsmanException(ioException);} catch (Exception exception) {retry = 0;throw new WsmanException(exception);}}return response;}"	5
"private static String readUrl(String filePath, String charCoding, boolean urlIsFile) throws IOException {int chunkLength;InputStream is = null;try {if (!urlIsFile) {URL urlObj = new URL(filePath);URLConnection uc = urlObj.openConnection();is = uc.getInputStream();chunkLength = uc.getContentLength();if (chunkLength <= 0) chunkLength = 1024;if (charCoding == null) {String type = uc.getContentType();if (type != null) {charCoding = getCharCodingFromType(type);}}} else {if (registeredStreams.containsKey(filePath)) {is = registeredStreams.get(filePath);chunkLength = 4096;} else {File f = new File(filePath);long length = f.length();chunkLength = (int) length;if (chunkLength != length) throw new IOException(""Too big file size: "" + length);if (chunkLength == 0) {return """";}is = new FileInputStream(f);}}Reader r;if (charCoding == null) {r = new InputStreamReader(is);} else {r = new InputStreamReader(is, charCoding);}return readReader(r, chunkLength);} finally {if (is != null) is.close();}}public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {String limitsSet = """";String synstatus = SystemFilesLoader.getInstance().getNewgenlibProperties().getProperty(""SYNDETICS"", ""OFF"");String synncode = SystemFilesLoader.getInstance().getNewgenlibProperties().getProperty(""SYNDETICS_CLIENT_CODE"", """");try {if (request.getSession().getAttribute(""searchLimits"") != null) {System.out.println(""searchLimits set"");limitsSet = ""SET"";java.util.Hashtable htLimits = new java.util.Hashtable();htLimits = (java.util.Hashtable) request.getSession().getAttribute(""searchLimits"");} else {limitsSet = ""UNSET"";System.out.println(""searchLimits not set"");}java.util.Properties prop = System.getProperties();prop.load(new FileInputStream(ejb.bprocess.util.NewGenLibRoot.getRoot() + java.io.File.separator + ""SystemFiles"" + java.io.File.separator + ""ENV_VAR.txt""));System.out.println(""SEARCH MODE IS "" + searchmode + "" FILE PATH "" + ejb.bprocess.util.NewGenLibRoot.getRoot() + java.io.File.separator + ""SystemFiles"" + java.io.File.separator + ""ENV_VAR.txt"");} catch (Exception e) {}javax.servlet.http.HttpSession session = request.getSession();String forward = ""searchView"";int link = 0, singleLink = 0;java.util.Vector vecThisPage = new java.util.Vector();aportal.form.cataloguing.SearchViewForm svF = (aportal.form.cataloguing.SearchViewForm) form;svF.setSyndeticsStatus(synstatus);svF.setSyndeticsClientCode(synncode);opacHm = (ejb.bprocess.opac.xcql.OPACUtilitiesHome) ejb.bprocess.util.HomeFactory.getInstance().getRemoteHome(""OPACUtilities"");ejb.bprocess.opac.xcql.OPACUtilities opacUt = opacHm.create();System.out.println(""CLASS NO "" + request.getParameter(""ClassNo"") + "" ClassNoForwarded "" + session.getAttribute(""ClassNoForwarded""));if (svF.getExportRec() == null || !(svF.getExportRec().equals(""export""))) {if (request.getParameter(""CatId"") != null && request.getParameter(""OwnerId"") != null && request.getParameter(""relation"") != null && !(session.getAttribute(""HostItemDisplay"") != null && session.getAttribute(""HostItemDisplay"").toString().equals(""false""))) {home = (ejb.bprocess.opac.xcql.SearchSRUWCatalogueHome) ejb.bprocess.util.HomeFactory.getInstance().getRemoteHome(""SearchSRUWCatalogue"");ejb.bprocess.opac.xcql.SearchSRUWCatalogue searchCat = home.create();String catId1 = request.getParameter(""CatId"");String ownId1 = request.getParameter(""OwnerId"");System.out.println(""*********************CatId1: "" + catId1);svF.setCatalogueRecordId(catId1);svF.setOwnerLibraryId(ownId1);String rel = request.getParameter(""relation"");java.util.Vector vecL = searchCat.getRelatedCatalogueRecords(null, catId1, ownId1, rel);request.setAttribute(""LuceneVector"", vecL);session.setAttribute(""searchVec"", vecL);singleLink = 1;session.setAttribute(""HostItemDisplay"", ""false"");link = 1;forward = ""searchRes"";vecThisPage.addElement(catId1);vecThisPage.addElement(ownId1);} else if (link == 0 || singleLink == 1) {System.out.println(""LINK AND SINGLE LINK "" + link + "" single "" + singleLink);if ((request.getParameter(""ClassNo"") != null) && session.getAttribute(""ClassNoForwarded"") == null) {System.out.println(""action called for class no."");String classificNo = request.getParameter(""ClassNo"");System.out.println(""TITLE WORDS "");home = (ejb.bprocess.opac.xcql.SearchSRUWCatalogueHome) ejb.bprocess.util.HomeFactory.getInstance().getRemoteHome(""SearchSRUWCatalogue"");ejb.bprocess.opac.xcql.SearchSRUWCatalogue searchCat = home.create();String rawSearchText = (new beans.miscellaneous.RequestStringProcessor()).processString(""*"" + classificNo + ""*"");System.out.println(""raw search Text"" + rawSearchText);String searchText = ""classificationNumber="" + rawSearchText;System.out.println(""search text is "" + searchText);String xmlRes = (new org.z3950.zing.cql.CQLParser()).parse(searchText).toXCQL(0);java.util.Hashtable hs = new java.util.Hashtable();java.util.Vector v1 = new java.util.Vector();if (session.getAttribute(""searchLimits"") != null) {hs = (java.util.Hashtable) session.getAttribute(""searchLimits"");}Vector vec = new Vector();String solrQuery = Utility.getInstance().simplifiedSolrQuery(classificNo, ""classificationNumber"");if (limitsSet.equalsIgnoreCase(""SET"")) {String limitsQuery = limitsSolrQuery(hs);solrQuery += limitsQuery;}solrQuery += "" & "";Vector newRetvec = searchCat.processSolrQuery(1, 25, solrQuery, ""245_Tag"", ""asc"");Hashtable ht = (Hashtable) newRetvec.get(0);String totrec = (String) ht.get(""HITS"");session.setAttribute(""TOTALREC"", Integer.parseInt(totrec));v1 = (Vector) ht.get(""RESULTS"");hs.put(""Query"", solrQuery);if (v1.size() > 0) {hs.put(""searchText"", rawSearchText);hs.put(""noOfRecords"", 25);hs.put(""browseType"", ""Classification Number"");session.setAttribute(""searchEntry"", hs);session.setAttribute(""searchVec"", v1);forward = ""searchRes"";} else {forward = ""home"";}} else {System.out.println(""ELSE CALLED "");String record = request.getParameter(""record"");String recNo = request.getParameter(""recNo"");Integer catId = 0, ownerId = 0;String title = """";if (request.getParameter(""CatId"") != null && request.getParameter(""OwnerId"") != null) {catId = new Integer(request.getParameter(""CatId"")).intValue();ownerId = new Integer(request.getParameter(""OwnerId"")).intValue();System.out.println(""catId is +++="" + catId);System.out.println(""OwnerId is +++="" + ownerId);title = request.getParameter(""title"");svF.setCatalogueRecordId(request.getParameter(""CatId""));svF.setOwnerLibraryId(request.getParameter(""OwnerId""));}System.out.println(""%%%%%%%%%%%%%%%%%%%%%%%%%VVVVVVVVVVVVVVVVVVVVVV"");ArrayList alOtherBooks = ((ejb.bprocess.opac.SearchCatalogue) ejb.bprocess.util.HomeFactory.getInstance().getHome(""SearchCatalogue"")).getOtherBooksInTheRack(null, catId.toString(), ownerId.toString(), ownerId.toString());System.out.println(""alOtherBooks size is  "" + alOtherBooks.size());Vector vOtherBooks = new Vector();Session catrecsession = DBConnector.getInstance().getSession();utility = ejb.bprocess.util.Utility.getInstance(catrecsession);for (int i = 0; i < alOtherBooks.size(); i++) {String[] scData = (String[]) (alOtherBooks.get(i));String catalogueId = scData[0];String ownerLibId = scData[1];System.out.println(""catId is +++="" + catalogueId);System.out.println(""OwnerId is +++="" + ownerLibId);String xmlWholeRecord = """";String titleD = """";String titleV = """";String authorV = """";String isbnNumber = """";if (catalogueId != null && ownerLibId != null) {try {System.out.println(""***************************** 0"");Hashtable htDetails = utility.getCatalogueRecord(new Integer(catalogueId), new Integer(ownerLibId));System.out.println(""***************************** 1"");if (htDetails != null && !htDetails.isEmpty()) {System.out.println(""htDetails"" + htDetails.toString());titleV = utility.getTestedString(htDetails.get(""Title""));authorV = utility.getTestedString(htDetails.get(""Author""));isbnNumber = utility.getTestedString(htDetails.get(""ISBN""));String[] str1 = titleV.split(""/"");if (str1.length > 0) {titleD = str1[0];if (titleD.length() > 45) {titleD = titleD.substring(0, 45) + ""..."";}}String[] str = new String[5];str[0] = titleD;str[1] = authorV;str[2] = isbnNumber;str[3] = catalogueId;str[4] = ownerLibId;vOtherBooks.add(str);System.out.println(""Other Books size is "" + vOtherBooks.size());}} catch (Exception e) {e.printStackTrace();}}}System.out.println(""Other Books vector is *************************** \n "");for (int i = 0; i < vOtherBooks.size(); i++) {String[] str = (String[]) vOtherBooks.get(i);System.out.println(""title:"" + str[0].toString());System.out.println(""author  :"" + str[1].toString());System.out.println(""isbn  :"" + str[2].toString());System.out.println(""catID  :"" + str[3].toString());System.out.println(""ownerLibId  :"" + str[4].toString());}System.out.println(""&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&"");request.setAttribute(""fisheyedata"", vOtherBooks);catrecsession.close();session.setAttribute(""SingleViewExport"", vecThisPage);if (session.getAttribute(""OnlySingleRec"") != null && session.getAttribute(""OnlySingleRec"").toString().equals(""true"")) {java.util.Vector v1 = new java.util.Vector();System.out.println(""SEARCH MODE "" + searchmode);if (searchmode.equalsIgnoreCase(""a"")) {System.out.println(""SEARCHMODE IN SEARCH VIEW ACTION (IF) "" + searchmode);v1 = (java.util.Vector) request.getAttribute(""LuceneVector"");System.out.println(""VECTOR V1 "" + v1);} else {System.out.println(""SEARCHMODE IN SEARCH VIEW ACTION (ELSE)"" + searchmode);v1 = (java.util.Vector) session.getAttribute(""searchVec"");}Object[] obj = (Object[]) v1.elementAt(0);String str[] = (String[]) obj[0];java.util.Hashtable h = new java.util.Hashtable();String tit = """";h = (java.util.Hashtable) obj[1];System.out.println(""HASH TABLE in view action "" + h);catId = new Integer(str[0]).intValue();ownerId = new Integer(str[1]).intValue();title = h.get(""TITLE"").toString();svF.setAttachmentsAndUrl("""");if ((h.get(""ATTACHMENTS"") != null && h.get(""ATTACHMENTS"").equals(""AVAILABLE""))) {svF.setAttachmentsAndUrl(""available"");}record = ""full"";recNo = ""1"";session.removeAttribute(""OnlySingleRec"");}if (session.getAttribute(""HostItemDisplay"") != null && session.getAttribute(""HostItemDisplay"").equals(""false"")) {session.removeAttribute(""HostItemDisplay"");}session.setAttribute(""Title"", title);java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(catId, ownerId);vecThisPage.addElement(String.valueOf(catId));vecThisPage.addElement(String.valueOf(ownerId));svF.setAttachmentsAndUrl("""");if (hash1.get(""ATTACHMENTS"") != null && hash1.get(""ATTACHMENTS"").toString().equals(""AVAILABLE"")) {svF.setAttachmentsAndUrl(""available"");}svF.setRecordNo(recNo);session.setAttribute(""record"", record);java.util.Vector vecCO = (java.util.Vector) session.getAttribute(""CatAndOwner"");svF.setCatCur(catId);svF.setOwnerCur(ownerId);svF.setPrevExists(""no"");svF.setNextExists(""no"");if (vecCO != null) {for (int j = 0; j < vecCO.size(); j = j + 4) {int c = new Integer(vecCO.elementAt(j).toString()).intValue();int o = new Integer(vecCO.elementAt(j + 1).toString()).intValue();if (c == catId && o == ownerId) {if (j != 0) {int catPrev = new Integer(vecCO.elementAt(j - 4).toString()).intValue();int ownerPrev = new Integer(vecCO.elementAt(j - 3).toString()).intValue();svF.setCatPrev(catPrev);svF.setOwnerPrev(ownerPrev);svF.setTitlePrev(vecCO.elementAt(j - 2).toString());svF.setRecPrev(vecCO.elementAt(j - 1).toString());svF.setPrevExists(""yes"");}if (j < vecCO.size() - 4) {int catNext = new Integer(vecCO.elementAt(j + 4).toString()).intValue();int ownerNext = new Integer(vecCO.elementAt(j + 5).toString()).intValue();svF.setCatNext(catNext);svF.setOwnerNext(ownerNext);svF.setTitleNext(vecCO.elementAt(j + 6).toString());svF.setRecNext(vecCO.elementAt(j + 7).toString());svF.setNextExists(""yes"");}}}}String str[] = (String[]) hash1.get(""Biblo_Mat"");int bib_id = new Integer(str[0]).intValue();int mat_id = new Integer(str[1]).intValue();aportal.view.RecordView rv = new aportal.view.DesignFactory().getCorView(bib_id, mat_id, record);String type = """";if (bib_id == 3 && mat_id == 1) {type = ""Book"";} else if (bib_id == 4 && mat_id == 1) {type = ""Serial"";} else if (bib_id == 1 && mat_id == 1) {type = ""Book Chapter"";} else if (bib_id == 2 && mat_id == 1) {type = ""Serial Article"";} else {type = ejb.bprocess.util.TypeDefinition.getInstance().getTypeDefinition(String.valueOf(bib_id), String.valueOf(mat_id));}java.util.Hashtable hMono = (java.util.Hashtable) hash1.get(""MonoGraphRecords"");java.util.Hashtable h4 = rv.getView(hash1);h4.put(""Type"", type);Hashtable ht = (Hashtable) h4.get(""NoLink"");if (ht != null && ht.get(""URLS_856"") != null) {Vector urls856 = (Vector) ht.get(""URLS_856"");if (urls856.size() > 0) {Hashtable linksAndText = new Hashtable();Hashtable url856 = new Hashtable();for (int i = 0; i < urls856.size(); i += 2) {url856.put(urls856.elementAt(i), urls856.elementAt(i + 1));}linksAndText.put(""URL"", url856);h4.put(""URLS_856"", linksAndText);}}try {String sessionid = request.getSession().getId();ejb.bprocess.holdings.HoldingsStatement holdingsStatement = ((ejb.bprocess.holdings.HoldingsStatementHome) ejb.bprocess.util.HomeFactory.getInstance().getRemoteHome(""HoldingsStatement"")).create();java.util.Vector vecLib = new java.util.Vector();vecLib.addElement(""1"");if (session.getAttribute(""Libraries"") != null) {vecLib = (java.util.Vector) session.getAttribute(""Libraries"");}String libIds = """";for (int p = 0; p < vecLib.size(); p++) {if (p != 0) {libIds += "","";}String libName = vecLib.elementAt(p).toString();Session session1 = DBConnector.getInstance().getSession();libIds += ejb.bprocess.util.Utility.getInstance(session1).getLibraryId(libName);session1.close();}request.setAttribute(""catRecId"", String.valueOf(catId));request.setAttribute(""ownLibId"", String.valueOf(ownerId));request.setAttribute(""libIds"", String.valueOf(libIds));Hashtable onerecordattach = new Hashtable();JSONObject jsonCatOwnId = new JSONObject().put(""Id"", catId).put(""LibId"", ownerId);ejb.bprocess.opac.SearchCatalogue searchCatAttach = ((ejb.bprocess.opac.SearchCatalogueHome) ejb.bprocess.util.HomeFactory.getInstance().getRemoteHome(""SearchCatalogue"")).create();String strAttach = searchCatAttach.getAttachmentDetails(jsonCatOwnId.toString());if (!strAttach.equals("""")) {JSONObject jsonAttach = new JSONObject(strAttach);if (jsonAttach != null) {if (!jsonAttach.isNull(""BookCover"")) {ArrayList albookcover = new ArrayList();JSONArray jsonarr = (JSONArray) jsonAttach.get(""BookCover"");if (jsonarr != null) {for (int j = 0; j < jsonarr.length(); j++) {albookcover.add(jsonarr.getString(j));}onerecordattach.put(""BookCover"", albookcover);}}if (!jsonAttach.isNull(""TOC"")) {ArrayList alTOC = new ArrayList();JSONArray jsonarr = (JSONArray) jsonAttach.get(""TOC"");if (jsonarr != null) {for (int j = 0; j < jsonarr.length(); j++) {alTOC.add(jsonarr.getString(j));}onerecordattach.put(""TOC"", alTOC);}}if (!jsonAttach.isNull(""Preview"")) {ArrayList alPreview = new ArrayList();JSONArray jsonarr = (JSONArray) jsonAttach.get(""Preview"");if (jsonarr != null) {for (int j = 0; j < jsonarr.length(); j++) {alPreview.add(jsonarr.getString(j));}onerecordattach.put(""Preview"", alPreview);}}if (!jsonAttach.isNull(""FullView"")) {ArrayList alFullView = new ArrayList();JSONArray jsonarr = (JSONArray) jsonAttach.get(""FullView"");if (jsonarr != null) {for (int j = 0; j < jsonarr.length(); j++) {alFullView.add(jsonarr.getString(j));}onerecordattach.put(""FullView"", alFullView);}}if (!jsonAttach.isNull(""Attachment"")) {ArrayList alAttachment = new ArrayList();JSONArray jsonarr = (JSONArray) jsonAttach.get(""Attachment"");if (jsonarr != null) {for (int j = 0; j < jsonarr.length(); j++) {alAttachment.add(jsonarr.getString(j));}onerecordattach.put(""Attachment"", alAttachment);}}if (onerecordattach != null && !onerecordattach.isEmpty()) {h4.put(""dAttachment"", onerecordattach);}}}svF.setHashSing(h4);System.out.println(""hash tabel values*************************"");Enumeration enumx = h4.keys();while (enumx.hasMoreElements()) {String key = enumx.nextElement().toString();System.out.println(""Key: "" + key + ""-----value: "" + h4.get(key));}System.out.println(""********************************************"");} catch (Exception e) {e.printStackTrace();}}}} else if (svF.getExportRec() != null && svF.getExportRec().equals(""export"")) {svF.setExportRec(null);vecThisPage = (java.util.Vector) session.getAttribute(""SingleViewExport"");String format = svF.getSf();if (format.equals(""marc"")) {String marc = opacUt.getDetailsForMultiRecordViewMARC(vecThisPage);svF.setDisplayFormat(marc);session.setAttribute(""RecordDisplay"", marc);forward = ""RecordFormat"";} else if (format.equals(""marcXml"")) {String marcXML = opacUt.getDetailsForMultiRecordViewMARCXML(vecThisPage);svF.setDisplayFormat(marcXML);response.setContentType(""text/xml"");session.setAttribute(""RecordDisplay"", marcXML);forward = ""RecordFormat"";} else if (format.equals(""mods"")) {String mods = opacUt.getDetailsForMultiRecordViewMODS(vecThisPage);svF.setDisplayFormat(mods);session.setAttribute(""RecordDisplay"", mods);forward = ""RecordFormat"";} else if (format.equals(""dc"")) {String dc = opacUt.getDetailsForMultiRecordViewDublinCore(vecThisPage);svF.setDisplayFormat(dc);session.setAttribute(""RecordDisplay"", dc);forward = ""RecordFormat"";} else if (format.equals(""agris"")) {String agr = opacUt.getDetailsForMultiRecordViewAgris(vecThisPage);svF.setDisplayFormat(agr);session.setAttribute(""RecordDisplay"", agr);forward = ""RecordFormat"";} else if (format.equals(""text"")) {java.util.Vector vecTextDis = new java.util.Vector();for (int i2 = 0; i2 < vecThisPage.size(); i2 = i2 + 2) {java.util.Hashtable hash1 = opacUt.getDetailsForSingleCatalogueRecord(new Integer(vecThisPage.elementAt(i2).toString()).intValue(), new Integer(vecThisPage.elementAt(i2 + 1).toString()).intValue());aportal.view.ISBDView fullView = new aportal.view.ISBDView();java.util.Hashtable hashCit = fullView.getView(hash1);vecTextDis.addElement(hashCit);forward = ""RecordFormatText"";}session.setAttribute(""RecordTextDisplay"", vecTextDis);if (svF.getPs() != null && svF.getPs().equals(""email"")) {boolean flag = false;if (svF.getEmail() != null && !(svF.getEmail().equals(""""))) {String emailId = svF.getEmail();try {String sessionid = request.getSession().getId();java.net.URL url = new java.net.URL(""http://localhost:"" + request.getServerPort() + ""/newgenlibctxt/jsp/aportal/cataloguing/RecordDisplayText.jsp;jsessionid="" + sessionid);java.net.URLConnection urlCon = url.openConnection();java.io.InputStream is = urlCon.getInputStream();String htmlContent = """";java.io.BufferedReader br = new java.io.BufferedReader(new java.io.InputStreamReader(is));String line = """";while ((line = br.readLine()) != null) {htmlContent = htmlContent + line;}String[] emailids = { emailId };int status = SendEmail.getInstance().sendMail(emailids, ""OPAC results"", htmlContent, ""html"");if (status == 0) flag = true; else flag = false;} catch (Exception exp) {exp.printStackTrace();}}String mailMessage = ""The selected records have been successfully mailed to "" + svF.getEmail();if (flag == false) {mailMessage = ""<h4><p>The selected records could not be mailed to "" + svF.getEmail() + ""&nbsp; These might be the possible reasons.</p></h4>"" + ""<h5><ol> <li>The email id entered is not a valid one</font></li>"" + ""<li>The email id domain might not be in the list of allowed  recipient&nbsp; hosts</li>"" + ""<li>There might a error in connectivity to the mail server</li></ol></h5>"" + ""<h4><p>Please contact the  Network Administrator </p></h4>"";}session.setAttribute(""MailStatus"", mailMessage);forward = ""SendEmail"";}}}String version = ejb.bprocess.util.StaticValues.getInstance().getVersion();if (version != null && !version.equals("""")) {svF.setVersion(version);}if (session.getAttribute(""ClassNoForwarded"") != null) {session.removeAttribute(""ClassNoForwarded"");}return mapping.findForward(forward);}@Overridepublic byte[] download(URI uri) throws NetworkException {log.info(""download: "" + uri);HttpGet httpGet = new HttpGet(uri.toString());try {HttpResponse httpResponse = httpClient.execute(httpGet);return EntityUtils.toByteArray(httpResponse.getEntity());} catch (IOException e) {throw new NetworkException(e);} finally {httpGet.abort();}}public static void sendData(final HashMap<String, String> data) {YProgressWindowRepeat y = new YProgressWindowRepeat(I18N.t(""Send Data to yaams.de""));try {final StringBuffer send = new StringBuffer(""1=1"");for (final String key : data.keySet()) {send.append(""&"");send.append(key);send.append(""="");send.append(URLEncoder.encode(data.get(key), ""UTF-8""));}final URL url = new URL(""http://www.rpg-studio.de/libraries/abttools/yaamsFeedback.php"");final URLConnection conn = url.openConnection();conn.setDoOutput(true);final OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());wr.write(send.toString());wr.flush();final BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));String line;final StringBuffer erg = new StringBuffer("""");while ((line = rd.readLine()) != null) {erg.append(line);}JOptionPane.showMessageDialog(null, erg.toString(), I18N.t(""Feedback""), JOptionPane.INFORMATION_MESSAGE);wr.close();rd.close();} catch (final Throwable t) {YException.error(""Can not send feedback to http://www.rpg-studio.de/libraries/abttools/yaamsFeedback.php"", t);}y.close();}public static String ftpPing(String root, String host, int port, String username, String pw) {try {ftpClient = new FTPClient();ftpClient.setRemoteAddr(InetAddress.getByName(host));ftpClient.setControlPort(port);ftpClient.setTimeout(4000);ftpClient.connect();try {Thread.sleep(200);} catch (InterruptedException e) {e.printStackTrace();}ftpClient.login(username, (pw));ftpClient.chdir(root);JobHandler.releaseFTPLock();} catch (UnknownHostException e) {e.printStackTrace();return e.getMessage();} catch (FTPException e) {e.printStackTrace();return e.getMessage();} catch (IOException e) {e.printStackTrace();return e.getMessage();}try {ftpClient.quit();} catch (IOException e) {e.printStackTrace();return e.getMessage();} catch (FTPException e) {e.printStackTrace();return e.getMessage();}return null;}public static void putWithUserSettings(String from, String to, String renameTo, boolean binary, IProgressMonitor monitor) {if (monitor != null && monitor.isCanceled()) {return;}FTPHolder ftpHolder = new FTPHolder(from, to, renameTo, binary);synchedSet.add(ftpHolder);int ftpqueuesize = PrefPageOne.getIntValue(CONSTANTS.PREF_FTPQUEUE);if (synchedSet.size() >= ftpqueuesize) {JobHandler.aquireFTPLock();try {ftpClient = new FTPClient();ftpClient.setRemoteAddr(InetAddress.getByName(PrefPageOne.getValue(CONSTANTS.PREF_HOST)));ftpClient.setControlPort(PrefPageOne.getIntValue(CONSTANTS.PREF_FTPPORT));ftpClient.connect();try {Thread.sleep(1500);} catch (InterruptedException e) {e.printStackTrace();}ftpClient.login((PrefPageOne.getValue(CONSTANTS.PREF_USERNAME)), FTPUtils.decrypt(PrefPageOne.getValue(CONSTANTS.PREF_PASSWORD)));try {Thread.sleep(1000);} catch (InterruptedException e) {e.printStackTrace();}if (monitor != null && monitor.isCanceled()) {JobHandler.releaseFTPLock();ftpClient.quit();return;}synchronized (synchedSet) {for (Iterator iter = synchedSet.iterator(); iter.hasNext(); ) {if (monitor != null && monitor.isCanceled()) {JobHandler.releaseFTPLock();ftpClient.quit();return;}Thread.yield();FTPHolder element = (FTPHolder) iter.next();if (element.binary) {ftpClient.setType(FTPTransferType.BINARY);} else {ftpClient.setType(FTPTransferType.ASCII);}ftpClient.put(element.from, element.to);if (element.renameTo != null) {try {ftpClient.delete(element.renameTo);} catch (Exception e) {}ftpClient.rename(element.to, element.renameTo);log.info(""RENAME: "" + element.to + ""To: "" + element.renameTo);}}synchedSet.clear();}JobHandler.releaseFTPLock();ftpClient.quit();} catch (UnknownHostException e) {e.printStackTrace();} catch (FTPException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}}}public static void polishOff(IProgressMonitor monitor, String from, String to, String renameTo) {if (monitor != null && monitor.isCanceled()) {return;}try {ftpClient = new FTPClient();ftpClient.setRemoteAddr(InetAddress.getByName(PrefPageOne.getValue(CONSTANTS.PREF_HOST)));ftpClient.setControlPort(PrefPageOne.getIntValue(CONSTANTS.PREF_FTPPORT));ftpClient.connect();try {Thread.sleep(1000);} catch (InterruptedException e) {e.printStackTrace();}ftpClient.login((PrefPageOne.getValue(CONSTANTS.PREF_USERNAME)), FTPUtils.decrypt(PrefPageOne.getValue(CONSTANTS.PREF_PASSWORD)));try {Thread.sleep(1000);} catch (InterruptedException e) {e.printStackTrace();}if (from != null) {FTPHolder ftpHolder = new FTPHolder(from, to, renameTo, false);synchedSet.add(ftpHolder);}JobHandler.aquireFTPLock();for (Iterator iter = synchedSet.iterator(); iter.hasNext(); ) {if (monitor != null && monitor.isCanceled()) {JobHandler.releaseFTPLock();ftpClient.quit();return;}Thread.yield();FTPHolder element = (FTPHolder) iter.next();ftpClient.setType(FTPTransferType.ASCII);ftpClient.put(element.from, element.to);if (element.renameTo != null) {try {ftpClient.delete(element.renameTo);} catch (Exception e) {}ftpClient.rename(element.to, element.renameTo);log.info(""RENAME: "" + element.to + ""To: "" + element.renameTo);}}JobHandler.releaseFTPLock();ftpClient.quit();} catch (UnknownHostException e) {e.printStackTrace();} catch (FTPException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}synchedSet.clear();}protected void generateDiffResults(File outFile) throws IOException {FileOutputStream outStream = new FileOutputStream(outFile);BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset));intlWrite(out, HTML_STRICT_DOCTYPE + ""<html><head><title>${Report.Title}</title>\n"" + ""<meta http-equiv=\""Content-Type\"""" + "" content=\""text/html; charset="" + outputCharset + ""\"">\n"" + ""<style type=\""text/css\"">\n"");out.write(LOCDiff.getCssText());writeCustomStyleInfo(out);out.write(""</style></head>\n"" + ""<body>\n"" + ""<div>\n"");if (addedTable.length() > 0) {out.write(""<table border>"");intlWrite(out, getAddedTableHeader());out.write(addedTable.toString());out.write(""</table><br><br>"");}if (modifiedTable.length() > 0) {out.write(""<table border>"");intlWrite(out, getModifiedTableHeader());out.write(modifiedTable.toString());out.write(""</table><br><br>"");}if (deletedTable.length() > 0) {out.write(""<table border>"");intlWrite(out, getDeletedTableHeader());out.write(deletedTable.toString());out.write(""</table><br><br>"");}if (unchangedTable.length() > 0) {out.write(""<table border>"");intlWrite(out, getUnchangedTableHeader());out.write(unchangedTable.toString());out.write(""</table><br><br>"");}writeSummaryTable(out);out.write(""</div>"");redlinesOut.close();out.flush();InputStream redlines = new FileInputStream(redlinesTempFile);byte[] buffer = new byte[4096];int bytesRead;while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead);outStream.write(""</BODY></HTML>"".getBytes());outStream.close();}public String openFileAsText(String resource) throws IOException {StringWriter wtr = new StringWriter();InputStreamReader rdr = new InputStreamReader(openFile(resource));try {IOUtils.copy(rdr, wtr);} finally {IOUtils.closeQuietly(rdr);}return wtr.toString();}public void writeFile(String resource, InputStream is) throws IOException {File f = prepareFsReferenceAsFile(resource);FileOutputStream fos = new FileOutputStream(f);BufferedOutputStream bos = new BufferedOutputStream(fos);try {IOUtils.copy(is, bos);} finally {IOUtils.closeQuietly(is);IOUtils.closeQuietly(bos);}}"	5
"@SuppressWarnings(""deprecation"")private void loadClassFilesFromJar() {IPackageFragmentRoot packageFragmentRoot = (IPackageFragmentRoot) getJavaElement();File jarFile = packageFragmentRoot.getResource().getLocation().toFile();try {URL url = jarFile.toURL();URLConnection u = url.openConnection();ZipInputStream inputStream = new ZipInputStream(u.getInputStream());ZipEntry entry = inputStream.getNextEntry();while (null != entry) {if (entry.getName().endsWith("".class"")) {ClassParser parser = new ClassParser(inputStream, entry.getName());Repository.addClass(parser.parse());}entry = inputStream.getNextEntry();}} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}}protected static void copyDeleting(File source, File dest) throws IOException {byte[] buf = new byte[8 * 1024];FileInputStream in = new FileInputStream(source);try {FileOutputStream out = new FileOutputStream(dest);try {int count;while ((count = in.read(buf)) >= 0) out.write(buf, 0, count);} finally {out.close();}} finally {in.close();}}public void loadFromURLPath(String type, URL urlPath, HashMap parentAttributes) throws IOException {this.urlPath = urlPath;this.type = type;JmeBinaryReader jbr = new JmeBinaryReader();setProperties(jbr, parentAttributes);InputStream loaderInput = urlPath.openStream();if (type.equals(""xml"")) {XMLtoBinary xtb = new XMLtoBinary();ByteArrayOutputStream BO = new ByteArrayOutputStream();xtb.sendXMLtoBinary(loaderInput, BO);loaderInput = new ByteArrayInputStream(BO.toByteArray());} else if (!type.equals(""binary"")) throw new IOException(""Unknown LoaderNode flag: "" + type);jbr.loadBinaryFormat(this, loaderInput);}private void sortMasters() {masterCounter = 0;for (int i = 0; i < maxID; i++) {if (users[i].getMasterPoints() > 0) {masterHandleList[masterCounter] = users[i].getHandle();masterPointsList[masterCounter] = users[i].getMasterPoints();masterCounter = masterCounter + 1;}}for (int i = masterCounter; --i >= 0; ) {for (int j = 0; j < i; j++) {if (masterPointsList[j] > masterPointsList[j + 1]) {int tempp = masterPointsList[j];String temppstring = masterHandleList[j];masterPointsList[j] = masterPointsList[j + 1];masterHandleList[j] = masterHandleList[j + 1];masterPointsList[j + 1] = tempp;masterHandleList[j + 1] = temppstring;}}}}protected void truncate(final File file) {LogLog.debug(""Compression of file: "" + file.getAbsolutePath() + "" started."");if (FileUtils.isFileOlder(file, ManagementFactory.getRuntimeMXBean().getStartTime())) {final File backupRoot = new File(this.getBackupDir());if (!backupRoot.exists() && !backupRoot.mkdirs()) {throw new AppenderInitializationError(""Can't create backup dir for backup storage"");}SimpleDateFormat df;try {df = new SimpleDateFormat(this.getBackupDateFormat());} catch (final Exception e) {throw new AppenderInitializationError(""Invalid date formate for backup files: "" + this.getBackupDateFormat(), e);}final String date = df.format(new Date(file.lastModified()));final File zipFile = new File(backupRoot, file.getName() + ""."" + date + "".zip"");ZipOutputStream zos = null;FileInputStream fis = null;try {zos = new ZipOutputStream(new FileOutputStream(zipFile));final ZipEntry entry = new ZipEntry(file.getName());entry.setMethod(ZipEntry.DEFLATED);entry.setCrc(FileUtils.checksumCRC32(file));zos.putNextEntry(entry);fis = FileUtils.openInputStream(file);final byte[] buffer = new byte[1024];int readed;while ((readed = fis.read(buffer)) != -1) {zos.write(buffer, 0, readed);}} catch (final Exception e) {throw new AppenderInitializationError(""Can't create zip file"", e);} finally {if (zos != null) {try {zos.close();} catch (final IOException e) {LogLog.warn(""Can't close zip file"", e);}}if (fis != null) {try {fis.close();} catch (final IOException e) {LogLog.warn(""Can't close zipped file"", e);}}}if (!file.delete()) {throw new AppenderInitializationError(""Can't delete old log file "" + file.getAbsolutePath());}}}public void run() {if (saveAsDialog == null) {saveAsDialog = new FileDialog(window.getShell(), SWT.SAVE);saveAsDialog.setFilterExtensions(saveAsTypes);}String outputFile = saveAsDialog.open();if (outputFile != null) {Object inputFile = DataSourceSingleton.getInstance().getContainer().getWrapped();InputStream in;try {if (inputFile instanceof URL) in = ((URL) inputFile).openStream(); else in = new FileInputStream((File) inputFile);OutputStream out = new FileOutputStream(outputFile);if (outputFile.endsWith(""xml"")) {int c;while ((c = in.read()) != -1) out.write(c);} else {PrintWriter pw = new PrintWriter(out);Element data = DataSourceSingleton.getInstance().getRawData();writeTextFile(data, pw, -1);pw.close();}in.close();out.close();} catch (MalformedURLException e1) {} catch (IOException e) {}}}@Overridepublic void onCreate(Bundle savedInstanceState) {super.onCreate(savedInstanceState);setContentView(R.layout.cautaprodus);HttpGet request = new HttpGet(SERVICE_URI + ""/json/getproducts"");request.setHeader(""Accept"", ""application/json"");request.setHeader(""Content-type"", ""application/json"");DefaultHttpClient httpClient = new DefaultHttpClient();String theString = new String("""");try {HttpResponse response = httpClient.execute(request);HttpEntity responseEntity = response.getEntity();InputStream stream = responseEntity.getContent();BufferedReader reader = new BufferedReader(new InputStreamReader(stream));Vector<String> vectorOfStrings = new Vector<String>();String tempString = new String();StringBuilder builder = new StringBuilder();String line;while ((line = reader.readLine()) != null) {builder.append(line);}stream.close();theString = builder.toString();JSONObject json = new JSONObject(theString);Log.i(""_GetPerson_"", ""<jsonobject>\n"" + json.toString() + ""\n</jsonobject>"");JSONArray nameArray = json.getJSONArray(""getProductsResult"");for (int i = 0; i < nameArray.length(); i++) {Log.i(""_GetProducts_"", ""<ID"" + i + "">"" + nameArray.getJSONObject(i).getString(""ID"") + ""</ID"" + i + "">\n"");Log.i(""_GetProducts_"", ""<Name"" + i + "">"" + nameArray.getJSONObject(i).getString(""Name"") + ""</Name"" + i + "">\n"");Log.i(""_GetProducts_"", ""<Price"" + i + "">"" + nameArray.getJSONObject(i).getString(""Price"") + ""</Price"" + i + "">\n"");Log.i(""_GetProducts_"", ""<Symbol"" + i + "">"" + nameArray.getJSONObject(i).getString(""Symbol"") + ""</Symbol"" + i + "">\n"");tempString = nameArray.getJSONObject(i).getString(""Name"") + ""\n"" + nameArray.getJSONObject(i).getString(""Price"") + ""\n"" + nameArray.getJSONObject(i).getString(""Symbol"");vectorOfStrings.add(new String(tempString));}int orderCount = vectorOfStrings.size();String[] orderTimeStamps = new String[orderCount];vectorOfStrings.copyInto(orderTimeStamps);setListAdapter(new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, orderTimeStamps));} catch (Exception e) {e.printStackTrace();}}public void convert(File src, File dest) throws IOException {InputStream in = new BufferedInputStream(new FileInputStream(src));DcmParser p = pfact.newDcmParser(in);Dataset ds = fact.newDataset();p.setDcmHandler(ds.getDcmHandler());try {FileFormat format = p.detectFileFormat();if (format != FileFormat.ACRNEMA_STREAM) {System.out.println(""\n"" + src + "": not an ACRNEMA stream!"");return;}p.parseDcmFile(format, Tags.PixelData);if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {System.out.println(""\n"" + src + "": contains UIDs!"" + "" => probable already DICOM - do not convert"");return;}boolean hasPixelData = p.getReadTag() == Tags.PixelData;boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;int pxlen = p.getReadLength();if (hasPixelData) {if (inflate) {ds.putUS(Tags.BitsAllocated, 16);pxlen = pxlen * 4 / 3;}if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {System.out.println(""\n"" + src + "": mismatch pixel data length!"" + "" => do not convert"");return;}}ds.putUI(Tags.StudyInstanceUID, uid(studyUID));ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));ds.putUI(Tags.SOPInstanceUID, uid(instUID));ds.putUI(Tags.SOPClassUID, classUID);if (!ds.contains(Tags.NumberOfSamples)) {ds.putUS(Tags.NumberOfSamples, 1);}if (!ds.contains(Tags.PhotometricInterpretation)) {ds.putCS(Tags.PhotometricInterpretation, ""MONOCHROME2"");}if (fmi) {ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));}OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));try {} finally {ds.writeFile(out, encodeParam());if (hasPixelData) {if (!skipGroupLen) {out.write(PXDATA_GROUPLEN);int grlen = pxlen + 8;out.write((byte) grlen);out.write((byte) (grlen >> 8));out.write((byte) (grlen >> 16));out.write((byte) (grlen >> 24));}out.write(PXDATA_TAG);out.write((byte) pxlen);out.write((byte) (pxlen >> 8));out.write((byte) (pxlen >> 16));out.write((byte) (pxlen >> 24));}if (inflate) {int b2, b3;for (; pxlen > 0; pxlen -= 3) {out.write(in.read());b2 = in.read();b3 = in.read();out.write(b2 & 0x0f);out.write(b2 >> 4 | ((b3 & 0x0f) << 4));out.write(b3 >> 4);}} else {for (; pxlen > 0; --pxlen) {out.write(in.read());}}out.close();}System.out.print('.');} finally {in.close();}}public void convert(File src, File dest) throws IOException {InputStream in = new BufferedInputStream(new FileInputStream(src));DcmParser p = pfact.newDcmParser(in);Dataset ds = fact.newDataset();p.setDcmHandler(ds.getDcmHandler());try {FileFormat format = p.detectFileFormat();if (format != FileFormat.ACRNEMA_STREAM) {System.out.println(""\n"" + src + "": not an ACRNEMA stream!"");return;}p.parseDcmFile(format, Tags.PixelData);if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {System.out.println(""\n"" + src + "": contains UIDs!"" + "" => probable already DICOM - do not convert"");return;}boolean hasPixelData = p.getReadTag() == Tags.PixelData;boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;int pxlen = p.getReadLength();if (hasPixelData) {if (inflate) {ds.putUS(Tags.BitsAllocated, 16);pxlen = pxlen * 4 / 3;}if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {System.out.println(""\n"" + src + "": mismatch pixel data length!"" + "" => do not convert"");return;}}ds.putUI(Tags.StudyInstanceUID, uid(studyUID));ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));ds.putUI(Tags.SOPInstanceUID, uid(instUID));ds.putUI(Tags.SOPClassUID, classUID);if (!ds.contains(Tags.NumberOfSamples)) {ds.putUS(Tags.NumberOfSamples, 1);}if (!ds.contains(Tags.PhotometricInterpretation)) {ds.putCS(Tags.PhotometricInterpretation, ""MONOCHROME2"");}if (fmi) {ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));}OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));try {} finally {ds.writeFile(out, encodeParam());if (hasPixelData) {if (!skipGroupLen) {out.write(PXDATA_GROUPLEN);int grlen = pxlen + 8;out.write((byte) grlen);out.write((byte) (grlen >> 8));out.write((byte) (grlen >> 16));out.write((byte) (grlen >> 24));}out.write(PXDATA_TAG);out.write((byte) pxlen);out.write((byte) (pxlen >> 8));out.write((byte) (pxlen >> 16));out.write((byte) (pxlen >> 24));}if (inflate) {int b2, b3;for (; pxlen > 0; pxlen -= 3) {out.write(in.read());b2 = in.read();b3 = in.read();out.write(b2 & 0x0f);out.write(b2 >> 4 | ((b3 & 0x0f) << 4));out.write(b3 >> 4);}} else {for (; pxlen > 0; --pxlen) {out.write(in.read());}}out.close();}System.out.print('.');} finally {in.close();}}public void postData(Reader data, Writer output) {HttpURLConnection urlc = null;try {urlc = (HttpURLConnection) solrUrl.openConnection();try {urlc.setRequestMethod(""POST"");} catch (ProtocolException e) {throw new PostException(""Shouldn't happen: HttpURLConnection doesn't support POST??"", e);}urlc.setDoOutput(true);urlc.setDoInput(true);urlc.setUseCaches(false);urlc.setAllowUserInteraction(false);urlc.setRequestProperty(""Content-type"", ""text/xml; charset="" + POST_ENCODING);OutputStream out = urlc.getOutputStream();try {Writer writer = new OutputStreamWriter(out, POST_ENCODING);pipe(data, writer);writer.close();} catch (IOException e) {throw new PostException(""IOException while posting data"", e);} finally {if (out != null) out.close();}InputStream in = urlc.getInputStream();try {Reader reader = new InputStreamReader(in);pipe(reader, output);reader.close();} catch (IOException e) {throw new PostException(""IOException while reading response"", e);} finally {if (in != null) in.close();}} catch (IOException e) {try {fatal(""Solr returned an error: "" + urlc.getResponseMessage());} catch (IOException f) {}fatal(""Connection error (is Solr running at "" + solrUrl + "" ?): "" + e);} finally {if (urlc != null) urlc.disconnect();}}"	5
"private static Image tryLoadImageFromFile(String filename, String path, int width, int height) {Image image = null;try {URL url;url = new URL(""file:"" + path + pathSeparator + fixFilename(filename));if (url.openStream() != null) {image = Toolkit.getDefaultToolkit().getImage(url);}} catch (MalformedURLException e) {} catch (IOException e) {}if (image != null) {return image.getScaledInstance(width, height, java.awt.Image.SCALE_SMOOTH);} else {return null;}}private static ImageIcon tryLoadImageIconFromResource(String filename, String path, int width, int height) {ImageIcon icon = null;try {URL url = cl.getResource(path + pathSeparator + fixFilename(filename));if (url != null && url.openStream() != null) {icon = new ImageIcon(url);}} catch (Exception e) {}if (icon == null) {return null;}if ((icon.getIconWidth() == width) && (icon.getIconHeight() == height)) {return icon;} else {return new ImageIcon(icon.getImage().getScaledInstance(width, height, java.awt.Image.SCALE_SMOOTH));}}public void actionPerformed(ActionEvent e) {if (path.compareTo("""") != 0) {imageName = (path.substring(path.lastIndexOf(File.separator) + 1, path.length()));String name = imageName.substring(0, imageName.lastIndexOf('.'));String extension = imageName.substring(imageName.lastIndexOf('.') + 1, imageName.length());File imageFile = new File(path);directoryPath = ""images"" + File.separator + imageName.substring(0, 1).toUpperCase();File directory = new File(directoryPath);directory.mkdirs();imagePath = ""."" + File.separator + ""images"" + File.separator + imageName.substring(0, 1).toUpperCase() + File.separator + imageName;File newFile = new File(imagePath);if (myImagesBehaviour.equals(TLanguage.getString(""TIGManageGalleryDialog.REPLACE_IMAGE""))) {Vector<Vector<String>> aux = TIGDataBase.imageSearchByName(name);if (aux.size() != 0) {int idImage = TIGDataBase.imageKeySearchName(name);TIGDataBase.deleteAsociatedOfImage(idImage);}}if (myImagesBehaviour.equals(TLanguage.getString(""TIGManageGalleryDialog.ADD_IMAGE""))) {int i = 1;while (newFile.exists()) {imagePath = ""."" + File.separator + ""images"" + File.separator + imageName.substring(0, 1).toUpperCase() + File.separator + imageName.substring(0, imageName.lastIndexOf('.')) + ""_"" + i + imageName.substring(imageName.lastIndexOf('.'), imageName.length());name = name + ""_"" + i;newFile = new File(imagePath);i++;}}imagePathThumb = (imagePath.substring(0, imagePath.lastIndexOf("".""))).concat(""_th.jpg"");imageName = name + ""."" + extension;try {FileChannel srcChannel = new FileInputStream(path).getChannel();FileChannel dstChannel = new FileOutputStream(imagePath).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (IOException exc) {System.out.println(exc.getMessage());System.out.println(exc.toString());}TIGDataBase.insertDB(theConcepts, imageName, imageName.substring(0, imageName.lastIndexOf('.')));image = null;if (imageFile != null) {if (TFileUtils.isJAIRequired(imageFile)) {RenderedOp src = JAI.create(""fileload"", imageFile.getAbsolutePath());BufferedImage bufferedImage = src.getAsBufferedImage();image = new ImageIcon(bufferedImage);} else {image = new ImageIcon(imageFile.getAbsolutePath());}if (image.getImageLoadStatus() == MediaTracker.ERRORED) {int choosenOption = JOptionPane.NO_OPTION;choosenOption = JOptionPane.showConfirmDialog(null, TLanguage.getString(""TIGInsertImageAction.MESSAGE""), TLanguage.getString(""TIGInsertImageAction.NAME""), JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);} else {createThumbnail();}}}}private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException {if (m_obj.getAuditRecords().size() == 0) {return;}String dsId = m_pid.toURI() + ""/AUDIT"";String dsvId = dsId + ""/"" + DateUtility.convertDateToString(m_obj.getCreateDate());Entry dsEntry = m_feed.addEntry();dsEntry.setId(dsId);dsEntry.setTitle(""AUDIT"");dsEntry.setUpdated(m_obj.getCreateDate());dsEntry.addCategory(MODEL.STATE.uri, ""A"", null);dsEntry.addCategory(MODEL.CONTROL_GROUP.uri, ""X"", null);dsEntry.addCategory(MODEL.VERSIONABLE.uri, ""false"", null);dsEntry.addLink(dsvId, Link.REL_ALTERNATE);Entry dsvEntry = m_feed.addEntry();dsvEntry.setId(dsvId);dsvEntry.setTitle(""AUDIT.0"");dsvEntry.setUpdated(m_obj.getCreateDate());ThreadHelper.addInReplyTo(dsvEntry, m_pid.toURI() + ""/AUDIT"");dsvEntry.addCategory(MODEL.FORMAT_URI.uri, AUDIT1_0.uri, null);dsvEntry.addCategory(MODEL.LABEL.uri, ""Audit Trail for this object"", null);if (m_format.equals(ATOM_ZIP1_1)) {String name = ""AUDIT.0.xml"";try {m_zout.putNextEntry(new ZipEntry(name));Reader r = new StringReader(DOTranslationUtility.getAuditTrail(m_obj));IOUtils.copy(r, m_zout, m_encoding);m_zout.closeEntry();r.close();} catch (IOException e) {throw new StreamIOException(e.getMessage(), e);}IRI iri = new IRI(name);dsvEntry.setSummary(""AUDIT.0"");dsvEntry.setContent(iri, ""text/xml"");} else {dsvEntry.setContent(DOTranslationUtility.getAuditTrail(m_obj), ""text/xml"");}}private void setInlineXML(Entry entry, DatastreamXMLMetadata ds) throws UnsupportedEncodingException, StreamIOException {String content;if (m_obj.hasContentModel(Models.SERVICE_DEPLOYMENT_3_0) && (ds.DatastreamID.equals(""SERVICE-PROFILE"") || ds.DatastreamID.equals(""WSDL""))) {content = DOTranslationUtility.normalizeInlineXML(new String(ds.xmlContent, m_encoding), m_transContext);} else {content = new String(ds.xmlContent, m_encoding);}if (m_format.equals(ATOM_ZIP1_1)) {String name = ds.DSVersionID + "".xml"";try {m_zout.putNextEntry(new ZipEntry(name));InputStream is = new ByteArrayInputStream(content.getBytes(m_encoding));IOUtils.copy(is, m_zout);m_zout.closeEntry();is.close();} catch (IOException e) {throw new StreamIOException(e.getMessage(), e);}IRI iri = new IRI(name);entry.setSummary(ds.DSVersionID);entry.setContent(iri, ds.DSMIME);} else {entry.setContent(content, ds.DSMIME);}}private void setManagedContent(Entry entry, Datastream vds) throws StreamIOException {if (m_transContext == DOTranslationUtility.SERIALIZE_EXPORT_ARCHIVE && !m_format.equals(ATOM_ZIP1_1)) {String mimeType = vds.DSMIME;if (MimeTypeHelper.isText(mimeType) || MimeTypeHelper.isXml(mimeType)) {try {entry.setContent(IOUtils.toString(vds.getContentStream(), m_encoding), mimeType);} catch (IOException e) {throw new StreamIOException(e.getMessage(), e);}} else {entry.setContent(vds.getContentStream(), mimeType);}} else {String dsLocation;IRI iri;if (m_format.equals(ATOM_ZIP1_1) && m_transContext != DOTranslationUtility.AS_IS) {dsLocation = vds.DSVersionID + ""."" + MimeTypeUtils.fileExtensionForMIMEType(vds.DSMIME);try {m_zout.putNextEntry(new ZipEntry(dsLocation));InputStream is = vds.getContentStream();IOUtils.copy(is, m_zout);is.close();m_zout.closeEntry();} catch (IOException e) {throw new StreamIOException(e.getMessage(), e);}} else {dsLocation = StreamUtility.enc(DOTranslationUtility.normalizeDSLocationURLs(m_obj.getPid(), vds, m_transContext).DSLocation);}iri = new IRI(dsLocation);entry.setSummary(vds.DSVersionID);entry.setContent(iri, vds.DSMIME);}}public static URLConnection createConnection(URL url) throws java.io.IOException {URLConnection urlConn = url.openConnection();if (urlConn instanceof HttpURLConnection) {HttpURLConnection httpConn = (HttpURLConnection) urlConn;httpConn.setRequestMethod(""POST"");}urlConn.setDoInput(true);urlConn.setDoOutput(true);urlConn.setUseCaches(false);urlConn.setDefaultUseCaches(false);return urlConn;}private static void generateGIF(Connection con, String category, String area_code, String topic_code, String timeseries, String diff_timeseries, Calendar time, String area_label, String raster_label, String image_label, String note, Rectangle2D bounds, Rectangle2D raster_bounds, String source_filename, String diff_filename, String legend_filename, String output_filename, int output_maximum_size) throws SQLException, IOException {System.out.println(""ImageCropper.generateGIF begin"");MapContext map_context = new MapContext(""test"", new Configuration());try {Map map = new Map(map_context, area_label, new Configuration());map.setCoordSys(ProjectionCategories.default_coordinate_system);map.setPatternOutline(new XPatternOutline(new XPatternPaint(Color.white)));String type = null;RasterLayer rlayer = getRasterLayer(map, raster_label, getLinuxPathEquivalent(source_filename), getLinuxPathEquivalent(diff_filename), type, getLinuxPathEquivalent(legend_filename));map.addLayer(rlayer, true);map.setBounds2DImage(bounds, true);Dimension image_dim = null;image_dim = new Dimension((int) rlayer.raster.getDeviceBounds().getWidth() + 1, (int) rlayer.raster.getDeviceBounds().getHeight() + 1);if (output_maximum_size > 0) {double width_factor = image_dim.getWidth() / output_maximum_size;double height_factor = image_dim.getHeight() / output_maximum_size;double factor = Math.max(width_factor, height_factor);if (factor > 1.0) {image_dim.setSize(image_dim.getWidth() / factor, image_dim.getHeight() / factor);}}map.setImageDimension(image_dim);map.scale();image_dim = new Dimension((int) map.getBounds2DImage().getWidth(), (int) map.getBounds2DImage().getHeight());Image image = null;Graphics gr = null;image = ImageCreator.getImage(image_dim);gr = image.getGraphics();try {map.paint(gr);} catch (Exception e) {Debug.println(""map.paint error: "" + e.getMessage());}String gif_filename = """";try {gif_filename = formatPath(category, timeseries, output_filename);new File(new_filename).mkdirs();new GifEncoder(image, new FileOutputStream(gif_filename)).encode();} catch (IOException e) {Debug.println(""ImageCropper.generateGIF e: "" + e.getMessage());throw new IOException(""GenerateGIF.IOException: "" + e);}PreparedStatement pstmt = null;try {String delete_raster = ""delete raster_layer where "" + ""label='"" + gif_name.trim() + ""' and category='"" + category.trim() + ""' and area_code=' "" + area_code.trim() + ""'"";pstmt = con.prepareStatement(delete_raster);boolean del = pstmt.execute();pstmt.close();String insert_raster = ""insert into RASTER_LAYER "" + ""values(RASTER_LAYER_ID.nextval, ?, ?, ?, "" + ""?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "" + ""SYSDATE, ?)"";pstmt = con.prepareStatement(insert_raster);pstmt.setString(1, gif_name);pstmt.setString(2, category);pstmt.setString(3, area_code);pstmt.setString(4, topic_code);if (time == null) {pstmt.setNull(5, java.sql.Types.DATE);} else {pstmt.setDate(5, new java.sql.Date(time.getTimeInMillis()));}pstmt.setString(6, timeseries);pstmt.setString(7, gif_filename);pstmt.setNull(8, java.sql.Types.INTEGER);pstmt.setNull(9, java.sql.Types.INTEGER);pstmt.setDouble(10, raster_bounds.getX());pstmt.setDouble(11, raster_bounds.getY());pstmt.setDouble(12, raster_bounds.getWidth());pstmt.setDouble(13, raster_bounds.getHeight());pstmt.setString(14, note);int sequence = 0;if (gif_name.endsWith(""DP"")) {sequence = 1;} else if (gif_name.endsWith(""DY"")) {sequence = 2;} else if (gif_name.endsWith(""DA"")) {sequence = 3;}pstmt.setInt(15, sequence);pstmt.executeUpdate();} catch (SQLException e) {Debug.println(""SQLException occurred e: "" + e.getMessage());con.rollback();throw new SQLException(""GenerateGIF.SQLException: "" + e);} finally {pstmt.close();}} catch (Exception e) {Debug.println(""ImageCropper.generateGIF e: "" + e.getMessage());}System.out.println(""ImageCropper.generateGIF end"");}public EFaxResult sendFax(ototype.SendFaxWrapper parameters) {EFaxResult efr = new EFaxResult();if (!validFaxUser(parameters.getUserID(), parameters.getPassWord())) {efr.setResultCode(211);return efr;}Connection conn = null;String faxKey = getSegquence(""t_fax_send"") + """";String sql = ""insert into t_fax_send(faxKey,userID,appcode,sendername,"" + ""sendernumber,sendercompany,sendtime,accountId, userId2, PID, moduleId, CDRType) values(?,?,?,?,?,?,?,?,?,?,?,?)"";Fax fax = parameters.getFax();FaxContactor sender = fax.getSender();FaxContactor[] receiver = fax.getReceiver();try {conn = this.getJdbcTemplate().getDataSource().getConnection();conn.setAutoCommit(false);PreparedStatement pstmt = conn.prepareStatement(sql);pstmt.setString(1, faxKey);pstmt.setString(2, parameters.getUserID());pstmt.setString(3, parameters.getAppCode());pstmt.setString(4, sender.getContactor());pstmt.setString(5, sender.getFaxNumber());pstmt.setString(6, sender.getCompany());pstmt.setString(7, fax.getSendTime());pstmt.setString(8, parameters.getAccountId());pstmt.setString(9, parameters.getUserId());pstmt.setString(10, parameters.getPID());pstmt.setInt(11, parameters.getModuleId());pstmt.setInt(12, parameters.getCDRType());pstmt.executeUpdate();sql = ""insert into t_fax_contactor(faxKey,contactorID,contactor,faxnumber,company) values(?,?,?,?,?)"";pstmt = conn.prepareStatement(sql);for (int k = 0; k < receiver.length; k++) {pstmt.setString(1, faxKey);pstmt.setString(2, receiver[k].getContactorID());pstmt.setString(3, receiver[k].getContactor());pstmt.setString(4, receiver[k].getFaxNumber());pstmt.setString(5, receiver[k].getCompany());pstmt.addBatch();}pstmt.executeBatch();sql = ""insert into t_fax_file(faxKey,fileID,filename,filetype,fileurl,faxpages) values(?,?,?,?,?,?)"";pstmt = conn.prepareStatement(sql);FaxFile[] files = fax.getFiles();for (int h = 0; h < files.length; h++) {String fileID = getSegquence(""t_Fax_file"") + """";pstmt.setString(1, faxKey);pstmt.setString(2, fileID);pstmt.setString(3, files[h].getFileName());pstmt.setString(4, files[h].getFileType());pstmt.setString(5, files[h].getFileURL());pstmt.setInt(6, files[h].getFaxPages());Service.writeByteFile(files[h].getFile(), fileID);pstmt.addBatch();}pstmt.executeBatch();conn.commit();efr.setResultCode(100);efr.setResultInfo(faxKey);} catch (SQLException e) {efr.setResultCode(200);try {conn.rollback();} catch (Exception e1) {logger.error(""Error validFaxUser"", e1);}logger.error(""Error validFaxUser"", e);} catch (IOException e) {efr.setResultCode(200);logger.error(""Error write file on sendfax"", e);} finally {if (conn != null) {try {conn.close();} catch (Exception e) {logger.error(""Error sendFax on close conn"", e);}}}return efr;}protected void copyFile(String inputFilePath, String outputFilePath) throws GenerationException {String from = getTemplateDir() + inputFilePath;try {logger.debug(""Copying from "" + from + "" to "" + outputFilePath);InputStream inputStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(from);if (inputStream == null) {throw new GenerationException(""Source file not found: "" + from);}FileOutputStream outputStream = new FileOutputStream(new File(outputFilePath));IOUtils.copy(inputStream, outputStream);inputStream.close();outputStream.close();} catch (Exception e) {throw new GenerationException(""Error while copying file: "" + from, e);}}"	5
"public static void copyFile(String file1, String file2) {File filedata1 = new java.io.File(file1);if (filedata1.exists()) {try {BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(file2));BufferedInputStream in = new BufferedInputStream(new FileInputStream(file1));try {int read;while ((read = in.read()) != -1) {out.write(read);}out.flush();} catch (IOException ex1) {ex1.printStackTrace();} finally {out.close();in.close();}} catch (Exception ex) {ex.printStackTrace();}}}public void ftpUpload() {FTPClient ftpclient = null;InputStream is = null;try {ftpclient = new FTPClient();ftpclient.connect(host, port);if (logger.isDebugEnabled()) {logger.debug(""FTP连接远程服务器："" + host);}ftpclient.login(user, password);if (logger.isDebugEnabled()) {logger.debug(""登陆用户："" + user);}ftpclient.setFileType(FTP.BINARY_FILE_TYPE);ftpclient.changeWorkingDirectory(remotePath);is = new FileInputStream(localPath + File.separator + filename);ftpclient.storeFile(filename, is);logger.info(""上传文件结束...路径："" + remotePath + ""，文件名："" + filename);is.close();ftpclient.logout();} catch (IOException e) {logger.error(""上传文件失败"", e);} finally {if (ftpclient.isConnected()) {try {ftpclient.disconnect();} catch (IOException e) {logger.error(""断开FTP出错"", e);}}ftpclient = null;}}public static ArrayList search(String query) throws Exception {ArrayList list = new ArrayList();String url = ""http://hypem.com/playlist/search/"" + query + ""/xml/1/list.xspf"";HttpURLConnection conn = (HttpURLConnection) (new URL(url)).openConnection();conn.setRequestProperty(""User-Agent"", ""Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"");XmlNode node = XmlLoader.load(conn.getInputStream());XmlNode tracks[] = node.getFirstChild(""trackList"").getChild(""track"");for (int i = 0; i < tracks.length; i++) {String location = decrypt(tracks[i].getFirstChild(""location"").getText());String annotation = tracks[i].getFirstChild(""annotation"").getText().replaceAll(""[\r\n]"", """");list.add(location);System.out.print(""found in Hypem: "");System.out.print(annotation);System.out.print("", "");System.out.println(location);}return list;}public ForkJavaProject(String projectName, Class<?> activatorClass) {this.activatorClass = activatorClass;try {IWorkspaceRoot rootWorkspace = ResourcesPlugin.getWorkspace().getRoot();this.prj = rootWorkspace.getProject(projectName);if (this.prj.exists()) {this.prj.delete(true, true, new NullProgressMonitor());}this.prj.create(new NullProgressMonitor());this.prj.open(new NullProgressMonitor());IProjectDescription description = this.prj.getDescription();description.setNatureIds(new String[] { ""org.eclipse.jdt.core.javanature"" });this.prj.setDescription(description, new NullProgressMonitor());createProjectDir(Constants.Dirs.DIR_MAIN_JAVA);createProjectDir(Constants.Dirs.DIR_CONFIG);createProjectDir(Constants.Dirs.DIR_MAIN_RESOURCES);createProjectDir(Constants.Dirs.DIR_MODELS);createProjectDir(Constants.Dirs.DIR_TESTS_JAVA);createProjectDir(Constants.Dirs.DIR_TESTS_RESOURCES);createProjectDir(Constants.Dirs.DIR_CLASSES);createProjectDir(Constants.Dirs.DIR_LIB);this.prj.refreshLocal(IResource.DEPTH_INFINITE, new NullProgressMonitor());this.javaProject = JavaCore.create(this.prj);if (this.javaProject.exists() && !this.javaProject.isOpen()) {this.javaProject.open(new NullProgressMonitor());}File javaHome = new File(System.getProperty(""java.home""));IPath jreLibPath = new Path(javaHome.getPath()).append(""lib"").append(""rt.jar"");this.javaProject.setOutputLocation(prj.getFolder(Constants.Dirs.DIR_CLASSES).getFullPath(), new NullProgressMonitor());JavaCore.setClasspathVariable(""JRE_LIB"", jreLibPath, new NullProgressMonitor());this.javaProject.setRawClasspath(getProjectClassPath(), new NullProgressMonitor());} catch (CoreException e) {Activator.getDefault().getLog().log(new Status(Status.ERROR, Activator.PLUGIN_ID, ""An exception has been thrown while creating Project"", e));}}private void sendBinaryFile(File file) throws IOException, CVSException {BufferedInputStream in = null;try {in = new BufferedInputStream(new FileInputStream(file));if (m_bCompressFiles) {GZIPOutputStream gzipOut = null;InputStream gzipIn = null;File gzipFile = null;try {gzipFile = File.createTempFile(""javacvs"", ""tmp"");gzipOut = new GZIPOutputStream(new BufferedOutputStream(new FileOutputStream(gzipFile)));int b;while ((b = in.read()) != -1) gzipOut.write((byte) b);gzipOut.close();long gzipLength = gzipFile.length();sendLine(""z"" + Long.toString(gzipLength));gzipIn = new BufferedInputStream(new FileInputStream(gzipFile));for (long i = 0; i < gzipLength; i++) {b = gzipIn.read();if (b == -1) throw new EOFException();m_Out.write((byte) b);}} finally {if (gzipOut != null) gzipOut.close();if (gzipIn != null) gzipIn.close();if (gzipFile != null) gzipFile.delete();}} else {long nLength = file.length();sendLine(Long.toString(nLength));for (long i = 0; i < nLength; i++) {int b = in.read();if (b == -1) throw new EOFException();m_Out.write((byte) b);}}} finally {if (in != null) {try {in.close();} catch (IOException e) {}}}}public boolean openConnection(String url, Properties props) throws SQLException {try {Class.forName(RunConfig.getInstance().getDriverNameJDBC());if (url == null) url = RunConfig.getInstance().getConnectionUrlJDBC();connection = DriverManager.getConnection(url, props);if (statementTable == null) statementTable = new Hashtable<String, PreparedStatement>();if (resultTable == null) resultTable = new Hashtable<String, ResultSet>();clearStatus();return true;} catch (Exception e) {setStatus(e);return false;}}@Overridepublic HostRecord addressForHost(String domainName) throws Exception {String fullUrl = requestUrlStub + domainName;URL url = new URL(fullUrl);HttpURLConnection connection = null;connection = null;connection = (HttpURLConnection) url.openConnection();connection.setRequestMethod(""GET"");connection.setDoOutput(true);connection.setReadTimeout(10000);connection.connect();BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));String inputLine;HostRecord result = new HostRecord(domainName);byte parts[] = new byte[4];while ((inputLine = in.readLine()) != null) {String pat1 = ""<span class='orange'>"";String pat2 = ""</span>"";int index1 = inputLine.indexOf(pat1);int index2 = inputLine.indexOf(pat2);if ((index1 > 0) && (index2 > 0)) {String ipStr = inputLine.substring(index1 + pat1.length(), index2);String[] s = ipStr.split(""\\."");for (int i = 0; i < s.length; i++) parts[i] = (byte) Integer.parseInt(s[i]);}}IPAddress ipAddress = new IPAddress(parts);result.addIpAddress(ipAddress);in.close();return result;}public String doAdd(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {UploadFileForm vo = (UploadFileForm) form;String review = request.getParameter(""review"");String realpath = getServlet().getServletContext().getRealPath(""/"");realpath = realpath.replaceAll(""\\\\"", ""/"");String inforId = request.getParameter(""inforId"");request.setAttribute(""id"", inforId);String str_postFIX = """";int i_p = 0;if (null == review) {FormFile file = vo.getFile();if (file != null) {String rootFilePath = getServlet().getServletContext().getRealPath(request.getContextPath());rootFilePath = (new StringBuilder(String.valueOf(rootFilePath))).append(UploadFileOne.strPath).toString();String strAppend = (new StringBuilder(String.valueOf(UUIDGenerator.nextHex()))).append(UploadFileOne.getFileType(file)).toString();if (file.getFileSize() != 0) {file.getInputStream();String name = file.getFileName();i_p = file.getFileName().lastIndexOf(""."");str_postFIX = file.getFileName().substring(i_p, file.getFileName().length());String fullPath = realpath + ""attach/"" + strAppend + str_postFIX;t_attach attach = new t_attach();attach.setAttach_fullname(fullPath);attach.setAttach_name(name);attach.setInfor_id(Integer.parseInt(inforId));attach.setInsert_day(new Date());attach.setUpdate_day(new Date());t_attach_EditMap attachEdit = new t_attach_EditMap();attachEdit.add(attach);File sysfile = new File(fullPath);if (!sysfile.exists()) {sysfile.createNewFile();}java.io.OutputStream out = new FileOutputStream(sysfile);org.apache.commons.io.IOUtils.copy(file.getInputStream(), out);out.close();}}request.setAttribute(""operating-status"", ""�����ɹ�!  ��ӭ����ʹ�á�"");return ""editsave"";} else {String rootFilePath = getServlet().getServletContext().getRealPath(request.getContextPath());rootFilePath = (new StringBuilder(String.valueOf(rootFilePath))).append(UploadFileOne.strPath).toString();FormFile file = vo.getFile();FormFile file2 = vo.getFile2();FormFile file3 = vo.getFile3();t_infor_review newreview = new t_infor_review();String content = request.getParameter(""content"");newreview.setContent(content);if (null != inforId) newreview.setInfor_id(Integer.parseInt(inforId));newreview.setInsert_day(new Date());UserDetails user = LoginUtils.getLoginUser(request);newreview.setCreate_name(user.getUsercode());if (null != file.getFileName() && !"""".equals(file.getFileName())) {newreview.setAttachname1(file.getFileName());String strAppend1 = (new StringBuilder(String.valueOf(UUIDGenerator.nextHex()))).append(UploadFileOne.getFileType(file)).toString();i_p = file.getFileName().lastIndexOf(""."");str_postFIX = file.getFileName().substring(i_p, file.getFileName().length());newreview.setAttachfullname1(realpath + ""attach/"" + strAppend1 + str_postFIX);saveFile(file.getInputStream(), realpath + ""attach/"" + strAppend1 + str_postFIX);}if (null != file2.getFileName() && !"""".equals(file2.getFileName())) {newreview.setAttachname2(file2.getFileName());String strAppend2 = (new StringBuilder(String.valueOf(UUIDGenerator.nextHex()))).append(UploadFileOne.getFileType(file)).toString();i_p = file2.getFileName().lastIndexOf(""."");str_postFIX = file2.getFileName().substring(i_p, file2.getFileName().length());newreview.setAttachfullname2(realpath + ""attach/"" + strAppend2 + str_postFIX);saveFile(file2.getInputStream(), realpath + ""attach/"" + strAppend2 + str_postFIX);}if (null != file3.getFileName() && !"""".equals(file3.getFileName())) {newreview.setAttachname3(file3.getFileName());String strAppend3 = (new StringBuilder(String.valueOf(UUIDGenerator.nextHex()))).append(UploadFileOne.getFileType(file)).toString();i_p = file3.getFileName().lastIndexOf(""."");str_postFIX = file3.getFileName().substring(i_p, file3.getFileName().length());newreview.setAttachfullname3(realpath + ""attach/"" + strAppend3 + str_postFIX);saveFile(file3.getInputStream(), realpath + ""attach/"" + strAppend3 + str_postFIX);}t_infor_review_EditMap reviewEdit = new t_infor_review_EditMap();reviewEdit.add(newreview);request.setAttribute(""review"", ""1"");return ""aftersave"";}}private void saveFile(InputStream in, String fullPath) {try {File sysfile = new File(fullPath);if (!sysfile.exists()) {sysfile.createNewFile();}java.io.OutputStream out = new FileOutputStream(sysfile);org.apache.commons.io.IOUtils.copy(in, out);out.close();} catch (Exception e) {e.printStackTrace();}}public InputStream getResourceAsStream(String name) {try {URL url = getResource(name);System.out.println(""Loading \"""" + url + ""\""..."");URLConnection urlConnection = url.openConnection();if (urlConnection instanceof HttpURLConnection) {HttpURLConnection httpURLConnection = (HttpURLConnection) urlConnection;httpURLConnection.setFollowRedirects(true);httpURLConnection.setRequestMethod(""GET"");int responseCode = httpURLConnection.getResponseCode();System.out.println(httpURLConnection.getResponseMessage() + "", "" + httpURLConnection.getContentLength() + "" bytes"" + "", "" + new Date(httpURLConnection.getDate()) + "", "" + new Date(httpURLConnection.getLastModified()));if (responseCode != HttpURLConnection.HTTP_OK) {return null;}}return urlConnection.getInputStream();} catch (Exception ex) {ex.printStackTrace();return null;}}"	5
"protected String readFileUsingHttp(String fileUrlName) {String response = """";try {URL url = new URL(fileUrlName);URLConnection connection = url.openConnection();HttpURLConnection httpConn = (HttpURLConnection) connection;httpConn.setRequestProperty(""Content-Type"", ""text/html"");httpConn.setRequestProperty(""Content-Length"", ""0"");httpConn.setRequestMethod(""GET"");httpConn.setDoOutput(true);httpConn.setDoInput(true);httpConn.setAllowUserInteraction(false);InputStreamReader isr = new InputStreamReader(httpConn.getInputStream());BufferedReader in = new BufferedReader(isr);String inputLine = """";while ((inputLine = in.readLine()) != null) {response += inputLine + ""\n"";}if (response.endsWith(""\n"")) {response = response.substring(0, response.length() - 1);}in.close();} catch (Exception x) {x.printStackTrace();}return response;}public static List<ServerInfo> getStartedServers() {List<ServerInfo> infos = new ArrayList<ServerInfo>();try {StringBuilder request = new StringBuilder();request.append(url).append(""/"").append(displayServlet);request.append(""?ingame=1"");URL objUrl = new URL(request.toString());URLConnection urlConnect = objUrl.openConnection();InputStream in = urlConnect.getInputStream();BufferedReader reader = new BufferedReader(new InputStreamReader(in));while (reader.ready()) {String name = reader.readLine();String ip = reader.readLine();int port = Integer.valueOf(reader.readLine());ServerInfo server = new ServerInfo(name, ip, port);server.nbPlayers = Integer.valueOf(reader.readLine());infos.add(server);}in.close();return infos;} catch (Exception e) {return infos;}}private ScrollingGraphicalViewer createGraphicalViewer(final Composite parent) {final ScrollingGraphicalViewer viewer = new ScrollingGraphicalViewer();viewer.createControl(parent);_root = new EditRootEditPart();viewer.setRootEditPart(_root);getEditDomain().addViewer(viewer);getSite().setSelectionProvider(viewer);viewer.setEditPartFactory(getEditPartFactory());final KeyHandler keyHandler = new GraphicalViewerKeyHandler(viewer) {@SuppressWarnings(""unchecked"")@Overridepublic boolean keyPressed(final KeyEvent event) {if (event.stateMask == SWT.MOD1 && event.keyCode == SWT.DEL) {final List<? extends EditorPart> objects = viewer.getSelectedEditParts();if (objects == null || objects.isEmpty()) return true;final GroupRequest deleteReq = new GroupRequest(RequestConstants.REQ_DELETE);final CompoundCommand compoundCmd = new CompoundCommand(""Delete"");for (int i = 0; i < objects.size(); i++) {final EditPart object = (EditPart) objects.get(i);deleteReq.setEditParts(object);final Command cmd = object.getCommand(deleteReq);if (cmd != null) compoundCmd.add(cmd);}getCommandStack().execute(compoundCmd);return true;}if (event.stateMask == SWT.MOD3 && (event.keyCode == SWT.ARROW_DOWN || event.keyCode == SWT.ARROW_LEFT || event.keyCode == SWT.ARROW_RIGHT || event.keyCode == SWT.ARROW_UP)) {final List<? extends EditorPart> objects = viewer.getSelectedEditParts();if (objects == null || objects.isEmpty()) return true;final GroupRequest moveReq = new ChangeBoundsRequest(RequestConstants.REQ_MOVE);final CompoundCommand compoundCmd = new CompoundCommand(""Move"");for (int i = 0; i < objects.size(); i++) {final EditPart object = (EditPart) objects.get(i);moveReq.setEditParts(object);final LocationCommand cmd = (LocationCommand) object.getCommand(moveReq);if (cmd != null) {cmd.setLocation(new Point(event.keyCode == SWT.ARROW_LEFT ? -1 : event.keyCode == SWT.ARROW_RIGHT ? 1 : 0, event.keyCode == SWT.ARROW_DOWN ? 1 : event.keyCode == SWT.ARROW_UP ? -1 : 0));cmd.setRelative(true);compoundCmd.add(cmd);}}getCommandStack().execute(compoundCmd);return true;}return super.keyPressed(event);}};keyHandler.put(KeyStroke.getPressed(SWT.F2, 0), getActionRegistry().getAction(GEFActionConstants.DIRECT_EDIT));viewer.setKeyHandler(keyHandler);viewer.setContents(getEditorInput().getAdapter(NamedUuidEntity.class));viewer.addDropTargetListener(createTransferDropTargetListener(viewer));return viewer;}public int[] bubbleSort(int[] data) {for (int i = 0; i < data.length; i++) {for (int j = 0; j < data.length - i - 1; j++) {if (data[j] > data[j + 1]) {int temp = data[j];data[j] = data[j + 1];data[j + 1] = temp;}}}return data;}private void findFile() throws SchedulerException {java.io.InputStream f = null;String furl = null;File file = new File(getFileName());if (!file.exists()) {URL url = classLoadHelper.getResource(getFileName());if (url != null) {try {furl = URLDecoder.decode(url.getPath(), ""UTF-8"");file = new File(furl);f = url.openStream();} catch (java.io.UnsupportedEncodingException uee) {} catch (IOException ignor) {}}} else {try {f = new java.io.FileInputStream(file);} catch (FileNotFoundException e) {}}if (f == null && isFailOnFileNotFound()) {throw new SchedulerException(""File named '"" + getFileName() + ""' does not exist. f == null && isFailOnFileNotFound()"");} else if (f == null) {getLog().warn(""File named '"" + getFileName() + ""' does not exist. f == null"");} else {fileFound = true;try {if (furl != null) this.filePath = furl; else this.filePath = file.getAbsolutePath();f.close();} catch (IOException ioe) {getLog().warn(""Error closing jobs file "" + getFileName(), ioe);}}}@Overridepublic String getPath() {InputStream in = null;OutputStream out = null;File file = null;try {file = File.createTempFile(""java-storage_"" + RandomStringUtils.randomAlphanumeric(32), "".tmp"");file.deleteOnExit();out = new FileOutputStream(file);in = openStream();IOUtils.copy(in, out);} catch (IOException e) {throw new RuntimeException();} finally {IOUtils.closeQuietly(in);IOUtils.closeQuietly(out);}if (file != null && file.exists()) {return file.getPath();}return null;}public static void copy(File file, File dir, boolean overwrite) throws IOException {BufferedInputStream bis = new BufferedInputStream(new FileInputStream(file));File out = new File(dir, file.getName());if (out.exists() && !overwrite) {throw new IOException(""File: "" + out + "" already exists."");}FileOutputStream fos = new FileOutputStream(out, false);byte[] block = new byte[4096];int read = bis.read(block);while (read != -1) {fos.write(block, 0, read);read = bis.read(block);}}public void createBankSignature() {byte b;try {_bankMessageDigest = MessageDigest.getInstance(""MD5"");_bankSig = Signature.getInstance(""MD5/RSA/PKCS#1"");_bankSig.initSign((PrivateKey) _bankPrivateKey);_bankMessageDigest.update(getBankString().getBytes());_bankMessageDigestBytes = _bankMessageDigest.digest();_bankSig.update(_bankMessageDigestBytes);_bankSignatureBytes = _bankSig.sign();} catch (Exception e) {};}public void createVendorSignature() {byte b;try {_vendorMessageDigest = MessageDigest.getInstance(""MD5"");_vendorSig = Signature.getInstance(""MD5/RSA/PKCS#1"");_vendorSig.initSign((PrivateKey) _vendorPrivateKey);_vendorMessageDigest.update(getBankString().getBytes());_vendorMessageDigestBytes = _vendorMessageDigest.digest();_vendorSig.update(_vendorMessageDigestBytes);_vendorSignatureBytes = _vendorSig.sign();} catch (Exception e) {};}private synchronized boolean createOrganization(String organizationName, HttpServletRequest req) {if ((organizationName == null) || (organizationName.equals(""""))) {message = ""invalid new_organization_name."";return false;}String tmpxml = TextUtil.xmlEscape(organizationName);String tmpdb = DBAccess.SQLEscape(organizationName);if ((!organizationName.equals(tmpxml)) || (!organizationName.equals(tmpdb)) || (!TextUtil.isValidFilename(organizationName))) {message = ""invalid new_organization_name."";return false;}if ((organizationName.indexOf('-') > -1) || (organizationName.indexOf(' ') > -1)) {message = ""invalid new_organization_name."";return false;}String[] orgnames = ServerConsoleServlet.getOrganizationNames();for (int i = 0; i < orgnames.length; i++) {if (orgnames.equals(organizationName)) {message = ""already exists."";return false;}}message = ""create new organization: "" + organizationName;File newOrganizationDirectory = new File(ServerConsoleServlet.RepositoryLocalDirectory.getAbsolutePath() + File.separator + organizationName);if (!newOrganizationDirectory.mkdir()) {message = ""cannot create directory."";return false;}File cacheDir = new File(newOrganizationDirectory.getAbsolutePath() + File.separator + ServerConsoleServlet.getConfigByTagName(""CacheDirName""));cacheDir.mkdir();File confDir = new File(newOrganizationDirectory.getAbsolutePath() + File.separator + ServerConsoleServlet.getConfigByTagName(""ConfDirName""));confDir.mkdir();File rdfDir = new File(newOrganizationDirectory.getAbsolutePath() + File.separator + ServerConsoleServlet.getConfigByTagName(""RDFDirName""));rdfDir.mkdir();File resourceDir = new File(newOrganizationDirectory.getAbsolutePath() + File.separator + ServerConsoleServlet.getConfigByTagName(""ResourceDirName""));resourceDir.mkdir();File obsoleteDir = new File(resourceDir.getAbsolutePath() + File.separator + ""obsolete"");obsoleteDir.mkdir();File schemaDir = new File(newOrganizationDirectory.getAbsolutePath() + File.separator + ServerConsoleServlet.getConfigByTagName(""SchemaDirName""));schemaDir.mkdir();String organization_temp_dir = ServerConsoleServlet.convertToAbsolutePath(ServerConsoleServlet.getConfigByTagName(""OrganizationTemplate""));File templ = new File(organization_temp_dir);File[] confFiles = templ.listFiles();for (int i = 0; i < confFiles.length; i++) {try {FileReader fr = new FileReader(confFiles[i]);FileWriter fw = new FileWriter(confDir.getAbsolutePath() + File.separator + confFiles[i].getName());int c = -1;while ((c = fr.read()) != -1) fw.write(c);fw.flush();fw.close();fr.close();} catch (IOException e) {}}SchemaModelHolder.reloadSchemaModel(organizationName);ResourceModelHolder.reloadResourceModel(organizationName);UserLogServlet.initializeUserLogDB(organizationName);MetaEditServlet.createNewProject(organizationName, ""standard"", MetaEditServlet.convertProjectIdToProjectUri(organizationName, ""standard"", req), this.username);ResourceModelHolder.reloadResourceModel(organizationName);message = organizationName + "" is created. Restart Tomcat to activate this organization."";return true;}"	5
"public void run_two() {System.out.println(""Waiting to see if server has logged in"");if (rept != null) {rept.post(""Checking if RegServer is online.."");}try {boolean waiting = true;while (waiting) {String con = """";String s;URL url = new URL(where);BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));System.out.print(""Checking for xRegistry.."");if (rept != null) {rept.post(""Searching for xRegistryServer.."");}while ((s = br.readLine()) != null) {con = con + s;}err_catch = con;try {br.close();} catch (IOException ioe) {System.out.print(""..b_r wouldn't close.."");}servers = xls.split(""SERVER"", con);if (servers.length < 1) {System.out.println(""-->Server not available yet."");if (rept != null) {rept.post(""-->Server currently unavailable.."");}try {Thread.sleep(read_delay);} catch (Exception inter) {}if (read_delay < 20000) {read_delay = read_delay * 2;if (debug == true) {System.out.println(""Set read_delay to:"" + read_delay);}} else {read_delay = read_delay + 3000;}if (read_delay > 90000) {waiting = false;}}if (servers.length > 0) {waiting = false;}}String[] regip = xls.split(""IP"", servers[0]);String[] regport = xls.split(""PORT"", servers[0]);int rp = 0;try {rp = Integer.parseInt(regport[0]);} catch (NumberFormatException nfe) {rp = 0;}System.out.println(""Trying for socket on "" + regip[0] + "", port:"" + rp);if (rept != null) {rept.post(""Connecting to RegServer"");}int f = 0;Socket client = new Socket(InetAddress.getByName(regip[0]), rp);System.out.println(""Socket connected to xRegistry"");if (rept != null) {rept.post(""Connected to RegServer"");}xcc = new xClientConn(client);xcc.set_IP(ipad);xcc.set_Port(port);xcc.setListen(this);new Thread(xcc).start();} catch (Exception e) {System.out.println(""Failed client connection to registry, 'Java' errorcodes:\n"" + e.toString() + ""\n\nMessage from server?:\n"" + err_catch);if (rept != null) {rept.post(""Failed at registry connect!"");}if (debug == true) {e.printStackTrace();}term();}}public String getShortToken(String md5Str) {MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");md5.update(md5Str.getBytes(JspRunConfig.charset));} catch (Exception e) {e.printStackTrace();}StringBuffer token = toHex(md5.digest());return token.substring(8, 24);}public String getLongToken(String md5Str) {MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");md5.update(md5Str.getBytes(JspRunConfig.charset));} catch (Exception e) {e.printStackTrace();}StringBuffer token = toHex(md5.digest());return token.toString();}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}protected void yesAction() {try {String result = getSurveyURL() + ""&buildtime="" + Version.getBuildTimeString();LOG.log(result);if (!maySubmitSurvey()) {return;}BufferedReader br = null;try {URL url = new URL(result);InputStream urls = url.openStream();InputStreamReader is = new InputStreamReader(urls);br = new BufferedReader(is);String line;StringBuilder sb = new StringBuilder();while ((line = br.readLine()) != null) {sb.append(line);sb.append(System.getProperty(""line.separator""));}LOG.log(sb.toString());} catch (IOException e) {LOG.log(""Could not open URL using Java"", e);try {PlatformFactory.ONLY.openURL(new URL(result));DrJava.getConfig().setSetting(OptionConstants.LAST_DRJAVA_SURVEY_RESULT, result);} catch (IOException e2) {LOG.log(""Could not open URL using web browser"", e2);}} finally {try {if (br != null) br.close();} catch (IOException e) {}}} finally {noAction();}}public static byte[] openHttpResult(String urlPath, boolean retry) throws IOException {AQUtility.debug(""net"", urlPath);URL url = new URL(urlPath);HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.setUseCaches(false);connection.setInstanceFollowRedirects(true);connection.setConnectTimeout(NET_TIMEOUT);int code = connection.getResponseCode();if (code == 307 && retry) {String redirect = connection.getHeaderField(""Location"");return openHttpResult(redirect, false);}if (code == -1 && retry) {return openHttpResult(urlPath, false);}AQUtility.debug(""response"", code);if (code == -1 || code < 200 || code >= 300) {throw new IOException();}byte[] result = AQUtility.toBytes(connection.getInputStream());return result;}protected void copyFile(String from, String to, String workingDirectory) throws Exception {URL monitorCallShellScriptUrl = Thread.currentThread().getContextClassLoader().getResource(from);File f = new File(monitorCallShellScriptUrl.getFile());String directoryPath = f.getAbsolutePath();String fileName = from;InputStream in = null;if (directoryPath.indexOf("".jar!"") > -1) {URL urlJar = new URL(directoryPath.substring(directoryPath.indexOf(""file:""), directoryPath.indexOf('!')));JarFile jf = new JarFile(urlJar.getFile());JarEntry je = jf.getJarEntry(from);fileName = je.getName();in = Thread.currentThread().getContextClassLoader().getResourceAsStream(fileName);} else {in = new FileInputStream(f);}File outScriptFile = new File(to);FileOutputStream fos = new FileOutputStream(outScriptFile);int nextChar;while ((nextChar = in.read()) != -1) fos.write(nextChar);fos.flush();fos.close();try {LinuxCommandExecutor cmdExecutor = new LinuxCommandExecutor();cmdExecutor.setWorkingDirectory(workingDirectory);cmdExecutor.runCommand(""chmod 777 "" + to);} catch (Exception e) {throw e;}}private void _PostParser(Document document, AnnotationManager annoMan, Document htmldoc, String baseurl) {xformer = annoMan.getTransformer();builder = annoMan.getBuilder();String annohash = """";if (document == null) return;NodeList ndlist = document.getElementsByTagNameNS(annoNS, ""body"");if (ndlist.getLength() != 1) {System.out.println(""Sorry Annotation Body was found "" + ndlist.getLength() + "" times"");return;}Element bodynode = (Element) ndlist.item(0);Node htmlNode = bodynode.getElementsByTagName(""html"").item(0);if (htmlNode == null) htmlNode = bodynode.getElementsByTagName(""HTML"").item(0);Document newdoc = builder.newDocument();Element rootelem = newdoc.createElementNS(rdfNS, ""r:RDF"");rootelem.setAttribute(""xmlns:r"", rdfNS);rootelem.setAttribute(""xmlns:a"", annoNS);rootelem.setAttribute(""xmlns:d"", dubNS);rootelem.setAttribute(""xmlns:t"", threadNS);newdoc.appendChild(rootelem);Element tmpelem;NodeList tmpndlist;Element annoElem = newdoc.createElementNS(annoNS, ""a:Annotation"");rootelem.appendChild(annoElem);tmpelem = (Element) document.getElementsByTagNameNS(annoNS, ""context"").item(0);String context = tmpelem.getChildNodes().item(0).getNodeValue();annoElem.setAttributeNS(annoNS, ""a:context"", context);NodeList elemcontl = tmpelem.getElementsByTagNameNS(alNS, ""context-element"");Node ncontext_element = null;if (elemcontl.getLength() > 0) {Node old_context_element = elemcontl.item(0);ncontext_element = newdoc.importNode(old_context_element, true);}tmpndlist = document.getElementsByTagNameNS(dubNS, ""title"");annoElem.setAttributeNS(dubNS, ""d:title"", tmpndlist.getLength() > 0 ? tmpndlist.item(0).getChildNodes().item(0).getNodeValue() : ""Default"");tmpelem = (Element) document.getElementsByTagNameNS(dubNS, ""creator"").item(0);annoElem.setAttributeNS(dubNS, ""d:creator"", tmpelem.getChildNodes().item(0).getNodeValue());tmpelem = (Element) document.getElementsByTagNameNS(annoNS, ""created"").item(0);annoElem.setAttributeNS(annoNS, ""a:created"", tmpelem.getChildNodes().item(0).getNodeValue());tmpelem = (Element) document.getElementsByTagNameNS(dubNS, ""date"").item(0);annoElem.setAttributeNS(dubNS, ""d:date"", tmpelem.getChildNodes().item(0).getNodeValue());tmpndlist = document.getElementsByTagNameNS(dubNS, ""language"");String language = (tmpndlist.getLength() > 0 ? tmpndlist.item(0).getChildNodes().item(0).getNodeValue() : ""en"");annoElem.setAttributeNS(dubNS, ""d:language"", language);Node typen = newdoc.importNode(document.getElementsByTagNameNS(rdfNS, ""type"").item(0), true);annoElem.appendChild(typen);Element contextn = newdoc.createElementNS(annoNS, ""a:context"");contextn.setAttributeNS(rdfNS, ""r:resource"", context);annoElem.appendChild(contextn);Node annotatesn = newdoc.importNode(document.getElementsByTagNameNS(annoNS, ""annotates"").item(0), true);annoElem.appendChild(annotatesn);Element newbodynode = newdoc.createElementNS(annoNS, ""a:body"");annoElem.appendChild(newbodynode);if (ncontext_element != null) {contextn.appendChild(ncontext_element);} else {System.out.println(""No context element found, we create one..."");try {XPointer xptr = new XPointer(htmldoc);NodeRange xprange = xptr.getRange(context, htmldoc);Element context_elem = newdoc.createElementNS(alNS, ""al:context-element"");context_elem.setAttributeNS(alNS, ""al:text"", xprange.getContentString());context_elem.appendChild(newdoc.createTextNode(annoMan.generateContextString(xprange)));contextn.appendChild(context_elem);} catch (XPointerRangeException e2) {e2.printStackTrace();}}WordFreq wf = new WordFreq(annoMan.extractTextFromNode(htmldoc));Element docident = newdoc.createElementNS(alNS, ""al:document-identifier"");annotatesn.appendChild(docident);docident.setAttributeNS(alNS, ""al:orig-url"", ((Element) annotatesn).getAttributeNS(rdfNS, ""resource""));docident.setAttributeNS(alNS, ""al:version"", ""1"");Iterator it = null;it = wf.getSortedWordlist();Map.Entry ent;String word;int count;int i = 0;while (it.hasNext()) {ent = (Map.Entry) it.next();word = ((String) ent.getKey());count = ((Counter) ent.getValue()).count;if ((word.length() > 4) && (i < 10)) {Element wordelem = newdoc.createElementNS(alNS, ""al:word"");wordelem.setAttributeNS(alNS, ""al:freq"", Integer.toString(count));wordelem.appendChild(newdoc.createTextNode(word));docident.appendChild(wordelem);i++;}}try {StringWriter strw = new StringWriter();MessageDigest messagedigest = MessageDigest.getInstance(""MD5"");xformer.transform(new DOMSource(newdoc), new StreamResult(strw));messagedigest.update(strw.toString().getBytes());byte[] md5bytes = messagedigest.digest();annohash = """";for (int b = 0; b < md5bytes.length; b++) {String s = Integer.toHexString(md5bytes[b] & 0xFF);annohash = annohash + ((s.length() == 1) ? ""0"" + s : s);}this.annohash = annohash;annoElem.setAttribute(""xmlns:al"", alNS);annoElem.setAttributeNS(alNS, ""al:id"", getAnnohash());Location = (baseurl + ""/annotation/"" + getAnnohash());annoElem.setAttributeNS(rdfNS, ""r:about"", Location);newbodynode.setAttributeNS(rdfNS, ""r:resource"", baseurl + ""/annotation/body/"" + getAnnohash());} catch (NoSuchAlgorithmException e) {e.printStackTrace();} catch (TransformerException e) {e.printStackTrace();}annoMan.store(newdoc.getDocumentElement());annoMan.createAnnoResource(newdoc.getDocumentElement(), getAnnohash());if (htmlNode != null) annoMan.createAnnoBody(htmlNode, getAnnohash());Location = (this.baseurl + ""/annotation/"" + getAnnohash());annoElem.setAttributeNS(rdfNS, ""r:about"", Location);this.responseDoc = newdoc;}protected File EncodeReturn() throws EncodeFailedException, IOException {CryptoClient c = getNode().getCryptoClientByID(PiggybackCrypto);File tmpf = getNode().getTempFM().createNewFile(""encodereturn"", ""download"");ChannelWriter cw = new ChannelWriter(tmpf);cw.putLongFile(DownloadData);cw.close();File encdata = c.RawEncode(tmpf, RawKey);File pigdata = PigData.EncodeData(encdata);File pigroute = ReturnPigRoute.EncodeData(ReturnRouteFile);FileOutputStream fos = new FileOutputStream(pigroute, true);FileChannel foc = fos.getChannel();FileInputStream fis = new FileInputStream(pigdata);FileChannel fic = fis.getChannel();fic.transferTo(0, fic.size(), foc);foc.close();fic.close();pigdata.delete();ReturnRouteFile.delete();encdata.delete();return pigroute;}"	5
"protected EntailmentType invokeHttp(String stuff) {String data = encode(""theory"") + ""="" + encode(stuff);URL url;EntailmentType result = EntailmentType.unkown;try {url = new URL(httpAddress);} catch (MalformedURLException e) {throw new RuntimeException(""FOL Reasoner not correclty configured: '"" + httpAddress + ""' is not an URL"");}log.debug(""sending theory to endpoint: "" + url);try {URLConnection conn = url.openConnection();conn.setDoOutput(true);OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());wr.write(data);wr.flush();BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));String line;while ((line = rd.readLine()) != null) {log.debug(""resultline: "" + line);if (line.contains(""Proof found"")) {result = EntailmentType.entailed;}if (line.contains(""Ran out of time"")) {result = EntailmentType.unkown;}if (line.contains(""Completion found"")) {result = EntailmentType.notEntailed;}}wr.close();rd.close();} catch (IOException io) {throw new RuntimeException(""the remote reasoner did not respond:"" + io, io);}return result;}public static void loginSkyDrive() throws Exception {System.out.println(""login "");u = new URL(loginurl);uc = (HttpURLConnection) u.openConnection();uc.setRequestProperty(""Cookie"", msprcookie + "";"" + mspokcookie);uc.setDoOutput(true);uc.setRequestMethod(""POST"");uc.setInstanceFollowRedirects(false);pw = new PrintWriter(new OutputStreamWriter(uc.getOutputStream()), true);pw.print(""login=dinesh007007%40hotmail.com&passwd=&SI=Sign+in&type=11&LoginOptions=3&NewUser=1&MEST=&PPSX=Passpor&PPFT="" + ppft + ""&PwdPad=&sso=&i1=&i2=1&i3=10524&i4=&i12=1&i13=&i14=437&i15=624&i16=3438"");pw.flush();pw.close();System.out.println(uc.getResponseCode());Map<String, List<String>> headerFields = uc.getHeaderFields();if (headerFields.containsKey(""Set-Cookie"")) {List<String> header = headerFields.get(""Set-Cookie"");for (int i = 0; i < header.size(); i++) {tmp = header.get(i);System.out.println(tmp);}}location = uc.getHeaderField(""Location"");System.out.println(""Location : "" + location);System.out.println(""going to open paaport page"");DefaultHttpClient d = new DefaultHttpClient();HttpGet hg = new HttpGet(""https://skydrive.live.com"");hg.setHeader(""Cookie"", msprcookie + "";"" + mspokcookie);HttpResponse execute = d.execute(hg);HttpEntity entity = execute.getEntity();System.out.println(EntityUtils.toString(entity));System.out.println(execute.getStatusLine());Header[] allHeaders = execute.getAllHeaders();for (int i = 0; i < allHeaders.length; i++) {System.out.println(allHeaders[i].getName() + "" : "" + allHeaders[i].getValue());}}protected void zipFile(File from, File to) throws IOException {FileInputStream in = new FileInputStream(from);ZipOutputStream out = new ZipOutputStream(new FileOutputStream(to));byte[] buffer = new byte[4096];int bytes_read;while ((bytes_read = in.read(buffer)) != -1) out.write(buffer, 0, bytes_read);in.close();out.close();}protected void zipDirectory(File dir, File zipfile) throws IOException, IllegalArgumentException {if (!dir.isDirectory()) throw new IllegalArgumentException(""Compress: not a directory:  "" + dir);String[] entries = dir.list();byte[] buffer = new byte[4096];int bytes_read;ZipOutputStream out = new ZipOutputStream(new FileOutputStream(zipfile));for (int i = 0; i < entries.length; i++) {File f = new File(dir, entries[i]);if (f.isDirectory()) continue;FileInputStream in = new FileInputStream(f);ZipEntry entry = new ZipEntry(f.getPath());out.putNextEntry(entry);while ((bytes_read = in.read(buffer)) != -1) out.write(buffer, 0, bytes_read);in.close();}out.close();}private String GetStringFromURL(String URL) {InputStream in = null;InputStreamReader inputStreamReader = null;BufferedReader bufferedReader = null;String outstring = """";try {java.net.URL url = new java.net.URL(URL);in = url.openStream();inputStreamReader = new InputStreamReader(in);bufferedReader = new BufferedReader(inputStreamReader);StringBuffer out = new StringBuffer("""");String nextLine;String newline = System.getProperty(""line.separator"");while ((nextLine = bufferedReader.readLine()) != null) {out.append(nextLine);out.append(newline);}outstring = new String(out);} catch (IOException e) {System.out.println(""Failed to read from "" + URL);outstring = """";} finally {try {bufferedReader.close();inputStreamReader.close();} catch (Exception e) {}}return outstring;}private void installBinaryFile(File source, File destination) {byte[] buffer = new byte[8192];FileInputStream fis = null;FileOutputStream fos = null;try {fis = new FileInputStream(source);fos = new FileOutputStream(destination);int read;while ((read = fis.read(buffer)) != -1) {fos.write(buffer, 0, read);}} catch (FileNotFoundException e) {} catch (IOException e) {new ProjectCreateException(e, ""Failed to read binary file: %1$s"", source.getAbsolutePath());} finally {if (fis != null) {try {fis.close();} catch (IOException e) {}}if (fos != null) {try {fos.close();} catch (IOException e) {}}}}public static byte[] encode(String origin, String algorithm) throws NoSuchAlgorithmException {String resultStr = null;resultStr = new String(origin);MessageDigest md = MessageDigest.getInstance(algorithm);md.update(resultStr.getBytes());return md.digest();}public static boolean checkEncode(String origin, byte[] mDigest, String algorithm) throws NoSuchAlgorithmException {MessageDigest md = MessageDigest.getInstance(algorithm);md.update(origin.getBytes());if (MessageDigest.isEqual(mDigest, md.digest())) {return true;} else {return false;}}public synchronized String encrypt(String plaintext) throws Exception {MessageDigest md = null;try {md = MessageDigest.getInstance(""SHA"");} catch (NoSuchAlgorithmException e) {throw new Exception(e.getMessage());}try {md.update(plaintext.getBytes(""UTF-8""));} catch (UnsupportedEncodingException e) {throw new Exception(e.getMessage());}byte raw[] = md.digest();String hash = (new BASE64Encoder()).encode(raw);return hash;}public boolean copyTo(String targetFilePath) {try {FileInputStream srcFile = new FileInputStream(filePath);FileOutputStream target = new FileOutputStream(targetFilePath);byte[] buff = new byte[1024];int readed = -1;while ((readed = srcFile.read(buff)) > 0) target.write(buff, 0, readed);srcFile.close();target.close();return true;} catch (Exception e) {e.printStackTrace();return false;}}"	5
"public boolean check(int timeout) {StringBuilder result = null;java.net.URL url;java.io.InputStream in = null;try {url = new java.net.URL(location + ""/prisms?method=test"");java.net.URLConnection conn = url.openConnection();conn.setConnectTimeout(timeout);in = conn.getInputStream();java.io.Reader reader = new java.io.InputStreamReader(in);result = new StringBuilder();int read = reader.read();while (read >= 0) {result.append((char) read);read = reader.read();}} catch (java.io.IOException e) {log.error(""Instance check failed"", e);if (in != null) try {in.close();} catch (java.io.IOException e2) {}}return result != null && result.toString().startsWith(""success"");}private static void dumpUrl(URL url) throws IOException {BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));String s = reader.readLine();while (s != null) {System.out.println(s);s = reader.readLine();}reader.close();}public static void main(String[] args) {final String filePath1 = ""e:\\mysite\\data\\up\\itsite"";final String filePath2 = ""d:\\works\\itsite\\itsite"";IOUtils.listAllFilesNoRs(new File(filePath2), new FileFilter() {@Overridepublic boolean accept(File file) {if (file.getName().equals("".svn"")) {return false;}final long modify = file.lastModified();final long time = DateUtils.toDate(""2012-03-21 17:43"", ""yyyy-MM-dd HH:mm"").getTime();if (modify >= time) {if (file.isFile()) {File f = new File(StringsUtils.replace(file.getAbsolutePath(), filePath2, filePath1));f.getParentFile().mkdirs();try {IOUtils.copyFile(file, f);} catch (IOException e) {e.printStackTrace();}System.out.println(f.getName());}}return true;}});}@Overridepublic boolean accept(File file) {if (file.getName().equals("".svn"")) {return false;}final long modify = file.lastModified();final long time = DateUtils.toDate(""2012-03-21 17:43"", ""yyyy-MM-dd HH:mm"").getTime();if (modify >= time) {if (file.isFile()) {File f = new File(StringsUtils.replace(file.getAbsolutePath(), filePath2, filePath1));f.getParentFile().mkdirs();try {IOUtils.copyFile(file, f);} catch (IOException e) {e.printStackTrace();}System.out.println(f.getName());}}return true;}private InputStream loadFromUrl(URL url, String contentType) throws IOException {Proxy proxy = null;if (isUseProxy) {Authenticator.setDefault(new Authenticator() {protected PasswordAuthentication getPasswordAuthentication() {return new PasswordAuthentication(proxyUser, proxyPassword.toCharArray());}});proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyHost, proxyPort));} else {proxy = Proxy.NO_PROXY;}URLConnection connection = url.openConnection(proxy);connection.setRequestProperty(""Accept-Charset"", DEFAULT_CHARSET);connection.setRequestProperty(""Content-Type"", contentType);connection.setRequestProperty(""User-Agent"", USER_AGENT);InputStream response = connection.getInputStream();return response;}public boolean backupLastAuditSchema(File lastAuditSchema) {boolean isBkupFileOK = false;String writeTimestamp = DateFormatUtils.format(new java.util.Date(), configFile.getTimestampPattern());File target = new File(configFile.getAuditSchemaFileDir() + File.separator + configFile.getAuditSchemaFileName() + "".bkup_"" + writeTimestamp);FileChannel sourceChannel = null;FileChannel targetChannel = null;try {sourceChannel = new FileInputStream(lastAuditSchema).getChannel();targetChannel = new FileOutputStream(target).getChannel();targetChannel.transferFrom(sourceChannel, 0, sourceChannel.size());} catch (IOException e) {logger.log(Level.SEVERE, ""IO exception occurred while copying file"", e);} finally {if ((target != null) && (target.exists()) && (target.length() > 0)) {isBkupFileOK = true;}try {if (sourceChannel != null) {sourceChannel.close();}if (targetChannel != null) {targetChannel.close();}} catch (IOException e) {logger.warning(""closing channels failed"");}}return isBkupFileOK;}private void addEMInformation() {try {long emDate = System.currentTimeMillis();if (_local == true) {File emFile = new File(""emprotz.dat"");if (!emFile.exists()) {return;}emDate = emFile.lastModified();}if (emDate > this._emFileDate) {this._emFileDate = emDate;this._emDate = emDate;for (int ii = 0; ii < this._projectInfo.size(); ii++) {Information info = getInfo(ii);if (info != null) {info._emDeadline = null;info._emFrames = null;info._emValue = null;}}Reader reader = null;if (_local == true) {reader = new FileReader(""emprotz.dat"");} else {StringBuffer urlName = new StringBuffer();urlName.append(""http://home.comcast.net/"");urlName.append(""~wxdude1/emsite/download/"");urlName.append(""emprotz.zip"");try {URL url = new URL(urlName.toString());InputStream stream = url.openStream();ZipInputStream zip = new ZipInputStream(stream);zip.getNextEntry();reader = new InputStreamReader(zip);} catch (MalformedURLException mue) {mue.printStackTrace();}}BufferedReader file = new BufferedReader(reader);try {String line1 = null;int count = 0;while ((line1 = file.readLine()) != null) {String line2 = (line1 != null) ? file.readLine() : null;String line3 = (line2 != null) ? file.readLine() : null;String line4 = (line3 != null) ? file.readLine() : null;count++;if ((count > 1) && (line1 != null) && (line2 != null) && (line3 != null) && (line4 != null)) {if (line1.length() > 2) {int posBegin = line1.indexOf(""\"""", 0);int posEnd = line1.indexOf(""\"""", posBegin + 1);if ((posBegin >= 0) && (posEnd >= 0)) {String project = line1.substring(posBegin + 1, posEnd - posBegin);int projectNum = Integer.parseInt(project);Integer deadline = Integer.valueOf(line2.trim());Double value = Double.valueOf(line3.trim());Integer frames = Integer.valueOf(line4.trim());Information info = getInfo(projectNum);if (info == null) {info = createInfo(projectNum);}if (info._emValue == null) {info._emDeadline = deadline;info._emFrames = frames;info._emValue = value;}}}}}} catch (Exception e) {e.printStackTrace();} finally {file.close();}}} catch (FileNotFoundException e) {} catch (IOException e) {}}private void addQDInformation() {try {long qdDate = System.currentTimeMillis();if (_local == true) {File qdFile = new File(""qdinfo.dat"");if (!qdFile.exists()) {return;}qdDate = qdFile.lastModified();}if (qdDate > this._qdFileDate) {this._qdFileDate = qdDate;for (int ii = 0; ii < this._projectInfo.size(); ii++) {Information info = getInfo(ii);if (info != null) {info._qdValue = null;}}Reader reader = null;if (_local == true) {reader = new FileReader(""qdinfo.dat"");} else {StringBuffer urlName = new StringBuffer();urlName.append(""http://boston.quik.com/rph/"");urlName.append(""qdinfo.dat"");try {URL url = new URL(urlName.toString());InputStream stream = url.openStream();reader = new InputStreamReader(stream);} catch (MalformedURLException mue) {mue.printStackTrace();}}BufferedReader file = new BufferedReader(reader);try {String line = null;while ((line = file.readLine()) != null) {if (line.startsWith(""pg "")) {this._qdDate = Long.parseLong(line.substring(3), 16);this._qdDate = (this._qdDate + 946684800) * 1000;} else if (line.startsWith(""pt "")) {line = line.substring(3).trim();int pos = -1;while ((line.length() > 0) && ((pos = line.indexOf(' ')) > 0)) {int projectNum = 0;Double value = null;if (pos > 0) {projectNum = Integer.parseInt(line.substring(0, pos));line = line.substring(pos).trim();}pos = line.indexOf(' ');if (pos > 0) {value = new Double((double) Integer.parseInt(line.substring(0, pos)) / 100);line = line.substring(pos).trim();}Information info = getInfo(projectNum);if (info == null) {info = createInfo(projectNum);}if (info._qdValue == null) {info._qdValue = value;}}}}} finally {file.close();}}} catch (FileNotFoundException e) {} catch (IOException e) {}}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}"	5
"private static byte[] baseHash(String name, String password) {try {MessageDigest digest = MessageDigest.getInstance(""MD5"");digest.reset();digest.update(name.toLowerCase().getBytes());digest.update(password.getBytes());return digest.digest();} catch (NoSuchAlgorithmException ex) {d(""MD5 algorithm not found!"");throw new RuntimeException(""MD5 algorithm not found! Unable to authenticate"");}}public void createFeed(Context ctx, URL url) {try {targetFlag = TARGET_FEED;droidDB = NewsDroidDB.getInstance(ctx);currentFeed.Url = url;SAXParserFactory spf = SAXParserFactory.newInstance();SAXParser sp = spf.newSAXParser();XMLReader xr = sp.getXMLReader();xr.setContentHandler(this);xr.parse(new InputSource(url.openStream()));} catch (IOException e) {Log.e(e.getMessage());} catch (SAXException e) {Log.e(e.getMessage());} catch (ParserConfigurationException e) {Log.e(e.getMessage());}}private File download(String filename, URL url) {int size = -1;int received = 0;try {fireDownloadStarted(filename);File file = createFile(filename);BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(file));System.out.println(""������Դ��"" + filename + "", url="" + url);InputStream bis = url.openStream();byte[] buf = new byte[1024];int count = 0;long lastUpdate = 0;size = bis.available();while ((count = bis.read(buf)) != -1) {bos.write(buf, 0, count);received += count;long now = System.currentTimeMillis();if (now - lastUpdate > 500) {fireDownloadUpdate(filename, size, received);lastUpdate = now;}}bos.close();System.out.println(""��Դ������ϣ�"" + filename);fireDownloadCompleted(filename);return file;} catch (IOException e) {System.out.println(""������Դʧ�ܣ�"" + filename + "", error="" + e.getMessage());fireDownloadInterrupted(filename);if (!(e instanceof FileNotFoundException)) {e.printStackTrace();}}return null;}private void delay(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException, ServletException {String url = request.getRequestURL().toString();if (delayed.contains(url)) {delayed.remove(url);LOGGER.info(MessageFormat.format(""Loading delayed resource at url = [{0}]"", url));chain.doFilter(request, response);} else {LOGGER.info(""Returning resource = [LoaderApplication.swf]"");InputStream input = null;OutputStream output = null;try {input = getClass().getResourceAsStream(""LoaderApplication.swf"");output = response.getOutputStream();delayed.add(url);response.setHeader(""Cache-Control"", ""no-cache"");IOUtils.copy(input, output);} finally {IOUtils.closeQuietly(output);IOUtils.closeQuietly(input);}}}public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException {String encoded = """";if (vars != null) {for (String key : vars.keySet()) {try {encoded += ""&"" + key + ""="" + URLEncoder.encode(vars.get(key), ""UTF-8"");} catch (UnsupportedEncodingException e) {e.printStackTrace();}}if (encoded.length() > 0) {encoded = encoded.substring(1);}}String url = this.endpoint + path;if (method.toUpperCase().equals(""GET"")) url += ((path.indexOf('?') == -1) ? ""?"" : ""&"") + encoded;try {URL resturl = new URL(url);HttpURLConnection con = (HttpURLConnection) resturl.openConnection();String userpass = this.accountSid + "":"" + this.authToken;String encodeuserpass = new String(Base64.encodeToByte(userpass.getBytes(), false));con.setRequestProperty(""Authorization"", ""Basic "" + encodeuserpass);con.setDoOutput(true);if (method.toUpperCase().equals(""GET"")) {con.setRequestMethod(""GET"");} else if (method.toUpperCase().equals(""POST"")) {con.setRequestMethod(""POST"");OutputStreamWriter out = new OutputStreamWriter(con.getOutputStream());out.write(encoded);out.close();} else if (method.toUpperCase().equals(""PUT"")) {con.setRequestMethod(""PUT"");OutputStreamWriter out = new OutputStreamWriter(con.getOutputStream());out.write(encoded);out.close();} else if (method.toUpperCase().equals(""DELETE"")) {con.setRequestMethod(""DELETE"");} else {throw new TwilioRestException(""Unknown method "" + method);}BufferedReader in = null;try {if (con.getInputStream() != null) {in = new BufferedReader(new InputStreamReader(con.getInputStream()));}} catch (IOException e) {if (con.getErrorStream() != null) {in = new BufferedReader(new InputStreamReader(con.getErrorStream()));}}if (in == null) {throw new TwilioRestException(""Unable to read response from server"");}StringBuffer decodedString = new StringBuffer();String line;while ((line = in.readLine()) != null) {decodedString.append(line);}in.close();int responseCode = con.getResponseCode();return new TwilioRestResponse(url, decodedString.toString(), responseCode);} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return null;}public static void fileCopy(File source, File dest) throws IOException {FileChannel in = null, out = null;try {in = new FileInputStream(source).getChannel();out = new FileOutputStream(dest).getChannel();long size = in.size();MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size);out.write(buf);} finally {if (in != null) in.close();if (out != null) out.close();}}public static boolean encodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public static boolean decodeFileToFile(String infile, String outfile) {boolean success = false;java.io.InputStream in = null;java.io.OutputStream out = null;try {in = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.DECODE);out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));byte[] buffer = new byte[65536];int read = -1;while ((read = in.read(buffer)) >= 0) {out.write(buffer, 0, read);}success = true;} catch (java.io.IOException exc) {exc.printStackTrace();} finally {try {in.close();} catch (Exception exc) {}try {out.close();} catch (Exception exc) {}}return success;}public void saveFile(final InputStream inputStream, final String fileName) {final File file = new File(System.getProperty(""java.io.tmpdir"") + File.separator + fileName);FileOutputStream fileOut = null;try {fileOut = new FileOutputStream(file);IOUtils.copy(inputStream, fileOut);} catch (FileNotFoundException e) {LOGGER.error(""saveFile() - File Not Found."" + e);} catch (IOException e) {LOGGER.error(""saveFile() - Error while saving file."" + e);} finally {try {inputStream.close();if (fileOut != null) {fileOut.close();}} catch (IOException e) {LOGGER.error(e);}}}public static void download(String address, String localFileName) {OutputStream out = null;URLConnection conn = null;InputStream in = null;try {URL url = new URL(address);out = new BufferedOutputStream(new FileOutputStream(localFileName));conn = url.openConnection();in = conn.getInputStream();byte[] buffer = new byte[1024];int numRead;long numWritten = 0;while ((numRead = in.read(buffer)) != -1) {out.write(buffer, 0, numRead);numWritten += numRead;}System.out.println(localFileName + ""\t"" + numWritten);} catch (Exception exception) {exception.printStackTrace();} finally {try {if (in != null) in.close();if (out != null) out.close();} catch (IOException ioe) {ioe.printStackTrace();}}}"	5
"protected Set<String> moduleNamesFromReader(URL url) throws IOException {BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));Set<String> names = new HashSet<String>();String line;while ((line = reader.readLine()) != null) {line = line.trim();Matcher m = nonCommentPattern.matcher(line);if (m.find()) {names.add(m.group().trim());}}return names;}public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {response.setContentType(""text/plain;charset=UTF-8"");request.setCharacterEncoding(""utf-8"");HttpURLConnection httpConn = null;byte[] result = null;try {byte[] bytes = HttpUtil.getHttpURLReturnData(request);if (-1 == bytes.length || 23 > bytes.length) throw new Exception();MsgPrint.showMsg(""========byte length"" + bytes.length);String userTag = request.getParameter(""userTag"");String isEncrypt = request.getParameter(""isEncrypt"");URL httpurl = new URL(ProtocolContanst.TRANSFERS_URL + userTag + ""&isEncrypt="" + isEncrypt);httpConn = (HttpURLConnection) httpurl.openConnection();httpConn.setDoOutput(true);httpConn.setRequestProperty(""Content-Length"", String.valueOf(bytes.length));OutputStream outputStream = httpConn.getOutputStream();outputStream.write(bytes);outputStream.close();InputStream is = httpConn.getInputStream();if (0 >= httpConn.getContentLength()) {throw new Exception();}byte[] resultBytes = new byte[httpConn.getContentLength()];byte[] tempByte = new byte[1024];int length = 0;int index = 0;while ((length = is.read(tempByte)) != -1) {System.arraycopy(tempByte, 0, resultBytes, index, length);index += length;}is.close();result = resultBytes;} catch (Exception e) {}ServletOutputStream sos = response.getOutputStream();if (null != result) {response.setContentLength(result.length);sos.write(result);} else {response.setContentLength(26);sos.write(new byte[] { 48, 48, 55, -23, 3, 56, 49, 54, 57, 55, 49, 51, 54, 72, 71, 52, 48, 1, 3, 3, 48, 48, 48, 48, 48, 48 });}sos.flush();sos.close();}public File sendPayload(SoapEnvelope payload, URL url) throws IOException {URLConnection conn = null;File tempFile = null;Logger l = Logger.instance();String className = getClass().getName();l.log(Logger.DEBUG, loggerPrefix, className + "".sendPayload"", ""sending payload to "" + url.toString());try {conn = url.openConnection();conn.setDoOutput(true);payload.writeTo(conn.getOutputStream());tempFile = readIntoTempFile(conn.getInputStream());} catch (IOException ioe) {l.log(Logger.ERROR, loggerPrefix, className + "".sendPayload"", ioe);throw ioe;} finally {conn = null;}l.log(Logger.DEBUG, loggerPrefix, className + "".sendPayload"", ""received response"");return tempFile;}public File getURL(URL url) throws IOException {URLConnection conn = null;File tempFile = null;Logger l = Logger.instance();String className = getClass().getName();l.log(Logger.DEBUG, loggerPrefix, className + "".getURL"", ""GET URL "" + url.toString());try {conn = url.openConnection();tempFile = readIntoTempFile(conn.getInputStream());} catch (IOException ioe) {l.log(Logger.ERROR, loggerPrefix, className + "".getURL"", ioe);throw ioe;} finally {conn = null;}l.log(Logger.DEBUG, loggerPrefix, className + "".getURL"", ""received URL"");return tempFile;}public void testRetrieve() throws DigitalObjectManager.DigitalObjectNotFoundException, URISyntaxException, IOException {DigitalObjectManager man = new FedoraObjectManager(""fedoraAdmin"", ""fedoraAdminPass"", ""http://localhost:7910/fedora"");DigitalObject r = man.retrieve(new URI(""demo:dc2mods.1""));String title = r.getTitle();List<Metadata> met = r.getMetadata();InputStream content = r.getContent().read();StringWriter theString = new StringWriter();IOUtils.copy(content, theString);assertNotNull(theString.toString(), ""Content should not be null"");assertNotNull(title, ""The title should be set"");assertNotNull(met.get(0).getContent(), ""There should be some metadata"");}public static void copyFile(File in, File out) throws IOException {FileChannel inChannel = new FileInputStream(in).getChannel();FileChannel outChannel = new FileOutputStream(out).getChannel();try {inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {throw e;} finally {if (inChannel != null) {inChannel.close();}if (outChannel != null) {outChannel.close();}}}public static void main(final String args[]) {if (args.length < 2 || (args.length == 3 && !""-d"".equals(args[0]))) {System.out.println(""Usage: AdapterGenerator [Options] <PrologFile> <ClassPath>"");System.out.println(""where the framework is the first element in the class path"");System.out.println(""Options: -d Enables the generation of debug output"");return;}boolean debug = args.length == 3;File prologFile = new File(debug ? args[1] : args[0]);if (!prologFile.isFile()) {System.out.println(""The given file does not exist."");return;}File targetFile = new File(prologFile.getParentFile(), prologFile.getName().substring(0, prologFile.getName().lastIndexOf(""."")) + "".jar"");String source;try {source = FileUtils.readFileToString(prologFile);} catch (IOException ex) {System.out.println(""Error reading file: "" + ex.getMessage());return;}Parser myParser = new PrologParserImpl();PrologProgram myProgram;try {myProgram = (PrologProgram) myParser.parse(source);} catch (Exception ex) {System.out.println(""Could not parse file: "" + ex.getMessage());return;}try {FactVisitor myVisitor = new FactVisitor();myVisitor.visit(myProgram);Map<String, TypeGenerationInfo> adapterLayer = myVisitor.getAdapterLayer();if (adapterLayer.size() == 0) {System.out.println(""No adapters to generate, "" + ""did you forget to run the comeback rules?"");return;}URLClassLoader classLoader = createClassLoaderFromClassPath(debug ? args[2] : args[1]);ClassWriter adapterWriter = new ClassWriter(new JarEntryWriter(targetFile));AdapterAnnotationGenerator annotationGenerator = new AdapterAnnotationGenerator();Type annotationType = Type.getObjectType(""net/sourceforge/comeback/Adapter"");adapterWriter.writeClass(annotationType.getClassName(), annotationGenerator.createAnnotation(annotationType));AdapterLookupGenerator lookupWriter = new AdapterLookupGenerator(Type.getObjectType(""net/sourceforge/comeback/Adapters""), annotationType);GenerationContext context = new GenerationContext(adapterLayer, classLoader, annotationType, lookupWriter, adapterWriter);context.setGenerateDebugOutput(debug);Iterator<TypeGenerationInfo> iterator = adapterLayer.values().iterator();while (iterator.hasNext()) {TypeGenerationInfo info = iterator.next();context.generateAdapter(info);}ByteArrayOutputStream serialized = new ByteArrayOutputStream();ObjectOutputStream out = new ObjectOutputStream(serialized);out.writeObject(adapterLayer);out.close();adapterWriter.writeResource(""net/sourceforge/comeback/adapterlayer.ser"", serialized.toByteArray());String[] sharedClassesPrefixes = new String[2];Assembler assembler = new Assembler(adapterWriter);PatternClassFilter filter = new PatternClassFilter();URL url = Main.class.getResource(""/"" + Main.class.getName().replace('.', '/') + "".class"");JarURLConnection connection = (JarURLConnection) url.openConnection();sharedClassesPrefixes[0] = assembler.assemble(connection.getJarFile(), filter);filter = new PatternClassFilter();url = Type.class.getResource(""/"" + Type.class.getName().replace('.', '/') + "".class"");connection = (JarURLConnection) url.openConnection();sharedClassesPrefixes[1] = assembler.assemble(connection.getJarFile(), filter);String tmp = debug ? args[2] : args[1];adapterWriter.writeClass(lookupWriter.getType().getClassName(), lookupWriter.createAdapterLookup(adapterLayer.values(), tmp.substring(tmp.lastIndexOf(File.pathSeparator) + 1), sharedClassesPrefixes));adapterWriter.close();} catch (Throwable e) {e.printStackTrace();return;}}protected void innerProcess(ProcessorURI curi) throws InterruptedException {Pattern regexpr = curi.get(this, STRIP_REG_EXPR);ReplayCharSequence cs = null;try {cs = curi.getRecorder().getReplayCharSequence();} catch (Exception e) {curi.getNonFatalFailures().add(e);logger.warning(""Failed get of replay char sequence "" + curi.toString() + "" "" + e.getMessage() + "" "" + Thread.currentThread().getName());return;}MessageDigest digest = null;try {try {digest = MessageDigest.getInstance(SHA1);} catch (NoSuchAlgorithmException e1) {e1.printStackTrace();return;}digest.reset();String s = null;if (regexpr != null) {s = cs.toString();} else {Matcher m = regexpr.matcher(cs);s = m.replaceAll("" "");}digest.update(s.getBytes());byte[] newDigestValue = digest.digest();curi.setContentDigest(SHA1, newDigestValue);} finally {if (cs != null) {try {cs.close();} catch (IOException ioe) {logger.warning(TextUtils.exceptionToString(""Failed close of ReplayCharSequence."", ioe));}}}}public byte[] getCoded(String name, String pass) {byte[] digest = null;if (pass != null && 0 < pass.length()) {try {MessageDigest md = MessageDigest.getInstance(""SHA-1"");md.update(name.getBytes());md.update(pass.getBytes());digest = md.digest();} catch (Exception e) {e.printStackTrace();digest = null;}}return digest;}protected static String getInitialUUID() {if (myRand == null) {myRand = new Random();}long rand = myRand.nextLong();String sid;try {sid = InetAddress.getLocalHost().toString();} catch (UnknownHostException e) {sid = Thread.currentThread().getName();}StringBuffer sb = new StringBuffer();sb.append(sid);sb.append("":"");sb.append(Long.toString(rand));MessageDigest md5 = null;try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {}md5.update(sb.toString().getBytes());byte[] array = md5.digest();StringBuffer sb2 = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;sb2.append(Integer.toHexString(b));}int begin = myRand.nextInt();if (begin < 0) begin = begin * -1;begin = begin % 8;return sb2.toString().substring(begin, begin + 18).toUpperCase();}"	5
"private void findRxnFileByUrl() throws MalformedURLException, IOException {URL url = new URL(MessageFormat.format(rxnUrl, reactionId.toString()));LOGGER.debug(""Retrieving RXN file by URL "" + url);URLConnection con = url.openConnection(java.net.Proxy.NO_PROXY);con.connect();InputStream is = null;InputStreamReader isr = null;BufferedReader br = null;try {is = con.getInputStream();isr = new InputStreamReader(is);br = new BufferedReader(isr);String line = null;StringBuilder sb = new StringBuilder();while ((line = br.readLine()) != null) {sb.append(line).append('\n');}rxnFile = sb.toString();} catch (IOException e) {LOGGER.warn(""Unable to retrieve RXN"", e);} finally {if (br != null) {br.close();}if (isr != null) {isr.close();}if (is != null) {is.close();}}}private void insert() throws SQLException, NamingException {Logger logger = getLogger();if (logger.isDebugEnabled()) {logger.debug(""enter - "" + getClass().getName() + "".insert()"");}try {if (logger.isInfoEnabled()) {logger.info(""insert(): Create new sequencer record for "" + getName());}Connection conn = null;PreparedStatement stmt = null;ResultSet rs = null;try {InitialContext ctx = new InitialContext();DataSource ds = (DataSource) ctx.lookup(dataSourceName);conn = ds.getConnection();conn.setReadOnly(false);stmt = conn.prepareStatement(INSERT_SEQ);stmt.setString(INS_NAME, getName());stmt.setLong(INS_NEXT_KEY, defaultInterval * 2);stmt.setLong(INS_INTERVAL, defaultInterval);stmt.setLong(INS_UPDATE, System.currentTimeMillis());try {if (stmt.executeUpdate() != 1) {nextId = -1L;logger.warn(""insert(): Failed to create sequencer entry for "" + getName() + "" (no error message)"");} else if (logger.isInfoEnabled()) {nextId = defaultInterval;nextSeed = defaultInterval * 2;interval = defaultInterval;logger.info(""insert(): First ID will be "" + nextId);}} catch (SQLException e) {logger.warn(""insert(): Error inserting row into database, possible concurrency issue: "" + e.getMessage());if (logger.isDebugEnabled()) {e.printStackTrace();}nextId = -1L;}if (!conn.getAutoCommit()) {conn.commit();}} finally {if (rs != null) {try {rs.close();} catch (SQLException ignore) {}}if (stmt != null) {try {stmt.close();} catch (SQLException ignore) {}}if (conn != null) {if (!conn.getAutoCommit()) {try {conn.rollback();} catch (SQLException ignore) {}}try {conn.close();} catch (SQLException ignore) {}}}} finally {if (logger.isDebugEnabled()) {logger.debug(""exit - "" + getClass().getName() + "".insert()"");}}}public boolean pollLocation(int device) {if (device < numDevices) {try {HttpResponse response = client.execute(post);BufferedReader reader = new BufferedReader(new InputStreamReader(response.getEntity().getContent(), ""UTF-8""));JSONObject object = (JSONObject) JSONValue.parse(reader);JSONArray array = ((JSONArray) object.get(""content""));object = (JSONObject) array.get(device);IPhoneLocation iPhoneLocation = getLocation(object);if (iPhoneLocation != null) {iPhoneRouteList.get(device).addLocation(iPhoneLocation);}} catch (ClientProtocolException ex) {logger.log(Level.SEVERE, null, ex);return false;} catch (IOException ex) {logger.log(Level.SEVERE, null, ex);return false;}} else {logger.log(Level.WARNING, ""Device {0} is out of range ({1} max)"", new Object[] { (device + 1), numDevices });return false;}return true;}public static void copyFile(URL url, File local) throws IOException {InputStream in = null;FileWriter writer = null;try {writer = new FileWriter(local);in = url.openStream();int c;while ((c = in.read()) != -1) {writer.write(c);}} finally {try {writer.flush();writer.close();in.close();} catch (Exception ignore) {LOGGER.error(ignore);}}}public void removeBodyPart(int iPart) throws MessagingException, ArrayIndexOutOfBoundsException {if (DebugFile.trace) {DebugFile.writeln(""Begin DBMimeMultipart.removeBodyPart("" + String.valueOf(iPart) + "")"");DebugFile.incIdent();}DBMimeMessage oMsg = (DBMimeMessage) getParent();DBFolder oFldr = ((DBFolder) oMsg.getFolder());Statement oStmt = null;ResultSet oRSet = null;String sDisposition = null, sFileName = null;boolean bFound;try {oStmt = oFldr.getConnection().createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);if (DebugFile.trace) DebugFile.writeln(""Statement.executeQuery(SELECT "" + DB.id_disposition + "","" + DB.file_name + "" FROM "" + DB.k_mime_parts + "" WHERE "" + DB.gu_mimemsg + ""='"" + oMsg.getMessageGuid() + ""' AND "" + DB.id_part + ""="" + String.valueOf(iPart) + "")"");oRSet = oStmt.executeQuery(""SELECT "" + DB.id_disposition + "","" + DB.file_name + "" FROM "" + DB.k_mime_parts + "" WHERE "" + DB.gu_mimemsg + ""='"" + oMsg.getMessageGuid() + ""' AND "" + DB.id_part + ""="" + String.valueOf(iPart));bFound = oRSet.next();if (bFound) {sDisposition = oRSet.getString(1);if (oRSet.wasNull()) sDisposition = ""inline"";sFileName = oRSet.getString(2);}oRSet.close();oRSet = null;oStmt.close();oStmt = null;if (!bFound) {if (DebugFile.trace) DebugFile.decIdent();throw new MessagingException(""Part not found"");}if (!sDisposition.equals(""reference"") && !sDisposition.equals(""pointer"")) {if (DebugFile.trace) DebugFile.decIdent();throw new MessagingException(""Only parts with reference or pointer disposition can be removed from a message"");} else {if (sDisposition.equals(""reference"")) {try {File oRef = new File(sFileName);if (oRef.exists()) oRef.delete();} catch (SecurityException se) {if (DebugFile.trace) DebugFile.writeln(""SecurityException "" + sFileName + "" "" + se.getMessage());if (DebugFile.trace) DebugFile.decIdent();throw new MessagingException(""SecurityException "" + sFileName + "" "" + se.getMessage(), se);}}oStmt = oFldr.getConnection().createStatement();if (DebugFile.trace) DebugFile.writeln(""Statement.executeUpdate(DELETE FROM "" + DB.k_mime_parts + "" WHERE "" + DB.gu_mimemsg + ""='"" + oMsg.getMessageGuid() + ""' AND "" + DB.id_part + ""="" + String.valueOf(iPart) + "")"");oStmt.executeUpdate(""DELETE FROM "" + DB.k_mime_parts + "" WHERE "" + DB.gu_mimemsg + ""='"" + oMsg.getMessageGuid() + ""' AND "" + DB.id_part + ""="" + String.valueOf(iPart));oStmt.close();oStmt = null;oFldr.getConnection().commit();}} catch (SQLException sqle) {if (oRSet != null) {try {oRSet.close();} catch (Exception ignore) {}}if (oStmt != null) {try {oStmt.close();} catch (Exception ignore) {}}try {oFldr.getConnection().rollback();} catch (Exception ignore) {}if (DebugFile.trace) DebugFile.decIdent();throw new MessagingException(sqle.getMessage(), sqle);}if (DebugFile.trace) {DebugFile.decIdent();DebugFile.writeln(""End DBMimeMultipart.removeBodyPart()"");}}private InputStream openRemoteStream(String remoteURL, String pathSuffix) {URL url;InputStream in = null;try {url = new URL(remoteURL + pathSuffix);HttpURLConnection connection = (HttpURLConnection) url.openConnection();in = connection.getInputStream();} catch (Exception e) {}return in;}private static String getDocumentAt(String urlString) {StringBuffer html_text = new StringBuffer();try {URL url = new URL(urlString);URLConnection conn = url.openConnection();BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));String line = null;while ((line = reader.readLine()) != null) html_text.append(line + ""\n"");reader.close();} catch (MalformedURLException e) {System.out.println(""��Ч��URL: "" + urlString);} catch (IOException e) {e.printStackTrace();}return html_text.toString();}public static ArrayList<RoleName> importRoles(String urlString) {ArrayList<RoleName> results = new ArrayList<RoleName>();try {URL url = new URL(urlString);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));StringBuffer buff = new StringBuffer();String line;while ((line = in.readLine()) != null) {buff.append(line);if (line.equals(""</RoleName>"")) {RoleName name = ProfileParser.parseRoleName(buff.toString());results.add(name);buff = new StringBuffer();} else {buff.append(NL);}}} catch (MalformedURLException e) {} catch (IOException e) {} catch (ParsingException e) {}return results;}public static ArrayList<Principal> importPrincipals(String urlString) {ArrayList<Principal> results = new ArrayList<Principal>();try {URL url = new URL(urlString);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));StringBuffer buff = new StringBuffer();String line;while ((line = in.readLine()) != null) {buff.append(line);if (line.equals(""</Principal>"")) {Principal principal = ProfileParser.parsePrincipal(buff.toString());results.add(principal);buff = new StringBuffer();} else {buff.append(NL);}}} catch (MalformedURLException e) {} catch (IOException e) {} catch (ParsingException e) {}return results;}public static ArrayList<Credential> importCredentials(String urlString) {ArrayList<Credential> results = new ArrayList<Credential>();try {URL url = new URL(urlString);BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));StringBuffer buff = new StringBuffer();String line;while ((line = in.readLine()) != null) {buff.append(line);if (line.equals(""-----END PGP SIGNATURE-----"")) {Credential credential = ProfileParser.parseCredential(buff.toString(), true);results.add(credential);buff = new StringBuffer();} else {buff.append(NL);}}} catch (MalformedURLException e) {} catch (IOException e) {} catch (ParsingException e) {System.err.println(e);}return results;}"	5
"public final void close() throws IOException {if (dataStream == null) throw new NullPointerException(""Write stream is null."");dataStream.flush();dataStream.close();dataStream = null;File tmpFile = new File(packPath + "".tmp"");FileOutputStream packStream = new FileOutputStream(packPath);try {String nbFiles = Long.toString(currentNbFiles) + ""\0"";packStream.write(FLAT_PACK_HEADER.getBytes(Charsets.ISO_8859_1));structBufferWriter.flush();structBufferWriter.close();int headerSize = structBuffer.size() + nbFiles.length();packStream.write(Integer.toString(headerSize).getBytes(Charsets.ISO_8859_1));packStream.write('\0');packStream.write(nbFiles.getBytes(Charsets.ISO_8859_1));structBuffer.writeTo(packStream);structBufferWriter = null;structBuffer = null;FileInputStream in = new FileInputStream(tmpFile);try {byte[] buffer = new byte[FILE_COPY_BUFFER_LEN];int read;while ((read = in.read(buffer)) > 0) packStream.write(buffer, 0, read);packStream.flush();packStream.close();} finally {Utilities.closeStream(in);}} finally {Utilities.closeStream(packStream);}if (tmpFile.isFile()) Utilities.deleteFile(tmpFile);packPath = null;structBuffer = null;}public RespID(PublicKey key) throws OCSPException {try {MessageDigest digest = MessageDigest.getInstance(""SHA1"");ASN1InputStream aIn = new ASN1InputStream(key.getEncoded());SubjectPublicKeyInfo info = SubjectPublicKeyInfo.getInstance(aIn.readObject());digest.update(info.getPublicKeyData().getBytes());ASN1OctetString keyHash = new DEROctetString(digest.digest());this.id = new ResponderID(keyHash);} catch (Exception e) {throw new OCSPException(""problem creating ID: "" + e, e);}}public static void copyFile(File source, File destination, boolean lazy) {if (!source.exists()) {return;}if (lazy) {String oldContent = null;try {oldContent = read(source);} catch (Exception e) {return;}String newContent = null;try {newContent = read(destination);} catch (Exception e) {}if (oldContent == null || !oldContent.equals(newContent)) {copyFile(source, destination, false);}} else {if ((destination.getParentFile() != null) && (!destination.getParentFile().exists())) {destination.getParentFile().mkdirs();}try {FileChannel srcChannel = new FileInputStream(source).getChannel();FileChannel dstChannel = new FileOutputStream(destination).getChannel();dstChannel.transferFrom(srcChannel, 0, srcChannel.size());srcChannel.close();dstChannel.close();} catch (IOException ioe) {ioe.printStackTrace();}}}public static int copy(File src, int amount, File dst) {final int BUFFER_SIZE = 1024;int amountToRead = amount;boolean ok = true;InputStream in = null;OutputStream out = null;try {in = new BufferedInputStream(new FileInputStream(src));out = new BufferedOutputStream(new FileOutputStream(dst));byte[] buf = new byte[BUFFER_SIZE];while (amountToRead > 0) {int read = in.read(buf, 0, Math.min(BUFFER_SIZE, amountToRead));if (read == -1) break;amountToRead -= read;out.write(buf, 0, read);}} catch (IOException e) {} finally {if (in != null) try {in.close();} catch (IOException e) {}if (out != null) {try {out.flush();} catch (IOException e) {}try {out.close();} catch (IOException e) {}}}return amount - amountToRead;}@Testpublic void testRegister() {try {String username = ""muchu"";String password = ""123"";MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(password.getBytes());String passwordMd5 = new String(md5.digest());LogService logServiceMock = EasyMock.createMock(LogService.class);DbService dbServiceMock = EasyMock.createMock(DbService.class);userServ.setDbServ(dbServiceMock);userServ.setLogger(logServiceMock);IFeelerUser user = new FeelerUserImpl();user.setUsername(username);user.setPassword(passwordMd5);logServiceMock.info(DbUserServiceImpl.class, "">>>rigister "" + username + ""<<<"");EasyMock.expect(dbServiceMock.queryFeelerUser(username)).andReturn(null);dbServiceMock.addFeelerUser(username, passwordMd5);logServiceMock.info(DbUserServiceImpl.class, "">>>identification "" + username + ""<<<"");EasyMock.expect(dbServiceMock.queryFeelerUser(username)).andReturn(user);EasyMock.replay(dbServiceMock, logServiceMock);Assert.assertTrue(userServ.register(username, password));EasyMock.verify(dbServiceMock, logServiceMock);} catch (NoSuchAlgorithmException e) {e.printStackTrace();}}@Testpublic void testIdentification() {try {String username = ""muchu"";String password = ""123"";MessageDigest md5 = MessageDigest.getInstance(""MD5"");md5.update(password.getBytes());LogService logServiceMock = EasyMock.createMock(LogService.class);DbService dbServiceMock = EasyMock.createMock(DbService.class);userServ.setDbServ(dbServiceMock);userServ.setLogger(logServiceMock);logServiceMock.info(DbUserServiceImpl.class, "">>>identification "" + username + ""<<<"");IFeelerUser user = new FeelerUserImpl();user.setUsername(username);user.setPassword(new String(md5.digest()));EasyMock.expect(dbServiceMock.queryFeelerUser(username)).andReturn(user);EasyMock.replay(logServiceMock, dbServiceMock);Assert.assertTrue(userServ.identification(username, password));EasyMock.verify(logServiceMock, dbServiceMock);} catch (NoSuchAlgorithmException e) {e.printStackTrace();}}protected HttpResponseImpl makeRequest(final HttpMethod m, final String requestId) {try {HttpResponseImpl ri = new HttpResponseImpl();ri.setRequestMethod(m);ri.setResponseCode(_client.executeMethod(m));ByteArrayOutputStream bos = new ByteArrayOutputStream();IOUtils.copy(m.getResponseBodyAsStream(), bos);ri.setResponseBody(bos.toByteArray());notifyOfRequestSuccess(requestId, m, ri);return ri;} catch (HttpException ex) {notifyOfRequestFailure(requestId, m, ex);} catch (IOException ex) {notifyOfRequestFailure(requestId, m, ex);}return null;}private static void loadFromZip() {InputStream in = Resources.class.getResourceAsStream(""data.zip"");if (in == null) {return;}ZipInputStream zipIn = new ZipInputStream(in);try {while (true) {ZipEntry entry = zipIn.getNextEntry();if (entry == null) {break;}String entryName = entry.getName();if (!entryName.startsWith(""/"")) {entryName = ""/"" + entryName;}ByteArrayOutputStream out = new ByteArrayOutputStream();IOUtils.copy(zipIn, out);zipIn.closeEntry();FILES.put(entryName, out.toByteArray());}zipIn.close();} catch (IOException e) {e.printStackTrace();}}@Overridepublic MD2Model loadModel(URL url, String skin) throws IOException, IncorrectFormatException, ParsingErrorException {boolean baseURLWasNull = setBaseURLFromModelURL(url);MD2Model model = loadModel(url.openStream(), skin);if (baseURLWasNull) {popBaseURL();}return (model);}public void test() throws Exception {StorageStringWriter s = new StorageStringWriter(2048, ""UTF-8"");s.addText(""Test"");try {s.getOutputStream();fail(""Should throw IOException as method not supported."");} catch (IOException e) {}s.getWriter().write(""ing is important"");s.close(ResponseStateOk.getInstance());assertEquals(""Testing is important"", s.getText());InputStream input = s.getInputStream();StringWriter writer = new StringWriter();IOUtils.copy(input, writer, ""UTF-8"");assertEquals(""Testing is important"", writer.toString());try {s.getWriter();fail(""Should throw IOException as storage is closed."");} catch (IOException e) {}}"	5
"public void moveRuleDown(String language, String tag, int row) throws FidoDatabaseException {try {Connection conn = null;Statement stmt = null;try {conn = fido.util.FidoDataSource.getConnection();conn.setAutoCommit(false);stmt = conn.createStatement();int max = findMaxRank(stmt, language, tag);if ((row < 1) || (row > (max - 1))) throw new IllegalArgumentException(""Row number ("" + row + "") was not between 1 and "" + (max - 1));stmt.executeUpdate(""update LanguageMorphologies set Rank = -1 "" + ""where Rank = "" + row + "" and MorphologyTag = '"" + tag + ""' and "" + ""  LanguageName = '"" + language + ""'"");stmt.executeUpdate(""update LanguageMorphologies set Rank = "" + row + ""where Rank = "" + (row + 1) + "" and MorphologyTag = '"" + tag + ""' and "" + ""  LanguageName = '"" + language + ""'"");stmt.executeUpdate(""update LanguageMorphologies set Rank = "" + (row + 1) + ""where Rank = -1 and MorphologyTag = '"" + tag + ""' and "" + ""  LanguageName = '"" + language + ""'"");conn.commit();} catch (SQLException e) {if (conn != null) conn.rollback();throw e;} finally {if (stmt != null) stmt.close();if (conn != null) conn.close();}} catch (SQLException e) {throw new FidoDatabaseException(e);}}private void checkSites() {Log.d(LOG_TAG, ""Updating sites: "" + sitesToCheck.keySet().toString());for (Map.Entry<Site, Item> entry : sitesToCheck.entrySet()) {final Site site = entry.getKey();final Item oldItem = entry.getValue();try {final HttpGet req = new HttpGet(site.getUrl().toURI());req.addHeader(""Cache-Control"", ""no-cache"");req.addHeader(""Pragma"", ""no-cache"");if (oldItem != null) {final Date lastModified = oldItem.getTimestamp();if (lastModified != null) {req.addHeader(""If-Modified-Since"", Utils.formatRFC822Date(lastModified));}}final HttpResponse response = httpClient.execute(req);if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {final FeedHandler handler = site.getHandler().newInstance();final InputStream in = response.getEntity().getContent();Xml.parse(in, site.getEncoding(), handler);in.close();notify(site, handler.getCurrentItem());} else if (response.getStatusLine().getStatusCode() != 304) {Log.e(LOG_TAG, ""HTTP request for "" + site.name() + "" failed: "" + response.getStatusLine().toString());}} catch (Throwable e) {Log.e(LOG_TAG, e.getMessage(), e);}}}private void extractByParsingHtml(String refererURL, String requestURL) throws MalformedURLException, IOException {URL url = new URL(refererURL);InputStream is = url.openStream();mRefererURL = refererURL;if (requestURL.startsWith(""http://www."")) {mRequestURLWWW = requestURL;mRequestURL = ""http://"" + mRequestURLWWW.substring(11);} else {mRequestURL = requestURL;mRequestURLWWW = ""http://www."" + mRequestURL.substring(7);}Parser parser = (new HTMLEditorKit() {public Parser getParser() {return super.getParser();}}).getParser();StringBuffer sb = new StringBuffer();InputStreamReader isr = new InputStreamReader(is);BufferedReader br = new BufferedReader(isr);try {String line = null;while ((line = br.readLine()) != null) {sb.append(line);}} finally {br.close();}StringReader sr = new StringReader(sb.toString());parser.parse(sr, new LinkbackCallback(), true);if (mStart != 0 && mEnd != 0 && mEnd > mStart) {mExcerpt = sb.toString().substring(mStart, mEnd);mExcerpt = Utilities.removeHTML(mExcerpt);if (mExcerpt.length() > mMaxExcerpt) {mExcerpt = mExcerpt.substring(0, mMaxExcerpt) + ""..."";}}if (mTitle.startsWith("">"") && mTitle.length() > 1) {mTitle = mTitle.substring(1);}}public void copy(File s, File t) throws IOException {FileChannel in = (new FileInputStream(s)).getChannel();FileChannel out = (new FileOutputStream(t)).getChannel();in.transferTo(0, s.length(), out);in.close();out.close();}public String upload() throws IOException {int idx = docIndex.incrementAndGet();String tmpName = ""namefinder/doc_"" + idx + ""__"" + fileFileName;File tmpFile = tmpFile(tmpName);if (tmpFile.exists()) {org.apache.commons.io.FileUtils.deleteQuietly(tmpFile);}org.apache.commons.io.FileUtils.touch(tmpFile);InputStream fileStream = new FileInputStream(file);OutputStream bos = new FileOutputStream(tmpFile);IOUtils.copy(fileStream, bos);bos.close();fileStream.close();return tmpUrl(tmpName);}public static void main(String[] args) {try {MessageDigest sha1 = MessageDigest.getInstance(""SHA1"");sha1.update(""Test"".getBytes());byte[] digest = sha1.digest();for (int i = 0; i < digest.length; i++) {System.err.print(Integer.toHexString(0xFF & digest[i]));}} catch (NoSuchAlgorithmException e) {e.printStackTrace();}}public static String MD5(String text) {MessageDigest md;try {md = MessageDigest.getInstance(""MD5"");byte[] md5hash = new byte[32];md.update(text.getBytes(""iso-8859-1""), 0, text.length());md5hash = md.digest();return convertToHex(md5hash);} catch (NoSuchAlgorithmException ex) {ex.printStackTrace();return text;} catch (UnsupportedEncodingException ex) {ex.printStackTrace();return text;}}@Overridepublic T[] sort(T[] values) {super.compareTimes = 0;for (int i = 0; i < values.length; i++) {for (int j = 0; j < values.length - i - 1; j++) {super.compareTimes++;if (values[j].compareTo(values[j + 1]) > 0) {T temp = values[j];values[j] = values[j + 1];values[j + 1] = temp;}}}return values;}@SuppressWarnings({ ""serial"", ""unchecked"" })private static IProject createCopyProject(IProject project, String pName, IWorkspace ws, IProgressMonitor pm) throws Exception {pm.beginTask(""Creating temp project"", 1);final IPath destination = new Path(pName);final IJavaProject oldJavaproj = JavaCore.create(project);final IClasspathEntry[] classPath = oldJavaproj.getRawClasspath();final IProject newProject = ResourcesPlugin.getWorkspace().getRoot().getProject(pName);newProject.create(null);newProject.open(null);final IProjectDescription desc = newProject.getDescription();desc.setNatureIds(new String[] { JavaCore.NATURE_ID });newProject.setDescription(desc, null);final List<IClasspathEntry> newClassPath = new ArrayList<IClasspathEntry>();for (final IClasspathEntry cEntry : classPath) {switch(cEntry.getEntryKind()) {case IClasspathEntry.CPE_SOURCE:System.out.println(""Source folder "" + cEntry.getPath());newClassPath.add(copySourceFolder(project, newProject, cEntry, destination));break;case IClasspathEntry.CPE_LIBRARY:System.out.println(""library folder "" + cEntry.getPath());newClassPath.add(cEntry);break;case IClasspathEntry.CPE_PROJECT:System.out.println(""project folder "" + cEntry.getPath());newClassPath.add(cEntry);break;case IClasspathEntry.CPE_VARIABLE:System.out.println(""variable folder "" + cEntry.getPath());newClassPath.add(cEntry);break;default:System.out.println(""container folder "" + cEntry.getPath());newClassPath.add(cEntry);}}copyDir(project.getLocation().toString(), ""/translator"", newProject.getLocation().toString(), """", new ArrayList<String>() {{add(""generated"");add(""classes"");add("".svn"");}});newProject.refreshLocal(IResource.DEPTH_INFINITE, pm);newProject.build(IncrementalProjectBuilder.AUTO_BUILD, pm);newProject.touch(pm);final IJavaProject javaproj = JavaCore.create(newProject);javaproj.setOutputLocation(new Path(""/"" + newProject.getName() + ""/classes/bin""), null);javaproj.setRawClasspath(newClassPath.toArray(new IClasspathEntry[newClassPath.size()]), pm);final Map opts = oldJavaproj.getOptions(true);javaproj.setOptions(opts);javaproj.makeConsistent(pm);javaproj.save(pm, true);return newProject;}@Testpublic void testLoadHttpGzipped() throws Exception {String url = HTTP_GZIPPED;LoadingInfo loadingInfo = Utils.openFileObject(fsManager.resolveFile(url));InputStream contentInputStream = loadingInfo.getContentInputStream();byte[] actual = IOUtils.toByteArray(contentInputStream);byte[] expected = IOUtils.toByteArray(new GZIPInputStream(new URL(url).openStream()));assertEquals(expected.length, actual.length);}"	5
"private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = random.nextLong();}sbValueBeforeMD5.append(sid);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {}}public static boolean downloadFile(String srcUri, String srcDest) {try {URL url = new URL(srcUri);InputStream is = url.openStream();BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(srcDest));byte[] buff = new byte[10000];int b;while ((b = is.read(buff)) > 0) bos.write(buff, 0, b);is.close();bos.close();} catch (Exception e) {e.printStackTrace();return false;}return true;}public static String getByUrl(String urlStr, String para) {URL url;StringBuffer html = new StringBuffer("""");try {url = new URL(urlStr);HttpURLConnection connection = (HttpURLConnection) url.openConnection();connection.setRequestMethod(""POST"");connection.setDoOutput(true);OutputStreamWriter out = new OutputStreamWriter(connection.getOutputStream(), ""8859_1"");out.write(para);out.flush();out.close();System.out.println(""para:"" + para);InputStream is = url.openStream();BufferedReader br = new BufferedReader(new InputStreamReader(is));String line = """";line = br.readLine();while (line != null) {html.append(line + ""\n"");line = br.readLine();}} catch (MalformedURLException e) {e.printStackTrace();} catch (IOException e) {e.printStackTrace();}return html.toString();}private String encode(String arg) {try {final MessageDigest digest = MessageDigest.getInstance(""MD5"");digest.update(arg.getBytes());byte[] md5sum = digest.digest();final BigInteger bigInt = new BigInteger(1, md5sum);final String output = bigInt.toString(16);return output;} catch (NoSuchAlgorithmException e) {throw new IllegalStateException(""MD5 required: "" + e.getMessage(), e);}}private void getRandomGUID(boolean secure) {MessageDigest md5 = null;StringBuffer sbValueBeforeMD5 = new StringBuffer();try {md5 = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {System.out.println(""Error: "" + e);}try {long time = System.currentTimeMillis();long rand = 0;if (secure) {rand = mySecureRand.nextLong();} else {rand = myRand.nextLong();}sbValueBeforeMD5.append(s_id);sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(time));sbValueBeforeMD5.append("":"");sbValueBeforeMD5.append(Long.toString(rand));valueBeforeMD5 = sbValueBeforeMD5.toString();md5.update(valueBeforeMD5.getBytes());byte[] array = md5.digest();StringBuffer sb = new StringBuffer();for (int j = 0; j < array.length; ++j) {int b = array[j] & 0xFF;if (b < 0x10) sb.append('0');sb.append(Integer.toHexString(b));}valueAfterMD5 = sb.toString();} catch (Exception e) {System.out.println(""Error:"" + e);}}public static Set<Class<?>> getClasses(String pack) {Set<Class<?>> classes = new LinkedHashSet<Class<?>>();boolean recursive = true;String packageName = pack;String packageDirName = packageName.replace('.', '/');Enumeration<URL> dirs;try {dirs = Thread.currentThread().getContextClassLoader().getResources(packageDirName);while (dirs.hasMoreElements()) {URL url = dirs.nextElement();String protocol = url.getProtocol();if (""file"".equals(protocol)) {String filePath = URLDecoder.decode(url.getFile(), ""UTF-8"");findAndAddClassesInPackageByFile(packageName, filePath, recursive, classes);} else if (""jar"".equals(protocol)) {JarFile jar;try {jar = ((JarURLConnection) url.openConnection()).getJarFile();Enumeration<JarEntry> entries = jar.entries();while (entries.hasMoreElements()) {JarEntry entry = entries.nextElement();String name = entry.getName();if (name.charAt(0) == '/') {name = name.substring(1);}if (name.startsWith(packageDirName)) {int idx = name.lastIndexOf('/');if (idx != -1) {packageName = name.substring(0, idx).replace('/', '.');}if ((idx != -1) || recursive) {if (name.endsWith("".class"") && !entry.isDirectory()) {String className = name.substring(packageName.length() + 1, name.length() - 6);try {classes.add(Class.forName(packageName + '.' + className));} catch (ClassNotFoundException e) {System.out.println(""添加用户自定义视图类错误 找不到此类的.class文件"");e.printStackTrace();}}}}}} catch (IOException e) {System.out.println(""在扫描用户定义视图时从jar包获取文件出错"");e.printStackTrace();}}}} catch (IOException e) {e.printStackTrace();}return classes;}@Overridepublic void copy(final String fileName) throws FileIOException {final long savedCurrentPositionInFile = currentPositionInFile;if (opened) {closeImpl();}final FileInputStream fis;try {fis = new FileInputStream(file);} catch (FileNotFoundException exception) {throw HELPER_FILE_UTIL.fileIOException(FAILED_OPEN + file, file, exception);}final File destinationFile = new File(fileName);final FileOutputStream fos;try {fos = new FileOutputStream(destinationFile);} catch (FileNotFoundException exception) {throw HELPER_FILE_UTIL.fileIOException(FAILED_OPEN + destinationFile, destinationFile, exception);}try {final byte[] buf = new byte[1024];int readLength = 0;while ((readLength = fis.read(buf)) != -1) {fos.write(buf, 0, readLength);}} catch (IOException exception) {throw HELPER_FILE_UTIL.fileIOException(""failed copy from "" + file + "" to "" + destinationFile, null, exception);} finally {try {if (fis != null) {fis.close();}} catch (Exception exception) {}try {if (fos != null) {fos.close();}} catch (Exception exception) {}}if (opened) {openImpl();seek(savedCurrentPositionInFile);}}protected UnicodeList(URL url) {try {BufferedReader br = new BufferedReader(new InputStreamReader(new GZIPInputStream(url.openStream())));String line;line = br.readLine();chars = new ArrayList();while ((line = br.readLine()) != null) {String[] parts = GUIHelper.split(line, "";"");if (parts[0].length() >= 5) continue;if (parts.length < 2 || parts[0].length() != 4) {System.out.println(""Strange line: "" + line);} else {if (parts.length > 10 && parts[1].equals(""<control>"")) {parts[1] = parts[1] + "": "" + parts[10];}try {Integer.parseInt(parts[0], 16);chars.add(parts[0] + parts[1]);} catch (NumberFormatException ex) {System.out.println(""No number: "" + line);}}}br.close();} catch (FileNotFoundException ex) {} catch (IOException ex) {ex.printStackTrace();}}public void read(Model model, String url) {try {URLConnection conn = new URL(url).openConnection();String encoding = conn.getContentEncoding();if (encoding == null) {read(model, conn.getInputStream(), url);} else {read(model, new InputStreamReader(conn.getInputStream(), encoding), url);}} catch (IOException e) {throw new JenaException(e);}}private File copyFile(File file, String newName, File folder) {File newFile = null;if (!file.exists()) {System.out.println(""File "" + file + "" does not exist"");return null;}if (file.isFile()) {BufferedOutputStream out = null;BufferedInputStream in = null;try {in = new BufferedInputStream(new FileInputStream(file));newFile = new File(folder, newName);if (!newFile.exists()) {newFile.createNewFile();}out = new BufferedOutputStream(new FileOutputStream(newFile));int read;byte[] buffer = new byte[8192];while ((read = in.read(buffer)) != -1) {out.write(buffer, 0, read);}updateTreeUI();} catch (IOException ex) {Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);} finally {try {if (in != null) {in.close();}if (out != null) {out.close();}} catch (IOException ex) {Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);}}} else if (file.isDirectory()) {newFile = new File(folder, newName);if (!newFile.exists()) {newFile.mkdir();}for (File f : file.listFiles()) {copyFile(f, f.getName(), newFile);}}return newFile;}"	5
"@Overridepublic VocabularyLocation next() {try {if (!urls.isEmpty()) {final URL url = urls.poll();return new VocabularyLocation(url.toExternalForm(), VocabularyFormat.RDFXML, 0, url.openStream());}if (!files.isEmpty()) {File file = files.poll();return new VocabularyLocation(file.getCanonicalPath(), file.getName().endsWith("".ntriples"") ? VocabularyFormat.NTRIPLES : VocabularyFormat.RDFXML, file.lastModified(), new FileInputStream(file));}if (nextZipEntry != null) {String zipEntryAsString = IOUtils.toString(new CloseShieldInputStream(in), ""UTF-8"");VocabularyLocation location = new VocabularyLocation(nextZipEntry.getName(), nextZipEntry.getName().endsWith("".rdf"") ? VocabularyFormat.RDFXML : null, nextZipEntry.getTime(), IOUtils.toInputStream(zipEntryAsString, ""UTF-8""));findNextZipEntry();return location;}} catch (Exception e) {throw new RuntimeException(e);}throw new NoSuchElementException();}@Overrideprotected svm_model loadModel(InputStream inputStream) throws IOException {File tmpFile = File.createTempFile(""tmp"", "".mdl"");FileOutputStream output = new FileOutputStream(tmpFile);try {IOUtils.copy(inputStream, output);return libsvm.svm.svm_load_model(tmpFile.getPath());} finally {output.close();tmpFile.delete();}}public static void writeToFile(final File file, final InputStream in) throws IOException {IOUtils.createFile(file);FileOutputStream fos = null;try {fos = new FileOutputStream(file);IOUtils.copyStream(in, fos);} finally {IOUtils.closeIO(fos);}}public static void copyFile(final File sourceFile, final File destFile) throws IOException {if (!destFile.exists()) {destFile.createNewFile();}FileInputStream inStream = null;FileOutputStream outStream = null;FileChannel source = null;FileChannel destination = null;try {source = (inStream = new FileInputStream(sourceFile)).getChannel();destination = (outStream = new FileOutputStream(destFile)).getChannel();destination.transferFrom(source, 0, source.size());} finally {closeIO(source);closeIO(inStream);closeIO(destination);closeIO(outStream);}}public static InputStream obterConteudoArquivo(String u) {URL url;try {url = new URL(u);URLConnection conn = null;if (proxy != null) conn = url.openConnection(proxy.getProxy()); else conn = url.openConnection();return new DataInputStream(conn.getInputStream());} catch (MalformedURLException e) {throw new AlfredException(e);} catch (IOException e) {throw new AlfredException(e);}}public static String obterConteudoSite(String u) {URL url;try {url = new URL(u);URLConnection conn = null;if (proxy != null) conn = url.openConnection(proxy.getProxy()); else conn = url.openConnection();conn.setDoOutput(true);BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream(), Charset.forName(""UTF-8"")));String line;StringBuilder resultado = new StringBuilder();while ((line = rd.readLine()) != null) {resultado.append(line);resultado.append(""\n"");}rd.close();return resultado.toString();} catch (MalformedURLException e) {throw new AlfredException(""Não foi possível obter contato com o site "" + u, e);} catch (IOException e) {throw new AlfredException(""Não foi possível obter contato com o site "" + u, e);}}protected byte[] getTSAResponse(byte[] requestBytes) throws Exception {URL url = new URL(tsaURL);URLConnection tsaConnection;tsaConnection = (URLConnection) url.openConnection();tsaConnection.setDoInput(true);tsaConnection.setDoOutput(true);tsaConnection.setUseCaches(false);tsaConnection.setRequestProperty(""Content-Type"", ""application/timestamp-query"");tsaConnection.setRequestProperty(""Content-Transfer-Encoding"", ""binary"");if ((tsaUsername != null) && !tsaUsername.equals("""")) {String userPassword = tsaUsername + "":"" + tsaPassword;tsaConnection.setRequestProperty(""Authorization"", ""Basic "" + Base64.encodeBytes(userPassword.getBytes()));}OutputStream out = tsaConnection.getOutputStream();out.write(requestBytes);out.close();InputStream inp = tsaConnection.getInputStream();ByteArrayOutputStream baos = new ByteArrayOutputStream();byte[] buffer = new byte[1024];int bytesRead = 0;while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) {baos.write(buffer, 0, bytesRead);}byte[] respBytes = baos.toByteArray();String encoding = tsaConnection.getContentEncoding();if (encoding != null && encoding.equalsIgnoreCase(""base64"")) {respBytes = Base64.decode(new String(respBytes));}return respBytes;}public void logout(String cookieString) throws NetworkException {HttpClient client = HttpConfig.newInstance();HttpGet get = new HttpGet(HttpConfig.bbsURL() + HttpConfig.BBS_LOGOUT);if (cookieString != null && cookieString.length() != 0) get.setHeader(""Cookie"", cookieString);try {HttpResponse response = client.execute(get);if (response != null && response.getEntity() != null) {HTTPUtil.consume(response.getEntity());}} catch (Exception e) {e.printStackTrace();throw new NetworkException(e);}}public List<BoardObject> favBoard() throws NetworkException, ContentException {HttpClient client = HttpConfig.newInstance();HttpGet get = new HttpGet(HttpConfig.bbsURL() + HttpConfig.BBS_FAV);try {HttpResponse response = client.execute(get);HttpEntity entity = response.getEntity();if (HTTPUtil.isHttp200(response) && HTTPUtil.isXmlContentType(response)) {Document doc = XmlOperator.readDocument(entity.getContent());return BBSBodyParseHelper.parseFavBoardList(doc);} else {String msg = BBSBodyParseHelper.parseFailMsg(entity);throw new ContentException(msg);}} catch (ClientProtocolException e) {e.printStackTrace();throw new NetworkException(e);} catch (IOException e) {e.printStackTrace();throw new NetworkException(e);}}public boolean addFavBoard(BoardObject board) throws NetworkException, ContentException {String url = HttpConfig.bbsURL() + HttpConfig.BBS_FAV_ADD + board.getId();HttpClient client = HttpConfig.newInstance();HttpGet get = new HttpGet(url);try {HttpResponse response = client.execute(get);HttpEntity entity = response.getEntity();if (HTTPUtil.isHttp200(response) && HTTPUtil.isXmlContentType(response)) {HTTPUtil.consume(response.getEntity());return true;} else {String msg = BBSBodyParseHelper.parseFailMsg(entity);throw new ContentException(msg);}} catch (ClientProtocolException e) {e.printStackTrace();throw new NetworkException(e);} catch (IOException e) {e.printStackTrace();throw new NetworkException(e);}}"	5
"public static void fastBackup(File file) {FileChannel in = null;FileChannel out = null;FileInputStream fin = null;FileOutputStream fout = null;try {in = (fin = new FileInputStream(file)).getChannel();out = (fout = new FileOutputStream(file.getAbsolutePath() + "".bak"")).getChannel();in.transferTo(0, in.size(), out);} catch (IOException e) {Logging.getErrorLog().reportError(""Fast backup failure ("" + file.getAbsolutePath() + ""): "" + e.getMessage());} finally {if (fin != null) {try {fin.close();} catch (IOException e) {Logging.getErrorLog().reportException(""Failed to close file input stream"", e);}}if (fout != null) {try {fout.close();} catch (IOException e) {Logging.getErrorLog().reportException(""Failed to close file output stream"", e);}}if (in != null) {try {in.close();} catch (IOException e) {Logging.getErrorLog().reportException(""Failed to close file channel"", e);}}if (out != null) {try {out.close();} catch (IOException e) {Logging.getErrorLog().reportException(""Failed to close file channel"", e);}}}}private void doLogin(String password) throws LoginFailedException, IncorrectPasswordException {long mgr = Constants.MANAGER;Data data, response;try {response = sendAndWait(new Request(mgr)).get(0);MessageDigest md;try {md = MessageDigest.getInstance(""MD5"");} catch (NoSuchAlgorithmException e) {throw new RuntimeException(""MD5 hash not supported."");}byte[] challenge = response.getBytes();md.update(challenge);md.update(password.getBytes(Data.STRING_ENCODING));try {data = Data.valueOf(md.digest());response = sendAndWait(new Request(mgr).add(0, data)).get(0);} catch (ExecutionException ex) {throw new IncorrectPasswordException();}loginMessage = response.getString();response = sendAndWait(new Request(mgr).add(0, getLoginData())).get(0);ID = response.getWord();} catch (InterruptedException ex) {throw new LoginFailedException(ex);} catch (ExecutionException ex) {throw new LoginFailedException(ex);} catch (IOException ex) {throw new LoginFailedException(ex);}}public static String encrypt(String data) throws IOException, NoSuchAlgorithmException {Properties props = Configuration.getInstance().getProperties();String algorithm = props.getProperty(""com.makeabyte.jhosting.server.persistence.security.algorithm"");String encryptedData = data;boolean encrypt = Boolean.parseBoolean(props.getProperty(""com.makeabyte.jhosting.server.persistence.security.encrypt""));if (encrypt) {if (algorithm.equalsIgnoreCase(""UTF-16LE"")) return encryptActiveDirectory(data);MessageDigest md = java.security.MessageDigest.getInstance(algorithm);md.reset();md.update(data.getBytes());encryptedData = md.digest().toString();}return encryptedData;}public String getDigest(String algorithm, String data) throws IOException, NoSuchAlgorithmException {MessageDigest md = java.security.MessageDigest.getInstance(algorithm);md.reset();md.update(data.getBytes());return md.digest().toString();}private Document parseResponse(String url) throws IOException, MalformedURLException, ParserConfigurationException, SAXException {DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();InputStream stream = null;try {stream = new URL(url).openStream();return db.parse(stream);} finally {PetstoreUtil.closeIgnoringException(stream);}}public static String md5(String plainText) {String ret = null;try {MessageDigest md = MessageDigest.getInstance(""MD5"");md.update(plainText.getBytes());byte b[] = md.digest();int i;StringBuffer buf = new StringBuffer("""");for (int offset = 0; offset < b.length; offset++) {i = b[offset];if (i < 0) i += 256;if (i < 16) buf.append(""0"");buf.append(Integer.toHexString(i));}ret = buf.toString();} catch (NoSuchAlgorithmException e) {e.printStackTrace();}return ret;}public BufferedImage extractUsingCompositor() throws IOException, DjatokaException {boolean useRegion = false;int left = 0;int top = 0;int width = 50;int height = 50;boolean useleftDouble = false;Double leftDouble = 0.0;boolean usetopDouble = false;Double topDouble = 0.0;boolean usewidthDouble = false;Double widthDouble = 0.0;boolean useheightDouble = false;Double heightDouble = 0.0;if (params.getRegion() != null) {StringTokenizer st = new StringTokenizer(params.getRegion(), ""{},"");String token;if ((token = st.nextToken()).contains(""."")) {topDouble = Double.parseDouble(token);usetopDouble = true;} else top = Integer.parseInt(token);if ((token = st.nextToken()).contains(""."")) {leftDouble = Double.parseDouble(token);useleftDouble = true;} else left = Integer.parseInt(token);if ((token = st.nextToken()).contains(""."")) {heightDouble = Double.parseDouble(token);useheightDouble = true;} else height = Integer.parseInt(token);if ((token = st.nextToken()).contains(""."")) {widthDouble = Double.parseDouble(token);usewidthDouble = true;} else width = Integer.parseInt(token);useRegion = true;}if (is != null) {File f = File.createTempFile(""tmp"", "".jp2"");f.deleteOnExit();FileOutputStream fos = new FileOutputStream(f);sourceFile = f.getAbsolutePath();IOUtils.copyStream(is, fos);}Kdu_simple_file_source raw_src = null;Jp2_family_src family_src = new Jp2_family_src();Jpx_source wrapped_src = new Jpx_source();Kdu_region_compositor compositor = null;BufferedImage image = null;try {family_src.Open(sourceFile);int success = wrapped_src.Open(family_src, true);if (success < 0) {family_src.Close();wrapped_src.Close();raw_src = new Kdu_simple_file_source(sourceFile);}compositor = new Kdu_region_compositor();if (raw_src != null) compositor.Create(raw_src); else compositor.Create(wrapped_src);Kdu_dims imageDimensions = new Kdu_dims();compositor.Get_total_composition_dims(imageDimensions);Kdu_coords imageSize = imageDimensions.Access_size();Kdu_coords imagePosition = imageDimensions.Access_pos();if (useleftDouble) left = imagePosition.Get_x() + (int) Math.round(leftDouble * imageSize.Get_x());if (usetopDouble) top = imagePosition.Get_y() + (int) Math.round(topDouble * imageSize.Get_y());if (useheightDouble) height = (int) Math.round(heightDouble * imageSize.Get_y());if (usewidthDouble) width = (int) Math.round(widthDouble * imageSize.Get_x());if (useRegion) {imageSize.Set_x(width);imageSize.Set_y(height);imagePosition.Set_x(left);imagePosition.Set_y(top);}int reduce = 1 << params.getLevelReductionFactor();imageSize.Set_x(imageSize.Get_x());imageSize.Set_y(imageSize.Get_y());imagePosition.Set_x(imagePosition.Get_x() / reduce - (1 / reduce - 1) / 2);imagePosition.Set_y(imagePosition.Get_y() / reduce - (1 / reduce - 1) / 2);Kdu_dims viewDims = new Kdu_dims();viewDims.Assign(imageDimensions);viewDims.Access_size().Set_x(imageSize.Get_x());viewDims.Access_size().Set_y(imageSize.Get_y());compositor.Add_compositing_layer(0, viewDims, viewDims);if (params.getRotationDegree() == 90) compositor.Set_scale(true, false, true, 1.0F); else if (params.getRotationDegree() == 180) compositor.Set_scale(false, true, true, 1.0F); else if (params.getRotationDegree() == 270) compositor.Set_scale(true, true, false, 1.0F); else compositor.Set_scale(false, false, false, 1.0F);compositor.Get_total_composition_dims(viewDims);Kdu_coords viewSize = viewDims.Access_size();compositor.Set_buffer_surface(viewDims);int[] imgBuffer = new int[viewSize.Get_x() * viewSize.Get_y()];Kdu_compositor_buf compositorBuffer = compositor.Get_composition_buffer(viewDims);int regionBufferSize = 0;int[] kduBuffer = null;Kdu_dims newRegion = new Kdu_dims();while (compositor.Process(100000, newRegion)) {Kdu_coords newOffset = newRegion.Access_pos();Kdu_coords newSize = newRegion.Access_size();newOffset.Subtract(viewDims.Access_pos());int newPixels = newSize.Get_x() * newSize.Get_y();if (newPixels == 0) continue;if (newPixels > regionBufferSize) {regionBufferSize = newPixels;kduBuffer = new int[regionBufferSize];}compositorBuffer.Get_region(newRegion, kduBuffer);int imgBuffereIdx = newOffset.Get_x() + newOffset.Get_y() * viewSize.Get_x();int kduBufferIdx = 0;int xDiff = viewSize.Get_x() - newSize.Get_x();for (int j = 0; j < newSize.Get_y(); j++, imgBuffereIdx += xDiff) {for (int i = 0; i < newSize.Get_x(); i++) {imgBuffer[imgBuffereIdx++] = kduBuffer[kduBufferIdx++];}}}if (params.getRotationDegree() == 90 || params.getRotationDegree() == 270) image = new BufferedImage(imageSize.Get_y(), imageSize.Get_x(), BufferedImage.TYPE_INT_RGB); else image = new BufferedImage(imageSize.Get_x(), imageSize.Get_y(), BufferedImage.TYPE_INT_RGB);image.setRGB(0, 0, viewSize.Get_x(), viewSize.Get_y(), imgBuffer, 0, viewSize.Get_x());if (compositor != null) compositor.Native_destroy();wrapped_src.Native_destroy();family_src.Native_destroy();if (raw_src != null) raw_src.Native_destroy();return image;} catch (KduException e) {e.printStackTrace();throw new DjatokaException(e);} catch (Exception e) {e.printStackTrace();throw new DjatokaException(e);}}public BufferedImage extract() throws DjatokaException {boolean useRegion = false;int left = 0;int top = 0;int width = 50;int height = 50;boolean useleftDouble = false;Double leftDouble = 0.0;boolean usetopDouble = false;Double topDouble = 0.0;boolean usewidthDouble = false;Double widthDouble = 0.0;boolean useheightDouble = false;Double heightDouble = 0.0;if (params.getRegion() != null) {StringTokenizer st = new StringTokenizer(params.getRegion(), ""{},"");String token;if ((token = st.nextToken()).contains(""."")) {topDouble = Double.parseDouble(token);usetopDouble = true;} else top = Integer.parseInt(token);if ((token = st.nextToken()).contains(""."")) {leftDouble = Double.parseDouble(token);useleftDouble = true;} else left = Integer.parseInt(token);if ((token = st.nextToken()).contains(""."")) {heightDouble = Double.parseDouble(token);useheightDouble = true;} else height = Integer.parseInt(token);if ((token = st.nextToken()).contains(""."")) {widthDouble = Double.parseDouble(token);usewidthDouble = true;} else width = Integer.parseInt(token);useRegion = true;}try {if (is != null) {File f = File.createTempFile(""tmp"", "".jp2"");f.deleteOnExit();FileOutputStream fos = new FileOutputStream(f);sourceFile = f.getAbsolutePath();IOUtils.copyStream(is, fos);is.close();fos.close();}} catch (IOException e) {throw new DjatokaException(e);}try {Jp2_source inputSource = new Jp2_source();Kdu_compressed_source input = null;Jp2_family_src jp2_family_in = new Jp2_family_src();Jp2_locator loc = new Jp2_locator();jp2_family_in.Open(sourceFile, true);inputSource.Open(jp2_family_in, loc);inputSource.Read_header();input = inputSource;Kdu_codestream codestream = new Kdu_codestream();codestream.Create(input);Kdu_channel_mapping channels = new Kdu_channel_mapping();if (inputSource.Exists()) channels.Configure(inputSource, false); else channels.Configure(codestream);int ref_component = channels.Get_source_component(0);Kdu_coords ref_expansion = getReferenceExpansion(ref_component, channels, codestream);Kdu_dims image_dims = new Kdu_dims();codestream.Get_dims(ref_component, image_dims);Kdu_coords imageSize = image_dims.Access_size();Kdu_coords imagePosition = image_dims.Access_pos();if (useleftDouble) left = imagePosition.Get_x() + (int) Math.round(leftDouble * imageSize.Get_x());if (usetopDouble) top = imagePosition.Get_y() + (int) Math.round(topDouble * imageSize.Get_y());if (useheightDouble) height = (int) Math.round(heightDouble * imageSize.Get_y());if (usewidthDouble) width = (int) Math.round(widthDouble * imageSize.Get_x());if (useRegion) {imageSize.Set_x(width);imageSize.Set_y(height);imagePosition.Set_x(left);imagePosition.Set_y(top);}int reduce = 1 << params.getLevelReductionFactor();imageSize.Set_x(imageSize.Get_x() * ref_expansion.Get_x());imageSize.Set_y(imageSize.Get_y() * ref_expansion.Get_y());imagePosition.Set_x(imagePosition.Get_x() * ref_expansion.Get_x() / reduce - ((ref_expansion.Get_x() / reduce - 1) / 2));imagePosition.Set_y(imagePosition.Get_y() * ref_expansion.Get_y() / reduce - ((ref_expansion.Get_y() / reduce - 1) / 2));Kdu_dims view_dims = new Kdu_dims();view_dims.Assign(image_dims);view_dims.Access_size().Set_x(imageSize.Get_x());view_dims.Access_size().Set_y(imageSize.Get_y());int region_buf_size = imageSize.Get_x() * imageSize.Get_y();int[] region_buf = new int[region_buf_size];Kdu_region_decompressor decompressor = new Kdu_region_decompressor();decompressor.Start(codestream, channels, -1, params.getLevelReductionFactor(), 16384, image_dims, ref_expansion, new Kdu_coords(1, 1), false, Kdu_global.KDU_WANT_OUTPUT_COMPONENTS);Kdu_dims new_region = new Kdu_dims();Kdu_dims incomplete_region = new Kdu_dims();Kdu_coords viewSize = view_dims.Access_size();incomplete_region.Assign(image_dims);int[] imgBuffer = new int[viewSize.Get_x() * viewSize.Get_y()];int[] kduBuffer = null;while (decompressor.Process(region_buf, image_dims.Access_pos(), 0, 0, region_buf_size, incomplete_region, new_region)) {Kdu_coords newOffset = new_region.Access_pos();Kdu_coords newSize = new_region.Access_size();newOffset.Subtract(view_dims.Access_pos());kduBuffer = region_buf;int imgBuffereIdx = newOffset.Get_x() + newOffset.Get_y() * viewSize.Get_x();int kduBufferIdx = 0;int xDiff = viewSize.Get_x() - newSize.Get_x();for (int j = 0; j < newSize.Get_y(); j++, imgBuffereIdx += xDiff) {for (int i = 0; i < newSize.Get_x(); i++) {imgBuffer[imgBuffereIdx++] = kduBuffer[kduBufferIdx++];}}}BufferedImage image = new BufferedImage(imageSize.Get_x(), imageSize.Get_y(), BufferedImage.TYPE_INT_RGB);image.setRGB(0, 0, viewSize.Get_x(), viewSize.Get_y(), imgBuffer, 0, viewSize.Get_x());if (params.getRotationDegree() > 0) {image = ImageProcessingUtils.rotate(image, params.getRotationDegree());}decompressor.Native_destroy();channels.Native_destroy();if (codestream.Exists()) codestream.Destroy();inputSource.Native_destroy();input.Native_destroy();jp2_family_in.Native_destroy();return image;} catch (KduException e) {e.printStackTrace();throw new DjatokaException(e);} catch (Exception e) {e.printStackTrace();throw new DjatokaException(e);}}private String findTitle(URL url) {HTMLEditorKit.ParserCallback callback;try {URLConnection conn = url.openConnection();Reader rd = new InputStreamReader(conn.getInputStream());ParserDelegator parser = new ParserDelegator();callback = new Callback();parser.parse(rd, callback, true);} catch (Exception exp) {System.err.println(exp);}return title;}public MobileAgentProperties(Class declaringClass, String propertyFile) throws IOException {this.defaults = (MobileAgent) AnnotationElement.getAnyAnnotation(declaringClass, MobileAgent.class);URL url = getClass().getClassLoader().getResource(propertyFile);if (url != null) {props.load(url.openStream());log.info(""MobileAgent parameters loaded from file "" + url);}}"	5
"public void run() {try {File f = new File(repository + fileName);if (!f.exists()) {URL url = new URL(urlString);URLConnection urlConnection = url.openConnection();urlConnection.connect();InputStream dis = url.openStream();File dir = new File(repository);if (!dir.exists()) dir.mkdirs();f.createNewFile();FileOutputStream fos = new FileOutputStream(f);byte[] buffer = new byte[4096];int len = 0;while ((len = dis.read(buffer)) > -1) fos.write(buffer, 0, len);fos.close();dis.close();}fireFileDownloadedListener(fileName);} catch (Exception e) {e.printStackTrace();}}static byte[] getPassword(final String name, final String password) {try {final MessageDigest messageDigest = MessageDigest.getInstance(""SHA"");messageDigest.update(name.getBytes());messageDigest.update(password.getBytes());return messageDigest.digest();} catch (final NoSuchAlgorithmException e) {throw new JobException(e);}}private void loadOperatorsXML() {startwindow.setMessage(""Loading Operators..."");try {URL url = Application.class.getClassLoader().getResource(Resources.getString(""OPERATORS_XML""));InputStream input = url.openStream();OperatorsReader.registerOperators(Resources.getString(""OPERATORS_XML""), input);} catch (FileNotFoundException e) {Logger.logException(""File '"" + Resources.getString(""OPERATORS_XML"") + ""' not found."", e);} catch (IOException error) {Logger.logException(error.getMessage(), error);}}public static boolean copyFileCover(String srcFileName, String descFileName, boolean coverlay) {File srcFile = new File(srcFileName);if (!srcFile.exists()) {System.out.println(""�����ļ�ʧ�ܣ�Դ�ļ�"" + srcFileName + ""������!"");return false;} else if (!srcFile.isFile()) {System.out.println(""�����ļ�ʧ�ܣ�"" + srcFileName + ""����һ���ļ�!"");return false;}File descFile = new File(descFileName);if (descFile.exists()) {if (coverlay) {System.out.println(""Ŀ���ļ��Ѵ��ڣ�׼��ɾ��!"");if (!FileOperateUtils.delFile(descFileName)) {System.out.println(""ɾ��Ŀ���ļ�"" + descFileName + ""ʧ��!"");return false;}} else {System.out.println(""�����ļ�ʧ�ܣ�Ŀ���ļ�"" + descFileName + ""�Ѵ���!"");return false;}} else {if (!descFile.getParentFile().exists()) {System.out.println(""Ŀ���ļ����ڵ�Ŀ¼�����ڣ�����Ŀ¼!"");if (!descFile.getParentFile().mkdirs()) {System.out.println(""����Ŀ���ļ����ڵ�Ŀ¼ʧ��!"");return false;}}}int readByte = 0;InputStream ins = null;OutputStream outs = null;try {ins = new FileInputStream(srcFile);outs = new FileOutputStream(descFile);byte[] buf = new byte[1024];while ((readByte = ins.read(buf)) != -1) {outs.write(buf, 0, readByte);}System.out.println(""���Ƶ����ļ�"" + srcFileName + ""��"" + descFileName + ""�ɹ�!"");return true;} catch (Exception e) {System.out.println(""�����ļ�ʧ�ܣ�"" + e.getMessage());return false;} finally {if (outs != null) {try {outs.close();} catch (IOException oute) {oute.printStackTrace();}}if (ins != null) {try {ins.close();} catch (IOException ine) {ine.printStackTrace();}}}}private byte[] rawHttpPost(URL serverTimeStamp, Hashtable reqProperties, byte[] postData) {logger.info(""[rawHttpPost.in]:: "" + Arrays.asList(new Object[] { serverTimeStamp, reqProperties, postData }));URLConnection urlConn;DataOutputStream printout;DataInputStream input;byte[] responseBody = null;try {urlConn = serverTimeStamp.openConnection();urlConn.setDoInput(true);urlConn.setDoOutput(true);urlConn.setUseCaches(false);Iterator iter = reqProperties.entrySet().iterator();while (iter.hasNext()) {Map.Entry entry = (Map.Entry) iter.next();urlConn.setRequestProperty((String) entry.getKey(), (String) entry.getValue());}logger.debug(""POSTing to: "" + serverTimeStamp + "" ..."");printout = new DataOutputStream(urlConn.getOutputStream());printout.write(postData);printout.flush();printout.close();input = new DataInputStream(urlConn.getInputStream());byte[] buffer = new byte[1024];int bytesRead = 0;ByteArrayOutputStream baos = new ByteArrayOutputStream();while ((bytesRead = input.read(buffer, 0, buffer.length)) >= 0) {baos.write(buffer, 0, bytesRead);}input.close();responseBody = baos.toByteArray();} catch (MalformedURLException me) {logger.warn(""[rawHttpPost]:: "", me);} catch (IOException ioe) {logger.warn(""[rawHttpPost]:: "", ioe);}return responseBody;}public static void copyFile(File file, String pathExport) throws IOException {File out = new File(pathExport);FileChannel sourceChannel = new FileInputStream(file).getChannel();FileChannel destinationChannel = new FileOutputStream(out).getChannel();sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel);sourceChannel.close();destinationChannel.close();}private static void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException {if (entry.isDirectory()) {createDir(new File(outputDir, entry.getName()));return;}File outputFile = new File(outputDir, entry.getName());if (!outputFile.getParentFile().exists()) {createDir(outputFile.getParentFile());}BufferedInputStream inputStream = new BufferedInputStream(zipfile.getInputStream(entry));BufferedOutputStream outputStream = new BufferedOutputStream(new FileOutputStream(outputFile));try {IOUtils.copy(inputStream, outputStream);} finally {outputStream.close();inputStream.close();}}@Testpublic void test_validate_geo_getEvents() {try {SchemaFactory factory = SchemaFactory.newInstance(""http://www.w3.org/2001/XMLSchema"");File schemaLocation = new File(""tes.xsd"");Schema schema = factory.newSchema(schemaLocation);Validator validator = schema.newValidator();URL url = new URL(""http://ws.audioscrobbler.com/2.0/?method=geo.getevents&location=madrid&api_key=b25b959554ed76058ac220b7b2e0a026"");InputStream inputStream = url.openStream();Source source = new StreamSource(inputStream);validator.validate(source);} catch (IOException ex) {Logger.getLogger(GetEvents_Test.class.getName()).log(Level.SEVERE, null, ex);assertFalse(""File not found"", true);} catch (SAXException ex) {Logger.getLogger(GetEvents_Test.class.getName()).log(Level.SEVERE, null, ex);assertFalse(""Schema did not validate"", true);}assertTrue(true);}private static String encryptMD5(String password, Long digestSeed) {try {MessageDigest digest = MessageDigest.getInstance(""MD5"");digest.reset();digest.update(password.getBytes(""UTF-8""));digest.update(digestSeed.toString().getBytes(""UTF-8""));byte[] messageDigest = digest.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < messageDigest.length; i++) {hexString.append(Integer.toHexString(0xff & messageDigest[i]));}return hexString.toString();} catch (NoSuchAlgorithmException e) {throw new RuntimeException(e);} catch (UnsupportedEncodingException e) {throw new RuntimeException(e);} catch (NullPointerException e) {return new StringBuffer().toString();}}private static String encrypt(String algorithm, String password, Long digestSeed) {try {MessageDigest digest = MessageDigest.getInstance(algorithm);digest.reset();digest.update(password.getBytes(""UTF-8""));digest.update(digestSeed.toString().getBytes(""UTF-8""));byte[] messageDigest = digest.digest();StringBuffer hexString = new StringBuffer();for (int i = 0; i < messageDigest.length; i++) {hexString.append(Integer.toHexString((0xf0 & messageDigest[i]) >> 4));hexString.append(Integer.toHexString(0x0f & messageDigest[i]));}return hexString.toString();} catch (NoSuchAlgorithmException e) {throw new RuntimeException(e);} catch (UnsupportedEncodingException e) {throw new RuntimeException(e);} catch (NullPointerException e) {return new StringBuffer().toString();}}"	5
"public static void copyFile(File src, File dest) throws IOException {FileInputStream fis = new FileInputStream(src);FileOutputStream fos = new FileOutputStream(dest);java.nio.channels.FileChannel channelSrc = fis.getChannel();java.nio.channels.FileChannel channelDest = fos.getChannel();channelSrc.transferTo(0, channelSrc.size(), channelDest);fis.close();fos.close();}public DataRecord addRecord(InputStream input) throws DataStoreException {File temporary = null;try {temporary = newTemporaryFile();DataIdentifier tempId = new DataIdentifier(temporary.getName());usesIdentifier(tempId);long length = 0;MessageDigest digest = MessageDigest.getInstance(DIGEST);OutputStream output = new DigestOutputStream(new FileOutputStream(temporary), digest);try {length = IOUtils.copyLarge(input, output);} finally {output.close();}DataIdentifier identifier = new DataIdentifier(digest.digest());File file;synchronized (this) {usesIdentifier(identifier);file = getFile(identifier);System.out.println(""new file name: "" + file.getName());File parent = file.getParentFile();System.out.println(""parent file: "" + file.getParentFile().getName());if (!parent.isDirectory()) {parent.mkdirs();}if (!file.exists()) {temporary.renameTo(file);if (!file.exists()) {throw new IOException(""Can not rename "" + temporary.getAbsolutePath() + "" to "" + file.getAbsolutePath() + "" (media read only?)"");}} else {long now = System.currentTimeMillis();if (file.lastModified() < now) {file.setLastModified(now);}}if (!file.isFile()) {throw new IOException(""Not a file: "" + file);}if (file.length() != length) {throw new IOException(DIGEST + "" collision: "" + file);}}inUse.remove(tempId);return new FileDataRecord(identifier, file);} catch (NoSuchAlgorithmException e) {throw new DataStoreException(DIGEST + "" not available"", e);} catch (IOException e) {throw new DataStoreException(""Could not add record"", e);} finally {if (temporary != null) {temporary.delete();}}}public static String MD5Digest(String source) {MessageDigest digest;try {digest = java.security.MessageDigest.getInstance(""MD5"");digest.update(source.getBytes(""UTF8""));byte[] hash = digest.digest();String strHash = byteArrayToHexString(hash);return strHash;} catch (NoSuchAlgorithmException e) {String msg = ""%s: %s"";msg = String.format(msg, e.getClass().getName(), e.getMessage());logger.error(msg);return null;} catch (UnsupportedEncodingException e) {String msg = ""%s: %s"";msg = String.format(msg, e.getClass().getName(), e.getMessage());logger.error(msg);return null;}}public JobOfferPage(JobPageLink link) {this.link = link;try {URL url = new URL(link.getUrl());URLConnection urlConn = url.openConnection();urlConn.setRequestProperty(""User-Agent"", ""Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 4.0)"");urlConn.setRequestProperty(""Accept-Language"", ""en-us"");this.content = (String) url.getContent();} catch (IOException e) {e.printStackTrace();}this.jobOfferHtmlList = extractJobOfferHtmlList();}private void loginImageShack() throws Exception {loginsuccessful = false;HttpParams params = new BasicHttpParams();params.setParameter(""http.useragent"", ""Mozilla/5.0 (Windows; U; Windows NT 6.1; en-GB; rv:1.9.2) Gecko/20100115 Firefox/3.6"");DefaultHttpClient httpclient = new DefaultHttpClient(params);NULogger.getLogger().info(""Trying to log in to imageshack.us"");HttpPost httppost = new HttpPost(""http://imageshack.us/auth.php"");httppost.setHeader(""Referer"", ""http://www.uploading.com/"");httppost.setHeader(""Accept"", ""application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"");httppost.setHeader(""Cookie"", newcookie + "";"" + phpsessioncookie + "";"" + imgshckcookie + "";"" + uncookie + "";"" + latestcookie + "";"" + langcookie);List<NameValuePair> formparams = new ArrayList<NameValuePair>();formparams.add(new BasicNameValuePair(""username"", getUsername()));formparams.add(new BasicNameValuePair(""password"", getPassword()));formparams.add(new BasicNameValuePair(""stay_logged_in"", """"));formparams.add(new BasicNameValuePair(""format"", ""json""));UrlEncodedFormEntity entity = new UrlEncodedFormEntity(formparams, ""UTF-8"");httppost.setEntity(entity);HttpResponse httpresponse = httpclient.execute(httppost);HttpEntity en = httpresponse.getEntity();uploadresponse = EntityUtils.toString(en);NULogger.getLogger().log(Level.INFO, ""Upload response : {0}"", uploadresponse);NULogger.getLogger().info(""Getting cookies........"");Iterator<Cookie> it = httpclient.getCookieStore().getCookies().iterator();Cookie escookie = null;while (it.hasNext()) {escookie = it.next();if (escookie.getName().equalsIgnoreCase(""myid"")) {myidcookie = escookie.getValue();NULogger.getLogger().info(myidcookie);loginsuccessful = true;}if (escookie.getName().equalsIgnoreCase(""myimages"")) {myimagescookie = escookie.getValue();NULogger.getLogger().info(myimagescookie);}if (escookie.getName().equalsIgnoreCase(""isUSER"")) {usercookie = escookie.getValue();NULogger.getLogger().info(usercookie);}}if (loginsuccessful) {NULogger.getLogger().info(""ImageShack Login Success"");loginsuccessful = true;username = getUsername();password = getPassword();} else {NULogger.getLogger().info(""ImageShack Login failed"");loginsuccessful = false;username = """";password = """";JOptionPane.showMessageDialog(NeembuuUploader.getInstance(), ""<html><b>"" + HOSTNAME + ""</b> "" + TranslationProvider.get(""neembuuuploader.accounts.loginerror"") + ""</html>"", HOSTNAME, JOptionPane.WARNING_MESSAGE);AccountsManager.getInstance().setVisible(true);}}public void render(RenderRequest renderRequest, RenderResponse renderResponse) throws PortletException {Writer out = null;PreparedStatement ps = null;DatabaseAdapter dbDyn = null;try {AuthSession auth_ = (AuthSession) renderRequest.getUserPrincipal();if (auth_ == null || !auth_.isUserInRole(""webmill.upload_image"")) {throw new PortletSecurityException(""You have not enough right"");}if (log.isDebugEnabled()) log.debug(""Start commit new image from file"");dbDyn = DatabaseAdapter.getInstance();String index_page = PortletService.url(""mill.image.index"", renderRequest, renderResponse);if (log.isDebugEnabled()) log.debug(""right to commit image - "" + auth_.isUserInRole(""webmill.upload_image""));PortletSession sess = renderRequest.getPortletSession(true);if ((sess.getAttribute(""MILL.IMAGE.ID_MAIN"") == null) || (sess.getAttribute(""MILL.IMAGE.DESC_IMAGE"") == null)) {out.write(""Not all parametrs initialized"");return;}Long id_main = (Long) sess.getAttribute(""MILL.IMAGE.ID_MAIN"");String desc = ((String) sess.getAttribute(""MILL.IMAGE.DESC_IMAGE""));if (log.isDebugEnabled()) log.debug(""image description "" + desc);CustomSequenceType seq = new CustomSequenceType();seq.setSequenceName(""seq_image_number_file"");seq.setTableName(""MAIN_FORUM_THREADS"");seq.setColumnName(""ID_THREAD"");Long currID = dbDyn.getSequenceNextValue(seq);String storage_ = portletConfig.getPortletContext().getRealPath(""/"") + File.separatorChar + ""image"";String fileName = storage_ + File.separator + StringTools.appendString("""" + currID, '0', 7, true) + ""-"";if (log.isDebugEnabled()) log.debug(""image fileName "" + fileName);String newFileName = """";String supportExtension[] = { "".jpg"", "".jpeg"", "".gif"", "".png"" };try {if (true) throw new UploadFileException(""Todo need fix"");} catch (UploadFileException e) {log.error(""Error save image to disk"", e);out.write(""<html><head></head<body>"" + ""Error while processing this page:<br>"" + ExceptionTools.getStackTrace(e, 20, ""<br>"") + ""<br>"" + ""<p><a href=\"""" + index_page + ""\"">continue</a></p>"" + ""</body></html>"");return;}if (log.isDebugEnabled()) log.debug(""newFileName "" + newFileName);UserInfo userInfo = auth_.getUserInfo();CustomSequenceType seqImageDir = new CustomSequenceType();seqImageDir.setSequenceName(""seq_WM_image_dir"");seqImageDir.setTableName(""WM_IMAGE_DIR"");seqImageDir.setColumnName(""ID_IMAGE_DIR"");Long seqValue = dbDyn.getSequenceNextValue(seqImageDir);ps = dbDyn.prepareStatement(""insert into WM_IMAGE_DIR "" + ""( ID_IMAGE_DIR, ID_FIRM, is_group, id, id_main, name_file, description )"" + ""(?, ?, 0, ?, ?, ?, ?"");RsetTools.setLong(ps, 1, seqValue);RsetTools.setLong(ps, 2, userInfo.getCompanyId());RsetTools.setLong(ps, 3, currID);RsetTools.setLong(ps, 4, id_main);ps.setString(5, ""/image/"" + newFileName);ps.setString(6, desc);ps.executeUpdate();dbDyn.commit();if (log.isDebugEnabled()) log.debug(""redirect to indexPage - "" + index_page);out.write(""Image successful uploaded"");return;} catch (Exception e) {try {dbDyn.rollback();} catch (SQLException e1) {}final String es = ""Error upload image"";log.error(es, e);throw new PortletException(es, e);} finally {DatabaseManager.close(dbDyn, ps);dbDyn = null;ps = null;}}private static void fileUpload() throws Exception {DefaultHttpClient httpclient = new DefaultHttpClient();HttpPost httppost = new HttpPost(postURL);file = new File(""h:\\Rock Lee.jpg"");MultipartEntity mpEntity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE);ContentBody cbFile = new FileBody(file);mpEntity.addPart(""file"", cbFile);httppost.setEntity(mpEntity);System.out.println(""executing request "" + httppost.getRequestLine());System.out.println(""Now uploading your file into bayfiles.com"");HttpResponse response = httpclient.execute(httppost);HttpEntity resEntity = response.getEntity();System.out.println(response.getStatusLine());if (resEntity != null) {uploadresponse = EntityUtils.toString(resEntity);}System.out.println(""Upload response : "" + uploadresponse);downloadlink = parseResponse(uploadresponse, ""\""downloadUrl\"":\"""", ""\"""");downloadlink = downloadlink.replaceAll(""\\\\"", """");deletelink = parseResponse(uploadresponse, ""\""deleteUrl\"":\"""", ""\"""");deletelink = deletelink.replaceAll(""\\\\"", """");System.out.println(""Download link : "" + downloadlink);System.out.println(""Delete link : "" + deletelink);}public static void loginBayFiles() throws Exception {HttpParams params = new BasicHttpParams();params.setParameter(""http.useragent"", ""Mozilla/5.0 (Windows; U; Windows NT 6.1; en-GB; rv:1.9.2) Gecko/20100115 Firefox/3.6"");DefaultHttpClient httpclient = new DefaultHttpClient(params);System.out.println(""Trying to log in to bayfiles.com"");HttpPost httppost = new HttpPost(""http://bayfiles.com/ajax_login"");List<NameValuePair> formparams = new ArrayList<NameValuePair>();formparams.add(new BasicNameValuePair(""action"", ""login""));formparams.add(new BasicNameValuePair(""username"", """"));formparams.add(new BasicNameValuePair(""password"", """"));UrlEncodedFormEntity entity = new UrlEncodedFormEntity(formparams, ""UTF-8"");httppost.setEntity(entity);HttpResponse httpresponse = httpclient.execute(httppost);System.out.println(""Getting cookies........"");Iterator<Cookie> it = httpclient.getCookieStore().getCookies().iterator();Cookie escookie = null;while (it.hasNext()) {escookie = it.next();if (escookie.getName().equalsIgnoreCase(""SESSID"")) {sessioncookie = ""SESSID="" + escookie.getValue();System.out.println(sessioncookie);login = true;System.out.println(""BayFiles.com Login success :)"");}}if (!login) {System.out.println(""BayFiles.com Login failed :("");}}private static void readAndRewrite(File inFile, File outFile) throws IOException {ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);Dataset ds = DcmObjectFactory.getInstance().newDataset();dcmParser.setDcmHandler(ds.getDcmHandler());dcmParser.parseDcmFile(null, Tags.PixelData);PixelDataReader pdReader = pdFact.newReader(ds, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());System.out.println(""reading "" + inFile + ""..."");pdReader.readPixelData(false);ImageOutputStream out = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;ds.writeDataset(out, dcmEncParam);ds.writeHeader(out, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());System.out.println(""writing "" + outFile + ""..."");PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, ds, out, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());pdWriter.writePixelData();out.flush();out.close();System.out.println(""done!"");}public void testHttpsConnection() {try {URL url = new URL(""https://addons.mozilla.org/zh-CN/firefox/"");HttpsURLConnection connection = (HttpsURLConnection) url.openConnection();connection.setDoOutput(true);connection.getOutputStream().write(""hello"".getBytes());} catch (Exception e) {e.printStackTrace();}}"	5
"private static boolean downloadFile(URL remote, File local) throws IllegalArgumentException, IOException {if (local == null) throw new IllegalArgumentException(""Must specify remote file"");if (local.exists() && !local.canWrite()) throw new IOException(""Cannot write to "" + local);long lengthCurrent = local.exists() ? local.length() : -1l;if (lengthCurrent == 0) throw new IOException(""Cannot get the length for "" + local);long lastModifiedCurrent = local.exists() ? local.lastModified() : -1l;if (remote == null) throw new IllegalArgumentException(""Must specify remote url"");URLConnection urlConnection = remote.openConnection();urlConnection.setDoInput(true);urlConnection.setDoOutput(false);long lengthRemote = urlConnection.getContentLength();long lastModifiedRemote = urlConnection.getLastModified();if (lengthRemote == lengthCurrent) {LOGGER.fine(""Not downloading "" + remote + "" of length "" + lengthRemote + "" and date "" + (lastModifiedRemote > 0 ? new Date(lastModifiedRemote).toString() : ""n/a"") + "" for "" + local + "" of length "" + lengthCurrent + "" and date "" + new Date(lastModifiedCurrent));return false;}BufferedInputStream inputStream = null;BufferedOutputStream bufferedOutputStream = null;try {inputStream = new BufferedInputStream(urlConnection.getInputStream(), BUFFER_SIZE);bufferedOutputStream = new BufferedOutputStream(new FileOutputStream(local));byte[] buffer = new byte[BUFFER_SIZE];do {int count = inputStream.read(buffer);if (count < 0) break;bufferedOutputStream.write(buffer, 0, count);} while (true);return true;} finally {try {if (inputStream != null) inputStream.close();} catch (Throwable throwable) {}try {if (bufferedOutputStream != null) bufferedOutputStream.close();} catch (Throwable throwable) {}}}void copyFile(File src, File dst) throws IOException {InputStream in = new FileInputStream(src);OutputStream out = new FileOutputStream(dst);byte[] buf = new byte[1024];int len;while ((len = in.read(buf)) > 0) out.write(buf, 0, len);in.close();out.close();}public byte[] loadResource(String location) throws IOException {if ((location == null) || (location.length() == 0)) {throw new IOException(""The given resource location must not be null and non empty."");}URL url = buildURL(location);URLConnection cxn = url.openConnection();InputStream is = null;try {byte[] byteBuffer = new byte[2048];ByteArrayOutputStream bos = new ByteArrayOutputStream(2048);is = cxn.getInputStream();int bytesRead = 0;while ((bytesRead = is.read(byteBuffer, 0, 2048)) >= 0) {bos.write(byteBuffer, 0, bytesRead);}return bos.toByteArray();} finally {if (is != null) {is.close();}}}public boolean resourceExists(String location) {if ((location == null) || (location.length() == 0)) {return false;}try {URL url = buildURL(location);URLConnection cxn = url.openConnection();InputStream is = null;try {byte[] byteBuffer = new byte[2048];is = cxn.getInputStream();while (is.read(byteBuffer, 0, 2048) >= 0) ;return true;} finally {if (is != null) {is.close();}}} catch (IOException ex) {return false;}}public void startElement(String uri, String tag, String qName, org.xml.sax.Attributes attributes) throws SAXException {wabclient.Attributes prop = new wabclient.Attributes(attributes);try {if (tag.equals(""window"")) {if (prop == null) {System.err.println(""window without properties"");return;}int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);Color bgcolor = prop.getValue(""bgcolor"", Color.white);String caption = prop.getValue(""caption"", """");layout = prop.getValue(""layout"", 0);boolean statusbar = prop.getValue(""statusbar"", false);if (sheet.opentype == WABSheet.LAYERED) {Point pos = frame.getNextMDIPos();sheet.setBounds(pos.x, pos.y, 400, 200);sheet.setNormalBounds(new Rectangle(pos.x, pos.y, 400, 200));} else {sheet.setBounds(x, y, width, height);sheet.setNormalBounds(new Rectangle(x, y, width, height));}if (sheet.opentype == WABSheet.MAXIMIZED) sheet.setMaximum(true); else sheet.setMaximum(false);sheet.setTitle(caption);frame.addSheetToMenu(caption);sheet.setBackground(bgcolor);if (layout == 1) sheet.getContentPane().setLayout(new FlowLayout()); else if (layout == 2) sheet.getContentPane().setLayout(new BorderLayout()); else sheet.getContentPane().setLayout(null);} else if (tag.equals(""menu"")) {if (prop == null) {System.err.println(""menu without properties"");return;}String id = prop.getValue(""id"", """");String label = prop.getValue(""label"", """");if ((id != null && id.equals(""WINDOW_MENU"") || label.equalsIgnoreCase(""window""))) {windowMenu = new JMenu();menu = windowMenu;sheet.setWindowMenu(menu);} else {menu = new JMenu();}menu.setText(label);sheet.menubar.add(menu);} else if (tag.equals(""menuitem"")) {if (prop == null) {System.err.println(""menuitem without properties"");return;}JMenuItem item;String action = prop.getValue(""action"", """");String label = prop.getValue(""label"", """");boolean visible = prop.getValue(""visible"", true);String icon = prop.getValue(""icon"", """");if (action.equals(""WINDOW_OVERLAPPED"")) {item = windowMenuOverlapped = new JMenuItem();item.setActionCommand(""10001"");item.addActionListener(frame);} else if (action.equals(""WINDOW_TILE_HORIZONTALLY"")) {item = windowMenuTile = new JMenuItem();item.setActionCommand(""10002"");item.addActionListener(frame);} else if (action.equals(""WINDOW_TILE_VERTICALLY"")) {item = windowMenuArrange = new JMenuItem();item.setActionCommand(""10003"");item.addActionListener(frame);} else {item = new JMenuItem();item.setActionCommand(action);item.addActionListener((WABClient) global);}item.setText(label);if (!visible) menu.setVisible(false);menu.add(item);if (frame.getToolBar() != null) {if (icon.length() > 0) {try {ImageIcon img = new ImageIcon(new URL(icon));BufferedImage image = new BufferedImage(25, 25, BufferedImage.TYPE_4BYTE_ABGR);Graphics g = image.createGraphics();g.setColor(new Color(0, 0, 0, 0));g.fillRect(0, 0, 25, 25);g.drawImage(img.getImage(), 4, 4, 16, 16, (ImageObserver) null);BufferedImage pressed = new BufferedImage(25, 25, BufferedImage.TYPE_4BYTE_ABGR);g = pressed.createGraphics();g.setColor(new Color(0, 0, 0, 0));g.fillRect(0, 0, 25, 25);g.drawImage(img.getImage(), 5, 5, 16, 16, (ImageObserver) null);g.setColor(new Color(132, 132, 132));g.drawLine(0, 0, 24, 0);g.drawLine(0, 0, 0, 24);g.setColor(new Color(255, 255, 255));g.drawLine(24, 24, 24, 0);g.drawLine(24, 24, 0, 24);BufferedImage over = new BufferedImage(25, 25, BufferedImage.TYPE_4BYTE_ABGR);g = over.createGraphics();g.setColor(new Color(0, 0, 0, 0));g.fillRect(0, 0, 25, 25);g.drawImage(img.getImage(), 4, 4, 16, 16, (ImageObserver) null);g.setColor(new Color(255, 255, 255));g.drawLine(0, 0, 24, 0);g.drawLine(0, 0, 0, 24);g.setColor(new Color(132, 132, 132));g.drawLine(24, 24, 24, 0);g.drawLine(24, 24, 0, 24);JButton b = new JButton(new ImageIcon(image));b.setRolloverEnabled(true);b.setPressedIcon(new ImageIcon(pressed));b.setRolloverIcon(new ImageIcon(over));b.setToolTipText(label);b.setActionCommand(action);b.setFocusPainted(false);b.setBorderPainted(false);b.setContentAreaFilled(false);b.setMargin(new Insets(0, 0, 0, 0));b.addActionListener(sheet);sheet.toolbar.add(b);} catch (Exception e) {}}}} else if (tag.equals(""separator"")) {menu.addSeparator();} else if (tag.equals(""choice"")) {if (prop == null) {System.err.println(""choice without properties"");return;}combo = new JComboBox();list = null;int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String id = prop.getValue(""id"", """");Object constraints = prop.getValue(""constraints"");boolean editable = prop.getValue(""editable"", false);boolean visible = prop.getValue(""visible"", true);boolean enabled = prop.getValue(""enabled"", true);combo_text = prop.getValue(""text"", """");combo.setBounds(x, y, width, height);combo.setName((String) id);if (editable) {combo.setEditable(editable);combo.setSelectedItem(combo_text);}if (!visible) combo.setVisible(false);if (!enabled) combo.setEnabled(false);if (layout == 0) sheet.getContentPane().add(combo); else sheet.getContentPane().add(combo, constraints);} else if (tag.equals(""list"")) {if (prop == null) {System.err.println(""list without properties"");return;}list = new JList();combo = null;listdata = new Vector();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String id = prop.getValue(""id"", """");Object constraints = prop.getValue(""constraints"");list.setName((String) id);list.setListData(listdata);JScrollPane sp = new JScrollPane(list);sp.setBounds(x, y, width, height);if (layout == 0) sheet.getContentPane().add(sp); else sheet.getContentPane().add(sp, constraints);} else if (tag.equals(""option"")) {if (prop == null) {System.err.println(""choice.option without properties"");return;}String value = prop.getValue(""value"", """");String text = prop.getValue(""text"", """");if (list != null) listdata.addElement(new ComboOption(text, value));if (combo != null) {ComboOption co = new ComboOption(text, value);combo.addItem(co);if (combo_text.equals(text.trim())) combo.setSelectedItem(co);}} else if (tag.equals(""label"")) {if (prop == null) {System.err.println(""label without properties"");return;}JLabel label = new JLabel();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String text = prop.getValue(""text"", """");Object constraints = prop.getValue(""constraints"");boolean visible = prop.getValue(""visible"", true);label.setBounds(x, y, width, height);label.setText(text);if (!visible) label.setVisible(false);if (layout == 0) sheet.getContentPane().add(label); else sheet.getContentPane().add(label, constraints);} else if (tag.equals(""button"")) {if (prop == null) {System.err.println(""button without properties"");return;}JButton btn = new JButton();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String id = prop.getValue(""id"", """");String text = prop.getValue(""text"", """");String onmouseup = prop.getValue(""onmouseup"", """");Object constraints = prop.getValue(""constraints"");btn.setBounds(x, y, width, height);btn.setText(text);btn.addActionListener(sheet);btn.setActionCommand(onmouseup);if (layout == 0) sheet.getContentPane().add(btn); else sheet.getContentPane().add(btn, constraints);} else if (tag.equals(""radiobutton"")) {if (prop == null) {System.err.println(""radiobutton without properties"");return;}JRadioButton rb = new JRadioButton();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String id = prop.getValue(""id"", """");String text = prop.getValue(""text"", """");Object constraints = prop.getValue(""constraints"");String checked = prop.getValue(""checked"", ""false"");rb.setBounds(x, y, width, height);rb.setText(text);rb.setName((String) id);rb.addActionListener(sheet);rb.setSelected(checked.equalsIgnoreCase(""true""));if (layout == 0) sheet.getContentPane().add(rb); else sheet.getContentPane().add(rb, constraints);} else if (tag.equals(""checkbox"")) {if (prop == null) {System.err.println(""checkbox without properties"");return;}JCheckBox cb = new JCheckBox();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String id = prop.getValue(""id"", """");String text = prop.getValue(""text"", """");String onmouseup = prop.getValue(""onmouseup"", """");Object constraints = prop.getValue(""constraints"");String checked = prop.getValue(""checked"", ""false"");cb.setBounds(x, y, width, height);cb.setText(text);cb.setName((String) id);cb.setSelected(checked.equalsIgnoreCase(""true""));if (layout == 0) sheet.getContentPane().add(cb); else sheet.getContentPane().add(cb, constraints);} else if (tag.equals(""image"")) {if (prop == null) {System.err.println(""image without properties"");return;}JLabel label = new JLabel();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);String src = prop.getValue(""src"", """");Object constraints = prop.getValue(""constraints"");label.setIcon(new ImageIcon(new URL(src)));label.setBounds(x, y, width, height);if (layout == 0) sheet.getContentPane().add(label); else sheet.getContentPane().add(label, constraints);} else if (tag.equals(""singlelineedit"")) {if (prop == null) {System.err.println(""singlelineedit without properties"");return;}String pwd = prop.getValue(""password"", """");JTextField sle;if (pwd.equalsIgnoreCase(""true"")) sle = new JPasswordField(); else sle = new JTextField();int x = prop.getValue(""x"", 0);int y = prop.getValue(""y"", 0);int width = prop.getValue(""width"", 0);int height = prop.getValue(""height"", 0);Object id = prop.getValue(""id"");String text = prop.getValue(""text"", """");Object constraints = prop.getValue(""constraints"");sle.setBounds(x, y, width, height);sle.setText(text);sle.setName((String) id);if (layout == 0) sheet.getContentPane().add(sle); else sheet.getContentPane().add(sle, constraints);} else if (tag.equals(""treeview"")) {if (prop == null) {System.err.println(""treeview without properties"");return;}treeview_root = new DefaultMutableTreeNode(""root"");treeview = new JTree(treeview_root);Object constraints = prop.getValue(""constraints"");sheet.getContentPane().add(new JScrollPane(treeview), constraints);} else if (tag.equals(""treeitem"")) {if (prop == null) {System.err.println(""treeview.treeitem without properties"");return;}String text = prop.getValue(""text"", """");String value = prop.getValue(""value"", """");DefaultMutableTreeNode node = new DefaultMutableTreeNode(text);treeview_root.add(node);} else if (tag.equals(""table"")) {if (prop == null) {System.err.println(""table without properties"");return;}String id = prop.getValue(""id"", """");table = new JTable();model = new DefaultTableModel() {public boolean isCellEditable(int row, int col) {return false;}};table.setModel(model);table.setName((String) id);Object constraints = prop.getValue(""constraints"");sheet.getContentPane().add(new JScrollPane(table), constraints);rowNumber = 0;columnNumber = 0;headerWidths = new Vector();} else if (tag.equals(""header"")) {if (prop == null) {System.err.println(""table.header without properties"");return;}String text = prop.getValue(""text"", """");int width = prop.getValue(""width"", 0);headerWidths.addElement(new Integer(width));model.addColumn(text);} else if (tag.equals(""row"")) {rowNumber++;columnNumber = 0;model.setRowCount(rowNumber);} else if (tag.equals(""column"")) {columnNumber++;if (prop == null) {System.err.println(""table.column without properties"");return;}String value = prop.getValue(""value"", """");model.setValueAt(value, rowNumber - 1, columnNumber - 1);} else if (tag.equals(""script"")) {sheet.beginScript();String url = prop.getValue(""src"");if (url.length() > 0) {try {BufferedReader r = new BufferedReader(new InputStreamReader(new URL(url).openStream()));String buffer;while (true) {buffer = r.readLine();if (buffer == null) break;sheet.script += buffer + ""\n"";}r.close();sheet.endScript();} catch (IOException ioe) {System.err.println(""[IOError] "" + ioe.getMessage());System.exit(0);}}} else System.err.println(""[sheet] unparsed tag: "" + tag);} catch (Exception e) {e.printStackTrace(System.err);}}public static String encrypt(final String pass) {try {final MessageDigest md = MessageDigest.getInstance(""SHA"");md.update(pass.getBytes(""UTF-8""));return new String(Base64.encodeBase64(md.digest()));} catch (final Exception e) {throw new RuntimeException(""No se pudo encriptar el password."", e);}}public Object process(Atom oAtm) throws IOException {File oFile;FileReader oFileRead;String sPathHTML;char cBuffer[];Object oReplaced;final String sSep = System.getProperty(""file.separator"");if (DebugFile.trace) {DebugFile.writeln(""Begin FileDumper.process([Job:"" + getStringNull(DB.gu_job, """") + "", Atom:"" + String.valueOf(oAtm.getInt(DB.pg_atom)) + ""])"");DebugFile.incIdent();}if (bHasReplacements) {sPathHTML = getProperty(""workareasput"");if (!sPathHTML.endsWith(sSep)) sPathHTML += sSep;sPathHTML += getParameter(""gu_workarea"") + sSep + ""apps"" + sSep + ""Mailwire"" + sSep + ""html"" + sSep + getParameter(""gu_pageset"") + sSep;sPathHTML += getParameter(""nm_pageset"").replace(' ', '_') + "".html"";if (DebugFile.trace) DebugFile.writeln(""PathHTML = "" + sPathHTML);oReplaced = oReplacer.replace(sPathHTML, oAtm.getItemMap());bHasReplacements = (oReplacer.lastReplacements() > 0);} else {oReplaced = null;if (null != oFileStr) oReplaced = oFileStr.get();if (null == oReplaced) {sPathHTML = getProperty(""workareasput"");if (!sPathHTML.endsWith(sSep)) sPathHTML += sSep;sPathHTML += getParameter(""gu_workarea"") + sSep + ""apps"" + sSep + ""Mailwire"" + sSep + ""html"" + sSep + getParameter(""gu_pageset"") + sSep + getParameter(""nm_pageset"").replace(' ', '_') + "".html"";if (DebugFile.trace) DebugFile.writeln(""PathHTML = "" + sPathHTML);oFile = new File(sPathHTML);cBuffer = new char[new Long(oFile.length()).intValue()];oFileRead = new FileReader(oFile);oFileRead.read(cBuffer);oFileRead.close();if (DebugFile.trace) DebugFile.writeln(String.valueOf(cBuffer.length) + "" characters readed"");oReplaced = new String(cBuffer);oFileStr = new SoftReference(oReplaced);}}String sPathJobDir = getProperty(""storage"");if (!sPathJobDir.endsWith(sSep)) sPathJobDir += sSep;sPathJobDir += ""jobs"" + sSep + getParameter(""gu_workarea"") + sSep + getString(DB.gu_job) + sSep;FileWriter oFileWrite = new FileWriter(sPathJobDir + getString(DB.gu_job) + ""_"" + String.valueOf(oAtm.getInt(DB.pg_atom)) + "".html"", true);oFileWrite.write((String) oReplaced);oFileWrite.close();iPendingAtoms--;if (DebugFile.trace) {DebugFile.writeln(""End FileDumper.process([Job:"" + getStringNull(DB.gu_job, """") + "", Atom:"" + String.valueOf(oAtm.getInt(DB.pg_atom)) + ""])"");DebugFile.decIdent();}return oReplaced;}public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException {InputStream inputStream = url.openStream();try {return getAudioInputStream(inputStream);} catch (UnsupportedAudioFileException e) {inputStream.close();throw e;} catch (IOException e) {inputStream.close();throw e;}}public void transport(File file) throws TransportException {if (file.exists()) {if (file.isDirectory()) {File[] files = file.listFiles();for (int i = 0; i < files.length; i++) {transport(file);}} else if (file.isFile()) {try {FileChannel inChannel = new FileInputStream(file).getChannel();FileChannel outChannel = new FileOutputStream(destinationDir).getChannel();inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {log.error(""File transfer failed"", e);}}}}public static void copyTo(File inFile, File outFile) throws IOException {char[] cbuff = new char[32768];BufferedReader reader = new BufferedReader(new FileReader(inFile));BufferedWriter writer = new BufferedWriter(new FileWriter(outFile));int readedBytes = 0;long absWrittenBytes = 0;while ((readedBytes = reader.read(cbuff, 0, cbuff.length)) != -1) {writer.write(cbuff, 0, readedBytes);absWrittenBytes += readedBytes;}reader.close();writer.close();}"	5
"public static void main(String[] args) {try {{byte[] bytes1 = { (byte) 2, (byte) 2, (byte) 3, (byte) 0, (byte) 9 };byte[] bytes2 = { (byte) 99, (byte) 2, (byte) 2, (byte) 3, (byte) 0, (byte) 9 };System.out.println(""Bytes 2,2,3,0,9 as Base64: "" + encodeBytes(bytes1));System.out.println(""Bytes 2,2,3,0,9 w/ offset: "" + encodeBytes(bytes2, 1, bytes2.length - 1));byte[] dbytes = decode(encodeBytes(bytes1));System.out.print(encodeBytes(bytes1) + "" decoded: "");for (int i = 0; i < dbytes.length; i++) System.out.print(dbytes[i] + (i < dbytes.length - 1 ? "","" : ""\n""));}{java.io.FileInputStream fis = new java.io.FileInputStream(""test.gif.b64"");Base64.InputStream b64is = new Base64.InputStream(fis, DECODE);byte[] bytes = new byte[0];int b = -1;while ((b = b64is.read()) >= 0) {byte[] temp = new byte[bytes.length + 1];System.arraycopy(bytes, 0, temp, 0, bytes.length);temp[bytes.length] = (byte) b;bytes = temp;}b64is.close();javax.swing.ImageIcon iicon = new javax.swing.ImageIcon(bytes);javax.swing.JLabel jlabel = new javax.swing.JLabel(""Read from test.gif.b64"", iicon, 0);javax.swing.JFrame jframe = new javax.swing.JFrame();jframe.getContentPane().add(jlabel);jframe.pack();jframe.show();java.io.FileOutputStream fos = new java.io.FileOutputStream(""test.gif_out"");fos.write(bytes);fos.close();fis = new java.io.FileInputStream(""test.gif_out"");b64is = new Base64.InputStream(fis, ENCODE);byte[] ebytes = new byte[0];b = -1;while ((b = b64is.read()) >= 0) {byte[] temp = new byte[ebytes.length + 1];System.arraycopy(ebytes, 0, temp, 0, ebytes.length);temp[ebytes.length] = (byte) b;ebytes = temp;}b64is.close();String s = new String(ebytes);javax.swing.JTextArea jta = new javax.swing.JTextArea(s);javax.swing.JScrollPane jsp = new javax.swing.JScrollPane(jta);jframe = new javax.swing.JFrame();jframe.setTitle(""Read from test.gif_out"");jframe.getContentPane().add(jsp);jframe.pack();jframe.show();fos = new java.io.FileOutputStream(""test.gif.b64_out"");fos.write(ebytes);fis = new java.io.FileInputStream(""test.gif.b64_out"");b64is = new Base64.InputStream(fis, DECODE);byte[] edbytes = new byte[0];b = -1;while ((b = b64is.read()) >= 0) {byte[] temp = new byte[edbytes.length + 1];System.arraycopy(edbytes, 0, temp, 0, edbytes.length);temp[edbytes.length] = (byte) b;edbytes = temp;}b64is.close();iicon = new javax.swing.ImageIcon(edbytes);jlabel = new javax.swing.JLabel(""Read from test.gif.b64_out"", iicon, 0);jframe = new javax.swing.JFrame();jframe.getContentPane().add(jlabel);jframe.pack();jframe.show();}{java.io.FileInputStream fis = new java.io.FileInputStream(""test.gif_out"");byte[] rbytes = new byte[0];int b = -1;while ((b = fis.read()) >= 0) {byte[] temp = new byte[rbytes.length + 1];System.arraycopy(rbytes, 0, temp, 0, rbytes.length);temp[rbytes.length] = (byte) b;rbytes = temp;}fis.close();java.io.FileOutputStream fos = new java.io.FileOutputStream(""test.gif.b64_out2"");Base64.OutputStream b64os = new Base64.OutputStream(fos, ENCODE);b64os.write(rbytes);b64os.close();fis = new java.io.FileInputStream(""test.gif.b64_out2"");byte[] rebytes = new byte[0];b = -1;while ((b = fis.read()) >= 0) {byte[] temp = new byte[rebytes.length + 1];System.arraycopy(rebytes, 0, temp, 0, rebytes.length);temp[rebytes.length] = (byte) b;rebytes = temp;}fis.close();String s = new String(rebytes);javax.swing.JTextArea jta = new javax.swing.JTextArea(s);javax.swing.JScrollPane jsp = new javax.swing.JScrollPane(jta);javax.swing.JFrame jframe = new javax.swing.JFrame();jframe.setTitle(""Read from test.gif.b64_out2"");jframe.getContentPane().add(jsp);jframe.pack();jframe.show();fos = new java.io.FileOutputStream(""test.gif_out2"");b64os = new Base64.OutputStream(fos, DECODE);b64os.write(rebytes);b64os.close();javax.swing.ImageIcon iicon = new javax.swing.ImageIcon(""test.gif_out2"");javax.swing.JLabel jlabel = new javax.swing.JLabel(""Read from test.gif_out2"", iicon, 0);jframe = new javax.swing.JFrame();jframe.getContentPane().add(jlabel);jframe.pack();jframe.show();}{java.io.FileInputStream fis = new java.io.FileInputStream(""D:\\temp\\testencoding.txt"");Base64.InputStream b64is = new Base64.InputStream(fis, DECODE);java.io.FileOutputStream fos = new java.io.FileOutputStream(""D:\\temp\\file.zip"");int b;while ((b = b64is.read()) >= 0) fos.write(b);fos.close();b64is.close();}} catch (Exception e) {e.printStackTrace();}}private static void doCopyFile(File srcFile, File destFile, boolean preserveFileDate) throws IOException {if (destFile.exists() && destFile.isDirectory()) {throw new IOException(""Destination '"" + destFile + ""' exists but is a directory"");}FileInputStream input = new FileInputStream(srcFile);try {FileOutputStream output = new FileOutputStream(destFile);try {IOUtils.copy(input, output);} finally {IOUtils.closeQuietly(output);}} finally {IOUtils.closeQuietly(input);}if (srcFile.length() != destFile.length()) {throw new IOException(""Failed to copy full contents from '"" + srcFile + ""' to '"" + destFile + ""'"");}if (preserveFileDate) {destFile.setLastModified(srcFile.lastModified());}}public static void copyURLToFile(URL source, File destination) throws IOException {InputStream input = source.openStream();try {FileOutputStream output = openOutputStream(destination);try {IOUtils.copy(input, output);} finally {IOUtils.closeQuietly(output);}} finally {IOUtils.closeQuietly(input);}}public static Checksum checksum(File file, Checksum checksum) throws IOException {if (file.isDirectory()) {throw new IllegalArgumentException(""Checksums can't be computed on directories"");}InputStream in = null;try {in = new CheckedInputStream(new FileInputStream(file), checksum);IOUtils.copy(in, new OutputStream() {@Overridepublic void write(byte[] b, int off, int len) {}@Overridepublic void write(int b) {}@Overridepublic void write(byte[] b) throws IOException {}});} finally {IOUtils.closeQuietly(in);}return checksum;}public Node external_open_url(Node startAt) throws Exception {if (inUse) {throw new InterpreterException(StdErrors.extend(StdErrors.Already_used, ""File already open""));}inUse = true;startAt.isGoodArgsLength(false, 2);ExtURL url = new ExtURL(startAt.getSubNode(1, Node.TYPE_STRING).getString());String protocol = url.getProtocol();String mode = null;Node props = null;Node datas = null;byte[] buffer = null;String old_c = null;String old_r = null;int max_i = startAt.size() - 1;if (startAt.elementAt(max_i).getSymbolicValue_undestructive().isVList()) {props = startAt.getSubNode(max_i--, Node.TYPE_LIST);}int i_ = 2;if (i_ <= max_i) {mode = startAt.getSubNode(i_++, Node.TYPE_STRING).getString().toUpperCase().trim();if (protocol.equalsIgnoreCase(""http"") || protocol.equalsIgnoreCase(""https"")) {if (!(mode.equals(""GET"") || mode.equals(""POST"") || mode.equals(""PUT""))) {throw new InterpreterException(128010, ""Unsupported request methode"");}} else if (protocol.equalsIgnoreCase(""ftp"") || protocol.equalsIgnoreCase(""file"")) {if (!(mode.equalsIgnoreCase(""r"") || mode.equalsIgnoreCase(""w""))) {throw new InterpreterException(128015, ""Unsupported access methode"");}} else if (protocol.equalsIgnoreCase(""jar"") || protocol.equalsIgnoreCase(""stdin"")) {if (!(mode.equalsIgnoreCase(""r""))) {throw new InterpreterException(128015, ""Unsupported access methode"");}} else if (protocol.equalsIgnoreCase(""tcp"") || protocol.equalsIgnoreCase(""ssl+tcp"")) {if (!(mode.equalsIgnoreCase(""rw""))) {throw new InterpreterException(128015, ""Unsupported access methode"");}} else if (protocol.equalsIgnoreCase(""stdout"") || protocol.equalsIgnoreCase(""stderr"")) {if (!(mode.equalsIgnoreCase(""w""))) {throw new InterpreterException(128015, ""Unsupported access methode"");}} else {throw new InterpreterException(128011, ""Unsupported protocol"");}}if (i_ <= max_i) {if (!protocol.equalsIgnoreCase(""http"") && !protocol.equalsIgnoreCase(""https"")) {throw new InterpreterException(128016, ""Unsupported request datas"");}datas = startAt.getSubNode(i_++, Node.TYPE_STRING | Node.TYPE_OBJECT);if (datas.isVObject()) {Object obj = datas.getVObjectExternalInstance();if (External_Buffer.class.isInstance(obj)) {Buffer bbuffer = ((External_Buffer) obj).getBuffer();buffer = bbuffer.read_bytes();} else {throw new InterpreterException(StdErrors.extend(StdErrors.Invalid_parameter, ""Object ("" + obj.getClass().getName() + "") required "" + External_Buffer.class.getName()));}} else {buffer = datas.getString().getBytes();}}if (datas != null && mode != null && mode.equals(""GET"")) {throw new InterpreterException(128012, ""GET request with data body"");}if (props != null && (!protocol.equalsIgnoreCase(""http"") && !protocol.equalsIgnoreCase(""https""))) {throw new InterpreterException(128013, ""Cannot handle header properties in request"");}try {if (protocol.equalsIgnoreCase(""file"") && mode != null && mode.equalsIgnoreCase(""w"")) {File f = new File(url.toURI());outputStream = new FileOutputStream(f);outputBuffer = new BufferedOutputStream(outputStream);output = new DataOutputStream(outputBuffer);} else if (protocol.equalsIgnoreCase(""tcp"")) {tcpHost = url.getHost();tcpPort = url.getPort();if (tcpPort < 0 || tcpPort > 65535) {throw new InterpreterException(StdErrors.extend(StdErrors.Out_of_range, """" + tcpPort));}socket = new Socket(tcpHost, tcpPort);if (readTimeOut > 0) {socket.setSoTimeout(readTimeOut);}inputStream = socket.getInputStream();inputBuffer = new BufferedInputStream(inputStream);input = new DataInputStream(inputBuffer);outputStream = socket.getOutputStream();outputBuffer = new BufferedOutputStream(outputStream);output = new DataOutputStream(outputBuffer);} else if (protocol.equalsIgnoreCase(""ssl+tcp"")) {tcpHost = url.getHost();tcpPort = url.getPort();if (tcpPort < 0 || tcpPort > 65535) {throw new InterpreterException(StdErrors.extend(StdErrors.Out_of_range, """" + tcpPort));}SocketFactory socketFactory = SSLSocketFactory.getDefault();socket = socketFactory.createSocket(tcpHost, tcpPort);if (readTimeOut > 0) {socket.setSoTimeout(readTimeOut);}inputStream = socket.getInputStream();inputBuffer = new BufferedInputStream(inputStream);input = new DataInputStream(inputBuffer);outputStream = socket.getOutputStream();outputBuffer = new BufferedOutputStream(outputStream);output = new DataOutputStream(outputBuffer);} else if (protocol.equalsIgnoreCase(""stdout"")) {setBufOut(System.out);} else if (protocol.equalsIgnoreCase(""stderr"")) {setBufOut(System.err);} else if (protocol.equalsIgnoreCase(""stdin"")) {setBufIn(System.in);} else {urlConnection = url.openConnection();if (connectTimeOut > 0) {urlConnection.setConnectTimeout(connectTimeOut);}if (readTimeOut > 0) {urlConnection.setReadTimeout(readTimeOut);}urlConnection.setUseCaches(false);urlConnection.setDoInput(true);if (urlConnection instanceof HttpURLConnection) {HttpURLConnection httpCon = (HttpURLConnection) urlConnection;if (props != null) {for (int i = 0; i < props.size(); i++) {Node pnode = props.getSubNode(i, Node.TYPE_DICO);String header_s = Node.getPairKey(pnode);String value_s = Node.node2VString(Node.getPairValue(pnode)).getString();Interpreter.Log(""HTTP-Header: "" + header_s + "" : "" + value_s);httpCon.setRequestProperty(header_s, value_s);}}if (mode != null && (mode.equals(""POST"") || mode.equals(""PUT""))) {if (mode.equals(""PUT"")) {Interpreter.Log(""HTTP PUT: "" + url.toString());} else {Interpreter.Log(""HTTP POST: "" + url.toString());}urlConnection.setDoOutput(true);httpCon.setRequestMethod(mode);outputStream = urlConnection.getOutputStream();outputBuffer = new BufferedOutputStream(outputStream);output = new DataOutputStream(outputBuffer);output.write(buffer);output.flush();}inputStream = urlConnection.getInputStream();inputBuffer = new BufferedInputStream(inputStream);input = new DataInputStream(inputBuffer);} else {if (mode == null || (mode != null && mode.equalsIgnoreCase(""r""))) {Interpreter.Log("""" + protocol + "" read : "" + url.toString());inputStream = urlConnection.getInputStream();inputBuffer = new BufferedInputStream(inputStream);input = new DataInputStream(inputBuffer);} else {Interpreter.Log("""" + protocol + "" write : "" + url.toString());outputStream = urlConnection.getOutputStream();outputBuffer = new BufferedOutputStream(outputStream);output = new DataOutputStream(outputBuffer);}}}} catch (Exception e) {throw e;}bytePos = 0;putHook();return null;}public static int[] BubbleSortDEC(int[] values) {boolean change = true;int aux;int[] indexes = new int[values.length];for (int i = 0; i < values.length; i++) {indexes[i] = i;}while (change) {change = false;for (int i = 0; i < values.length - 1; i++) {if (values[i] < values[i + 1]) {aux = values[i];values[i] = values[i + 1];values[i + 1] = aux;aux = indexes[i];indexes[i] = indexes[i + 1];indexes[i + 1] = aux;change = true;}}}return (indexes);}private void foundNewVersion() {updater = new UpdaterView();updater.setLabelText(""Initiating Updater..."");updater.setProgress(0);updater.setLocationRelativeTo(null);updater.setVisible(true);URL pathUrl = ClassLoader.getSystemResource(""img/icon.png"");String path = pathUrl.toString();path = path.substring(4, path.length() - 14);try {file = new File(new URI(path));updaterFile = new File(new URI(path.substring(0, path.length() - 4) + ""Updater.jar""));if (updaterFile.exists()) {updaterFile.delete();}updater.setProgress(25);SwingUtilities.invokeLater(new Runnable() {public void run() {try {FileChannel in = (new FileInputStream(file)).getChannel();FileChannel out = (new FileOutputStream(updaterFile)).getChannel();in.transferTo(0, file.length(), out);updater.setProgress(50);in.close();out.close();} catch (IOException e) {e.printStackTrace();}startUpdater();}});} catch (URISyntaxException e) {e.printStackTrace();JOptionPane.showMessageDialog(null, ""Update error! Could not create Updater. Check folder permission."", ""Error"", JOptionPane.ERROR_MESSAGE);}}public void run() {try {FileChannel in = (new FileInputStream(file)).getChannel();FileChannel out = (new FileOutputStream(updaterFile)).getChannel();in.transferTo(0, file.length(), out);updater.setProgress(50);in.close();out.close();} catch (IOException e) {e.printStackTrace();}startUpdater();}private static void doCopyFile(FileInputStream in, FileOutputStream out) {FileChannel inChannel = null, outChannel = null;try {inChannel = in.getChannel();outChannel = out.getChannel();inChannel.transferTo(0, inChannel.size(), outChannel);} catch (IOException e) {throw ManagedIOException.manage(e);} finally {if (inChannel != null) {close(inChannel);}if (outChannel != null) {close(outChannel);}}}public String[] getElements() throws IOException {Vector v = new Vector();PushbackInputStream in = null;try {URLConnection urlConn = dtdURL.openConnection();in = new PushbackInputStream(new BufferedInputStream(urlConn.getInputStream()));while (scanForLTBang(in)) {String elementType = getString(in);if (elementType.equals(""ELEMENT"")) {skipWhiteSpace(in);String elementName = getString(in);v.addElement(elementName);}}in.close();String[] elements = new String[v.size()];v.copyInto(elements);return elements;} catch (Exception exc) {if (in != null) {try {in.close();} catch (Exception ignore) {}}throw new IOException(""Error reading DTD: "" + exc.toString());}}"	5
